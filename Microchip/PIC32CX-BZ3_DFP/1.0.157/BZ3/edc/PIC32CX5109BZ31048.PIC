<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<edc:PIC xmlns:atdf="http://crownking/atdf" xmlns:edc="http://crownking/edc" xmlns:ltx="http://crownking/ltx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://crownking/edc edc/PIC.xsd" edc:name="PIC32CX5109BZ31048" edc:arch="arm32bit" edc:procid="0x0000" atdf:architecture="CORTEX-M4" atdf:family="PIC32CX" edc:hasFreeze="false" edc:masksetid="SG003">
  <edc:Properties>
    <edc:Property edc:propkey="file.registers.are.odd.address.accessible" edc:propvalue="true"/>
  </edc:Properties>
  <edc:Power edc:sharespowersupply="true">
    <edc:VDD edc:minvoltage="1.90" edc:maxvoltage="3.60" edc:nominalvoltage="3.300"/>
  </edc:Power>
  <edc:Programming edc:haslvp2="true">
    <edc:ProgrammingRowSize edc:progop="rowerase" edc:nzsize="4096" edc:addressablesize="4096"/>
  </edc:Programming>
  <edc:ArchDef edc:name="arm32bit" edc:desc="arm32bit">
    <edc:MemTraits edc:addrinc="0x1" edc:locsize="0x1" edc:wordimpl="0xFFFFFFFF" edc:wordinit="0xFFFFFFFF" edc:wordsafe="0xFFFFFFFF" edc:wordsize="0x4">
      <edc:ConfigFuseOTPMemTraits edc:addrinc="0x1" edc:locsize="0x1" edc:wordimpl="0xFF" edc:wordinit="0xFF" edc:wordsafe="0xFF" edc:wordsize="0x1"/>
    </edc:MemTraits>
  </edc:ArchDef>
  <edc:InstructionSet edc:instructionsetid="armv7m"/>
  <edc:InterruptList>
    <edc:Interrupt edc:irq="-15" edc:cname="Reset" edc:desc="Reset Vector, invoked on Power up and warm reset"/>
    <edc:Interrupt edc:irq="-14" edc:cname="NonMaskableInt" edc:desc="Non maskable Interrupt, cannot be stopped or preempted"/>
    <edc:Interrupt edc:irq="-13" edc:cname="HardFault" edc:desc="Hard Fault, all classes of Fault"/>
    <edc:Interrupt edc:irq="-12" edc:cname="MemoryManagement" edc:desc="Memory Management, MPU mismatch, including Access Violation and No Match"/>
    <edc:Interrupt edc:irq="-11" edc:cname="BusFault" edc:desc="Bus Fault, Pre-Fetch-, Memory Access Fault, other address/memory related Fault"/>
    <edc:Interrupt edc:irq="-10" edc:cname="UsageFault" edc:desc="Usage Fault, i.e. Undef Instruction, Illegal State Transition"/>
    <edc:Interrupt edc:irq="-5" edc:cname="SVCall" edc:desc="System Service Call via SVC instruction"/>
    <edc:Interrupt edc:irq="-4" edc:cname="DebugMonitor" edc:desc="Debug Monitor"/>
    <edc:Interrupt edc:irq="-2" edc:cname="PendSV" edc:desc="Pendable request for system service"/>
    <edc:Interrupt edc:irq="-1" edc:cname="SysTick" edc:desc="System Tick Timer"/>
    <edc:Interrupt edc:irq="0" edc:cname="RTC" edc:desc="Real Time Counter" ltx:memberofperipheral="RTC"/>
    <edc:Interrupt edc:irq="1" edc:cname="EIC" edc:desc="External Interrupt Controller" ltx:memberofperipheral="EIC"/>
    <edc:Interrupt edc:irq="2" edc:cname="FREQM" edc:desc="Frequency Meter" ltx:memberofperipheral="FREQM"/>
    <edc:Interrupt edc:irq="3" edc:cname="NVM" edc:desc="Non-Volatile Memory" ltx:memberofperipheral="NVM"/>
    <edc:Interrupt edc:irq="4" edc:cname="CHANGE_NOTICE_A" edc:desc="PORT_A_INPUT_CHANGE_INTERRUPT" ltx:memberofperipheral="GPIOA"/>
    <edc:Interrupt edc:irq="5" edc:cname="CHANGE_NOTICE_B" edc:desc="PORT_B_INPUT_CHANGE_INTERRUPT" ltx:memberofperipheral="GPIOB"/>
    <edc:Interrupt edc:irq="6" edc:cname="DMAC_0_3" edc:desc="DMA Channel 0..3" ltx:memberofperipheral="DMAC"/>
    <edc:Interrupt edc:irq="7" edc:cname="DMAC_4_15" edc:desc="DMA Channel 4..15" ltx:memberofperipheral="DMAC"/>
    <edc:Interrupt edc:irq="8" edc:cname="EVSYS_0_3" edc:desc="Event System Channel 0..3" ltx:memberofperipheral="EVSYS"/>
    <edc:Interrupt edc:irq="9" edc:cname="EVSYS_4_11" edc:desc="Event System Channel 4..11" ltx:memberofperipheral="EVSYS"/>
    <edc:Interrupt edc:irq="10" edc:cname="PAC" edc:desc="Peripheral Access Controller" ltx:memberofperipheral="PAC"/>
    <edc:Interrupt edc:irq="11" edc:cname="RAMECC" edc:desc="RAM Error Correction Code" ltx:memberofperipheral="RAMECC"/>
    <edc:Interrupt edc:irq="12" edc:cname="SERCOM0" edc:desc="Serial Communication Interface 0" ltx:memberofperipheral="SERCOM0"/>
    <edc:Interrupt edc:irq="13" edc:cname="SERCOM1" edc:desc="Serial Communication Interface 1" ltx:memberofperipheral="SERCOM1"/>
    <edc:Interrupt edc:irq="14" edc:cname="TCC0" edc:desc="Timer/Counter for Control Applications 0" ltx:memberofperipheral="TCC0"/>
    <edc:Interrupt edc:irq="15" edc:cname="TCC1" edc:desc="Timer/Counter for Control Applications 1" ltx:memberofperipheral="TCC1"/>
    <edc:Interrupt edc:irq="16" edc:cname="TCC2" edc:desc="Timer/Counter for Control Applications 2" ltx:memberofperipheral="TCC2"/>
    <edc:Interrupt edc:irq="17" edc:cname="TC0" edc:desc="Timer/Counter 0" ltx:memberofperipheral="TC0"/>
    <edc:Interrupt edc:irq="18" edc:cname="TC1" edc:desc="Timer/Counter 1" ltx:memberofperipheral="TC1"/>
    <edc:Interrupt edc:irq="19" edc:cname="TC2" edc:desc="Timer/Counter 2" ltx:memberofperipheral="TC2"/>
    <edc:Interrupt edc:irq="20" edc:cname="TC3" edc:desc="Timer/Counter 3" ltx:memberofperipheral="TC3"/>
    <edc:Interrupt edc:irq="21" edc:cname="TC4" edc:desc="Timer/Counter 4" ltx:memberofperipheral="TC4"/>
    <edc:Interrupt edc:irq="22" edc:cname="TC5" edc:desc="Timer/Counter 5" ltx:memberofperipheral="TC5"/>
    <edc:Interrupt edc:irq="23" edc:cname="TC6" edc:desc="Timer/Counter 6" ltx:memberofperipheral="TC6"/>
    <edc:Interrupt edc:irq="24" edc:cname="TC7" edc:desc="Timer/Counter 7" ltx:memberofperipheral="TC7"/>
    <edc:Interrupt edc:irq="25" edc:cname="ADCHS_IRQ" edc:desc="Analog-to-Digital Converter" ltx:memberofperipheral="ADCHS"/>
    <edc:Interrupt edc:irq="26" edc:cname="AC" edc:desc="Analog Comparators" ltx:memberofperipheral="AC"/>
    <edc:Interrupt edc:irq="27" edc:cname="SILEX_0" edc:desc="Crypto 0" ltx:memberofperipheral="SILEX"/>
    <edc:Interrupt edc:irq="28" edc:cname="SILEX_1" edc:desc="Crypto 1" ltx:memberofperipheral="SILEX"/>
    <edc:Interrupt edc:irq="29" edc:cname="QSPI" edc:desc="Quad SPI interface" ltx:memberofperipheral="QSPI"/>
    <edc:Interrupt edc:irq="30" edc:cname="ZB_INT0" edc:desc="ZIGBEE" ltx:memberofperipheral="ZIGBEE"/>
    <edc:Interrupt edc:irq="31" edc:cname="BT_INT0" edc:desc="Bluetooth 0" ltx:memberofperipheral="BLE"/>
    <edc:Interrupt edc:irq="32" edc:cname="BT_INT1" edc:desc="Bluetooth 1" ltx:memberofperipheral="BLE"/>
    <edc:Interrupt edc:irq="33" edc:cname="ARBITER" edc:desc="Radio Arbiter" ltx:memberofperipheral="ARB"/>
    <edc:Interrupt edc:irq="34" edc:cname="ADCHS_FAULT" edc:desc="ADC Fault Interrupt" ltx:memberofperipheral="ADCHS"/>
    <edc:Interrupt edc:irq="35" edc:cname="ADCHS_FCC" edc:desc="ADC FCC Interrupt" ltx:memberofperipheral="ADCHS"/>
    <edc:Interrupt edc:irq="36" edc:cname="ADCHS_BGVR_RDY" edc:desc="ADC BGVR Ready" ltx:memberofperipheral="ADCHS"/>
    <edc:Interrupt edc:irq="37" edc:cname="CLKI_WAKEUP_NMI" edc:desc="WSS WAKEUP" ltx:memberofperipheral="BLE"/>
    <edc:Interrupt edc:irq="38" edc:cname="CVD" edc:desc="CVD Interrpt" ltx:memberofperipheral="CVD"/>
    <edc:Interrupt edc:irq="39" edc:cname="DGI_SPI" edc:desc="DGI_SPI interrupt" ltx:memberofperipheral="DGI_SPI"/>
    <edc:Interrupt edc:irq="40" edc:cname="SERCOM2" edc:desc="Serial Communication Interface 2" ltx:memberofperipheral="SERCOM2"/>
    <edc:Interrupt edc:irq="42" edc:cname="BT_LC" edc:desc="Bluetooth LC" ltx:memberofperipheral="BLE"/>
  </edc:InterruptList>
  <edc:PeripheralList>
    <edc:Peripheral edc:cname="AC" edc:desc=""/>
    <edc:Peripheral edc:cname="ADCHS" edc:desc=""/>
    <edc:Peripheral edc:cname="ARB" edc:desc=""/>
    <edc:Peripheral edc:cname="BLE" edc:desc=""/>
    <edc:Peripheral edc:cname="BTZBSYS" edc:desc=""/>
    <edc:Peripheral edc:cname="CCL" edc:desc=""/>
    <edc:Peripheral edc:cname="CFG" edc:desc=""/>
    <edc:Peripheral edc:cname="CMCC" edc:desc=""/>
    <edc:Peripheral edc:cname="CRU" edc:desc=""/>
    <edc:Peripheral edc:cname="CVD" edc:desc=""/>
    <edc:Peripheral edc:cname="CoreDebug" edc:desc=""/>
    <edc:Peripheral edc:cname="DAC_CTRL" edc:desc=""/>
    <edc:Peripheral edc:cname="DGI_SPI" edc:desc=""/>
    <edc:Peripheral edc:cname="DMAC" edc:desc=""/>
    <edc:Peripheral edc:cname="DMT" edc:desc=""/>
    <edc:Peripheral edc:cname="DSCON" edc:desc=""/>
    <edc:Peripheral edc:cname="DSU" edc:desc=""/>
    <edc:Peripheral edc:cname="DWT" edc:desc=""/>
    <edc:Peripheral edc:cname="EIC" edc:desc=""/>
    <edc:Peripheral edc:cname="ETM" edc:desc=""/>
    <edc:Peripheral edc:cname="EVSYS" edc:desc=""/>
    <edc:Peripheral edc:cname="FPU" edc:desc=""/>
    <edc:Peripheral edc:cname="FREQM" edc:desc=""/>
    <edc:Peripheral edc:cname="FUSES" edc:desc=""/>
    <edc:Peripheral edc:cname="GPIOA" edc:desc=""/>
    <edc:Peripheral edc:cname="GPIOB" edc:desc=""/>
    <edc:Peripheral edc:cname="HMATRIX2TOP" edc:desc=""/>
    <edc:Peripheral edc:cname="ITM" edc:desc=""/>
    <edc:Peripheral edc:cname="MPU" edc:desc=""/>
    <edc:Peripheral edc:cname="NVIC" edc:desc=""/>
    <edc:Peripheral edc:cname="NVM" edc:desc=""/>
    <edc:Peripheral edc:cname="PAC" edc:desc=""/>
    <edc:Peripheral edc:cname="PCHE" edc:desc=""/>
    <edc:Peripheral edc:cname="PFW" edc:desc=""/>
    <edc:Peripheral edc:cname="PMU" edc:desc=""/>
    <edc:Peripheral edc:cname="PPS" edc:desc=""/>
    <edc:Peripheral edc:cname="QSPI" edc:desc=""/>
    <edc:Peripheral edc:cname="RAMECC" edc:desc=""/>
    <edc:Peripheral edc:cname="RCON" edc:desc=""/>
    <edc:Peripheral edc:cname="ROT" edc:desc=""/>
    <edc:Peripheral edc:cname="RTC" edc:desc=""/>
    <edc:Peripheral edc:cname="SERCOM0" edc:desc=""/>
    <edc:Peripheral edc:cname="SERCOM1" edc:desc=""/>
    <edc:Peripheral edc:cname="SERCOM2" edc:desc=""/>
    <edc:Peripheral edc:cname="SILEX" edc:desc=""/>
    <edc:Peripheral edc:cname="SysTick" edc:desc=""/>
    <edc:Peripheral edc:cname="SystemControl" edc:desc=""/>
    <edc:Peripheral edc:cname="TC0" edc:desc=""/>
    <edc:Peripheral edc:cname="TC1" edc:desc=""/>
    <edc:Peripheral edc:cname="TC2" edc:desc=""/>
    <edc:Peripheral edc:cname="TC3" edc:desc=""/>
    <edc:Peripheral edc:cname="TC4" edc:desc=""/>
    <edc:Peripheral edc:cname="TC5" edc:desc=""/>
    <edc:Peripheral edc:cname="TC6" edc:desc=""/>
    <edc:Peripheral edc:cname="TC7" edc:desc=""/>
    <edc:Peripheral edc:cname="TCC0" edc:desc=""/>
    <edc:Peripheral edc:cname="TCC1" edc:desc=""/>
    <edc:Peripheral edc:cname="TCC2" edc:desc=""/>
    <edc:Peripheral edc:cname="TPI" edc:desc=""/>
    <edc:Peripheral edc:cname="WDT" edc:desc=""/>
    <edc:Peripheral edc:cname="ZIGBEE" edc:desc=""/>
  </edc:PeripheralList>
  <edc:PhysicalSpace>
    <edc:NMMRPlace edc:regionid="corenmmrs">
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R0" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="0"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R1" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="4"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R2" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="8"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R3" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="12"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R4" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="16"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R5" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="20"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R6" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="24"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R7" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="28"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R8" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="32"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R9" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="36"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R10" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="40"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R11" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="44"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R12" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="48"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="SP" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="Stack Pointer" edc:nmmrid="52"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="MSP" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="Main Stack Pointer" edc:nmmrid="64"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="PSP" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="Process Stack Pointer" edc:nmmrid="68"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="LR" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="11111111111111111111111111111111" edc:mclr="11111111111111111111111111111111" edc:desc="Link Register" edc:nmmrid="56"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="PC" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="Program Counter" edc:nmmrid="60"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="PSR" edc:impl="0xFF00FDFF" edc:access="nnnnnnnn--------nnnnnn-nnnnnnnnn" edc:por="00000001000000000000000000000000" edc:mclr="00000001000000000000000000000000" edc:desc="Program Status Register" edc:nmmrid="72"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="APSR" edc:impl="0xF80F0000" edc:access="nnnnn-------nnnn----------------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Application Program Status Register" edc:nmmrid="76"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="IPSR" edc:impl="0x1FF" edc:access="-----------------------rrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Interrupt Program Status Register" edc:nmmrid="80"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="EPSR" edc:impl="0x700FC00" edc:access="-----rrr--------rrrrrr----------" edc:por="00000001000000000000000000000000" edc:mclr="00000001000000000000000000000000" edc:desc="Execution Program Status Register" edc:nmmrid="84"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="PRIMASK" edc:impl="0x1" edc:access="-------------------------------n" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Priority Mask Register" edc:nmmrid="88"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="FAULTMASK" edc:impl="0x1" edc:access="-------------------------------n" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Fault Mask Register" edc:nmmrid="92"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="BASEPRI" edc:impl="0xFF" edc:access="------------------------nnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Base Priority Mask Register" edc:nmmrid="96"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="CONTROL" edc:impl="0x7" edc:access="-----------------------------nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Control Register" edc:nmmrid="100"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="FPSCR" edc:impl="0xFFF79F9F" edc:access="nnnnnnnnnnnn-nnnn--nnnnnn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Status And Control Register" edc:nmmrid="144"/>
      <edc:JoinedSFRDef edc:nzwidth="0x40" edc:cname="D0" edc:impl="0xFFFFFFFFFFFFFFFF" edc:desc="Floating-Point Extension Register">
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S0" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="148"/>
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S1" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="152"/>
      </edc:JoinedSFRDef>
      <edc:JoinedSFRDef edc:nzwidth="0x40" edc:cname="D1" edc:impl="0xFFFFFFFFFFFFFFFF" edc:desc="Floating-Point Extension Register">
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S2" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="156"/>
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S3" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="160"/>
      </edc:JoinedSFRDef>
      <edc:JoinedSFRDef edc:nzwidth="0x40" edc:cname="D2" edc:impl="0xFFFFFFFFFFFFFFFF" edc:desc="Floating-Point Extension Register">
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S4" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="164"/>
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S5" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="168"/>
      </edc:JoinedSFRDef>
      <edc:JoinedSFRDef edc:nzwidth="0x40" edc:cname="D3" edc:impl="0xFFFFFFFFFFFFFFFF" edc:desc="Floating-Point Extension Register">
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S6" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="172"/>
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S7" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="176"/>
      </edc:JoinedSFRDef>
      <edc:JoinedSFRDef edc:nzwidth="0x40" edc:cname="D4" edc:impl="0xFFFFFFFFFFFFFFFF" edc:desc="Floating-Point Extension Register">
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S8" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="180"/>
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S9" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="184"/>
      </edc:JoinedSFRDef>
      <edc:JoinedSFRDef edc:nzwidth="0x40" edc:cname="D5" edc:impl="0xFFFFFFFFFFFFFFFF" edc:desc="Floating-Point Extension Register">
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S10" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="188"/>
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S11" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="192"/>
      </edc:JoinedSFRDef>
      <edc:JoinedSFRDef edc:nzwidth="0x40" edc:cname="D6" edc:impl="0xFFFFFFFFFFFFFFFF" edc:desc="Floating-Point Extension Register">
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S12" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="196"/>
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S13" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="200"/>
      </edc:JoinedSFRDef>
      <edc:JoinedSFRDef edc:nzwidth="0x40" edc:cname="D7" edc:impl="0xFFFFFFFFFFFFFFFF" edc:desc="Floating-Point Extension Register">
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S14" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="204"/>
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S15" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="208"/>
      </edc:JoinedSFRDef>
      <edc:JoinedSFRDef edc:nzwidth="0x40" edc:cname="D8" edc:impl="0xFFFFFFFFFFFFFFFF" edc:desc="Floating-Point Extension Register">
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S16" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="212"/>
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S17" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="216"/>
      </edc:JoinedSFRDef>
      <edc:JoinedSFRDef edc:nzwidth="0x40" edc:cname="D9" edc:impl="0xFFFFFFFFFFFFFFFF" edc:desc="Floating-Point Extension Register">
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S18" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="220"/>
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S19" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="224"/>
      </edc:JoinedSFRDef>
      <edc:JoinedSFRDef edc:nzwidth="0x40" edc:cname="D10" edc:impl="0xFFFFFFFFFFFFFFFF" edc:desc="Floating-Point Extension Register">
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S20" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="228"/>
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S21" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="232"/>
      </edc:JoinedSFRDef>
      <edc:JoinedSFRDef edc:nzwidth="0x40" edc:cname="D11" edc:impl="0xFFFFFFFFFFFFFFFF" edc:desc="Floating-Point Extension Register">
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S22" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="236"/>
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S23" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="240"/>
      </edc:JoinedSFRDef>
      <edc:JoinedSFRDef edc:nzwidth="0x40" edc:cname="D12" edc:impl="0xFFFFFFFFFFFFFFFF" edc:desc="Floating-Point Extension Register">
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S24" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="244"/>
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S25" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="248"/>
      </edc:JoinedSFRDef>
      <edc:JoinedSFRDef edc:nzwidth="0x40" edc:cname="D13" edc:impl="0xFFFFFFFFFFFFFFFF" edc:desc="Floating-Point Extension Register">
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S26" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="252"/>
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S27" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="256"/>
      </edc:JoinedSFRDef>
      <edc:JoinedSFRDef edc:nzwidth="0x40" edc:cname="D14" edc:impl="0xFFFFFFFFFFFFFFFF" edc:desc="Floating-Point Extension Register">
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S28" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="260"/>
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S29" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="264"/>
      </edc:JoinedSFRDef>
      <edc:JoinedSFRDef edc:nzwidth="0x40" edc:cname="D15" edc:impl="0xFFFFFFFFFFFFFFFF" edc:desc="Floating-Point Extension Register">
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S30" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="268"/>
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S31" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="272"/>
      </edc:JoinedSFRDef>
    </edc:NMMRPlace>
    <edc:BootConfigSector edc:regionid="ROM_SECURE_BOOT_ROM" edc:beginaddr="0x0" edc:endaddr="0x10000" edc:rw="r"/>
    <edc:BootConfigSector edc:regionid="ROM_SECURE_BOOT_PATCH" edc:beginaddr="0x18000" edc:endaddr="0x18800" edc:rw="r"/>
    <edc:CodeSector edc:regionid="FCR_PFM" edc:beginaddr="0x1000000" edc:endaddr="0x1080000" atdf:pagesize="0x1000" edc:rw="rw"/>
    <edc:BootConfigSector edc:regionid="FCR_BFM" edc:beginaddr="0x800000" edc:endaddr="0x805000" atdf:pagesize="0x1000" edc:rw="rw"/>
    <edc:ConfigFuseSector edc:regionid="fuses" edc:beginaddr="0x805E80" edc:endaddr="0x805FC0" atdf:pagesize="0x1000">
      <edc:DCRDef ltx:memberofperipheral="FUSES" edc:cname="ALTFBCFG7" edc:nzwidth="0x20" edc:impl="0xFFFFFFFF" edc:unused="0x0" edc:useinchecksum="0xFFFFFFFF" edc:factorydefault="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x805E80" edc:default="0xFFFFFFFF">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSES">
            <edc:DCRFieldDef edc:cname="ALTFBCFG7" edc:nzwidth="0x20" edc:desc="RESERVED"/>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
      <edc:DCRDef ltx:memberofperipheral="FUSES" edc:cname="ALTFBCFG6" edc:nzwidth="0x20" edc:impl="0xFFFFFFFF" edc:unused="0x0" edc:useinchecksum="0xFFFFFFFF" edc:factorydefault="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x805E84" edc:default="0xFFFFFFFF">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSES">
            <edc:DCRFieldDef edc:cname="ALTFBCFG6" edc:nzwidth="0x20" edc:desc="RESERVED"/>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
      <edc:DCRDef ltx:memberofperipheral="FUSES" edc:cname="ALTFUSERID" edc:nzwidth="0x20" edc:impl="0xFFFFFFFF" edc:unused="0x0" edc:useinchecksum="0xFFFFFFFF" edc:factorydefault="0x0000FFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x805E88" edc:default="0x0000FFFF">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSES">
            <edc:DCRFieldDef edc:cname="ALTFUSERID" edc:nzwidth="0x20" edc:desc="ALT USERID"/>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
      <edc:DCRDef ltx:memberofperipheral="FUSES" edc:cname="ALTDEVCFG4" edc:nzwidth="0x20" edc:impl="0xFFFFFFFF" edc:unused="0x0" edc:useinchecksum="0xFFFFFFFF" edc:factorydefault="0x840e4000" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x805E8C" edc:default="0x840e4000">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSES">
            <edc:DCRFieldDef edc:cname="ALTDEVCFG4" edc:nzwidth="0x20" edc:desc="ALT CFGCON4 Fuses"/>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
      <edc:DCRDef ltx:memberofperipheral="FUSES" edc:cname="ALTDEVCFG2" edc:nzwidth="0x20" edc:impl="0xFFFFFFFF" edc:unused="0x0" edc:useinchecksum="0xFFFFFFFF" edc:factorydefault="0x5f74ff38" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x805E90" edc:default="0x5f74ff38">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSES">
            <edc:DCRFieldDef edc:cname="ALTDEVCFG2" edc:nzwidth="0x20" edc:desc="ALT CFGCON2 Fuses"/>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
      <edc:DCRDef ltx:memberofperipheral="FUSES" edc:cname="ALTDEVCFG1" edc:nzwidth="0x20" edc:impl="0xFFFFFFFF" edc:unused="0x0" edc:useinchecksum="0xFFFFFFFF" edc:factorydefault="0x1410443b" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x805E94" edc:default="0x1410443b">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSES">
            <edc:DCRFieldDef edc:cname="ALTDEVCFG1" edc:nzwidth="0x20" edc:desc="ALT CFGCON1 Fuses"/>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
      <edc:DCRDef ltx:memberofperipheral="FUSES" edc:cname="ALTDEVCFG0" edc:nzwidth="0x20" edc:impl="0xFFFFFFFF" edc:unused="0x0" edc:useinchecksum="0xFFFFFFFF" edc:factorydefault="0x7100000b" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x805E98" edc:default="0x7100000b">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSES">
            <edc:DCRFieldDef edc:cname="ALTDEVCFG0" edc:nzwidth="0x20" edc:desc="ALT CFGCON0 Fuses"/>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
      <edc:DCRDef ltx:memberofperipheral="FUSES" edc:cname="ALTFBCFG0" edc:nzwidth="0x20" edc:impl="0xFFFFFFFF" edc:unused="0x0" edc:useinchecksum="0xFFFFFFFF" edc:factorydefault="0x80000002" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x805E9C" edc:default="0x80000002">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSES">
            <edc:DCRFieldDef edc:cname="ALTFBCFG0" edc:nzwidth="0x20" edc:desc="ALT NVR BCFG0"/>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
      <edc:AdjustPoint edc:unimplval="0x0" edc:offset="0x10" edc:_addr="0x805EA0"/>
      <edc:DCRDef ltx:memberofperipheral="FUSES" edc:cname="ALTFCPN3" edc:nzwidth="0x20" edc:impl="0xFFFFFFFF" edc:unused="0x0" edc:useinchecksum="0xFFFFFFFF" edc:factorydefault="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x805EB0" edc:default="0xFFFFFFFF">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSES">
            <edc:DCRFieldDef edc:cname="ALTFCPN3" edc:nzwidth="0x20" edc:desc="RESERVED"/>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
      <edc:DCRDef ltx:memberofperipheral="FUSES" edc:cname="ALTFCPN2" edc:nzwidth="0x20" edc:impl="0xFFFFFFFF" edc:unused="0x0" edc:useinchecksum="0xFFFFFFFF" edc:factorydefault="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x805EB4" edc:default="0xFFFFFFFF">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSES">
            <edc:DCRFieldDef edc:cname="ALTFCPN2" edc:nzwidth="0x20" edc:desc="RESERVED"/>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
      <edc:DCRDef ltx:memberofperipheral="FUSES" edc:cname="ALTFCPN1" edc:nzwidth="0x20" edc:impl="0xFFFFFFFF" edc:unused="0x0" edc:useinchecksum="0xFFFFFFFF" edc:factorydefault="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x805EB8" edc:default="0xFFFFFFFF">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSES">
            <edc:DCRFieldDef edc:cname="ALTFCPN1" edc:nzwidth="0x20" edc:desc="RESERVED"/>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
      <edc:DCRDef ltx:memberofperipheral="FUSES" edc:cname="ALTFCPN0" edc:nzwidth="0x20" edc:impl="0xFFFFFFFF" edc:unused="0x0" edc:useinchecksum="0xFFFFFFFF" edc:factorydefault="0x10000000" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x805EBC" edc:default="0x10000000">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSES">
            <edc:DCRFieldDef edc:cname="ALTFCPN0" edc:nzwidth="0x20" edc:desc="ALT NVR CPN Register"/>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
      <edc:AdjustPoint edc:unimplval="0x0" edc:offset="0xC0" edc:_addr="0x805EC0"/>
      <edc:DCRDef ltx:memberofperipheral="FUSES" edc:cname="FBCFG7" edc:nzwidth="0x20" edc:impl="0xFFFFFFFF" edc:unused="0x0" edc:useinchecksum="0xFFFFFFFF" edc:factorydefault="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x805F80" edc:default="0xFFFFFFFF">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSES">
            <edc:DCRFieldDef edc:cname="FBCFG7" edc:nzwidth="0x20" edc:desc="RESERVED"/>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
      <edc:DCRDef ltx:memberofperipheral="FUSES" edc:cname="FBCFG6" edc:nzwidth="0x20" edc:impl="0xFFFFFFFF" edc:unused="0x0" edc:useinchecksum="0xFFFFFFFF" edc:factorydefault="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x805F84" edc:default="0xFFFFFFFF">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSES">
            <edc:DCRFieldDef edc:cname="FBCFG6" edc:nzwidth="0x20" edc:desc="RESERVED"/>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
      <edc:DCRDef ltx:memberofperipheral="FUSES" edc:cname="FUSERID" edc:nzwidth="0x20" edc:impl="0xFFFF" edc:unused="0x0" edc:useinchecksum="0xFFFFFFFF" edc:factorydefault="0x0000FFFF" edc:access="----------------nnnnnnnnnnnnnnnn" edc:_addr="0x805F88" edc:default="0x0000FFFF">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSES">
            <edc:DCRFieldDef edc:cname="USER_ID" edc:nzwidth="0x10" edc:desc="User unique ID, readable using the SWD USER_ID instruction"/>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
      <edc:DCRDef ltx:memberofperipheral="FUSES" edc:cname="DEVCFG4" edc:nzwidth="0x20" edc:impl="0xFFFFFFFF" edc:unused="0x0" edc:useinchecksum="0xFFFFFFFF" edc:factorydefault="0x840e4000" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x805F8C" edc:default="0x840e4000">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSES">
            <edc:DCRFieldDef edc:cname="SOSCCFG" edc:nzwidth="0x8" edc:desc="SOSC Configuration"/>
            <edc:DCRFieldDef edc:cname="RTCEVENT_SEL" edc:nzwidth="0x2" edc:desc="RTC Event Selection">
              <edc:DCRFieldSemantic edc:cname="ONE_SEC" edc:desc="1-Second Clock" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="ALARM_PULSE" edc:desc="Alarm Pulse" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="_32_KHZ" edc:desc="32 kHz Clock" edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="RTCEVENT_EN" edc:nzwidth="0x1" edc:desc="Pad Output Enable for MCHP legacy RTC event output">
              <edc:DCRFieldSemantic edc:cname="ON" edc:desc="Enable RTC Event" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="OFF" edc:desc="Disable RTC Event" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="VBKP_1KCSEL" edc:nzwidth="0x1" edc:desc="VDDBUKPCORE LPCLK Clock Selection">
              <edc:DCRFieldSemantic edc:cname="_1K" edc:desc="Divide by 32 or 31.25 clock depending on VBKP_DIVSEL" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="_32K" edc:desc="32kHz low power clock" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="VBKP_32KCSEL" edc:nzwidth="0x2" edc:desc="VDDBUKPCORE 32kHz clock source selection">
              <edc:DCRFieldSemantic edc:cname="FRC" edc:desc="FRC" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="POSC" edc:desc="POSC" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="SOSC" edc:desc="SOSC" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:DCRFieldSemantic edc:cname="LPRC" edc:desc="LPRC" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="VBKP_DIVSEL" edc:nzwidth="0x1" edc:desc="VDDBUKPCORE LPCLK Clock Divider Selection">
              <edc:DCRFieldSemantic edc:cname="DIV_31_25" edc:desc="Divide by 31.25 (Recommended when LPCLK=32kHz)" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="DIV_32" edc:desc="Divide-by 32 (Recommended when LPCLK=32.768kHz))" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="LPCLK_MOD" edc:nzwidth="0x1" edc:desc="LPCLK modifier in counter/delay mode">
              <edc:DCRFieldSemantic edc:cname="DIV_1" edc:desc="Divide-by 1 (Recommended when LPCLK=32kHz)" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="DIV_1_024" edc:desc="Divide-by 1.024 (Recommended when LPCLK=32.768kHz)" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="RTCEVTYPE" edc:nzwidth="0x1" edc:desc="RTC Event Type">
              <edc:DCRFieldSemantic edc:cname="EVENT" edc:desc="RTC_EVENT" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="OUT" edc:desc="RTC_OUT" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="CPEN_DLY" edc:nzwidth="0x3" edc:desc="Charge-pump ready digital delay">
              <edc:DCRFieldSemantic edc:cname="_1_LPRC" edc:desc="1 LPRC Clock Cycle Delay" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="_2_LPRC" edc:desc="2 LPRC Clock Cycle Delay" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="_3_LPRC" edc:desc="3 LPRC Clock Cycle Delay" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:DCRFieldSemantic edc:cname="_4_LPRC" edc:desc="4 LPRC Clock Cycle Delay" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:DCRFieldSemantic edc:cname="_5_LPRC" edc:desc="5 LPRC Clock Cycle Delay" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:DCRFieldSemantic edc:cname="_6_LPRC" edc:desc="6 LPRC Clock Cycle Delay" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:DCRFieldSemantic edc:cname="_7_LPRC" edc:desc="7 LPRC Clock Cycle Delay" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:DCRFieldSemantic edc:cname="_8_LPRC" edc:desc="8 LPRC Clock Cycle Delay" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="DSZPBOREN" edc:nzwidth="0x1" edc:desc="Deep Sleep Zero-Power BOR Enable">
              <edc:DCRFieldSemantic edc:cname="ON" edc:desc="Enabled" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="OFF" edc:desc="Disabled" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="DSWDTPS" edc:nzwidth="0x5" edc:desc="Deep Sleep Watchdog Timer Postscale Select">
              <edc:DCRFieldSemantic edc:cname="DSPS5" edc:desc="1:32(1ms)" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="DSPS6" edc:desc="1:64(2.1ms)" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="DSPS7" edc:desc="1:128(4.1ms)" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:DCRFieldSemantic edc:cname="DSPS8" edc:desc="1:256(8.3ms)" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:DCRFieldSemantic edc:cname="DSPS9" edc:desc="1:512(16.5ms)" edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:DCRFieldSemantic edc:cname="DSPS10" edc:desc="1:1024(33ms)" edc:when="(field &amp; 0x1F) == 0x05"/>
              <edc:DCRFieldSemantic edc:cname="DSPS11" edc:desc="1:2048(66.1ms)" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:DCRFieldSemantic edc:cname="DSPS12" edc:desc="1:4096(132.1ms)" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:DCRFieldSemantic edc:cname="DSPS13" edc:desc="1:8192(264.3ms)" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:DCRFieldSemantic edc:cname="DSPS14" edc:desc="1:16384(528.5ms)" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:DCRFieldSemantic edc:cname="DSPS15" edc:desc="1:32768(1.057s)" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:DCRFieldSemantic edc:cname="DSPS16" edc:desc="1:65536(2.114s)" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:DCRFieldSemantic edc:cname="DSPS17" edc:desc="1:2^17(4.288s)" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:DCRFieldSemantic edc:cname="DSPS18" edc:desc="1:2^18(8.456s)" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:DCRFieldSemantic edc:cname="DSPS19" edc:desc="1:2^19(16.912s)" edc:when="(field &amp; 0x1F) == 0x0E"/>
              <edc:DCRFieldSemantic edc:cname="DSPS20" edc:desc="1:2^20(33.825s)" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:DCRFieldSemantic edc:cname="DSPS21" edc:desc="1:2^21(67.7s)" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:DCRFieldSemantic edc:cname="DSPS22" edc:desc="1:2^22(135.3s)" edc:when="(field &amp; 0x1F) == 0x11"/>
              <edc:DCRFieldSemantic edc:cname="DSPS23" edc:desc="1:2^23(4.5 minutes)" edc:when="(field &amp; 0x1F) == 0x12"/>
              <edc:DCRFieldSemantic edc:cname="DSPS24" edc:desc="1:2^24(9.0 minutes)" edc:when="(field &amp; 0x1F) == 0x13"/>
              <edc:DCRFieldSemantic edc:cname="DSPS25" edc:desc="1:2^25(18.0 minutes)" edc:when="(field &amp; 0x1F) == 0x14"/>
              <edc:DCRFieldSemantic edc:cname="DSPS26" edc:desc="1:2^26(36.1 minutes)" edc:when="(field &amp; 0x1F) == 0x15"/>
              <edc:DCRFieldSemantic edc:cname="DSPS27" edc:desc="1:2^27(72.2 minutes)" edc:when="(field &amp; 0x1F) == 0x16"/>
              <edc:DCRFieldSemantic edc:cname="DSPS28" edc:desc="1:2^28(2.4 hours)" edc:when="(field &amp; 0x1F) == 0x17"/>
              <edc:DCRFieldSemantic edc:cname="DSPS29" edc:desc="1:2^29(4.8 hours)" edc:when="(field &amp; 0x1F) == 0x18"/>
              <edc:DCRFieldSemantic edc:cname="DSPS30" edc:desc="1:2^30(9.6 hours)" edc:when="(field &amp; 0x1F) == 0x19"/>
              <edc:DCRFieldSemantic edc:cname="DSPS31" edc:desc="1:2^31(19.2 hours)" edc:when="(field &amp; 0x1F) == 0x1A"/>
              <edc:DCRFieldSemantic edc:cname="DSPS32" edc:desc="1:2^32(38.5 hours)" edc:when="(field &amp; 0x1F) == 0x1B"/>
              <edc:DCRFieldSemantic edc:cname="DSPS33" edc:desc="1:2^33(77.0 hours)" edc:when="(field &amp; 0x1F) == 0x1C"/>
              <edc:DCRFieldSemantic edc:cname="DSPS34" edc:desc="1:2^34(6.4 days)" edc:when="(field &amp; 0x1F) == 0x1D"/>
              <edc:DCRFieldSemantic edc:cname="DSPS35" edc:desc="1:2^35(12.8 days)" edc:when="(field &amp; 0x1F) == 0x1E"/>
              <edc:DCRFieldSemantic edc:cname="DSPS36" edc:desc="1:2^36(25.7 days)" edc:when="(field &amp; 0x1F) == 0x1F"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="DSWDTOSC" edc:nzwidth="0x1" edc:desc="Deep Sleep Watchdog Timer Reference Clock Select">
              <edc:DCRFieldSemantic edc:cname="SOSC" edc:desc="Select SOSC as DSWDT Reference Clock" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="LPRC" edc:desc="Select LPRC as DSWDT Reference Clock" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="DSWDTEN" edc:nzwidth="0x1" edc:desc="Deep Sleep Watchdog Timer Enable">
              <edc:DCRFieldSemantic edc:cname="ON" edc:desc="Enabled" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="OFF" edc:desc="Disabled" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="DSEN" edc:nzwidth="0x1" edc:desc="Deep Sleep Bit Enable">
              <edc:DCRFieldSemantic edc:cname="ON" edc:desc="Enable DS Bit in DSCON" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="OFF" edc:desc="Disable DS Bit in DSCON" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="UVREGROVR" edc:nzwidth="0x1" edc:desc="ULPVREG Retention Mode Override">
              <edc:DCRFieldSemantic edc:cname="FORCED" edc:desc="ULPVREG forced in retention mode" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="CONTROLLED" edc:desc="ULPVREG controlled by XDS/DS FSM" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="LPOSCEN" edc:nzwidth="0x1" edc:desc="Low Power (Secondary) Oscillator Enable">
              <edc:DCRFieldSemantic edc:cname="ON" edc:desc="Enabled" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="OFF" edc:desc="Disable" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="RTCNTM_CSEL" edc:nzwidth="0x1" edc:desc="RTC Counter Mode Clock Select">
              <edc:DCRFieldSemantic edc:cname="RAW" edc:desc="Raw 32kHz clock" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="PROCESSED" edc:desc="Processed 32kHz clock" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:DCRFieldDef>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
      <edc:DCRDef ltx:memberofperipheral="FUSES" edc:cname="DEVCFG2" edc:nzwidth="0x20" edc:impl="0xFFFFFFBF" edc:unused="0x0" edc:useinchecksum="0xFFFFFFFF" edc:factorydefault="0x5f74ff38" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnn-nnnnnn" edc:_addr="0x805F90" edc:default="0x5f74ff38">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSES">
            <edc:DCRFieldDef edc:cname="ACMP_CYCLE" edc:nzwidth="0x3" edc:desc="AC Comparator Result Wait Cycles">
              <edc:DCRFieldSemantic edc:cname="_32US" edc:desc="32us" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="_64US" edc:desc="64us" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="_96US" edc:desc="96us" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:DCRFieldSemantic edc:cname="_128US" edc:desc="128us" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:DCRFieldSemantic edc:cname="_160US" edc:desc="160us" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:DCRFieldSemantic edc:cname="_196US" edc:desc="196us" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:DCRFieldSemantic edc:cname="_224US" edc:desc="224us" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:DCRFieldSemantic edc:cname="_256US" edc:desc="256us" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="DMTINTV" edc:nzwidth="0x3" edc:desc="Dead Man Timer Count Window Interval">
              <edc:DCRFieldSemantic edc:cname="WIN_0" edc:desc="Window/Interval value is zero" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="WIN_1_2" edc:desc="Window/Interval value is 1/2 counter value" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="WIN_3_4" edc:desc="Window/Interval value is 3/4 counter value" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:DCRFieldSemantic edc:cname="WIN_7_8" edc:desc="Window/Interval value is 7/8 counter value" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:DCRFieldSemantic edc:cname="WIN_15_16" edc:desc="Window/Interval value is 15/16 counter value" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:DCRFieldSemantic edc:cname="WIN_31_32" edc:desc="Window/Interval value is 31/32 counter value" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:DCRFieldSemantic edc:cname="WIN_63_64" edc:desc="Window/Interval value is 63/64 counter value" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:DCRFieldSemantic edc:cname="WIN_127_128" edc:desc="Window/Interval value is 127/128 counter value" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:DCRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:DCRFieldDef edc:cname="PMUTEST_VDD_EN" edc:nzwidth="0x1" edc:desc="PMU Test Output or VDD/2 Enable via ADC IE12">
              <edc:DCRFieldSemantic edc:cname="PMU" edc:desc="PMU Test Output Monitor" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="VDD_DIV_2" edc:desc="VDD_div_2 Monitor" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="POSCMOD" edc:nzwidth="0x2" edc:desc="Primary Oscillator Configuration">
              <edc:DCRFieldSemantic edc:cname="OFF" edc:desc="" edc:when="(field &amp; 0x3) == 0x03"/>
              <edc:DCRFieldSemantic edc:cname="HS" edc:desc="" edc:when="(field &amp; 0x3) == 0x00"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="WDTRMCS" edc:nzwidth="0x2" edc:desc="WDT RUN Mode Clock Select">
              <edc:DCRFieldSemantic edc:cname="LPRC" edc:desc="LPRC" edc:when="(field &amp; 0x3) == 0x03"/>
              <edc:DCRFieldSemantic edc:cname="SYSCLK" edc:desc="SYSCLK" edc:when="(field &amp; 0x3) == 0x00"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="SOSCSEL" edc:nzwidth="0x1" edc:desc="SOSC Selection Configuration">
              <edc:DCRFieldSemantic edc:cname="XTAL" edc:desc="" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="SCLKI" edc:desc="" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="WAKE2SPD" edc:nzwidth="0x1" edc:desc="2-Speed startup enabled in Sleep mode">
              <edc:DCRFieldSemantic edc:cname="ON" edc:desc="" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="OFF" edc:desc="" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="CKSWEN" edc:nzwidth="0x1" edc:desc="Software Clock Switching Enable">
              <edc:DCRFieldSemantic edc:cname="ON" edc:desc="" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="OFF" edc:desc="" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="FSCMEN" edc:nzwidth="0x1" edc:desc="Fail-Safe Clock Monitor Enable">
              <edc:DCRFieldSemantic edc:cname="ON" edc:desc="" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="OFF" edc:desc="" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="WDTPSR" edc:nzwidth="0x5" edc:desc="Watchdog Timer Post-scale Select Run">
              <edc:DCRFieldSemantic edc:cname="PS1" edc:desc="1:1" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="PS2" edc:desc="1:2" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="PS4" edc:desc="1:4" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:DCRFieldSemantic edc:cname="PS8" edc:desc="1:8" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:DCRFieldSemantic edc:cname="PS16" edc:desc="1:16" edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:DCRFieldSemantic edc:cname="PS32" edc:desc="1:32" edc:when="(field &amp; 0x1F) == 0x05"/>
              <edc:DCRFieldSemantic edc:cname="PS64" edc:desc="1:64" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:DCRFieldSemantic edc:cname="PS128" edc:desc="1:128" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:DCRFieldSemantic edc:cname="PS256" edc:desc="1:256" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:DCRFieldSemantic edc:cname="PS512" edc:desc="1:512" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:DCRFieldSemantic edc:cname="PS1024" edc:desc="1:1024" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:DCRFieldSemantic edc:cname="PS2048" edc:desc="1:2048" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:DCRFieldSemantic edc:cname="PS4096" edc:desc="1:4096" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:DCRFieldSemantic edc:cname="PS8192" edc:desc="1:8192" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:DCRFieldSemantic edc:cname="PS16384" edc:desc="1:16384" edc:when="(field &amp; 0x1F) == 0x0E"/>
              <edc:DCRFieldSemantic edc:cname="PS32768" edc:desc="1:32768" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:DCRFieldSemantic edc:cname="PS65536" edc:desc="1:65536" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:DCRFieldSemantic edc:cname="PS131072" edc:desc="1:131072" edc:when="(field &amp; 0x1F) == 0x11"/>
              <edc:DCRFieldSemantic edc:cname="PS262144" edc:desc="1:262144" edc:when="(field &amp; 0x1F) == 0x12"/>
              <edc:DCRFieldSemantic edc:cname="PS524288" edc:desc="1:524288" edc:when="(field &amp; 0x1F) == 0x13"/>
              <edc:DCRFieldSemantic edc:cname="PS1048576" edc:desc="1:1048576" edc:when="(field &amp; 0x1F) == 0x14"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="WDTSPGM" edc:nzwidth="0x1" edc:desc="Watchdog Timer Stop during Flash Programming">
              <edc:DCRFieldSemantic edc:cname="STOPS" edc:desc="" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="RUNS" edc:desc="" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="WINDIS" edc:nzwidth="0x1" edc:desc="Windowed Watchdog Timer Disable">
              <edc:DCRFieldSemantic edc:cname="NORMAL" edc:desc="" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="WINDOW" edc:desc="" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="WDTEN" edc:nzwidth="0x1" edc:desc="Watchdog Timer Enable">
              <edc:DCRFieldSemantic edc:cname="ON" edc:desc="" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="OFF" edc:desc="" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="WDTWINSZ" edc:nzwidth="0x2" edc:desc="Watchdog Timer Window Size">
              <edc:DCRFieldSemantic edc:cname="WINSZ_25" edc:desc="Window size is 25%" edc:when="(field &amp; 0x3) == 0x03"/>
              <edc:DCRFieldSemantic edc:cname="WINSZ_37" edc:desc="Window size is 37.5%" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:DCRFieldSemantic edc:cname="WINSZ_50" edc:desc="Window size is 50%" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="WINSZ_75" edc:desc="Window size is 75%" edc:when="(field &amp; 0x3) == 0x00"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="DMTCNT" edc:nzwidth="0x5" edc:desc="Dead Man Timer Count Select">
              <edc:DCRFieldSemantic edc:cname="DMT8" edc:desc="2^8 (256)" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="DMT9" edc:desc="2^9 (512)" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="DMT10" edc:desc="2^10 (1024)" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:DCRFieldSemantic edc:cname="DMT11" edc:desc="2^11 (2048)" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:DCRFieldSemantic edc:cname="DMT12" edc:desc="2^12 (4096)" edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:DCRFieldSemantic edc:cname="DMT13" edc:desc="2^13 (8192)" edc:when="(field &amp; 0x1F) == 0x05"/>
              <edc:DCRFieldSemantic edc:cname="DMT14" edc:desc="2^14 (16384)" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:DCRFieldSemantic edc:cname="DMT15" edc:desc="2^15 (32768)" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:DCRFieldSemantic edc:cname="DMT16" edc:desc="2^16 (65536)" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:DCRFieldSemantic edc:cname="DMT17" edc:desc="2^17 (131072)" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:DCRFieldSemantic edc:cname="DMT18" edc:desc="2^18 (262144)" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:DCRFieldSemantic edc:cname="DMT19" edc:desc="2^19 (524288)" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:DCRFieldSemantic edc:cname="DMT20" edc:desc="2^20 (1048576)" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:DCRFieldSemantic edc:cname="DMT21" edc:desc="2^21 (2097152)" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:DCRFieldSemantic edc:cname="DMT22" edc:desc="2^22 (4194304)" edc:when="(field &amp; 0x1F) == 0x0E"/>
              <edc:DCRFieldSemantic edc:cname="DMT23" edc:desc="2^23 (8388608)" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:DCRFieldSemantic edc:cname="DMT24" edc:desc="2^24 (16777216)" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:DCRFieldSemantic edc:cname="DMT25" edc:desc="2^25 (33554432)" edc:when="(field &amp; 0x1F) == 0x11"/>
              <edc:DCRFieldSemantic edc:cname="DMT26" edc:desc="2^26 (67108864)" edc:when="(field &amp; 0x1F) == 0x12"/>
              <edc:DCRFieldSemantic edc:cname="DMT27" edc:desc="2^27 (134217728)" edc:when="(field &amp; 0x1F) == 0x13"/>
              <edc:DCRFieldSemantic edc:cname="DMT28" edc:desc="2^28 (268435456)" edc:when="(field &amp; 0x1F) == 0x14"/>
              <edc:DCRFieldSemantic edc:cname="DMT29" edc:desc="2^29 (536870912)" edc:when="(field &amp; 0x1F) == 0x15"/>
              <edc:DCRFieldSemantic edc:cname="DMT30" edc:desc="2^30 (1073741824)" edc:when="(field &amp; 0x1F) == 0x16"/>
              <edc:DCRFieldSemantic edc:cname="DMT31" edc:desc="2^31 (2147483648)" edc:when="(field &amp; 0x1F) == 0x17"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="DMTEN" edc:nzwidth="0x1" edc:desc="Dead Man Timer Enable">
              <edc:DCRFieldSemantic edc:cname="ON" edc:desc="" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="OFF" edc:desc="" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:DCRFieldDef>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
      <edc:DCRDef ltx:memberofperipheral="FUSES" edc:cname="DEVCFG1" edc:nzwidth="0x20" edc:impl="0x7FF7FBE0" edc:unused="0x0" edc:useinchecksum="0xFFFFFFFF" edc:factorydefault="0x1410443b" edc:access="-nnnnnnnnnnn-nnnnnnnn-nnnnn-----" edc:_addr="0x805F94" edc:default="0x1410443b">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSES">
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:DCRFieldDef edc:cname="TRCEN" edc:nzwidth="0x1" edc:desc="Trace Enable">
              <edc:DCRFieldSemantic edc:cname="OFF" edc:desc="" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="ON" edc:desc="" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="ECC_SEL_MEM" edc:nzwidth="0x1" edc:desc="ECC row selection bit">
              <edc:DCRFieldSemantic edc:cname="ROWA" edc:desc="" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="ROWB" edc:desc="" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="ZBTWKSYS" edc:nzwidth="0x1" edc:desc="ZBT Subsystem External Wake-up source">
              <edc:DCRFieldSemantic edc:cname="OFF" edc:desc="" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="ON" edc:desc="" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="CMP0_OE" edc:nzwidth="0x1" edc:desc="Analog Comparator-0 Output Enable">
              <edc:DCRFieldSemantic edc:cname="OFF" edc:desc="" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="ON" edc:desc="" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="CMP1_OE" edc:nzwidth="0x1" edc:desc="Analog Comparator-1 Output Enable">
              <edc:DCRFieldSemantic edc:cname="OFF" edc:desc="" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="ON" edc:desc="" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:DCRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:DCRFieldDef edc:cname="SLRCTRL0" edc:nzwidth="0x1" edc:desc="I2C Slew Rate Control for SERCOM0">
              <edc:DCRFieldSemantic edc:cname="GPIO" edc:desc="" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="SERCOM" edc:desc="" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="SLRCTRL1" edc:nzwidth="0x1" edc:desc="I2C Slew Rate Control for SERCOM1">
              <edc:DCRFieldSemantic edc:cname="GPIO" edc:desc="" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="SERCOM" edc:desc="" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="SLRCTRL2" edc:nzwidth="0x1" edc:desc="I2C Slew Rate Control for SERCOM2">
              <edc:DCRFieldSemantic edc:cname="GPIO" edc:desc="" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="SERCOM" edc:desc="" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="SMCLR" edc:nzwidth="0x1" edc:desc="Selects CRU handling of MCLR Control">
              <edc:DCRFieldSemantic edc:cname="NO_POR" edc:desc="" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="FAUX_POR" edc:desc="" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="QSCHE_EN" edc:nzwidth="0x1" edc:desc="QSPI Address Space Cache Attribute">
              <edc:DCRFieldSemantic edc:cname="OFF" edc:desc="" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="ON" edc:desc="" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="QSPI_HSEN" edc:nzwidth="0x1" edc:desc="QSPI Direct (High Speed) Pin Enable">
              <edc:DCRFieldSemantic edc:cname="PPS" edc:desc="" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="DIRECT" edc:desc="" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="SCOM0_HSEN" edc:nzwidth="0x1" edc:desc="SERCOM0 Direct (High Speed) Pin Enable">
              <edc:DCRFieldSemantic edc:cname="PPS" edc:desc="" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="DIRECT" edc:desc="" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="SCOM1_HSEN" edc:nzwidth="0x1" edc:desc="SERCOM1 Direct (High Speed) Pin Enable">
              <edc:DCRFieldSemantic edc:cname="PPS" edc:desc="" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="DIRECT" edc:desc="" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:DCRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:DCRFieldDef edc:cname="CCL_OE" edc:nzwidth="0x1" edc:desc="CCL Pads (via PPS) Output Enable">
              <edc:DCRFieldSemantic edc:cname="OFF" edc:desc="" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="ON" edc:desc="" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="I2CDSEL0" edc:nzwidth="0x1" edc:desc="I2C Delay Select for SERCOM0">
              <edc:DCRFieldSemantic edc:cname="OFF" edc:desc="" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="ON" edc:desc="" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="I2CDSEL1" edc:nzwidth="0x1" edc:desc="I2C Delay Select for SERCOM1">
              <edc:DCRFieldSemantic edc:cname="OFF" edc:desc="" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="ON" edc:desc="" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="I2CDSEL2" edc:nzwidth="0x1" edc:desc="I2C Delay Select for SERCOM2">
              <edc:DCRFieldSemantic edc:cname="OFF" edc:desc="" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="ON" edc:desc="" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="WDTPSS" edc:nzwidth="0x5" edc:desc="Watchdog Timer Post-scale Select Sleep">
              <edc:DCRFieldSemantic edc:cname="PSS1" edc:desc="1:1" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="PSS2" edc:desc="1:2" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="PSS4" edc:desc="1:4" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:DCRFieldSemantic edc:cname="PSS8" edc:desc="1:8" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:DCRFieldSemantic edc:cname="PSS16" edc:desc="1:16" edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:DCRFieldSemantic edc:cname="PSS32" edc:desc="1:32" edc:when="(field &amp; 0x1F) == 0x05"/>
              <edc:DCRFieldSemantic edc:cname="PSS64" edc:desc="1:64" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:DCRFieldSemantic edc:cname="PSS128" edc:desc="1:128" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:DCRFieldSemantic edc:cname="PSS256" edc:desc="1:256" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:DCRFieldSemantic edc:cname="PSS512" edc:desc="1:512" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:DCRFieldSemantic edc:cname="PSS1024" edc:desc="1:1024" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:DCRFieldSemantic edc:cname="PSS2048" edc:desc="1:2048" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:DCRFieldSemantic edc:cname="PSS4096" edc:desc="1:4096" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:DCRFieldSemantic edc:cname="PSS8192" edc:desc="1:8192" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:DCRFieldSemantic edc:cname="PSS16384" edc:desc="1:16384" edc:when="(field &amp; 0x1F) == 0x0E"/>
              <edc:DCRFieldSemantic edc:cname="PSS32768" edc:desc="1:32768" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:DCRFieldSemantic edc:cname="PSS65536" edc:desc="1:65536" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:DCRFieldSemantic edc:cname="PSS131072" edc:desc="1:131072" edc:when="(field &amp; 0x1F) == 0x11"/>
              <edc:DCRFieldSemantic edc:cname="PSS262144" edc:desc="1:262144" edc:when="(field &amp; 0x1F) == 0x12"/>
              <edc:DCRFieldSemantic edc:cname="PSS524288" edc:desc="1:524288" edc:when="(field &amp; 0x1F) == 0x13"/>
              <edc:DCRFieldSemantic edc:cname="PSS1048576" edc:desc="1:1048576" edc:when="(field &amp; 0x1F) == 0x14"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="QSPIDDRM" edc:nzwidth="0x1" edc:desc="QSPI DDR Mode Clock Enable">
              <edc:DCRFieldSemantic edc:cname="ON" edc:desc="" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="OFF" edc:desc="" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="CLKZBREF" edc:nzwidth="0x1" edc:desc="External Reference Clock ZB Enable">
              <edc:DCRFieldSemantic edc:cname="ON" edc:desc="" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="OFF" edc:desc="" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:DCRFieldDef>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
      <edc:DCRDef ltx:memberofperipheral="FUSES" edc:cname="DEVCFG0" edc:nzwidth="0x20" edc:impl="0x77F603D6" edc:unused="0x0" edc:useinchecksum="0xFFFFFFFF" edc:factorydefault="0x7100000b" edc:access="-nnn-nnnnnnn-nn-------nnnn-n-nn-" edc:_addr="0x805F98" edc:default="0x7100000b">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSES">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:DCRFieldDef edc:cname="SWOEN" edc:nzwidth="0x1" edc:desc="SWO enable on 2-wire debug interface">
              <edc:DCRFieldSemantic edc:cname="OFF" edc:desc="" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="ON" edc:desc="" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="TROEN" edc:nzwidth="0x1" edc:desc="Trace Output Enable">
              <edc:DCRFieldSemantic edc:cname="OFF" edc:desc="" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="ON" edc:desc="" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:DCRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:DCRFieldDef edc:cname="ADCPOVR" edc:nzwidth="0x1" edc:desc="ADC Charge Pump Override">
              <edc:DCRFieldSemantic edc:cname="HW" edc:desc="" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="SW" edc:desc="" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:DCRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:DCRFieldDef edc:cname="ACCMP1_ALTEN" edc:nzwidth="0x1" edc:desc="AC CMP1 Alternate Enable">
              <edc:DCRFieldSemantic edc:cname="PA6" edc:desc="" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="PA13" edc:desc="" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="CPENFILT" edc:nzwidth="0x1" edc:desc="ADC CP Filter Enable">
              <edc:DCRFieldSemantic edc:cname="OFF" edc:desc="" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="ON" edc:desc="" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="RTCIN0_ALTEN" edc:nzwidth="0x1" edc:desc="RTCIN0 Alternate Enable">
              <edc:DCRFieldSemantic edc:cname="PA3" edc:desc="" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="PA9" edc:desc="" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="RTCOUT_ALTEN" edc:nzwidth="0x1" edc:desc="RTCOUT Alternate Enable">
              <edc:DCRFieldSemantic edc:cname="PA4" edc:desc="" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="PA10" edc:desc="" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:DCRFieldDef>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:DCRFieldDef edc:cname="SMBUSEN0" edc:nzwidth="0x1" edc:desc="SMBus Enable for SERCOM0">
              <edc:DCRFieldSemantic edc:cname="OFF" edc:desc="" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="ON" edc:desc="" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="SMBUSEN1" edc:nzwidth="0x1" edc:desc="SMBus Enable for SERCOM1">
              <edc:DCRFieldSemantic edc:cname="OFF" edc:desc="" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="ON" edc:desc="" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:DCRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:DCRFieldDef edc:cname="HPLUGDIS" edc:nzwidth="0x1" edc:desc="Hot Plugging Disable">
              <edc:DCRFieldSemantic edc:cname="OFF" edc:desc="" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="ON" edc:desc="" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="SLRTEN0" edc:nzwidth="0x1" edc:desc="SLRT Enable for SERCOM0">
              <edc:DCRFieldSemantic edc:cname="OFF" edc:desc="" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="ON" edc:desc="" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="SLRTEN1" edc:nzwidth="0x1" edc:desc="SLRT Enable for SERCOM1">
              <edc:DCRFieldSemantic edc:cname="OFF" edc:desc="" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="ON" edc:desc="" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="SLRTEN2" edc:nzwidth="0x1" edc:desc="SLRT Enable for SERCOM2">
              <edc:DCRFieldSemantic edc:cname="OFF" edc:desc="" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="ON" edc:desc="" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="PCM" edc:nzwidth="0x1" edc:desc="PCHE I/D Cacheable Mode">
              <edc:DCRFieldSemantic edc:cname="CPU" edc:desc="" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="SFR" edc:desc="" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="INT0E" edc:nzwidth="0x1" edc:desc="INT0 Enable">
              <edc:DCRFieldSemantic edc:cname="OFF" edc:desc="" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="ON" edc:desc="" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="INT0P" edc:nzwidth="0x1" edc:desc="INT0P Polarity">
              <edc:DCRFieldSemantic edc:cname="NEG" edc:desc="" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="POS" edc:desc="" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:DCRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:DCRFieldDef edc:cname="FECCCON" edc:nzwidth="0x2" edc:desc="Flash ECC Control">
              <edc:DCRFieldSemantic edc:cname="ON" edc:desc="" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="DYNAMIC" edc:desc="" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="OFF" edc:desc="" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="FRECCDIS" edc:nzwidth="0x1" edc:desc="Flex RAM ECC Control">
              <edc:DCRFieldSemantic edc:cname="OFF" edc:desc="" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="ON" edc:desc="" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:DCRFieldDef>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
      <edc:DCRDef ltx:memberofperipheral="FUSES" edc:cname="FBCFG0" edc:nzwidth="0x20" edc:impl="0x80000002" edc:unused="0x0" edc:useinchecksum="0xFFFFFFFF" edc:factorydefault="0x00000002" edc:access="n-----------------------------n-" edc:_addr="0x805F9C" edc:default="0x00000002">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSES">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:DCRFieldDef edc:cname="PCSCMODE" edc:nzwidth="0x1" edc:desc="PCache Single cache Mode">
              <edc:DCRFieldSemantic edc:cname="SINGLE" edc:desc="PCHE ICache Only.CPU Instructions (code, data) go to PCHE ONLY." edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="DUAL" edc:desc="PCHE ICache and DCache. CPU opcodes go to PCEHE ICache port and data goes to PCHE" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:DCRFieldDef>
            <edc:AdjustPoint edc:offset="0x1D"/>
            <edc:DCRFieldDef edc:cname="BINFOVALID" edc:nzwidth="0x1" edc:desc="BCFG info valid">
              <edc:DCRFieldSemantic edc:cname="NOT_VALID" edc:desc="BCFG0 to BCFG7 is not valid." edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="VALID" edc:desc="BCFG0 to BCFG7 is valid." edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:DCRFieldDef>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
      <edc:AdjustPoint edc:unimplval="0x0" edc:offset="0x10" edc:_addr="0x805FA0"/>
      <edc:DCRDef ltx:memberofperipheral="FUSES" edc:cname="FCPN3" edc:nzwidth="0x20" edc:impl="0xFFFFFFFF" edc:unused="0x0" edc:useinchecksum="0xFFFFFFFF" edc:factorydefault="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x805FB0" edc:default="0xFFFFFFFF">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSES">
            <edc:DCRFieldDef edc:cname="FCPN3" edc:nzwidth="0x20" edc:desc="RESERVED"/>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
      <edc:DCRDef ltx:memberofperipheral="FUSES" edc:cname="FCPN2" edc:nzwidth="0x20" edc:impl="0xFFFFFFFF" edc:unused="0x0" edc:useinchecksum="0xFFFFFFFF" edc:factorydefault="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x805FB4" edc:default="0xFFFFFFFF">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSES">
            <edc:DCRFieldDef edc:cname="FCPN2" edc:nzwidth="0x20" edc:desc="RESERVED"/>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
      <edc:DCRDef ltx:memberofperipheral="FUSES" edc:cname="FCPN1" edc:nzwidth="0x20" edc:impl="0xFFFFFFFF" edc:unused="0x0" edc:useinchecksum="0xFFFFFFFF" edc:factorydefault="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x805FB8" edc:default="0xFFFFFFFF">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSES">
            <edc:DCRFieldDef edc:cname="FCPN1" edc:nzwidth="0x20" edc:desc="RESERVED"/>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
      <edc:DCRDef ltx:memberofperipheral="FUSES" edc:cname="FCPN0" edc:nzwidth="0x20" edc:impl="0x10000000" edc:unused="0x0" edc:useinchecksum="0xFFFFFFFF" edc:factorydefault="0x10000000" edc:access="---n----------------------------" edc:_addr="0x805FBC" edc:default="0x10000000">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSES">
            <edc:AdjustPoint edc:offset="0x1C"/>
            <edc:DCRFieldDef edc:cname="CP" edc:nzwidth="0x1" edc:desc="Boot Code Protect">
              <edc:DCRFieldSemantic edc:cname="DISABLED" edc:desc="Protection Disabled" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="ENABLED" edc:desc="Protection Enabled" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:DCRFieldDef>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
    </edc:ConfigFuseSector>
    <edc:BootConfigSector edc:regionid="FCR_OTP_PAGE" edc:beginaddr="0x806000" edc:endaddr="0x807000" atdf:pagesize="0x1000" edc:isotp="true" edc:rw="r"/>
    <edc:GPRDataSector edc:regionid="CMCC_TCM" edc:beginaddr="0x2000000" edc:endaddr="0x2001000" edc:rw="rw"/>
    <edc:GPRDataSector edc:regionid="RAM_SYSTEM_RAM" edc:beginaddr="0x20000000" edc:endaddr="0x20018000" edc:isexecutable="true" edc:rw="rw"/>
    <edc:ExternalSector edc:regionid="QSPI" edc:beginaddr="0x4000000" edc:endaddr="0x5000000" edc:isexecutable="true" edc:rw="rw" edc:accessprotocol="qspi" edc:type="flash"/>
    <edc:SFRDataSector edc:regionid="PBA_BRIDGE" edc:beginaddr="0x40000000" edc:endaddr="0x40003C88" edc:rw="rw">
      <edc:SFRDef ltx:memberofperipheral="PAC" edc:cname="WRCTRL" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x40000000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PAC">
            <edc:SFRFieldDef edc:cname="PERID" edc:nzwidth="0x10" edc:desc="Peripheral identifier"/>
            <edc:SFRFieldDef edc:cname="KEY" edc:nzwidth="0x8" edc:desc="Peripheral access control key">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="No action" edc:when="(field &amp; 0xFF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="CLR" edc:desc="Clear protection" edc:when="(field &amp; 0xFF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set protection" edc:when="(field &amp; 0xFF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SETLCK" edc:desc="Set and lock protection" edc:when="(field &amp; 0xFF) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PAC" edc:cname="EVCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x40000004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PAC">
            <edc:SFRFieldDef edc:cname="ERREO" edc:nzwidth="0x1" edc:desc="Peripheral acess error event output"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x40000005"/>
      <edc:SFRDef ltx:memberofperipheral="PAC" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x40000008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PAC">
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Peripheral access error interrupt disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PAC" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x40000009">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PAC">
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Peripheral access error interrupt enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x6" edc:_addr="0x4000000A"/>
      <edc:SFRDef ltx:memberofperipheral="PAC" edc:cname="INTFLAGAHB" edc:nzwidth="0x20" edc:access="-------------------nnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1FFF" edc:_addr="0x40000010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PAC">
            <edc:SFRFieldDef edc:cname="SRAM0_" edc:nzwidth="0x1" edc:desc="SRAM0"/>
            <edc:SFRFieldDef edc:cname="SRAM1_" edc:nzwidth="0x1" edc:desc="SRAM1"/>
            <edc:SFRFieldDef edc:cname="SRAM2_" edc:nzwidth="0x1" edc:desc="SRAM2"/>
            <edc:SFRFieldDef edc:cname="SRAM3_" edc:nzwidth="0x1" edc:desc="SRAM3"/>
            <edc:SFRFieldDef edc:cname="CFLASH_" edc:nzwidth="0x1" edc:desc="CFLASH"/>
            <edc:SFRFieldDef edc:cname="PFLASH_" edc:nzwidth="0x1" edc:desc="PFLASH"/>
            <edc:SFRFieldDef edc:cname="HPBA_" edc:nzwidth="0x1" edc:desc="HPBA"/>
            <edc:SFRFieldDef edc:cname="HPBB_" edc:nzwidth="0x1" edc:desc="HPBB"/>
            <edc:SFRFieldDef edc:cname="HPBC_" edc:nzwidth="0x1" edc:desc="HPBC"/>
            <edc:SFRFieldDef edc:cname="HPBPIC_" edc:nzwidth="0x1" edc:desc="HPBPIC0"/>
            <edc:SFRFieldDef edc:cname="QSPI_" edc:nzwidth="0x1" edc:desc="QSPI"/>
            <edc:SFRFieldDef edc:cname="ROT_" edc:nzwidth="0x1" edc:desc="ROT"/>
            <edc:SFRFieldDef edc:cname="CRYPTO_" edc:nzwidth="0x1" edc:desc="CRYPTO"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PAC" edc:cname="INTFLAGA" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF" edc:_addr="0x40000014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PAC">
            <edc:SFRFieldDef edc:cname="PAC_" edc:nzwidth="0x1" edc:desc="PAC"/>
            <edc:SFRFieldDef edc:cname="FREQM_" edc:nzwidth="0x1" edc:desc="FREQM"/>
            <edc:SFRFieldDef edc:cname="EIC_" edc:nzwidth="0x1" edc:desc="EIC"/>
            <edc:SFRFieldDef edc:cname="SERCOM0_" edc:nzwidth="0x1" edc:desc="SERCOM0"/>
            <edc:SFRFieldDef edc:cname="SERCOM1_" edc:nzwidth="0x1" edc:desc="SERCOM1"/>
            <edc:SFRFieldDef edc:cname="TC0_" edc:nzwidth="0x1" edc:desc="TC0"/>
            <edc:SFRFieldDef edc:cname="TC1_" edc:nzwidth="0x1" edc:desc="TC1"/>
            <edc:SFRFieldDef edc:cname="TC2_" edc:nzwidth="0x1" edc:desc="TC2"/>
            <edc:SFRFieldDef edc:cname="TC3_" edc:nzwidth="0x1" edc:desc="TC3"/>
            <edc:SFRFieldDef edc:cname="TC4_" edc:nzwidth="0x1" edc:desc="TC4"/>
            <edc:SFRFieldDef edc:cname="TC5_" edc:nzwidth="0x1" edc:desc="TC5"/>
            <edc:SFRFieldDef edc:cname="TC6_" edc:nzwidth="0x1" edc:desc="TC6"/>
            <edc:SFRFieldDef edc:cname="TC7_" edc:nzwidth="0x1" edc:desc="TC7"/>
            <edc:SFRFieldDef edc:cname="TCC0_" edc:nzwidth="0x1" edc:desc="TCC0"/>
            <edc:SFRFieldDef edc:cname="TCC1_" edc:nzwidth="0x1" edc:desc="TCC1"/>
            <edc:SFRFieldDef edc:cname="TCC2_" edc:nzwidth="0x1" edc:desc="TCC2"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PAC" edc:cname="INTFLAGB" edc:nzwidth="0x20" edc:access="---------------------------nnn-n" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1D" edc:_addr="0x40000018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PAC">
            <edc:SFRFieldDef edc:cname="DSU_" edc:nzwidth="0x1" edc:desc="DSU"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DMAC_" edc:nzwidth="0x1" edc:desc="DMAC"/>
            <edc:SFRFieldDef edc:cname="EVSYS_" edc:nzwidth="0x1" edc:desc="EVSYS"/>
            <edc:SFRFieldDef edc:cname="RAMECC_" edc:nzwidth="0x1" edc:desc="RAMECC"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PAC" edc:cname="INTFLAGC" edc:nzwidth="0x20" edc:access="------------------------nn----nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC3" edc:_addr="0x4000001C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PAC">
            <edc:SFRFieldDef edc:cname="QSPI_" edc:nzwidth="0x1" edc:desc="QSPI"/>
            <edc:SFRFieldDef edc:cname="SERCOM2_" edc:nzwidth="0x1" edc:desc="SERCOM2"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CCL_" edc:nzwidth="0x1" edc:desc="CCL"/>
            <edc:SFRFieldDef edc:cname="AC_" edc:nzwidth="0x1" edc:desc="AC"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x14" edc:_addr="0x40000020"/>
      <edc:SFRDef ltx:memberofperipheral="PAC" edc:cname="STATUSA" edc:nzwidth="0x20" edc:access="----------------rrrrrrrrrrrrrrrr" edc:por="00000000000000010000000000000000" edc:mclr="00000000000000010000000000000000" edc:impl="0xFFFF" edc:_addr="0x40000034">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PAC">
            <edc:SFRFieldDef edc:cname="PAC_" edc:nzwidth="0x1" edc:desc="PAC APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="FREQM_" edc:nzwidth="0x1" edc:desc="FREQM APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="EIC_" edc:nzwidth="0x1" edc:desc="EIC APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="SERCOM0_" edc:nzwidth="0x1" edc:desc="SERCOM0 APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="SERCOM1_" edc:nzwidth="0x1" edc:desc="SERCOM1 APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="TC0_" edc:nzwidth="0x1" edc:desc="TC0 APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="TC1_" edc:nzwidth="0x1" edc:desc="TC1 APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="TC2_" edc:nzwidth="0x1" edc:desc="TC2 APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="TC3_" edc:nzwidth="0x1" edc:desc="TC3 APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="TC4_" edc:nzwidth="0x1" edc:desc="TC4 APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="TC5_" edc:nzwidth="0x1" edc:desc="TC5 APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="TC6_" edc:nzwidth="0x1" edc:desc="TC6 APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="TC7_" edc:nzwidth="0x1" edc:desc="TC7 APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="TCC0_" edc:nzwidth="0x1" edc:desc="TCC0 APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="TCC1_" edc:nzwidth="0x1" edc:desc="TCC1 APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="TCC2_" edc:nzwidth="0x1" edc:desc="TCC2 APB Protect Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PAC" edc:cname="STATUSB" edc:nzwidth="0x20" edc:access="---------------------------rrr-r" edc:por="00000000000000000000000000000010" edc:mclr="00000000000000000000000000000010" edc:impl="0x1D" edc:_addr="0x40000038">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PAC">
            <edc:SFRFieldDef edc:cname="DSU_" edc:nzwidth="0x1" edc:desc="DSU APB Protect Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DMAC_" edc:nzwidth="0x1" edc:desc="DMAC APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="EVSYS_" edc:nzwidth="0x1" edc:desc="EVSYS APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="RAMECC_" edc:nzwidth="0x1" edc:desc="RAMECC APB Protect Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PAC" edc:cname="STATUSC" edc:nzwidth="0x20" edc:access="------------------------rr----rr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC3" edc:_addr="0x4000003C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PAC">
            <edc:SFRFieldDef edc:cname="QSPI_" edc:nzwidth="0x1" edc:desc="QSPI APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="SERCOM2_" edc:nzwidth="0x1" edc:desc="SERCOM2 APB Protect Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CCL_" edc:nzwidth="0x1" edc:desc="CCL APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="AC_" edc:nzwidth="0x1" edc:desc="AC APB Protect Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3C0" edc:_addr="0x40000040"/>
      <edc:SFRDef ltx:memberofperipheral="FREQM" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x40000400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FREQM">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FREQM" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="-------w" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x40000401">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FREQM">
            <edc:SFRFieldDef edc:cname="START" edc:nzwidth="0x1" edc:desc="Start Measurement"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FREQM" edc:cname="CFGA" edc:nzwidth="0x10" edc:access="--------nnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xFF" edc:_addr="0x40000402">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FREQM">
            <edc:SFRFieldDef edc:cname="REFNUM" edc:nzwidth="0x8" edc:desc="Number of Reference Clock Cycles"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x40000404"/>
      <edc:SFRDef ltx:memberofperipheral="FREQM" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x40000408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FREQM">
            <edc:SFRFieldDef edc:cname="DONE" edc:nzwidth="0x1" edc:desc="Measurement Done Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FREQM" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x40000409">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FREQM">
            <edc:SFRFieldDef edc:cname="DONE" edc:nzwidth="0x1" edc:desc="Measurement Done Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FREQM" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x4000040A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FREQM">
            <edc:SFRFieldDef edc:cname="DONE" edc:nzwidth="0x1" edc:desc="Measurement Done"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FREQM" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4000040B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FREQM">
            <edc:SFRFieldDef edc:cname="BUSY" edc:nzwidth="0x1" edc:desc="FREQM Status"/>
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Sticky Count Value Overflow"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FREQM" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="------------------------------rr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3" edc:_addr="0x4000040C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FREQM">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FREQM" edc:cname="VALUE" edc:nzwidth="0x20" edc:access="--------rrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x40000410">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FREQM">
            <edc:SFRFieldDef edc:cname="VALUE" edc:nzwidth="0x18" edc:desc="Measurement Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3EC" edc:_addr="0x40000414"/>
      <edc:SFRDef ltx:memberofperipheral="EIC" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="---n--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x13" edc:_addr="0x40000800">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EIC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CKSEL" edc:nzwidth="0x1" edc:desc="Clock Selection">
              <edc:SFRFieldSemantic edc:cname="CLK_GCLK" edc:desc="Clocked by GCLK" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="32KHZ_LPCLK" edc:desc="Clocked by LPCLK" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EIC" edc:cname="NMICTRL" edc:nzwidth="0x8" edc:access="---nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1F" edc:_addr="0x40000801">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EIC">
            <edc:SFRFieldDef edc:cname="NMISENSE" edc:nzwidth="0x3" edc:desc="Non-Maskable Interrupt Sense Configuration">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No detection" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Rising-edge detection" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Falling-edge detection" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Both-edges detection" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="High-level detection" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Low-level detection" edc:when="(field &amp; 0x7) == 0x05"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NMIFILTEN" edc:nzwidth="0x1" edc:desc="Non-Maskable Interrupt Filter Enable"/>
            <edc:SFRFieldDef edc:cname="NMIASYNCH" edc:nzwidth="0x1" edc:desc="Asynchronous Edge Detection Mode">
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Edge detection is clock synchronously operated" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Edge detection is clock asynchronously operated" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EIC" edc:cname="NMIFLAG" edc:nzwidth="0x10" edc:access="---------------n" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1" edc:_addr="0x40000802">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EIC">
            <edc:SFRFieldDef edc:cname="NMI" edc:nzwidth="0x1" edc:desc="Non-Maskable Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EIC" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="------------------------------rr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3" edc:_addr="0x40000804">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EIC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy Status"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable Synchronization Busy Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EIC" edc:cname="EVCTRL" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x40000808">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EIC">
            <edc:SFRFieldDef edc:cname="EXTINTEO" edc:nzwidth="0x4" edc:desc="External Interrupt Event Output Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EIC" edc:cname="INTENCLR" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x4000080C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EIC">
            <edc:SFRFieldDef edc:cname="EXTINT" edc:nzwidth="0x4" edc:desc="External Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EIC" edc:cname="INTENSET" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x40000810">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EIC">
            <edc:SFRFieldDef edc:cname="EXTINT" edc:nzwidth="0x4" edc:desc="External Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EIC" edc:cname="INTFLAG" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x40000814">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EIC">
            <edc:SFRFieldDef edc:cname="EXTINT" edc:nzwidth="0x4" edc:desc="External Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EIC" edc:cname="ASYNCH" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x40000818">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EIC">
            <edc:SFRFieldDef edc:cname="ASYNCH" edc:nzwidth="0x4" edc:desc="Asynchronous Edge Detection Mode">
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Edge detection is clock synchronously operated" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Edge detection is clock asynchronously operated" edc:when="(field &amp; 0xF) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EIC" edc:cname="CONFIG" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF" edc:_addr="0x4000081C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EIC">
            <edc:SFRFieldDef edc:cname="SENSE0" edc:nzwidth="0x3" edc:desc="Input Sense Configuration 0">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No detection" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Rising edge detection" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Falling edge detection" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Both edges detection" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="High level detection" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Low level detection" edc:when="(field &amp; 0x7) == 0x05"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FILTEN0" edc:nzwidth="0x1" edc:desc="Filter Enable 0"/>
            <edc:SFRFieldDef edc:cname="SENSE1" edc:nzwidth="0x3" edc:desc="Input Sense Configuration 1">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No detection" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Rising edge detection" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Falling edge detection" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Both edges detection" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="High level detection" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Low level detection" edc:when="(field &amp; 0x7) == 0x05"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FILTEN1" edc:nzwidth="0x1" edc:desc="Filter Enable 1"/>
            <edc:SFRFieldDef edc:cname="SENSE2" edc:nzwidth="0x3" edc:desc="Input Sense Configuration 2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No detection" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Rising edge detection" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Falling edge detection" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Both edges detection" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="High level detection" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Low level detection" edc:when="(field &amp; 0x7) == 0x05"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FILTEN2" edc:nzwidth="0x1" edc:desc="Filter Enable 2"/>
            <edc:SFRFieldDef edc:cname="SENSE3" edc:nzwidth="0x3" edc:desc="Input Sense Configuration 3">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No detection" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Rising edge detection" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Falling edge detection" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Both edges detection" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="High level detection" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Low level detection" edc:when="(field &amp; 0x7) == 0x05"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FILTEN3" edc:nzwidth="0x1" edc:desc="Filter Enable 3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x10" edc:_addr="0x40000820"/>
      <edc:SFRDef ltx:memberofperipheral="EIC" edc:cname="DEBOUNCEN" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x40000830">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EIC">
            <edc:SFRFieldDef edc:cname="DEBOUNCEN" edc:nzwidth="0x4" edc:desc="Debouncer Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EIC" edc:cname="DPRESCALER" edc:nzwidth="0x20" edc:access="---------------n------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1000F" edc:_addr="0x40000834">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EIC">
            <edc:SFRFieldDef edc:cname="PRESCALER0" edc:nzwidth="0x3" edc:desc="Debouncer Prescaler">
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="EIC clock divided by 2" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="EIC clock divided by 4" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="EIC clock divided by 8" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="EIC clock divided by 16" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="EIC clock divided by 32" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="EIC clock divided by 64" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="EIC clock divided by 128" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="EIC clock divided by 256" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="STATES0" edc:nzwidth="0x1" edc:desc="Debouncer number of states">
              <edc:SFRFieldSemantic edc:cname="LFREQ3" edc:desc="3 low frequency samples" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LFREQ7" edc:desc="7 low frequency samples" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0xC"/>
            <edc:SFRFieldDef edc:cname="TICKON" edc:nzwidth="0x1" edc:desc="Pin Sampler frequency selection">
              <edc:SFRFieldSemantic edc:cname="CLK_GCLK_EIC" edc:desc="Clocked by GCLK" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="CLK_LFREQ" edc:desc="Clocked by Low Frequency Clock" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EIC" edc:cname="PINSTATE" edc:nzwidth="0x20" edc:access="----------------------------rrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x40000838">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EIC">
            <edc:SFRFieldDef edc:cname="PINSTATE" edc:nzwidth="0x4" edc:desc="Pin State"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xBC4" edc:_addr="0x4000083C"/>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="---nn-nn--nn--nnn---nnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1B338FFF" edc:_addr="0x40001400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x2" edc:desc="Timer Counter Mode">
              <edc:SFRFieldSemantic edc:cname="COUNT16" edc:desc="Counter in 16-bit mode" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="COUNT8" edc:desc="Counter in 8-bit mode" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="COUNT32" edc:desc="Counter in 32-bit mode" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PRESCSYNC" edc:nzwidth="0x2" edc:desc="Prescaler and Counter Synchronization">
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="Reload or reset the counter on next generic clock" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PRESC" edc:desc="Reload or reset the counter on next prescaler clock" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RESYNC" edc:desc="Reload or reset the counter on next generic clock and reset the prescaler counter" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Clock On Demand"/>
            <edc:SFRFieldDef edc:cname="PRESCALER" edc:nzwidth="0x3" edc:desc="Prescaler">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="Prescaler: GCLK_TC" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Prescaler: GCLK_TC/2" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="Prescaler: GCLK_TC/4" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="Prescaler: GCLK_TC/8" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="Prescaler: GCLK_TC/16" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="Prescaler: GCLK_TC/64" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="Prescaler: GCLK_TC/256" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="Prescaler: GCLK_TC/1024" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ALOCK" edc:nzwidth="0x1" edc:desc="Auto Lock"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DMAOS" edc:nzwidth="0x1" edc:desc="DMA One Shot"/>
            <edc:SFRFieldDef edc:cname="CAPTEN0" edc:nzwidth="0x1" edc:desc="Capture Channel 0 Enable"/>
            <edc:SFRFieldDef edc:cname="CAPTEN1" edc:nzwidth="0x1" edc:desc="Capture Channel 1 Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="COPEN0" edc:nzwidth="0x1" edc:desc="Capture On Pin 0 Enable"/>
            <edc:SFRFieldDef edc:cname="COPEN1" edc:nzwidth="0x1" edc:desc="Capture On Pin 1 Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CAPTMODE0" edc:nzwidth="0x2" edc:desc="Capture Mode Channel 0">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Default capture" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMIN" edc:desc="Minimum capture" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMAX" edc:desc="Maximum capture" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CAPTMODE1" edc:nzwidth="0x2" edc:desc="Capture mode Channel 1">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Default capture" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMIN" edc:desc="Minimum capture" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMAX" edc:desc="Maximum capture" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="CTRLBCLR" edc:nzwidth="0x8" edc:access="nnn--nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xE7" edc:_addr="0x40001404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Counter Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:nzwidth="0x1" edc:desc="One-Shot on Counter"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Force a start, restart or retrigger" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Force a stop" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update of double-buffered register" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force a read synchronization of COUNT" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DMAOS" edc:desc="One-shot DMA trigger" edc:when="(field &amp; 0x7) == 0x05"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="CTRLBSET" edc:nzwidth="0x8" edc:access="nnn--nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xE7" edc:_addr="0x40001405">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Counter Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:nzwidth="0x1" edc:desc="One-Shot on Counter"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Force a start, restart or retrigger" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Force a stop" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update of double-buffered register" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force a read synchronization of COUNT" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DMAOS" edc:desc="One-shot DMA trigger" edc:when="(field &amp; 0x7) == 0x05"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="EVCTRL" edc:nzwidth="0x10" edc:access="--nn---n--nn-nnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x3137" edc:_addr="0x40001406">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="EVACT" edc:nzwidth="0x3" edc:desc="Event Action">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Event action disabled" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Start, restart or retrigger TC on event" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="COUNT" edc:desc="Count on event" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="Start TC on event" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="STAMP" edc:desc="Time stamp capture" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="PPW" edc:desc="Period catured in CC0, pulse width in CC1" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="PWP" edc:desc="Period catured in CC1, pulse width in CC0" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="PW" edc:desc="Pulse width capture" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TCINV" edc:nzwidth="0x1" edc:desc="TC Event Input Polarity"/>
            <edc:SFRFieldDef edc:cname="TCEI" edc:nzwidth="0x1" edc:desc="TC Event Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="OVFEO" edc:nzwidth="0x1" edc:desc="Event Output Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="MCEO0" edc:nzwidth="0x1" edc:desc="MC Event Output Enable 0"/>
            <edc:SFRFieldDef edc:cname="MCEO1" edc:nzwidth="0x1" edc:desc="MC Event Output Enable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="--nn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x33" edc:_addr="0x40001408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="OVF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="ERR Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="MC Interrupt Disable 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="MC Interrupt Disable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="--nn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x33" edc:_addr="0x40001409">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="OVF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="ERR Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="MC Interrupt Enable 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="MC Interrupt Enable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="--nn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x33" edc:_addr="0x4000140A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="OVF Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="ERR Interrupt Flag"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="MC Interrupt Flag 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="MC Interrupt Flag 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="--nnn-nn" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3B" edc:_addr="0x4000140B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="STOP" edc:nzwidth="0x1" edc:desc="Stop Status Flag"/>
            <edc:SFRFieldDef edc:cname="SLAVE" edc:nzwidth="0x1" edc:desc="Slave Status Flag"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PERBUFV" edc:nzwidth="0x1" edc:desc="Synchronization Busy Status"/>
            <edc:SFRFieldDef edc:cname="CCBUFV0" edc:nzwidth="0x1" edc:desc="Compare channel buffer 0 valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV1" edc:nzwidth="0x1" edc:desc="Compare channel buffer 1 valid"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="WAVE" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4000140C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="WAVEGEN" edc:nzwidth="0x2" edc:desc="Waveform Generation Mode">
              <edc:SFRFieldSemantic edc:cname="NFRQ" edc:desc="Normal frequency" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="MFRQ" edc:desc="Match frequency" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NPWM" edc:desc="Normal PWM" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="MPWM" edc:desc="Match PWM" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="DRVCTRL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4000140D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="INVEN0" edc:nzwidth="0x1" edc:desc="Output Waveform Invert Enable 0"/>
            <edc:SFRFieldDef edc:cname="INVEN1" edc:nzwidth="0x1" edc:desc="Output Waveform Invert Enable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x4000140E"/>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x4000140F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Run During Debug"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="------------------------rr-rrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xDF" edc:_addr="0x40001410">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="swrst"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="enable"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB"/>
            <edc:SFRFieldDef edc:cname="STATUS" edc:nzwidth="0x1" edc:desc="STATUS"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x1" edc:desc="Counter"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CC0" edc:nzwidth="0x1" edc:desc="Compare Channel 0"/>
            <edc:SFRFieldDef edc:cname="CC1" edc:nzwidth="0x1" edc:desc="Compare Channel 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3EC" edc:_addr="0x40001414"/>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="---nn-nn--nn--nnn---nnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1B338FFF" edc:_addr="0x40001800">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x2" edc:desc="Timer Counter Mode">
              <edc:SFRFieldSemantic edc:cname="COUNT16" edc:desc="Counter in 16-bit mode" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="COUNT8" edc:desc="Counter in 8-bit mode" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="COUNT32" edc:desc="Counter in 32-bit mode" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PRESCSYNC" edc:nzwidth="0x2" edc:desc="Prescaler and Counter Synchronization">
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="Reload or reset the counter on next generic clock" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PRESC" edc:desc="Reload or reset the counter on next prescaler clock" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RESYNC" edc:desc="Reload or reset the counter on next generic clock and reset the prescaler counter" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Clock On Demand"/>
            <edc:SFRFieldDef edc:cname="PRESCALER" edc:nzwidth="0x3" edc:desc="Prescaler">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="Prescaler: GCLK_TC" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Prescaler: GCLK_TC/2" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="Prescaler: GCLK_TC/4" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="Prescaler: GCLK_TC/8" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="Prescaler: GCLK_TC/16" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="Prescaler: GCLK_TC/64" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="Prescaler: GCLK_TC/256" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="Prescaler: GCLK_TC/1024" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ALOCK" edc:nzwidth="0x1" edc:desc="Auto Lock"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DMAOS" edc:nzwidth="0x1" edc:desc="DMA One Shot"/>
            <edc:SFRFieldDef edc:cname="CAPTEN0" edc:nzwidth="0x1" edc:desc="Capture Channel 0 Enable"/>
            <edc:SFRFieldDef edc:cname="CAPTEN1" edc:nzwidth="0x1" edc:desc="Capture Channel 1 Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="COPEN0" edc:nzwidth="0x1" edc:desc="Capture On Pin 0 Enable"/>
            <edc:SFRFieldDef edc:cname="COPEN1" edc:nzwidth="0x1" edc:desc="Capture On Pin 1 Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CAPTMODE0" edc:nzwidth="0x2" edc:desc="Capture Mode Channel 0">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Default capture" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMIN" edc:desc="Minimum capture" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMAX" edc:desc="Maximum capture" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CAPTMODE1" edc:nzwidth="0x2" edc:desc="Capture mode Channel 1">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Default capture" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMIN" edc:desc="Minimum capture" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMAX" edc:desc="Maximum capture" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="CTRLBCLR" edc:nzwidth="0x8" edc:access="nnn--nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xE7" edc:_addr="0x40001804">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Counter Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:nzwidth="0x1" edc:desc="One-Shot on Counter"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Force a start, restart or retrigger" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Force a stop" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update of double-buffered register" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force a read synchronization of COUNT" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DMAOS" edc:desc="One-shot DMA trigger" edc:when="(field &amp; 0x7) == 0x05"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="CTRLBSET" edc:nzwidth="0x8" edc:access="nnn--nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xE7" edc:_addr="0x40001805">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Counter Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:nzwidth="0x1" edc:desc="One-Shot on Counter"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Force a start, restart or retrigger" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Force a stop" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update of double-buffered register" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force a read synchronization of COUNT" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DMAOS" edc:desc="One-shot DMA trigger" edc:when="(field &amp; 0x7) == 0x05"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="EVCTRL" edc:nzwidth="0x10" edc:access="--nn---n--nn-nnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x3137" edc:_addr="0x40001806">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="EVACT" edc:nzwidth="0x3" edc:desc="Event Action">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Event action disabled" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Start, restart or retrigger TC on event" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="COUNT" edc:desc="Count on event" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="Start TC on event" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="STAMP" edc:desc="Time stamp capture" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="PPW" edc:desc="Period catured in CC0, pulse width in CC1" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="PWP" edc:desc="Period catured in CC1, pulse width in CC0" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="PW" edc:desc="Pulse width capture" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TCINV" edc:nzwidth="0x1" edc:desc="TC Event Input Polarity"/>
            <edc:SFRFieldDef edc:cname="TCEI" edc:nzwidth="0x1" edc:desc="TC Event Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="OVFEO" edc:nzwidth="0x1" edc:desc="Event Output Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="MCEO0" edc:nzwidth="0x1" edc:desc="MC Event Output Enable 0"/>
            <edc:SFRFieldDef edc:cname="MCEO1" edc:nzwidth="0x1" edc:desc="MC Event Output Enable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="--nn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x33" edc:_addr="0x40001808">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="OVF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="ERR Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="MC Interrupt Disable 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="MC Interrupt Disable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="--nn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x33" edc:_addr="0x40001809">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="OVF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="ERR Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="MC Interrupt Enable 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="MC Interrupt Enable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="--nn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x33" edc:_addr="0x4000180A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="OVF Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="ERR Interrupt Flag"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="MC Interrupt Flag 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="MC Interrupt Flag 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="--nnn-nn" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3B" edc:_addr="0x4000180B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="STOP" edc:nzwidth="0x1" edc:desc="Stop Status Flag"/>
            <edc:SFRFieldDef edc:cname="SLAVE" edc:nzwidth="0x1" edc:desc="Slave Status Flag"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PERBUFV" edc:nzwidth="0x1" edc:desc="Synchronization Busy Status"/>
            <edc:SFRFieldDef edc:cname="CCBUFV0" edc:nzwidth="0x1" edc:desc="Compare channel buffer 0 valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV1" edc:nzwidth="0x1" edc:desc="Compare channel buffer 1 valid"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="WAVE" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4000180C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="WAVEGEN" edc:nzwidth="0x2" edc:desc="Waveform Generation Mode">
              <edc:SFRFieldSemantic edc:cname="NFRQ" edc:desc="Normal frequency" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="MFRQ" edc:desc="Match frequency" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NPWM" edc:desc="Normal PWM" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="MPWM" edc:desc="Match PWM" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="DRVCTRL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4000180D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="INVEN0" edc:nzwidth="0x1" edc:desc="Output Waveform Invert Enable 0"/>
            <edc:SFRFieldDef edc:cname="INVEN1" edc:nzwidth="0x1" edc:desc="Output Waveform Invert Enable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x4000180E"/>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x4000180F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Run During Debug"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="------------------------rr-rrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xDF" edc:_addr="0x40001810">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="swrst"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="enable"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB"/>
            <edc:SFRFieldDef edc:cname="STATUS" edc:nzwidth="0x1" edc:desc="STATUS"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x1" edc:desc="Counter"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CC0" edc:nzwidth="0x1" edc:desc="Compare Channel 0"/>
            <edc:SFRFieldDef edc:cname="CC1" edc:nzwidth="0x1" edc:desc="Compare Channel 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3EC" edc:_addr="0x40001814"/>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="---nn-nn--nn--nnn---nnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1B338FFF" edc:_addr="0x40001C00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x2" edc:desc="Timer Counter Mode">
              <edc:SFRFieldSemantic edc:cname="COUNT16" edc:desc="Counter in 16-bit mode" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="COUNT8" edc:desc="Counter in 8-bit mode" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="COUNT32" edc:desc="Counter in 32-bit mode" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PRESCSYNC" edc:nzwidth="0x2" edc:desc="Prescaler and Counter Synchronization">
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="Reload or reset the counter on next generic clock" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PRESC" edc:desc="Reload or reset the counter on next prescaler clock" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RESYNC" edc:desc="Reload or reset the counter on next generic clock and reset the prescaler counter" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Clock On Demand"/>
            <edc:SFRFieldDef edc:cname="PRESCALER" edc:nzwidth="0x3" edc:desc="Prescaler">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="Prescaler: GCLK_TC" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Prescaler: GCLK_TC/2" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="Prescaler: GCLK_TC/4" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="Prescaler: GCLK_TC/8" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="Prescaler: GCLK_TC/16" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="Prescaler: GCLK_TC/64" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="Prescaler: GCLK_TC/256" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="Prescaler: GCLK_TC/1024" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ALOCK" edc:nzwidth="0x1" edc:desc="Auto Lock"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DMAOS" edc:nzwidth="0x1" edc:desc="DMA One Shot"/>
            <edc:SFRFieldDef edc:cname="CAPTEN0" edc:nzwidth="0x1" edc:desc="Capture Channel 0 Enable"/>
            <edc:SFRFieldDef edc:cname="CAPTEN1" edc:nzwidth="0x1" edc:desc="Capture Channel 1 Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="COPEN0" edc:nzwidth="0x1" edc:desc="Capture On Pin 0 Enable"/>
            <edc:SFRFieldDef edc:cname="COPEN1" edc:nzwidth="0x1" edc:desc="Capture On Pin 1 Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CAPTMODE0" edc:nzwidth="0x2" edc:desc="Capture Mode Channel 0">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Default capture" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMIN" edc:desc="Minimum capture" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMAX" edc:desc="Maximum capture" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CAPTMODE1" edc:nzwidth="0x2" edc:desc="Capture mode Channel 1">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Default capture" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMIN" edc:desc="Minimum capture" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMAX" edc:desc="Maximum capture" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="CTRLBCLR" edc:nzwidth="0x8" edc:access="nnn--nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xE7" edc:_addr="0x40001C04">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Counter Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:nzwidth="0x1" edc:desc="One-Shot on Counter"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Force a start, restart or retrigger" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Force a stop" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update of double-buffered register" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force a read synchronization of COUNT" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DMAOS" edc:desc="One-shot DMA trigger" edc:when="(field &amp; 0x7) == 0x05"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="CTRLBSET" edc:nzwidth="0x8" edc:access="nnn--nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xE7" edc:_addr="0x40001C05">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Counter Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:nzwidth="0x1" edc:desc="One-Shot on Counter"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Force a start, restart or retrigger" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Force a stop" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update of double-buffered register" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force a read synchronization of COUNT" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DMAOS" edc:desc="One-shot DMA trigger" edc:when="(field &amp; 0x7) == 0x05"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="EVCTRL" edc:nzwidth="0x10" edc:access="--nn---n--nn-nnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x3137" edc:_addr="0x40001C06">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="EVACT" edc:nzwidth="0x3" edc:desc="Event Action">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Event action disabled" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Start, restart or retrigger TC on event" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="COUNT" edc:desc="Count on event" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="Start TC on event" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="STAMP" edc:desc="Time stamp capture" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="PPW" edc:desc="Period catured in CC0, pulse width in CC1" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="PWP" edc:desc="Period catured in CC1, pulse width in CC0" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="PW" edc:desc="Pulse width capture" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TCINV" edc:nzwidth="0x1" edc:desc="TC Event Input Polarity"/>
            <edc:SFRFieldDef edc:cname="TCEI" edc:nzwidth="0x1" edc:desc="TC Event Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="OVFEO" edc:nzwidth="0x1" edc:desc="Event Output Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="MCEO0" edc:nzwidth="0x1" edc:desc="MC Event Output Enable 0"/>
            <edc:SFRFieldDef edc:cname="MCEO1" edc:nzwidth="0x1" edc:desc="MC Event Output Enable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="--nn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x33" edc:_addr="0x40001C08">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="OVF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="ERR Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="MC Interrupt Disable 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="MC Interrupt Disable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="--nn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x33" edc:_addr="0x40001C09">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="OVF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="ERR Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="MC Interrupt Enable 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="MC Interrupt Enable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="--nn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x33" edc:_addr="0x40001C0A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="OVF Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="ERR Interrupt Flag"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="MC Interrupt Flag 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="MC Interrupt Flag 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="--nnn-nn" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3B" edc:_addr="0x40001C0B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="STOP" edc:nzwidth="0x1" edc:desc="Stop Status Flag"/>
            <edc:SFRFieldDef edc:cname="SLAVE" edc:nzwidth="0x1" edc:desc="Slave Status Flag"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PERBUFV" edc:nzwidth="0x1" edc:desc="Synchronization Busy Status"/>
            <edc:SFRFieldDef edc:cname="CCBUFV0" edc:nzwidth="0x1" edc:desc="Compare channel buffer 0 valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV1" edc:nzwidth="0x1" edc:desc="Compare channel buffer 1 valid"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="WAVE" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x40001C0C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="WAVEGEN" edc:nzwidth="0x2" edc:desc="Waveform Generation Mode">
              <edc:SFRFieldSemantic edc:cname="NFRQ" edc:desc="Normal frequency" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="MFRQ" edc:desc="Match frequency" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NPWM" edc:desc="Normal PWM" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="MPWM" edc:desc="Match PWM" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="DRVCTRL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x40001C0D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="INVEN0" edc:nzwidth="0x1" edc:desc="Output Waveform Invert Enable 0"/>
            <edc:SFRFieldDef edc:cname="INVEN1" edc:nzwidth="0x1" edc:desc="Output Waveform Invert Enable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x40001C0E"/>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x40001C0F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Run During Debug"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="------------------------rr-rrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xDF" edc:_addr="0x40001C10">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="swrst"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="enable"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB"/>
            <edc:SFRFieldDef edc:cname="STATUS" edc:nzwidth="0x1" edc:desc="STATUS"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x1" edc:desc="Counter"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CC0" edc:nzwidth="0x1" edc:desc="Compare Channel 0"/>
            <edc:SFRFieldDef edc:cname="CC1" edc:nzwidth="0x1" edc:desc="Compare Channel 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3EC" edc:_addr="0x40001C14"/>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="---nn-nn--nn--nnn---nnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1B338FFF" edc:_addr="0x40002000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x2" edc:desc="Timer Counter Mode">
              <edc:SFRFieldSemantic edc:cname="COUNT16" edc:desc="Counter in 16-bit mode" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="COUNT8" edc:desc="Counter in 8-bit mode" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="COUNT32" edc:desc="Counter in 32-bit mode" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PRESCSYNC" edc:nzwidth="0x2" edc:desc="Prescaler and Counter Synchronization">
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="Reload or reset the counter on next generic clock" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PRESC" edc:desc="Reload or reset the counter on next prescaler clock" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RESYNC" edc:desc="Reload or reset the counter on next generic clock and reset the prescaler counter" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Clock On Demand"/>
            <edc:SFRFieldDef edc:cname="PRESCALER" edc:nzwidth="0x3" edc:desc="Prescaler">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="Prescaler: GCLK_TC" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Prescaler: GCLK_TC/2" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="Prescaler: GCLK_TC/4" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="Prescaler: GCLK_TC/8" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="Prescaler: GCLK_TC/16" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="Prescaler: GCLK_TC/64" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="Prescaler: GCLK_TC/256" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="Prescaler: GCLK_TC/1024" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ALOCK" edc:nzwidth="0x1" edc:desc="Auto Lock"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DMAOS" edc:nzwidth="0x1" edc:desc="DMA One Shot"/>
            <edc:SFRFieldDef edc:cname="CAPTEN0" edc:nzwidth="0x1" edc:desc="Capture Channel 0 Enable"/>
            <edc:SFRFieldDef edc:cname="CAPTEN1" edc:nzwidth="0x1" edc:desc="Capture Channel 1 Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="COPEN0" edc:nzwidth="0x1" edc:desc="Capture On Pin 0 Enable"/>
            <edc:SFRFieldDef edc:cname="COPEN1" edc:nzwidth="0x1" edc:desc="Capture On Pin 1 Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CAPTMODE0" edc:nzwidth="0x2" edc:desc="Capture Mode Channel 0">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Default capture" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMIN" edc:desc="Minimum capture" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMAX" edc:desc="Maximum capture" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CAPTMODE1" edc:nzwidth="0x2" edc:desc="Capture mode Channel 1">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Default capture" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMIN" edc:desc="Minimum capture" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMAX" edc:desc="Maximum capture" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="CTRLBCLR" edc:nzwidth="0x8" edc:access="nnn--nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xE7" edc:_addr="0x40002004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Counter Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:nzwidth="0x1" edc:desc="One-Shot on Counter"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Force a start, restart or retrigger" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Force a stop" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update of double-buffered register" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force a read synchronization of COUNT" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DMAOS" edc:desc="One-shot DMA trigger" edc:when="(field &amp; 0x7) == 0x05"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="CTRLBSET" edc:nzwidth="0x8" edc:access="nnn--nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xE7" edc:_addr="0x40002005">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Counter Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:nzwidth="0x1" edc:desc="One-Shot on Counter"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Force a start, restart or retrigger" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Force a stop" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update of double-buffered register" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force a read synchronization of COUNT" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DMAOS" edc:desc="One-shot DMA trigger" edc:when="(field &amp; 0x7) == 0x05"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="EVCTRL" edc:nzwidth="0x10" edc:access="--nn---n--nn-nnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x3137" edc:_addr="0x40002006">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="EVACT" edc:nzwidth="0x3" edc:desc="Event Action">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Event action disabled" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Start, restart or retrigger TC on event" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="COUNT" edc:desc="Count on event" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="Start TC on event" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="STAMP" edc:desc="Time stamp capture" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="PPW" edc:desc="Period catured in CC0, pulse width in CC1" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="PWP" edc:desc="Period catured in CC1, pulse width in CC0" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="PW" edc:desc="Pulse width capture" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TCINV" edc:nzwidth="0x1" edc:desc="TC Event Input Polarity"/>
            <edc:SFRFieldDef edc:cname="TCEI" edc:nzwidth="0x1" edc:desc="TC Event Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="OVFEO" edc:nzwidth="0x1" edc:desc="Event Output Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="MCEO0" edc:nzwidth="0x1" edc:desc="MC Event Output Enable 0"/>
            <edc:SFRFieldDef edc:cname="MCEO1" edc:nzwidth="0x1" edc:desc="MC Event Output Enable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="--nn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x33" edc:_addr="0x40002008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="OVF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="ERR Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="MC Interrupt Disable 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="MC Interrupt Disable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="--nn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x33" edc:_addr="0x40002009">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="OVF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="ERR Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="MC Interrupt Enable 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="MC Interrupt Enable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="--nn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x33" edc:_addr="0x4000200A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="OVF Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="ERR Interrupt Flag"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="MC Interrupt Flag 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="MC Interrupt Flag 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="--nnn-nn" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3B" edc:_addr="0x4000200B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="STOP" edc:nzwidth="0x1" edc:desc="Stop Status Flag"/>
            <edc:SFRFieldDef edc:cname="SLAVE" edc:nzwidth="0x1" edc:desc="Slave Status Flag"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PERBUFV" edc:nzwidth="0x1" edc:desc="Synchronization Busy Status"/>
            <edc:SFRFieldDef edc:cname="CCBUFV0" edc:nzwidth="0x1" edc:desc="Compare channel buffer 0 valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV1" edc:nzwidth="0x1" edc:desc="Compare channel buffer 1 valid"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="WAVE" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4000200C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="WAVEGEN" edc:nzwidth="0x2" edc:desc="Waveform Generation Mode">
              <edc:SFRFieldSemantic edc:cname="NFRQ" edc:desc="Normal frequency" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="MFRQ" edc:desc="Match frequency" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NPWM" edc:desc="Normal PWM" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="MPWM" edc:desc="Match PWM" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="DRVCTRL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4000200D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="INVEN0" edc:nzwidth="0x1" edc:desc="Output Waveform Invert Enable 0"/>
            <edc:SFRFieldDef edc:cname="INVEN1" edc:nzwidth="0x1" edc:desc="Output Waveform Invert Enable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x4000200E"/>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x4000200F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Run During Debug"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="------------------------rr-rrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xDF" edc:_addr="0x40002010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="swrst"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="enable"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB"/>
            <edc:SFRFieldDef edc:cname="STATUS" edc:nzwidth="0x1" edc:desc="STATUS"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x1" edc:desc="Counter"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CC0" edc:nzwidth="0x1" edc:desc="Compare Channel 0"/>
            <edc:SFRFieldDef edc:cname="CC1" edc:nzwidth="0x1" edc:desc="Compare Channel 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3EC" edc:_addr="0x40002014"/>
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="---nn-nn--nn--nnn---nnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1B338FFF" edc:_addr="0x40002400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x2" edc:desc="Timer Counter Mode">
              <edc:SFRFieldSemantic edc:cname="COUNT16" edc:desc="Counter in 16-bit mode" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="COUNT8" edc:desc="Counter in 8-bit mode" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="COUNT32" edc:desc="Counter in 32-bit mode" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PRESCSYNC" edc:nzwidth="0x2" edc:desc="Prescaler and Counter Synchronization">
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="Reload or reset the counter on next generic clock" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PRESC" edc:desc="Reload or reset the counter on next prescaler clock" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RESYNC" edc:desc="Reload or reset the counter on next generic clock and reset the prescaler counter" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Clock On Demand"/>
            <edc:SFRFieldDef edc:cname="PRESCALER" edc:nzwidth="0x3" edc:desc="Prescaler">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="Prescaler: GCLK_TC" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Prescaler: GCLK_TC/2" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="Prescaler: GCLK_TC/4" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="Prescaler: GCLK_TC/8" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="Prescaler: GCLK_TC/16" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="Prescaler: GCLK_TC/64" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="Prescaler: GCLK_TC/256" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="Prescaler: GCLK_TC/1024" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ALOCK" edc:nzwidth="0x1" edc:desc="Auto Lock"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DMAOS" edc:nzwidth="0x1" edc:desc="DMA One Shot"/>
            <edc:SFRFieldDef edc:cname="CAPTEN0" edc:nzwidth="0x1" edc:desc="Capture Channel 0 Enable"/>
            <edc:SFRFieldDef edc:cname="CAPTEN1" edc:nzwidth="0x1" edc:desc="Capture Channel 1 Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="COPEN0" edc:nzwidth="0x1" edc:desc="Capture On Pin 0 Enable"/>
            <edc:SFRFieldDef edc:cname="COPEN1" edc:nzwidth="0x1" edc:desc="Capture On Pin 1 Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CAPTMODE0" edc:nzwidth="0x2" edc:desc="Capture Mode Channel 0">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Default capture" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMIN" edc:desc="Minimum capture" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMAX" edc:desc="Maximum capture" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CAPTMODE1" edc:nzwidth="0x2" edc:desc="Capture mode Channel 1">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Default capture" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMIN" edc:desc="Minimum capture" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMAX" edc:desc="Maximum capture" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="CTRLBCLR" edc:nzwidth="0x8" edc:access="nnn--nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xE7" edc:_addr="0x40002404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Counter Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:nzwidth="0x1" edc:desc="One-Shot on Counter"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Force a start, restart or retrigger" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Force a stop" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update of double-buffered register" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force a read synchronization of COUNT" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DMAOS" edc:desc="One-shot DMA trigger" edc:when="(field &amp; 0x7) == 0x05"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="CTRLBSET" edc:nzwidth="0x8" edc:access="nnn--nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xE7" edc:_addr="0x40002405">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Counter Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:nzwidth="0x1" edc:desc="One-Shot on Counter"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Force a start, restart or retrigger" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Force a stop" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update of double-buffered register" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force a read synchronization of COUNT" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DMAOS" edc:desc="One-shot DMA trigger" edc:when="(field &amp; 0x7) == 0x05"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="EVCTRL" edc:nzwidth="0x10" edc:access="--nn---n--nn-nnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x3137" edc:_addr="0x40002406">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="EVACT" edc:nzwidth="0x3" edc:desc="Event Action">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Event action disabled" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Start, restart or retrigger TC on event" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="COUNT" edc:desc="Count on event" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="Start TC on event" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="STAMP" edc:desc="Time stamp capture" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="PPW" edc:desc="Period catured in CC0, pulse width in CC1" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="PWP" edc:desc="Period catured in CC1, pulse width in CC0" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="PW" edc:desc="Pulse width capture" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TCINV" edc:nzwidth="0x1" edc:desc="TC Event Input Polarity"/>
            <edc:SFRFieldDef edc:cname="TCEI" edc:nzwidth="0x1" edc:desc="TC Event Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="OVFEO" edc:nzwidth="0x1" edc:desc="Event Output Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="MCEO0" edc:nzwidth="0x1" edc:desc="MC Event Output Enable 0"/>
            <edc:SFRFieldDef edc:cname="MCEO1" edc:nzwidth="0x1" edc:desc="MC Event Output Enable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="--nn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x33" edc:_addr="0x40002408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="OVF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="ERR Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="MC Interrupt Disable 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="MC Interrupt Disable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="--nn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x33" edc:_addr="0x40002409">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="OVF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="ERR Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="MC Interrupt Enable 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="MC Interrupt Enable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="--nn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x33" edc:_addr="0x4000240A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="OVF Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="ERR Interrupt Flag"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="MC Interrupt Flag 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="MC Interrupt Flag 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="--nnn-nn" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3B" edc:_addr="0x4000240B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="STOP" edc:nzwidth="0x1" edc:desc="Stop Status Flag"/>
            <edc:SFRFieldDef edc:cname="SLAVE" edc:nzwidth="0x1" edc:desc="Slave Status Flag"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PERBUFV" edc:nzwidth="0x1" edc:desc="Synchronization Busy Status"/>
            <edc:SFRFieldDef edc:cname="CCBUFV0" edc:nzwidth="0x1" edc:desc="Compare channel buffer 0 valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV1" edc:nzwidth="0x1" edc:desc="Compare channel buffer 1 valid"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="WAVE" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4000240C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="WAVEGEN" edc:nzwidth="0x2" edc:desc="Waveform Generation Mode">
              <edc:SFRFieldSemantic edc:cname="NFRQ" edc:desc="Normal frequency" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="MFRQ" edc:desc="Match frequency" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NPWM" edc:desc="Normal PWM" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="MPWM" edc:desc="Match PWM" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="DRVCTRL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4000240D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="INVEN0" edc:nzwidth="0x1" edc:desc="Output Waveform Invert Enable 0"/>
            <edc:SFRFieldDef edc:cname="INVEN1" edc:nzwidth="0x1" edc:desc="Output Waveform Invert Enable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x4000240E"/>
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x4000240F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Run During Debug"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="------------------------rr-rrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xDF" edc:_addr="0x40002410">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="swrst"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="enable"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB"/>
            <edc:SFRFieldDef edc:cname="STATUS" edc:nzwidth="0x1" edc:desc="STATUS"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x1" edc:desc="Counter"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CC0" edc:nzwidth="0x1" edc:desc="Compare Channel 0"/>
            <edc:SFRFieldDef edc:cname="CC1" edc:nzwidth="0x1" edc:desc="Compare Channel 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3EC" edc:_addr="0x40002414"/>
      <edc:SFRDef ltx:memberofperipheral="TC5" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="---nn-nn--nn--nnn---nnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1B338FFF" edc:_addr="0x40002800">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC5">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x2" edc:desc="Timer Counter Mode">
              <edc:SFRFieldSemantic edc:cname="COUNT16" edc:desc="Counter in 16-bit mode" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="COUNT8" edc:desc="Counter in 8-bit mode" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="COUNT32" edc:desc="Counter in 32-bit mode" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PRESCSYNC" edc:nzwidth="0x2" edc:desc="Prescaler and Counter Synchronization">
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="Reload or reset the counter on next generic clock" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PRESC" edc:desc="Reload or reset the counter on next prescaler clock" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RESYNC" edc:desc="Reload or reset the counter on next generic clock and reset the prescaler counter" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Clock On Demand"/>
            <edc:SFRFieldDef edc:cname="PRESCALER" edc:nzwidth="0x3" edc:desc="Prescaler">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="Prescaler: GCLK_TC" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Prescaler: GCLK_TC/2" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="Prescaler: GCLK_TC/4" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="Prescaler: GCLK_TC/8" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="Prescaler: GCLK_TC/16" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="Prescaler: GCLK_TC/64" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="Prescaler: GCLK_TC/256" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="Prescaler: GCLK_TC/1024" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ALOCK" edc:nzwidth="0x1" edc:desc="Auto Lock"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DMAOS" edc:nzwidth="0x1" edc:desc="DMA One Shot"/>
            <edc:SFRFieldDef edc:cname="CAPTEN0" edc:nzwidth="0x1" edc:desc="Capture Channel 0 Enable"/>
            <edc:SFRFieldDef edc:cname="CAPTEN1" edc:nzwidth="0x1" edc:desc="Capture Channel 1 Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="COPEN0" edc:nzwidth="0x1" edc:desc="Capture On Pin 0 Enable"/>
            <edc:SFRFieldDef edc:cname="COPEN1" edc:nzwidth="0x1" edc:desc="Capture On Pin 1 Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CAPTMODE0" edc:nzwidth="0x2" edc:desc="Capture Mode Channel 0">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Default capture" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMIN" edc:desc="Minimum capture" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMAX" edc:desc="Maximum capture" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CAPTMODE1" edc:nzwidth="0x2" edc:desc="Capture mode Channel 1">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Default capture" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMIN" edc:desc="Minimum capture" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMAX" edc:desc="Maximum capture" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC5" edc:cname="CTRLBCLR" edc:nzwidth="0x8" edc:access="nnn--nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xE7" edc:_addr="0x40002804">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC5">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Counter Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:nzwidth="0x1" edc:desc="One-Shot on Counter"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Force a start, restart or retrigger" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Force a stop" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update of double-buffered register" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force a read synchronization of COUNT" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DMAOS" edc:desc="One-shot DMA trigger" edc:when="(field &amp; 0x7) == 0x05"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC5" edc:cname="CTRLBSET" edc:nzwidth="0x8" edc:access="nnn--nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xE7" edc:_addr="0x40002805">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC5">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Counter Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:nzwidth="0x1" edc:desc="One-Shot on Counter"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Force a start, restart or retrigger" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Force a stop" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update of double-buffered register" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force a read synchronization of COUNT" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DMAOS" edc:desc="One-shot DMA trigger" edc:when="(field &amp; 0x7) == 0x05"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC5" edc:cname="EVCTRL" edc:nzwidth="0x10" edc:access="--nn---n--nn-nnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x3137" edc:_addr="0x40002806">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC5">
            <edc:SFRFieldDef edc:cname="EVACT" edc:nzwidth="0x3" edc:desc="Event Action">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Event action disabled" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Start, restart or retrigger TC on event" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="COUNT" edc:desc="Count on event" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="Start TC on event" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="STAMP" edc:desc="Time stamp capture" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="PPW" edc:desc="Period catured in CC0, pulse width in CC1" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="PWP" edc:desc="Period catured in CC1, pulse width in CC0" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="PW" edc:desc="Pulse width capture" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TCINV" edc:nzwidth="0x1" edc:desc="TC Event Input Polarity"/>
            <edc:SFRFieldDef edc:cname="TCEI" edc:nzwidth="0x1" edc:desc="TC Event Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="OVFEO" edc:nzwidth="0x1" edc:desc="Event Output Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="MCEO0" edc:nzwidth="0x1" edc:desc="MC Event Output Enable 0"/>
            <edc:SFRFieldDef edc:cname="MCEO1" edc:nzwidth="0x1" edc:desc="MC Event Output Enable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC5" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="--nn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x33" edc:_addr="0x40002808">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC5">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="OVF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="ERR Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="MC Interrupt Disable 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="MC Interrupt Disable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC5" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="--nn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x33" edc:_addr="0x40002809">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC5">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="OVF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="ERR Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="MC Interrupt Enable 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="MC Interrupt Enable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC5" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="--nn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x33" edc:_addr="0x4000280A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC5">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="OVF Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="ERR Interrupt Flag"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="MC Interrupt Flag 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="MC Interrupt Flag 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC5" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="--nnn-nn" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3B" edc:_addr="0x4000280B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC5">
            <edc:SFRFieldDef edc:cname="STOP" edc:nzwidth="0x1" edc:desc="Stop Status Flag"/>
            <edc:SFRFieldDef edc:cname="SLAVE" edc:nzwidth="0x1" edc:desc="Slave Status Flag"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PERBUFV" edc:nzwidth="0x1" edc:desc="Synchronization Busy Status"/>
            <edc:SFRFieldDef edc:cname="CCBUFV0" edc:nzwidth="0x1" edc:desc="Compare channel buffer 0 valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV1" edc:nzwidth="0x1" edc:desc="Compare channel buffer 1 valid"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC5" edc:cname="WAVE" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4000280C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC5">
            <edc:SFRFieldDef edc:cname="WAVEGEN" edc:nzwidth="0x2" edc:desc="Waveform Generation Mode">
              <edc:SFRFieldSemantic edc:cname="NFRQ" edc:desc="Normal frequency" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="MFRQ" edc:desc="Match frequency" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NPWM" edc:desc="Normal PWM" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="MPWM" edc:desc="Match PWM" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC5" edc:cname="DRVCTRL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4000280D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC5">
            <edc:SFRFieldDef edc:cname="INVEN0" edc:nzwidth="0x1" edc:desc="Output Waveform Invert Enable 0"/>
            <edc:SFRFieldDef edc:cname="INVEN1" edc:nzwidth="0x1" edc:desc="Output Waveform Invert Enable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x4000280E"/>
      <edc:SFRDef ltx:memberofperipheral="TC5" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x4000280F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC5">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Run During Debug"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC5" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="------------------------rr-rrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xDF" edc:_addr="0x40002810">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC5">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="swrst"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="enable"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB"/>
            <edc:SFRFieldDef edc:cname="STATUS" edc:nzwidth="0x1" edc:desc="STATUS"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x1" edc:desc="Counter"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CC0" edc:nzwidth="0x1" edc:desc="Compare Channel 0"/>
            <edc:SFRFieldDef edc:cname="CC1" edc:nzwidth="0x1" edc:desc="Compare Channel 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3EC" edc:_addr="0x40002814"/>
      <edc:SFRDef ltx:memberofperipheral="TC6" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="---nn-nn--nn--nnn---nnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1B338FFF" edc:_addr="0x40002C00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC6">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x2" edc:desc="Timer Counter Mode">
              <edc:SFRFieldSemantic edc:cname="COUNT16" edc:desc="Counter in 16-bit mode" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="COUNT8" edc:desc="Counter in 8-bit mode" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="COUNT32" edc:desc="Counter in 32-bit mode" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PRESCSYNC" edc:nzwidth="0x2" edc:desc="Prescaler and Counter Synchronization">
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="Reload or reset the counter on next generic clock" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PRESC" edc:desc="Reload or reset the counter on next prescaler clock" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RESYNC" edc:desc="Reload or reset the counter on next generic clock and reset the prescaler counter" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Clock On Demand"/>
            <edc:SFRFieldDef edc:cname="PRESCALER" edc:nzwidth="0x3" edc:desc="Prescaler">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="Prescaler: GCLK_TC" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Prescaler: GCLK_TC/2" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="Prescaler: GCLK_TC/4" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="Prescaler: GCLK_TC/8" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="Prescaler: GCLK_TC/16" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="Prescaler: GCLK_TC/64" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="Prescaler: GCLK_TC/256" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="Prescaler: GCLK_TC/1024" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ALOCK" edc:nzwidth="0x1" edc:desc="Auto Lock"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DMAOS" edc:nzwidth="0x1" edc:desc="DMA One Shot"/>
            <edc:SFRFieldDef edc:cname="CAPTEN0" edc:nzwidth="0x1" edc:desc="Capture Channel 0 Enable"/>
            <edc:SFRFieldDef edc:cname="CAPTEN1" edc:nzwidth="0x1" edc:desc="Capture Channel 1 Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="COPEN0" edc:nzwidth="0x1" edc:desc="Capture On Pin 0 Enable"/>
            <edc:SFRFieldDef edc:cname="COPEN1" edc:nzwidth="0x1" edc:desc="Capture On Pin 1 Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CAPTMODE0" edc:nzwidth="0x2" edc:desc="Capture Mode Channel 0">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Default capture" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMIN" edc:desc="Minimum capture" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMAX" edc:desc="Maximum capture" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CAPTMODE1" edc:nzwidth="0x2" edc:desc="Capture mode Channel 1">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Default capture" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMIN" edc:desc="Minimum capture" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMAX" edc:desc="Maximum capture" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC6" edc:cname="CTRLBCLR" edc:nzwidth="0x8" edc:access="nnn--nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xE7" edc:_addr="0x40002C04">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC6">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Counter Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:nzwidth="0x1" edc:desc="One-Shot on Counter"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Force a start, restart or retrigger" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Force a stop" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update of double-buffered register" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force a read synchronization of COUNT" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DMAOS" edc:desc="One-shot DMA trigger" edc:when="(field &amp; 0x7) == 0x05"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC6" edc:cname="CTRLBSET" edc:nzwidth="0x8" edc:access="nnn--nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xE7" edc:_addr="0x40002C05">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC6">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Counter Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:nzwidth="0x1" edc:desc="One-Shot on Counter"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Force a start, restart or retrigger" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Force a stop" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update of double-buffered register" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force a read synchronization of COUNT" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DMAOS" edc:desc="One-shot DMA trigger" edc:when="(field &amp; 0x7) == 0x05"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC6" edc:cname="EVCTRL" edc:nzwidth="0x10" edc:access="--nn---n--nn-nnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x3137" edc:_addr="0x40002C06">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC6">
            <edc:SFRFieldDef edc:cname="EVACT" edc:nzwidth="0x3" edc:desc="Event Action">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Event action disabled" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Start, restart or retrigger TC on event" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="COUNT" edc:desc="Count on event" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="Start TC on event" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="STAMP" edc:desc="Time stamp capture" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="PPW" edc:desc="Period catured in CC0, pulse width in CC1" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="PWP" edc:desc="Period catured in CC1, pulse width in CC0" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="PW" edc:desc="Pulse width capture" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TCINV" edc:nzwidth="0x1" edc:desc="TC Event Input Polarity"/>
            <edc:SFRFieldDef edc:cname="TCEI" edc:nzwidth="0x1" edc:desc="TC Event Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="OVFEO" edc:nzwidth="0x1" edc:desc="Event Output Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="MCEO0" edc:nzwidth="0x1" edc:desc="MC Event Output Enable 0"/>
            <edc:SFRFieldDef edc:cname="MCEO1" edc:nzwidth="0x1" edc:desc="MC Event Output Enable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC6" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="--nn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x33" edc:_addr="0x40002C08">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC6">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="OVF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="ERR Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="MC Interrupt Disable 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="MC Interrupt Disable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC6" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="--nn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x33" edc:_addr="0x40002C09">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC6">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="OVF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="ERR Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="MC Interrupt Enable 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="MC Interrupt Enable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC6" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="--nn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x33" edc:_addr="0x40002C0A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC6">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="OVF Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="ERR Interrupt Flag"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="MC Interrupt Flag 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="MC Interrupt Flag 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC6" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="--nnn-nn" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3B" edc:_addr="0x40002C0B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC6">
            <edc:SFRFieldDef edc:cname="STOP" edc:nzwidth="0x1" edc:desc="Stop Status Flag"/>
            <edc:SFRFieldDef edc:cname="SLAVE" edc:nzwidth="0x1" edc:desc="Slave Status Flag"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PERBUFV" edc:nzwidth="0x1" edc:desc="Synchronization Busy Status"/>
            <edc:SFRFieldDef edc:cname="CCBUFV0" edc:nzwidth="0x1" edc:desc="Compare channel buffer 0 valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV1" edc:nzwidth="0x1" edc:desc="Compare channel buffer 1 valid"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC6" edc:cname="WAVE" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x40002C0C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC6">
            <edc:SFRFieldDef edc:cname="WAVEGEN" edc:nzwidth="0x2" edc:desc="Waveform Generation Mode">
              <edc:SFRFieldSemantic edc:cname="NFRQ" edc:desc="Normal frequency" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="MFRQ" edc:desc="Match frequency" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NPWM" edc:desc="Normal PWM" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="MPWM" edc:desc="Match PWM" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC6" edc:cname="DRVCTRL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x40002C0D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC6">
            <edc:SFRFieldDef edc:cname="INVEN0" edc:nzwidth="0x1" edc:desc="Output Waveform Invert Enable 0"/>
            <edc:SFRFieldDef edc:cname="INVEN1" edc:nzwidth="0x1" edc:desc="Output Waveform Invert Enable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x40002C0E"/>
      <edc:SFRDef ltx:memberofperipheral="TC6" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x40002C0F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC6">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Run During Debug"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC6" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="------------------------rr-rrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xDF" edc:_addr="0x40002C10">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC6">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="swrst"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="enable"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB"/>
            <edc:SFRFieldDef edc:cname="STATUS" edc:nzwidth="0x1" edc:desc="STATUS"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x1" edc:desc="Counter"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CC0" edc:nzwidth="0x1" edc:desc="Compare Channel 0"/>
            <edc:SFRFieldDef edc:cname="CC1" edc:nzwidth="0x1" edc:desc="Compare Channel 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3EC" edc:_addr="0x40002C14"/>
      <edc:SFRDef ltx:memberofperipheral="TC7" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="---nn-nn--nn--nnn---nnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1B338FFF" edc:_addr="0x40003000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC7">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x2" edc:desc="Timer Counter Mode">
              <edc:SFRFieldSemantic edc:cname="COUNT16" edc:desc="Counter in 16-bit mode" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="COUNT8" edc:desc="Counter in 8-bit mode" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="COUNT32" edc:desc="Counter in 32-bit mode" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PRESCSYNC" edc:nzwidth="0x2" edc:desc="Prescaler and Counter Synchronization">
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="Reload or reset the counter on next generic clock" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PRESC" edc:desc="Reload or reset the counter on next prescaler clock" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RESYNC" edc:desc="Reload or reset the counter on next generic clock and reset the prescaler counter" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Clock On Demand"/>
            <edc:SFRFieldDef edc:cname="PRESCALER" edc:nzwidth="0x3" edc:desc="Prescaler">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="Prescaler: GCLK_TC" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Prescaler: GCLK_TC/2" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="Prescaler: GCLK_TC/4" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="Prescaler: GCLK_TC/8" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="Prescaler: GCLK_TC/16" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="Prescaler: GCLK_TC/64" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="Prescaler: GCLK_TC/256" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="Prescaler: GCLK_TC/1024" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ALOCK" edc:nzwidth="0x1" edc:desc="Auto Lock"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DMAOS" edc:nzwidth="0x1" edc:desc="DMA One Shot"/>
            <edc:SFRFieldDef edc:cname="CAPTEN0" edc:nzwidth="0x1" edc:desc="Capture Channel 0 Enable"/>
            <edc:SFRFieldDef edc:cname="CAPTEN1" edc:nzwidth="0x1" edc:desc="Capture Channel 1 Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="COPEN0" edc:nzwidth="0x1" edc:desc="Capture On Pin 0 Enable"/>
            <edc:SFRFieldDef edc:cname="COPEN1" edc:nzwidth="0x1" edc:desc="Capture On Pin 1 Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CAPTMODE0" edc:nzwidth="0x2" edc:desc="Capture Mode Channel 0">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Default capture" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMIN" edc:desc="Minimum capture" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMAX" edc:desc="Maximum capture" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CAPTMODE1" edc:nzwidth="0x2" edc:desc="Capture mode Channel 1">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Default capture" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMIN" edc:desc="Minimum capture" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMAX" edc:desc="Maximum capture" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC7" edc:cname="CTRLBCLR" edc:nzwidth="0x8" edc:access="nnn--nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xE7" edc:_addr="0x40003004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC7">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Counter Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:nzwidth="0x1" edc:desc="One-Shot on Counter"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Force a start, restart or retrigger" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Force a stop" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update of double-buffered register" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force a read synchronization of COUNT" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DMAOS" edc:desc="One-shot DMA trigger" edc:when="(field &amp; 0x7) == 0x05"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC7" edc:cname="CTRLBSET" edc:nzwidth="0x8" edc:access="nnn--nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xE7" edc:_addr="0x40003005">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC7">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Counter Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:nzwidth="0x1" edc:desc="One-Shot on Counter"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Force a start, restart or retrigger" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Force a stop" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update of double-buffered register" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force a read synchronization of COUNT" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DMAOS" edc:desc="One-shot DMA trigger" edc:when="(field &amp; 0x7) == 0x05"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC7" edc:cname="EVCTRL" edc:nzwidth="0x10" edc:access="--nn---n--nn-nnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x3137" edc:_addr="0x40003006">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC7">
            <edc:SFRFieldDef edc:cname="EVACT" edc:nzwidth="0x3" edc:desc="Event Action">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Event action disabled" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Start, restart or retrigger TC on event" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="COUNT" edc:desc="Count on event" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="Start TC on event" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="STAMP" edc:desc="Time stamp capture" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="PPW" edc:desc="Period catured in CC0, pulse width in CC1" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="PWP" edc:desc="Period catured in CC1, pulse width in CC0" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="PW" edc:desc="Pulse width capture" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TCINV" edc:nzwidth="0x1" edc:desc="TC Event Input Polarity"/>
            <edc:SFRFieldDef edc:cname="TCEI" edc:nzwidth="0x1" edc:desc="TC Event Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="OVFEO" edc:nzwidth="0x1" edc:desc="Event Output Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="MCEO0" edc:nzwidth="0x1" edc:desc="MC Event Output Enable 0"/>
            <edc:SFRFieldDef edc:cname="MCEO1" edc:nzwidth="0x1" edc:desc="MC Event Output Enable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC7" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="--nn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x33" edc:_addr="0x40003008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC7">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="OVF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="ERR Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="MC Interrupt Disable 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="MC Interrupt Disable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC7" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="--nn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x33" edc:_addr="0x40003009">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC7">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="OVF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="ERR Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="MC Interrupt Enable 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="MC Interrupt Enable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC7" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="--nn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x33" edc:_addr="0x4000300A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC7">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="OVF Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="ERR Interrupt Flag"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="MC Interrupt Flag 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="MC Interrupt Flag 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC7" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="--nnn-nn" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3B" edc:_addr="0x4000300B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC7">
            <edc:SFRFieldDef edc:cname="STOP" edc:nzwidth="0x1" edc:desc="Stop Status Flag"/>
            <edc:SFRFieldDef edc:cname="SLAVE" edc:nzwidth="0x1" edc:desc="Slave Status Flag"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PERBUFV" edc:nzwidth="0x1" edc:desc="Synchronization Busy Status"/>
            <edc:SFRFieldDef edc:cname="CCBUFV0" edc:nzwidth="0x1" edc:desc="Compare channel buffer 0 valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV1" edc:nzwidth="0x1" edc:desc="Compare channel buffer 1 valid"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC7" edc:cname="WAVE" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4000300C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC7">
            <edc:SFRFieldDef edc:cname="WAVEGEN" edc:nzwidth="0x2" edc:desc="Waveform Generation Mode">
              <edc:SFRFieldSemantic edc:cname="NFRQ" edc:desc="Normal frequency" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="MFRQ" edc:desc="Match frequency" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NPWM" edc:desc="Normal PWM" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="MPWM" edc:desc="Match PWM" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC7" edc:cname="DRVCTRL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4000300D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC7">
            <edc:SFRFieldDef edc:cname="INVEN0" edc:nzwidth="0x1" edc:desc="Output Waveform Invert Enable 0"/>
            <edc:SFRFieldDef edc:cname="INVEN1" edc:nzwidth="0x1" edc:desc="Output Waveform Invert Enable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x4000300E"/>
      <edc:SFRDef ltx:memberofperipheral="TC7" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x4000300F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC7">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Run During Debug"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC7" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="------------------------rr-rrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xDF" edc:_addr="0x40003010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC7">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="swrst"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="enable"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB"/>
            <edc:SFRFieldDef edc:cname="STATUS" edc:nzwidth="0x1" edc:desc="STATUS"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x1" edc:desc="Counter"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CC0" edc:nzwidth="0x1" edc:desc="Compare Channel 0"/>
            <edc:SFRFieldDef edc:cname="CC1" edc:nzwidth="0x1" edc:desc="Compare Channel 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3EC" edc:_addr="0x40003014"/>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="--nnnnnnn-------nnnnnnnn-nn---nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F80FF63" edc:_addr="0x40003400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RESOLUTION" edc:nzwidth="0x2" edc:desc="Enhanced Resolution">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Dithering is disabled" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DITH4" edc:desc="Dithering is done every 16 PWM frames" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DITH5" edc:desc="Dithering is done every 32 PWM frames" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DITH6" edc:desc="Dithering is done every 64 PWM frames" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PRESCALER" edc:nzwidth="0x3" edc:desc="Prescaler">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="No division" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Divide by 2" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="Divide by 4" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="Divide by 8" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="Divide by 16" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="Divide by 64" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="Divide by 256" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="Divide by 1024" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:SFRFieldDef edc:cname="PRESCSYNC" edc:nzwidth="0x2" edc:desc="Prescaler and Counter Synchronization Selection">
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="Reload or reset counter on next GCLK" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PRESC" edc:desc="Reload or reset counter on next prescaler clock" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RESYNC" edc:desc="Reload or reset counter on next GCLK and reset prescaler counter" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ALOCK" edc:nzwidth="0x1" edc:desc="Auto Lock"/>
            <edc:SFRFieldDef edc:cname="MSYNC" edc:nzwidth="0x1" edc:desc="Master Synchronization (only for TCC Slave Instance)"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DMAOS" edc:nzwidth="0x1" edc:desc="DMA One-shot Trigger Mode"/>
            <edc:SFRFieldDef edc:cname="CPTEN0" edc:nzwidth="0x1" edc:desc="Capture Channel 0 Enable"/>
            <edc:SFRFieldDef edc:cname="CPTEN1" edc:nzwidth="0x1" edc:desc="Capture Channel 1 Enable"/>
            <edc:SFRFieldDef edc:cname="CPTEN2" edc:nzwidth="0x1" edc:desc="Capture Channel 2 Enable"/>
            <edc:SFRFieldDef edc:cname="CPTEN3" edc:nzwidth="0x1" edc:desc="Capture Channel 3 Enable"/>
            <edc:SFRFieldDef edc:cname="CPTEN4" edc:nzwidth="0x1" edc:desc="Capture Channel 4 Enable"/>
            <edc:SFRFieldDef edc:cname="CPTEN5" edc:nzwidth="0x1" edc:desc="Capture Channel 5 Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="CTRLBCLR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x40003404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Counter Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:nzwidth="0x1" edc:desc="One-Shot"/>
            <edc:SFRFieldDef edc:cname="IDXCMD" edc:nzwidth="0x2" edc:desc="Ramp Index Command">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Command disabled: Index toggles between cycles A and B" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set index: cycle B will be forced in the next cycle" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear index: cycle A will be forced in the next cycle" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="HOLD" edc:desc="Hold index: the next cycle will be the same as the current cycle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="TCC Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Clear start, restart or retrigger" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Force stop" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update or double buffered registers" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force COUNT read synchronization" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DMAOS" edc:desc="One-shot DMA trigger" edc:when="(field &amp; 0x7) == 0x05"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="CTRLBSET" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x40003405">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Counter Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:nzwidth="0x1" edc:desc="One-Shot"/>
            <edc:SFRFieldDef edc:cname="IDXCMD" edc:nzwidth="0x2" edc:desc="Ramp Index Command">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Command disabled: Index toggles between cycles A and B" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set index: cycle B will be forced in the next cycle" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear index: cycle A will be forced in the next cycle" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="HOLD" edc:desc="Hold index: the next cycle will be the same as the current cycle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="TCC Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Clear start, restart or retrigger" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Force stop" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update or double buffered registers" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force COUNT read synchronization" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DMAOS" edc:desc="One-shot DMA trigger" edc:when="(field &amp; 0x7) == 0x05"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x40003406"/>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="------------------rrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3FFF" edc:_addr="0x40003408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Swrst Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="Ctrlb Busy"/>
            <edc:SFRFieldDef edc:cname="STATUS" edc:nzwidth="0x1" edc:desc="Status Busy"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x1" edc:desc="Count Busy"/>
            <edc:SFRFieldDef edc:cname="PATT" edc:nzwidth="0x1" edc:desc="Pattern Busy"/>
            <edc:SFRFieldDef edc:cname="WAVE" edc:nzwidth="0x1" edc:desc="Wave Busy"/>
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x1" edc:desc="Period Busy"/>
            <edc:SFRFieldDef edc:cname="CC0" edc:nzwidth="0x1" edc:desc="Compare Channel 0 Busy"/>
            <edc:SFRFieldDef edc:cname="CC1" edc:nzwidth="0x1" edc:desc="Compare Channel 1 Busy"/>
            <edc:SFRFieldDef edc:cname="CC2" edc:nzwidth="0x1" edc:desc="Compare Channel 2 Busy"/>
            <edc:SFRFieldDef edc:cname="CC3" edc:nzwidth="0x1" edc:desc="Compare Channel 3 Busy"/>
            <edc:SFRFieldDef edc:cname="CC4" edc:nzwidth="0x1" edc:desc="Compare Channel 4 Busy"/>
            <edc:SFRFieldDef edc:cname="CC5" edc:nzwidth="0x1" edc:desc="Compare Channel 5 Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="FCTRLA" edc:nzwidth="0x20" edc:access="----nnnnnnnnnnnnnnnnnnnnnnnnn-nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFFB" edc:_addr="0x4000340C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="SRC" edc:nzwidth="0x2" edc:desc="Fault A Source">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Fault input disabled" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="MCEx (x=0,1) event input" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="INVERT" edc:desc="Inverted MCEx (x=0,1) event input" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="ALTFAULT" edc:desc="Alternate fault (A or B) state at the end of the previous period" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="KEEP" edc:nzwidth="0x1" edc:desc="Fault A Keeper"/>
            <edc:SFRFieldDef edc:cname="QUAL" edc:nzwidth="0x1" edc:desc="Fault A Qualification"/>
            <edc:SFRFieldDef edc:cname="BLANK" edc:nzwidth="0x2" edc:desc="Fault A Blanking Mode">
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="Blanking applied from start of the ramp" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Blanking applied from rising edge of the output waveform" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Blanking applied from falling edge of the output waveform" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Blanking applied from each toggle of the output waveform" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RESTART" edc:nzwidth="0x1" edc:desc="Fault A Restart"/>
            <edc:SFRFieldDef edc:cname="HALT" edc:nzwidth="0x2" edc:desc="Fault A Halt Mode">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Halt action disabled" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="HW" edc:desc="Hardware halt action" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SW" edc:desc="Software halt action" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="NR" edc:desc="Non-recoverable fault" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CHSEL" edc:nzwidth="0x2" edc:desc="Fault A Capture Channel">
              <edc:SFRFieldSemantic edc:cname="CC0" edc:desc="Capture value stored in channel 0" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="CC1" edc:desc="Capture value stored in channel 1" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CC2" edc:desc="Capture value stored in channel 2" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="CC3" edc:desc="Capture value stored in channel 3" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CAPTURE" edc:nzwidth="0x3" edc:desc="Fault A Capture Action">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="No capture" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="CAPT" edc:desc="Capture on fault" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMIN" edc:desc="Minimum capture" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMAX" edc:desc="Maximum capture" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="LOCMIN" edc:desc="Minimum local detection" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="LOCMAX" edc:desc="Maximum local detection" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="DERIV0" edc:desc="Minimum and maximum local detection" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMARK" edc:desc="Capture with ramp index as MSB value" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BLANKPRESC" edc:nzwidth="0x1" edc:desc="Fault A Blanking Prescaler"/>
            <edc:SFRFieldDef edc:cname="BLANKVAL" edc:nzwidth="0x8" edc:desc="Fault A Blanking Time"/>
            <edc:SFRFieldDef edc:cname="FILTERVAL" edc:nzwidth="0x4" edc:desc="Fault A Filter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="FCTRLB" edc:nzwidth="0x20" edc:access="----nnnnnnnnnnnnnnnnnnnnnnnnn-nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFFB" edc:_addr="0x40003410">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="SRC" edc:nzwidth="0x2" edc:desc="Fault B Source">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Fault input disabled" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="MCEx (x=0,1) event input" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="INVERT" edc:desc="Inverted MCEx (x=0,1) event input" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="ALTFAULT" edc:desc="Alternate fault (A or B) state at the end of the previous period" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="KEEP" edc:nzwidth="0x1" edc:desc="Fault B Keeper"/>
            <edc:SFRFieldDef edc:cname="QUAL" edc:nzwidth="0x1" edc:desc="Fault B Qualification"/>
            <edc:SFRFieldDef edc:cname="BLANK" edc:nzwidth="0x2" edc:desc="Fault B Blanking Mode">
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="Blanking applied from start of the ramp" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Blanking applied from rising edge of the output waveform" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Blanking applied from falling edge of the output waveform" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Blanking applied from each toggle of the output waveform" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RESTART" edc:nzwidth="0x1" edc:desc="Fault B Restart"/>
            <edc:SFRFieldDef edc:cname="HALT" edc:nzwidth="0x2" edc:desc="Fault B Halt Mode">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Halt action disabled" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="HW" edc:desc="Hardware halt action" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SW" edc:desc="Software halt action" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="NR" edc:desc="Non-recoverable fault" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CHSEL" edc:nzwidth="0x2" edc:desc="Fault B Capture Channel">
              <edc:SFRFieldSemantic edc:cname="CC0" edc:desc="Capture value stored in channel 0" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="CC1" edc:desc="Capture value stored in channel 1" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CC2" edc:desc="Capture value stored in channel 2" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="CC3" edc:desc="Capture value stored in channel 3" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CAPTURE" edc:nzwidth="0x3" edc:desc="Fault B Capture Action">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="No capture" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="CAPT" edc:desc="Capture on fault" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMIN" edc:desc="Minimum capture" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMAX" edc:desc="Maximum capture" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="LOCMIN" edc:desc="Minimum local detection" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="LOCMAX" edc:desc="Maximum local detection" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="DERIV0" edc:desc="Minimum and maximum local detection" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMARK" edc:desc="Capture with ramp index as MSB value" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BLANKPRESC" edc:nzwidth="0x1" edc:desc="Fault B Blanking Prescaler"/>
            <edc:SFRFieldDef edc:cname="BLANKVAL" edc:nzwidth="0x8" edc:desc="Fault B Blanking Time"/>
            <edc:SFRFieldDef edc:cname="FILTERVAL" edc:nzwidth="0x4" edc:desc="Fault B Filter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="WEXCTRL" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnn----nnnn------nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF0F03" edc:_addr="0x40003414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="OTMX" edc:nzwidth="0x2" edc:desc="Output Matrix"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="DTIEN0" edc:nzwidth="0x1" edc:desc="Dead-time Insertion Generator 0 Enable"/>
            <edc:SFRFieldDef edc:cname="DTIEN1" edc:nzwidth="0x1" edc:desc="Dead-time Insertion Generator 1 Enable"/>
            <edc:SFRFieldDef edc:cname="DTIEN2" edc:nzwidth="0x1" edc:desc="Dead-time Insertion Generator 2 Enable"/>
            <edc:SFRFieldDef edc:cname="DTIEN3" edc:nzwidth="0x1" edc:desc="Dead-time Insertion Generator 3 Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="DTLS" edc:nzwidth="0x8" edc:desc="Dead-time Low Side Outputs Value"/>
            <edc:SFRFieldDef edc:cname="DTHS" edc:nzwidth="0x8" edc:desc="Dead-time High Side Outputs Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="DRVCTRL" edc:nzwidth="0x20" edc:access="nnnnnnnn--nnnnnn--nnnnnn--nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF3F3F3F" edc:_addr="0x40003418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="NRE0" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 0 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE1" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 1 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE2" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 2 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE3" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 3 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE4" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 4 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE5" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 5 Output Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="NRV0" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 0 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV1" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 1 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV2" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 2 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV3" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 3 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV4" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 4 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV5" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 5 Output Value"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="INVEN0" edc:nzwidth="0x1" edc:desc="Output Waveform 0 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN1" edc:nzwidth="0x1" edc:desc="Output Waveform 1 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN2" edc:nzwidth="0x1" edc:desc="Output Waveform 2 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN3" edc:nzwidth="0x1" edc:desc="Output Waveform 3 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN4" edc:nzwidth="0x1" edc:desc="Output Waveform 4 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN5" edc:nzwidth="0x1" edc:desc="Output Waveform 5 Inversion"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FILTERVAL0" edc:nzwidth="0x4" edc:desc="Non-Recoverable Fault Input 0 Filter Value"/>
            <edc:SFRFieldDef edc:cname="FILTERVAL1" edc:nzwidth="0x4" edc:desc="Non-Recoverable Fault Input 1 Filter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x4000341C"/>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-----n-n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x5" edc:_addr="0x4000341E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Running Mode"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FDDBD" edc:nzwidth="0x1" edc:desc="Fault Detection on Debug Break Detection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x4000341F"/>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="EVCTRL" edc:nzwidth="0x20" edc:access="--nnnnnn--nnnnnnnnnn-nnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F3FF7FF" edc:_addr="0x40003420">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="EVACT0" edc:nzwidth="0x3" edc:desc="Timer/counter Input Event0 Action">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Event action disabled" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Start, restart or re-trigger counter on event" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="COUNTEV" edc:desc="Count on event" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="Start counter on event" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="INC" edc:desc="Increment counter on event" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="COUNT" edc:desc="Count on active state of asynchronous event" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="STAMP" edc:desc="Stamp capture" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="FAULT" edc:desc="Non-recoverable fault" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EVACT1" edc:nzwidth="0x3" edc:desc="Timer/counter Input Event1 Action">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Event action disabled" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Re-trigger counter on event" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DIR" edc:desc="Direction control" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Stop counter on event" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="DEC" edc:desc="Decrement counter on event" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="PPW" edc:desc="Period capture value in CC0 register, pulse width capture value in CC1 register" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="PWP" edc:desc="Period capture value in CC1 register, pulse width capture value in CC0 register" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="FAULT" edc:desc="Non-recoverable fault" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CNTSEL" edc:nzwidth="0x2" edc:desc="Timer/counter Output Event Mode">
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="An interrupt/event is generated when a new counter cycle starts" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="END" edc:desc="An interrupt/event is generated when a counter cycle ends" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="BETWEEN" edc:desc="An interrupt/event is generated when a counter cycle ends, except for the first and last cycles" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="BOUNDARY" edc:desc="An interrupt/event is generated when a new counter cycle starts or a counter cycle ends" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="OVFEO" edc:nzwidth="0x1" edc:desc="Overflow/Underflow Output Event Enable"/>
            <edc:SFRFieldDef edc:cname="TRGEO" edc:nzwidth="0x1" edc:desc="Retrigger Output Event Enable"/>
            <edc:SFRFieldDef edc:cname="CNTEO" edc:nzwidth="0x1" edc:desc="Timer/counter Output Event Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TCINV0" edc:nzwidth="0x1" edc:desc="Inverted Event 0 Input Enable"/>
            <edc:SFRFieldDef edc:cname="TCINV1" edc:nzwidth="0x1" edc:desc="Inverted Event 1 Input Enable"/>
            <edc:SFRFieldDef edc:cname="TCEI0" edc:nzwidth="0x1" edc:desc="Timer/counter Event 0 Input Enable"/>
            <edc:SFRFieldDef edc:cname="TCEI1" edc:nzwidth="0x1" edc:desc="Timer/counter Event 1 Input Enable"/>
            <edc:SFRFieldDef edc:cname="MCEI0" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 0 Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="MCEI1" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 1 Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="MCEI2" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 2 Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="MCEI3" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 3 Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="MCEI4" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 4 Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="MCEI5" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 5 Event Input Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MCEO0" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 0 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="MCEO1" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 1 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="MCEO2" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 2 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="MCEO3" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 3 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="MCEO4" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 4 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="MCEO5" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 5 Event Output Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="INTENCLR" edc:nzwidth="0x20" edc:access="----------nnnnnnnnnnnn------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3FFC0F" edc:_addr="0x40003424">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRG" edc:nzwidth="0x1" edc:desc="Retrigger Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CNT" edc:nzwidth="0x1" edc:desc="Counter Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Error Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="UFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Update Fault Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Debug Fault Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULTA" edc:nzwidth="0x1" edc:desc="Recoverable Fault A Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULTB" edc:nzwidth="0x1" edc:desc="Recoverable Fault B Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULT0" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULT1" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC2" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 2 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC3" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 3 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC4" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 4 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC5" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 5 Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="INTENSET" edc:nzwidth="0x20" edc:access="----------nnnnnnnnnnnn------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3FFC0F" edc:_addr="0x40003428">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRG" edc:nzwidth="0x1" edc:desc="Retrigger Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CNT" edc:nzwidth="0x1" edc:desc="Counter Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Error Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="UFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Update Fault Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Debug Fault Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULTA" edc:nzwidth="0x1" edc:desc="Recoverable Fault A Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULTB" edc:nzwidth="0x1" edc:desc="Recoverable Fault B Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULT0" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULT1" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC2" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 2 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC3" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 3 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC4" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 4 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC5" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 5 Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="INTFLAG" edc:nzwidth="0x20" edc:access="----------nnnnnnnnnnnn------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3FFC0F" edc:_addr="0x4000342C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow"/>
            <edc:SFRFieldDef edc:cname="TRG" edc:nzwidth="0x1" edc:desc="Retrigger"/>
            <edc:SFRFieldDef edc:cname="CNT" edc:nzwidth="0x1" edc:desc="Counter"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Error"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="UFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Update Fault"/>
            <edc:SFRFieldDef edc:cname="DFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Debug Fault"/>
            <edc:SFRFieldDef edc:cname="FAULTA" edc:nzwidth="0x1" edc:desc="Recoverable Fault A"/>
            <edc:SFRFieldDef edc:cname="FAULTB" edc:nzwidth="0x1" edc:desc="Recoverable Fault B"/>
            <edc:SFRFieldDef edc:cname="FAULT0" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 0"/>
            <edc:SFRFieldDef edc:cname="FAULT1" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 1"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="Match or Capture 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="Match or Capture 1"/>
            <edc:SFRFieldDef edc:cname="MC2" edc:nzwidth="0x1" edc:desc="Match or Capture 2"/>
            <edc:SFRFieldDef edc:cname="MC3" edc:nzwidth="0x1" edc:desc="Match or Capture 3"/>
            <edc:SFRFieldDef edc:cname="MC4" edc:nzwidth="0x1" edc:desc="Match or Capture 4"/>
            <edc:SFRFieldDef edc:cname="MC5" edc:nzwidth="0x1" edc:desc="Match or Capture 5"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="STATUS" edc:nzwidth="0x20" edc:access="--nnnnnn--nnnnnnnnnnnnnnn-nnnnnn" edc:por="00000000000000000000000000000001" edc:mclr="00000000000000000000000000000001" edc:impl="0x3F3FFFBF" edc:_addr="0x40003430">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="STOP" edc:nzwidth="0x1" edc:desc="Stop"/>
            <edc:SFRFieldDef edc:cname="IDX" edc:nzwidth="0x1" edc:desc="Ramp"/>
            <edc:SFRFieldDef edc:cname="UFS" edc:nzwidth="0x1" edc:desc="Non-recoverable Update Fault State"/>
            <edc:SFRFieldDef edc:cname="DFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Debug Fault State"/>
            <edc:SFRFieldDef edc:cname="SLAVE" edc:nzwidth="0x1" edc:desc="Slave"/>
            <edc:SFRFieldDef edc:cname="PATTBUFV" edc:nzwidth="0x1" edc:desc="Pattern Buffer Valid"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PERBUFV" edc:nzwidth="0x1" edc:desc="Period Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="FAULTAIN" edc:nzwidth="0x1" edc:desc="Recoverable Fault A Input"/>
            <edc:SFRFieldDef edc:cname="FAULTBIN" edc:nzwidth="0x1" edc:desc="Recoverable Fault B Input"/>
            <edc:SFRFieldDef edc:cname="FAULT0IN" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault0 Input"/>
            <edc:SFRFieldDef edc:cname="FAULT1IN" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault1 Input"/>
            <edc:SFRFieldDef edc:cname="FAULTA" edc:nzwidth="0x1" edc:desc="Recoverable Fault A State"/>
            <edc:SFRFieldDef edc:cname="FAULTB" edc:nzwidth="0x1" edc:desc="Recoverable Fault B State"/>
            <edc:SFRFieldDef edc:cname="FAULT0" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 0 State"/>
            <edc:SFRFieldDef edc:cname="FAULT1" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 1 State"/>
            <edc:SFRFieldDef edc:cname="CCBUFV0" edc:nzwidth="0x1" edc:desc="Compare Channel 0 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV1" edc:nzwidth="0x1" edc:desc="Compare Channel 1 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV2" edc:nzwidth="0x1" edc:desc="Compare Channel 2 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV3" edc:nzwidth="0x1" edc:desc="Compare Channel 3 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV4" edc:nzwidth="0x1" edc:desc="Compare Channel 4 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV5" edc:nzwidth="0x1" edc:desc="Compare Channel 5 Buffer Valid"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP0" edc:nzwidth="0x1" edc:desc="Compare Channel 0 Value"/>
            <edc:SFRFieldDef edc:cname="CMP1" edc:nzwidth="0x1" edc:desc="Compare Channel 1 Value"/>
            <edc:SFRFieldDef edc:cname="CMP2" edc:nzwidth="0x1" edc:desc="Compare Channel 2 Value"/>
            <edc:SFRFieldDef edc:cname="CMP3" edc:nzwidth="0x1" edc:desc="Compare Channel 3 Value"/>
            <edc:SFRFieldDef edc:cname="CMP4" edc:nzwidth="0x1" edc:desc="Compare Channel 4 Value"/>
            <edc:SFRFieldDef edc:cname="CMP5" edc:nzwidth="0x1" edc:desc="Compare Channel 5 Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="COUNT" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x40003434">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x18" edc:desc="Counter Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x14" edc:desc="Counter Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x13" edc:desc="Counter Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x12" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="PATT" edc:nzwidth="0x10" edc:access="--nnnnnn--nnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x3F3F" edc:_addr="0x40003438">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="PGE0" edc:nzwidth="0x1" edc:desc="Pattern Generator 0 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE1" edc:nzwidth="0x1" edc:desc="Pattern Generator 1 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE2" edc:nzwidth="0x1" edc:desc="Pattern Generator 2 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE3" edc:nzwidth="0x1" edc:desc="Pattern Generator 3 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE4" edc:nzwidth="0x1" edc:desc="Pattern Generator 4 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE5" edc:nzwidth="0x1" edc:desc="Pattern Generator 5 Output Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PGV0" edc:nzwidth="0x1" edc:desc="Pattern Generator 0 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV1" edc:nzwidth="0x1" edc:desc="Pattern Generator 1 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV2" edc:nzwidth="0x1" edc:desc="Pattern Generator 2 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV3" edc:nzwidth="0x1" edc:desc="Pattern Generator 3 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV4" edc:nzwidth="0x1" edc:desc="Pattern Generator 4 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV5" edc:nzwidth="0x1" edc:desc="Pattern Generator 5 Output Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x4000343A"/>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="WAVE" edc:nzwidth="0x20" edc:access="----nnnn--nnnnnn----nnnnn-nn-nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF3F0FB7" edc:_addr="0x4000343C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="WAVEGEN" edc:nzwidth="0x3" edc:desc="Waveform Generation">
              <edc:SFRFieldSemantic edc:cname="NFRQ" edc:desc="Normal frequency" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="MFRQ" edc:desc="Match frequency" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NPWM" edc:desc="Normal PWM" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DSCRITICAL" edc:desc="Dual-slope critical" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DSBOTTOM" edc:desc="Dual-slope with interrupt/event condition when COUNT reaches ZERO" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="DSBOTH" edc:desc="Dual-slope with interrupt/event condition when COUNT reaches ZERO or TOP" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="DSTOP" edc:desc="Dual-slope with interrupt/event condition when COUNT reaches TOP" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RAMP" edc:nzwidth="0x2" edc:desc="Ramp Mode">
              <edc:SFRFieldSemantic edc:cname="RAMP1" edc:desc="RAMP1 operation" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RAMP2A" edc:desc="Alternative RAMP2 operation" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RAMP2" edc:desc="RAMP2 operation" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RAMP2C" edc:desc="Critical RAMP2 operation" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CIPEREN" edc:nzwidth="0x1" edc:desc="Circular period Enable"/>
            <edc:SFRFieldDef edc:cname="CICCEN0" edc:nzwidth="0x1" edc:desc="Circular Channel 0 Enable"/>
            <edc:SFRFieldDef edc:cname="CICCEN1" edc:nzwidth="0x1" edc:desc="Circular Channel 1 Enable"/>
            <edc:SFRFieldDef edc:cname="CICCEN2" edc:nzwidth="0x1" edc:desc="Circular Channel 2 Enable"/>
            <edc:SFRFieldDef edc:cname="CICCEN3" edc:nzwidth="0x1" edc:desc="Circular Channel 3 Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="POL0" edc:nzwidth="0x1" edc:desc="Channel 0 Polarity"/>
            <edc:SFRFieldDef edc:cname="POL1" edc:nzwidth="0x1" edc:desc="Channel 1 Polarity"/>
            <edc:SFRFieldDef edc:cname="POL2" edc:nzwidth="0x1" edc:desc="Channel 2 Polarity"/>
            <edc:SFRFieldDef edc:cname="POL3" edc:nzwidth="0x1" edc:desc="Channel 3 Polarity"/>
            <edc:SFRFieldDef edc:cname="POL4" edc:nzwidth="0x1" edc:desc="Channel 4 Polarity"/>
            <edc:SFRFieldDef edc:cname="POL5" edc:nzwidth="0x1" edc:desc="Channel 5 Polarity"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SWAP0" edc:nzwidth="0x1" edc:desc="Swap DTI Output Pair 0"/>
            <edc:SFRFieldDef edc:cname="SWAP1" edc:nzwidth="0x1" edc:desc="Swap DTI Output Pair 1"/>
            <edc:SFRFieldDef edc:cname="SWAP2" edc:nzwidth="0x1" edc:desc="Swap DTI Output Pair 2"/>
            <edc:SFRFieldDef edc:cname="SWAP3" edc:nzwidth="0x1" edc:desc="Swap DTI Output Pair 3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="PER" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="11111111111111111111111111111111" edc:mclr="11111111111111111111111111111111" edc:impl="0xFFFFFF" edc:_addr="0x40003440">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x18" edc:desc="Period Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x14" edc:desc="Period Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x13" edc:desc="Period Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x12" edc:desc="Period Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="CC0" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x40003444">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="CC1" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x40003448">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="CC2" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x4000344C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="CC3" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x40003450">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="CC4" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x40003454">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="CC5" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x40003458">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x4000345C"/>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="PATTBUF" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0x40003464">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="PGEB0" edc:nzwidth="0x1" edc:desc="Pattern Generator 0 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB1" edc:nzwidth="0x1" edc:desc="Pattern Generator 1 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB2" edc:nzwidth="0x1" edc:desc="Pattern Generator 2 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB3" edc:nzwidth="0x1" edc:desc="Pattern Generator 3 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB4" edc:nzwidth="0x1" edc:desc="Pattern Generator 4 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB5" edc:nzwidth="0x1" edc:desc="Pattern Generator 5 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB6" edc:nzwidth="0x1" edc:desc="Pattern Generator 6 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB7" edc:nzwidth="0x1" edc:desc="Pattern Generator 7 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB0" edc:nzwidth="0x1" edc:desc="Pattern Generator 0 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGVB1" edc:nzwidth="0x1" edc:desc="Pattern Generator 1 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGVB2" edc:nzwidth="0x1" edc:desc="Pattern Generator 2 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGVB3" edc:nzwidth="0x1" edc:desc="Pattern Generator 3 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGVB4" edc:nzwidth="0x1" edc:desc="Pattern Generator 4 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGVB5" edc:nzwidth="0x1" edc:desc="Pattern Generator 5 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGVB6" edc:nzwidth="0x1" edc:desc="Pattern Generator 6 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGVB7" edc:nzwidth="0x1" edc:desc="Pattern Generator 7 Output Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x6" edc:_addr="0x40003466"/>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="PERBUF" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="11111111111111111111111111111111" edc:mclr="11111111111111111111111111111111" edc:impl="0xFFFFFF" edc:_addr="0x4000346C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x18" edc:desc="Period Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x14" edc:desc="Period Buffer Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x13" edc:desc="Period Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x12" edc:desc="Period Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="CCBUF0" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x40003470">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="DITHERBUF" edc:nzwidth="0x14" edc:desc="Dithering Buffer Cycle Number"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="CCBUF1" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x40003474">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="DITHERBUF" edc:nzwidth="0x14" edc:desc="Dithering Buffer Cycle Number"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="CCBUF2" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x40003478">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="DITHERBUF" edc:nzwidth="0x14" edc:desc="Dithering Buffer Cycle Number"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="CCBUF3" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x4000347C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="DITHERBUF" edc:nzwidth="0x14" edc:desc="Dithering Buffer Cycle Number"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="CCBUF4" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x40003480">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="DITHERBUF" edc:nzwidth="0x14" edc:desc="Dithering Buffer Cycle Number"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="CCBUF5" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x40003484">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="DITHERBUF" edc:nzwidth="0x14" edc:desc="Dithering Buffer Cycle Number"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x378" edc:_addr="0x40003488"/>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="--nnnnnnn-------nnnnnnnn-nn---nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F80FF63" edc:_addr="0x40003800">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RESOLUTION" edc:nzwidth="0x2" edc:desc="Enhanced Resolution">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Dithering is disabled" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DITH4" edc:desc="Dithering is done every 16 PWM frames" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DITH5" edc:desc="Dithering is done every 32 PWM frames" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DITH6" edc:desc="Dithering is done every 64 PWM frames" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PRESCALER" edc:nzwidth="0x3" edc:desc="Prescaler">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="No division" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Divide by 2" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="Divide by 4" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="Divide by 8" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="Divide by 16" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="Divide by 64" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="Divide by 256" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="Divide by 1024" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:SFRFieldDef edc:cname="PRESCSYNC" edc:nzwidth="0x2" edc:desc="Prescaler and Counter Synchronization Selection">
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="Reload or reset counter on next GCLK" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PRESC" edc:desc="Reload or reset counter on next prescaler clock" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RESYNC" edc:desc="Reload or reset counter on next GCLK and reset prescaler counter" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ALOCK" edc:nzwidth="0x1" edc:desc="Auto Lock"/>
            <edc:SFRFieldDef edc:cname="MSYNC" edc:nzwidth="0x1" edc:desc="Master Synchronization (only for TCC Slave Instance)"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DMAOS" edc:nzwidth="0x1" edc:desc="DMA One-shot Trigger Mode"/>
            <edc:SFRFieldDef edc:cname="CPTEN0" edc:nzwidth="0x1" edc:desc="Capture Channel 0 Enable"/>
            <edc:SFRFieldDef edc:cname="CPTEN1" edc:nzwidth="0x1" edc:desc="Capture Channel 1 Enable"/>
            <edc:SFRFieldDef edc:cname="CPTEN2" edc:nzwidth="0x1" edc:desc="Capture Channel 2 Enable"/>
            <edc:SFRFieldDef edc:cname="CPTEN3" edc:nzwidth="0x1" edc:desc="Capture Channel 3 Enable"/>
            <edc:SFRFieldDef edc:cname="CPTEN4" edc:nzwidth="0x1" edc:desc="Capture Channel 4 Enable"/>
            <edc:SFRFieldDef edc:cname="CPTEN5" edc:nzwidth="0x1" edc:desc="Capture Channel 5 Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="CTRLBCLR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x40003804">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Counter Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:nzwidth="0x1" edc:desc="One-Shot"/>
            <edc:SFRFieldDef edc:cname="IDXCMD" edc:nzwidth="0x2" edc:desc="Ramp Index Command">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Command disabled: Index toggles between cycles A and B" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set index: cycle B will be forced in the next cycle" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear index: cycle A will be forced in the next cycle" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="HOLD" edc:desc="Hold index: the next cycle will be the same as the current cycle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="TCC Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Clear start, restart or retrigger" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Force stop" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update or double buffered registers" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force COUNT read synchronization" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DMAOS" edc:desc="One-shot DMA trigger" edc:when="(field &amp; 0x7) == 0x05"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="CTRLBSET" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x40003805">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Counter Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:nzwidth="0x1" edc:desc="One-Shot"/>
            <edc:SFRFieldDef edc:cname="IDXCMD" edc:nzwidth="0x2" edc:desc="Ramp Index Command">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Command disabled: Index toggles between cycles A and B" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set index: cycle B will be forced in the next cycle" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear index: cycle A will be forced in the next cycle" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="HOLD" edc:desc="Hold index: the next cycle will be the same as the current cycle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="TCC Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Clear start, restart or retrigger" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Force stop" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update or double buffered registers" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force COUNT read synchronization" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DMAOS" edc:desc="One-shot DMA trigger" edc:when="(field &amp; 0x7) == 0x05"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x40003806"/>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="------------------rrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3FFF" edc:_addr="0x40003808">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Swrst Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="Ctrlb Busy"/>
            <edc:SFRFieldDef edc:cname="STATUS" edc:nzwidth="0x1" edc:desc="Status Busy"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x1" edc:desc="Count Busy"/>
            <edc:SFRFieldDef edc:cname="PATT" edc:nzwidth="0x1" edc:desc="Pattern Busy"/>
            <edc:SFRFieldDef edc:cname="WAVE" edc:nzwidth="0x1" edc:desc="Wave Busy"/>
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x1" edc:desc="Period Busy"/>
            <edc:SFRFieldDef edc:cname="CC0" edc:nzwidth="0x1" edc:desc="Compare Channel 0 Busy"/>
            <edc:SFRFieldDef edc:cname="CC1" edc:nzwidth="0x1" edc:desc="Compare Channel 1 Busy"/>
            <edc:SFRFieldDef edc:cname="CC2" edc:nzwidth="0x1" edc:desc="Compare Channel 2 Busy"/>
            <edc:SFRFieldDef edc:cname="CC3" edc:nzwidth="0x1" edc:desc="Compare Channel 3 Busy"/>
            <edc:SFRFieldDef edc:cname="CC4" edc:nzwidth="0x1" edc:desc="Compare Channel 4 Busy"/>
            <edc:SFRFieldDef edc:cname="CC5" edc:nzwidth="0x1" edc:desc="Compare Channel 5 Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="FCTRLA" edc:nzwidth="0x20" edc:access="----nnnnnnnnnnnnnnnnnnnnnnnnn-nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFFB" edc:_addr="0x4000380C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="SRC" edc:nzwidth="0x2" edc:desc="Fault A Source">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Fault input disabled" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="MCEx (x=0,1) event input" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="INVERT" edc:desc="Inverted MCEx (x=0,1) event input" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="ALTFAULT" edc:desc="Alternate fault (A or B) state at the end of the previous period" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="KEEP" edc:nzwidth="0x1" edc:desc="Fault A Keeper"/>
            <edc:SFRFieldDef edc:cname="QUAL" edc:nzwidth="0x1" edc:desc="Fault A Qualification"/>
            <edc:SFRFieldDef edc:cname="BLANK" edc:nzwidth="0x2" edc:desc="Fault A Blanking Mode">
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="Blanking applied from start of the ramp" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Blanking applied from rising edge of the output waveform" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Blanking applied from falling edge of the output waveform" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Blanking applied from each toggle of the output waveform" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RESTART" edc:nzwidth="0x1" edc:desc="Fault A Restart"/>
            <edc:SFRFieldDef edc:cname="HALT" edc:nzwidth="0x2" edc:desc="Fault A Halt Mode">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Halt action disabled" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="HW" edc:desc="Hardware halt action" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SW" edc:desc="Software halt action" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="NR" edc:desc="Non-recoverable fault" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CHSEL" edc:nzwidth="0x2" edc:desc="Fault A Capture Channel">
              <edc:SFRFieldSemantic edc:cname="CC0" edc:desc="Capture value stored in channel 0" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="CC1" edc:desc="Capture value stored in channel 1" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CC2" edc:desc="Capture value stored in channel 2" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="CC3" edc:desc="Capture value stored in channel 3" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CAPTURE" edc:nzwidth="0x3" edc:desc="Fault A Capture Action">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="No capture" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="CAPT" edc:desc="Capture on fault" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMIN" edc:desc="Minimum capture" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMAX" edc:desc="Maximum capture" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="LOCMIN" edc:desc="Minimum local detection" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="LOCMAX" edc:desc="Maximum local detection" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="DERIV0" edc:desc="Minimum and maximum local detection" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMARK" edc:desc="Capture with ramp index as MSB value" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BLANKPRESC" edc:nzwidth="0x1" edc:desc="Fault A Blanking Prescaler"/>
            <edc:SFRFieldDef edc:cname="BLANKVAL" edc:nzwidth="0x8" edc:desc="Fault A Blanking Time"/>
            <edc:SFRFieldDef edc:cname="FILTERVAL" edc:nzwidth="0x4" edc:desc="Fault A Filter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="FCTRLB" edc:nzwidth="0x20" edc:access="----nnnnnnnnnnnnnnnnnnnnnnnnn-nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFFB" edc:_addr="0x40003810">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="SRC" edc:nzwidth="0x2" edc:desc="Fault B Source">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Fault input disabled" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="MCEx (x=0,1) event input" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="INVERT" edc:desc="Inverted MCEx (x=0,1) event input" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="ALTFAULT" edc:desc="Alternate fault (A or B) state at the end of the previous period" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="KEEP" edc:nzwidth="0x1" edc:desc="Fault B Keeper"/>
            <edc:SFRFieldDef edc:cname="QUAL" edc:nzwidth="0x1" edc:desc="Fault B Qualification"/>
            <edc:SFRFieldDef edc:cname="BLANK" edc:nzwidth="0x2" edc:desc="Fault B Blanking Mode">
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="Blanking applied from start of the ramp" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Blanking applied from rising edge of the output waveform" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Blanking applied from falling edge of the output waveform" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Blanking applied from each toggle of the output waveform" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RESTART" edc:nzwidth="0x1" edc:desc="Fault B Restart"/>
            <edc:SFRFieldDef edc:cname="HALT" edc:nzwidth="0x2" edc:desc="Fault B Halt Mode">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Halt action disabled" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="HW" edc:desc="Hardware halt action" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SW" edc:desc="Software halt action" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="NR" edc:desc="Non-recoverable fault" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CHSEL" edc:nzwidth="0x2" edc:desc="Fault B Capture Channel">
              <edc:SFRFieldSemantic edc:cname="CC0" edc:desc="Capture value stored in channel 0" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="CC1" edc:desc="Capture value stored in channel 1" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CC2" edc:desc="Capture value stored in channel 2" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="CC3" edc:desc="Capture value stored in channel 3" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CAPTURE" edc:nzwidth="0x3" edc:desc="Fault B Capture Action">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="No capture" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="CAPT" edc:desc="Capture on fault" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMIN" edc:desc="Minimum capture" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMAX" edc:desc="Maximum capture" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="LOCMIN" edc:desc="Minimum local detection" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="LOCMAX" edc:desc="Maximum local detection" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="DERIV0" edc:desc="Minimum and maximum local detection" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMARK" edc:desc="Capture with ramp index as MSB value" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BLANKPRESC" edc:nzwidth="0x1" edc:desc="Fault B Blanking Prescaler"/>
            <edc:SFRFieldDef edc:cname="BLANKVAL" edc:nzwidth="0x8" edc:desc="Fault B Blanking Time"/>
            <edc:SFRFieldDef edc:cname="FILTERVAL" edc:nzwidth="0x4" edc:desc="Fault B Filter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="WEXCTRL" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnn----nnnn------nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF0F03" edc:_addr="0x40003814">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="OTMX" edc:nzwidth="0x2" edc:desc="Output Matrix"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="DTIEN0" edc:nzwidth="0x1" edc:desc="Dead-time Insertion Generator 0 Enable"/>
            <edc:SFRFieldDef edc:cname="DTIEN1" edc:nzwidth="0x1" edc:desc="Dead-time Insertion Generator 1 Enable"/>
            <edc:SFRFieldDef edc:cname="DTIEN2" edc:nzwidth="0x1" edc:desc="Dead-time Insertion Generator 2 Enable"/>
            <edc:SFRFieldDef edc:cname="DTIEN3" edc:nzwidth="0x1" edc:desc="Dead-time Insertion Generator 3 Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="DTLS" edc:nzwidth="0x8" edc:desc="Dead-time Low Side Outputs Value"/>
            <edc:SFRFieldDef edc:cname="DTHS" edc:nzwidth="0x8" edc:desc="Dead-time High Side Outputs Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="DRVCTRL" edc:nzwidth="0x20" edc:access="nnnnnnnn--nnnnnn--nnnnnn--nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF3F3F3F" edc:_addr="0x40003818">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="NRE0" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 0 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE1" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 1 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE2" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 2 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE3" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 3 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE4" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 4 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE5" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 5 Output Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="NRV0" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 0 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV1" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 1 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV2" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 2 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV3" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 3 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV4" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 4 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV5" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 5 Output Value"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="INVEN0" edc:nzwidth="0x1" edc:desc="Output Waveform 0 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN1" edc:nzwidth="0x1" edc:desc="Output Waveform 1 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN2" edc:nzwidth="0x1" edc:desc="Output Waveform 2 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN3" edc:nzwidth="0x1" edc:desc="Output Waveform 3 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN4" edc:nzwidth="0x1" edc:desc="Output Waveform 4 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN5" edc:nzwidth="0x1" edc:desc="Output Waveform 5 Inversion"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FILTERVAL0" edc:nzwidth="0x4" edc:desc="Non-Recoverable Fault Input 0 Filter Value"/>
            <edc:SFRFieldDef edc:cname="FILTERVAL1" edc:nzwidth="0x4" edc:desc="Non-Recoverable Fault Input 1 Filter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x4000381C"/>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-----n-n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x5" edc:_addr="0x4000381E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Running Mode"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FDDBD" edc:nzwidth="0x1" edc:desc="Fault Detection on Debug Break Detection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x4000381F"/>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="EVCTRL" edc:nzwidth="0x20" edc:access="--nnnnnn--nnnnnnnnnn-nnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F3FF7FF" edc:_addr="0x40003820">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="EVACT0" edc:nzwidth="0x3" edc:desc="Timer/counter Input Event0 Action">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Event action disabled" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Start, restart or re-trigger counter on event" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="COUNTEV" edc:desc="Count on event" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="Start counter on event" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="INC" edc:desc="Increment counter on event" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="COUNT" edc:desc="Count on active state of asynchronous event" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="STAMP" edc:desc="Stamp capture" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="FAULT" edc:desc="Non-recoverable fault" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EVACT1" edc:nzwidth="0x3" edc:desc="Timer/counter Input Event1 Action">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Event action disabled" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Re-trigger counter on event" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DIR" edc:desc="Direction control" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Stop counter on event" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="DEC" edc:desc="Decrement counter on event" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="PPW" edc:desc="Period capture value in CC0 register, pulse width capture value in CC1 register" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="PWP" edc:desc="Period capture value in CC1 register, pulse width capture value in CC0 register" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="FAULT" edc:desc="Non-recoverable fault" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CNTSEL" edc:nzwidth="0x2" edc:desc="Timer/counter Output Event Mode">
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="An interrupt/event is generated when a new counter cycle starts" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="END" edc:desc="An interrupt/event is generated when a counter cycle ends" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="BETWEEN" edc:desc="An interrupt/event is generated when a counter cycle ends, except for the first and last cycles" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="BOUNDARY" edc:desc="An interrupt/event is generated when a new counter cycle starts or a counter cycle ends" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="OVFEO" edc:nzwidth="0x1" edc:desc="Overflow/Underflow Output Event Enable"/>
            <edc:SFRFieldDef edc:cname="TRGEO" edc:nzwidth="0x1" edc:desc="Retrigger Output Event Enable"/>
            <edc:SFRFieldDef edc:cname="CNTEO" edc:nzwidth="0x1" edc:desc="Timer/counter Output Event Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TCINV0" edc:nzwidth="0x1" edc:desc="Inverted Event 0 Input Enable"/>
            <edc:SFRFieldDef edc:cname="TCINV1" edc:nzwidth="0x1" edc:desc="Inverted Event 1 Input Enable"/>
            <edc:SFRFieldDef edc:cname="TCEI0" edc:nzwidth="0x1" edc:desc="Timer/counter Event 0 Input Enable"/>
            <edc:SFRFieldDef edc:cname="TCEI1" edc:nzwidth="0x1" edc:desc="Timer/counter Event 1 Input Enable"/>
            <edc:SFRFieldDef edc:cname="MCEI0" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 0 Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="MCEI1" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 1 Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="MCEI2" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 2 Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="MCEI3" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 3 Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="MCEI4" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 4 Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="MCEI5" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 5 Event Input Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MCEO0" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 0 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="MCEO1" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 1 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="MCEO2" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 2 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="MCEO3" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 3 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="MCEO4" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 4 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="MCEO5" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 5 Event Output Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="INTENCLR" edc:nzwidth="0x20" edc:access="----------nnnnnnnnnnnn------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3FFC0F" edc:_addr="0x40003824">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRG" edc:nzwidth="0x1" edc:desc="Retrigger Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CNT" edc:nzwidth="0x1" edc:desc="Counter Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Error Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="UFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Update Fault Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Debug Fault Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULTA" edc:nzwidth="0x1" edc:desc="Recoverable Fault A Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULTB" edc:nzwidth="0x1" edc:desc="Recoverable Fault B Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULT0" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULT1" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC2" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 2 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC3" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 3 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC4" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 4 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC5" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 5 Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="INTENSET" edc:nzwidth="0x20" edc:access="----------nnnnnnnnnnnn------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3FFC0F" edc:_addr="0x40003828">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRG" edc:nzwidth="0x1" edc:desc="Retrigger Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CNT" edc:nzwidth="0x1" edc:desc="Counter Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Error Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="UFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Update Fault Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Debug Fault Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULTA" edc:nzwidth="0x1" edc:desc="Recoverable Fault A Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULTB" edc:nzwidth="0x1" edc:desc="Recoverable Fault B Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULT0" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULT1" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC2" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 2 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC3" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 3 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC4" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 4 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC5" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 5 Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="INTFLAG" edc:nzwidth="0x20" edc:access="----------nnnnnnnnnnnn------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3FFC0F" edc:_addr="0x4000382C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow"/>
            <edc:SFRFieldDef edc:cname="TRG" edc:nzwidth="0x1" edc:desc="Retrigger"/>
            <edc:SFRFieldDef edc:cname="CNT" edc:nzwidth="0x1" edc:desc="Counter"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Error"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="UFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Update Fault"/>
            <edc:SFRFieldDef edc:cname="DFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Debug Fault"/>
            <edc:SFRFieldDef edc:cname="FAULTA" edc:nzwidth="0x1" edc:desc="Recoverable Fault A"/>
            <edc:SFRFieldDef edc:cname="FAULTB" edc:nzwidth="0x1" edc:desc="Recoverable Fault B"/>
            <edc:SFRFieldDef edc:cname="FAULT0" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 0"/>
            <edc:SFRFieldDef edc:cname="FAULT1" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 1"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="Match or Capture 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="Match or Capture 1"/>
            <edc:SFRFieldDef edc:cname="MC2" edc:nzwidth="0x1" edc:desc="Match or Capture 2"/>
            <edc:SFRFieldDef edc:cname="MC3" edc:nzwidth="0x1" edc:desc="Match or Capture 3"/>
            <edc:SFRFieldDef edc:cname="MC4" edc:nzwidth="0x1" edc:desc="Match or Capture 4"/>
            <edc:SFRFieldDef edc:cname="MC5" edc:nzwidth="0x1" edc:desc="Match or Capture 5"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="STATUS" edc:nzwidth="0x20" edc:access="--nnnnnn--nnnnnnnnnnnnnnn-nnnnnn" edc:por="00000000000000000000000000000001" edc:mclr="00000000000000000000000000000001" edc:impl="0x3F3FFFBF" edc:_addr="0x40003830">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="STOP" edc:nzwidth="0x1" edc:desc="Stop"/>
            <edc:SFRFieldDef edc:cname="IDX" edc:nzwidth="0x1" edc:desc="Ramp"/>
            <edc:SFRFieldDef edc:cname="UFS" edc:nzwidth="0x1" edc:desc="Non-recoverable Update Fault State"/>
            <edc:SFRFieldDef edc:cname="DFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Debug Fault State"/>
            <edc:SFRFieldDef edc:cname="SLAVE" edc:nzwidth="0x1" edc:desc="Slave"/>
            <edc:SFRFieldDef edc:cname="PATTBUFV" edc:nzwidth="0x1" edc:desc="Pattern Buffer Valid"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PERBUFV" edc:nzwidth="0x1" edc:desc="Period Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="FAULTAIN" edc:nzwidth="0x1" edc:desc="Recoverable Fault A Input"/>
            <edc:SFRFieldDef edc:cname="FAULTBIN" edc:nzwidth="0x1" edc:desc="Recoverable Fault B Input"/>
            <edc:SFRFieldDef edc:cname="FAULT0IN" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault0 Input"/>
            <edc:SFRFieldDef edc:cname="FAULT1IN" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault1 Input"/>
            <edc:SFRFieldDef edc:cname="FAULTA" edc:nzwidth="0x1" edc:desc="Recoverable Fault A State"/>
            <edc:SFRFieldDef edc:cname="FAULTB" edc:nzwidth="0x1" edc:desc="Recoverable Fault B State"/>
            <edc:SFRFieldDef edc:cname="FAULT0" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 0 State"/>
            <edc:SFRFieldDef edc:cname="FAULT1" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 1 State"/>
            <edc:SFRFieldDef edc:cname="CCBUFV0" edc:nzwidth="0x1" edc:desc="Compare Channel 0 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV1" edc:nzwidth="0x1" edc:desc="Compare Channel 1 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV2" edc:nzwidth="0x1" edc:desc="Compare Channel 2 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV3" edc:nzwidth="0x1" edc:desc="Compare Channel 3 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV4" edc:nzwidth="0x1" edc:desc="Compare Channel 4 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV5" edc:nzwidth="0x1" edc:desc="Compare Channel 5 Buffer Valid"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP0" edc:nzwidth="0x1" edc:desc="Compare Channel 0 Value"/>
            <edc:SFRFieldDef edc:cname="CMP1" edc:nzwidth="0x1" edc:desc="Compare Channel 1 Value"/>
            <edc:SFRFieldDef edc:cname="CMP2" edc:nzwidth="0x1" edc:desc="Compare Channel 2 Value"/>
            <edc:SFRFieldDef edc:cname="CMP3" edc:nzwidth="0x1" edc:desc="Compare Channel 3 Value"/>
            <edc:SFRFieldDef edc:cname="CMP4" edc:nzwidth="0x1" edc:desc="Compare Channel 4 Value"/>
            <edc:SFRFieldDef edc:cname="CMP5" edc:nzwidth="0x1" edc:desc="Compare Channel 5 Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="COUNT" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x40003834">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x18" edc:desc="Counter Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x14" edc:desc="Counter Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x13" edc:desc="Counter Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x12" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="PATT" edc:nzwidth="0x10" edc:access="--nnnnnn--nnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x3F3F" edc:_addr="0x40003838">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="PGE0" edc:nzwidth="0x1" edc:desc="Pattern Generator 0 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE1" edc:nzwidth="0x1" edc:desc="Pattern Generator 1 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE2" edc:nzwidth="0x1" edc:desc="Pattern Generator 2 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE3" edc:nzwidth="0x1" edc:desc="Pattern Generator 3 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE4" edc:nzwidth="0x1" edc:desc="Pattern Generator 4 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE5" edc:nzwidth="0x1" edc:desc="Pattern Generator 5 Output Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PGV0" edc:nzwidth="0x1" edc:desc="Pattern Generator 0 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV1" edc:nzwidth="0x1" edc:desc="Pattern Generator 1 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV2" edc:nzwidth="0x1" edc:desc="Pattern Generator 2 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV3" edc:nzwidth="0x1" edc:desc="Pattern Generator 3 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV4" edc:nzwidth="0x1" edc:desc="Pattern Generator 4 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV5" edc:nzwidth="0x1" edc:desc="Pattern Generator 5 Output Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x4000383A"/>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="WAVE" edc:nzwidth="0x20" edc:access="----nnnn--nnnnnn----nnnnn-nn-nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF3F0FB7" edc:_addr="0x4000383C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="WAVEGEN" edc:nzwidth="0x3" edc:desc="Waveform Generation">
              <edc:SFRFieldSemantic edc:cname="NFRQ" edc:desc="Normal frequency" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="MFRQ" edc:desc="Match frequency" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NPWM" edc:desc="Normal PWM" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DSCRITICAL" edc:desc="Dual-slope critical" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DSBOTTOM" edc:desc="Dual-slope with interrupt/event condition when COUNT reaches ZERO" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="DSBOTH" edc:desc="Dual-slope with interrupt/event condition when COUNT reaches ZERO or TOP" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="DSTOP" edc:desc="Dual-slope with interrupt/event condition when COUNT reaches TOP" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RAMP" edc:nzwidth="0x2" edc:desc="Ramp Mode">
              <edc:SFRFieldSemantic edc:cname="RAMP1" edc:desc="RAMP1 operation" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RAMP2A" edc:desc="Alternative RAMP2 operation" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RAMP2" edc:desc="RAMP2 operation" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RAMP2C" edc:desc="Critical RAMP2 operation" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CIPEREN" edc:nzwidth="0x1" edc:desc="Circular period Enable"/>
            <edc:SFRFieldDef edc:cname="CICCEN0" edc:nzwidth="0x1" edc:desc="Circular Channel 0 Enable"/>
            <edc:SFRFieldDef edc:cname="CICCEN1" edc:nzwidth="0x1" edc:desc="Circular Channel 1 Enable"/>
            <edc:SFRFieldDef edc:cname="CICCEN2" edc:nzwidth="0x1" edc:desc="Circular Channel 2 Enable"/>
            <edc:SFRFieldDef edc:cname="CICCEN3" edc:nzwidth="0x1" edc:desc="Circular Channel 3 Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="POL0" edc:nzwidth="0x1" edc:desc="Channel 0 Polarity"/>
            <edc:SFRFieldDef edc:cname="POL1" edc:nzwidth="0x1" edc:desc="Channel 1 Polarity"/>
            <edc:SFRFieldDef edc:cname="POL2" edc:nzwidth="0x1" edc:desc="Channel 2 Polarity"/>
            <edc:SFRFieldDef edc:cname="POL3" edc:nzwidth="0x1" edc:desc="Channel 3 Polarity"/>
            <edc:SFRFieldDef edc:cname="POL4" edc:nzwidth="0x1" edc:desc="Channel 4 Polarity"/>
            <edc:SFRFieldDef edc:cname="POL5" edc:nzwidth="0x1" edc:desc="Channel 5 Polarity"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SWAP0" edc:nzwidth="0x1" edc:desc="Swap DTI Output Pair 0"/>
            <edc:SFRFieldDef edc:cname="SWAP1" edc:nzwidth="0x1" edc:desc="Swap DTI Output Pair 1"/>
            <edc:SFRFieldDef edc:cname="SWAP2" edc:nzwidth="0x1" edc:desc="Swap DTI Output Pair 2"/>
            <edc:SFRFieldDef edc:cname="SWAP3" edc:nzwidth="0x1" edc:desc="Swap DTI Output Pair 3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="PER" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="11111111111111111111111111111111" edc:mclr="11111111111111111111111111111111" edc:impl="0xFFFFFF" edc:_addr="0x40003840">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x18" edc:desc="Period Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x14" edc:desc="Period Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x13" edc:desc="Period Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x12" edc:desc="Period Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="CC0" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x40003844">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="CC1" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x40003848">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="CC2" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x4000384C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="CC3" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x40003850">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="CC4" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x40003854">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="CC5" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x40003858">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x4000385C"/>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="PATTBUF" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0x40003864">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="PGEB0" edc:nzwidth="0x1" edc:desc="Pattern Generator 0 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB1" edc:nzwidth="0x1" edc:desc="Pattern Generator 1 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB2" edc:nzwidth="0x1" edc:desc="Pattern Generator 2 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB3" edc:nzwidth="0x1" edc:desc="Pattern Generator 3 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB4" edc:nzwidth="0x1" edc:desc="Pattern Generator 4 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB5" edc:nzwidth="0x1" edc:desc="Pattern Generator 5 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB6" edc:nzwidth="0x1" edc:desc="Pattern Generator 6 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB7" edc:nzwidth="0x1" edc:desc="Pattern Generator 7 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB0" edc:nzwidth="0x1" edc:desc="Pattern Generator 0 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGVB1" edc:nzwidth="0x1" edc:desc="Pattern Generator 1 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGVB2" edc:nzwidth="0x1" edc:desc="Pattern Generator 2 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGVB3" edc:nzwidth="0x1" edc:desc="Pattern Generator 3 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGVB4" edc:nzwidth="0x1" edc:desc="Pattern Generator 4 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGVB5" edc:nzwidth="0x1" edc:desc="Pattern Generator 5 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGVB6" edc:nzwidth="0x1" edc:desc="Pattern Generator 6 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGVB7" edc:nzwidth="0x1" edc:desc="Pattern Generator 7 Output Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x6" edc:_addr="0x40003866"/>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="PERBUF" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="11111111111111111111111111111111" edc:mclr="11111111111111111111111111111111" edc:impl="0xFFFFFF" edc:_addr="0x4000386C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x18" edc:desc="Period Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x14" edc:desc="Period Buffer Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x13" edc:desc="Period Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x12" edc:desc="Period Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="CCBUF0" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x40003870">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="DITHERBUF" edc:nzwidth="0x14" edc:desc="Dithering Buffer Cycle Number"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="CCBUF1" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x40003874">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="DITHERBUF" edc:nzwidth="0x14" edc:desc="Dithering Buffer Cycle Number"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="CCBUF2" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x40003878">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="DITHERBUF" edc:nzwidth="0x14" edc:desc="Dithering Buffer Cycle Number"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="CCBUF3" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x4000387C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="DITHERBUF" edc:nzwidth="0x14" edc:desc="Dithering Buffer Cycle Number"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="CCBUF4" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x40003880">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="DITHERBUF" edc:nzwidth="0x14" edc:desc="Dithering Buffer Cycle Number"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="CCBUF5" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x40003884">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="DITHERBUF" edc:nzwidth="0x14" edc:desc="Dithering Buffer Cycle Number"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x378" edc:_addr="0x40003888"/>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="--nnnnnnn-------nnnnnnnn-nn---nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F80FF63" edc:_addr="0x40003C00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RESOLUTION" edc:nzwidth="0x2" edc:desc="Enhanced Resolution">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Dithering is disabled" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DITH4" edc:desc="Dithering is done every 16 PWM frames" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DITH5" edc:desc="Dithering is done every 32 PWM frames" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DITH6" edc:desc="Dithering is done every 64 PWM frames" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PRESCALER" edc:nzwidth="0x3" edc:desc="Prescaler">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="No division" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Divide by 2" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="Divide by 4" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="Divide by 8" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="Divide by 16" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="Divide by 64" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="Divide by 256" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="Divide by 1024" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:SFRFieldDef edc:cname="PRESCSYNC" edc:nzwidth="0x2" edc:desc="Prescaler and Counter Synchronization Selection">
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="Reload or reset counter on next GCLK" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PRESC" edc:desc="Reload or reset counter on next prescaler clock" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RESYNC" edc:desc="Reload or reset counter on next GCLK and reset prescaler counter" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ALOCK" edc:nzwidth="0x1" edc:desc="Auto Lock"/>
            <edc:SFRFieldDef edc:cname="MSYNC" edc:nzwidth="0x1" edc:desc="Master Synchronization (only for TCC Slave Instance)"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DMAOS" edc:nzwidth="0x1" edc:desc="DMA One-shot Trigger Mode"/>
            <edc:SFRFieldDef edc:cname="CPTEN0" edc:nzwidth="0x1" edc:desc="Capture Channel 0 Enable"/>
            <edc:SFRFieldDef edc:cname="CPTEN1" edc:nzwidth="0x1" edc:desc="Capture Channel 1 Enable"/>
            <edc:SFRFieldDef edc:cname="CPTEN2" edc:nzwidth="0x1" edc:desc="Capture Channel 2 Enable"/>
            <edc:SFRFieldDef edc:cname="CPTEN3" edc:nzwidth="0x1" edc:desc="Capture Channel 3 Enable"/>
            <edc:SFRFieldDef edc:cname="CPTEN4" edc:nzwidth="0x1" edc:desc="Capture Channel 4 Enable"/>
            <edc:SFRFieldDef edc:cname="CPTEN5" edc:nzwidth="0x1" edc:desc="Capture Channel 5 Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="CTRLBCLR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x40003C04">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Counter Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:nzwidth="0x1" edc:desc="One-Shot"/>
            <edc:SFRFieldDef edc:cname="IDXCMD" edc:nzwidth="0x2" edc:desc="Ramp Index Command">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Command disabled: Index toggles between cycles A and B" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set index: cycle B will be forced in the next cycle" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear index: cycle A will be forced in the next cycle" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="HOLD" edc:desc="Hold index: the next cycle will be the same as the current cycle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="TCC Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Clear start, restart or retrigger" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Force stop" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update or double buffered registers" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force COUNT read synchronization" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DMAOS" edc:desc="One-shot DMA trigger" edc:when="(field &amp; 0x7) == 0x05"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="CTRLBSET" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x40003C05">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Counter Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:nzwidth="0x1" edc:desc="One-Shot"/>
            <edc:SFRFieldDef edc:cname="IDXCMD" edc:nzwidth="0x2" edc:desc="Ramp Index Command">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Command disabled: Index toggles between cycles A and B" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set index: cycle B will be forced in the next cycle" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear index: cycle A will be forced in the next cycle" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="HOLD" edc:desc="Hold index: the next cycle will be the same as the current cycle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="TCC Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Clear start, restart or retrigger" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Force stop" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update or double buffered registers" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force COUNT read synchronization" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DMAOS" edc:desc="One-shot DMA trigger" edc:when="(field &amp; 0x7) == 0x05"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x40003C06"/>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="------------------rrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3FFF" edc:_addr="0x40003C08">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Swrst Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="Ctrlb Busy"/>
            <edc:SFRFieldDef edc:cname="STATUS" edc:nzwidth="0x1" edc:desc="Status Busy"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x1" edc:desc="Count Busy"/>
            <edc:SFRFieldDef edc:cname="PATT" edc:nzwidth="0x1" edc:desc="Pattern Busy"/>
            <edc:SFRFieldDef edc:cname="WAVE" edc:nzwidth="0x1" edc:desc="Wave Busy"/>
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x1" edc:desc="Period Busy"/>
            <edc:SFRFieldDef edc:cname="CC0" edc:nzwidth="0x1" edc:desc="Compare Channel 0 Busy"/>
            <edc:SFRFieldDef edc:cname="CC1" edc:nzwidth="0x1" edc:desc="Compare Channel 1 Busy"/>
            <edc:SFRFieldDef edc:cname="CC2" edc:nzwidth="0x1" edc:desc="Compare Channel 2 Busy"/>
            <edc:SFRFieldDef edc:cname="CC3" edc:nzwidth="0x1" edc:desc="Compare Channel 3 Busy"/>
            <edc:SFRFieldDef edc:cname="CC4" edc:nzwidth="0x1" edc:desc="Compare Channel 4 Busy"/>
            <edc:SFRFieldDef edc:cname="CC5" edc:nzwidth="0x1" edc:desc="Compare Channel 5 Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="FCTRLA" edc:nzwidth="0x20" edc:access="----nnnnnnnnnnnnnnnnnnnnnnnnn-nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFFB" edc:_addr="0x40003C0C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="SRC" edc:nzwidth="0x2" edc:desc="Fault A Source">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Fault input disabled" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="MCEx (x=0,1) event input" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="INVERT" edc:desc="Inverted MCEx (x=0,1) event input" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="ALTFAULT" edc:desc="Alternate fault (A or B) state at the end of the previous period" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="KEEP" edc:nzwidth="0x1" edc:desc="Fault A Keeper"/>
            <edc:SFRFieldDef edc:cname="QUAL" edc:nzwidth="0x1" edc:desc="Fault A Qualification"/>
            <edc:SFRFieldDef edc:cname="BLANK" edc:nzwidth="0x2" edc:desc="Fault A Blanking Mode">
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="Blanking applied from start of the ramp" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Blanking applied from rising edge of the output waveform" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Blanking applied from falling edge of the output waveform" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Blanking applied from each toggle of the output waveform" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RESTART" edc:nzwidth="0x1" edc:desc="Fault A Restart"/>
            <edc:SFRFieldDef edc:cname="HALT" edc:nzwidth="0x2" edc:desc="Fault A Halt Mode">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Halt action disabled" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="HW" edc:desc="Hardware halt action" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SW" edc:desc="Software halt action" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="NR" edc:desc="Non-recoverable fault" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CHSEL" edc:nzwidth="0x2" edc:desc="Fault A Capture Channel">
              <edc:SFRFieldSemantic edc:cname="CC0" edc:desc="Capture value stored in channel 0" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="CC1" edc:desc="Capture value stored in channel 1" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CC2" edc:desc="Capture value stored in channel 2" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="CC3" edc:desc="Capture value stored in channel 3" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CAPTURE" edc:nzwidth="0x3" edc:desc="Fault A Capture Action">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="No capture" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="CAPT" edc:desc="Capture on fault" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMIN" edc:desc="Minimum capture" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMAX" edc:desc="Maximum capture" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="LOCMIN" edc:desc="Minimum local detection" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="LOCMAX" edc:desc="Maximum local detection" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="DERIV0" edc:desc="Minimum and maximum local detection" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMARK" edc:desc="Capture with ramp index as MSB value" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BLANKPRESC" edc:nzwidth="0x1" edc:desc="Fault A Blanking Prescaler"/>
            <edc:SFRFieldDef edc:cname="BLANKVAL" edc:nzwidth="0x8" edc:desc="Fault A Blanking Time"/>
            <edc:SFRFieldDef edc:cname="FILTERVAL" edc:nzwidth="0x4" edc:desc="Fault A Filter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="FCTRLB" edc:nzwidth="0x20" edc:access="----nnnnnnnnnnnnnnnnnnnnnnnnn-nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFFB" edc:_addr="0x40003C10">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="SRC" edc:nzwidth="0x2" edc:desc="Fault B Source">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Fault input disabled" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="MCEx (x=0,1) event input" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="INVERT" edc:desc="Inverted MCEx (x=0,1) event input" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="ALTFAULT" edc:desc="Alternate fault (A or B) state at the end of the previous period" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="KEEP" edc:nzwidth="0x1" edc:desc="Fault B Keeper"/>
            <edc:SFRFieldDef edc:cname="QUAL" edc:nzwidth="0x1" edc:desc="Fault B Qualification"/>
            <edc:SFRFieldDef edc:cname="BLANK" edc:nzwidth="0x2" edc:desc="Fault B Blanking Mode">
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="Blanking applied from start of the ramp" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Blanking applied from rising edge of the output waveform" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Blanking applied from falling edge of the output waveform" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Blanking applied from each toggle of the output waveform" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RESTART" edc:nzwidth="0x1" edc:desc="Fault B Restart"/>
            <edc:SFRFieldDef edc:cname="HALT" edc:nzwidth="0x2" edc:desc="Fault B Halt Mode">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Halt action disabled" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="HW" edc:desc="Hardware halt action" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SW" edc:desc="Software halt action" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="NR" edc:desc="Non-recoverable fault" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CHSEL" edc:nzwidth="0x2" edc:desc="Fault B Capture Channel">
              <edc:SFRFieldSemantic edc:cname="CC0" edc:desc="Capture value stored in channel 0" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="CC1" edc:desc="Capture value stored in channel 1" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CC2" edc:desc="Capture value stored in channel 2" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="CC3" edc:desc="Capture value stored in channel 3" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CAPTURE" edc:nzwidth="0x3" edc:desc="Fault B Capture Action">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="No capture" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="CAPT" edc:desc="Capture on fault" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMIN" edc:desc="Minimum capture" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMAX" edc:desc="Maximum capture" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="LOCMIN" edc:desc="Minimum local detection" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="LOCMAX" edc:desc="Maximum local detection" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="DERIV0" edc:desc="Minimum and maximum local detection" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMARK" edc:desc="Capture with ramp index as MSB value" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BLANKPRESC" edc:nzwidth="0x1" edc:desc="Fault B Blanking Prescaler"/>
            <edc:SFRFieldDef edc:cname="BLANKVAL" edc:nzwidth="0x8" edc:desc="Fault B Blanking Time"/>
            <edc:SFRFieldDef edc:cname="FILTERVAL" edc:nzwidth="0x4" edc:desc="Fault B Filter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="WEXCTRL" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnn----nnnn------nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF0F03" edc:_addr="0x40003C14">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="OTMX" edc:nzwidth="0x2" edc:desc="Output Matrix"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="DTIEN0" edc:nzwidth="0x1" edc:desc="Dead-time Insertion Generator 0 Enable"/>
            <edc:SFRFieldDef edc:cname="DTIEN1" edc:nzwidth="0x1" edc:desc="Dead-time Insertion Generator 1 Enable"/>
            <edc:SFRFieldDef edc:cname="DTIEN2" edc:nzwidth="0x1" edc:desc="Dead-time Insertion Generator 2 Enable"/>
            <edc:SFRFieldDef edc:cname="DTIEN3" edc:nzwidth="0x1" edc:desc="Dead-time Insertion Generator 3 Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="DTLS" edc:nzwidth="0x8" edc:desc="Dead-time Low Side Outputs Value"/>
            <edc:SFRFieldDef edc:cname="DTHS" edc:nzwidth="0x8" edc:desc="Dead-time High Side Outputs Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="DRVCTRL" edc:nzwidth="0x20" edc:access="nnnnnnnn--nnnnnn--nnnnnn--nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF3F3F3F" edc:_addr="0x40003C18">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="NRE0" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 0 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE1" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 1 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE2" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 2 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE3" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 3 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE4" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 4 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE5" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 5 Output Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="NRV0" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 0 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV1" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 1 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV2" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 2 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV3" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 3 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV4" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 4 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV5" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 5 Output Value"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="INVEN0" edc:nzwidth="0x1" edc:desc="Output Waveform 0 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN1" edc:nzwidth="0x1" edc:desc="Output Waveform 1 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN2" edc:nzwidth="0x1" edc:desc="Output Waveform 2 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN3" edc:nzwidth="0x1" edc:desc="Output Waveform 3 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN4" edc:nzwidth="0x1" edc:desc="Output Waveform 4 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN5" edc:nzwidth="0x1" edc:desc="Output Waveform 5 Inversion"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FILTERVAL0" edc:nzwidth="0x4" edc:desc="Non-Recoverable Fault Input 0 Filter Value"/>
            <edc:SFRFieldDef edc:cname="FILTERVAL1" edc:nzwidth="0x4" edc:desc="Non-Recoverable Fault Input 1 Filter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x40003C1C"/>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-----n-n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x5" edc:_addr="0x40003C1E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Running Mode"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FDDBD" edc:nzwidth="0x1" edc:desc="Fault Detection on Debug Break Detection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x40003C1F"/>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="EVCTRL" edc:nzwidth="0x20" edc:access="--nnnnnn--nnnnnnnnnn-nnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F3FF7FF" edc:_addr="0x40003C20">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="EVACT0" edc:nzwidth="0x3" edc:desc="Timer/counter Input Event0 Action">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Event action disabled" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Start, restart or re-trigger counter on event" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="COUNTEV" edc:desc="Count on event" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="Start counter on event" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="INC" edc:desc="Increment counter on event" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="COUNT" edc:desc="Count on active state of asynchronous event" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="STAMP" edc:desc="Stamp capture" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="FAULT" edc:desc="Non-recoverable fault" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EVACT1" edc:nzwidth="0x3" edc:desc="Timer/counter Input Event1 Action">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Event action disabled" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Re-trigger counter on event" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DIR" edc:desc="Direction control" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Stop counter on event" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="DEC" edc:desc="Decrement counter on event" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="PPW" edc:desc="Period capture value in CC0 register, pulse width capture value in CC1 register" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="PWP" edc:desc="Period capture value in CC1 register, pulse width capture value in CC0 register" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="FAULT" edc:desc="Non-recoverable fault" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CNTSEL" edc:nzwidth="0x2" edc:desc="Timer/counter Output Event Mode">
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="An interrupt/event is generated when a new counter cycle starts" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="END" edc:desc="An interrupt/event is generated when a counter cycle ends" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="BETWEEN" edc:desc="An interrupt/event is generated when a counter cycle ends, except for the first and last cycles" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="BOUNDARY" edc:desc="An interrupt/event is generated when a new counter cycle starts or a counter cycle ends" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="OVFEO" edc:nzwidth="0x1" edc:desc="Overflow/Underflow Output Event Enable"/>
            <edc:SFRFieldDef edc:cname="TRGEO" edc:nzwidth="0x1" edc:desc="Retrigger Output Event Enable"/>
            <edc:SFRFieldDef edc:cname="CNTEO" edc:nzwidth="0x1" edc:desc="Timer/counter Output Event Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TCINV0" edc:nzwidth="0x1" edc:desc="Inverted Event 0 Input Enable"/>
            <edc:SFRFieldDef edc:cname="TCINV1" edc:nzwidth="0x1" edc:desc="Inverted Event 1 Input Enable"/>
            <edc:SFRFieldDef edc:cname="TCEI0" edc:nzwidth="0x1" edc:desc="Timer/counter Event 0 Input Enable"/>
            <edc:SFRFieldDef edc:cname="TCEI1" edc:nzwidth="0x1" edc:desc="Timer/counter Event 1 Input Enable"/>
            <edc:SFRFieldDef edc:cname="MCEI0" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 0 Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="MCEI1" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 1 Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="MCEI2" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 2 Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="MCEI3" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 3 Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="MCEI4" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 4 Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="MCEI5" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 5 Event Input Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MCEO0" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 0 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="MCEO1" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 1 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="MCEO2" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 2 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="MCEO3" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 3 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="MCEO4" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 4 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="MCEO5" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 5 Event Output Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="INTENCLR" edc:nzwidth="0x20" edc:access="----------nnnnnnnnnnnn------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3FFC0F" edc:_addr="0x40003C24">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRG" edc:nzwidth="0x1" edc:desc="Retrigger Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CNT" edc:nzwidth="0x1" edc:desc="Counter Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Error Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="UFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Update Fault Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Debug Fault Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULTA" edc:nzwidth="0x1" edc:desc="Recoverable Fault A Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULTB" edc:nzwidth="0x1" edc:desc="Recoverable Fault B Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULT0" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULT1" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC2" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 2 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC3" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 3 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC4" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 4 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC5" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 5 Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="INTENSET" edc:nzwidth="0x20" edc:access="----------nnnnnnnnnnnn------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3FFC0F" edc:_addr="0x40003C28">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRG" edc:nzwidth="0x1" edc:desc="Retrigger Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CNT" edc:nzwidth="0x1" edc:desc="Counter Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Error Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="UFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Update Fault Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Debug Fault Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULTA" edc:nzwidth="0x1" edc:desc="Recoverable Fault A Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULTB" edc:nzwidth="0x1" edc:desc="Recoverable Fault B Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULT0" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULT1" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC2" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 2 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC3" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 3 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC4" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 4 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC5" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 5 Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="INTFLAG" edc:nzwidth="0x20" edc:access="----------nnnnnnnnnnnn------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3FFC0F" edc:_addr="0x40003C2C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow"/>
            <edc:SFRFieldDef edc:cname="TRG" edc:nzwidth="0x1" edc:desc="Retrigger"/>
            <edc:SFRFieldDef edc:cname="CNT" edc:nzwidth="0x1" edc:desc="Counter"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Error"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="UFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Update Fault"/>
            <edc:SFRFieldDef edc:cname="DFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Debug Fault"/>
            <edc:SFRFieldDef edc:cname="FAULTA" edc:nzwidth="0x1" edc:desc="Recoverable Fault A"/>
            <edc:SFRFieldDef edc:cname="FAULTB" edc:nzwidth="0x1" edc:desc="Recoverable Fault B"/>
            <edc:SFRFieldDef edc:cname="FAULT0" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 0"/>
            <edc:SFRFieldDef edc:cname="FAULT1" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 1"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="Match or Capture 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="Match or Capture 1"/>
            <edc:SFRFieldDef edc:cname="MC2" edc:nzwidth="0x1" edc:desc="Match or Capture 2"/>
            <edc:SFRFieldDef edc:cname="MC3" edc:nzwidth="0x1" edc:desc="Match or Capture 3"/>
            <edc:SFRFieldDef edc:cname="MC4" edc:nzwidth="0x1" edc:desc="Match or Capture 4"/>
            <edc:SFRFieldDef edc:cname="MC5" edc:nzwidth="0x1" edc:desc="Match or Capture 5"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="STATUS" edc:nzwidth="0x20" edc:access="--nnnnnn--nnnnnnnnnnnnnnn-nnnnnn" edc:por="00000000000000000000000000000001" edc:mclr="00000000000000000000000000000001" edc:impl="0x3F3FFFBF" edc:_addr="0x40003C30">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="STOP" edc:nzwidth="0x1" edc:desc="Stop"/>
            <edc:SFRFieldDef edc:cname="IDX" edc:nzwidth="0x1" edc:desc="Ramp"/>
            <edc:SFRFieldDef edc:cname="UFS" edc:nzwidth="0x1" edc:desc="Non-recoverable Update Fault State"/>
            <edc:SFRFieldDef edc:cname="DFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Debug Fault State"/>
            <edc:SFRFieldDef edc:cname="SLAVE" edc:nzwidth="0x1" edc:desc="Slave"/>
            <edc:SFRFieldDef edc:cname="PATTBUFV" edc:nzwidth="0x1" edc:desc="Pattern Buffer Valid"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PERBUFV" edc:nzwidth="0x1" edc:desc="Period Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="FAULTAIN" edc:nzwidth="0x1" edc:desc="Recoverable Fault A Input"/>
            <edc:SFRFieldDef edc:cname="FAULTBIN" edc:nzwidth="0x1" edc:desc="Recoverable Fault B Input"/>
            <edc:SFRFieldDef edc:cname="FAULT0IN" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault0 Input"/>
            <edc:SFRFieldDef edc:cname="FAULT1IN" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault1 Input"/>
            <edc:SFRFieldDef edc:cname="FAULTA" edc:nzwidth="0x1" edc:desc="Recoverable Fault A State"/>
            <edc:SFRFieldDef edc:cname="FAULTB" edc:nzwidth="0x1" edc:desc="Recoverable Fault B State"/>
            <edc:SFRFieldDef edc:cname="FAULT0" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 0 State"/>
            <edc:SFRFieldDef edc:cname="FAULT1" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 1 State"/>
            <edc:SFRFieldDef edc:cname="CCBUFV0" edc:nzwidth="0x1" edc:desc="Compare Channel 0 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV1" edc:nzwidth="0x1" edc:desc="Compare Channel 1 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV2" edc:nzwidth="0x1" edc:desc="Compare Channel 2 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV3" edc:nzwidth="0x1" edc:desc="Compare Channel 3 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV4" edc:nzwidth="0x1" edc:desc="Compare Channel 4 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV5" edc:nzwidth="0x1" edc:desc="Compare Channel 5 Buffer Valid"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP0" edc:nzwidth="0x1" edc:desc="Compare Channel 0 Value"/>
            <edc:SFRFieldDef edc:cname="CMP1" edc:nzwidth="0x1" edc:desc="Compare Channel 1 Value"/>
            <edc:SFRFieldDef edc:cname="CMP2" edc:nzwidth="0x1" edc:desc="Compare Channel 2 Value"/>
            <edc:SFRFieldDef edc:cname="CMP3" edc:nzwidth="0x1" edc:desc="Compare Channel 3 Value"/>
            <edc:SFRFieldDef edc:cname="CMP4" edc:nzwidth="0x1" edc:desc="Compare Channel 4 Value"/>
            <edc:SFRFieldDef edc:cname="CMP5" edc:nzwidth="0x1" edc:desc="Compare Channel 5 Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="COUNT" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x40003C34">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x18" edc:desc="Counter Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x14" edc:desc="Counter Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x13" edc:desc="Counter Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x12" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="PATT" edc:nzwidth="0x10" edc:access="--nnnnnn--nnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x3F3F" edc:_addr="0x40003C38">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="PGE0" edc:nzwidth="0x1" edc:desc="Pattern Generator 0 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE1" edc:nzwidth="0x1" edc:desc="Pattern Generator 1 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE2" edc:nzwidth="0x1" edc:desc="Pattern Generator 2 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE3" edc:nzwidth="0x1" edc:desc="Pattern Generator 3 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE4" edc:nzwidth="0x1" edc:desc="Pattern Generator 4 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE5" edc:nzwidth="0x1" edc:desc="Pattern Generator 5 Output Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PGV0" edc:nzwidth="0x1" edc:desc="Pattern Generator 0 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV1" edc:nzwidth="0x1" edc:desc="Pattern Generator 1 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV2" edc:nzwidth="0x1" edc:desc="Pattern Generator 2 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV3" edc:nzwidth="0x1" edc:desc="Pattern Generator 3 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV4" edc:nzwidth="0x1" edc:desc="Pattern Generator 4 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV5" edc:nzwidth="0x1" edc:desc="Pattern Generator 5 Output Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x40003C3A"/>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="WAVE" edc:nzwidth="0x20" edc:access="----nnnn--nnnnnn----nnnnn-nn-nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF3F0FB7" edc:_addr="0x40003C3C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="WAVEGEN" edc:nzwidth="0x3" edc:desc="Waveform Generation">
              <edc:SFRFieldSemantic edc:cname="NFRQ" edc:desc="Normal frequency" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="MFRQ" edc:desc="Match frequency" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NPWM" edc:desc="Normal PWM" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DSCRITICAL" edc:desc="Dual-slope critical" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DSBOTTOM" edc:desc="Dual-slope with interrupt/event condition when COUNT reaches ZERO" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="DSBOTH" edc:desc="Dual-slope with interrupt/event condition when COUNT reaches ZERO or TOP" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="DSTOP" edc:desc="Dual-slope with interrupt/event condition when COUNT reaches TOP" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RAMP" edc:nzwidth="0x2" edc:desc="Ramp Mode">
              <edc:SFRFieldSemantic edc:cname="RAMP1" edc:desc="RAMP1 operation" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RAMP2A" edc:desc="Alternative RAMP2 operation" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RAMP2" edc:desc="RAMP2 operation" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RAMP2C" edc:desc="Critical RAMP2 operation" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CIPEREN" edc:nzwidth="0x1" edc:desc="Circular period Enable"/>
            <edc:SFRFieldDef edc:cname="CICCEN0" edc:nzwidth="0x1" edc:desc="Circular Channel 0 Enable"/>
            <edc:SFRFieldDef edc:cname="CICCEN1" edc:nzwidth="0x1" edc:desc="Circular Channel 1 Enable"/>
            <edc:SFRFieldDef edc:cname="CICCEN2" edc:nzwidth="0x1" edc:desc="Circular Channel 2 Enable"/>
            <edc:SFRFieldDef edc:cname="CICCEN3" edc:nzwidth="0x1" edc:desc="Circular Channel 3 Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="POL0" edc:nzwidth="0x1" edc:desc="Channel 0 Polarity"/>
            <edc:SFRFieldDef edc:cname="POL1" edc:nzwidth="0x1" edc:desc="Channel 1 Polarity"/>
            <edc:SFRFieldDef edc:cname="POL2" edc:nzwidth="0x1" edc:desc="Channel 2 Polarity"/>
            <edc:SFRFieldDef edc:cname="POL3" edc:nzwidth="0x1" edc:desc="Channel 3 Polarity"/>
            <edc:SFRFieldDef edc:cname="POL4" edc:nzwidth="0x1" edc:desc="Channel 4 Polarity"/>
            <edc:SFRFieldDef edc:cname="POL5" edc:nzwidth="0x1" edc:desc="Channel 5 Polarity"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SWAP0" edc:nzwidth="0x1" edc:desc="Swap DTI Output Pair 0"/>
            <edc:SFRFieldDef edc:cname="SWAP1" edc:nzwidth="0x1" edc:desc="Swap DTI Output Pair 1"/>
            <edc:SFRFieldDef edc:cname="SWAP2" edc:nzwidth="0x1" edc:desc="Swap DTI Output Pair 2"/>
            <edc:SFRFieldDef edc:cname="SWAP3" edc:nzwidth="0x1" edc:desc="Swap DTI Output Pair 3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="PER" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="11111111111111111111111111111111" edc:mclr="11111111111111111111111111111111" edc:impl="0xFFFFFF" edc:_addr="0x40003C40">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x18" edc:desc="Period Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x14" edc:desc="Period Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x13" edc:desc="Period Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x12" edc:desc="Period Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="CC0" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x40003C44">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="CC1" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x40003C48">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="CC2" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x40003C4C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="CC3" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x40003C50">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="CC4" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x40003C54">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="CC5" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x40003C58">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x40003C5C"/>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="PATTBUF" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0x40003C64">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="PGEB0" edc:nzwidth="0x1" edc:desc="Pattern Generator 0 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB1" edc:nzwidth="0x1" edc:desc="Pattern Generator 1 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB2" edc:nzwidth="0x1" edc:desc="Pattern Generator 2 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB3" edc:nzwidth="0x1" edc:desc="Pattern Generator 3 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB4" edc:nzwidth="0x1" edc:desc="Pattern Generator 4 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB5" edc:nzwidth="0x1" edc:desc="Pattern Generator 5 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB6" edc:nzwidth="0x1" edc:desc="Pattern Generator 6 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB7" edc:nzwidth="0x1" edc:desc="Pattern Generator 7 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB0" edc:nzwidth="0x1" edc:desc="Pattern Generator 0 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGVB1" edc:nzwidth="0x1" edc:desc="Pattern Generator 1 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGVB2" edc:nzwidth="0x1" edc:desc="Pattern Generator 2 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGVB3" edc:nzwidth="0x1" edc:desc="Pattern Generator 3 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGVB4" edc:nzwidth="0x1" edc:desc="Pattern Generator 4 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGVB5" edc:nzwidth="0x1" edc:desc="Pattern Generator 5 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGVB6" edc:nzwidth="0x1" edc:desc="Pattern Generator 6 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGVB7" edc:nzwidth="0x1" edc:desc="Pattern Generator 7 Output Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x6" edc:_addr="0x40003C66"/>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="PERBUF" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="11111111111111111111111111111111" edc:mclr="11111111111111111111111111111111" edc:impl="0xFFFFFF" edc:_addr="0x40003C6C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x18" edc:desc="Period Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x14" edc:desc="Period Buffer Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x13" edc:desc="Period Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x12" edc:desc="Period Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="CCBUF0" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x40003C70">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="DITHERBUF" edc:nzwidth="0x14" edc:desc="Dithering Buffer Cycle Number"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="CCBUF1" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x40003C74">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="DITHERBUF" edc:nzwidth="0x14" edc:desc="Dithering Buffer Cycle Number"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="CCBUF2" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x40003C78">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="DITHERBUF" edc:nzwidth="0x14" edc:desc="Dithering Buffer Cycle Number"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="CCBUF3" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x40003C7C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="DITHERBUF" edc:nzwidth="0x14" edc:desc="Dithering Buffer Cycle Number"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="CCBUF4" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x40003C80">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="DITHERBUF" edc:nzwidth="0x14" edc:desc="Dithering Buffer Cycle Number"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="CCBUF5" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x40003C84">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="DITHERBUF" edc:nzwidth="0x14" edc:desc="Dithering Buffer Cycle Number"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:SFRDataSector>
    <edc:SFRDataSector edc:regionid="PBB_BRIDGE" edc:beginaddr="0x41000000" edc:endaddr="0x4101402C" edc:rw="rw">
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="CTRL" edc:nzwidth="0x8" edc:access="ww-w-w-w" edc:por="00000000" edc:mclr="00000000" edc:impl="0xD5" edc:_addr="0x41000000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CRC" edc:nzwidth="0x1" edc:desc="32-bit Cyclic Redundancy Code"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CE" edc:nzwidth="0x1" edc:desc="Chip-Erase"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ARR" edc:nzwidth="0x1" edc:desc="Auxiliary Row Read"/>
            <edc:SFRFieldDef edc:cname="SMSA" edc:nzwidth="0x1" edc:desc="Start Memory Stream Access"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="STATUSA" edc:nzwidth="0x8" edc:access="---nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1F" edc:_addr="0x41000001">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="DONE" edc:nzwidth="0x1" edc:desc="Done"/>
            <edc:SFRFieldDef edc:cname="CRSTEXT" edc:nzwidth="0x1" edc:desc="CPU Reset Phase Extension"/>
            <edc:SFRFieldDef edc:cname="BERR" edc:nzwidth="0x1" edc:desc="Bus Error"/>
            <edc:SFRFieldDef edc:cname="FAIL" edc:nzwidth="0x1" edc:desc="Failure"/>
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Protection Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="STATUSB" edc:nzwidth="0x8" edc:access="rrrrrrrr" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x41000002">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="PROT" edc:nzwidth="0x1" edc:desc="Protected"/>
            <edc:SFRFieldDef edc:cname="DBGPRES" edc:nzwidth="0x1" edc:desc="Debugger Present"/>
            <edc:SFRFieldDef edc:cname="DCCD0" edc:nzwidth="0x1" edc:desc="Debug Communication Channel 0 Dirty"/>
            <edc:SFRFieldDef edc:cname="DCCD1" edc:nzwidth="0x1" edc:desc="Debug Communication Channel 1 Dirty"/>
            <edc:SFRFieldDef edc:cname="HPE" edc:nzwidth="0x1" edc:desc="Hot-Plugging Enable"/>
            <edc:SFRFieldDef edc:cname="CELCK" edc:nzwidth="0x1" edc:desc="Chip Erase Locked"/>
            <edc:SFRFieldDef edc:cname="TDCCD0" edc:nzwidth="0x1" edc:desc="Test Debug Communication Channel 0 Dirty"/>
            <edc:SFRFieldDef edc:cname="TDCCD1" edc:nzwidth="0x1" edc:desc="Test Debug Communication Channel 1 Dirty"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x41000003"/>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41000004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="AMOD" edc:nzwidth="0x2" edc:desc="Access Mode"/>
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0x1E" edc:desc="Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="LENGTH" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnn--" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFFFC" edc:_addr="0x41000008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="LENGTH" edc:nzwidth="0x1E" edc:desc="Length"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4100000C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="DCC0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41000010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="DCC1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41000014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="DID" edc:nzwidth="0x20" edc:access="rrrrrrrrr-rrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000001001111000000011" edc:mclr="00000000000000001001111000000011" edc:impl="0xFFBFFFFF" edc:_addr="0x41000018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="DEVSEL" edc:nzwidth="0x8" edc:desc="Device Select"/>
            <edc:SFRFieldDef edc:cname="DIE" edc:nzwidth="0x8" edc:desc="Die Number"/>
            <edc:SFRFieldDef edc:cname="SERIES" edc:nzwidth="0x6" edc:desc="Series"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FAMILY" edc:nzwidth="0x5" edc:desc="Family"/>
            <edc:SFRFieldDef edc:cname="REVISION" edc:nzwidth="0x4" edc:desc="Revision Number"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="CFG" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000010" edc:mclr="00000000000000000000000000000010" edc:impl="0x1F" edc:_addr="0x4100001C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="LQOS" edc:nzwidth="0x2" edc:desc="Latency Quality Of Service"/>
            <edc:SFRFieldDef edc:cname="DCCDMALEVEL" edc:nzwidth="0x2" edc:desc="DMA Trigger Level">
              <edc:SFRFieldSemantic edc:cname="EMPTY" edc:desc="Trigger rises when DCC is empty" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="FULL" edc:desc="Trigger rises when DCC is full" edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ETBRAMEN" edc:nzwidth="0x1" edc:desc="Trace Control"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x18" edc:_addr="0x41000020"/>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="UUID0" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41000038">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="UUID" edc:nzwidth="0x20" edc:desc="UUID"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="UUID1" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4100003C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="UUID" edc:nzwidth="0x20" edc:desc="UUID"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="UUID2" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41000040">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="UUID" edc:nzwidth="0x20" edc:desc="UUID"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="UUID3" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41000044">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="UUID" edc:nzwidth="0x20" edc:desc="UUID"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="SECCFG" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41000048">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="SECCFG" edc:nzwidth="0x20" edc:desc="Secure Config"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="CTR_STAT" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF" edc:_addr="0x4100004C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="ROLLBACK_CTR" edc:nzwidth="0x8" edc:desc="Rollback counter"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="BOOT_STAT" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF" edc:_addr="0x41000050">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="BOOT_STATUS" edc:nzwidth="0x8" edc:desc="Boot Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="BOOT_KEY0" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41000054">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="BOOT_KEY" edc:nzwidth="0x20" edc:desc="Secure Boot Key"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="BOOT_KEY1" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41000058">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="BOOT_KEY" edc:nzwidth="0x20" edc:desc="Secure Boot Key"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="BOOT_KEY2" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4100005C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="BOOT_KEY" edc:nzwidth="0x20" edc:desc="Secure Boot Key"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="BOOT_KEY3" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41000060">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="BOOT_KEY" edc:nzwidth="0x20" edc:desc="Secure Boot Key"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="BOOT_KEY4" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41000064">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="BOOT_KEY" edc:nzwidth="0x20" edc:desc="Secure Boot Key"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="BOOT_KEY5" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41000068">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="BOOT_KEY" edc:nzwidth="0x20" edc:desc="Secure Boot Key"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="BOOT_KEY6" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4100006C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="BOOT_KEY" edc:nzwidth="0x20" edc:desc="Secure Boot Key"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="BOOT_KEY7" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41000070">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="BOOT_KEY" edc:nzwidth="0x20" edc:desc="Secure Boot Key"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="BOOT_KEY8" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41000074">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="BOOT_KEY" edc:nzwidth="0x20" edc:desc="Secure Boot Key"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="BOOT_KEY9" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41000078">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="BOOT_KEY" edc:nzwidth="0x20" edc:desc="Secure Boot Key"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="BOOT_KEY10" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4100007C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="BOOT_KEY" edc:nzwidth="0x20" edc:desc="Secure Boot Key"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="BOOT_KEY11" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41000080">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="BOOT_KEY" edc:nzwidth="0x20" edc:desc="Secure Boot Key"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x6C" edc:_addr="0x41000084"/>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="DCFG0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x410000F0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="DCFG" edc:nzwidth="0x20" edc:desc="Device Configuration"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="DCFG1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x410000F4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="DCFG" edc:nzwidth="0x20" edc:desc="Device Configuration"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xF08" edc:_addr="0x410000F8"/>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="ENTRY0" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrr----------rr" edc:por="10011111000011111100000000000010" edc:mclr="10011111000011111100000000000010" edc:impl="0xFFFFF003" edc:_addr="0x41001000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="EPRES" edc:nzwidth="0x1" edc:desc="Entry Present"/>
            <edc:SFRFieldDef edc:cname="FMT" edc:nzwidth="0x1" edc:desc="Format"/>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="ADDOFF" edc:nzwidth="0x14" edc:desc="Address Offset"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="ENTRY1" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41001004"/>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="END" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41001008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="END" edc:nzwidth="0x20" edc:desc="End Marker"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xFC0" edc:_addr="0x4100100C"/>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="MEMTYPE" edc:nzwidth="0x20" edc:access="-------------------------------r" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1" edc:_addr="0x41001FCC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="SMEMP" edc:nzwidth="0x1" edc:desc="System Memory Present"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="PID4" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF" edc:_addr="0x41001FD0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="JEPCC" edc:nzwidth="0x4" edc:desc="JEP-106 Continuation Code"/>
            <edc:SFRFieldDef edc:cname="FKBC" edc:nzwidth="0x4" edc:desc="4KB count"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x41001FD4"/>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="PID0" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000011010000" edc:mclr="00000000000000000000000011010000" edc:impl="0xFF" edc:_addr="0x41001FE0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="PARTNBL" edc:nzwidth="0x8" edc:desc="Part Number Low"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="PID1" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000010011100" edc:mclr="00000000000000000000000010011100" edc:impl="0xFF" edc:_addr="0x41001FE4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="PARTNBH" edc:nzwidth="0x4" edc:desc="Part Number High"/>
            <edc:SFRFieldDef edc:cname="JEPIDCL" edc:nzwidth="0x4" edc:desc="Low part of the JEP-106 Identity Code"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="PID2" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000000001010" edc:mclr="00000000000000000000000000001010" edc:impl="0xFF" edc:_addr="0x41001FE8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="JEPIDCH" edc:nzwidth="0x3" edc:desc="JEP-106 Identity Code High"/>
            <edc:SFRFieldDef edc:cname="JEPU" edc:nzwidth="0x1" edc:desc="JEP-106 Identity Code is used"/>
            <edc:SFRFieldDef edc:cname="REVISION" edc:nzwidth="0x4" edc:desc="Revision Number"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="PID3" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF" edc:_addr="0x41001FEC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="CUSMOD" edc:nzwidth="0x4" edc:desc="ARM CUSMOD"/>
            <edc:SFRFieldDef edc:cname="REVAND" edc:nzwidth="0x4" edc:desc="Revision Number"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="CID0" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000000001101" edc:mclr="00000000000000000000000000001101" edc:impl="0xFF" edc:_addr="0x41001FF0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="PREAMBLEB0" edc:nzwidth="0x8" edc:desc="Preamble Byte 0"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="CID1" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000000010000" edc:mclr="00000000000000000000000000010000" edc:impl="0xFF" edc:_addr="0x41001FF4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="PREAMBLE" edc:nzwidth="0x4" edc:desc="Preamble"/>
            <edc:SFRFieldDef edc:cname="CCLASS" edc:nzwidth="0x4" edc:desc="Component Class"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="CID2" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000000000101" edc:mclr="00000000000000000000000000000101" edc:impl="0xFF" edc:_addr="0x41001FF8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="PREAMBLEB2" edc:nzwidth="0x8" edc:desc="Preamble Byte 2"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="CID3" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000010110001" edc:mclr="00000000000000000000000010110001" edc:impl="0xFF" edc:_addr="0x41001FFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="PREAMBLEB3" edc:nzwidth="0x8" edc:desc="Preamble Byte 3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CMCC" edc:cname="TYPE" edc:nzwidth="0x20" edc:access="------------------rrrrrrrrrr--r-" edc:por="00000000000000000001001011010010" edc:mclr="00000000000000000001001011010010" edc:impl="0x3FF2" edc:_addr="0x41002000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CMCC">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="GCLK" edc:nzwidth="0x1" edc:desc="dynamic Clock Gating supported"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RRP" edc:nzwidth="0x1" edc:desc="Round Robin Policy supported"/>
            <edc:SFRFieldDef edc:cname="WAYNUM" edc:nzwidth="0x2" edc:desc="Number of Way">
              <edc:SFRFieldSemantic edc:cname="DMAPPED" edc:desc="Direct Mapped Cache" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ARCH2WAY" edc:desc="2-WAY set associative" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ARCH4WAY" edc:desc="4-WAY set associative" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LCKDOWN" edc:nzwidth="0x1" edc:desc="Lock Down supported"/>
            <edc:SFRFieldDef edc:cname="CSIZE" edc:nzwidth="0x3" edc:desc="Cache Size">
              <edc:SFRFieldSemantic edc:cname="CSIZE_1KB" edc:desc="Cache Size is 1 KB" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="CSIZE_2KB" edc:desc="Cache Size is 2 KB" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CSIZE_4KB" edc:desc="Cache Size is 4 KB" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="CSIZE_8KB" edc:desc="Cache Size is 8 KB" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="CSIZE_16KB" edc:desc="Cache Size is 16 KB" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="CSIZE_32KB" edc:desc="Cache Size is 32 KB" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="CSIZE_64KB" edc:desc="Cache Size is 64 KB" edc:when="(field &amp; 0x7) == 0x06"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CLSIZE" edc:nzwidth="0x3" edc:desc="Cache Line Size">
              <edc:SFRFieldSemantic edc:cname="CLSIZE_4B" edc:desc="Cache Line Size is 4 bytes" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="CLSIZE_8B" edc:desc="Cache Line Size is 8 bytes" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLSIZE_16B" edc:desc="Cache Line Size is 16 bytes" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="CLSIZE_32B" edc:desc="Cache Line Size is 32 bytes" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="CLSIZE_64B" edc:desc="Cache Line Size is 64 bytes" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="CLSIZE_128B" edc:desc="Cache Line Size is 128 bytes" edc:when="(field &amp; 0x7) == 0x05"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CMCC" edc:cname="CFG" edc:nzwidth="0x20" edc:access="-------------------------nnn-nn-" edc:por="00000000000000000000000000100000" edc:mclr="00000000000000000000000000100000" edc:impl="0x76" edc:_addr="0x41002004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CMCC">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ICDIS" edc:nzwidth="0x1" edc:desc="Instruction Cache Disable"/>
            <edc:SFRFieldDef edc:cname="DCDIS" edc:nzwidth="0x1" edc:desc="Data Cache Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CSIZESW" edc:nzwidth="0x3" edc:desc="Cache size configured by software">
              <edc:SFRFieldSemantic edc:cname="CONF_CSIZE_1KB" edc:desc="The Cache Size is configured to 1KB" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="CONF_CSIZE_2KB" edc:desc="The Cache Size is configured to 2KB" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CONF_CSIZE_4KB" edc:desc="The Cache Size is configured to 4KB" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="CONF_CSIZE_8KB" edc:desc="The Cache Size is configured to 8KB" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="CONF_CSIZE_16KB" edc:desc="The Cache Size is configured to 16KB" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="CONF_CSIZE_32KB" edc:desc="The Cache Size is configured to 32KB" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="CONF_CSIZE_64KB" edc:desc="The Cache Size is configured to 64KB" edc:when="(field &amp; 0x7) == 0x06"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CMCC" edc:cname="CTRL" edc:nzwidth="0x20" edc:access="-------------------------------w" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1" edc:_addr="0x41002008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CMCC">
            <edc:SFRFieldDef edc:cname="CEN" edc:nzwidth="0x1" edc:desc="Cache Controller Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CMCC" edc:cname="SR" edc:nzwidth="0x20" edc:access="-------------------------------r" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1" edc:_addr="0x4100200C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CMCC">
            <edc:SFRFieldDef edc:cname="CSTS" edc:nzwidth="0x1" edc:desc="Cache Controller Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CMCC" edc:cname="LCKWAY" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x41002010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CMCC">
            <edc:SFRFieldDef edc:cname="LCKWAY" edc:nzwidth="0x4" edc:desc="Lockdown way Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x41002014"/>
      <edc:SFRDef ltx:memberofperipheral="CMCC" edc:cname="MAINT0" edc:nzwidth="0x20" edc:access="-------------------------------w" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1" edc:_addr="0x41002020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CMCC">
            <edc:SFRFieldDef edc:cname="INVALL" edc:nzwidth="0x1" edc:desc="Cache Controller invalidate All"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CMCC" edc:cname="MAINT1" edc:nzwidth="0x20" edc:access="wwww----------------wwwwwwww----" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF0000FF0" edc:_addr="0x41002024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CMCC">
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="INDEX" edc:nzwidth="0x8" edc:desc="Invalidate Index"/>
            <edc:AdjustPoint edc:offset="0x10"/>
            <edc:SFRFieldDef edc:cname="WAY" edc:nzwidth="0x4" edc:desc="Invalidate Way">
              <edc:SFRFieldSemantic edc:cname="WAY0" edc:desc="Way 0 is selection for index invalidation" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="WAY1" edc:desc="Way 1 is selection for index invalidation" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="WAY2" edc:desc="Way 2 is selection for index invalidation" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="WAY3" edc:desc="Way 3 is selection for index invalidation" edc:when="(field &amp; 0xF) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CMCC" edc:cname="MCFG" edc:nzwidth="0x20" edc:access="------------------------------nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3" edc:_addr="0x41002028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CMCC">
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x2" edc:desc="Cache Controller Monitor Counter Mode">
              <edc:SFRFieldSemantic edc:cname="CYCLE_COUNT" edc:desc="Cycle counter" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="IHIT_COUNT" edc:desc="Instruction hit counter" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DHIT_COUNT" edc:desc="Data hit counter" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CMCC" edc:cname="MEN" edc:nzwidth="0x20" edc:access="-------------------------------n" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1" edc:_addr="0x4100202C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CMCC">
            <edc:SFRFieldDef edc:cname="MENABLE" edc:nzwidth="0x1" edc:desc="Cache Controller Monitor Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CMCC" edc:cname="MCTRL" edc:nzwidth="0x20" edc:access="-------------------------------w" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1" edc:_addr="0x41002030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CMCC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Cache Controller Software Reset"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CMCC" edc:cname="MSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41002034">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CMCC">
            <edc:SFRFieldDef edc:cname="EVENT_CNT" edc:nzwidth="0x20" edc:desc="Monitor Event Counter"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1FC8" edc:_addr="0x41002038"/>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CTRL" edc:nzwidth="0x10" edc:access="----nnnn------nn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xF03" edc:_addr="0x41004000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="DMAENABLE" edc:nzwidth="0x1" edc:desc="DMA Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="LVLEN0" edc:nzwidth="0x1" edc:desc="Priority Level 0 Enable"/>
            <edc:SFRFieldDef edc:cname="LVLEN1" edc:nzwidth="0x1" edc:desc="Priority Level 1 Enable"/>
            <edc:SFRFieldDef edc:cname="LVLEN2" edc:nzwidth="0x1" edc:desc="Priority Level 2 Enable"/>
            <edc:SFRFieldDef edc:cname="LVLEN3" edc:nzwidth="0x1" edc:desc="Priority Level 3 Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CRCCTRL" edc:nzwidth="0x10" edc:access="nnnnnnnn----nnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xFF0F" edc:_addr="0x41004002">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="CRCBEATSIZE" edc:nzwidth="0x2" edc:desc="CRC Beat Size">
              <edc:SFRFieldSemantic edc:cname="BYTE" edc:desc="8-bit bus transfer" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="HWORD" edc:desc="16-bit bus transfer" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="WORD" edc:desc="32-bit bus transfer" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CRCPOLY" edc:nzwidth="0x2" edc:desc="CRC Polynomial Type">
              <edc:SFRFieldSemantic edc:cname="CRC16" edc:desc="CRC-16 (CRC-CCITT)" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="CRC32" edc:desc="CRC32 (IEEE 802.3)" edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CRCSRC" edc:nzwidth="0x6" edc:desc="CRC Input Source">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="CRC Disabled" edc:when="(field &amp; 0x3F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="IO" edc:desc="I/O interface" edc:when="(field &amp; 0x3F) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CRCMODE" edc:nzwidth="0x2" edc:desc="CRC Operating Mode">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Default operating mode" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="CRCMON" edc:desc="Memory CRC monitor operating mode" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="CRCGEN" edc:desc="Memory CRC generation operating mode" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CRCDATAIN" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41004004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="CRCDATAIN" edc:nzwidth="0x20" edc:desc="CRC Data Input"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CRCCHKSUM" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41004008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="CRCCHKSUM" edc:nzwidth="0x20" edc:desc="CRC Checksum"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CRCSTATUS" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x4100400C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="CRCBUSY" edc:nzwidth="0x1" edc:desc="CRC Module Busy"/>
            <edc:SFRFieldDef edc:cname="CRCZERO" edc:nzwidth="0x1" edc:desc="CRC Zero"/>
            <edc:SFRFieldDef edc:cname="CRCERR" edc:nzwidth="0x1" edc:desc="CRC Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x4100400D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Run"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x4100400E"/>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="SWTRIGCTRL" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF" edc:_addr="0x41004010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="SWTRIG0" edc:nzwidth="0x1" edc:desc="Channel 0 Software Trigger"/>
            <edc:SFRFieldDef edc:cname="SWTRIG1" edc:nzwidth="0x1" edc:desc="Channel 1 Software Trigger"/>
            <edc:SFRFieldDef edc:cname="SWTRIG2" edc:nzwidth="0x1" edc:desc="Channel 2 Software Trigger"/>
            <edc:SFRFieldDef edc:cname="SWTRIG3" edc:nzwidth="0x1" edc:desc="Channel 3 Software Trigger"/>
            <edc:SFRFieldDef edc:cname="SWTRIG4" edc:nzwidth="0x1" edc:desc="Channel 4 Software Trigger"/>
            <edc:SFRFieldDef edc:cname="SWTRIG5" edc:nzwidth="0x1" edc:desc="Channel 5 Software Trigger"/>
            <edc:SFRFieldDef edc:cname="SWTRIG6" edc:nzwidth="0x1" edc:desc="Channel 6 Software Trigger"/>
            <edc:SFRFieldDef edc:cname="SWTRIG7" edc:nzwidth="0x1" edc:desc="Channel 7 Software Trigger"/>
            <edc:SFRFieldDef edc:cname="SWTRIG8" edc:nzwidth="0x1" edc:desc="Channel 8 Software Trigger"/>
            <edc:SFRFieldDef edc:cname="SWTRIG9" edc:nzwidth="0x1" edc:desc="Channel 9 Software Trigger"/>
            <edc:SFRFieldDef edc:cname="SWTRIG10" edc:nzwidth="0x1" edc:desc="Channel 10 Software Trigger"/>
            <edc:SFRFieldDef edc:cname="SWTRIG11" edc:nzwidth="0x1" edc:desc="Channel 11 Software Trigger"/>
            <edc:SFRFieldDef edc:cname="SWTRIG12" edc:nzwidth="0x1" edc:desc="Channel 12 Software Trigger"/>
            <edc:SFRFieldDef edc:cname="SWTRIG13" edc:nzwidth="0x1" edc:desc="Channel 13 Software Trigger"/>
            <edc:SFRFieldDef edc:cname="SWTRIG14" edc:nzwidth="0x1" edc:desc="Channel 14 Software Trigger"/>
            <edc:SFRFieldDef edc:cname="SWTRIG15" edc:nzwidth="0x1" edc:desc="Channel 15 Software Trigger"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="PRICTRL0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="01000000010000000100000001000000" edc:mclr="01000000010000000100000001000000" edc:_addr="0x41004014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="LVLPRI0" edc:nzwidth="0x5" edc:desc="Level 0 Channel Priority Number"/>
            <edc:SFRFieldDef edc:cname="QOS0" edc:nzwidth="0x2" edc:desc="Level 0 Quality of Service">
              <edc:SFRFieldSemantic edc:cname="REGULAR" edc:desc="Regular delivery" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SHORTAGE" edc:desc="Bandwidth shortage" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SENSITIVE" edc:desc="Latency sensitive" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="CRITICAL" edc:desc="Latency critical" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RRLVLEN0" edc:nzwidth="0x1" edc:desc="Level 0 Round-Robin Scheduling Enable"/>
            <edc:SFRFieldDef edc:cname="LVLPRI1" edc:nzwidth="0x5" edc:desc="Level 1 Channel Priority Number"/>
            <edc:SFRFieldDef edc:cname="QOS1" edc:nzwidth="0x2" edc:desc="Level 1 Quality of Service">
              <edc:SFRFieldSemantic edc:cname="REGULAR" edc:desc="Regular delivery" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SHORTAGE" edc:desc="Bandwidth shortage" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SENSITIVE" edc:desc="Latency sensitive" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="CRITICAL" edc:desc="Latency critical" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RRLVLEN1" edc:nzwidth="0x1" edc:desc="Level 1 Round-Robin Scheduling Enable"/>
            <edc:SFRFieldDef edc:cname="LVLPRI2" edc:nzwidth="0x5" edc:desc="Level 2 Channel Priority Number"/>
            <edc:SFRFieldDef edc:cname="QOS2" edc:nzwidth="0x2" edc:desc="Level 2 Quality of Service">
              <edc:SFRFieldSemantic edc:cname="REGULAR" edc:desc="Regular delivery" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SHORTAGE" edc:desc="Bandwidth shortage" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SENSITIVE" edc:desc="Latency sensitive" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="CRITICAL" edc:desc="Latency critical" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RRLVLEN2" edc:nzwidth="0x1" edc:desc="Level 2 Round-Robin Scheduling Enable"/>
            <edc:SFRFieldDef edc:cname="LVLPRI3" edc:nzwidth="0x5" edc:desc="Level 3 Channel Priority Number"/>
            <edc:SFRFieldDef edc:cname="QOS3" edc:nzwidth="0x2" edc:desc="Level 3 Quality of Service">
              <edc:SFRFieldSemantic edc:cname="REGULAR" edc:desc="Regular delivery" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SHORTAGE" edc:desc="Bandwidth shortage" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SENSITIVE" edc:desc="Latency sensitive" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="CRITICAL" edc:desc="Latency critical" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RRLVLEN3" edc:nzwidth="0x1" edc:desc="Level 3 Round-Robin Scheduling Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x41004018"/>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="INTPEND" edc:nzwidth="0x10" edc:access="nnnn-nnn---nnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xF71F" edc:_addr="0x41004020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="ID" edc:nzwidth="0x5" edc:desc="Channel ID"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Transfer Error"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Transfer Complete"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CRCERR" edc:nzwidth="0x1" edc:desc="CRC Error"/>
            <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Fetch Error"/>
            <edc:SFRFieldDef edc:cname="BUSY" edc:nzwidth="0x1" edc:desc="Busy"/>
            <edc:SFRFieldDef edc:cname="PEND" edc:nzwidth="0x1" edc:desc="Pending"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x41004022"/>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="INTSTATUS" edc:nzwidth="0x20" edc:access="----------------rrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF" edc:_addr="0x41004024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="CHINT0" edc:nzwidth="0x1" edc:desc="Channel 0 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT1" edc:nzwidth="0x1" edc:desc="Channel 1 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT2" edc:nzwidth="0x1" edc:desc="Channel 2 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT3" edc:nzwidth="0x1" edc:desc="Channel 3 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT4" edc:nzwidth="0x1" edc:desc="Channel 4 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT5" edc:nzwidth="0x1" edc:desc="Channel 5 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT6" edc:nzwidth="0x1" edc:desc="Channel 6 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT7" edc:nzwidth="0x1" edc:desc="Channel 7 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT8" edc:nzwidth="0x1" edc:desc="Channel 8 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT9" edc:nzwidth="0x1" edc:desc="Channel 9 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT10" edc:nzwidth="0x1" edc:desc="Channel 10 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT11" edc:nzwidth="0x1" edc:desc="Channel 11 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT12" edc:nzwidth="0x1" edc:desc="Channel 12 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT13" edc:nzwidth="0x1" edc:desc="Channel 13 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT14" edc:nzwidth="0x1" edc:desc="Channel 14 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT15" edc:nzwidth="0x1" edc:desc="Channel 15 Pending Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="BUSYCH" edc:nzwidth="0x20" edc:access="----------------rrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF" edc:_addr="0x41004028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="BUSYCH0" edc:nzwidth="0x1" edc:desc="Busy Channel 0"/>
            <edc:SFRFieldDef edc:cname="BUSYCH1" edc:nzwidth="0x1" edc:desc="Busy Channel 1"/>
            <edc:SFRFieldDef edc:cname="BUSYCH2" edc:nzwidth="0x1" edc:desc="Busy Channel 2"/>
            <edc:SFRFieldDef edc:cname="BUSYCH3" edc:nzwidth="0x1" edc:desc="Busy Channel 3"/>
            <edc:SFRFieldDef edc:cname="BUSYCH4" edc:nzwidth="0x1" edc:desc="Busy Channel 4"/>
            <edc:SFRFieldDef edc:cname="BUSYCH5" edc:nzwidth="0x1" edc:desc="Busy Channel 5"/>
            <edc:SFRFieldDef edc:cname="BUSYCH6" edc:nzwidth="0x1" edc:desc="Busy Channel 6"/>
            <edc:SFRFieldDef edc:cname="BUSYCH7" edc:nzwidth="0x1" edc:desc="Busy Channel 7"/>
            <edc:SFRFieldDef edc:cname="BUSYCH8" edc:nzwidth="0x1" edc:desc="Busy Channel 8"/>
            <edc:SFRFieldDef edc:cname="BUSYCH9" edc:nzwidth="0x1" edc:desc="Busy Channel 9"/>
            <edc:SFRFieldDef edc:cname="BUSYCH10" edc:nzwidth="0x1" edc:desc="Busy Channel 10"/>
            <edc:SFRFieldDef edc:cname="BUSYCH11" edc:nzwidth="0x1" edc:desc="Busy Channel 11"/>
            <edc:SFRFieldDef edc:cname="BUSYCH12" edc:nzwidth="0x1" edc:desc="Busy Channel 12"/>
            <edc:SFRFieldDef edc:cname="BUSYCH13" edc:nzwidth="0x1" edc:desc="Busy Channel 13"/>
            <edc:SFRFieldDef edc:cname="BUSYCH14" edc:nzwidth="0x1" edc:desc="Busy Channel 14"/>
            <edc:SFRFieldDef edc:cname="BUSYCH15" edc:nzwidth="0x1" edc:desc="Busy Channel 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="PENDCH" edc:nzwidth="0x20" edc:access="----------------rrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF" edc:_addr="0x4100402C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="PENDCH0" edc:nzwidth="0x1" edc:desc="Pending Channel 0"/>
            <edc:SFRFieldDef edc:cname="PENDCH1" edc:nzwidth="0x1" edc:desc="Pending Channel 1"/>
            <edc:SFRFieldDef edc:cname="PENDCH2" edc:nzwidth="0x1" edc:desc="Pending Channel 2"/>
            <edc:SFRFieldDef edc:cname="PENDCH3" edc:nzwidth="0x1" edc:desc="Pending Channel 3"/>
            <edc:SFRFieldDef edc:cname="PENDCH4" edc:nzwidth="0x1" edc:desc="Pending Channel 4"/>
            <edc:SFRFieldDef edc:cname="PENDCH5" edc:nzwidth="0x1" edc:desc="Pending Channel 5"/>
            <edc:SFRFieldDef edc:cname="PENDCH6" edc:nzwidth="0x1" edc:desc="Pending Channel 6"/>
            <edc:SFRFieldDef edc:cname="PENDCH7" edc:nzwidth="0x1" edc:desc="Pending Channel 7"/>
            <edc:SFRFieldDef edc:cname="PENDCH8" edc:nzwidth="0x1" edc:desc="Pending Channel 8"/>
            <edc:SFRFieldDef edc:cname="PENDCH9" edc:nzwidth="0x1" edc:desc="Pending Channel 9"/>
            <edc:SFRFieldDef edc:cname="PENDCH10" edc:nzwidth="0x1" edc:desc="Pending Channel 10"/>
            <edc:SFRFieldDef edc:cname="PENDCH11" edc:nzwidth="0x1" edc:desc="Pending Channel 11"/>
            <edc:SFRFieldDef edc:cname="PENDCH12" edc:nzwidth="0x1" edc:desc="Pending Channel 12"/>
            <edc:SFRFieldDef edc:cname="PENDCH13" edc:nzwidth="0x1" edc:desc="Pending Channel 13"/>
            <edc:SFRFieldDef edc:cname="PENDCH14" edc:nzwidth="0x1" edc:desc="Pending Channel 14"/>
            <edc:SFRFieldDef edc:cname="PENDCH15" edc:nzwidth="0x1" edc:desc="Pending Channel 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="ACTIVE" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrr--rrrrr----rrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF9F0F" edc:_addr="0x41004030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="LVLEX0" edc:nzwidth="0x1" edc:desc="Level 0 Channel Trigger Request Executing"/>
            <edc:SFRFieldDef edc:cname="LVLEX1" edc:nzwidth="0x1" edc:desc="Level 1 Channel Trigger Request Executing"/>
            <edc:SFRFieldDef edc:cname="LVLEX2" edc:nzwidth="0x1" edc:desc="Level 2 Channel Trigger Request Executing"/>
            <edc:SFRFieldDef edc:cname="LVLEX3" edc:nzwidth="0x1" edc:desc="Level 3 Channel Trigger Request Executing"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ID" edc:nzwidth="0x5" edc:desc="Active Channel ID"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ABUSY" edc:nzwidth="0x1" edc:desc="Active Channel Busy"/>
            <edc:SFRFieldDef edc:cname="BTCNT" edc:nzwidth="0x10" edc:desc="Active Channel Block Transfer Count"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="BASEADDR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41004034">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="BASEADDR" edc:nzwidth="0x20" edc:desc="Descriptor Memory Base Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="WRBADDR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41004038">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="WRBADDR" edc:nzwidth="0x20" edc:desc="Write-Back Memory Base Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4100403C"/>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL0CHCTRLA" edc:nzwidth="0x20" edc:access="--nnnnnn--nn-----nnnnnnn-n----nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F307F43" edc:_addr="0x41004040">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Channel Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Channel Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TRIGSRC" edc:nzwidth="0x7" edc:desc="Trigger Source">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Only software/event triggers" edc:when="(field &amp; 0x7F) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="TRIGACT" edc:nzwidth="0x2" edc:desc="Trigger Action">
              <edc:SFRFieldSemantic edc:cname="BLOCK" edc:desc="One trigger required for each block transfer" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="BURST" edc:desc="One trigger required for each burst transfer" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TRANSACTION" edc:desc="One trigger required for each transaction" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="BURSTLEN" edc:nzwidth="0x4" edc:desc="Burst Length">
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single-beat burst length" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="2BEAT" edc:desc="2-beats burst length" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="3BEAT" edc:desc="3-beats burst length" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="4BEAT" edc:desc="4-beats burst length" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="5BEAT" edc:desc="5-beats burst length" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="6BEAT" edc:desc="6-beats burst length" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="7BEAT" edc:desc="7-beats burst length" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="8BEAT" edc:desc="8-beats burst length" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="9BEAT" edc:desc="9-beats burst length" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="10BEAT" edc:desc="10-beats burst length" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="11BEAT" edc:desc="11-beats burst length" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="12BEAT" edc:desc="12-beats burst length" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="13BEAT" edc:desc="13-beats burst length" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="14BEAT" edc:desc="14-beats burst length" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="15BEAT" edc:desc="15-beats burst length" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="16BEAT" edc:desc="16-beats burst length" edc:when="(field &amp; 0xF) == 0x0F"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="THRESHOLD" edc:nzwidth="0x2" edc:desc="FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="1BEAT" edc:desc="Destination write starts after each beat source address read" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="2BEATS" edc:desc="Destination write starts after 2-beats source address read" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="4BEATS" edc:desc="Destination write starts after 4-beats source address read" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="8BEATS" edc:desc="Destination write starts after 8-beats source address read" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL0CHCTRLB" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41004044">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Software Command">
              <edc:SFRFieldSemantic edc:cname="NOACT" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SUSPEND" edc:desc="Channel suspend operation" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RESUME" edc:desc="Channel resume operation" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL0CHPRILVL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41004045">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="PRILVL" edc:nzwidth="0x2" edc:desc="Channel Priority Level">
              <edc:SFRFieldSemantic edc:cname="LVL0" edc:desc="Channel Priority Level 0 (Lowest Level)" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LVL1" edc:desc="Channel Priority Level 1" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="LVL2" edc:desc="Channel Priority Level 2" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="LVL3" edc:desc="Channel Priority Level 3 (Highest Level)" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL0CHEVCTRL" edc:nzwidth="0x8" edc:access="nnnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF7" edc:_addr="0x41004046">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="EVACT" edc:nzwidth="0x3" edc:desc="Channel Event Input Action">
              <edc:SFRFieldSemantic edc:cname="NOACT" edc:desc="No action" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TRIG" edc:desc="Transfer and periodic transfer trigger" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CTRIG" edc:desc="Conditional transfer trigger" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="CBLOCK" edc:desc="Conditional block transfer" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SUSPEND" edc:desc="Channel suspend operation" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RESUME" edc:desc="Channel resume operation" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="SSKIP" edc:desc="Skip next block suspend action" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="INCPRI" edc:desc="Increase priority" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="EVOMODE" edc:nzwidth="0x2" edc:desc="Channel Event Output Mode">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Block event output selection. Refer to BTCTRL.EVOSEL for available selections." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TRIGACT" edc:desc="Ongoing trigger action" edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EVIE" edc:nzwidth="0x1" edc:desc="Channel Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="EVOE" edc:nzwidth="0x1" edc:desc="Channel Event Output Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x5" edc:_addr="0x41004047"/>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL0CHINTENCLR" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x4100404C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL0CHINTENSET" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x4100404D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL0CHINTFLAG" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x4100404E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL0CHSTATUS" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x4100404F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="PEND" edc:nzwidth="0x1" edc:desc="Channel Pending"/>
            <edc:SFRFieldDef edc:cname="BUSY" edc:nzwidth="0x1" edc:desc="Channel Busy"/>
            <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Channel Fetch Error"/>
            <edc:SFRFieldDef edc:cname="CRCERR" edc:nzwidth="0x1" edc:desc="Channel CRC Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL1CHCTRLA" edc:nzwidth="0x20" edc:access="--nnnnnn--nn-----nnnnnnn-n----nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F307F43" edc:_addr="0x41004050">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Channel Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Channel Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TRIGSRC" edc:nzwidth="0x7" edc:desc="Trigger Source">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Only software/event triggers" edc:when="(field &amp; 0x7F) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="TRIGACT" edc:nzwidth="0x2" edc:desc="Trigger Action">
              <edc:SFRFieldSemantic edc:cname="BLOCK" edc:desc="One trigger required for each block transfer" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="BURST" edc:desc="One trigger required for each burst transfer" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TRANSACTION" edc:desc="One trigger required for each transaction" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="BURSTLEN" edc:nzwidth="0x4" edc:desc="Burst Length">
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single-beat burst length" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="2BEAT" edc:desc="2-beats burst length" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="3BEAT" edc:desc="3-beats burst length" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="4BEAT" edc:desc="4-beats burst length" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="5BEAT" edc:desc="5-beats burst length" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="6BEAT" edc:desc="6-beats burst length" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="7BEAT" edc:desc="7-beats burst length" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="8BEAT" edc:desc="8-beats burst length" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="9BEAT" edc:desc="9-beats burst length" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="10BEAT" edc:desc="10-beats burst length" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="11BEAT" edc:desc="11-beats burst length" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="12BEAT" edc:desc="12-beats burst length" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="13BEAT" edc:desc="13-beats burst length" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="14BEAT" edc:desc="14-beats burst length" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="15BEAT" edc:desc="15-beats burst length" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="16BEAT" edc:desc="16-beats burst length" edc:when="(field &amp; 0xF) == 0x0F"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="THRESHOLD" edc:nzwidth="0x2" edc:desc="FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="1BEAT" edc:desc="Destination write starts after each beat source address read" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="2BEATS" edc:desc="Destination write starts after 2-beats source address read" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="4BEATS" edc:desc="Destination write starts after 4-beats source address read" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="8BEATS" edc:desc="Destination write starts after 8-beats source address read" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL1CHCTRLB" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41004054">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Software Command">
              <edc:SFRFieldSemantic edc:cname="NOACT" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SUSPEND" edc:desc="Channel suspend operation" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RESUME" edc:desc="Channel resume operation" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL1CHPRILVL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41004055">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="PRILVL" edc:nzwidth="0x2" edc:desc="Channel Priority Level">
              <edc:SFRFieldSemantic edc:cname="LVL0" edc:desc="Channel Priority Level 0 (Lowest Level)" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LVL1" edc:desc="Channel Priority Level 1" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="LVL2" edc:desc="Channel Priority Level 2" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="LVL3" edc:desc="Channel Priority Level 3 (Highest Level)" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL1CHEVCTRL" edc:nzwidth="0x8" edc:access="nnnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF7" edc:_addr="0x41004056">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="EVACT" edc:nzwidth="0x3" edc:desc="Channel Event Input Action">
              <edc:SFRFieldSemantic edc:cname="NOACT" edc:desc="No action" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TRIG" edc:desc="Transfer and periodic transfer trigger" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CTRIG" edc:desc="Conditional transfer trigger" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="CBLOCK" edc:desc="Conditional block transfer" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SUSPEND" edc:desc="Channel suspend operation" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RESUME" edc:desc="Channel resume operation" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="SSKIP" edc:desc="Skip next block suspend action" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="INCPRI" edc:desc="Increase priority" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="EVOMODE" edc:nzwidth="0x2" edc:desc="Channel Event Output Mode">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Block event output selection. Refer to BTCTRL.EVOSEL for available selections." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TRIGACT" edc:desc="Ongoing trigger action" edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EVIE" edc:nzwidth="0x1" edc:desc="Channel Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="EVOE" edc:nzwidth="0x1" edc:desc="Channel Event Output Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x5" edc:_addr="0x41004057"/>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL1CHINTENCLR" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x4100405C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL1CHINTENSET" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x4100405D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL1CHINTFLAG" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x4100405E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL1CHSTATUS" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x4100405F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="PEND" edc:nzwidth="0x1" edc:desc="Channel Pending"/>
            <edc:SFRFieldDef edc:cname="BUSY" edc:nzwidth="0x1" edc:desc="Channel Busy"/>
            <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Channel Fetch Error"/>
            <edc:SFRFieldDef edc:cname="CRCERR" edc:nzwidth="0x1" edc:desc="Channel CRC Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL2CHCTRLA" edc:nzwidth="0x20" edc:access="--nnnnnn--nn-----nnnnnnn-n----nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F307F43" edc:_addr="0x41004060">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Channel Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Channel Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TRIGSRC" edc:nzwidth="0x7" edc:desc="Trigger Source">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Only software/event triggers" edc:when="(field &amp; 0x7F) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="TRIGACT" edc:nzwidth="0x2" edc:desc="Trigger Action">
              <edc:SFRFieldSemantic edc:cname="BLOCK" edc:desc="One trigger required for each block transfer" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="BURST" edc:desc="One trigger required for each burst transfer" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TRANSACTION" edc:desc="One trigger required for each transaction" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="BURSTLEN" edc:nzwidth="0x4" edc:desc="Burst Length">
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single-beat burst length" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="2BEAT" edc:desc="2-beats burst length" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="3BEAT" edc:desc="3-beats burst length" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="4BEAT" edc:desc="4-beats burst length" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="5BEAT" edc:desc="5-beats burst length" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="6BEAT" edc:desc="6-beats burst length" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="7BEAT" edc:desc="7-beats burst length" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="8BEAT" edc:desc="8-beats burst length" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="9BEAT" edc:desc="9-beats burst length" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="10BEAT" edc:desc="10-beats burst length" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="11BEAT" edc:desc="11-beats burst length" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="12BEAT" edc:desc="12-beats burst length" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="13BEAT" edc:desc="13-beats burst length" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="14BEAT" edc:desc="14-beats burst length" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="15BEAT" edc:desc="15-beats burst length" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="16BEAT" edc:desc="16-beats burst length" edc:when="(field &amp; 0xF) == 0x0F"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="THRESHOLD" edc:nzwidth="0x2" edc:desc="FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="1BEAT" edc:desc="Destination write starts after each beat source address read" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="2BEATS" edc:desc="Destination write starts after 2-beats source address read" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="4BEATS" edc:desc="Destination write starts after 4-beats source address read" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="8BEATS" edc:desc="Destination write starts after 8-beats source address read" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL2CHCTRLB" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41004064">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Software Command">
              <edc:SFRFieldSemantic edc:cname="NOACT" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SUSPEND" edc:desc="Channel suspend operation" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RESUME" edc:desc="Channel resume operation" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL2CHPRILVL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41004065">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="PRILVL" edc:nzwidth="0x2" edc:desc="Channel Priority Level">
              <edc:SFRFieldSemantic edc:cname="LVL0" edc:desc="Channel Priority Level 0 (Lowest Level)" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LVL1" edc:desc="Channel Priority Level 1" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="LVL2" edc:desc="Channel Priority Level 2" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="LVL3" edc:desc="Channel Priority Level 3 (Highest Level)" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL2CHEVCTRL" edc:nzwidth="0x8" edc:access="nnnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF7" edc:_addr="0x41004066">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="EVACT" edc:nzwidth="0x3" edc:desc="Channel Event Input Action">
              <edc:SFRFieldSemantic edc:cname="NOACT" edc:desc="No action" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TRIG" edc:desc="Transfer and periodic transfer trigger" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CTRIG" edc:desc="Conditional transfer trigger" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="CBLOCK" edc:desc="Conditional block transfer" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SUSPEND" edc:desc="Channel suspend operation" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RESUME" edc:desc="Channel resume operation" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="SSKIP" edc:desc="Skip next block suspend action" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="INCPRI" edc:desc="Increase priority" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="EVOMODE" edc:nzwidth="0x2" edc:desc="Channel Event Output Mode">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Block event output selection. Refer to BTCTRL.EVOSEL for available selections." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TRIGACT" edc:desc="Ongoing trigger action" edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EVIE" edc:nzwidth="0x1" edc:desc="Channel Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="EVOE" edc:nzwidth="0x1" edc:desc="Channel Event Output Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x5" edc:_addr="0x41004067"/>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL2CHINTENCLR" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x4100406C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL2CHINTENSET" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x4100406D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL2CHINTFLAG" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x4100406E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL2CHSTATUS" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x4100406F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="PEND" edc:nzwidth="0x1" edc:desc="Channel Pending"/>
            <edc:SFRFieldDef edc:cname="BUSY" edc:nzwidth="0x1" edc:desc="Channel Busy"/>
            <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Channel Fetch Error"/>
            <edc:SFRFieldDef edc:cname="CRCERR" edc:nzwidth="0x1" edc:desc="Channel CRC Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL3CHCTRLA" edc:nzwidth="0x20" edc:access="--nnnnnn--nn-----nnnnnnn-n----nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F307F43" edc:_addr="0x41004070">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Channel Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Channel Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TRIGSRC" edc:nzwidth="0x7" edc:desc="Trigger Source">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Only software/event triggers" edc:when="(field &amp; 0x7F) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="TRIGACT" edc:nzwidth="0x2" edc:desc="Trigger Action">
              <edc:SFRFieldSemantic edc:cname="BLOCK" edc:desc="One trigger required for each block transfer" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="BURST" edc:desc="One trigger required for each burst transfer" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TRANSACTION" edc:desc="One trigger required for each transaction" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="BURSTLEN" edc:nzwidth="0x4" edc:desc="Burst Length">
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single-beat burst length" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="2BEAT" edc:desc="2-beats burst length" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="3BEAT" edc:desc="3-beats burst length" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="4BEAT" edc:desc="4-beats burst length" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="5BEAT" edc:desc="5-beats burst length" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="6BEAT" edc:desc="6-beats burst length" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="7BEAT" edc:desc="7-beats burst length" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="8BEAT" edc:desc="8-beats burst length" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="9BEAT" edc:desc="9-beats burst length" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="10BEAT" edc:desc="10-beats burst length" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="11BEAT" edc:desc="11-beats burst length" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="12BEAT" edc:desc="12-beats burst length" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="13BEAT" edc:desc="13-beats burst length" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="14BEAT" edc:desc="14-beats burst length" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="15BEAT" edc:desc="15-beats burst length" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="16BEAT" edc:desc="16-beats burst length" edc:when="(field &amp; 0xF) == 0x0F"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="THRESHOLD" edc:nzwidth="0x2" edc:desc="FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="1BEAT" edc:desc="Destination write starts after each beat source address read" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="2BEATS" edc:desc="Destination write starts after 2-beats source address read" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="4BEATS" edc:desc="Destination write starts after 4-beats source address read" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="8BEATS" edc:desc="Destination write starts after 8-beats source address read" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL3CHCTRLB" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41004074">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Software Command">
              <edc:SFRFieldSemantic edc:cname="NOACT" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SUSPEND" edc:desc="Channel suspend operation" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RESUME" edc:desc="Channel resume operation" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL3CHPRILVL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41004075">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="PRILVL" edc:nzwidth="0x2" edc:desc="Channel Priority Level">
              <edc:SFRFieldSemantic edc:cname="LVL0" edc:desc="Channel Priority Level 0 (Lowest Level)" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LVL1" edc:desc="Channel Priority Level 1" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="LVL2" edc:desc="Channel Priority Level 2" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="LVL3" edc:desc="Channel Priority Level 3 (Highest Level)" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL3CHEVCTRL" edc:nzwidth="0x8" edc:access="nnnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF7" edc:_addr="0x41004076">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="EVACT" edc:nzwidth="0x3" edc:desc="Channel Event Input Action">
              <edc:SFRFieldSemantic edc:cname="NOACT" edc:desc="No action" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TRIG" edc:desc="Transfer and periodic transfer trigger" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CTRIG" edc:desc="Conditional transfer trigger" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="CBLOCK" edc:desc="Conditional block transfer" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SUSPEND" edc:desc="Channel suspend operation" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RESUME" edc:desc="Channel resume operation" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="SSKIP" edc:desc="Skip next block suspend action" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="INCPRI" edc:desc="Increase priority" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="EVOMODE" edc:nzwidth="0x2" edc:desc="Channel Event Output Mode">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Block event output selection. Refer to BTCTRL.EVOSEL for available selections." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TRIGACT" edc:desc="Ongoing trigger action" edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EVIE" edc:nzwidth="0x1" edc:desc="Channel Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="EVOE" edc:nzwidth="0x1" edc:desc="Channel Event Output Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x5" edc:_addr="0x41004077"/>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL3CHINTENCLR" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x4100407C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL3CHINTENSET" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x4100407D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL3CHINTFLAG" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x4100407E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL3CHSTATUS" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x4100407F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="PEND" edc:nzwidth="0x1" edc:desc="Channel Pending"/>
            <edc:SFRFieldDef edc:cname="BUSY" edc:nzwidth="0x1" edc:desc="Channel Busy"/>
            <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Channel Fetch Error"/>
            <edc:SFRFieldDef edc:cname="CRCERR" edc:nzwidth="0x1" edc:desc="Channel CRC Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL4CHCTRLA" edc:nzwidth="0x20" edc:access="--nnnnnn--nn-----nnnnnnn-n----nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F307F43" edc:_addr="0x41004080">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Channel Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Channel Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TRIGSRC" edc:nzwidth="0x7" edc:desc="Trigger Source">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Only software/event triggers" edc:when="(field &amp; 0x7F) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="TRIGACT" edc:nzwidth="0x2" edc:desc="Trigger Action">
              <edc:SFRFieldSemantic edc:cname="BLOCK" edc:desc="One trigger required for each block transfer" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="BURST" edc:desc="One trigger required for each burst transfer" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TRANSACTION" edc:desc="One trigger required for each transaction" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="BURSTLEN" edc:nzwidth="0x4" edc:desc="Burst Length">
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single-beat burst length" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="2BEAT" edc:desc="2-beats burst length" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="3BEAT" edc:desc="3-beats burst length" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="4BEAT" edc:desc="4-beats burst length" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="5BEAT" edc:desc="5-beats burst length" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="6BEAT" edc:desc="6-beats burst length" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="7BEAT" edc:desc="7-beats burst length" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="8BEAT" edc:desc="8-beats burst length" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="9BEAT" edc:desc="9-beats burst length" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="10BEAT" edc:desc="10-beats burst length" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="11BEAT" edc:desc="11-beats burst length" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="12BEAT" edc:desc="12-beats burst length" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="13BEAT" edc:desc="13-beats burst length" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="14BEAT" edc:desc="14-beats burst length" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="15BEAT" edc:desc="15-beats burst length" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="16BEAT" edc:desc="16-beats burst length" edc:when="(field &amp; 0xF) == 0x0F"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="THRESHOLD" edc:nzwidth="0x2" edc:desc="FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="1BEAT" edc:desc="Destination write starts after each beat source address read" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="2BEATS" edc:desc="Destination write starts after 2-beats source address read" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="4BEATS" edc:desc="Destination write starts after 4-beats source address read" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="8BEATS" edc:desc="Destination write starts after 8-beats source address read" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL4CHCTRLB" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41004084">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Software Command">
              <edc:SFRFieldSemantic edc:cname="NOACT" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SUSPEND" edc:desc="Channel suspend operation" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RESUME" edc:desc="Channel resume operation" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL4CHPRILVL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41004085">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="PRILVL" edc:nzwidth="0x2" edc:desc="Channel Priority Level">
              <edc:SFRFieldSemantic edc:cname="LVL0" edc:desc="Channel Priority Level 0 (Lowest Level)" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LVL1" edc:desc="Channel Priority Level 1" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="LVL2" edc:desc="Channel Priority Level 2" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="LVL3" edc:desc="Channel Priority Level 3 (Highest Level)" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL4CHEVCTRL" edc:nzwidth="0x8" edc:access="nnnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF7" edc:_addr="0x41004086">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="EVACT" edc:nzwidth="0x3" edc:desc="Channel Event Input Action">
              <edc:SFRFieldSemantic edc:cname="NOACT" edc:desc="No action" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TRIG" edc:desc="Transfer and periodic transfer trigger" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CTRIG" edc:desc="Conditional transfer trigger" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="CBLOCK" edc:desc="Conditional block transfer" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SUSPEND" edc:desc="Channel suspend operation" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RESUME" edc:desc="Channel resume operation" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="SSKIP" edc:desc="Skip next block suspend action" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="INCPRI" edc:desc="Increase priority" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="EVOMODE" edc:nzwidth="0x2" edc:desc="Channel Event Output Mode">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Block event output selection. Refer to BTCTRL.EVOSEL for available selections." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TRIGACT" edc:desc="Ongoing trigger action" edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EVIE" edc:nzwidth="0x1" edc:desc="Channel Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="EVOE" edc:nzwidth="0x1" edc:desc="Channel Event Output Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x5" edc:_addr="0x41004087"/>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL4CHINTENCLR" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x4100408C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL4CHINTENSET" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x4100408D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL4CHINTFLAG" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x4100408E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL4CHSTATUS" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x4100408F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="PEND" edc:nzwidth="0x1" edc:desc="Channel Pending"/>
            <edc:SFRFieldDef edc:cname="BUSY" edc:nzwidth="0x1" edc:desc="Channel Busy"/>
            <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Channel Fetch Error"/>
            <edc:SFRFieldDef edc:cname="CRCERR" edc:nzwidth="0x1" edc:desc="Channel CRC Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL5CHCTRLA" edc:nzwidth="0x20" edc:access="--nnnnnn--nn-----nnnnnnn-n----nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F307F43" edc:_addr="0x41004090">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Channel Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Channel Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TRIGSRC" edc:nzwidth="0x7" edc:desc="Trigger Source">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Only software/event triggers" edc:when="(field &amp; 0x7F) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="TRIGACT" edc:nzwidth="0x2" edc:desc="Trigger Action">
              <edc:SFRFieldSemantic edc:cname="BLOCK" edc:desc="One trigger required for each block transfer" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="BURST" edc:desc="One trigger required for each burst transfer" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TRANSACTION" edc:desc="One trigger required for each transaction" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="BURSTLEN" edc:nzwidth="0x4" edc:desc="Burst Length">
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single-beat burst length" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="2BEAT" edc:desc="2-beats burst length" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="3BEAT" edc:desc="3-beats burst length" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="4BEAT" edc:desc="4-beats burst length" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="5BEAT" edc:desc="5-beats burst length" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="6BEAT" edc:desc="6-beats burst length" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="7BEAT" edc:desc="7-beats burst length" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="8BEAT" edc:desc="8-beats burst length" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="9BEAT" edc:desc="9-beats burst length" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="10BEAT" edc:desc="10-beats burst length" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="11BEAT" edc:desc="11-beats burst length" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="12BEAT" edc:desc="12-beats burst length" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="13BEAT" edc:desc="13-beats burst length" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="14BEAT" edc:desc="14-beats burst length" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="15BEAT" edc:desc="15-beats burst length" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="16BEAT" edc:desc="16-beats burst length" edc:when="(field &amp; 0xF) == 0x0F"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="THRESHOLD" edc:nzwidth="0x2" edc:desc="FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="1BEAT" edc:desc="Destination write starts after each beat source address read" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="2BEATS" edc:desc="Destination write starts after 2-beats source address read" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="4BEATS" edc:desc="Destination write starts after 4-beats source address read" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="8BEATS" edc:desc="Destination write starts after 8-beats source address read" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL5CHCTRLB" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41004094">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Software Command">
              <edc:SFRFieldSemantic edc:cname="NOACT" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SUSPEND" edc:desc="Channel suspend operation" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RESUME" edc:desc="Channel resume operation" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL5CHPRILVL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41004095">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="PRILVL" edc:nzwidth="0x2" edc:desc="Channel Priority Level">
              <edc:SFRFieldSemantic edc:cname="LVL0" edc:desc="Channel Priority Level 0 (Lowest Level)" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LVL1" edc:desc="Channel Priority Level 1" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="LVL2" edc:desc="Channel Priority Level 2" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="LVL3" edc:desc="Channel Priority Level 3 (Highest Level)" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL5CHEVCTRL" edc:nzwidth="0x8" edc:access="nnnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF7" edc:_addr="0x41004096">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="EVACT" edc:nzwidth="0x3" edc:desc="Channel Event Input Action">
              <edc:SFRFieldSemantic edc:cname="NOACT" edc:desc="No action" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TRIG" edc:desc="Transfer and periodic transfer trigger" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CTRIG" edc:desc="Conditional transfer trigger" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="CBLOCK" edc:desc="Conditional block transfer" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SUSPEND" edc:desc="Channel suspend operation" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RESUME" edc:desc="Channel resume operation" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="SSKIP" edc:desc="Skip next block suspend action" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="INCPRI" edc:desc="Increase priority" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="EVOMODE" edc:nzwidth="0x2" edc:desc="Channel Event Output Mode">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Block event output selection. Refer to BTCTRL.EVOSEL for available selections." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TRIGACT" edc:desc="Ongoing trigger action" edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EVIE" edc:nzwidth="0x1" edc:desc="Channel Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="EVOE" edc:nzwidth="0x1" edc:desc="Channel Event Output Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x5" edc:_addr="0x41004097"/>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL5CHINTENCLR" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x4100409C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL5CHINTENSET" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x4100409D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL5CHINTFLAG" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x4100409E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL5CHSTATUS" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x4100409F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="PEND" edc:nzwidth="0x1" edc:desc="Channel Pending"/>
            <edc:SFRFieldDef edc:cname="BUSY" edc:nzwidth="0x1" edc:desc="Channel Busy"/>
            <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Channel Fetch Error"/>
            <edc:SFRFieldDef edc:cname="CRCERR" edc:nzwidth="0x1" edc:desc="Channel CRC Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL6CHCTRLA" edc:nzwidth="0x20" edc:access="--nnnnnn--nn-----nnnnnnn-n----nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F307F43" edc:_addr="0x410040A0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Channel Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Channel Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TRIGSRC" edc:nzwidth="0x7" edc:desc="Trigger Source">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Only software/event triggers" edc:when="(field &amp; 0x7F) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="TRIGACT" edc:nzwidth="0x2" edc:desc="Trigger Action">
              <edc:SFRFieldSemantic edc:cname="BLOCK" edc:desc="One trigger required for each block transfer" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="BURST" edc:desc="One trigger required for each burst transfer" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TRANSACTION" edc:desc="One trigger required for each transaction" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="BURSTLEN" edc:nzwidth="0x4" edc:desc="Burst Length">
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single-beat burst length" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="2BEAT" edc:desc="2-beats burst length" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="3BEAT" edc:desc="3-beats burst length" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="4BEAT" edc:desc="4-beats burst length" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="5BEAT" edc:desc="5-beats burst length" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="6BEAT" edc:desc="6-beats burst length" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="7BEAT" edc:desc="7-beats burst length" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="8BEAT" edc:desc="8-beats burst length" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="9BEAT" edc:desc="9-beats burst length" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="10BEAT" edc:desc="10-beats burst length" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="11BEAT" edc:desc="11-beats burst length" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="12BEAT" edc:desc="12-beats burst length" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="13BEAT" edc:desc="13-beats burst length" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="14BEAT" edc:desc="14-beats burst length" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="15BEAT" edc:desc="15-beats burst length" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="16BEAT" edc:desc="16-beats burst length" edc:when="(field &amp; 0xF) == 0x0F"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="THRESHOLD" edc:nzwidth="0x2" edc:desc="FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="1BEAT" edc:desc="Destination write starts after each beat source address read" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="2BEATS" edc:desc="Destination write starts after 2-beats source address read" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="4BEATS" edc:desc="Destination write starts after 4-beats source address read" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="8BEATS" edc:desc="Destination write starts after 8-beats source address read" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL6CHCTRLB" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x410040A4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Software Command">
              <edc:SFRFieldSemantic edc:cname="NOACT" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SUSPEND" edc:desc="Channel suspend operation" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RESUME" edc:desc="Channel resume operation" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL6CHPRILVL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x410040A5">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="PRILVL" edc:nzwidth="0x2" edc:desc="Channel Priority Level">
              <edc:SFRFieldSemantic edc:cname="LVL0" edc:desc="Channel Priority Level 0 (Lowest Level)" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LVL1" edc:desc="Channel Priority Level 1" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="LVL2" edc:desc="Channel Priority Level 2" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="LVL3" edc:desc="Channel Priority Level 3 (Highest Level)" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL6CHEVCTRL" edc:nzwidth="0x8" edc:access="nnnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF7" edc:_addr="0x410040A6">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="EVACT" edc:nzwidth="0x3" edc:desc="Channel Event Input Action">
              <edc:SFRFieldSemantic edc:cname="NOACT" edc:desc="No action" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TRIG" edc:desc="Transfer and periodic transfer trigger" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CTRIG" edc:desc="Conditional transfer trigger" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="CBLOCK" edc:desc="Conditional block transfer" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SUSPEND" edc:desc="Channel suspend operation" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RESUME" edc:desc="Channel resume operation" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="SSKIP" edc:desc="Skip next block suspend action" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="INCPRI" edc:desc="Increase priority" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="EVOMODE" edc:nzwidth="0x2" edc:desc="Channel Event Output Mode">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Block event output selection. Refer to BTCTRL.EVOSEL for available selections." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TRIGACT" edc:desc="Ongoing trigger action" edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EVIE" edc:nzwidth="0x1" edc:desc="Channel Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="EVOE" edc:nzwidth="0x1" edc:desc="Channel Event Output Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x5" edc:_addr="0x410040A7"/>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL6CHINTENCLR" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x410040AC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL6CHINTENSET" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x410040AD">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL6CHINTFLAG" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x410040AE">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL6CHSTATUS" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x410040AF">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="PEND" edc:nzwidth="0x1" edc:desc="Channel Pending"/>
            <edc:SFRFieldDef edc:cname="BUSY" edc:nzwidth="0x1" edc:desc="Channel Busy"/>
            <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Channel Fetch Error"/>
            <edc:SFRFieldDef edc:cname="CRCERR" edc:nzwidth="0x1" edc:desc="Channel CRC Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL7CHCTRLA" edc:nzwidth="0x20" edc:access="--nnnnnn--nn-----nnnnnnn-n----nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F307F43" edc:_addr="0x410040B0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Channel Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Channel Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TRIGSRC" edc:nzwidth="0x7" edc:desc="Trigger Source">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Only software/event triggers" edc:when="(field &amp; 0x7F) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="TRIGACT" edc:nzwidth="0x2" edc:desc="Trigger Action">
              <edc:SFRFieldSemantic edc:cname="BLOCK" edc:desc="One trigger required for each block transfer" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="BURST" edc:desc="One trigger required for each burst transfer" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TRANSACTION" edc:desc="One trigger required for each transaction" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="BURSTLEN" edc:nzwidth="0x4" edc:desc="Burst Length">
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single-beat burst length" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="2BEAT" edc:desc="2-beats burst length" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="3BEAT" edc:desc="3-beats burst length" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="4BEAT" edc:desc="4-beats burst length" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="5BEAT" edc:desc="5-beats burst length" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="6BEAT" edc:desc="6-beats burst length" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="7BEAT" edc:desc="7-beats burst length" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="8BEAT" edc:desc="8-beats burst length" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="9BEAT" edc:desc="9-beats burst length" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="10BEAT" edc:desc="10-beats burst length" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="11BEAT" edc:desc="11-beats burst length" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="12BEAT" edc:desc="12-beats burst length" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="13BEAT" edc:desc="13-beats burst length" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="14BEAT" edc:desc="14-beats burst length" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="15BEAT" edc:desc="15-beats burst length" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="16BEAT" edc:desc="16-beats burst length" edc:when="(field &amp; 0xF) == 0x0F"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="THRESHOLD" edc:nzwidth="0x2" edc:desc="FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="1BEAT" edc:desc="Destination write starts after each beat source address read" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="2BEATS" edc:desc="Destination write starts after 2-beats source address read" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="4BEATS" edc:desc="Destination write starts after 4-beats source address read" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="8BEATS" edc:desc="Destination write starts after 8-beats source address read" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL7CHCTRLB" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x410040B4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Software Command">
              <edc:SFRFieldSemantic edc:cname="NOACT" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SUSPEND" edc:desc="Channel suspend operation" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RESUME" edc:desc="Channel resume operation" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL7CHPRILVL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x410040B5">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="PRILVL" edc:nzwidth="0x2" edc:desc="Channel Priority Level">
              <edc:SFRFieldSemantic edc:cname="LVL0" edc:desc="Channel Priority Level 0 (Lowest Level)" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LVL1" edc:desc="Channel Priority Level 1" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="LVL2" edc:desc="Channel Priority Level 2" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="LVL3" edc:desc="Channel Priority Level 3 (Highest Level)" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL7CHEVCTRL" edc:nzwidth="0x8" edc:access="nnnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF7" edc:_addr="0x410040B6">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="EVACT" edc:nzwidth="0x3" edc:desc="Channel Event Input Action">
              <edc:SFRFieldSemantic edc:cname="NOACT" edc:desc="No action" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TRIG" edc:desc="Transfer and periodic transfer trigger" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CTRIG" edc:desc="Conditional transfer trigger" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="CBLOCK" edc:desc="Conditional block transfer" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SUSPEND" edc:desc="Channel suspend operation" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RESUME" edc:desc="Channel resume operation" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="SSKIP" edc:desc="Skip next block suspend action" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="INCPRI" edc:desc="Increase priority" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="EVOMODE" edc:nzwidth="0x2" edc:desc="Channel Event Output Mode">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Block event output selection. Refer to BTCTRL.EVOSEL for available selections." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TRIGACT" edc:desc="Ongoing trigger action" edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EVIE" edc:nzwidth="0x1" edc:desc="Channel Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="EVOE" edc:nzwidth="0x1" edc:desc="Channel Event Output Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x5" edc:_addr="0x410040B7"/>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL7CHINTENCLR" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x410040BC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL7CHINTENSET" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x410040BD">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL7CHINTFLAG" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x410040BE">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL7CHSTATUS" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x410040BF">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="PEND" edc:nzwidth="0x1" edc:desc="Channel Pending"/>
            <edc:SFRFieldDef edc:cname="BUSY" edc:nzwidth="0x1" edc:desc="Channel Busy"/>
            <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Channel Fetch Error"/>
            <edc:SFRFieldDef edc:cname="CRCERR" edc:nzwidth="0x1" edc:desc="Channel CRC Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL8CHCTRLA" edc:nzwidth="0x20" edc:access="--nnnnnn--nn-----nnnnnnn-n----nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F307F43" edc:_addr="0x410040C0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Channel Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Channel Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TRIGSRC" edc:nzwidth="0x7" edc:desc="Trigger Source">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Only software/event triggers" edc:when="(field &amp; 0x7F) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="TRIGACT" edc:nzwidth="0x2" edc:desc="Trigger Action">
              <edc:SFRFieldSemantic edc:cname="BLOCK" edc:desc="One trigger required for each block transfer" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="BURST" edc:desc="One trigger required for each burst transfer" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TRANSACTION" edc:desc="One trigger required for each transaction" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="BURSTLEN" edc:nzwidth="0x4" edc:desc="Burst Length">
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single-beat burst length" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="2BEAT" edc:desc="2-beats burst length" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="3BEAT" edc:desc="3-beats burst length" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="4BEAT" edc:desc="4-beats burst length" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="5BEAT" edc:desc="5-beats burst length" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="6BEAT" edc:desc="6-beats burst length" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="7BEAT" edc:desc="7-beats burst length" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="8BEAT" edc:desc="8-beats burst length" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="9BEAT" edc:desc="9-beats burst length" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="10BEAT" edc:desc="10-beats burst length" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="11BEAT" edc:desc="11-beats burst length" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="12BEAT" edc:desc="12-beats burst length" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="13BEAT" edc:desc="13-beats burst length" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="14BEAT" edc:desc="14-beats burst length" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="15BEAT" edc:desc="15-beats burst length" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="16BEAT" edc:desc="16-beats burst length" edc:when="(field &amp; 0xF) == 0x0F"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="THRESHOLD" edc:nzwidth="0x2" edc:desc="FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="1BEAT" edc:desc="Destination write starts after each beat source address read" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="2BEATS" edc:desc="Destination write starts after 2-beats source address read" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="4BEATS" edc:desc="Destination write starts after 4-beats source address read" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="8BEATS" edc:desc="Destination write starts after 8-beats source address read" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL8CHCTRLB" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x410040C4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Software Command">
              <edc:SFRFieldSemantic edc:cname="NOACT" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SUSPEND" edc:desc="Channel suspend operation" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RESUME" edc:desc="Channel resume operation" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL8CHPRILVL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x410040C5">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="PRILVL" edc:nzwidth="0x2" edc:desc="Channel Priority Level">
              <edc:SFRFieldSemantic edc:cname="LVL0" edc:desc="Channel Priority Level 0 (Lowest Level)" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LVL1" edc:desc="Channel Priority Level 1" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="LVL2" edc:desc="Channel Priority Level 2" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="LVL3" edc:desc="Channel Priority Level 3 (Highest Level)" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL8CHEVCTRL" edc:nzwidth="0x8" edc:access="nnnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF7" edc:_addr="0x410040C6">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="EVACT" edc:nzwidth="0x3" edc:desc="Channel Event Input Action">
              <edc:SFRFieldSemantic edc:cname="NOACT" edc:desc="No action" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TRIG" edc:desc="Transfer and periodic transfer trigger" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CTRIG" edc:desc="Conditional transfer trigger" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="CBLOCK" edc:desc="Conditional block transfer" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SUSPEND" edc:desc="Channel suspend operation" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RESUME" edc:desc="Channel resume operation" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="SSKIP" edc:desc="Skip next block suspend action" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="INCPRI" edc:desc="Increase priority" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="EVOMODE" edc:nzwidth="0x2" edc:desc="Channel Event Output Mode">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Block event output selection. Refer to BTCTRL.EVOSEL for available selections." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TRIGACT" edc:desc="Ongoing trigger action" edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EVIE" edc:nzwidth="0x1" edc:desc="Channel Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="EVOE" edc:nzwidth="0x1" edc:desc="Channel Event Output Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x5" edc:_addr="0x410040C7"/>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL8CHINTENCLR" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x410040CC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL8CHINTENSET" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x410040CD">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL8CHINTFLAG" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x410040CE">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL8CHSTATUS" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x410040CF">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="PEND" edc:nzwidth="0x1" edc:desc="Channel Pending"/>
            <edc:SFRFieldDef edc:cname="BUSY" edc:nzwidth="0x1" edc:desc="Channel Busy"/>
            <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Channel Fetch Error"/>
            <edc:SFRFieldDef edc:cname="CRCERR" edc:nzwidth="0x1" edc:desc="Channel CRC Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL9CHCTRLA" edc:nzwidth="0x20" edc:access="--nnnnnn--nn-----nnnnnnn-n----nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F307F43" edc:_addr="0x410040D0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Channel Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Channel Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TRIGSRC" edc:nzwidth="0x7" edc:desc="Trigger Source">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Only software/event triggers" edc:when="(field &amp; 0x7F) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="TRIGACT" edc:nzwidth="0x2" edc:desc="Trigger Action">
              <edc:SFRFieldSemantic edc:cname="BLOCK" edc:desc="One trigger required for each block transfer" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="BURST" edc:desc="One trigger required for each burst transfer" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TRANSACTION" edc:desc="One trigger required for each transaction" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="BURSTLEN" edc:nzwidth="0x4" edc:desc="Burst Length">
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single-beat burst length" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="2BEAT" edc:desc="2-beats burst length" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="3BEAT" edc:desc="3-beats burst length" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="4BEAT" edc:desc="4-beats burst length" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="5BEAT" edc:desc="5-beats burst length" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="6BEAT" edc:desc="6-beats burst length" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="7BEAT" edc:desc="7-beats burst length" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="8BEAT" edc:desc="8-beats burst length" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="9BEAT" edc:desc="9-beats burst length" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="10BEAT" edc:desc="10-beats burst length" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="11BEAT" edc:desc="11-beats burst length" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="12BEAT" edc:desc="12-beats burst length" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="13BEAT" edc:desc="13-beats burst length" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="14BEAT" edc:desc="14-beats burst length" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="15BEAT" edc:desc="15-beats burst length" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="16BEAT" edc:desc="16-beats burst length" edc:when="(field &amp; 0xF) == 0x0F"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="THRESHOLD" edc:nzwidth="0x2" edc:desc="FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="1BEAT" edc:desc="Destination write starts after each beat source address read" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="2BEATS" edc:desc="Destination write starts after 2-beats source address read" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="4BEATS" edc:desc="Destination write starts after 4-beats source address read" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="8BEATS" edc:desc="Destination write starts after 8-beats source address read" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL9CHCTRLB" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x410040D4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Software Command">
              <edc:SFRFieldSemantic edc:cname="NOACT" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SUSPEND" edc:desc="Channel suspend operation" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RESUME" edc:desc="Channel resume operation" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL9CHPRILVL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x410040D5">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="PRILVL" edc:nzwidth="0x2" edc:desc="Channel Priority Level">
              <edc:SFRFieldSemantic edc:cname="LVL0" edc:desc="Channel Priority Level 0 (Lowest Level)" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LVL1" edc:desc="Channel Priority Level 1" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="LVL2" edc:desc="Channel Priority Level 2" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="LVL3" edc:desc="Channel Priority Level 3 (Highest Level)" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL9CHEVCTRL" edc:nzwidth="0x8" edc:access="nnnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF7" edc:_addr="0x410040D6">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="EVACT" edc:nzwidth="0x3" edc:desc="Channel Event Input Action">
              <edc:SFRFieldSemantic edc:cname="NOACT" edc:desc="No action" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TRIG" edc:desc="Transfer and periodic transfer trigger" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CTRIG" edc:desc="Conditional transfer trigger" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="CBLOCK" edc:desc="Conditional block transfer" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SUSPEND" edc:desc="Channel suspend operation" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RESUME" edc:desc="Channel resume operation" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="SSKIP" edc:desc="Skip next block suspend action" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="INCPRI" edc:desc="Increase priority" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="EVOMODE" edc:nzwidth="0x2" edc:desc="Channel Event Output Mode">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Block event output selection. Refer to BTCTRL.EVOSEL for available selections." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TRIGACT" edc:desc="Ongoing trigger action" edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EVIE" edc:nzwidth="0x1" edc:desc="Channel Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="EVOE" edc:nzwidth="0x1" edc:desc="Channel Event Output Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x5" edc:_addr="0x410040D7"/>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL9CHINTENCLR" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x410040DC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL9CHINTENSET" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x410040DD">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL9CHINTFLAG" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x410040DE">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL9CHSTATUS" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x410040DF">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="PEND" edc:nzwidth="0x1" edc:desc="Channel Pending"/>
            <edc:SFRFieldDef edc:cname="BUSY" edc:nzwidth="0x1" edc:desc="Channel Busy"/>
            <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Channel Fetch Error"/>
            <edc:SFRFieldDef edc:cname="CRCERR" edc:nzwidth="0x1" edc:desc="Channel CRC Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL10CHCTRLA" edc:nzwidth="0x20" edc:access="--nnnnnn--nn-----nnnnnnn-n----nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F307F43" edc:_addr="0x410040E0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Channel Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Channel Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TRIGSRC" edc:nzwidth="0x7" edc:desc="Trigger Source">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Only software/event triggers" edc:when="(field &amp; 0x7F) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="TRIGACT" edc:nzwidth="0x2" edc:desc="Trigger Action">
              <edc:SFRFieldSemantic edc:cname="BLOCK" edc:desc="One trigger required for each block transfer" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="BURST" edc:desc="One trigger required for each burst transfer" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TRANSACTION" edc:desc="One trigger required for each transaction" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="BURSTLEN" edc:nzwidth="0x4" edc:desc="Burst Length">
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single-beat burst length" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="2BEAT" edc:desc="2-beats burst length" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="3BEAT" edc:desc="3-beats burst length" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="4BEAT" edc:desc="4-beats burst length" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="5BEAT" edc:desc="5-beats burst length" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="6BEAT" edc:desc="6-beats burst length" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="7BEAT" edc:desc="7-beats burst length" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="8BEAT" edc:desc="8-beats burst length" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="9BEAT" edc:desc="9-beats burst length" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="10BEAT" edc:desc="10-beats burst length" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="11BEAT" edc:desc="11-beats burst length" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="12BEAT" edc:desc="12-beats burst length" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="13BEAT" edc:desc="13-beats burst length" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="14BEAT" edc:desc="14-beats burst length" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="15BEAT" edc:desc="15-beats burst length" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="16BEAT" edc:desc="16-beats burst length" edc:when="(field &amp; 0xF) == 0x0F"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="THRESHOLD" edc:nzwidth="0x2" edc:desc="FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="1BEAT" edc:desc="Destination write starts after each beat source address read" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="2BEATS" edc:desc="Destination write starts after 2-beats source address read" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="4BEATS" edc:desc="Destination write starts after 4-beats source address read" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="8BEATS" edc:desc="Destination write starts after 8-beats source address read" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL10CHCTRLB" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x410040E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Software Command">
              <edc:SFRFieldSemantic edc:cname="NOACT" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SUSPEND" edc:desc="Channel suspend operation" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RESUME" edc:desc="Channel resume operation" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL10CHPRILVL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x410040E5">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="PRILVL" edc:nzwidth="0x2" edc:desc="Channel Priority Level">
              <edc:SFRFieldSemantic edc:cname="LVL0" edc:desc="Channel Priority Level 0 (Lowest Level)" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LVL1" edc:desc="Channel Priority Level 1" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="LVL2" edc:desc="Channel Priority Level 2" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="LVL3" edc:desc="Channel Priority Level 3 (Highest Level)" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL10CHEVCTRL" edc:nzwidth="0x8" edc:access="nnnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF7" edc:_addr="0x410040E6">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="EVACT" edc:nzwidth="0x3" edc:desc="Channel Event Input Action">
              <edc:SFRFieldSemantic edc:cname="NOACT" edc:desc="No action" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TRIG" edc:desc="Transfer and periodic transfer trigger" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CTRIG" edc:desc="Conditional transfer trigger" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="CBLOCK" edc:desc="Conditional block transfer" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SUSPEND" edc:desc="Channel suspend operation" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RESUME" edc:desc="Channel resume operation" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="SSKIP" edc:desc="Skip next block suspend action" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="INCPRI" edc:desc="Increase priority" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="EVOMODE" edc:nzwidth="0x2" edc:desc="Channel Event Output Mode">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Block event output selection. Refer to BTCTRL.EVOSEL for available selections." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TRIGACT" edc:desc="Ongoing trigger action" edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EVIE" edc:nzwidth="0x1" edc:desc="Channel Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="EVOE" edc:nzwidth="0x1" edc:desc="Channel Event Output Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x5" edc:_addr="0x410040E7"/>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL10CHINTENCLR" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x410040EC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL10CHINTENSET" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x410040ED">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL10CHINTFLAG" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x410040EE">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL10CHSTATUS" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x410040EF">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="PEND" edc:nzwidth="0x1" edc:desc="Channel Pending"/>
            <edc:SFRFieldDef edc:cname="BUSY" edc:nzwidth="0x1" edc:desc="Channel Busy"/>
            <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Channel Fetch Error"/>
            <edc:SFRFieldDef edc:cname="CRCERR" edc:nzwidth="0x1" edc:desc="Channel CRC Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL11CHCTRLA" edc:nzwidth="0x20" edc:access="--nnnnnn--nn-----nnnnnnn-n----nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F307F43" edc:_addr="0x410040F0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Channel Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Channel Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TRIGSRC" edc:nzwidth="0x7" edc:desc="Trigger Source">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Only software/event triggers" edc:when="(field &amp; 0x7F) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="TRIGACT" edc:nzwidth="0x2" edc:desc="Trigger Action">
              <edc:SFRFieldSemantic edc:cname="BLOCK" edc:desc="One trigger required for each block transfer" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="BURST" edc:desc="One trigger required for each burst transfer" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TRANSACTION" edc:desc="One trigger required for each transaction" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="BURSTLEN" edc:nzwidth="0x4" edc:desc="Burst Length">
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single-beat burst length" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="2BEAT" edc:desc="2-beats burst length" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="3BEAT" edc:desc="3-beats burst length" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="4BEAT" edc:desc="4-beats burst length" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="5BEAT" edc:desc="5-beats burst length" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="6BEAT" edc:desc="6-beats burst length" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="7BEAT" edc:desc="7-beats burst length" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="8BEAT" edc:desc="8-beats burst length" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="9BEAT" edc:desc="9-beats burst length" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="10BEAT" edc:desc="10-beats burst length" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="11BEAT" edc:desc="11-beats burst length" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="12BEAT" edc:desc="12-beats burst length" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="13BEAT" edc:desc="13-beats burst length" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="14BEAT" edc:desc="14-beats burst length" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="15BEAT" edc:desc="15-beats burst length" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="16BEAT" edc:desc="16-beats burst length" edc:when="(field &amp; 0xF) == 0x0F"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="THRESHOLD" edc:nzwidth="0x2" edc:desc="FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="1BEAT" edc:desc="Destination write starts after each beat source address read" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="2BEATS" edc:desc="Destination write starts after 2-beats source address read" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="4BEATS" edc:desc="Destination write starts after 4-beats source address read" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="8BEATS" edc:desc="Destination write starts after 8-beats source address read" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL11CHCTRLB" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x410040F4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Software Command">
              <edc:SFRFieldSemantic edc:cname="NOACT" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SUSPEND" edc:desc="Channel suspend operation" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RESUME" edc:desc="Channel resume operation" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL11CHPRILVL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x410040F5">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="PRILVL" edc:nzwidth="0x2" edc:desc="Channel Priority Level">
              <edc:SFRFieldSemantic edc:cname="LVL0" edc:desc="Channel Priority Level 0 (Lowest Level)" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LVL1" edc:desc="Channel Priority Level 1" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="LVL2" edc:desc="Channel Priority Level 2" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="LVL3" edc:desc="Channel Priority Level 3 (Highest Level)" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL11CHEVCTRL" edc:nzwidth="0x8" edc:access="nnnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF7" edc:_addr="0x410040F6">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="EVACT" edc:nzwidth="0x3" edc:desc="Channel Event Input Action">
              <edc:SFRFieldSemantic edc:cname="NOACT" edc:desc="No action" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TRIG" edc:desc="Transfer and periodic transfer trigger" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CTRIG" edc:desc="Conditional transfer trigger" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="CBLOCK" edc:desc="Conditional block transfer" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SUSPEND" edc:desc="Channel suspend operation" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RESUME" edc:desc="Channel resume operation" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="SSKIP" edc:desc="Skip next block suspend action" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="INCPRI" edc:desc="Increase priority" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="EVOMODE" edc:nzwidth="0x2" edc:desc="Channel Event Output Mode">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Block event output selection. Refer to BTCTRL.EVOSEL for available selections." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TRIGACT" edc:desc="Ongoing trigger action" edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EVIE" edc:nzwidth="0x1" edc:desc="Channel Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="EVOE" edc:nzwidth="0x1" edc:desc="Channel Event Output Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x5" edc:_addr="0x410040F7"/>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL11CHINTENCLR" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x410040FC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL11CHINTENSET" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x410040FD">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL11CHINTFLAG" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x410040FE">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL11CHSTATUS" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x410040FF">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="PEND" edc:nzwidth="0x1" edc:desc="Channel Pending"/>
            <edc:SFRFieldDef edc:cname="BUSY" edc:nzwidth="0x1" edc:desc="Channel Busy"/>
            <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Channel Fetch Error"/>
            <edc:SFRFieldDef edc:cname="CRCERR" edc:nzwidth="0x1" edc:desc="Channel CRC Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL12CHCTRLA" edc:nzwidth="0x20" edc:access="--nnnnnn--nn-----nnnnnnn-n----nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F307F43" edc:_addr="0x41004100">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Channel Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Channel Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TRIGSRC" edc:nzwidth="0x7" edc:desc="Trigger Source">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Only software/event triggers" edc:when="(field &amp; 0x7F) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="TRIGACT" edc:nzwidth="0x2" edc:desc="Trigger Action">
              <edc:SFRFieldSemantic edc:cname="BLOCK" edc:desc="One trigger required for each block transfer" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="BURST" edc:desc="One trigger required for each burst transfer" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TRANSACTION" edc:desc="One trigger required for each transaction" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="BURSTLEN" edc:nzwidth="0x4" edc:desc="Burst Length">
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single-beat burst length" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="2BEAT" edc:desc="2-beats burst length" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="3BEAT" edc:desc="3-beats burst length" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="4BEAT" edc:desc="4-beats burst length" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="5BEAT" edc:desc="5-beats burst length" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="6BEAT" edc:desc="6-beats burst length" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="7BEAT" edc:desc="7-beats burst length" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="8BEAT" edc:desc="8-beats burst length" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="9BEAT" edc:desc="9-beats burst length" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="10BEAT" edc:desc="10-beats burst length" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="11BEAT" edc:desc="11-beats burst length" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="12BEAT" edc:desc="12-beats burst length" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="13BEAT" edc:desc="13-beats burst length" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="14BEAT" edc:desc="14-beats burst length" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="15BEAT" edc:desc="15-beats burst length" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="16BEAT" edc:desc="16-beats burst length" edc:when="(field &amp; 0xF) == 0x0F"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="THRESHOLD" edc:nzwidth="0x2" edc:desc="FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="1BEAT" edc:desc="Destination write starts after each beat source address read" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="2BEATS" edc:desc="Destination write starts after 2-beats source address read" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="4BEATS" edc:desc="Destination write starts after 4-beats source address read" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="8BEATS" edc:desc="Destination write starts after 8-beats source address read" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL12CHCTRLB" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41004104">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Software Command">
              <edc:SFRFieldSemantic edc:cname="NOACT" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SUSPEND" edc:desc="Channel suspend operation" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RESUME" edc:desc="Channel resume operation" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL12CHPRILVL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41004105">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="PRILVL" edc:nzwidth="0x2" edc:desc="Channel Priority Level">
              <edc:SFRFieldSemantic edc:cname="LVL0" edc:desc="Channel Priority Level 0 (Lowest Level)" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LVL1" edc:desc="Channel Priority Level 1" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="LVL2" edc:desc="Channel Priority Level 2" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="LVL3" edc:desc="Channel Priority Level 3 (Highest Level)" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL12CHEVCTRL" edc:nzwidth="0x8" edc:access="nnnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF7" edc:_addr="0x41004106">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="EVACT" edc:nzwidth="0x3" edc:desc="Channel Event Input Action">
              <edc:SFRFieldSemantic edc:cname="NOACT" edc:desc="No action" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TRIG" edc:desc="Transfer and periodic transfer trigger" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CTRIG" edc:desc="Conditional transfer trigger" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="CBLOCK" edc:desc="Conditional block transfer" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SUSPEND" edc:desc="Channel suspend operation" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RESUME" edc:desc="Channel resume operation" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="SSKIP" edc:desc="Skip next block suspend action" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="INCPRI" edc:desc="Increase priority" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="EVOMODE" edc:nzwidth="0x2" edc:desc="Channel Event Output Mode">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Block event output selection. Refer to BTCTRL.EVOSEL for available selections." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TRIGACT" edc:desc="Ongoing trigger action" edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EVIE" edc:nzwidth="0x1" edc:desc="Channel Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="EVOE" edc:nzwidth="0x1" edc:desc="Channel Event Output Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x5" edc:_addr="0x41004107"/>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL12CHINTENCLR" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x4100410C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL12CHINTENSET" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x4100410D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL12CHINTFLAG" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x4100410E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL12CHSTATUS" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x4100410F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="PEND" edc:nzwidth="0x1" edc:desc="Channel Pending"/>
            <edc:SFRFieldDef edc:cname="BUSY" edc:nzwidth="0x1" edc:desc="Channel Busy"/>
            <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Channel Fetch Error"/>
            <edc:SFRFieldDef edc:cname="CRCERR" edc:nzwidth="0x1" edc:desc="Channel CRC Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL13CHCTRLA" edc:nzwidth="0x20" edc:access="--nnnnnn--nn-----nnnnnnn-n----nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F307F43" edc:_addr="0x41004110">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Channel Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Channel Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TRIGSRC" edc:nzwidth="0x7" edc:desc="Trigger Source">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Only software/event triggers" edc:when="(field &amp; 0x7F) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="TRIGACT" edc:nzwidth="0x2" edc:desc="Trigger Action">
              <edc:SFRFieldSemantic edc:cname="BLOCK" edc:desc="One trigger required for each block transfer" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="BURST" edc:desc="One trigger required for each burst transfer" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TRANSACTION" edc:desc="One trigger required for each transaction" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="BURSTLEN" edc:nzwidth="0x4" edc:desc="Burst Length">
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single-beat burst length" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="2BEAT" edc:desc="2-beats burst length" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="3BEAT" edc:desc="3-beats burst length" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="4BEAT" edc:desc="4-beats burst length" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="5BEAT" edc:desc="5-beats burst length" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="6BEAT" edc:desc="6-beats burst length" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="7BEAT" edc:desc="7-beats burst length" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="8BEAT" edc:desc="8-beats burst length" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="9BEAT" edc:desc="9-beats burst length" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="10BEAT" edc:desc="10-beats burst length" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="11BEAT" edc:desc="11-beats burst length" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="12BEAT" edc:desc="12-beats burst length" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="13BEAT" edc:desc="13-beats burst length" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="14BEAT" edc:desc="14-beats burst length" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="15BEAT" edc:desc="15-beats burst length" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="16BEAT" edc:desc="16-beats burst length" edc:when="(field &amp; 0xF) == 0x0F"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="THRESHOLD" edc:nzwidth="0x2" edc:desc="FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="1BEAT" edc:desc="Destination write starts after each beat source address read" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="2BEATS" edc:desc="Destination write starts after 2-beats source address read" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="4BEATS" edc:desc="Destination write starts after 4-beats source address read" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="8BEATS" edc:desc="Destination write starts after 8-beats source address read" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL13CHCTRLB" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41004114">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Software Command">
              <edc:SFRFieldSemantic edc:cname="NOACT" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SUSPEND" edc:desc="Channel suspend operation" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RESUME" edc:desc="Channel resume operation" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL13CHPRILVL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41004115">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="PRILVL" edc:nzwidth="0x2" edc:desc="Channel Priority Level">
              <edc:SFRFieldSemantic edc:cname="LVL0" edc:desc="Channel Priority Level 0 (Lowest Level)" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LVL1" edc:desc="Channel Priority Level 1" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="LVL2" edc:desc="Channel Priority Level 2" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="LVL3" edc:desc="Channel Priority Level 3 (Highest Level)" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL13CHEVCTRL" edc:nzwidth="0x8" edc:access="nnnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF7" edc:_addr="0x41004116">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="EVACT" edc:nzwidth="0x3" edc:desc="Channel Event Input Action">
              <edc:SFRFieldSemantic edc:cname="NOACT" edc:desc="No action" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TRIG" edc:desc="Transfer and periodic transfer trigger" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CTRIG" edc:desc="Conditional transfer trigger" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="CBLOCK" edc:desc="Conditional block transfer" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SUSPEND" edc:desc="Channel suspend operation" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RESUME" edc:desc="Channel resume operation" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="SSKIP" edc:desc="Skip next block suspend action" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="INCPRI" edc:desc="Increase priority" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="EVOMODE" edc:nzwidth="0x2" edc:desc="Channel Event Output Mode">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Block event output selection. Refer to BTCTRL.EVOSEL for available selections." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TRIGACT" edc:desc="Ongoing trigger action" edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EVIE" edc:nzwidth="0x1" edc:desc="Channel Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="EVOE" edc:nzwidth="0x1" edc:desc="Channel Event Output Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x5" edc:_addr="0x41004117"/>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL13CHINTENCLR" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x4100411C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL13CHINTENSET" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x4100411D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL13CHINTFLAG" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x4100411E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL13CHSTATUS" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x4100411F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="PEND" edc:nzwidth="0x1" edc:desc="Channel Pending"/>
            <edc:SFRFieldDef edc:cname="BUSY" edc:nzwidth="0x1" edc:desc="Channel Busy"/>
            <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Channel Fetch Error"/>
            <edc:SFRFieldDef edc:cname="CRCERR" edc:nzwidth="0x1" edc:desc="Channel CRC Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL14CHCTRLA" edc:nzwidth="0x20" edc:access="--nnnnnn--nn-----nnnnnnn-n----nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F307F43" edc:_addr="0x41004120">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Channel Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Channel Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TRIGSRC" edc:nzwidth="0x7" edc:desc="Trigger Source">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Only software/event triggers" edc:when="(field &amp; 0x7F) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="TRIGACT" edc:nzwidth="0x2" edc:desc="Trigger Action">
              <edc:SFRFieldSemantic edc:cname="BLOCK" edc:desc="One trigger required for each block transfer" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="BURST" edc:desc="One trigger required for each burst transfer" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TRANSACTION" edc:desc="One trigger required for each transaction" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="BURSTLEN" edc:nzwidth="0x4" edc:desc="Burst Length">
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single-beat burst length" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="2BEAT" edc:desc="2-beats burst length" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="3BEAT" edc:desc="3-beats burst length" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="4BEAT" edc:desc="4-beats burst length" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="5BEAT" edc:desc="5-beats burst length" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="6BEAT" edc:desc="6-beats burst length" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="7BEAT" edc:desc="7-beats burst length" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="8BEAT" edc:desc="8-beats burst length" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="9BEAT" edc:desc="9-beats burst length" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="10BEAT" edc:desc="10-beats burst length" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="11BEAT" edc:desc="11-beats burst length" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="12BEAT" edc:desc="12-beats burst length" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="13BEAT" edc:desc="13-beats burst length" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="14BEAT" edc:desc="14-beats burst length" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="15BEAT" edc:desc="15-beats burst length" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="16BEAT" edc:desc="16-beats burst length" edc:when="(field &amp; 0xF) == 0x0F"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="THRESHOLD" edc:nzwidth="0x2" edc:desc="FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="1BEAT" edc:desc="Destination write starts after each beat source address read" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="2BEATS" edc:desc="Destination write starts after 2-beats source address read" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="4BEATS" edc:desc="Destination write starts after 4-beats source address read" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="8BEATS" edc:desc="Destination write starts after 8-beats source address read" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL14CHCTRLB" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41004124">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Software Command">
              <edc:SFRFieldSemantic edc:cname="NOACT" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SUSPEND" edc:desc="Channel suspend operation" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RESUME" edc:desc="Channel resume operation" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL14CHPRILVL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41004125">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="PRILVL" edc:nzwidth="0x2" edc:desc="Channel Priority Level">
              <edc:SFRFieldSemantic edc:cname="LVL0" edc:desc="Channel Priority Level 0 (Lowest Level)" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LVL1" edc:desc="Channel Priority Level 1" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="LVL2" edc:desc="Channel Priority Level 2" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="LVL3" edc:desc="Channel Priority Level 3 (Highest Level)" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL14CHEVCTRL" edc:nzwidth="0x8" edc:access="nnnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF7" edc:_addr="0x41004126">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="EVACT" edc:nzwidth="0x3" edc:desc="Channel Event Input Action">
              <edc:SFRFieldSemantic edc:cname="NOACT" edc:desc="No action" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TRIG" edc:desc="Transfer and periodic transfer trigger" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CTRIG" edc:desc="Conditional transfer trigger" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="CBLOCK" edc:desc="Conditional block transfer" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SUSPEND" edc:desc="Channel suspend operation" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RESUME" edc:desc="Channel resume operation" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="SSKIP" edc:desc="Skip next block suspend action" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="INCPRI" edc:desc="Increase priority" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="EVOMODE" edc:nzwidth="0x2" edc:desc="Channel Event Output Mode">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Block event output selection. Refer to BTCTRL.EVOSEL for available selections." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TRIGACT" edc:desc="Ongoing trigger action" edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EVIE" edc:nzwidth="0x1" edc:desc="Channel Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="EVOE" edc:nzwidth="0x1" edc:desc="Channel Event Output Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x5" edc:_addr="0x41004127"/>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL14CHINTENCLR" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x4100412C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL14CHINTENSET" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x4100412D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL14CHINTFLAG" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x4100412E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL14CHSTATUS" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x4100412F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="PEND" edc:nzwidth="0x1" edc:desc="Channel Pending"/>
            <edc:SFRFieldDef edc:cname="BUSY" edc:nzwidth="0x1" edc:desc="Channel Busy"/>
            <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Channel Fetch Error"/>
            <edc:SFRFieldDef edc:cname="CRCERR" edc:nzwidth="0x1" edc:desc="Channel CRC Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL15CHCTRLA" edc:nzwidth="0x20" edc:access="--nnnnnn--nn-----nnnnnnn-n----nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F307F43" edc:_addr="0x41004130">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Channel Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Channel Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TRIGSRC" edc:nzwidth="0x7" edc:desc="Trigger Source">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Only software/event triggers" edc:when="(field &amp; 0x7F) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="TRIGACT" edc:nzwidth="0x2" edc:desc="Trigger Action">
              <edc:SFRFieldSemantic edc:cname="BLOCK" edc:desc="One trigger required for each block transfer" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="BURST" edc:desc="One trigger required for each burst transfer" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TRANSACTION" edc:desc="One trigger required for each transaction" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="BURSTLEN" edc:nzwidth="0x4" edc:desc="Burst Length">
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single-beat burst length" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="2BEAT" edc:desc="2-beats burst length" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="3BEAT" edc:desc="3-beats burst length" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="4BEAT" edc:desc="4-beats burst length" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="5BEAT" edc:desc="5-beats burst length" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="6BEAT" edc:desc="6-beats burst length" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="7BEAT" edc:desc="7-beats burst length" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="8BEAT" edc:desc="8-beats burst length" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="9BEAT" edc:desc="9-beats burst length" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="10BEAT" edc:desc="10-beats burst length" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="11BEAT" edc:desc="11-beats burst length" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="12BEAT" edc:desc="12-beats burst length" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="13BEAT" edc:desc="13-beats burst length" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="14BEAT" edc:desc="14-beats burst length" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="15BEAT" edc:desc="15-beats burst length" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="16BEAT" edc:desc="16-beats burst length" edc:when="(field &amp; 0xF) == 0x0F"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="THRESHOLD" edc:nzwidth="0x2" edc:desc="FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="1BEAT" edc:desc="Destination write starts after each beat source address read" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="2BEATS" edc:desc="Destination write starts after 2-beats source address read" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="4BEATS" edc:desc="Destination write starts after 4-beats source address read" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="8BEATS" edc:desc="Destination write starts after 8-beats source address read" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL15CHCTRLB" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41004134">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Software Command">
              <edc:SFRFieldSemantic edc:cname="NOACT" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SUSPEND" edc:desc="Channel suspend operation" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RESUME" edc:desc="Channel resume operation" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL15CHPRILVL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41004135">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="PRILVL" edc:nzwidth="0x2" edc:desc="Channel Priority Level">
              <edc:SFRFieldSemantic edc:cname="LVL0" edc:desc="Channel Priority Level 0 (Lowest Level)" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LVL1" edc:desc="Channel Priority Level 1" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="LVL2" edc:desc="Channel Priority Level 2" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="LVL3" edc:desc="Channel Priority Level 3 (Highest Level)" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL15CHEVCTRL" edc:nzwidth="0x8" edc:access="nnnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF7" edc:_addr="0x41004136">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="EVACT" edc:nzwidth="0x3" edc:desc="Channel Event Input Action">
              <edc:SFRFieldSemantic edc:cname="NOACT" edc:desc="No action" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TRIG" edc:desc="Transfer and periodic transfer trigger" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CTRIG" edc:desc="Conditional transfer trigger" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="CBLOCK" edc:desc="Conditional block transfer" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SUSPEND" edc:desc="Channel suspend operation" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RESUME" edc:desc="Channel resume operation" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="SSKIP" edc:desc="Skip next block suspend action" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="INCPRI" edc:desc="Increase priority" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="EVOMODE" edc:nzwidth="0x2" edc:desc="Channel Event Output Mode">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Block event output selection. Refer to BTCTRL.EVOSEL for available selections." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TRIGACT" edc:desc="Ongoing trigger action" edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EVIE" edc:nzwidth="0x1" edc:desc="Channel Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="EVOE" edc:nzwidth="0x1" edc:desc="Channel Event Output Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x5" edc:_addr="0x41004137"/>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL15CHINTENCLR" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x4100413C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL15CHINTENSET" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x4100413D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL15CHINTFLAG" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x4100413E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHANNEL15CHSTATUS" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x4100413F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="PEND" edc:nzwidth="0x1" edc:desc="Channel Pending"/>
            <edc:SFRFieldDef edc:cname="BUSY" edc:nzwidth="0x1" edc:desc="Channel Busy"/>
            <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Channel Fetch Error"/>
            <edc:SFRFieldDef edc:cname="CRCERR" edc:nzwidth="0x1" edc:desc="Channel CRC Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1EC0" edc:_addr="0x41004140"/>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x41006000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x41006001"/>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="SWEVT" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41006004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL0" edc:nzwidth="0x1" edc:desc="Channel 0 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL1" edc:nzwidth="0x1" edc:desc="Channel 1 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL2" edc:nzwidth="0x1" edc:desc="Channel 2 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL3" edc:nzwidth="0x1" edc:desc="Channel 3 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL4" edc:nzwidth="0x1" edc:desc="Channel 4 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL5" edc:nzwidth="0x1" edc:desc="Channel 5 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL6" edc:nzwidth="0x1" edc:desc="Channel 6 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL7" edc:nzwidth="0x1" edc:desc="Channel 7 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL8" edc:nzwidth="0x1" edc:desc="Channel 8 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL9" edc:nzwidth="0x1" edc:desc="Channel 9 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL10" edc:nzwidth="0x1" edc:desc="Channel 10 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL11" edc:nzwidth="0x1" edc:desc="Channel 11 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL12" edc:nzwidth="0x1" edc:desc="Channel 12 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL13" edc:nzwidth="0x1" edc:desc="Channel 13 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL14" edc:nzwidth="0x1" edc:desc="Channel 14 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL15" edc:nzwidth="0x1" edc:desc="Channel 15 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL16" edc:nzwidth="0x1" edc:desc="Channel 16 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL17" edc:nzwidth="0x1" edc:desc="Channel 17 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL18" edc:nzwidth="0x1" edc:desc="Channel 18 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL19" edc:nzwidth="0x1" edc:desc="Channel 19 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL20" edc:nzwidth="0x1" edc:desc="Channel 20 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL21" edc:nzwidth="0x1" edc:desc="Channel 21 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL22" edc:nzwidth="0x1" edc:desc="Channel 22 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL23" edc:nzwidth="0x1" edc:desc="Channel 23 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL24" edc:nzwidth="0x1" edc:desc="Channel 24 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL25" edc:nzwidth="0x1" edc:desc="Channel 25 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL26" edc:nzwidth="0x1" edc:desc="Channel 26 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL27" edc:nzwidth="0x1" edc:desc="Channel 27 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL28" edc:nzwidth="0x1" edc:desc="Channel 28 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL29" edc:nzwidth="0x1" edc:desc="Channel 29 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL30" edc:nzwidth="0x1" edc:desc="Channel 30 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL31" edc:nzwidth="0x1" edc:desc="Channel 31 Software Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="PRICTRL" edc:nzwidth="0x8" edc:access="n--nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x9F" edc:_addr="0x41006008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="PRI" edc:nzwidth="0x5" edc:desc="Channel Priority Number"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RREN" edc:nzwidth="0x1" edc:desc="Round-Robin Scheduling Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x7" edc:_addr="0x41006009"/>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="INTPEND" edc:nzwidth="0x10" edc:access="nn----nn----nnnn" edc:por="0100000000000000" edc:mclr="0100000000000000" edc:impl="0xC30F" edc:_addr="0x41006010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="ID" edc:nzwidth="0x4" edc:desc="Channel ID"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="READY" edc:nzwidth="0x1" edc:desc="Ready"/>
            <edc:SFRFieldDef edc:cname="BUSY" edc:nzwidth="0x1" edc:desc="Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x41006012"/>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="INTSTATUS" edc:nzwidth="0x20" edc:access="--------------------rrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFF" edc:_addr="0x41006014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHINT0" edc:nzwidth="0x1" edc:desc="Channel 0 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT1" edc:nzwidth="0x1" edc:desc="Channel 1 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT2" edc:nzwidth="0x1" edc:desc="Channel 2 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT3" edc:nzwidth="0x1" edc:desc="Channel 3 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT4" edc:nzwidth="0x1" edc:desc="Channel 4 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT5" edc:nzwidth="0x1" edc:desc="Channel 5 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT6" edc:nzwidth="0x1" edc:desc="Channel 6 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT7" edc:nzwidth="0x1" edc:desc="Channel 7 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT8" edc:nzwidth="0x1" edc:desc="Channel 8 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT9" edc:nzwidth="0x1" edc:desc="Channel 9 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT10" edc:nzwidth="0x1" edc:desc="Channel 10 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT11" edc:nzwidth="0x1" edc:desc="Channel 11 Pending Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="BUSYCH" edc:nzwidth="0x20" edc:access="--------------------rrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFF" edc:_addr="0x41006018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="BUSYCH0" edc:nzwidth="0x1" edc:desc="Busy Channel 0"/>
            <edc:SFRFieldDef edc:cname="BUSYCH1" edc:nzwidth="0x1" edc:desc="Busy Channel 1"/>
            <edc:SFRFieldDef edc:cname="BUSYCH2" edc:nzwidth="0x1" edc:desc="Busy Channel 2"/>
            <edc:SFRFieldDef edc:cname="BUSYCH3" edc:nzwidth="0x1" edc:desc="Busy Channel 3"/>
            <edc:SFRFieldDef edc:cname="BUSYCH4" edc:nzwidth="0x1" edc:desc="Busy Channel 4"/>
            <edc:SFRFieldDef edc:cname="BUSYCH5" edc:nzwidth="0x1" edc:desc="Busy Channel 5"/>
            <edc:SFRFieldDef edc:cname="BUSYCH6" edc:nzwidth="0x1" edc:desc="Busy Channel 6"/>
            <edc:SFRFieldDef edc:cname="BUSYCH7" edc:nzwidth="0x1" edc:desc="Busy Channel 7"/>
            <edc:SFRFieldDef edc:cname="BUSYCH8" edc:nzwidth="0x1" edc:desc="Busy Channel 8"/>
            <edc:SFRFieldDef edc:cname="BUSYCH9" edc:nzwidth="0x1" edc:desc="Busy Channel 9"/>
            <edc:SFRFieldDef edc:cname="BUSYCH10" edc:nzwidth="0x1" edc:desc="Busy Channel 10"/>
            <edc:SFRFieldDef edc:cname="BUSYCH11" edc:nzwidth="0x1" edc:desc="Busy Channel 11"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="READYUSR" edc:nzwidth="0x20" edc:access="--------------------rrrrrrrrrrrr" edc:por="11111111111111111111111111111111" edc:mclr="11111111111111111111111111111111" edc:impl="0xFFF" edc:_addr="0x4100601C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="READYUSR0" edc:nzwidth="0x1" edc:desc="Ready User for Channel 0"/>
            <edc:SFRFieldDef edc:cname="READYUSR1" edc:nzwidth="0x1" edc:desc="Ready User for Channel 1"/>
            <edc:SFRFieldDef edc:cname="READYUSR2" edc:nzwidth="0x1" edc:desc="Ready User for Channel 2"/>
            <edc:SFRFieldDef edc:cname="READYUSR3" edc:nzwidth="0x1" edc:desc="Ready User for Channel 3"/>
            <edc:SFRFieldDef edc:cname="READYUSR4" edc:nzwidth="0x1" edc:desc="Ready User for Channel 4"/>
            <edc:SFRFieldDef edc:cname="READYUSR5" edc:nzwidth="0x1" edc:desc="Ready User for Channel 5"/>
            <edc:SFRFieldDef edc:cname="READYUSR6" edc:nzwidth="0x1" edc:desc="Ready User for Channel 6"/>
            <edc:SFRFieldDef edc:cname="READYUSR7" edc:nzwidth="0x1" edc:desc="Ready User for Channel 7"/>
            <edc:SFRFieldDef edc:cname="READYUSR8" edc:nzwidth="0x1" edc:desc="Ready User for Channel 8"/>
            <edc:SFRFieldDef edc:cname="READYUSR9" edc:nzwidth="0x1" edc:desc="Ready User for Channel 9"/>
            <edc:SFRFieldDef edc:cname="READYUSR10" edc:nzwidth="0x1" edc:desc="Ready User for Channel 10"/>
            <edc:SFRFieldDef edc:cname="READYUSR11" edc:nzwidth="0x1" edc:desc="Ready User for Channel 11"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL0CHANNEL" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x41006020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL0CHINTENCLR" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41006024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL0CHINTENSET" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41006025">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL0CHINTFLAG" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41006026">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL0CHSTATUS" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3" edc:_addr="0x41006027">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="RDYUSR" edc:nzwidth="0x1" edc:desc="Ready User"/>
            <edc:SFRFieldDef edc:cname="BUSYCH" edc:nzwidth="0x1" edc:desc="Busy Channel"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL1CHANNEL" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x41006028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL1CHINTENCLR" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4100602C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL1CHINTENSET" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4100602D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL1CHINTFLAG" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4100602E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL1CHSTATUS" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3" edc:_addr="0x4100602F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="RDYUSR" edc:nzwidth="0x1" edc:desc="Ready User"/>
            <edc:SFRFieldDef edc:cname="BUSYCH" edc:nzwidth="0x1" edc:desc="Busy Channel"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL2CHANNEL" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x41006030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL2CHINTENCLR" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41006034">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL2CHINTENSET" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41006035">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL2CHINTFLAG" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41006036">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL2CHSTATUS" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3" edc:_addr="0x41006037">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="RDYUSR" edc:nzwidth="0x1" edc:desc="Ready User"/>
            <edc:SFRFieldDef edc:cname="BUSYCH" edc:nzwidth="0x1" edc:desc="Busy Channel"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL3CHANNEL" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x41006038">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL3CHINTENCLR" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4100603C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL3CHINTENSET" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4100603D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL3CHINTFLAG" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4100603E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL3CHSTATUS" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3" edc:_addr="0x4100603F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="RDYUSR" edc:nzwidth="0x1" edc:desc="Ready User"/>
            <edc:SFRFieldDef edc:cname="BUSYCH" edc:nzwidth="0x1" edc:desc="Busy Channel"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL4CHANNEL" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x41006040">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL4CHINTENCLR" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41006044">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL4CHINTENSET" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41006045">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL4CHINTFLAG" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41006046">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL4CHSTATUS" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3" edc:_addr="0x41006047">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="RDYUSR" edc:nzwidth="0x1" edc:desc="Ready User"/>
            <edc:SFRFieldDef edc:cname="BUSYCH" edc:nzwidth="0x1" edc:desc="Busy Channel"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL5CHANNEL" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x41006048">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL5CHINTENCLR" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4100604C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL5CHINTENSET" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4100604D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL5CHINTFLAG" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4100604E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL5CHSTATUS" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3" edc:_addr="0x4100604F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="RDYUSR" edc:nzwidth="0x1" edc:desc="Ready User"/>
            <edc:SFRFieldDef edc:cname="BUSYCH" edc:nzwidth="0x1" edc:desc="Busy Channel"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL6CHANNEL" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x41006050">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL6CHINTENCLR" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41006054">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL6CHINTENSET" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41006055">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL6CHINTFLAG" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41006056">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL6CHSTATUS" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3" edc:_addr="0x41006057">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="RDYUSR" edc:nzwidth="0x1" edc:desc="Ready User"/>
            <edc:SFRFieldDef edc:cname="BUSYCH" edc:nzwidth="0x1" edc:desc="Busy Channel"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL7CHANNEL" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x41006058">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL7CHINTENCLR" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4100605C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL7CHINTENSET" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4100605D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL7CHINTFLAG" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4100605E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL7CHSTATUS" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3" edc:_addr="0x4100605F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="RDYUSR" edc:nzwidth="0x1" edc:desc="Ready User"/>
            <edc:SFRFieldDef edc:cname="BUSYCH" edc:nzwidth="0x1" edc:desc="Busy Channel"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL8CHANNEL" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x41006060">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL8CHINTENCLR" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41006064">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL8CHINTENSET" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41006065">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL8CHINTFLAG" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41006066">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL8CHSTATUS" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3" edc:_addr="0x41006067">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="RDYUSR" edc:nzwidth="0x1" edc:desc="Ready User"/>
            <edc:SFRFieldDef edc:cname="BUSYCH" edc:nzwidth="0x1" edc:desc="Busy Channel"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL9CHANNEL" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x41006068">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL9CHINTENCLR" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4100606C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL9CHINTENSET" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4100606D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL9CHINTFLAG" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4100606E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL9CHSTATUS" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3" edc:_addr="0x4100606F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="RDYUSR" edc:nzwidth="0x1" edc:desc="Ready User"/>
            <edc:SFRFieldDef edc:cname="BUSYCH" edc:nzwidth="0x1" edc:desc="Busy Channel"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL10CHANNEL" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x41006070">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL10CHINTENCLR" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41006074">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL10CHINTENSET" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41006075">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL10CHINTFLAG" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41006076">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL10CHSTATUS" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3" edc:_addr="0x41006077">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="RDYUSR" edc:nzwidth="0x1" edc:desc="Ready User"/>
            <edc:SFRFieldDef edc:cname="BUSYCH" edc:nzwidth="0x1" edc:desc="Busy Channel"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL11CHANNEL" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x41006078">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL11CHINTENCLR" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4100607C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL11CHINTENSET" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4100607D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL11CHINTFLAG" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4100607E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL11CHSTATUS" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3" edc:_addr="0x4100607F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="RDYUSR" edc:nzwidth="0x1" edc:desc="Ready User"/>
            <edc:SFRFieldDef edc:cname="BUSYCH" edc:nzwidth="0x1" edc:desc="Busy Channel"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL12CHANNEL" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x41006080">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL12CHINTENCLR" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41006084">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL12CHINTENSET" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41006085">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL12CHINTFLAG" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41006086">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL12CHSTATUS" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3" edc:_addr="0x41006087">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="RDYUSR" edc:nzwidth="0x1" edc:desc="Ready User"/>
            <edc:SFRFieldDef edc:cname="BUSYCH" edc:nzwidth="0x1" edc:desc="Busy Channel"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL13CHANNEL" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x41006088">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL13CHINTENCLR" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4100608C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL13CHINTENSET" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4100608D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL13CHINTFLAG" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4100608E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL13CHSTATUS" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3" edc:_addr="0x4100608F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="RDYUSR" edc:nzwidth="0x1" edc:desc="Ready User"/>
            <edc:SFRFieldDef edc:cname="BUSYCH" edc:nzwidth="0x1" edc:desc="Busy Channel"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL14CHANNEL" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x41006090">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL14CHINTENCLR" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41006094">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL14CHINTENSET" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41006095">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL14CHINTFLAG" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41006096">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL14CHSTATUS" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3" edc:_addr="0x41006097">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="RDYUSR" edc:nzwidth="0x1" edc:desc="Ready User"/>
            <edc:SFRFieldDef edc:cname="BUSYCH" edc:nzwidth="0x1" edc:desc="Busy Channel"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL15CHANNEL" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x41006098">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL15CHINTENCLR" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4100609C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL15CHINTENSET" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4100609D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL15CHINTFLAG" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4100609E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL15CHSTATUS" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3" edc:_addr="0x4100609F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="RDYUSR" edc:nzwidth="0x1" edc:desc="Ready User"/>
            <edc:SFRFieldDef edc:cname="BUSYCH" edc:nzwidth="0x1" edc:desc="Busy Channel"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL16CHANNEL" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x410060A0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL16CHINTENCLR" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x410060A4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL16CHINTENSET" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x410060A5">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL16CHINTFLAG" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x410060A6">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL16CHSTATUS" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3" edc:_addr="0x410060A7">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="RDYUSR" edc:nzwidth="0x1" edc:desc="Ready User"/>
            <edc:SFRFieldDef edc:cname="BUSYCH" edc:nzwidth="0x1" edc:desc="Busy Channel"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL17CHANNEL" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x410060A8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL17CHINTENCLR" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x410060AC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL17CHINTENSET" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x410060AD">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL17CHINTFLAG" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x410060AE">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL17CHSTATUS" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3" edc:_addr="0x410060AF">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="RDYUSR" edc:nzwidth="0x1" edc:desc="Ready User"/>
            <edc:SFRFieldDef edc:cname="BUSYCH" edc:nzwidth="0x1" edc:desc="Busy Channel"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL18CHANNEL" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x410060B0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL18CHINTENCLR" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x410060B4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL18CHINTENSET" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x410060B5">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL18CHINTFLAG" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x410060B6">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL18CHSTATUS" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3" edc:_addr="0x410060B7">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="RDYUSR" edc:nzwidth="0x1" edc:desc="Ready User"/>
            <edc:SFRFieldDef edc:cname="BUSYCH" edc:nzwidth="0x1" edc:desc="Busy Channel"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL19CHANNEL" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x410060B8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL19CHINTENCLR" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x410060BC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL19CHINTENSET" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x410060BD">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL19CHINTFLAG" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x410060BE">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL19CHSTATUS" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3" edc:_addr="0x410060BF">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="RDYUSR" edc:nzwidth="0x1" edc:desc="Ready User"/>
            <edc:SFRFieldDef edc:cname="BUSYCH" edc:nzwidth="0x1" edc:desc="Busy Channel"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL20CHANNEL" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x410060C0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL20CHINTENCLR" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x410060C4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL20CHINTENSET" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x410060C5">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL20CHINTFLAG" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x410060C6">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL20CHSTATUS" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3" edc:_addr="0x410060C7">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="RDYUSR" edc:nzwidth="0x1" edc:desc="Ready User"/>
            <edc:SFRFieldDef edc:cname="BUSYCH" edc:nzwidth="0x1" edc:desc="Busy Channel"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL21CHANNEL" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x410060C8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL21CHINTENCLR" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x410060CC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL21CHINTENSET" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x410060CD">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL21CHINTFLAG" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x410060CE">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL21CHSTATUS" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3" edc:_addr="0x410060CF">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="RDYUSR" edc:nzwidth="0x1" edc:desc="Ready User"/>
            <edc:SFRFieldDef edc:cname="BUSYCH" edc:nzwidth="0x1" edc:desc="Busy Channel"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL22CHANNEL" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x410060D0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL22CHINTENCLR" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x410060D4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL22CHINTENSET" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x410060D5">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL22CHINTFLAG" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x410060D6">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL22CHSTATUS" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3" edc:_addr="0x410060D7">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="RDYUSR" edc:nzwidth="0x1" edc:desc="Ready User"/>
            <edc:SFRFieldDef edc:cname="BUSYCH" edc:nzwidth="0x1" edc:desc="Busy Channel"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL23CHANNEL" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x410060D8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL23CHINTENCLR" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x410060DC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL23CHINTENSET" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x410060DD">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL23CHINTFLAG" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x410060DE">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL23CHSTATUS" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3" edc:_addr="0x410060DF">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="RDYUSR" edc:nzwidth="0x1" edc:desc="Ready User"/>
            <edc:SFRFieldDef edc:cname="BUSYCH" edc:nzwidth="0x1" edc:desc="Busy Channel"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL24CHANNEL" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x410060E0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL24CHINTENCLR" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x410060E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL24CHINTENSET" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x410060E5">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL24CHINTFLAG" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x410060E6">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL24CHSTATUS" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3" edc:_addr="0x410060E7">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="RDYUSR" edc:nzwidth="0x1" edc:desc="Ready User"/>
            <edc:SFRFieldDef edc:cname="BUSYCH" edc:nzwidth="0x1" edc:desc="Busy Channel"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL25CHANNEL" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x410060E8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL25CHINTENCLR" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x410060EC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL25CHINTENSET" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x410060ED">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL25CHINTFLAG" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x410060EE">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL25CHSTATUS" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3" edc:_addr="0x410060EF">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="RDYUSR" edc:nzwidth="0x1" edc:desc="Ready User"/>
            <edc:SFRFieldDef edc:cname="BUSYCH" edc:nzwidth="0x1" edc:desc="Busy Channel"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL26CHANNEL" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x410060F0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL26CHINTENCLR" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x410060F4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL26CHINTENSET" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x410060F5">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL26CHINTFLAG" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x410060F6">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL26CHSTATUS" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3" edc:_addr="0x410060F7">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="RDYUSR" edc:nzwidth="0x1" edc:desc="Ready User"/>
            <edc:SFRFieldDef edc:cname="BUSYCH" edc:nzwidth="0x1" edc:desc="Busy Channel"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL27CHANNEL" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x410060F8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL27CHINTENCLR" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x410060FC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL27CHINTENSET" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x410060FD">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL27CHINTFLAG" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x410060FE">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL27CHSTATUS" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3" edc:_addr="0x410060FF">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="RDYUSR" edc:nzwidth="0x1" edc:desc="Ready User"/>
            <edc:SFRFieldDef edc:cname="BUSYCH" edc:nzwidth="0x1" edc:desc="Busy Channel"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL28CHANNEL" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x41006100">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL28CHINTENCLR" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41006104">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL28CHINTENSET" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41006105">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL28CHINTFLAG" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41006106">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL28CHSTATUS" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3" edc:_addr="0x41006107">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="RDYUSR" edc:nzwidth="0x1" edc:desc="Ready User"/>
            <edc:SFRFieldDef edc:cname="BUSYCH" edc:nzwidth="0x1" edc:desc="Busy Channel"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL29CHANNEL" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x41006108">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL29CHINTENCLR" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4100610C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL29CHINTENSET" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4100610D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL29CHINTFLAG" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4100610E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL29CHSTATUS" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3" edc:_addr="0x4100610F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="RDYUSR" edc:nzwidth="0x1" edc:desc="Ready User"/>
            <edc:SFRFieldDef edc:cname="BUSYCH" edc:nzwidth="0x1" edc:desc="Busy Channel"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL30CHANNEL" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x41006110">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL30CHINTENCLR" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41006114">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL30CHINTENSET" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41006115">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL30CHINTFLAG" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41006116">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL30CHSTATUS" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3" edc:_addr="0x41006117">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="RDYUSR" edc:nzwidth="0x1" edc:desc="Ready User"/>
            <edc:SFRFieldDef edc:cname="BUSYCH" edc:nzwidth="0x1" edc:desc="Busy Channel"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL31CHANNEL" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x41006118">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL31CHINTENCLR" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4100611C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL31CHINTENSET" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4100611D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL31CHINTFLAG" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4100611E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL31CHSTATUS" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3" edc:_addr="0x4100611F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="RDYUSR" edc:nzwidth="0x1" edc:desc="Ready User"/>
            <edc:SFRFieldDef edc:cname="BUSYCH" edc:nzwidth="0x1" edc:desc="Busy Channel"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER0" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x41006120">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER1" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x41006124">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER2" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x41006128">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER3" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x4100612C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER4" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x41006130">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER5" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x41006134">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER6" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x41006138">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER7" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x4100613C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER8" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x41006140">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER9" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x41006144">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER10" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x41006148">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER11" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x4100614C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER12" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x41006150">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER13" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x41006154">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER14" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x41006158">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER15" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x4100615C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER16" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x41006160">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER17" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x41006164">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER18" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x41006168">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER19" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x4100616C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER20" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x41006170">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER21" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x41006174">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER22" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x41006178">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER23" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x4100617C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER24" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x41006180">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER25" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x41006184">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER26" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x41006188">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER27" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x4100618C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER28" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x41006190">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER29" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x41006194">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER30" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x41006198">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER31" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x4100619C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER32" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x410061A0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER33" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x410061A4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER34" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x410061A8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER35" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x410061AC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER36" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x410061B0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER37" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x410061B4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER38" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x410061B8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER39" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x410061BC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER40" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x410061C0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER41" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x410061C4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER42" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x410061C8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER43" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x410061CC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER44" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x410061D0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER45" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x410061D4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER46" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x410061D8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER47" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x410061DC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER48" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x410061E0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER49" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x410061E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER50" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x410061E8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER51" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x410061EC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER52" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x410061F0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER53" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x410061F4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER54" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x410061F8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER55" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x410061FC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER56" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x41006200">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x6" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1DFC" edc:_addr="0x41006204"/>
      <edc:SFRDef ltx:memberofperipheral="RAMECC" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41008000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RAMECC">
            <edc:SFRFieldDef edc:cname="SINGLEE" edc:nzwidth="0x1" edc:desc="Single Bit ECC Error Interrupt Enable Clear"/>
            <edc:SFRFieldDef edc:cname="DUALE" edc:nzwidth="0x1" edc:desc="Dual Bit ECC Error Interrupt Enable Clear"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RAMECC" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41008001">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RAMECC">
            <edc:SFRFieldDef edc:cname="SINGLEE" edc:nzwidth="0x1" edc:desc="Single Bit ECC Error Interrupt Enable Set"/>
            <edc:SFRFieldDef edc:cname="DUALE" edc:nzwidth="0x1" edc:desc="Dual Bit ECC Error Interrupt Enable Set"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RAMECC" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x41008002">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RAMECC">
            <edc:SFRFieldDef edc:cname="SINGLEE" edc:nzwidth="0x1" edc:desc="Single Bit ECC Error Interrupt"/>
            <edc:SFRFieldDef edc:cname="DUALE" edc:nzwidth="0x1" edc:desc="Dual Bit ECC Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RAMECC" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="-------r" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x41008003">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RAMECC">
            <edc:SFRFieldDef edc:cname="ECCDIS" edc:nzwidth="0x1" edc:desc="ECC Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RAMECC" edc:cname="ERRADDR" edc:nzwidth="0x20" edc:access="--------------rrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3FFFF" edc:_addr="0x41008004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RAMECC">
            <edc:SFRFieldDef edc:cname="ERRADDR" edc:nzwidth="0x12" edc:desc="Error Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x7" edc:_addr="0x41008008"/>
      <edc:SFRDef ltx:memberofperipheral="RAMECC" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4100800F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RAMECC">
            <edc:SFRFieldDef edc:cname="ECCDIS" edc:nzwidth="0x1" edc:desc="ECC Disable"/>
            <edc:SFRFieldDef edc:cname="ECCELOG" edc:nzwidth="0x1" edc:desc="ECC Error Log"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8FF0" edc:_addr="0x41008010"/>
      <edc:SFRDef ltx:memberofperipheral="ARB" edc:cname="ARB_BT_CTRL" edc:nzwidth="0x20" edc:access="----------------------nnnnnnnnnn" edc:por="00000000000000000000000000001010" edc:mclr="00000000000000000000000000001010" edc:impl="0x3FF" edc:_addr="0x41011000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ARB">
            <edc:SFRFieldDef edc:cname="MAX_ABORT_TIME_BT" edc:nzwidth="0x8" edc:desc="BT max abort time"/>
            <edc:SFRFieldDef edc:cname="ALLOW_OPT_RX_BT" edc:nzwidth="0x1" edc:desc="BT allow optimistic rx"/>
            <edc:SFRFieldDef edc:cname="ALLOW_OPT_TX_BT" edc:nzwidth="0x1" edc:desc="BT allow optimistic tx"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ARB" edc:cname="ARB_ZB_CTRL" edc:nzwidth="0x20" edc:access="----------------------nnnnnnnnnn" edc:por="00000000000000000000000000001010" edc:mclr="00000000000000000000000000001010" edc:impl="0x3FF" edc:_addr="0x41011004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ARB">
            <edc:SFRFieldDef edc:cname="MAX_ABORT_TIME_ZB" edc:nzwidth="0x8" edc:desc="ZB max abort time"/>
            <edc:SFRFieldDef edc:cname="ALLOW_OPT_RX_ZB" edc:nzwidth="0x1" edc:desc="ZB allow optimistic rx"/>
            <edc:SFRFieldDef edc:cname="ALLOW_OPT_TX_ZB" edc:nzwidth="0x1" edc:desc="ZB allow optimistic tx"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ARB" edc:cname="ARB_EVENT_CTRL" edc:nzwidth="0x20" edc:access="---------------------nnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FF" edc:_addr="0x41011008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ARB">
            <edc:SFRFieldDef edc:cname="START_TIME_ALLOWANCE" edc:nzwidth="0x4" edc:desc="minimum change needed in the start time to be considered as an arbitration event."/>
            <edc:SFRFieldDef edc:cname="USE_END_TIME_AS_EVENT" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USE_START_TIME_AS_EVENT" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USE_PRIO_AS_EVENT" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DELAYED_OK_TASKS_DONT_WAIT" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RESOLVE_EQUAL_PRIO" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="ABORT_IN_STATIC_MODE" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ARB" edc:cname="ARB_CORE_CTRL" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000101000000" edc:mclr="00000000000000000000000101000000" edc:_addr="0x4101100C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ARB">
            <edc:SFRFieldDef edc:cname="RADIO_ARB_MODE" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="TESTBUS_SELECT" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="CFG_CDC_ADJ_VAL" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="AD_ARB_SOFT_RESET" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ARB_TESTBUS_BYTE_SELECT" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="RESERVED_1" edc:nzwidth="0x5"/>
            <edc:SFRFieldDef edc:cname="RAD_ARB_TIMEOUT" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ARB" edc:cname="ARB_CORE_STATUS" edc:nzwidth="0x20" edc:access="---------------------rrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FF" edc:_addr="0x41011010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ARB">
            <edc:SFRFieldDef edc:cname="ARB_CORE_STATE" edc:nzwidth="0x3"/>
            <edc:SFRFieldDef edc:cname="NEXT_RADIO_OWNER" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="CUR_RADIO_OWNER" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="CUR_REQ_PRI" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ARB" edc:cname="ARB_INT_STATUS" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF" edc:_addr="0x41011014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ARB">
            <edc:SFRFieldDef edc:cname="BT_ABORT_HIZB" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ZB_ABORT_HIBT" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BT_RADIO_TO_ABRT" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ZB_RADIO_TO_ABRT" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BT_TIMESENSE_REQ_LOSS" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ZB_TIMESENSE_REQ_LOSS" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="COLLISION_PREDICTED" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ARB_IDLE" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ARB" edc:cname="ARB_INT_MASK" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF" edc:_addr="0x41011018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ARB">
            <edc:SFRFieldDef edc:cname="BT_ABORT_HIZB_MSK" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ZB_ABORT_HIBT_MSK" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BT_RADIO_TO_ABRT_MSK" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ZB_RADIO_TO_ABRT_MSK" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BT_TIMESENSE_REQ_LOSS_MSK" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ZB_TIMESENSE_REQ_LOSS_MSK" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="COLLISION_PREDICTED_MSK" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ARB_IDLE_MSK" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x149C" edc:_addr="0x4101101C"/>
      <edc:SFRDef ltx:memberofperipheral="BLE" edc:cname="DPLL_RG1" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0x410124B8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="BLE">
            <edc:SFRFieldDef edc:cname="DPLL_RG1BITS" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="BLE" edc:cname="DPLL_RG2" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0x410124BA">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="BLE">
            <edc:SFRFieldDef edc:cname="DPLL_RG2BITS" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1B44" edc:_addr="0x410124BC"/>
      <edc:SFRDef ltx:memberofperipheral="BTZBSYS" edc:cname="SUBSYS_CNTRL_REG0" edc:nzwidth="0x20" edc:access="nnnnnnnnnn-nnnnn---------nnnn-nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFDF007B" edc:_addr="0x41014000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="BTZBSYS">
            <edc:SFRFieldDef edc:cname="zb_slp_ctrl" edc:nzwidth="0x1" edc:desc="zb_slp_ctrl"/>
            <edc:SFRFieldDef edc:cname="zb_soft_reset_in" edc:nzwidth="0x1" edc:desc="zb_soft_reset_in"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="zb_reset_by_fw" edc:nzwidth="0x1" edc:desc="zb_reset_by_fw"/>
            <edc:SFRFieldDef edc:cname="zb_en_main_clk" edc:nzwidth="0x1" edc:desc="zb_en_main_clk"/>
            <edc:SFRFieldDef edc:cname="ant_div_sel_1_iom_en" edc:nzwidth="0x1" edc:desc="ant_div_sel_1_iom_en"/>
            <edc:SFRFieldDef edc:cname="ant_div_sel_2_iom_en" edc:nzwidth="0x1" edc:desc="ant_div_sel_2_iom_en"/>
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="bt_pdc_ov" edc:nzwidth="0x1" edc:desc="bt_pdc_ov"/>
            <edc:SFRFieldDef edc:cname="bt_sfr_wakeup_bit" edc:nzwidth="0x1" edc:desc="bt_sfr_wakeup_bit"/>
            <edc:SFRFieldDef edc:cname="bt_hw_rc_re_cal" edc:nzwidth="0x1" edc:desc="bt_hw_rc_re_cal"/>
            <edc:SFRFieldDef edc:cname="bt_reset_by_fw" edc:nzwidth="0x1" edc:desc="bt_reset_by_fw"/>
            <edc:SFRFieldDef edc:cname="bt_en_main_clk" edc:nzwidth="0x1" edc:desc="bt_en_main_clk"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="subsys_dbg_bus_sel_top" edc:nzwidth="0x1" edc:desc="subsys_dbg_bus_sel_top"/>
            <edc:SFRFieldDef edc:cname="aclb_soft_rst_n" edc:nzwidth="0x1" edc:desc="aclb_soft_rst_n"/>
            <edc:SFRFieldDef edc:cname="aclb_pwr_rst_n" edc:nzwidth="0x1" edc:desc="aclb_pwr_rst_n"/>
            <edc:SFRFieldDef edc:cname="subsys_dbg_bus_sel" edc:nzwidth="0x1" edc:desc="subsys_dbg_bus_sel"/>
            <edc:SFRFieldDef edc:cname="disable_pclk_arb" edc:nzwidth="0x1" edc:desc="disable_pclk_arb"/>
            <edc:SFRFieldDef edc:cname="disable_pclk_zb_mac" edc:nzwidth="0x1" edc:desc="disable_pclk_zb_mac"/>
            <edc:SFRFieldDef edc:cname="disable_pclk_bt" edc:nzwidth="0x1" edc:desc="disable_pclk_bt"/>
            <edc:SFRFieldDef edc:cname="ant_div_sel_ovrd_val" edc:nzwidth="0x2" edc:desc="ant_div_sel_ovrd_val"/>
            <edc:SFRFieldDef edc:cname="ant_div_sel_ovrd_en" edc:nzwidth="0x1" edc:desc="ant_div_sel_ovrd_en"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="BTZBSYS" edc:cname="SUBSYS_CNTRL_REG1" edc:nzwidth="0x20" edc:access="nnnnnn--nnnnnnnnnnnnnn---nnnnnnn" edc:por="00000000000000000001100000000000" edc:mclr="00000000000000000001100000000000" edc:impl="0xFCFFFC7F" edc:_addr="0x41014004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="BTZBSYS">
            <edc:SFRFieldDef edc:cname="subsys_dbg_bus_sel_top" edc:nzwidth="0x2" edc:desc="subsys_dbg_bus_sel_top"/>
            <edc:SFRFieldDef edc:cname="subsys_dbg_bus_sel" edc:nzwidth="0x2" edc:desc="subsys_dbg_bus_sel"/>
            <edc:SFRFieldDef edc:cname="subsys_clk_src_sel" edc:nzwidth="0x2" edc:desc="subsys_clk_src_sel"/>
            <edc:SFRFieldDef edc:cname="ssubsys_clk_div_sel" edc:nzwidth="0x1" edc:desc="subsys_clk_div_sel"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="disable_one_sec_counter" edc:nzwidth="0x1" edc:desc="disable_one_sec_counter"/>
            <edc:SFRFieldDef edc:cname="subsys_dbg_bus_en" edc:nzwidth="0x1" edc:desc="subsys_dbg_bus_en"/>
            <edc:SFRFieldDef edc:cname="subsys_xtal_ready_delay" edc:nzwidth="0x4" edc:desc="subsys_xtal_ready_delay"/>
            <edc:SFRFieldDef edc:cname="tr_sw_iom_en" edc:nzwidth="0x1" edc:desc="tr_sw_iom_en"/>
            <edc:SFRFieldDef edc:cname="tr_sw_n_iom_en" edc:nzwidth="0x1" edc:desc="tr_sw_n_iom_en"/>
            <edc:SFRFieldDef edc:cname="pa_on_iom_en" edc:nzwidth="0x1" edc:desc="pa_on_iom_en"/>
            <edc:SFRFieldDef edc:cname="lna_on_iom_en" edc:nzwidth="0x1" edc:desc="lna_on_iom_en"/>
            <edc:SFRFieldDef edc:cname="zb_bt_bar_ovrd_en" edc:nzwidth="0x1" edc:desc="zb_bt_bar_ovrd_en"/>
            <edc:SFRFieldDef edc:cname="zb_bt_bar_ovrd_val" edc:nzwidth="0x1" edc:desc="zb_bt_bar_ovrd_val"/>
            <edc:SFRFieldDef edc:cname="invert_btadc_clk" edc:nzwidth="0x1" edc:desc="invert_btadc_clk"/>
            <edc:SFRFieldDef edc:cname="clk_lp_req" edc:nzwidth="0x1" edc:desc="clk_lp_req"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="xtal_lock_cnt_rstn_ovrd_en" edc:nzwidth="0x1" edc:desc="xtal_lock_cnt_rstn_ovrd_en"/>
            <edc:SFRFieldDef edc:cname="xtal_lock_cnt_rstn_ovrd_val" edc:nzwidth="0x1" edc:desc="xtal_lock_cnt_rstn_ovrd_val"/>
            <edc:SFRFieldDef edc:cname="pll_lock_flops_rstn_ovrd_en" edc:nzwidth="0x1" edc:desc="pll_lock_flops_rstn_ovrd_en"/>
            <edc:SFRFieldDef edc:cname="pll_lock_flops_rstn_ovrd_val" edc:nzwidth="0x1" edc:desc="pll_lock_flops_rstn_ovrd_val"/>
            <edc:SFRFieldDef edc:cname="die_clk_sel" edc:nzwidth="0x1" edc:desc="die_clk_sel"/>
            <edc:SFRFieldDef edc:cname="disable_adc_clk_gating" edc:nzwidth="0x1" edc:desc="disable_adc_clk_gating"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="BTZBSYS" edc:cname="SUBSYS_CNTRL_REG2" edc:nzwidth="0x20" edc:access="nnnnnn---nnn-nnn-nnn-nnn-nnn-nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFC777777" edc:_addr="0x41014008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="BTZBSYS">
            <edc:SFRFieldDef edc:cname="crossbar_data_line_sel_0" edc:nzwidth="0x3" edc:desc="crossbar_data_line_sel_0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="crossbar_data_line_sel_1" edc:nzwidth="0x3" edc:desc="crossbar_data_line_sel_1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="crossbar_data_line_sel_2" edc:nzwidth="0x3" edc:desc="crossbar_data_line_sel_2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="crossbar_data_line_sel_3" edc:nzwidth="0x3" edc:desc="crossbar_data_line_sel_3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="crossbar_data_line_sel_4" edc:nzwidth="0x3" edc:desc="crossbar_data_line_sel_4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="crossbar_data_line_sel_5" edc:nzwidth="0x3" edc:desc="crossbar_data_line_sel_5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="crossbar_data_invert" edc:nzwidth="0x6" edc:desc="crossbar_data_invert"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="BTZBSYS" edc:cname="SUBSYS_CNTRL_REG3" edc:nzwidth="0x20" edc:access="------------------nnnnnnnnnnnnnn" edc:por="00000000000000000000001001000000" edc:mclr="00000000000000000000001001000000" edc:impl="0x3FFF" edc:_addr="0x4101400C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="BTZBSYS">
            <edc:SFRFieldDef edc:cname="le_2m_fpga_v1c0_mode" edc:nzwidth="0x1" edc:desc="le_2m_fpga_v1c0_mode"/>
            <edc:SFRFieldDef edc:cname="subsys_pll_ready_delay" edc:nzwidth="0x6" edc:desc="subsys_pll_ready_delay"/>
            <edc:SFRFieldDef edc:cname="disable_pclk_dfe" edc:nzwidth="0x1" edc:desc="disable_pclk_dfe"/>
            <edc:SFRFieldDef edc:cname="disable_pclk_zb_mdm" edc:nzwidth="0x1" edc:desc="disable_pclk_zb_mdm"/>
            <edc:SFRFieldDef edc:cname="pll_lock_fifo_en" edc:nzwidth="0x1" edc:desc="pll_lock_fifo_en"/>
            <edc:SFRFieldDef edc:cname="pll_auto_relock_en" edc:nzwidth="0x1" edc:desc="pll_auto_relock_en"/>
            <edc:SFRFieldDef edc:cname="pll_lock_fifo_empty_soft_reset" edc:nzwidth="0x1" edc:desc="pll_lock_fifo_empty_soft_reset"/>
            <edc:SFRFieldDef edc:cname="pll_lock_fifo_clk_src_sel" edc:nzwidth="0x1" edc:desc="pll_lock_fifo_clk_src_sel"/>
            <edc:SFRFieldDef edc:cname="pll_lock_fifo_empty_rst_en" edc:nzwidth="0x1" edc:desc="pll_lock_fifo_empty_rst_en"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x10" edc:_addr="0x41014010"/>
      <edc:SFRDef ltx:memberofperipheral="BTZBSYS" edc:cname="SUBSYS_STATUS_REG0" edc:nzwidth="0x20" edc:access="--------------rr-------------rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x30007" edc:_addr="0x41014020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="BTZBSYS">
            <edc:SFRFieldDef edc:cname="zb_sleep_mode" edc:nzwidth="0x1" edc:desc="zb_sleep_mode"/>
            <edc:SFRFieldDef edc:cname="zb_deep_sleep_mode" edc:nzwidth="0x1" edc:desc="zb_deep_sleep_mode"/>
            <edc:SFRFieldDef edc:cname="radio_idle_zb" edc:nzwidth="0x1" edc:desc="radio_idle_zb"/>
            <edc:AdjustPoint edc:offset="0xD"/>
            <edc:SFRFieldDef edc:cname="bt_low_power_mode" edc:nzwidth="0x1" edc:desc="bt_low_power_mode"/>
            <edc:SFRFieldDef edc:cname="bt_rf_idle" edc:nzwidth="0x1" edc:desc="bt_rf_idle"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="BTZBSYS" edc:cname="SUBSYS_STATUS_REG1" edc:nzwidth="0x20" edc:access="-----------------------rrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1FF" edc:_addr="0x41014024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="BTZBSYS">
            <edc:SFRFieldDef edc:cname="xtal_ready_out" edc:nzwidth="0x1" edc:desc="xtal_ready_out"/>
            <edc:SFRFieldDef edc:cname="pll_lock_out" edc:nzwidth="0x1" edc:desc="pll_lock_out"/>
            <edc:SFRFieldDef edc:cname="XTAL_ready" edc:nzwidth="0x1" edc:desc="XTAL_ready"/>
            <edc:SFRFieldDef edc:cname="PLL_locked" edc:nzwidth="0x1" edc:desc="PLL_locked"/>
            <edc:SFRFieldDef edc:cname="clk_lp_ready" edc:nzwidth="0x1" edc:desc="clk_lp_ready"/>
            <edc:SFRFieldDef edc:cname="clk_mux_sel" edc:nzwidth="0x2" edc:desc="clk_mux_sel0"/>
            <edc:SFRFieldDef edc:cname="pll_lock_fifo_empty" edc:nzwidth="0x1" edc:desc="XTAL_ready"/>
            <edc:SFRFieldDef edc:cname="pllc_ready_cnt_expire_raw" edc:nzwidth="0x1" edc:desc="pllc_ready_cnt_expire_raw"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="BTZBSYS" edc:cname="SUBSYS_STATUS_REG2" edc:nzwidth="0x20" edc:access="----------------rrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF" edc:_addr="0x41014028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="BTZBSYS">
            <edc:SFRFieldDef edc:cname="VERSION_NUM" edc:nzwidth="0x8" edc:desc="VERSION_NUM"/>
            <edc:SFRFieldDef edc:cname="PART_NUM" edc:nzwidth="0x8" edc:desc="PART_NUM"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:SFRDataSector>
    <edc:SFRDataSector edc:regionid="PBC_BRIDGE" edc:beginaddr="0x42000000" edc:endaddr="0x42011014" edc:rw="rw">
      <edc:SFRDef ltx:memberofperipheral="QSPI" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-------n----------------------nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1000003" edc:_addr="0x42000000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="QSPI">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:AdjustPoint edc:offset="0x16"/>
            <edc:SFRFieldDef edc:cname="LASTXFER" edc:nzwidth="0x1" edc:desc="Last Transfer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="QSPI" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnn----nnnn--nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF0F3F" edc:_addr="0x42000004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="QSPI">
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x1" edc:desc="Serial Memory Mode">
              <edc:SFRFieldSemantic edc:cname="SPI" edc:desc="SPI operating mode" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="MEMORY" edc:desc="Serial Memory operating mode" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LOOPEN" edc:nzwidth="0x1" edc:desc="Local Loopback Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Local Loopback is disabled" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Local Loopback is enabled" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WDRBT" edc:nzwidth="0x1" edc:desc="Wait Data Read Before Transfer"/>
            <edc:SFRFieldDef edc:cname="SMEMREG" edc:nzwidth="0x1" edc:desc="Serial Memory reg"/>
            <edc:SFRFieldDef edc:cname="CSMODE" edc:nzwidth="0x2" edc:desc="Chip Select Mode">
              <edc:SFRFieldSemantic edc:cname="NORELOAD" edc:desc="The chip select is deasserted if TD has not been reloaded before the end of the current transfer." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LASTXFER" edc:desc="The chip select is deasserted when the bit LASTXFER is written at 1 and the character written in TD has been transferred." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SYSTEMATICALLY" edc:desc="The chip select is deasserted systematically after each transfer." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DATALEN" edc:nzwidth="0x4" edc:desc="Data Length">
              <edc:SFRFieldSemantic edc:cname="8BITS" edc:desc="8-bits transfer" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="9BITS" edc:desc="9 bits transfer" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="10BITS" edc:desc="10-bits transfer" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="11BITS" edc:desc="11-bits transfer" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="12BITS" edc:desc="12-bits transfer" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="13BITS" edc:desc="13-bits transfer" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="14BITS" edc:desc="14-bits transfer" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="15BITS" edc:desc="15-bits transfer" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="16BITS" edc:desc="16-bits transfer" edc:when="(field &amp; 0xF) == 0x08"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="DLYBCT" edc:nzwidth="0x8" edc:desc="Delay Between Consecutive Transfers"/>
            <edc:SFRFieldDef edc:cname="DLYCS" edc:nzwidth="0x8" edc:desc="Minimum Inactive CS Delay"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="QSPI" edc:cname="BAUD" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnn------nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF03" edc:_addr="0x42000008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="QSPI">
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity"/>
            <edc:SFRFieldDef edc:cname="CPHA" edc:nzwidth="0x1" edc:desc="Clock Phase"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x8" edc:desc="Serial Clock Baud Rate"/>
            <edc:SFRFieldDef edc:cname="DLYBS" edc:nzwidth="0x8" edc:desc="Delay Before SCK"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="QSPI" edc:cname="RXDATA" edc:nzwidth="0x20" edc:access="----------------rrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF" edc:_addr="0x4200000C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="QSPI">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x10" edc:desc="Receive Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="QSPI" edc:cname="TXDATA" edc:nzwidth="0x20" edc:access="----------------wwwwwwwwwwwwwwww" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF" edc:_addr="0x42000010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="QSPI">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x10" edc:desc="Transmit Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="QSPI" edc:cname="INTENCLR" edc:nzwidth="0x20" edc:access="---------------------n-n----nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x50F" edc:_addr="0x42000014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="QSPI">
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Data Register Full Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Transmit Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmission Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CSRISE" edc:nzwidth="0x1" edc:desc="Chip Select Rise Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="INSTREND" edc:nzwidth="0x1" edc:desc="Instruction End Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="QSPI" edc:cname="INTENSET" edc:nzwidth="0x20" edc:access="---------------------n-n----nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x50F" edc:_addr="0x42000018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="QSPI">
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Data Register Full Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Transmit Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmission Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CSRISE" edc:nzwidth="0x1" edc:desc="Chip Select Rise Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="INSTREND" edc:nzwidth="0x1" edc:desc="Instruction End Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="QSPI" edc:cname="INTFLAG" edc:nzwidth="0x20" edc:access="---------------------n-n----nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x50F" edc:_addr="0x4200001C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="QSPI">
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Data Register Full"/>
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Transmit Data Register Empty"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmission Complete"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Overrun Error"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CSRISE" edc:nzwidth="0x1" edc:desc="Chip Select Rise"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="INSTREND" edc:nzwidth="0x1" edc:desc="Instruction End"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="QSPI" edc:cname="STATUS" edc:nzwidth="0x20" edc:access="----------------------r-------r-" edc:por="00000000000000000000001000000000" edc:mclr="00000000000000000000001000000000" edc:impl="0x202" edc:_addr="0x42000020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="QSPI">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="CSSTATUS" edc:nzwidth="0x1" edc:desc="Chip Select"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x42000024"/>
      <edc:SFRDef ltx:memberofperipheral="QSPI" edc:cname="INSTRADDR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42000030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="QSPI">
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0x20" edc:desc="Instruction Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="QSPI" edc:cname="INSTRCTRL" edc:nzwidth="0x20" edc:access="--------nnnnnnnn--------nnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF00FF" edc:_addr="0x42000034">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="QSPI">
            <edc:SFRFieldDef edc:cname="INSTR" edc:nzwidth="0x8" edc:desc="Instruction Code"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="OPTCODE" edc:nzwidth="0x8" edc:desc="Option Code"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="QSPI" edc:cname="INSTRFRAME" edc:nzwidth="0x20" edc:access="-----------nnnnnnnnn-nnnnnnn-nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1FF7F7" edc:_addr="0x42000038">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="QSPI">
            <edc:SFRFieldDef edc:cname="WIDTH" edc:nzwidth="0x3" edc:desc="Instruction Code, Address, Option Code and Data Width">
              <edc:SFRFieldSemantic edc:cname="SINGLE_BIT_SPI" edc:desc="Instruction: Single-bit SPI / Address-Option: Single-bit SPI / Data: Single-bit SPI" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DUAL_OUTPUT" edc:desc="Instruction: Single-bit SPI / Address-Option: Single-bit SPI / Data: Dual SPI" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="QUAD_OUTPUT" edc:desc="Instruction: Single-bit SPI / Address-Option: Single-bit SPI / Data: Quad SPI" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DUAL_IO" edc:desc="Instruction: Single-bit SPI / Address-Option: Dual SPI / Data: Dual SPI" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="QUAD_IO" edc:desc="Instruction: Single-bit SPI / Address-Option: Quad SPI / Data: Quad SPI" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DUAL_CMD" edc:desc="Instruction: Dual SPI / Address-Option: Dual SPI / Data: Dual SPI" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="QUAD_CMD" edc:desc="Instruction: Quad SPI / Address-Option: Quad SPI / Data: Quad SPI" edc:when="(field &amp; 0x7) == 0x06"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="INSTREN" edc:nzwidth="0x1" edc:desc="Instruction Enable"/>
            <edc:SFRFieldDef edc:cname="ADDREN" edc:nzwidth="0x1" edc:desc="Address Enable"/>
            <edc:SFRFieldDef edc:cname="OPTCODEEN" edc:nzwidth="0x1" edc:desc="Option Enable"/>
            <edc:SFRFieldDef edc:cname="DATAEN" edc:nzwidth="0x1" edc:desc="Data Enable"/>
            <edc:SFRFieldDef edc:cname="OPTCODELEN" edc:nzwidth="0x2" edc:desc="Option Code Length">
              <edc:SFRFieldSemantic edc:cname="1BIT" edc:desc="1-bit length option code" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="2BITS" edc:desc="2-bits length option code" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="4BITS" edc:desc="4-bits length option code" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="8BITS" edc:desc="8-bits length option code" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ADDRLEN" edc:nzwidth="0x1" edc:desc="Address Length">
              <edc:SFRFieldSemantic edc:cname="24BITS" edc:desc="24-bits address length" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="32BITS" edc:desc="32-bits address length" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TFRTYPE" edc:nzwidth="0x2" edc:desc="Data Transfer Type">
              <edc:SFRFieldSemantic edc:cname="READ" edc:desc="Read transfer from the serial memory.Scrambling is not performed.Read at random location (fetch) in the serial flash memory is not possible." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="READMEMORY" edc:desc="Read data transfer from the serial memory.If enabled, scrambling is performed.Read at random location (fetch) in the serial flash memory is possible." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="WRITE" edc:desc="Write transfer into the serial memory.Scrambling is not performed." edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="WRITEMEMORY" edc:desc="Write data transfer into the serial memory.If enabled, scrambling is performed." edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CRMODE" edc:nzwidth="0x1" edc:desc="Continuous Read Mode"/>
            <edc:SFRFieldDef edc:cname="DDREN" edc:nzwidth="0x1" edc:desc="Double Data Rate Enable"/>
            <edc:SFRFieldDef edc:cname="DUMMYLEN" edc:nzwidth="0x5" edc:desc="Dummy Cycles Length"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4200003C"/>
      <edc:SFRDef ltx:memberofperipheral="QSPI" edc:cname="SCRAMBCTRL" edc:nzwidth="0x20" edc:access="------------------------------nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3" edc:_addr="0x42000040">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="QSPI">
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Scrambling/Unscrambling Enable"/>
            <edc:SFRFieldDef edc:cname="RANDOMDIS" edc:nzwidth="0x1" edc:desc="Scrambling/Unscrambling Random Value Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="QSPI" edc:cname="SCRAMBKEY" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42000044">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="QSPI">
            <edc:SFRFieldDef edc:cname="KEY" edc:nzwidth="0x20" edc:desc="Scrambling User Key"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x17B8" edc:_addr="0x42000048"/>
      <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="CTRL" edc:nzwidth="0x8" edc:access="-n----nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x43" edc:_addr="0x42001800">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="The peripheral is not reset" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="The peripheral is reset" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="The peripheral is disabled" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="The peripheral is enabled" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Generic clock is not required in standby sleep mode" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="Generic clock is  required in standby sleep mode" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x42001801"/>
      <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="SEQCTRL0" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x42001804">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
            <edc:SFRFieldDef edc:cname="SEQSEL" edc:nzwidth="0x4" edc:desc="Sequential Selection">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Sequential logic is disabled" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DFF" edc:desc="D flip flop" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="JK" edc:desc="JK flip flop" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="LATCH" edc:desc="D latch" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RS" edc:desc="RS latch" edc:when="(field &amp; 0xF) == 0x04"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x42001805"/>
      <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUTCTRL0" edc:nzwidth="0x20" edc:access="nnnnnnnn-nnnnnnnnnnnnnnnn-nn--n-" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF7FFFB2" edc:_addr="0x42001808">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="LUT Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="LUT block is disabled" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="LUT block is enabled" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FILTSEL" edc:nzwidth="0x2" edc:desc="Filter Selection">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Filter disabled" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SYNCH" edc:desc="Synchronizer enabled" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FILTER" edc:desc="Filter enabled" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="EDGESEL" edc:nzwidth="0x1" edc:desc="Edge Selection">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Edge detector is disabled" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="Edge detector is enabled" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="INSEL0" edc:nzwidth="0x4" edc:desc="Input Selection 0">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="EVENT" edc:desc="Event input source" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="IO" edc:desc="I/O pin input source" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="AC" edc:desc="AC input source" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="TC" edc:desc="TC input source" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="ALTTC" edc:desc="Alternate TC input source" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="TCC" edc:desc="TCC input source" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM" edc:desc="SERCOM input source" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="ALT2TC" edc:desc="Alternate2 TC input source" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCEVENT" edc:desc="Asynchronous event input source" edc:when="(field &amp; 0xF) == 0x0B"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="INSEL1" edc:nzwidth="0x4" edc:desc="Input Selection 1">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="EVENT" edc:desc="Event input source" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="IO" edc:desc="I/O pin input source" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="AC" edc:desc="AC input source" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="TC" edc:desc="TC input source" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="ALTTC" edc:desc="Alternate TC input source" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="TCC" edc:desc="TCC input source" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM" edc:desc="SERCOM input source" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="ALT2TC" edc:desc="Alternate2 TC input source" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCEVENT" edc:desc="Asynchronous event input source" edc:when="(field &amp; 0xF) == 0x0B"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="INSEL2" edc:nzwidth="0x4" edc:desc="Input Selection 2">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="EVENT" edc:desc="Event input source" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="IO" edc:desc="I/O pin input source" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="AC" edc:desc="AC input source" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="TC" edc:desc="TC input source" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="ALTTC" edc:desc="Alternate TC input source" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="TCC" edc:desc="TCC input source" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM" edc:desc="SERCOM input source" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="ALT2TC" edc:desc="Alternate2 TC input source" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCEVENT" edc:desc="Asynchronous event input source" edc:when="(field &amp; 0xF) == 0x0B"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="INVEI" edc:nzwidth="0x1" edc:desc="Inverted Event Input Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Incoming event is not inverted" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="Incoming event is inverted" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LUTEI" edc:nzwidth="0x1" edc:desc="LUT Event Input Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="LUT incoming event is disabled" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="LUT incoming event is enabled" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LUTEO" edc:nzwidth="0x1" edc:desc="LUT Event Output Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="LUT event output is disabled" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="LUT event output is enabled" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TRUTH" edc:nzwidth="0x8" edc:desc="Truth Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUTCTRL1" edc:nzwidth="0x20" edc:access="nnnnnnnn-nnnnnnnnnnnnnnnn-nn--n-" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF7FFFB2" edc:_addr="0x4200180C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="LUT Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="LUT block is disabled" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="LUT block is enabled" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FILTSEL" edc:nzwidth="0x2" edc:desc="Filter Selection">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Filter disabled" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SYNCH" edc:desc="Synchronizer enabled" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FILTER" edc:desc="Filter enabled" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="EDGESEL" edc:nzwidth="0x1" edc:desc="Edge Selection">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Edge detector is disabled" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="Edge detector is enabled" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="INSEL0" edc:nzwidth="0x4" edc:desc="Input Selection 0">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="EVENT" edc:desc="Event input source" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="IO" edc:desc="I/O pin input source" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="AC" edc:desc="AC input source" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="TC" edc:desc="TC input source" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="ALTTC" edc:desc="Alternate TC input source" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="TCC" edc:desc="TCC input source" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM" edc:desc="SERCOM input source" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="ALT2TC" edc:desc="Alternate2 TC input source" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCEVENT" edc:desc="Asynchronous event input source" edc:when="(field &amp; 0xF) == 0x0B"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="INSEL1" edc:nzwidth="0x4" edc:desc="Input Selection 1">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="EVENT" edc:desc="Event input source" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="IO" edc:desc="I/O pin input source" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="AC" edc:desc="AC input source" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="TC" edc:desc="TC input source" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="ALTTC" edc:desc="Alternate TC input source" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="TCC" edc:desc="TCC input source" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM" edc:desc="SERCOM input source" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="ALT2TC" edc:desc="Alternate2 TC input source" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCEVENT" edc:desc="Asynchronous event input source" edc:when="(field &amp; 0xF) == 0x0B"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="INSEL2" edc:nzwidth="0x4" edc:desc="Input Selection 2">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="EVENT" edc:desc="Event input source" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="IO" edc:desc="I/O pin input source" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="AC" edc:desc="AC input source" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="TC" edc:desc="TC input source" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="ALTTC" edc:desc="Alternate TC input source" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="TCC" edc:desc="TCC input source" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM" edc:desc="SERCOM input source" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="ALT2TC" edc:desc="Alternate2 TC input source" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCEVENT" edc:desc="Asynchronous event input source" edc:when="(field &amp; 0xF) == 0x0B"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="INVEI" edc:nzwidth="0x1" edc:desc="Inverted Event Input Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Incoming event is not inverted" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="Incoming event is inverted" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LUTEI" edc:nzwidth="0x1" edc:desc="LUT Event Input Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="LUT incoming event is disabled" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="LUT incoming event is enabled" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LUTEO" edc:nzwidth="0x1" edc:desc="LUT Event Output Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="LUT event output is disabled" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="LUT event output is enabled" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TRUTH" edc:nzwidth="0x8" edc:desc="Truth Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3F0" edc:_addr="0x42001810"/>
      <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x42001C00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="------ww" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x42001C01">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
            <edc:SFRFieldDef edc:cname="START0" edc:nzwidth="0x1" edc:desc="Comparator 0 Start Comparison"/>
            <edc:SFRFieldDef edc:cname="START1" edc:nzwidth="0x1" edc:desc="Comparator 1 Start Comparison"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="EVCTRL" edc:nzwidth="0x10" edc:access="--nn--nn---n--nn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x3313" edc:_addr="0x42001C02">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
            <edc:SFRFieldDef edc:cname="COMPEO0" edc:nzwidth="0x1" edc:desc="Comparator 0 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="COMPEO1" edc:nzwidth="0x1" edc:desc="Comparator 1 Event Output Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="WINEO0" edc:nzwidth="0x1" edc:desc="Window 0 Event Output Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="COMPEI0" edc:nzwidth="0x1" edc:desc="Comparator 0 Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="COMPEI1" edc:nzwidth="0x1" edc:desc="Comparator 1 Event Input Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="INVEI0" edc:nzwidth="0x1" edc:desc="Comparator 0 Input Event Invert Enable"/>
            <edc:SFRFieldDef edc:cname="INVEI1" edc:nzwidth="0x1" edc:desc="Comparator 1 Input Event Invert Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="---n--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x13" edc:_addr="0x42001C04">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
            <edc:SFRFieldDef edc:cname="COMP0" edc:nzwidth="0x1" edc:desc="Comparator 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="COMP1" edc:nzwidth="0x1" edc:desc="Comparator 1 Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="WIN0" edc:nzwidth="0x1" edc:desc="Window 0 Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="---n--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x13" edc:_addr="0x42001C05">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
            <edc:SFRFieldDef edc:cname="COMP0" edc:nzwidth="0x1" edc:desc="Comparator 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="COMP1" edc:nzwidth="0x1" edc:desc="Comparator 1 Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="WIN0" edc:nzwidth="0x1" edc:desc="Window 0 Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="---n--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x13" edc:_addr="0x42001C06">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
            <edc:SFRFieldDef edc:cname="COMP0" edc:nzwidth="0x1" edc:desc="Comparator 0"/>
            <edc:SFRFieldDef edc:cname="COMP1" edc:nzwidth="0x1" edc:desc="Comparator 1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="WIN0" edc:nzwidth="0x1" edc:desc="Window 0"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="STATUSA" edc:nzwidth="0x8" edc:access="--rr--rr" edc:por="00000000" edc:mclr="00000000" edc:impl="0x33" edc:_addr="0x42001C07">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
            <edc:SFRFieldDef edc:cname="STATE0" edc:nzwidth="0x1" edc:desc="Comparator 0 Current State"/>
            <edc:SFRFieldDef edc:cname="STATE1" edc:nzwidth="0x1" edc:desc="Comparator 1 Current State"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="WSTATE0" edc:nzwidth="0x2" edc:desc="Window 0 Current State">
              <edc:SFRFieldSemantic edc:cname="ABOVE" edc:desc="Signal is above window" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="INSIDE" edc:desc="Signal is inside window" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="BELOW" edc:desc="Signal is below window" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="STATUSB" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x42001C08">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
            <edc:SFRFieldDef edc:cname="READY0" edc:nzwidth="0x1" edc:desc="Comparator 0 Ready"/>
            <edc:SFRFieldDef edc:cname="READY1" edc:nzwidth="0x1" edc:desc="Comparator 1 Ready"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x42001C09">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Run"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="WINCTRL" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x42001C0A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
            <edc:SFRFieldDef edc:cname="WEN0" edc:nzwidth="0x1" edc:desc="Window 0 Mode Enable"/>
            <edc:SFRFieldDef edc:cname="WINTSEL0" edc:nzwidth="0x2" edc:desc="Window 0 Interrupt Selection">
              <edc:SFRFieldSemantic edc:cname="ABOVE" edc:desc="Interrupt on signal above window" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="INSIDE" edc:desc="Interrupt on signal inside window" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="BELOW" edc:desc="Interrupt on signal below window" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="OUTSIDE" edc:desc="Interrupt on signal outside window" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x42001C0B"/>
      <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="SCALER0" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:_addr="0x42001C0C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
            <edc:SFRFieldDef edc:cname="VALUE" edc:nzwidth="0x6" edc:desc="Scaler Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="SCALER1" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:_addr="0x42001C0D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
            <edc:SFRFieldDef edc:cname="VALUE" edc:nzwidth="0x6" edc:desc="Scaler Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x42001C0E"/>
      <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="COMPCTRL0" edc:nzwidth="0x20" edc:access="--nn-nnn--------nnnn-nnn-n-nnnn-" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3700F75E" edc:_addr="0x42001C10">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="SINGLE" edc:nzwidth="0x1" edc:desc="Single-Shot Mode"/>
            <edc:SFRFieldDef edc:cname="INTSEL" edc:nzwidth="0x2" edc:desc="Interrupt Selection">
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Interrupt on comparator output toggle" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Interrupt on comparator output rising" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Interrupt on comparator output falling" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="EOC" edc:desc="Interrupt on end of comparison (single-shot mode only)" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MUXNEG" edc:nzwidth="0x3" edc:desc="Negative Input Mux Selection">
              <edc:SFRFieldSemantic edc:cname="PIN0" edc:desc="I/O pin 0" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PIN1" edc:desc="I/O pin 1" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="PIN2" edc:desc="I/O pin 2" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="PIN3" edc:desc="I/O pin 3" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="GND" edc:desc="Ground" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="VSCALE" edc:desc="VDD scaler" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="BANDGAP" edc:desc="Internal bandgap voltage" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="DAC" edc:desc="DAC output" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MUXPOS" edc:nzwidth="0x3" edc:desc="Positive Input Mux Selection">
              <edc:SFRFieldSemantic edc:cname="PIN0" edc:desc="I/O pin 0" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PIN1" edc:desc="I/O pin 1" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="PIN2" edc:desc="I/O pin 2" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="PIN3" edc:desc="I/O pin 3" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="VSCALE" edc:desc="VDD Scaler" edc:when="(field &amp; 0x7) == 0x04"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SWAP" edc:nzwidth="0x1" edc:desc="Swap Inputs and Invert"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="FLEN" edc:nzwidth="0x3" edc:desc="Filter Length">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="No filtering" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="MAJ3" edc:desc="3-bit majority function (2 of 3)" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="MAJ5" edc:desc="5-bit majority function (3 of 5)" edc:when="(field &amp; 0x7) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="OUT" edc:nzwidth="0x2" edc:desc="Output">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="The output of COMPn is not routed to the COMPn I/O port" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="The asynchronous output of COMPn is routed to the COMPn I/O port" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="The synchronous output (including filtering) of COMPn is routed to the COMPn I/O port" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="COMPCTRL1" edc:nzwidth="0x20" edc:access="--nn-nnn--------nnnn-nnn-n-nnnn-" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3700F75E" edc:_addr="0x42001C14">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="SINGLE" edc:nzwidth="0x1" edc:desc="Single-Shot Mode"/>
            <edc:SFRFieldDef edc:cname="INTSEL" edc:nzwidth="0x2" edc:desc="Interrupt Selection">
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Interrupt on comparator output toggle" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Interrupt on comparator output rising" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Interrupt on comparator output falling" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="EOC" edc:desc="Interrupt on end of comparison (single-shot mode only)" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MUXNEG" edc:nzwidth="0x3" edc:desc="Negative Input Mux Selection">
              <edc:SFRFieldSemantic edc:cname="PIN0" edc:desc="I/O pin 0" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PIN1" edc:desc="I/O pin 1" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="PIN2" edc:desc="I/O pin 2" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="PIN3" edc:desc="I/O pin 3" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="GND" edc:desc="Ground" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="VSCALE" edc:desc="VDD scaler" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="BANDGAP" edc:desc="Internal bandgap voltage" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="DAC" edc:desc="DAC output" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MUXPOS" edc:nzwidth="0x3" edc:desc="Positive Input Mux Selection">
              <edc:SFRFieldSemantic edc:cname="PIN0" edc:desc="I/O pin 0" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PIN1" edc:desc="I/O pin 1" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="PIN2" edc:desc="I/O pin 2" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="PIN3" edc:desc="I/O pin 3" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="VSCALE" edc:desc="VDD Scaler" edc:when="(field &amp; 0x7) == 0x04"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SWAP" edc:nzwidth="0x1" edc:desc="Swap Inputs and Invert"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="FLEN" edc:nzwidth="0x3" edc:desc="Filter Length">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="No filtering" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="MAJ3" edc:desc="3-bit majority function (2 of 3)" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="MAJ5" edc:desc="5-bit majority function (3 of 5)" edc:when="(field &amp; 0x7) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="OUT" edc:nzwidth="0x2" edc:desc="Output">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="The output of COMPn is not routed to the COMPn I/O port" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="The asynchronous output of COMPn is routed to the COMPn I/O port" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="The synchronous output (including filtering) of COMPn is routed to the COMPn I/O port" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x42001C18"/>
      <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="---------------------------rrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x42001C20">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="WINCTRL" edc:nzwidth="0x1" edc:desc="WINCTRL Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="COMPCTRL0" edc:nzwidth="0x1" edc:desc="COMPCTRL 0 Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="COMPCTRL1" edc:nzwidth="0x1" edc:desc="COMPCTRL 1 Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x85C" edc:_addr="0x42001C24"/>
      <edc:SFRDef ltx:memberofperipheral="HMATRIX2TOP" edc:cname="PRS0PRAS" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42002480"/>
      <edc:SFRDef ltx:memberofperipheral="HMATRIX2TOP" edc:cname="PRS0PRBS" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42002484"/>
      <edc:SFRDef ltx:memberofperipheral="HMATRIX2TOP" edc:cname="PRS1PRAS" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42002488"/>
      <edc:SFRDef ltx:memberofperipheral="HMATRIX2TOP" edc:cname="PRS1PRBS" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4200248C"/>
      <edc:SFRDef ltx:memberofperipheral="HMATRIX2TOP" edc:cname="PRS2PRAS" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42002490"/>
      <edc:SFRDef ltx:memberofperipheral="HMATRIX2TOP" edc:cname="PRS2PRBS" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42002494"/>
      <edc:SFRDef ltx:memberofperipheral="HMATRIX2TOP" edc:cname="PRS3PRAS" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42002498"/>
      <edc:SFRDef ltx:memberofperipheral="HMATRIX2TOP" edc:cname="PRS3PRBS" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4200249C"/>
      <edc:SFRDef ltx:memberofperipheral="HMATRIX2TOP" edc:cname="PRS4PRAS" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420024A0"/>
      <edc:SFRDef ltx:memberofperipheral="HMATRIX2TOP" edc:cname="PRS4PRBS" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420024A4"/>
      <edc:SFRDef ltx:memberofperipheral="HMATRIX2TOP" edc:cname="PRS5PRAS" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420024A8"/>
      <edc:SFRDef ltx:memberofperipheral="HMATRIX2TOP" edc:cname="PRS5PRBS" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420024AC"/>
      <edc:SFRDef ltx:memberofperipheral="HMATRIX2TOP" edc:cname="PRS6PRAS" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420024B0"/>
      <edc:SFRDef ltx:memberofperipheral="HMATRIX2TOP" edc:cname="PRS6PRBS" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420024B4"/>
      <edc:SFRDef ltx:memberofperipheral="HMATRIX2TOP" edc:cname="PRS7PRAS" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420024B8"/>
      <edc:SFRDef ltx:memberofperipheral="HMATRIX2TOP" edc:cname="PRS7PRBS" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420024BC"/>
      <edc:SFRDef ltx:memberofperipheral="HMATRIX2TOP" edc:cname="PRS8PRAS" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420024C0"/>
      <edc:SFRDef ltx:memberofperipheral="HMATRIX2TOP" edc:cname="PRS8PRBS" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420024C4"/>
      <edc:SFRDef ltx:memberofperipheral="HMATRIX2TOP" edc:cname="PRS9PRAS" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420024C8"/>
      <edc:SFRDef ltx:memberofperipheral="HMATRIX2TOP" edc:cname="PRS9PRBS" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420024CC"/>
      <edc:SFRDef ltx:memberofperipheral="HMATRIX2TOP" edc:cname="PRS10PRAS" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420024D0"/>
      <edc:SFRDef ltx:memberofperipheral="HMATRIX2TOP" edc:cname="PRS10PRBS" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420024D4"/>
      <edc:SFRDef ltx:memberofperipheral="HMATRIX2TOP" edc:cname="PRS11PRAS" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420024D8"/>
      <edc:SFRDef ltx:memberofperipheral="HMATRIX2TOP" edc:cname="PRS11PRBS" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420024DC"/>
      <edc:SFRDef ltx:memberofperipheral="HMATRIX2TOP" edc:cname="PRS12PRAS" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420024E0"/>
      <edc:SFRDef ltx:memberofperipheral="HMATRIX2TOP" edc:cname="PRS12PRBS" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420024E4"/>
      <edc:SFRDef ltx:memberofperipheral="HMATRIX2TOP" edc:cname="PRS13PRAS" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420024E8"/>
      <edc:SFRDef ltx:memberofperipheral="HMATRIX2TOP" edc:cname="PRS13PRBS" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420024EC"/>
      <edc:SFRDef ltx:memberofperipheral="HMATRIX2TOP" edc:cname="PRS14PRAS" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420024F0"/>
      <edc:SFRDef ltx:memberofperipheral="HMATRIX2TOP" edc:cname="PRS14PRBS" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420024F4"/>
      <edc:SFRDef ltx:memberofperipheral="HMATRIX2TOP" edc:cname="PRS15PRAS" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420024F8"/>
      <edc:SFRDef ltx:memberofperipheral="HMATRIX2TOP" edc:cname="PRS15PRBS" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420024FC"/>
      <edc:AdjustPoint edc:offset="0xDB0E" edc:_addr="0x42002500"/>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x4201000E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Run During Debug"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x5" edc:_addr="0x4201000F"/>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="FREQCORR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x42010014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="VALUE" edc:nzwidth="0x7" edc:desc="Correction Value"/>
            <edc:SFRFieldDef edc:cname="SIGN" edc:nzwidth="0x1" edc:desc="Correction Sign"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2B" edc:_addr="0x42010015"/>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="GP0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42010040">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="GP" edc:nzwidth="0x20" edc:desc="General Purpose"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="GP1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42010044">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="GP" edc:nzwidth="0x20" edc:desc="General Purpose"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="GP2" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42010048">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="GP" edc:nzwidth="0x20" edc:desc="General Purpose"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="GP3" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4201004C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="GP" edc:nzwidth="0x20" edc:desc="General Purpose"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x10" edc:_addr="0x42010050"/>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="TAMPCTRL" edc:nzwidth="0x20" edc:access="----nnnn----nnnn--------nnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF0F00FF" edc:_addr="0x42010060">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="IN0ACT" edc:nzwidth="0x2" edc:desc="Tamper Input 0 Action">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off (Disabled)" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="WAKE" edc:desc="Wake without timestamp" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CAPTURE" edc:desc="Capture timestamp" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="ACTL" edc:desc="Compare IN0 to OUT" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="IN1ACT" edc:nzwidth="0x2" edc:desc="Tamper Input 1 Action">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off (Disabled)" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="WAKE" edc:desc="Wake without timestamp" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CAPTURE" edc:desc="Capture timestamp" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="ACTL" edc:desc="Compare IN1 to OUT" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="IN2ACT" edc:nzwidth="0x2" edc:desc="Tamper Input 2 Action">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off (Disabled)" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="WAKE" edc:desc="Wake without timestamp" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CAPTURE" edc:desc="Capture timestamp" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="ACTL" edc:desc="Compare IN2 to OUT" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="IN3ACT" edc:nzwidth="0x2" edc:desc="Tamper Input 3 Action">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off (Disabled)" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="WAKE" edc:desc="Wake without timestamp" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CAPTURE" edc:desc="Capture timestamp" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="ACTL" edc:desc="Compare IN3 to OUT" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="TAMLVL0" edc:nzwidth="0x1" edc:desc="Tamper Level Select 0"/>
            <edc:SFRFieldDef edc:cname="TAMLVL1" edc:nzwidth="0x1" edc:desc="Tamper Level Select 1"/>
            <edc:SFRFieldDef edc:cname="TAMLVL2" edc:nzwidth="0x1" edc:desc="Tamper Level Select 2"/>
            <edc:SFRFieldDef edc:cname="TAMLVL3" edc:nzwidth="0x1" edc:desc="Tamper Level Select 3"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="DEBNC0" edc:nzwidth="0x1" edc:desc="Debouncer Enable 0"/>
            <edc:SFRFieldDef edc:cname="DEBNC1" edc:nzwidth="0x1" edc:desc="Debouncer Enable 1"/>
            <edc:SFRFieldDef edc:cname="DEBNC2" edc:nzwidth="0x1" edc:desc="Debouncer Enable 2"/>
            <edc:SFRFieldDef edc:cname="DEBNC3" edc:nzwidth="0x1" edc:desc="Debouncer Enable 3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x42010064"/>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="TAMPID" edc:nzwidth="0x20" edc:access="n---------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x8000000F" edc:_addr="0x42010068">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="TAMPID0" edc:nzwidth="0x1" edc:desc="Tamper Input 0 Detected"/>
            <edc:SFRFieldDef edc:cname="TAMPID1" edc:nzwidth="0x1" edc:desc="Tamper Input 1 Detected"/>
            <edc:SFRFieldDef edc:cname="TAMPID2" edc:nzwidth="0x1" edc:desc="Tamper Input 2 Detected"/>
            <edc:SFRFieldDef edc:cname="TAMPID3" edc:nzwidth="0x1" edc:desc="Tamper Input 3 Detected"/>
            <edc:AdjustPoint edc:offset="0x1B"/>
            <edc:SFRFieldDef edc:cname="TAMPEVT" edc:nzwidth="0x1" edc:desc="Tamper Event Detected"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x14" edc:_addr="0x4201006C"/>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="BKUP0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42010080">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="BKUP" edc:nzwidth="0x20" edc:desc="Backup"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xF7C" edc:_addr="0x42010084"/>
      <edc:SFRDef ltx:memberofperipheral="DSCON" edc:cname="DSCON" edc:nzwidth="0x20" edc:access="----------------n-nn---n------nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xB103" edc:_addr="0x42011000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSCON">
            <edc:SFRFieldDef edc:cname="DSSR" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ZPBOR" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="RTCCWDIS" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RTCPWREQ" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="XSEMAEN" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DSEN" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSCON" edc:cname="DSWAKE" edc:nzwidth="0x20" edc:access="-----------------------nn-nnnnn-" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1BE" edc:_addr="0x42011004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSCON">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ICD" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MCLR" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RTCC" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DSWDT" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EXT" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FAULT" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="INT0" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSCON" edc:cname="DSSEMA1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42011008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSCON">
            <edc:SFRFieldDef edc:cname="DSSEMA" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4201100C"/>
      <edc:SFRDef ltx:memberofperipheral="DSCON" edc:cname="DSXSEMA1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42011010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSCON">
            <edc:SFRFieldDef edc:cname="DSXSEMA" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:SFRDataSector>
    <edc:SFRDataSector edc:regionid="SILEX_SFR" edc:beginaddr="0x43000000" edc:endaddr="0x4301405C" edc:rw="rw">
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="CRYPTOCON" edc:nzwidth="0x20" edc:access="-------------------------n----nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x43" edc:_addr="0x43000000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable clock to SILEX"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Enable clock in idle mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xFFFC" edc:_addr="0x43000004"/>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0DMA_FETCH_ADDR_LSB" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x43010000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="FETCH_ADDR_LSB" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0DMA_FETCH_ADDR_MSB" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x43010004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="FETCH_ADDR_MSB" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0DMA_FETCH_LEN" edc:nzwidth="0x20" edc:access="-nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FFFFFFF" edc:_addr="0x43010008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="FETCH_LEN" edc:nzwidth="0x1C"/>
            <edc:SFRFieldDef edc:cname="FETCH_CSTADDR" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FETCH_REALIGN" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FETCH_ZPADDING" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0DMA_FETCH_TAG" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4301000C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="FETCH_TAG" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0DMA_PUSH_ADDR_LSB" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x43010010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="PUSH_ADDR_LSB" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0DMA_PUSH_ADDR_MSB" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x43010014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="PUSH_ADDR_MSB" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0DMA_PUSH_LEN" edc:nzwidth="0x20" edc:access="-nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FFFFFFF" edc:_addr="0x43010018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="PUSH_LEN" edc:nzwidth="0x1C"/>
            <edc:SFRFieldDef edc:cname="PUSH_CSTADDR" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PUSH_REALIGN" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PUSH_DISCARD" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0DMA_INT_EN" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4301001C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="INT_EN" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0DMA_INT_ENSET" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x43010020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="INT_ENSET" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0DMA_INT_ENCLR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x43010024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="INT_ENCLR" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0DMA_INT_STATRAW" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x43010028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="INT_STATRAW" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0DMA_INT_STAT" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4301002C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="INT_STAT" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0DMA_INT_STATCLR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x43010030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="INT_STATCLR" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0DMA_CONFIG" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x43010034">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="FETCH_CTRL_INDIRECT" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PUSH_CTRL_INDIRECT" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FETCH_STOP" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PUSH_STOP" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SOFT_RST" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0DMA_START" edc:nzwidth="0x20" edc:access="------------------------------ww" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3" edc:_addr="0x43010038">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="START_FETCH" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="START_PUSH" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0DMA_STATUS" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrr---------rrr--rr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF0073" edc:_addr="0x4301003C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="FETCH_BUSY" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PUSH_BUSY" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FETCH_NOT_EMPTY" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PUSH_WAITINGFIFO" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SOFT_RST_BUSY" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="PUSH_NBDATA" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3C0" edc:_addr="0x43010040"/>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0HWCONF_INCL_IPS_HW_CFG" edc:nzwidth="0x20" edc:access="------------------rrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3FFF" edc:_addr="0x43010400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="BA411_AES_INCLUDED" edc:nzwidth="0x1" edc:desc="Generic g_IncludeAES value. BA411E-AES IP included if set"/>
            <edc:SFRFieldDef edc:cname="BA415_HP_AES_GCM_INCLUDED" edc:nzwidth="0x1" edc:desc="Generic g_IncludeAESGCM value. BA415-HP-AES-GCM IP included if set"/>
            <edc:SFRFieldDef edc:cname="BA416_HP_AES_XTS_INCLUDED" edc:nzwidth="0x1" edc:desc="Generic g_IncludeAESXTS value. BA416-HP-AES-XTS IP included if set"/>
            <edc:SFRFieldDef edc:cname="BA412_DES_INCLUDED" edc:nzwidth="0x1" edc:desc="Generic g_IncludeDES value. BA412-3DES IP included if set"/>
            <edc:SFRFieldDef edc:cname="BA413_HASH_INCLUDED" edc:nzwidth="0x1" edc:desc="Generic g_IncludeHASH value. BA413-HASH IP included if set"/>
            <edc:SFRFieldDef edc:cname="BA417_CHACHAPOLY_INCLUDED" edc:nzwidth="0x1" edc:desc="Generic g_IncludeChachaPoly value. BA417-ChaChaPoly IP included if set"/>
            <edc:SFRFieldDef edc:cname="BA418_SHA3_INCLUDED" edc:nzwidth="0x1" edc:desc="Generic g_IncludeSHA3  value. BA418-SHA3 IP included if set"/>
            <edc:SFRFieldDef edc:cname="BA421_ZUC_INCLUDED" edc:nzwidth="0x1" edc:desc="Generic g_IncludeZUC  value. BA421-ZUC IP included if set"/>
            <edc:SFRFieldDef edc:cname="BA419_SM4_INCLUDED" edc:nzwidth="0x1" edc:desc="Generic g_IncludeSM4  value. BA419-SM4 IP included if set"/>
            <edc:SFRFieldDef edc:cname="BA414EP_PKE_INCLUDED" edc:nzwidth="0x1" edc:desc="Generic g_IncludePKE  value. BA414EP-PKE IP included if set"/>
            <edc:SFRFieldDef edc:cname="BA431_NDRNG_INCLUDED" edc:nzwidth="0x1" edc:desc="Generic g_IncludeNDRNG  value. BA431-NDRNG IP included if set"/>
            <edc:SFRFieldDef edc:cname="BA420_HP_CHACHAPOLY_INCLUDED" edc:nzwidth="0x1" edc:desc="Generic g_IncludeHPChachaPoly  value. BA420-HP-ChaChaPoly IP included if set"/>
            <edc:SFRFieldDef edc:cname="BA423_SNOW3G_INCLUDED" edc:nzwidth="0x1" edc:desc="Generic g_IncludeSnow3G  value. BA423-Snow3G IP included if set"/>
            <edc:SFRFieldDef edc:cname="BA422_KASUMI_INCLUDED" edc:nzwidth="0x1" edc:desc="Generic g_IncludeKasumi  value. BA422-Kasumi IP included if set"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0HWCONF_BA411E_AES_HW_CFG_1" edc:nzwidth="0x20" edc:access="-----rrr------rr-------rrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x70301FF" edc:_addr="0x43010404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="BA411E_AES_HW_CFG_MODE" edc:nzwidth="0x9" edc:desc="Generic g_AesModesPoss value. BA411E-AES engine configuration."/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="BA411E_AES_HW_CFG_CS" edc:nzwidth="0x1" edc:desc="Generic g_CS value. BA411E-AES engine configuration."/>
            <edc:SFRFieldDef edc:cname="BA411E_AES_HW_CFG_MASKING" edc:nzwidth="0x1" edc:desc="Generic g_UseMasking value. BA411E-AES engine configuration."/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="BA411E_AES_HW_CFG_KEYSIZE" edc:nzwidth="0x3" edc:desc="Generic g_Keysize value. BA411E-AES engine configuration."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0HWCONF_BA411E_AES_HW_CFG_2" edc:nzwidth="0x20" edc:access="----------------rrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF" edc:_addr="0x43010408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="BA411E_AES_HW_CFG_2" edc:nzwidth="0x10" edc:desc="Generic g_CtrSize value. BA411E-AES engine configuration."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0HWCONF_BA413_HASH_HW_CFG" edc:nzwidth="0x20" edc:access="-------------rrr---------rrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7007F" edc:_addr="0x4301040C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="BA413_HASH_HW_CFG_MASK" edc:nzwidth="0x7" edc:desc="Generic g_HashMaskFunc value. BA413-Hash engine configuration."/>
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="BA413_HASH_HW_CFG_PASSING" edc:nzwidth="0x1" edc:desc="Generic g_HashPadding value. BA413-Hash engine configuration."/>
            <edc:SFRFieldDef edc:cname="BA413_HASH_HW_CFG_HMAC" edc:nzwidth="0x1" edc:desc="Generic g_HMAC_enabled value. BA413-Hash engine configuration."/>
            <edc:SFRFieldDef edc:cname="BA413_HASH_HW_CFG_VERIFYDIGEST" edc:nzwidth="0x1" edc:desc="Generic g_HashVerifyDigest value. BA413-Hash engine configuration."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0HWCONF_BA418_SHA3_HW_CFG" edc:nzwidth="0x20" edc:access="-------------------------------r" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1" edc:_addr="0x43010410">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="BA418_SHA3_HW_CFG" edc:nzwidth="0x1" edc:desc="Generic g_Sha3CtxtEn value. BA418-SHA3 configuration."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0HWCONF_BA419_SM4_HW_CFG" edc:nzwidth="0x20" edc:access="-------------------------rrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7F" edc:_addr="0x43010414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="BA419_SM4_HW_CFG" edc:nzwidth="0x7" edc:desc="Generic g_SM4ModesPoss value. BA419-SM4 engine configuration."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0HWCONF_BA424_ARIA_HW_CFG" edc:nzwidth="0x20" edc:access="-----------------------rrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1FF" edc:_addr="0x43010418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="BA424_ARIA_HW_CFG" edc:nzwidth="0x9" edc:desc="Generic g_aria_modePoss value. BA424-Aria engine configuration."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xBE4" edc:_addr="0x4301041C"/>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0RNG_CONTROL_CONTROL" edc:nzwidth="0x20" edc:access="-----------nnnnnnnnnnnnnn-nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1FFFBF" edc:_addr="0x43011000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable the NDRNG."/>
            <edc:SFRFieldDef edc:cname="LFSREN" edc:nzwidth="0x1" edc:desc="Select between the NDRNG with asynchronous free running oscillators (when '0') and the Pseudo-Random generator with synchronous oscillators for simulation purpose (when '1')."/>
            <edc:SFRFieldDef edc:cname="TESTEN" edc:nzwidth="0x1" edc:desc="Select input for conditioning function and continuous tests: 0: Noise source (normal mode), 1: Test data register (test mode)."/>
            <edc:SFRFieldDef edc:cname="CONDBYPASS" edc:nzwidth="0x1" edc:desc="0: the conditioning function is used (normal mode), 1: the conditioning function is bypassed (to observe entropy source directly)."/>
            <edc:SFRFieldDef edc:cname="INTENREP" edc:nzwidth="0x1" edc:desc="Interrupt enable for Repetition Count Test failure."/>
            <edc:SFRFieldDef edc:cname="INTENPROP" edc:nzwidth="0x1" edc:desc="Interrupt enable for Adaptive Proportion Test failure (1024-sample window)."/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="INTENFULL" edc:nzwidth="0x1" edc:desc="Interrupt enable for FIFO full."/>
            <edc:SFRFieldDef edc:cname="SOFTRST" edc:nzwidth="0x1" edc:desc="Software reset: 0: Normal mode, 1: The continuous test, the conditioning function and the FIFO are reset. This bit is not cleared automatically."/>
            <edc:SFRFieldDef edc:cname="INTENPRE" edc:nzwidth="0x1" edc:desc="Interrupt enable for AIS31 preliminary noise alarm."/>
            <edc:SFRFieldDef edc:cname="INTENALM" edc:nzwidth="0x1" edc:desc="Interrupt enable for AIS31 noise alarm."/>
            <edc:SFRFieldDef edc:cname="FORCEACTIVEROS" edc:nzwidth="0x1" edc:desc="Force oscillators to run when FIFO is full."/>
            <edc:SFRFieldDef edc:cname="HEALTHTESTBYPASS" edc:nzwidth="0x1" edc:desc="Bypass NIST tests such that the results of the start-up and online test do not affect the FSM state."/>
            <edc:SFRFieldDef edc:cname="AIS31BYPASS" edc:nzwidth="0x1" edc:desc="Bypass AIS31 tests such that the results of the start-up and online tests do not affect the FSM state."/>
            <edc:SFRFieldDef edc:cname="HEALTHTESTSEL" edc:nzwidth="0x1" edc:desc="Select input to health test module: 0: Before conditioning, 1: After conditioning."/>
            <edc:SFRFieldDef edc:cname="AIS31TESTSEL" edc:nzwidth="0x1" edc:desc="Select input to the AIS31 test module: 0: Before conditioning, 1: After conditioning."/>
            <edc:SFRFieldDef edc:cname="NB128BITBLOCKS" edc:nzwidth="0x4" edc:desc="Number of 128 bit blocks used in AES-CBCMAC post-processing. This value cannot be zero."/>
            <edc:SFRFieldDef edc:cname="FIFOWRITESTARTUP" edc:nzwidth="0x1" edc:desc="Enable write of the samples in the FIFO during start-up."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0RNG_CONTROL_FIFOLEVEL" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x43011004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="FIFOLEVEL" edc:nzwidth="0x20" edc:desc="Number of 32 bits words of random available in the FIFO. Any write to this register clears the FullInt flag in the Status register."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0RNG_CONTROL_FIFOTHRESHOLD" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x43011008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="FIFOTHRESHOLD" edc:nzwidth="0x20" edc:desc="FIFO level below which the module leaves the idle state to refill the FIFO, expressed in number of 128bit blocks."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0RNG_CONTROL_FIFODEPTH" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4301100C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="FIFODEPTH" edc:nzwidth="0x20" edc:desc="Maximum number of 32 bits words that can be stored in the FIFO: 2**g_fifodepth."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0RNG_CONTROL_KEY0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x43011010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="KEY0" edc:nzwidth="0x20" edc:desc="Key register (MSB)."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0RNG_CONTROL_KEY1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x43011014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="KEY1" edc:nzwidth="0x20" edc:desc="Key register."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0RNG_CONTROL_KEY2" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x43011018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="KEY2" edc:nzwidth="0x20" edc:desc="Key register."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0RNG_CONTROL_KEY3" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4301101C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="KEY3" edc:nzwidth="0x20" edc:desc="Key register (LSB)."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0RNG_CONTROL_TESTDATA" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x43011020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="TESTDATA" edc:nzwidth="0x20" edc:desc="Test data register."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0RNG_CONTROL_REPEATTHRESHOLD" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x43011024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="REPEATTHRESHOLD" edc:nzwidth="0x20" edc:desc="Repetition Test Count Cut-Off value."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0RNG_CONTROL_PROPTHRESHOLD" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x43011028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="PROPTHRESHOLD" edc:nzwidth="0x20" edc:desc="Adaptive Proportion Test (1024-sample window) Cut-Off value."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4301102C"/>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0RNG_CONTROL_STATUS" edc:nzwidth="0x20" edc:access="--------------------nnnnn-nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFBF" edc:_addr="0x43011030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="TESTDATABUSY" edc:nzwidth="0x1" edc:desc="High when data written to TestData register is being processed. (see section 4.7)"/>
            <edc:SFRFieldDef edc:cname="STATE" edc:nzwidth="0x3" edc:desc="State of the control FSM: 000: Reset, 001: Startup, 010: Idle (Rings On), 011: Idle (Rings Off), 100: Fill FIFO, 101: Error, 110: Unused, 111: Unused."/>
            <edc:SFRFieldDef edc:cname="REPFAIL" edc:nzwidth="0x1" edc:desc="NIST-800-90B repetition Count Test interrupt status."/>
            <edc:SFRFieldDef edc:cname="PROPFAIL" edc:nzwidth="0x1" edc:desc="NIST-800-90B adaptive Proportion Test (1024-sample window) interrupt status."/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FULLINT" edc:nzwidth="0x1" edc:desc="FIFO full status."/>
            <edc:SFRFieldDef edc:cname="PREINT" edc:nzwidth="0x1" edc:desc="AIS31 preliminary noise alarm interrupt status."/>
            <edc:SFRFieldDef edc:cname="ALMINT" edc:nzwidth="0x1" edc:desc="AIS31 noise alarm interrupt status."/>
            <edc:SFRFieldDef edc:cname="STARTUPFAIL" edc:nzwidth="0x1" edc:desc="Start-up test failure."/>
            <edc:SFRFieldDef edc:cname="FIFOACCFAIL" edc:nzwidth="0x1" edc:desc="Set when a FIFO data read is performed while the NDRNG is disabled AND has its FIFO empty (FIFOLevel = 0)."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0RNG_CONTROL_INITWAITVAL" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:por="00000000000000001111111111111111" edc:mclr="00000000000000001111111111111111" edc:impl="0xFFFF" edc:_addr="0x43011034">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="INITWAITVAL" edc:nzwidth="0x10" edc:desc="Number of clock cycles to wait before sampling data from the noise source."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0RNG_CONTROL_DISABLEOSC0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x43011038">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="DISABLEOSC0" edc:nzwidth="0x20" edc:desc="Disable oscillator rings #0 to #31."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0RNG_CONTROL_DISABLEOSC1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4301103C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="DISABLEOSC1" edc:nzwidth="0x20" edc:desc="Disable oscillator rings #32 to #63."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0RNG_CONTROL_SWOFFTMRVAL" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF" edc:_addr="0x43011040">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="SWOFFTMRVAL" edc:nzwidth="0x10" edc:desc="Number of clk cycles to wait before stopping the rings after the FIFO is full."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0RNG_CONTROL_CLKDIV" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF" edc:_addr="0x43011044">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="CLKDIV" edc:nzwidth="0x8" edc:desc="Sample clock divider. The frequency at which the outputs of the rings are sampled is given by: Fs=Fpclk/(ClkDiv+1)."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0RNG_CONTROL_AIS31CONF0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x43011048">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="STARTUPTHRESHOLD" edc:nzwidth="0x10" edc:desc="Start-up test threshold."/>
            <edc:SFRFieldDef edc:cname="ONLINETHRESHOLD" edc:nzwidth="0x10" edc:desc="Online threshold."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0RNG_CONTROL_AIS31CONF1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4301104C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="ONLINEREPTHRESHOLD" edc:nzwidth="0x10" edc:desc="Online repeat threshold."/>
            <edc:SFRFieldDef edc:cname="HEXPECTEDVALUE" edc:nzwidth="0x10" edc:desc="Expected history value."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0RNG_CONTROL_AIS31CONF2" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x43011050">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="HMIN" edc:nzwidth="0x10" edc:desc="Minimum allowed history value."/>
            <edc:SFRFieldDef edc:cname="HMAX" edc:nzwidth="0x10" edc:desc="Maximum allowed history value."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0RNG_CONTROL_AIS31STATUS" edc:nzwidth="0x20" edc:access="--------------nnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3FFFF" edc:_addr="0x43011054">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="NUMPRELIMALARMS" edc:nzwidth="0x10" edc:desc="Number of preliminary noise alarms since counter was last cleared."/>
            <edc:SFRFieldDef edc:cname="PRELIMNOISEALARMRNG" edc:nzwidth="0x1" edc:desc="Last preliminary noise alarm occurred due to history value out of range."/>
            <edc:SFRFieldDef edc:cname="PRELIMNOISEALARMREP" edc:nzwidth="0x1" edc:desc="Last preliminary noise alarm occurred due to consecutive high X**2."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0RNG_CONTROL_HWCONFIG" edc:nzwidth="0x20" edc:access="----------------------rrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3FF" edc:_addr="0x43011058">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="NUMBOFRINGS" edc:nzwidth="0x8" edc:desc="Generic g_NumRings value."/>
            <edc:SFRFieldDef edc:cname="AIS31" edc:nzwidth="0x1" edc:desc="Generic g_AIS31 value."/>
            <edc:SFRFieldDef edc:cname="AIS31Full" edc:nzwidth="0x1" edc:desc="Generic g_AIS31Full value."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xFA4" edc:_addr="0x4301105C"/>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0PK_POINTERS" edc:nzwidth="0x20" edc:access="----nnnn----nnnn----nnnn----nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF0F0F0F" edc:_addr="0x43012000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="OPPTRA" edc:nzwidth="0x4" edc:desc="When executing primitive arithmetic operations, this pointer defines where operand A is located in memory (location 0x0 to 0xF)."/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="OPPTRB" edc:nzwidth="0x4" edc:desc="When executing primitive arithmetic operations, this pointer defines where operand B is located in memory (location 0x0 to 0xF)."/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="OPPTRC" edc:nzwidth="0x4" edc:desc="When executing primitive arithmetic operations, this pointer defines the location (0x0 to 0xF) where the result will be stored in memory."/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="OPPTRN" edc:nzwidth="0x4" edc:desc="When executing primitive arithmetic operations, this pointer defines the location where the modulus is located in memory (location 0x0 to 0xF)."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0PK_COMMAND" edc:nzwidth="0x20" edc:access="nnnn-nnn-nnnn-nnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000001111" edc:mclr="00000000000000000000000000001111" edc:impl="0xF77BFFFF" edc:_addr="0x43012004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="OPEADDR" edc:nzwidth="0x7" edc:desc="This field defines the operation to be performed. See documentation for more details."/>
            <edc:SFRFieldDef edc:cname="FIELDF" edc:nzwidth="0x1" edc:desc="'0': Field is GF(p) '1': Field is GF(2**m)"/>
            <edc:SFRFieldDef edc:cname="OPBYTESM1" edc:nzwidth="0xA" edc:desc="This field defines the size (= number of bytes minus one) of the operands for the current operation. Possible values are limited by the maximum supported operand size. Examples: - 0x014 -&gt; ECC on curve K-163 - 0x01F -&gt; ECC on curve P-256 - 0x02F -&gt; ECC on curve P-384 - 0x033 -&gt; ECC on curve K-409 - 0x041 -&gt; ECC on curve P-521 - 0x07F -&gt; 1024-bit RSA - 0x09F -&gt; 1280-bit RSA - 0x1FF -&gt; 4096-bit RSA - 0x3FF -&gt; 8192-bit RSA"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RANDMOD" edc:nzwidth="0x1" edc:desc="Enable randomization of modulus (counter-measure)."/>
            <edc:SFRFieldDef edc:cname="SELCURVE" edc:nzwidth="0x3" edc:desc="Enable accelerator for specific curve modulus: 0x0: No acceleration (default) 0x1: P256 0x2: P384 0x3: P521 0x4: P192 0x5: Curve25519 0x6: Ed25519 This field has no effect when the optional acceleration hardware is not included."/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RANDKE" edc:nzwidth="0x1" edc:desc="Enable randomization of exponent/scalar (counter-measure)."/>
            <edc:SFRFieldDef edc:cname="RANDPROJ" edc:nzwidth="0x1" edc:desc="Enable randomization of projective coordinates (counter-measure)."/>
            <edc:SFRFieldDef edc:cname="EDWARDS" edc:nzwidth="0x1" edc:desc="Enable Edwards curve (see operation description)."/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SWAPBYTES" edc:nzwidth="0x1" edc:desc="Swap the bytes on AHB interface: '0': Native format (little endian) '1': Byte swapped (big endian) See also section 4.2.1. This bit must be programmed before writing/reading any data in data memory."/>
            <edc:SFRFieldDef edc:cname="FLAGA" edc:nzwidth="0x1" edc:desc="See operation description."/>
            <edc:SFRFieldDef edc:cname="FLAGB" edc:nzwidth="0x1" edc:desc="See operation description."/>
            <edc:SFRFieldDef edc:cname="CALCR2" edc:nzwidth="0x1" edc:desc="This bit indicates if the IP has to calculate R**2 mod N for the next operation. This bit must be set to '1' when a new prime number has been programmed. This bit is used for primitive operations and ignored for the other operations. '0': don't recalculate R**2 mod N '1': re-calculate R**2 mod N"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0PK_CONTROL" edc:nzwidth="0x20" edc:access="------------------------------ww" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3" edc:_addr="0x43012008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="START" edc:nzwidth="0x1" edc:desc="Writing a '1' starts the processing."/>
            <edc:SFRFieldDef edc:cname="CLEARIRQ" edc:nzwidth="0x1" edc:desc="Writing a '1' clears the IRQ output."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0PK_STATUS" edc:nzwidth="0x20" edc:access="---rrrrr------rrrrrrrrrrrrrr----" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F03FFF0" edc:_addr="0x4301200C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ERRORFLAGS" edc:nzwidth="0xC" edc:desc="These bits indicate an error condition. They are updated at the end of the operation. They are cleared when starting a new operation. See documentation for more details."/>
            <edc:SFRFieldDef edc:cname="PK_BUSY" edc:nzwidth="0x1" edc:desc="This bit reflects the BUSY output value. It is set when the operation starts and it is cleared when the operation is finished."/>
            <edc:SFRFieldDef edc:cname="INTRPTSTATUS" edc:nzwidth="0x1" edc:desc="This bit reflects the IRQ output value. It is set when the operation is finished. It is cleared when the CPU writes the bit 1 of Control Register."/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="FAILPTR" edc:nzwidth="0x5" edc:desc="These bits indicate which data location generated the error flag. They are not available for all error flags."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x43012010"/>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0PK_TIMER" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x43012014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="TIMER" edc:nzwidth="0x20" edc:desc="Number of core clock cycles."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0PK_HWCONFIG" edc:nzwidth="0x20" edc:access="rrr---rrrrrr--rrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xE3F3FFFF" edc:_addr="0x43012018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="MAXOPSIZE" edc:nzwidth="0xC" edc:desc="Maximum operand size (number of bytes)."/>
            <edc:SFRFieldDef edc:cname="NBMULT" edc:nzwidth="0x4" edc:desc="Number of multipliers: 0x0: 1 multiplier 0x1: 4 multipliers 0x2: 16 multipliers 0x4: 64 multipliers 0x8: 256 multipliers"/>
            <edc:SFRFieldDef edc:cname="PRIMEFIELD" edc:nzwidth="0x1" edc:desc="Support prime field."/>
            <edc:SFRFieldDef edc:cname="BINARYFIELD" edc:nzwidth="0x1" edc:desc="Support binary field."/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="P256" edc:nzwidth="0x1" edc:desc="Support ECC P256 acceleration."/>
            <edc:SFRFieldDef edc:cname="P384" edc:nzwidth="0x1" edc:desc="Support ECC P384 acceleration."/>
            <edc:SFRFieldDef edc:cname="P521" edc:nzwidth="0x1" edc:desc="Support ECC P521 acceleration."/>
            <edc:SFRFieldDef edc:cname="P192" edc:nzwidth="0x1" edc:desc="Support ECC P192 acceleration."/>
            <edc:SFRFieldDef edc:cname="X25519" edc:nzwidth="0x1" edc:desc="Support Curve25519/Ed25519 acceleration."/>
            <edc:SFRFieldDef edc:cname="AHBMASTER" edc:nzwidth="0x1" edc:desc="'0': Memory access through AHB Slave and internally in the PKE.                                                                             '1': Memory access through AHB Master, outside the PKE."/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DISABLESMX" edc:nzwidth="0x1" edc:desc="State of DisableSMx input (high when SM2/SM9 operations are disabled)."/>
            <edc:SFRFieldDef edc:cname="DISABLECLRMEM" edc:nzwidth="0x1" edc:desc="State of DisableClrMem input (high when automatic clear of the RAM after reset is disabled)."/>
            <edc:SFRFieldDef edc:cname="DISABLECM" edc:nzwidth="0x1" edc:desc="State of DisableCM input (high when counter-measures are disabled)."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0PK_OPSIZE" edc:nzwidth="0x20" edc:access="-------------------nnnnnnnnnnnnn" edc:por="00000000000000000001000000000000" edc:mclr="00000000000000000001000000000000" edc:impl="0x1FFF" edc:_addr="0x4301201C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="OPSIZE" edc:nzwidth="0xD" edc:desc="Operand size (number of bytes): 0x0100: 256 0x0209: 521 0x0800: 2048 0x0C00: 3072 0x1000: 4096 This register is used when the memory is accessed via AHB Master"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0PK_MEMOFFSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x43012020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="MEMOFFSET" edc:nzwidth="0x20" edc:desc="Memory offset for AHB Master"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0PK_MICROCODEOFFSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x43012024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="MICROCODEOFFSET" edc:nzwidth="0x20" edc:desc="MicroCode offset for AHB Master"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1FD8" edc:_addr="0x43012028"/>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0RNG_DATA_CONTROL" edc:nzwidth="0x20" edc:access="-----------nnnnnnnnnnnnnn-nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1FFFBF" edc:_addr="0x43014000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable the NDRNG."/>
            <edc:SFRFieldDef edc:cname="LFSREN" edc:nzwidth="0x1" edc:desc="Select between the NDRNG with asynchronous free running oscillators (when '0') and the Pseudo-Random generator with synchronous oscillators for simulation purpose (when '1')."/>
            <edc:SFRFieldDef edc:cname="TESTEN" edc:nzwidth="0x1" edc:desc="Select input for conditioning function and continuous tests: 0: Noise source (normal mode), 1: Test data register (test mode)."/>
            <edc:SFRFieldDef edc:cname="CONDBYPASS" edc:nzwidth="0x1" edc:desc="0: the conditioning function is used (normal mode), 1: the conditioning function is bypassed (to observe entropy source directly)."/>
            <edc:SFRFieldDef edc:cname="INTENREP" edc:nzwidth="0x1" edc:desc="Interrupt enable for Repetition Count Test failure."/>
            <edc:SFRFieldDef edc:cname="INTENPROP" edc:nzwidth="0x1" edc:desc="Interrupt enable for Adaptive Proportion Test failure (1024-sample window)."/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="INTENFULL" edc:nzwidth="0x1" edc:desc="Interrupt enable for FIFO full."/>
            <edc:SFRFieldDef edc:cname="SOFTRST" edc:nzwidth="0x1" edc:desc="Software reset: 0: Normal mode, 1: The continuous test, the conditioning function and the FIFO are reset. This bit is not cleared automatically."/>
            <edc:SFRFieldDef edc:cname="INTENPRE" edc:nzwidth="0x1" edc:desc="Interrupt enable for AIS31 preliminary noise alarm."/>
            <edc:SFRFieldDef edc:cname="INTENALM" edc:nzwidth="0x1" edc:desc="Interrupt enable for AIS31 noise alarm."/>
            <edc:SFRFieldDef edc:cname="FORCEACTIVEROS" edc:nzwidth="0x1" edc:desc="Force oscillators to run when FIFO is full."/>
            <edc:SFRFieldDef edc:cname="HEALTHTESTBYPASS" edc:nzwidth="0x1" edc:desc="Bypass NIST tests such that the results of the start-up and online test do not affect the FSM state."/>
            <edc:SFRFieldDef edc:cname="AIS31BYPASS" edc:nzwidth="0x1" edc:desc="Bypass AIS31 tests such that the results of the start-up and online tests do not affect the FSM state."/>
            <edc:SFRFieldDef edc:cname="HEALTHTESTSEL" edc:nzwidth="0x1" edc:desc="Select input to health test module: 0: Before conditioning, 1: After conditioning."/>
            <edc:SFRFieldDef edc:cname="AIS31TESTSEL" edc:nzwidth="0x1" edc:desc="Select input to the AIS31 test module: 0: Before conditioning, 1: After conditioning."/>
            <edc:SFRFieldDef edc:cname="NB128BITBLOCKS" edc:nzwidth="0x4" edc:desc="Number of 128 bit blocks used in AES-CBCMAC post-processing. This value cannot be zero."/>
            <edc:SFRFieldDef edc:cname="FIFOWRITESTARTUP" edc:nzwidth="0x1" edc:desc="Enable write of the samples in the FIFO during start-up."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0RNG_DATA_FIFOLEVEL" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x43014004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="FIFOLEVEL" edc:nzwidth="0x20" edc:desc="Number of 32 bits words of random available in the FIFO. Any write to this register clears the FullInt flag in the Status register."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0RNG_DATA_FIFOTHRESHOLD" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x43014008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="FIFOTHRESHOLD" edc:nzwidth="0x20" edc:desc="FIFO level below which the module leaves the idle state to refill the FIFO, expressed in number of 128bit blocks."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0RNG_DATA_FIFODEPTH" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4301400C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="FIFODEPTH" edc:nzwidth="0x20" edc:desc="Maximum number of 32 bits words that can be stored in the FIFO: 2**g_fifodepth."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0RNG_DATA_KEY0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x43014010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="KEY0" edc:nzwidth="0x20" edc:desc="Key register (MSB)."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0RNG_DATA_KEY1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x43014014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="KEY1" edc:nzwidth="0x20" edc:desc="Key register."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0RNG_DATA_KEY2" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x43014018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="KEY2" edc:nzwidth="0x20" edc:desc="Key register."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0RNG_DATA_KEY3" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4301401C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="KEY3" edc:nzwidth="0x20" edc:desc="Key register (LSB)."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0RNG_DATA_TESTDATA" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x43014020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="TESTDATA" edc:nzwidth="0x20" edc:desc="Test data register."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0RNG_DATA_REPEATTHRESHOLD" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x43014024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="REPEATTHRESHOLD" edc:nzwidth="0x20" edc:desc="Repetition Test Count Cut-Off value."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0RNG_DATA_PROPTHRESHOLD" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x43014028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="PROPTHRESHOLD" edc:nzwidth="0x20" edc:desc="Adaptive Proportion Test (1024-sample window) Cut-Off value."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4301402C"/>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0RNG_DATA_STATUS" edc:nzwidth="0x20" edc:access="--------------------nnnnn-nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFBF" edc:_addr="0x43014030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="TESTDATABUSY" edc:nzwidth="0x1" edc:desc="High when data written to TestData register is being processed. (see section 4.7)"/>
            <edc:SFRFieldDef edc:cname="STATE" edc:nzwidth="0x3" edc:desc="State of the control FSM: 000: Reset, 001: Startup, 010: Idle (Rings On), 011: Idle (Rings Off), 100: Fill FIFO, 101: Error, 110: Unused, 111: Unused."/>
            <edc:SFRFieldDef edc:cname="REPFAIL" edc:nzwidth="0x1" edc:desc="NIST-800-90B repetition Count Test interrupt status."/>
            <edc:SFRFieldDef edc:cname="PROPFAIL" edc:nzwidth="0x1" edc:desc="NIST-800-90B adaptive Proportion Test (1024-sample window) interrupt status."/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FULLINT" edc:nzwidth="0x1" edc:desc="FIFO full status."/>
            <edc:SFRFieldDef edc:cname="PREINT" edc:nzwidth="0x1" edc:desc="AIS31 preliminary noise alarm interrupt status."/>
            <edc:SFRFieldDef edc:cname="ALMINT" edc:nzwidth="0x1" edc:desc="AIS31 noise alarm interrupt status."/>
            <edc:SFRFieldDef edc:cname="STARTUPFAIL" edc:nzwidth="0x1" edc:desc="Start-up test failure."/>
            <edc:SFRFieldDef edc:cname="FIFOACCFAIL" edc:nzwidth="0x1" edc:desc="Set when a FIFO data read is performed while the NDRNG is disabled AND has its FIFO empty (FIFOLevel = 0)."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0RNG_DATA_INITWAITVAL" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:por="00000000000000001111111111111111" edc:mclr="00000000000000001111111111111111" edc:impl="0xFFFF" edc:_addr="0x43014034">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="INITWAITVAL" edc:nzwidth="0x10" edc:desc="Number of clock cycles to wait before sampling data from the noise source."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0RNG_DATA_DISABLEOSC0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x43014038">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="DISABLEOSC0" edc:nzwidth="0x20" edc:desc="Disable oscillator rings #0 to #31."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0RNG_DATA_DISABLEOSC1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4301403C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="DISABLEOSC1" edc:nzwidth="0x20" edc:desc="Disable oscillator rings #32 to #63."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0RNG_DATA_SWOFFTMRVAL" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF" edc:_addr="0x43014040">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="SWOFFTMRVAL" edc:nzwidth="0x10" edc:desc="Number of clk cycles to wait before stopping the rings after the FIFO is full."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0RNG_DATA_CLKDIV" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF" edc:_addr="0x43014044">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="CLKDIV" edc:nzwidth="0x8" edc:desc="Sample clock divider. The frequency at which the outputs of the rings are sampled is given by: Fs=Fpclk/(ClkDiv+1)."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0RNG_DATA_AIS31CONF0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x43014048">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="STARTUPTHRESHOLD" edc:nzwidth="0x10" edc:desc="Start-up test threshold."/>
            <edc:SFRFieldDef edc:cname="ONLINETHRESHOLD" edc:nzwidth="0x10" edc:desc="Online threshold."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0RNG_DATA_AIS31CONF1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4301404C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="ONLINEREPTHRESHOLD" edc:nzwidth="0x10" edc:desc="Online repeat threshold."/>
            <edc:SFRFieldDef edc:cname="HEXPECTEDVALUE" edc:nzwidth="0x10" edc:desc="Expected history value."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0RNG_DATA_AIS31CONF2" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x43014050">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="HMIN" edc:nzwidth="0x10" edc:desc="Minimum allowed history value."/>
            <edc:SFRFieldDef edc:cname="HMAX" edc:nzwidth="0x10" edc:desc="Maximum allowed history value."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0RNG_DATA_AIS31STATUS" edc:nzwidth="0x20" edc:access="--------------nnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3FFFF" edc:_addr="0x43014054">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="NUMPRELIMALARMS" edc:nzwidth="0x10" edc:desc="Number of preliminary noise alarms since counter was last cleared."/>
            <edc:SFRFieldDef edc:cname="PRELIMNOISEALARMRNG" edc:nzwidth="0x1" edc:desc="Last preliminary noise alarm occurred due to history value out of range."/>
            <edc:SFRFieldDef edc:cname="PRELIMNOISEALARMREP" edc:nzwidth="0x1" edc:desc="Last preliminary noise alarm occurred due to consecutive high X**2."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SILEX" edc:cname="SFR0RNG_DATA_HWCONFIG" edc:nzwidth="0x20" edc:access="----------------------rrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3FF" edc:_addr="0x43014058">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SILEX">
            <edc:SFRFieldDef edc:cname="NUMBOFRINGS" edc:nzwidth="0x8" edc:desc="Generic g_NumRings value."/>
            <edc:SFRFieldDef edc:cname="AIS31" edc:nzwidth="0x1" edc:desc="Generic g_AIS31 value."/>
            <edc:SFRFieldDef edc:cname="AIS31FULL" edc:nzwidth="0x1" edc:desc="Generic g_AIS31Full value."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:SFRDataSector>
    <edc:SFRDataSector edc:regionid="PBPIC_BRIDGE" edc:beginaddr="0x44000000" edc:endaddr="0x44013E64" edc:rw="rw">
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="CFGCON0" edc:nzwidth="0x20" edc:access="-nnn-nnnnnnn-nn-nnnnnnnnnn-nnnn-" edc:por="01110001000000000000000000001011" edc:mclr="01110001000000000000000000001011" edc:impl="0x77F6FFDE" edc:_addr="0x44000000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CFG">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SWOEN" edc:nzwidth="0x1" edc:desc="SWO enable on 2-wire debug interface"/>
            <edc:SFRFieldDef edc:cname="TROEN" edc:nzwidth="0x1" edc:desc="Trace Output Enable"/>
            <edc:SFRFieldDef edc:cname="JTAGEN" edc:nzwidth="0x1" edc:desc="JTAG Enable"/>
            <edc:SFRFieldDef edc:cname="ADCPOVR" edc:nzwidth="0x1" edc:desc="ADC Charge Pump Override"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ACCMP1_ALTEN" edc:nzwidth="0x1" edc:desc="AC CMP1 Alternate Enable"/>
            <edc:SFRFieldDef edc:cname="CPENFILT" edc:nzwidth="0x1" edc:desc="ADC CP Filter Enable"/>
            <edc:SFRFieldDef edc:cname="RTCIN0_ALTEN" edc:nzwidth="0x1" edc:desc="RTCIN0 Alternate Enable"/>
            <edc:SFRFieldDef edc:cname="RTCOUT_ALTEN" edc:nzwidth="0x1" edc:desc="RTCOUT Alternate Enable"/>
            <edc:SFRFieldDef edc:cname="PMULOCK" edc:nzwidth="0x1" edc:desc="PMU Controller Register LOCK"/>
            <edc:SFRFieldDef edc:cname="PGLCOK" edc:nzwidth="0x1" edc:desc="Permission Group LOCK"/>
            <edc:SFRFieldDef edc:cname="PMDLOCK" edc:nzwidth="0x1" edc:desc="Peripheral Module Disable (PMD) LOCK"/>
            <edc:SFRFieldDef edc:cname="IOLOCK" edc:nzwidth="0x1" edc:desc="IO LOCK"/>
            <edc:SFRFieldDef edc:cname="CFGCLOCK" edc:nzwidth="0x2" edc:desc="Configuration Register Lock"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SMBUSEN0" edc:nzwidth="0x1" edc:desc="SMBus Enable for SERCOM0"/>
            <edc:SFRFieldDef edc:cname="SMBUSEN1" edc:nzwidth="0x1" edc:desc="SMBus Enable for SERCOM1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="HPLUGDIS" edc:nzwidth="0x1" edc:desc="Hot Plugging Disable"/>
            <edc:SFRFieldDef edc:cname="SLRTEN0" edc:nzwidth="0x1" edc:desc="SLRT Enable for SERCOM0"/>
            <edc:SFRFieldDef edc:cname="SLRTEN1" edc:nzwidth="0x1" edc:desc="SLRT Enable for SERCOM1"/>
            <edc:SFRFieldDef edc:cname="SLRTEN2" edc:nzwidth="0x1" edc:desc="SLRT Enable for SERCOM2"/>
            <edc:SFRFieldDef edc:cname="PCM" edc:nzwidth="0x1" edc:desc="PCHE I/D Cacheable Mode"/>
            <edc:SFRFieldDef edc:cname="INT0E" edc:nzwidth="0x1" edc:desc="INT0 Enable"/>
            <edc:SFRFieldDef edc:cname="INT0P" edc:nzwidth="0x1" edc:desc="INT0P Polarity"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FECCCON" edc:nzwidth="0x2" edc:desc="Flash ECC Control"/>
            <edc:SFRFieldDef edc:cname="FRECCDIS" edc:nzwidth="0x1" edc:desc="Flex RAM ECC Control"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="CFGCON0CLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000004"/>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="CFGCON0SET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000008"/>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="CFGCON0INV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4400000C"/>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="CFGCON1" edc:nzwidth="0x20" edc:access="-nnnnnnnnnnn-nnnnnnnn-nnnnn-----" edc:por="00011111000000000100000000111011" edc:mclr="00011111000000000100000000111011" edc:impl="0x7FF7FBE0" edc:_addr="0x44000010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CFG">
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="TRCEN" edc:nzwidth="0x1" edc:desc="Trace Enable"/>
            <edc:SFRFieldDef edc:cname="ECC_SEL_MEM" edc:nzwidth="0x1" edc:desc="ECC row selection bit"/>
            <edc:SFRFieldDef edc:cname="ZBTWKSYS" edc:nzwidth="0x1" edc:desc="ZBT Subsystem External Wake-up source"/>
            <edc:SFRFieldDef edc:cname="CMP0_OE" edc:nzwidth="0x1" edc:desc="Analog Comparator-0 Output Enable"/>
            <edc:SFRFieldDef edc:cname="CMP1_OE" edc:nzwidth="0x1" edc:desc="Analog Comparator-1 Output Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SLRCTRL0" edc:nzwidth="0x1" edc:desc="I2C Slew Rate Control for SERCOM0"/>
            <edc:SFRFieldDef edc:cname="SLRCTRL1" edc:nzwidth="0x1" edc:desc="I2C Slew Rate Control for SERCOM1"/>
            <edc:SFRFieldDef edc:cname="SLRCTRL2" edc:nzwidth="0x1" edc:desc="I2C Slew Rate Control for SERCOM2"/>
            <edc:SFRFieldDef edc:cname="SMCLR" edc:nzwidth="0x1" edc:desc="Selects CRU handling of MCLR Control"/>
            <edc:SFRFieldDef edc:cname="QSCHE_EN" edc:nzwidth="0x1" edc:desc="QSPI Address Space Cache Attribute"/>
            <edc:SFRFieldDef edc:cname="QSPI_HSEN" edc:nzwidth="0x1" edc:desc="QSPI (Direct) Enable"/>
            <edc:SFRFieldDef edc:cname="SCOM0_HSEN" edc:nzwidth="0x1" edc:desc="SERCOM0 (Direct)High Speed Pin Enable"/>
            <edc:SFRFieldDef edc:cname="SCOM1_HSEN" edc:nzwidth="0x1" edc:desc="SERCOM1 (Direct)High Speed Pin Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CCL_OE" edc:nzwidth="0x1" edc:desc="CCL Pads (via PPS) Output Enable"/>
            <edc:SFRFieldDef edc:cname="I2CDSEL0" edc:nzwidth="0x1" edc:desc="I2C Delay Select for SERCOM0"/>
            <edc:SFRFieldDef edc:cname="I2CDSEL1" edc:nzwidth="0x1" edc:desc="I2C Delay Select for SERCOM1"/>
            <edc:SFRFieldDef edc:cname="I2CDSEL2" edc:nzwidth="0x1" edc:desc="I2C Delay Select for SERCOM2"/>
            <edc:SFRFieldDef edc:cname="WDTPSS" edc:nzwidth="0x5" edc:desc="Watchdog Timer Post-scale Select Sleep"/>
            <edc:SFRFieldDef edc:cname="QSPIDDRM" edc:nzwidth="0x1" edc:desc="QSPI DDR Mode Clock Enable"/>
            <edc:SFRFieldDef edc:cname="CLKZBREF" edc:nzwidth="0x1" edc:desc="External Reference Clock ZB Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="CFGCON1CLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000014"/>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="CFGCON1SET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000018"/>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="CFGCON1INV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4400001C"/>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="CFGCON2" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnn-nnnnnn" edc:por="01111111011111111111111100111000" edc:mclr="01111111011111111111111100111000" edc:impl="0xFFFFFFBF" edc:_addr="0x44000020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CFG">
            <edc:SFRFieldDef edc:cname="ACMP_CYCLE" edc:nzwidth="0x3" edc:desc="AC SIB Comparator Result Wait Cycles"/>
            <edc:SFRFieldDef edc:cname="DMTINTV" edc:nzwidth="0x3" edc:desc="Dead Man Timer Count Window Interval"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PMUTEST_VDD_EN" edc:nzwidth="0x1" edc:desc="PMU Test Output or VDD/2 Enable via ADC IE12"/>
            <edc:SFRFieldDef edc:cname="POSCMOD" edc:nzwidth="0x2" edc:desc="Primary Oscillator Configuration"/>
            <edc:SFRFieldDef edc:cname="WDTRMCS" edc:nzwidth="0x2" edc:desc="WDT RUN Mode Clock Select"/>
            <edc:SFRFieldDef edc:cname="SOSCSEL" edc:nzwidth="0x1" edc:desc="SOSC Selection Configuration"/>
            <edc:SFRFieldDef edc:cname="WAKE2SPD" edc:nzwidth="0x1" edc:desc="2-Speed startup enabled in Sleep mode"/>
            <edc:SFRFieldDef edc:cname="CKSWEN" edc:nzwidth="0x1" edc:desc="Software Clock Switching Enable"/>
            <edc:SFRFieldDef edc:cname="FSCMEN" edc:nzwidth="0x1" edc:desc="Fail-Safe Clock Monitor Enable"/>
            <edc:SFRFieldDef edc:cname="WDTPSR" edc:nzwidth="0x5" edc:desc="Watchdog Timer Post-scale Select Run"/>
            <edc:SFRFieldDef edc:cname="WDTSPGM" edc:nzwidth="0x1" edc:desc="Watchdog Timer Stop during Flash Programming"/>
            <edc:SFRFieldDef edc:cname="WINDIS" edc:nzwidth="0x1" edc:desc="Windowed Watchdog Timer Disable"/>
            <edc:SFRFieldDef edc:cname="WDTEN" edc:nzwidth="0x1" edc:desc="Watchdog Timer Enable"/>
            <edc:SFRFieldDef edc:cname="WDTWINSZ" edc:nzwidth="0x2" edc:desc="Watchdog Timer Window Size"/>
            <edc:SFRFieldDef edc:cname="DMTCNT" edc:nzwidth="0x5" edc:desc="Dead Man Timer Count Select"/>
            <edc:SFRFieldDef edc:cname="DMTEN" edc:nzwidth="0x1" edc:desc="Dead Man Timer Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="CFGCON2CLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000024"/>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="CFGCON2SET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000028"/>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="CFGCON2INV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4400002C"/>
      <edc:AdjustPoint edc:offset="0x10" edc:_addr="0x44000030"/>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="CFGCON4" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="10000100000011100100000000000000" edc:mclr="10000100000011100100000000000000" edc:_addr="0x44000040">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CFG">
            <edc:SFRFieldDef edc:cname="SOSC_CFG" edc:nzwidth="0x8" edc:desc="SOSC Configuration"/>
            <edc:SFRFieldDef edc:cname="RTCEVENT_SEL" edc:nzwidth="0x2" edc:desc="RTC Event Selection"/>
            <edc:SFRFieldDef edc:cname="RTCEVENT_EN" edc:nzwidth="0x1" edc:desc="Pad Output Enable for MCHP legacy RTC event output"/>
            <edc:SFRFieldDef edc:cname="VBKP_1KCSEL" edc:nzwidth="0x1" edc:desc="VDDBUKPCORE LPCLK Clock Selection"/>
            <edc:SFRFieldDef edc:cname="VBKP_32KCSEL" edc:nzwidth="0x2" edc:desc="VDDBUKPCORE 32KHz clock source selection"/>
            <edc:SFRFieldDef edc:cname="VBKP_DIVSEL" edc:nzwidth="0x1" edc:desc="VDDBUKPCORE LPCLK Clock Divider Selection"/>
            <edc:SFRFieldDef edc:cname="LPCLK_MOD" edc:nzwidth="0x1" edc:desc="LPCLK modifier in counter/delay mode"/>
            <edc:SFRFieldDef edc:cname="RTCEVTYPE" edc:nzwidth="0x1" edc:desc="RTC Event Type"/>
            <edc:SFRFieldDef edc:cname="CPEN_DLY" edc:nzwidth="0x3" edc:desc="Charge-pump ready digital delay"/>
            <edc:SFRFieldDef edc:cname="DSZPBOREN" edc:nzwidth="0x1" edc:desc="Deep Sleep Zero-Power BOR Enable"/>
            <edc:SFRFieldDef edc:cname="DSWDTPS" edc:nzwidth="0x5" edc:desc="Deep Sleep Watchdog Timer Postscale Select"/>
            <edc:SFRFieldDef edc:cname="DSWDTOSC" edc:nzwidth="0x1" edc:desc="Deep Sleep Watchdog Timer Reference Clock Select"/>
            <edc:SFRFieldDef edc:cname="DSWDTEN" edc:nzwidth="0x1" edc:desc="Deep Sleep Watchdog Timer Enable"/>
            <edc:SFRFieldDef edc:cname="DSEN" edc:nzwidth="0x1" edc:desc="Deep Sleep Bit Enable"/>
            <edc:SFRFieldDef edc:cname="UVREGROVR" edc:nzwidth="0x1" edc:desc="ULPVREG Retention Mode Override"/>
            <edc:SFRFieldDef edc:cname="LPOSCEN" edc:nzwidth="0x1" edc:desc="Low Power (Secondary) Oscillator Enable"/>
            <edc:SFRFieldDef edc:cname="RTCNTM_CSEL" edc:nzwidth="0x1" edc:desc="RTC Counter Mode Clock Select"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="CFGCON4CLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000044"/>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="CFGCON4SET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000048"/>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="CFGCON4INV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4400004C"/>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="CFGPGQOS" edc:nzwidth="0x20" edc:access="nnnn--nnnnnnnnnn------nn----nnnn" edc:por="11100000010001000000000001001100" edc:mclr="11100000010001000000000001001100" edc:impl="0xF3FF030F" edc:_addr="0x44000050">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CFG">
            <edc:SFRFieldDef edc:cname="CPUPG" edc:nzwidth="0x2" edc:desc="CPU (Code) Permission Group"/>
            <edc:SFRFieldDef edc:cname="CPUQOS" edc:nzwidth="0x2" edc:desc="CPU I/D and System Bus QOS Control"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="DMAPG" edc:nzwidth="0x2" edc:desc="DMA (Rd/Wr) Permission Group"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="DGISPIPG" edc:nzwidth="0x2" edc:desc="ADC Controller Permission Group"/>
            <edc:SFRFieldDef edc:cname="DGISPIQOS" edc:nzwidth="0x2" edc:desc="ADC Controller QOS Control"/>
            <edc:SFRFieldDef edc:cname="CRYPTOPG" edc:nzwidth="0x2" edc:desc="Crypto Permission Group"/>
            <edc:SFRFieldDef edc:cname="CRYPTOQOS" edc:nzwidth="0x2" edc:desc="Crypto QOS Control"/>
            <edc:SFRFieldDef edc:cname="DSUPG" edc:nzwidth="0x2" edc:desc="DSU Permission Group"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FCQOS" edc:nzwidth="0x2" edc:desc="FC Controller QOS Control"/>
            <edc:SFRFieldDef edc:cname="WISIBQOS" edc:nzwidth="0x2" edc:desc="Wireless SIB QOS Control"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="CFGPGQOSCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000054"/>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="CFGPGQOSSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000058"/>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="CFGPGQOSINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4400005C"/>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="CFGPCLKGEN1" edc:nzwidth="0x20" edc:access="nnnn----nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF0FFFFFF" edc:_addr="0x44000060">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CFG">
            <edc:SFRFieldDef edc:cname="EICCSEL" edc:nzwidth="0x3" edc:desc="EIC Clock Selection">
              <edc:SFRFieldSemantic edc:cname="NO_CLK" edc:desc="No Clock" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="REFO1" edc:desc="Reference Clock 1" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="REFO2" edc:desc="Reference Clock 2" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="REFO3" edc:desc="Reference Clock 3" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="REFO4" edc:desc="Reference Clock 4" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="REFO5" edc:desc="Reference Clock 5" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="REFO6" edc:desc="Reference Clock 6" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="LPCLK" edc:desc="32 KHz Low Power Clock" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EICCD" edc:nzwidth="0x1" edc:desc="EIC Clock Disable">
              <edc:SFRFieldSemantic edc:cname="ON" edc:desc="Enable PGCLK" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Disable PGCLK" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FREQMRCSEL" edc:nzwidth="0x3" edc:desc="FREQMRC Clock Selection">
              <edc:SFRFieldSemantic edc:cname="NO_CLK" edc:desc="No Clock" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="REFO1" edc:desc="Reference Clock 1" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="REFO2" edc:desc="Reference Clock 2" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="REFO3" edc:desc="Reference Clock 3" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="REFO4" edc:desc="Reference Clock 4" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="REFO5" edc:desc="Reference Clock 5" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="REFO6" edc:desc="Reference Clock 6" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="LPCLK" edc:desc="32 KHz Low Power Clock" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FREQMRCD" edc:nzwidth="0x1" edc:desc="FREQMRC Clock Disable">
              <edc:SFRFieldSemantic edc:cname="ON" edc:desc="Enable PGCLK" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Disable PGCLK" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FREQMMCSEL" edc:nzwidth="0x3" edc:desc="FREQMMC Clock Selection">
              <edc:SFRFieldSemantic edc:cname="NO_CLK" edc:desc="No Clock" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="REFO1" edc:desc="Reference Clock 1" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="REFO2" edc:desc="Reference Clock 2" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="REFO3" edc:desc="Reference Clock 3" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="REFO4" edc:desc="Reference Clock 4" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="REFO5" edc:desc="Reference Clock 5" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="REFO6" edc:desc="Reference Clock 6" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="LPCLK" edc:desc="32 KHz Low Power Clock" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FREQMMCD" edc:nzwidth="0x1" edc:desc="FREQMMC Clock Disable">
              <edc:SFRFieldSemantic edc:cname="ON" edc:desc="Enable PGCLK" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Disable PGCLK" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SERCOM01CSEL" edc:nzwidth="0x3" edc:desc="SERCOM0/1 Clock Selection">
              <edc:SFRFieldSemantic edc:cname="NO_CLK" edc:desc="No Clock" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="REFO1" edc:desc="Reference Clock 1" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="REFO2" edc:desc="Reference Clock 2" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="REFO3" edc:desc="Reference Clock 3" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="REFO4" edc:desc="Reference Clock 4" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="REFO5" edc:desc="Reference Clock 5" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="REFO6" edc:desc="Reference Clock 6" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="LPCLK" edc:desc="32 KHz Low Power Clock" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SERCOM01CD" edc:nzwidth="0x1" edc:desc="SERCOM0/1 Clock Disable">
              <edc:SFRFieldSemantic edc:cname="ON" edc:desc="Enable PGCLK" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Disable PGCLK" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SERCOM2CSEL" edc:nzwidth="0x3" edc:desc="SERCOM2/3 Clock Selection">
              <edc:SFRFieldSemantic edc:cname="NO_CLK" edc:desc="No Clock" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="REFO1" edc:desc="Reference Clock 1" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="REFO2" edc:desc="Reference Clock 2" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="REFO3" edc:desc="Reference Clock 3" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="REFO4" edc:desc="Reference Clock 4" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="REFO5" edc:desc="Reference Clock 5" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="REFO6" edc:desc="Reference Clock 6" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="LPCLK" edc:desc="32 KHz Low Power Clock" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SERCOM2CD" edc:nzwidth="0x1" edc:desc="SERCOM2/3 Clock Disable">
              <edc:SFRFieldSemantic edc:cname="ON" edc:desc="Enable PGCLK" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Disable PGCLK" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TCC12CSEL" edc:nzwidth="0x3" edc:desc="TCC1/2 Clock Selection">
              <edc:SFRFieldSemantic edc:cname="NO_CLK" edc:desc="No Clock" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="REFO1" edc:desc="Reference Clock 1" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="REFO2" edc:desc="Reference Clock 2" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="REFO3" edc:desc="Reference Clock 3" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="REFO4" edc:desc="Reference Clock 4" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="REFO5" edc:desc="Reference Clock 5" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="REFO6" edc:desc="Reference Clock 6" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="LPCLK" edc:desc="32 KHz Low Power Clock" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TCC12CD" edc:nzwidth="0x1" edc:desc="TCC1/2 Clock Disable">
              <edc:SFRFieldSemantic edc:cname="ON" edc:desc="Enable PGCLK" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Disable PGCLK" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CM4TCSEL" edc:nzwidth="0x3" edc:desc="CM4T Clock Selection">
              <edc:SFRFieldSemantic edc:cname="NO_CLK" edc:desc="No Clock" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="REFO1" edc:desc="Reference Clock 1" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="REFO2" edc:desc="Reference Clock 2" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="REFO3" edc:desc="Reference Clock 3" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="REFO4" edc:desc="Reference Clock 4" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="REFO5" edc:desc="Reference Clock 5" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="REFO6" edc:desc="Reference Clock 6" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="LPCLK" edc:desc="32 KHz Low Power Clock" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CM4TCD" edc:nzwidth="0x1" edc:desc="CM4T Clock Disable">
              <edc:SFRFieldSemantic edc:cname="ON" edc:desc="Enable PGCLK" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Disable PGCLK" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="CFGPCLKGEN1CLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000064"/>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="CFGPCLKGEN1SET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000068"/>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="CFGPCLKGEN1INV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4400006C"/>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="CFGPCLKGEN2" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000070">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CFG">
            <edc:SFRFieldDef edc:cname="EVSYSC1SEL" edc:nzwidth="0x3" edc:desc="EVSYSC1 Peripheral Clock Selection">
              <edc:SFRFieldSemantic edc:cname="NO_CLK" edc:desc="No Clock" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="REFO1" edc:desc="Reference Clock 1" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="REFO2" edc:desc="Reference Clock 2" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="REFO3" edc:desc="Reference Clock 3" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="REFO4" edc:desc="Reference Clock 4" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="REFO5" edc:desc="Reference Clock 5" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="REFO6" edc:desc="Reference Clock 6" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="LPCLK" edc:desc="32 KHz Low Power Clock" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EVSYSC1CD" edc:nzwidth="0x1" edc:desc="EVSYSC1 Clock Disable">
              <edc:SFRFieldSemantic edc:cname="ON" edc:desc="Enable PGCLK" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Disable PGCLK" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EVSYSC2SEL" edc:nzwidth="0x3" edc:desc="EVSYSC2 Peripheral Clock Selection">
              <edc:SFRFieldSemantic edc:cname="NO_CLK" edc:desc="No Clock" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="REFO1" edc:desc="Reference Clock 1" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="REFO2" edc:desc="Reference Clock 2" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="REFO3" edc:desc="Reference Clock 3" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="REFO4" edc:desc="Reference Clock 4" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="REFO5" edc:desc="Reference Clock 5" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="REFO6" edc:desc="Reference Clock 6" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="LPCLK" edc:desc="32 KHz Low Power Clock" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EVSYSC2CD" edc:nzwidth="0x1" edc:desc="EVSYSC2 Clock Disable">
              <edc:SFRFieldSemantic edc:cname="ON" edc:desc="Enable PGCLK" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Disable PGCLK" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EVSYSC3SEL" edc:nzwidth="0x3" edc:desc="EVSYSC3 Peripheral Clock Selection">
              <edc:SFRFieldSemantic edc:cname="NO_CLK" edc:desc="No Clock" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="REFO1" edc:desc="Reference Clock 1" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="REFO2" edc:desc="Reference Clock 2" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="REFO3" edc:desc="Reference Clock 3" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="REFO4" edc:desc="Reference Clock 4" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="REFO5" edc:desc="Reference Clock 5" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="REFO6" edc:desc="Reference Clock 6" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="LPCLK" edc:desc="32 KHz Low Power Clock" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EVSYSC3CD" edc:nzwidth="0x1" edc:desc="EVSYSC3 Clock Disable">
              <edc:SFRFieldSemantic edc:cname="ON" edc:desc="Enable PGCLK" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Disable PGCLK" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EVSYSC4SEL" edc:nzwidth="0x3" edc:desc="EVSYSC4 Peripheral Clock Selection">
              <edc:SFRFieldSemantic edc:cname="NO_CLK" edc:desc="No Clock" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="REFO1" edc:desc="Reference Clock 1" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="REFO2" edc:desc="Reference Clock 2" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="REFO3" edc:desc="Reference Clock 3" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="REFO4" edc:desc="Reference Clock 4" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="REFO5" edc:desc="Reference Clock 5" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="REFO6" edc:desc="Reference Clock 6" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="LPCLK" edc:desc="32 KHz Low Power Clock" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EVSYSC4CD" edc:nzwidth="0x1" edc:desc="EVSYSC4 Clock Disable">
              <edc:SFRFieldSemantic edc:cname="ON" edc:desc="Enable PGCLK" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Disable PGCLK" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EVSYSC5SEL" edc:nzwidth="0x3" edc:desc="EVSYSC5 Peripheral Clock Selection">
              <edc:SFRFieldSemantic edc:cname="NO_CLK" edc:desc="No Clock" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="REFO1" edc:desc="Reference Clock 1" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="REFO2" edc:desc="Reference Clock 2" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="REFO3" edc:desc="Reference Clock 3" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="REFO4" edc:desc="Reference Clock 4" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="REFO5" edc:desc="Reference Clock 5" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="REFO6" edc:desc="Reference Clock 6" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="LPCLK" edc:desc="32 KHz Low Power Clock" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EVSYSC5CD" edc:nzwidth="0x1" edc:desc="EVSYSC5 Clock Disable">
              <edc:SFRFieldSemantic edc:cname="ON" edc:desc="Enable PGCLK" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Disable PGCLK" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EVSYSC6SEL" edc:nzwidth="0x3" edc:desc="EVSYSC6 Peripheral Clock Selection">
              <edc:SFRFieldSemantic edc:cname="NO_CLK" edc:desc="No Clock" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="REFO1" edc:desc="Reference Clock 1" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="REFO2" edc:desc="Reference Clock 2" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="REFO3" edc:desc="Reference Clock 3" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="REFO4" edc:desc="Reference Clock 4" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="REFO5" edc:desc="Reference Clock 5" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="REFO6" edc:desc="Reference Clock 6" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="LPCLK" edc:desc="32 KHz Low Power Clock" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EVSYSC6CD" edc:nzwidth="0x1" edc:desc="EVSYSC6 Clock Disable">
              <edc:SFRFieldSemantic edc:cname="ON" edc:desc="Enable PGCLK" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Disable PGCLK" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EVSYSC7SEL" edc:nzwidth="0x3" edc:desc="EVSYSC7 Peripheral Clock Selection">
              <edc:SFRFieldSemantic edc:cname="NO_CLK" edc:desc="No Clock" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="REFO1" edc:desc="Reference Clock 1" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="REFO2" edc:desc="Reference Clock 2" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="REFO3" edc:desc="Reference Clock 3" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="REFO4" edc:desc="Reference Clock 4" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="REFO5" edc:desc="Reference Clock 5" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="REFO6" edc:desc="Reference Clock 6" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="LPCLK" edc:desc="32 KHz Low Power Clock" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EVSYSC7CD" edc:nzwidth="0x1" edc:desc="EVSYSC7 Clock Disable">
              <edc:SFRFieldSemantic edc:cname="ON" edc:desc="Enable PGCLK" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Disable PGCLK" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EVSYSC8SEL" edc:nzwidth="0x3" edc:desc="EVSYSC8 Peripheral Clock Selection">
              <edc:SFRFieldSemantic edc:cname="NO_CLK" edc:desc="No Clock" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="REFO1" edc:desc="Reference Clock 1" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="REFO2" edc:desc="Reference Clock 2" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="REFO3" edc:desc="Reference Clock 3" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="REFO4" edc:desc="Reference Clock 4" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="REFO5" edc:desc="Reference Clock 5" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="REFO6" edc:desc="Reference Clock 6" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="LPCLK" edc:desc="32 KHz Low Power Clock" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EVSYSC8CD" edc:nzwidth="0x1" edc:desc="EVSYSC8 Clock Disable">
              <edc:SFRFieldSemantic edc:cname="ON" edc:desc="Enable PGCLK" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Disable PGCLK" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="CFGPCLKGEN2CLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000074"/>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="CFGPCLKGEN2SET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000078"/>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="CFGPCLKGEN2INV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4400007C"/>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="CFGPCLKGEN3" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x44000080">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CFG">
            <edc:SFRFieldDef edc:cname="EVSYSC9SEL" edc:nzwidth="0x3" edc:desc="EVSYSC9 Peripheral Clock Selection">
              <edc:SFRFieldSemantic edc:cname="NO_CLK" edc:desc="No Clock" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="REFO1" edc:desc="Reference Clock 1" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="REFO2" edc:desc="Reference Clock 2" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="REFO3" edc:desc="Reference Clock 3" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="REFO4" edc:desc="Reference Clock 4" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="REFO5" edc:desc="Reference Clock 5" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="REFO6" edc:desc="Reference Clock 6" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="LPCLK" edc:desc="32 KHz Low Power Clock" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EVSYSC9CD" edc:nzwidth="0x1" edc:desc="EVSYSC9 Clock Disable">
              <edc:SFRFieldSemantic edc:cname="ON" edc:desc="Enable PGCLK" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Disable PGCLK" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EVSYSC10SEL" edc:nzwidth="0x3" edc:desc="EVSYSC10 Peripheral Clock Selection">
              <edc:SFRFieldSemantic edc:cname="NO_CLK" edc:desc="No Clock" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="REFO1" edc:desc="Reference Clock 1" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="REFO2" edc:desc="Reference Clock 2" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="REFO3" edc:desc="Reference Clock 3" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="REFO4" edc:desc="Reference Clock 4" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="REFO5" edc:desc="Reference Clock 5" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="REFO6" edc:desc="Reference Clock 6" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="LPCLK" edc:desc="32 KHz Low Power Clock" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EVSYSC10CD" edc:nzwidth="0x1" edc:desc="EVSYSC10 Clock Disable">
              <edc:SFRFieldSemantic edc:cname="ON" edc:desc="Enable PGCLK" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Disable PGCLK" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EVSYSC11SEL" edc:nzwidth="0x3" edc:desc="EVSYSC11 Peripheral Clock Selection">
              <edc:SFRFieldSemantic edc:cname="NO_CLK" edc:desc="No Clock" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="REFO1" edc:desc="Reference Clock 1" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="REFO2" edc:desc="Reference Clock 2" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="REFO3" edc:desc="Reference Clock 3" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="REFO4" edc:desc="Reference Clock 4" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="REFO5" edc:desc="Reference Clock 5" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="REFO6" edc:desc="Reference Clock 6" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="LPCLK" edc:desc="32 KHz Low Power Clock" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EVSYSC11CD" edc:nzwidth="0x1" edc:desc="EVSYSC11 Clock Disable">
              <edc:SFRFieldSemantic edc:cname="ON" edc:desc="Enable PGCLK" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Disable PGCLK" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EVSYSC12SEL" edc:nzwidth="0x3" edc:desc="EVSYSC12 Peripheral Clock Selection">
              <edc:SFRFieldSemantic edc:cname="NO_CLK" edc:desc="No Clock" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="REFO1" edc:desc="Reference Clock 1" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="REFO2" edc:desc="Reference Clock 2" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="REFO3" edc:desc="Reference Clock 3" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="REFO4" edc:desc="Reference Clock 4" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="REFO5" edc:desc="Reference Clock 5" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="REFO6" edc:desc="Reference Clock 6" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="LPCLK" edc:desc="32 KHz Low Power Clock" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EVSYSC12CD" edc:nzwidth="0x1" edc:desc="EVSYSC12 Clock Disable">
              <edc:SFRFieldSemantic edc:cname="ON" edc:desc="Enable PGCLK" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Disable PGCLK" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ACCSEL" edc:nzwidth="0x3" edc:desc="AC Peripheral Clock Selection">
              <edc:SFRFieldSemantic edc:cname="NO_CLK" edc:desc="No Clock" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="REFO1" edc:desc="Reference Clock 1" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="REFO2" edc:desc="Reference Clock 2" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="REFO3" edc:desc="Reference Clock 3" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="REFO4" edc:desc="Reference Clock 4" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="REFO5" edc:desc="Reference Clock 5" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="REFO6" edc:desc="Reference Clock 6" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="LPCLK" edc:desc="32 KHz Low Power Clock" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ACCD" edc:nzwidth="0x1" edc:desc="AC Clock Disable">
              <edc:SFRFieldSemantic edc:cname="ON" edc:desc="Enable PGCLK" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Disable PGCLK" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TCC0CSEL" edc:nzwidth="0x3" edc:desc="TCC0 Peripheral Clock Selection">
              <edc:SFRFieldSemantic edc:cname="NO_CLK" edc:desc="No Clock" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="REFO1" edc:desc="Reference Clock 1" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="REFO2" edc:desc="Reference Clock 2" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="REFO3" edc:desc="Reference Clock 3" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="REFO4" edc:desc="Reference Clock 4" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="REFO5" edc:desc="Reference Clock 5" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="REFO6" edc:desc="Reference Clock 6" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="LPCLK" edc:desc="32 KHz Low Power Clock" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TCC0CD" edc:nzwidth="0x1" edc:desc="TCC0 Clock Disable">
              <edc:SFRFieldSemantic edc:cname="ON" edc:desc="Enable PGCLK" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Disable PGCLK" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="CFGPCLKGEN3CLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000084"/>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="CFGPCLKGEN3SET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000088"/>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="CFGPCLKGEN3INV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4400008C"/>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="CFGPCLKGEN4" edc:nzwidth="0x20" edc:access="------------nnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFF" edc:_addr="0x44000090">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CFG">
            <edc:SFRFieldDef edc:cname="TC0CSEL" edc:nzwidth="0x3" edc:desc="TC0 Peripheral Clock Selection">
              <edc:SFRFieldSemantic edc:cname="NO_CLK" edc:desc="No Clock" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="REFO1" edc:desc="Reference Clock 1" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="REFO2" edc:desc="Reference Clock 2" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="REFO3" edc:desc="Reference Clock 3" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="REFO4" edc:desc="Reference Clock 4" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="REFO5" edc:desc="Reference Clock 5" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="REFO6" edc:desc="Reference Clock 6" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="LPCLK" edc:desc="32 KHz Low Power Clock" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TC0CD" edc:nzwidth="0x1" edc:desc="TC0 Clock Disable">
              <edc:SFRFieldSemantic edc:cname="ON" edc:desc="Enable PGCLK" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Disable PGCLK" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TC1CSEL" edc:nzwidth="0x3" edc:desc="TC1 Peripheral Clock Selection">
              <edc:SFRFieldSemantic edc:cname="NO_CLK" edc:desc="No Clock" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="REFO1" edc:desc="Reference Clock 1" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="REFO2" edc:desc="Reference Clock 2" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="REFO3" edc:desc="Reference Clock 3" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="REFO4" edc:desc="Reference Clock 4" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="REFO5" edc:desc="Reference Clock 5" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="REFO6" edc:desc="Reference Clock 6" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="LPCLK" edc:desc="32 KHz Low Power Clock" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TC1CD" edc:nzwidth="0x1" edc:desc="TC1 Clock Disable">
              <edc:SFRFieldSemantic edc:cname="ON" edc:desc="Enable PGCLK" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Disable PGCLK" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TC23CSEL" edc:nzwidth="0x3" edc:desc="TC23CSEL Peripheral Clock Selection">
              <edc:SFRFieldSemantic edc:cname="NO_CLK" edc:desc="No Clock" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="REFO1" edc:desc="Reference Clock 1" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="REFO2" edc:desc="Reference Clock 2" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="REFO3" edc:desc="Reference Clock 3" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="REFO4" edc:desc="Reference Clock 4" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="REFO5" edc:desc="Reference Clock 5" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="REFO6" edc:desc="Reference Clock 6" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="LPCLK" edc:desc="32 KHz Low Power Clock" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TC23CD" edc:nzwidth="0x1" edc:desc="TC23CD Clock Disable">
              <edc:SFRFieldSemantic edc:cname="ON" edc:desc="Enable PGCLK" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Disable PGCLK" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TC54CSEL" edc:nzwidth="0x3" edc:desc="TC54CSEL Peripheral Clock Selection">
              <edc:SFRFieldSemantic edc:cname="NO_CLK" edc:desc="No Clock" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="REFO1" edc:desc="Reference Clock 1" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="REFO2" edc:desc="Reference Clock 2" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="REFO3" edc:desc="Reference Clock 3" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="REFO4" edc:desc="Reference Clock 4" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="REFO5" edc:desc="Reference Clock 5" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="REFO6" edc:desc="Reference Clock 6" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="LPCLK" edc:desc="32 KHz Low Power Clock" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TC54CD" edc:nzwidth="0x1" edc:desc="TC54CD Clock Disable">
              <edc:SFRFieldSemantic edc:cname="ON" edc:desc="Enable PGCLK" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Disable PGCLK" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TC67CSEL" edc:nzwidth="0x3" edc:desc="TC67CSEL Peripheral Clock Selection">
              <edc:SFRFieldSemantic edc:cname="NO_CLK" edc:desc="No Clock" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="REFO1" edc:desc="Reference Clock 1" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="REFO2" edc:desc="Reference Clock 2" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="REFO3" edc:desc="Reference Clock 3" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="REFO4" edc:desc="Reference Clock 4" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="REFO5" edc:desc="Reference Clock 5" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="REFO6" edc:desc="Reference Clock 6" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="LPCLK" edc:desc="32 KHz Low Power Clock" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TC67CD" edc:nzwidth="0x1" edc:desc="TC67CD Clock Disable">
              <edc:SFRFieldSemantic edc:cname="ON" edc:desc="Enable PGCLK" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Disable PGCLK" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="CFGPCLKGEN4CLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000094"/>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="CFGPCLKGEN4SET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000098"/>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="CFGPCLKGEN4INV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4400009C"/>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="USER_ID" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF" edc:_addr="0x440000A0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CFG">
            <edc:SFRFieldDef edc:cname="USER_ID" edc:nzwidth="0x10" edc:desc="User unique ID, readable using the SWD USER_ID instruction"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="USER_IDCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x440000A4"/>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="USER_IDSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x440000A8"/>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="USER_IDINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x440000AC"/>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="SYSKEY" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x440000B0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CFG">
            <edc:SFRFieldDef edc:cname="SYSKEY" edc:nzwidth="0x20" edc:desc="System Key"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x440000B4"/>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="PMD1" edc:nzwidth="0x20" edc:access="--n-----n------n------nnnn-nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x208103DF" edc:_addr="0x440000C0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CFG">
            <edc:SFRFieldDef edc:cname="ZBMD" edc:nzwidth="0x1" edc:desc="ZigBee Module Disable"/>
            <edc:SFRFieldDef edc:cname="BTMD" edc:nzwidth="0x1" edc:desc="Bluetooth Module Disable"/>
            <edc:SFRFieldDef edc:cname="MPAMD" edc:nzwidth="0x1" edc:desc="RF MPA Module Disable"/>
            <edc:SFRFieldDef edc:cname="LPAMD" edc:nzwidth="0x1" edc:desc="RF LPA Module Disable"/>
            <edc:SFRFieldDef edc:cname="PLVDMD" edc:nzwidth="0x1" edc:desc="PLVD Module Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ACMD" edc:nzwidth="0x1" edc:desc="AC Module Disable"/>
            <edc:SFRFieldDef edc:cname="ADCMD" edc:nzwidth="0x1" edc:desc="ADC Controller Module Disable"/>
            <edc:SFRFieldDef edc:cname="ADCSARMD" edc:nzwidth="0x1" edc:desc="Shared ADC SAR Core Module Disable"/>
            <edc:SFRFieldDef edc:cname="CVDMD" edc:nzwidth="0x1" edc:desc="Shared ADC SAR Core Module Disable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="RTCCMD" edc:nzwidth="0x1" edc:desc="RTCC Module Disable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="DGISPIMD" edc:nzwidth="0x1" edc:desc="DGI SPI Module Disable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="QSPIMD" edc:nzwidth="0x1" edc:desc="SQI Module Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="PMD1CLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x440000C4"/>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="PMD1SET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x440000C8"/>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="PMD1INV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x440000CC"/>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="PMD2" edc:nzwidth="0x20" edc:access="nnnn--nn------------------------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF3000000" edc:_addr="0x440000D0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CFG">
            <edc:AdjustPoint edc:offset="0x18"/>
            <edc:SFRFieldDef edc:cname="REFO5MD" edc:nzwidth="0x1" edc:desc="Reference (Clock) Out 5 Module Disable"/>
            <edc:SFRFieldDef edc:cname="REFO6MD" edc:nzwidth="0x1" edc:desc="Reference (Clock) Out 6 Module Disable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="REFO1MD" edc:nzwidth="0x1" edc:desc="Reference (Clock) Out 1 Module Disable"/>
            <edc:SFRFieldDef edc:cname="REFO2MD" edc:nzwidth="0x1" edc:desc="Reference (Clock) Out 2 Module Disable"/>
            <edc:SFRFieldDef edc:cname="REFO3MD" edc:nzwidth="0x1" edc:desc="Reference (Clock) Out 3 Module Disable"/>
            <edc:SFRFieldDef edc:cname="REFO4MD" edc:nzwidth="0x1" edc:desc="Reference (Clock) Out 4 Module Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="PMD2CLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x440000D4"/>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="PMD2SET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x440000D8"/>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="PMD2INV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x440000DC"/>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="PMD3" edc:nzwidth="0x20" edc:access="-----------------nnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FFF" edc:_addr="0x440000E0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CFG">
            <edc:SFRFieldDef edc:cname="SER0MD" edc:nzwidth="0x1" edc:desc="SERCOM0 Module Disable"/>
            <edc:SFRFieldDef edc:cname="SER1MD" edc:nzwidth="0x1" edc:desc="SERCOM1 Module Disable"/>
            <edc:SFRFieldDef edc:cname="SER2MD" edc:nzwidth="0x1" edc:desc="SERCOM2 Module Disable"/>
            <edc:SFRFieldDef edc:cname="DACMD" edc:nzwidth="0x1" edc:desc="DAC Module Disable"/>
            <edc:SFRFieldDef edc:cname="TC0MD" edc:nzwidth="0x1" edc:desc="TC0 Module Disable"/>
            <edc:SFRFieldDef edc:cname="TC1MD" edc:nzwidth="0x1" edc:desc="TC1 Module Disable"/>
            <edc:SFRFieldDef edc:cname="TC2MD" edc:nzwidth="0x1" edc:desc="TC2 Module Disable"/>
            <edc:SFRFieldDef edc:cname="TC3MD" edc:nzwidth="0x1" edc:desc="TC3 Module Disable"/>
            <edc:SFRFieldDef edc:cname="TC4MD" edc:nzwidth="0x1" edc:desc="TC4 Module Disable"/>
            <edc:SFRFieldDef edc:cname="TC5MD" edc:nzwidth="0x1" edc:desc="TC5 Module Disable"/>
            <edc:SFRFieldDef edc:cname="TC6MD" edc:nzwidth="0x1" edc:desc="TC6 Module Disable"/>
            <edc:SFRFieldDef edc:cname="TC7MD" edc:nzwidth="0x1" edc:desc="TC7 Module Disable"/>
            <edc:SFRFieldDef edc:cname="TCC0MD" edc:nzwidth="0x1" edc:desc="TCC0 Module Disable"/>
            <edc:SFRFieldDef edc:cname="TCC1MD" edc:nzwidth="0x1" edc:desc="TCC1 Module Disable"/>
            <edc:SFRFieldDef edc:cname="TCC2MD" edc:nzwidth="0x1" edc:desc="TCC2 Module Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="PMD3CLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x440000E4"/>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="PMD3SET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x440000E8"/>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="PMD3INV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x440000EC"/>
      <edc:AdjustPoint edc:offset="0x10" edc:_addr="0x440000F0"/>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="MISCSTAT" edc:nzwidth="0x20" edc:access="----------------------n---------" edc:por="00000001000000000000000010000001" edc:mclr="00000001000000000000000010000001" edc:impl="0x200" edc:_addr="0x44000100">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CFG">
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="CLDORDY" edc:nzwidth="0x1" edc:desc="CLDO Ready"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3C" edc:_addr="0x44000104"/>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="ID" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000140"/>
      <edc:AdjustPoint edc:offset="0xBC" edc:_addr="0x44000144"/>
      <edc:SFRDef ltx:memberofperipheral="CFG" edc:cname="BCFG0" edc:nzwidth="0x20" edc:access="r-rr--------------------------r-" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xB0000002" edc:_addr="0x44000200">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CFG">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PCSCMODE" edc:nzwidth="0x1" edc:desc="PCHE Single cache Mode"/>
            <edc:AdjustPoint edc:offset="0x1A"/>
            <edc:SFRFieldDef edc:cname="CP" edc:nzwidth="0x1" edc:desc="Boot Code Protect"/>
            <edc:SFRFieldDef edc:cname="SIGN" edc:nzwidth="0x1" edc:desc="Flash SIGN"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BINFOVALID0" edc:nzwidth="0x1" edc:desc="First 256-bit BCFG information Valid"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2FC" edc:_addr="0x44000204"/>
      <edc:SFRDef ltx:memberofperipheral="WDT" edc:cname="WDTCON" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnn--nnnnnnnnnnnnn" edc:impl="0xFFFF9FFF" edc:_addr="0x44000500">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="WDT">
            <edc:SFRFieldDef edc:cname="WDTWINEN" edc:nzwidth="0x1" edc:desc="Watchdog Timer Window Enable bit">
              <edc:SFRFieldSemantic edc:cname="WDTWINEN" edc:desc="Enable windowed Watchdog Timer" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="WDTWINDIS" edc:desc="Disable windowed Watchdog Timer" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SLPDIV" edc:nzwidth="0x5"/>
            <edc:SFRFieldDef edc:cname="CLKSEL" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNDIV" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ON" edc:nzwidth="0x1" edc:desc="Watchdog Timer Enable bit">
              <edc:SFRFieldSemantic edc:cname="WDTEN" edc:desc="The WDT module is enabled" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="WDTOFF" edc:desc="The WDT module is disabled" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WDTCLRKEY" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="WDT" edc:cname="WDTCONCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000504"/>
      <edc:SFRDef ltx:memberofperipheral="WDT" edc:cname="WDTCONSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000508"/>
      <edc:SFRDef ltx:memberofperipheral="WDT" edc:cname="WDTCONINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4400050C"/>
      <edc:AdjustPoint edc:offset="0xF0" edc:_addr="0x44000510"/>
      <edc:SFRDef ltx:memberofperipheral="NVM" edc:cname="NVMCON" edc:nzwidth="0x20" edc:access="----------------nnnn--------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF00F" edc:_addr="0x44000600">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVM">
            <edc:SFRFieldDef edc:cname="NVMOP" edc:nzwidth="0x4"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="LVDERR" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRERR" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WREN" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WR" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVM" edc:cname="NVMCONCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000604"/>
      <edc:SFRDef ltx:memberofperipheral="NVM" edc:cname="NVMCONSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000608"/>
      <edc:SFRDef ltx:memberofperipheral="NVM" edc:cname="NVMCONINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4400060C"/>
      <edc:SFRDef ltx:memberofperipheral="NVM" edc:cname="NVMCON2" edc:nzwidth="0x20" edc:access="nnnn---n---nnnnn-nnn--nn-------n" edc:por="00000001000111110100000000000000" edc:mclr="00000001000111110100000000000000" edc:impl="0xF11F7301" edc:_addr="0x44000610">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVM">
            <edc:SFRFieldDef edc:cname="NVMPREPG" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="RETRY" edc:nzwidth="0x2"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="VREAD1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CREAD1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEMP" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="WS" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SLEEP" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERS" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVM" edc:cname="NVMCON2CLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000614"/>
      <edc:SFRDef ltx:memberofperipheral="NVM" edc:cname="NVMCON2SET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000618"/>
      <edc:SFRDef ltx:memberofperipheral="NVM" edc:cname="NVMCON2INV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4400061C"/>
      <edc:SFRDef ltx:memberofperipheral="NVM" edc:cname="NVMKEY" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000620">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVM">
            <edc:SFRFieldDef edc:cname="NVMKEY" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x44000624"/>
      <edc:SFRDef ltx:memberofperipheral="NVM" edc:cname="NVMADDR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000630">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVM">
            <edc:SFRFieldDef edc:cname="NVMADDR" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x44000634"/>
      <edc:SFRDef ltx:memberofperipheral="NVM" edc:cname="NVMDATA0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000640">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVM">
            <edc:SFRFieldDef edc:cname="NVMDATA0" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x44000644"/>
      <edc:SFRDef ltx:memberofperipheral="NVM" edc:cname="NVMDATA1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000650">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVM">
            <edc:SFRFieldDef edc:cname="NVMDATA1" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x44000654"/>
      <edc:SFRDef ltx:memberofperipheral="NVM" edc:cname="NVMDATA2" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000660">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVM">
            <edc:SFRFieldDef edc:cname="NVMDATA2" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x44000664"/>
      <edc:SFRDef ltx:memberofperipheral="NVM" edc:cname="NVMDATA3" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000670">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVM">
            <edc:SFRFieldDef edc:cname="NVMDATA3" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4C" edc:_addr="0x44000674"/>
      <edc:SFRDef ltx:memberofperipheral="NVM" edc:cname="NVMSRCADDR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x440006C0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVM">
            <edc:SFRFieldDef edc:cname="NVMSRCADDR" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x440006C4"/>
      <edc:SFRDef ltx:memberofperipheral="NVM" edc:cname="NVMPWPLT" edc:nzwidth="0x20" edc:access="n-------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x80FFFFFF" edc:_addr="0x440006D0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVM">
            <edc:SFRFieldDef edc:cname="PWPLT" edc:nzwidth="0x18"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="ULOCK" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVM" edc:cname="NVMPWPLTCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x440006D4"/>
      <edc:SFRDef ltx:memberofperipheral="NVM" edc:cname="NVMPWPLTSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x440006D8"/>
      <edc:SFRDef ltx:memberofperipheral="NVM" edc:cname="NVMPWPLTINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x440006DC"/>
      <edc:SFRDef ltx:memberofperipheral="NVM" edc:cname="NVMPWPGTE" edc:nzwidth="0x20" edc:access="n-------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="10000000111111111111111111111111" edc:mclr="10000000111111111111111111111111" edc:impl="0x80FFFFFF" edc:_addr="0x440006E0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVM">
            <edc:SFRFieldDef edc:cname="PWPGTE" edc:nzwidth="0x18"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="ULOCK" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVM" edc:cname="NVMPWPGTECLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x440006E4"/>
      <edc:SFRDef ltx:memberofperipheral="NVM" edc:cname="NVMPWPGTESET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x440006E8"/>
      <edc:SFRDef ltx:memberofperipheral="NVM" edc:cname="NVMPWPGTEINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x440006EC"/>
      <edc:SFRDef ltx:memberofperipheral="NVM" edc:cname="NVMLBWP" edc:nzwidth="0x20" edc:access="n-------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="10000000111111111111111111111111" edc:mclr="10000000111111111111111111111111" edc:impl="0x80FFFFFF" edc:_addr="0x440006F0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVM">
            <edc:SFRFieldDef edc:cname="LBWP0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LBWP1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LBWP2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LBWP3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LBWP4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LBWP5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LBWP6" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LBWP7" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LBWP8" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LBWP9" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LBWP10" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LBWP11" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LBWP12" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LBWP13" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LBWP14" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LBWP15" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LBWP16" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LBWP17" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LBWP18" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LBWP19" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LBWP20" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LBWP21" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LBWP22" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LBWP23" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="ULOCK" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVM" edc:cname="NVMLBWPCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x440006F4"/>
      <edc:SFRDef ltx:memberofperipheral="NVM" edc:cname="NVMLBWPSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x440006F8"/>
      <edc:SFRDef ltx:memberofperipheral="NVM" edc:cname="NVMLBWPINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x440006FC"/>
      <edc:AdjustPoint edc:offset="0x100" edc:_addr="0x44000700"/>
      <edc:SFRDef ltx:memberofperipheral="PFW" edc:cname="IFT_CON" edc:nzwidth="0x20" edc:access="----------------nnn-------------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xE000" edc:_addr="0x44000800">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PFW">
            <edc:AdjustPoint edc:offset="0xD"/>
            <edc:SFRFieldDef edc:cname="FRZ" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SIDL" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ON" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x44000804"/>
      <edc:SFRDef ltx:memberofperipheral="PFW" edc:cname="IFT_CRCCON" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnn---------nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFF007" edc:_addr="0x44000810">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PFW">
            <edc:SFRFieldDef edc:cname="AUTOR" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBITO" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PAUSE" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="PLEN32" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DONE" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CRCEN" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PERIOD" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x44000814"/>
      <edc:SFRDef ltx:memberofperipheral="PFW" edc:cname="IFT_CRCMADR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000820">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PFW">
            <edc:SFRFieldDef edc:cname="IFT_CRCMADR" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x44000824"/>
      <edc:SFRDef ltx:memberofperipheral="PFW" edc:cname="IFT_CRCMLEN" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x44000830">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PFW">
            <edc:SFRFieldDef edc:cname="CRCMLEN" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x44000834"/>
      <edc:SFRDef ltx:memberofperipheral="PFW" edc:cname="IFT_CRCIV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000840">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PFW">
            <edc:SFRFieldDef edc:cname="CRCIV" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x44000844"/>
      <edc:SFRDef ltx:memberofperipheral="PFW" edc:cname="IFT_CRCACC" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000850">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PFW">
            <edc:SFRFieldDef edc:cname="CRCACC" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x44000854"/>
      <edc:SFRDef ltx:memberofperipheral="PFW" edc:cname="IFT_CRCPOLY" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000860">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PFW">
            <edc:SFRFieldDef edc:cname="CYCPOLY" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x44000864"/>
      <edc:SFRDef ltx:memberofperipheral="PFW" edc:cname="IFT_CRCFXOR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000870">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PFW">
            <edc:SFRFieldDef edc:cname="CRCFXOR" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x44000874"/>
      <edc:SFRDef ltx:memberofperipheral="PFW" edc:cname="IFT_CRCSUM" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000880">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PFW">
            <edc:SFRFieldDef edc:cname="CRCSUM" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x44000884"/>
      <edc:SFRDef ltx:memberofperipheral="PFW" edc:cname="IFT_ECCCON" edc:nzwidth="0x20" edc:access="----------------n----nnnn----nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x8787" edc:_addr="0x44000890">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PFW">
            <edc:SFRFieldDef edc:cname="FLT_MD" edc:nzwidth="0x3"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="EVENT" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CTLFLT" edc:nzwidth="0x3"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="FLTEN" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x44000894"/>
      <edc:SFRDef ltx:memberofperipheral="PFW" edc:cname="IFT_ECCFLT" edc:nzwidth="0x20" edc:access="-------nnnnnnnnn-------nnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1FF01FF" edc:_addr="0x440008A0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PFW">
            <edc:SFRFieldDef edc:cname="FLT1PTR" edc:nzwidth="0x9"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="FLT2PTR" edc:nzwidth="0x9"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x440008A4"/>
      <edc:SFRDef ltx:memberofperipheral="PFW" edc:cname="IFT_ECCADR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x440008B0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PFW">
            <edc:SFRFieldDef edc:cname="ECCADR" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x440008B4"/>
      <edc:SFRDef ltx:memberofperipheral="PFW" edc:cname="IFT_ECCPAR" edc:nzwidth="0x20" edc:access="n------nnnnnnnnnn------nnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x81FF81FF" edc:_addr="0x440008C0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PFW">
            <edc:SFRFieldDef edc:cname="SECIN" edc:nzwidth="0x9"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="DEDIN" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SECOUT" edc:nzwidth="0x9"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="DEDOUT" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x440008C4"/>
      <edc:SFRDef ltx:memberofperipheral="PFW" edc:cname="IFT_ECCSYN" edc:nzwidth="0x20" edc:access="nnnn-nnn-----nnnn------nnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF70781FF" edc:_addr="0x440008D0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PFW">
            <edc:SFRFieldDef edc:cname="SECSYN" edc:nzwidth="0x9"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="DEDSYS" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SERR" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DERR" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CERR" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="CTLSTAT" edc:nzwidth="0x3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PERR0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PERR1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PERR2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PERR3" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1C" edc:_addr="0x440008D4"/>
      <edc:SFRDef ltx:memberofperipheral="PFW" edc:cname="DFT_VALCON" edc:nzwidth="0x20" edc:access="----------------n---------------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x8000" edc:_addr="0x440008F0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PFW">
            <edc:AdjustPoint edc:offset="0xF"/>
            <edc:SFRFieldDef edc:cname="VAL_ON" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x440008F4"/>
      <edc:SFRDef ltx:memberofperipheral="PFW" edc:cname="DFT_VALP1RR01" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000900">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PFW">
            <edc:SFRFieldDef edc:cname="PR1RR0" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="P1RR1" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x44000904"/>
      <edc:SFRDef ltx:memberofperipheral="PFW" edc:cname="DFT_VALP1RR23" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000910">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PFW">
            <edc:SFRFieldDef edc:cname="PR1RR2" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="P1RR3" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x44000914"/>
      <edc:SFRDef ltx:memberofperipheral="PFW" edc:cname="DFT_VALP1RR45" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000920">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PFW">
            <edc:SFRFieldDef edc:cname="PR1RR4" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="P1RR5" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x44000924"/>
      <edc:SFRDef ltx:memberofperipheral="PFW" edc:cname="DFT_VALP1RR67" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000930">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PFW">
            <edc:SFRFieldDef edc:cname="PR1RR6" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="P1RR7" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x44000934"/>
      <edc:SFRDef ltx:memberofperipheral="PFW" edc:cname="DFT_VALP2RR01" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000940">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PFW">
            <edc:SFRFieldDef edc:cname="PR2RR0" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="P2RR1" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x44000944"/>
      <edc:SFRDef ltx:memberofperipheral="PFW" edc:cname="DFT_VALP2RR23" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000950">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PFW">
            <edc:SFRFieldDef edc:cname="PR2RR2" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="P2RR3" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x44000954"/>
      <edc:SFRDef ltx:memberofperipheral="PFW" edc:cname="DFT_VALP2RR45" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000960">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PFW">
            <edc:SFRFieldDef edc:cname="PR2RR4" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="P2RR5" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x44000964"/>
      <edc:SFRDef ltx:memberofperipheral="PFW" edc:cname="DFT_VALP2RR67" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000970">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PFW">
            <edc:SFRFieldDef edc:cname="PR2RR6" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="P2RR7" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8C" edc:_addr="0x44000974"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="OSCCON" edc:nzwidth="0x20" edc:access="-----nnnn-n-----nnnnnnnnn--nn-nn" edc:por="00000000001000000000000000000101" edc:mclr="00000000001000000000000000000101" edc:impl="0x7A0FF9B" edc:_addr="0x44000A00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CRU">
            <edc:SFRFieldDef edc:cname="OSWEN" edc:nzwidth="0x1" edc:desc="Oscillator Switch Enable bit">
              <edc:SFRFieldSemantic edc:cname="SWITCH" edc:desc="Request oscillator switch to selection specified by NOSC[3:0] bits" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SWITCH_COMPLETE" edc:desc="Oscillator switch is complete" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SOSCEN" edc:nzwidth="0x1" edc:desc="32 kHz Secondary (LP) Oscillator Enable bit">
              <edc:SFRFieldSemantic edc:cname="ON" edc:desc="Enable Secondary Oscillator" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Disable Secondary Oscillator" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CF" edc:nzwidth="0x1" edc:desc="Clock Fail Detect bit (Read / writable / Clearable by application)">
              <edc:SFRFieldSemantic edc:cname="FAIL_DET" edc:desc="FSCM has detected clock failure" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NO_FAILDET" edc:desc="FSCM has not detected clock failure" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SLPEN" edc:nzwidth="0x1" edc:desc="Enable SLEEP Mode bit">
              <edc:SFRFieldSemantic edc:cname="SLEEP" edc:desc="When a WAIT Instruction is executed device will enter SLEEP Mode" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="IDLE" edc:desc="When a WAIT instruction is executed device will enter IDLE Mode" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CLKLOCK" edc:nzwidth="0x1" edc:desc="Clock Lock Enabled bit">
              <edc:SFRFieldSemantic edc:cname="LOCKED" edc:desc="All clock and PLL configuration registers are locked.  These include OSCCON, OSCTRIM, SPLLCON, UPLLCON, PBxDIV" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="UNLOCKED" edc:desc="Clock and PLL selection registers are not locked, configurations may be modified" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NOSC" edc:nzwidth="0x4" edc:desc="New Oscillator Selection bits">
              <edc:SFRFieldSemantic edc:cname="FRCDIV" edc:desc="Fast RC Oscillator (FRC) divided by OSCCON.FRCDIV ( Supports FRC/16 and FRC/1)" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SPLL" edc:desc="System PLL (SPLL1 Module) (input clock and divider set by SPLLCON)" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="POSC" edc:desc="Primary Oscillator" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SOSC" edc:desc="Secondary Oscillator (SOSC)" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="LPRC" edc:desc="Low Power RC Oscillator (LPRC)" edc:when="(field &amp; 0xF) == 0x04"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="COSC" edc:nzwidth="0x4" edc:desc="Current Oscillator Selection bits (Read-only)">
              <edc:SFRFieldSemantic edc:cname="FRCDIV" edc:desc="Fast RC Oscillator (FRC) divided by OSCCON.FRCDIV (Supports FRC/16 and FRC/1)" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SPLL" edc:desc="System PLL (SPLL1 Module) (input clock and divider set by SPLLCON)" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="POSC" edc:desc="Primary Oscillator- POSC" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SOSC" edc:desc="Secondary Oscillator (SOSC)" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="LPRC" edc:desc="Low Power RC Oscillator (LPRC)" edc:when="(field &amp; 0xF) == 0x04"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WAKE2SPD" edc:nzwidth="0x1" edc:desc="2-Speed startup enabled in Sleep mode bit">
              <edc:SFRFieldSemantic edc:cname="FRC" edc:desc="When the device EXITS Sleep Mode, the sys_clk will be from FRC until the selected clock is ready" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SELECTED_CLK" edc:desc="When the device EXITS Sleep Mode, the sys_clk will be from the selected clock." edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DRMEN" edc:nzwidth="0x1" edc:desc="Enable Dream Mode bit">
              <edc:SFRFieldSemantic edc:cname="SLEEP" edc:desc="When the cpu_si_sleep input is asserted and SLPEN = 1, DMA transfer complete causes SLEEP Mode to be entered" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NO_EFFECT" edc:desc="DMA transfer has no effect" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FRCDIV" edc:nzwidth="0x3" edc:desc="Fast RC Clock Divider bits">
              <edc:SFRFieldSemantic edc:cname="DIV_1" edc:desc="FRC Divide by 1" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DIV_2" edc:desc="FRC Divide by 2" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DIV_4" edc:desc="FRC Divide by 4" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DIV_8" edc:desc="FRC Divide by 8" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="DIV_16" edc:desc="FRC Divide by 16" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DIV_32" edc:desc="FRC Divide by 32" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="DIV_64" edc:desc="FRC Divide by 64" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="DIV_256" edc:desc="FRC Divide by 256" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="OSCCONCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000A04"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="OSCCONSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000A08"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="OSCCONINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000A0C"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="OSCTUN" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x44000A10">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CRU">
            <edc:SFRFieldDef edc:cname="TUN" edc:nzwidth="0x6" edc:desc="Internal Fast RC (FRC) Oscillator Tuning bits">
              <edc:SFRFieldSemantic edc:cname="Max" edc:desc="Maximum Frequency" edc:when="(field &amp; 0x3F) == 0x1F"/>
              <edc:SFRFieldSemantic edc:cname="Center" edc:desc="Center Frequency, oscillator is running at calibrated frequency" edc:when="(field &amp; 0x3F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="Min" edc:desc="Minimum Frequency" edc:when="(field &amp; 0x3F) == 0x20"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="OSCTUNCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000A14"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="OSCTUNSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000A18"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="OSCTUNINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000A1C"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="SPLLCON" edc:nzwidth="0x20" edc:access="nn----------nnnnnnnnnnnn--nnn---" edc:por="11000000000000010000000000101000" edc:mclr="11000000000000010000000000101000" edc:impl="0xC00FFF38" edc:_addr="0x44000A20">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CRU">
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SPLLPWDN" edc:nzwidth="0x1" edc:desc="PLL Power Down Register bit">
              <edc:SFRFieldSemantic edc:cname="PLL_OFF" edc:desc="PLL is powered down" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="PLL_ON" edc:desc="PLL is active" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SPLLFLOCK" edc:nzwidth="0x1" edc:desc="System PLL Force Lock">
              <edc:SFRFieldSemantic edc:cname="ASSERT" edc:desc="Force the SPLL lock signal to be asserted" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NO_ASSERT" edc:desc="Do not force the SPLL lock signal to be asserted" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SPLLRST" edc:nzwidth="0x1" edc:desc="System PLL Reset">
              <edc:SFRFieldSemantic edc:cname="ASSERT" edc:desc="Assert the reset to the SPLL" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NO_ASSERT" edc:desc="De-assert the reset to the SPLL" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SPLLPOSTDIV1" edc:nzwidth="0x8" edc:desc="SPLL Clock 1 Divide Value, 1 to 255"/>
            <edc:SFRFieldDef edc:cname="SPLLPOSTDIV2" edc:nzwidth="0x4" edc:desc="SPLL Clock 2 Divide Value, 1 to 15">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Disable" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DIV_1" edc:desc="Second post divide by 1" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DIV_2" edc:desc="Second post divide by 2" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DIV_3" edc:desc="Second post divide by 3" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="DIV_4" edc:desc="Second post divide by 4" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DIV_5" edc:desc="Second post divide by 5" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="DIV_6" edc:desc="Second post divide by 6" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="DIV_7" edc:desc="Second post divide by 7" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="DIV_8" edc:desc="Second post divide by 8" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="DIV_9" edc:desc="Second post divide by 9" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="DIV_10" edc:desc="Second post divide by 10" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="DIV_11" edc:desc="Second post divide by 11" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="DIV_12" edc:desc="Second post divide by 12" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="DIV_13" edc:desc="Second post divide by 13" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="DIV_14" edc:desc="Second post divide by 14" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="DIV_15" edc:desc="Second post divide by 15" edc:when="(field &amp; 0xF) == 0x0F"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="SPLL_BYP" edc:nzwidth="0x2" edc:desc="SPLL Clock 2 Source">
              <edc:SFRFieldSemantic edc:cname="SPLL3" edc:desc="SPLL3 (RFPLL) Clock is the clock source for ADC CP Clock Generation." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="FRC" edc:desc="FRC is used as clock source for ADC CP Clock Generation." edc:when="(field &amp; 0x3) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="POSC" edc:desc="POSC is used as clock source for ADC CP Clock Generation." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="SPLLCONCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000A24"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="SPLLCONSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000A28"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="SPLLCONINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000A2C"/>
      <edc:SFRDef ltx:memberofperipheral="RCON" edc:cname="RCON" edc:nzwidth="0x20" edc:access="nn--nnnn-------------nn-nnnnnnnn" edc:por="00000000000000000000000000000011" edc:mclr="00000000000000000000000000000011" edc:impl="0xCF0006FF" edc:_addr="0x44000A30">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RCON">
            <edc:SFRFieldDef edc:cname="POR" edc:nzwidth="0x1" edc:desc="Power-On Reset Flag bit">
              <edc:SFRFieldSemantic edc:cname="POR" edc:desc="A Power-up Reset has occurred." edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NO_POR" edc:desc="A Power-up Reset has not occurred." edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BOR" edc:nzwidth="0x1" edc:desc="Brown-out Reset Flag bit">
              <edc:SFRFieldSemantic edc:cname="BOR" edc:desc="A Brown-out Reset has occurred." edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NO_BOR" edc:desc="A Brown-out Reset has not occurred." edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="IDLE" edc:nzwidth="0x1" edc:desc="Wake from Idle Flag bit">
              <edc:SFRFieldSemantic edc:cname="IDLE" edc:desc="Device was in Idle mode." edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NOT_IDLE" edc:desc="Device was not in Idle mode." edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SLEEP" edc:nzwidth="0x1" edc:desc="Wake from Sleep Flag bit">
              <edc:SFRFieldSemantic edc:cname="SLEEP" edc:desc="Device has been in Sleep mode." edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NOT_SLEEP" edc:desc="Device has not been in Sleep mode." edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WDTO" edc:nzwidth="0x1" edc:desc="Watchdog Timer Time-Out Flag bit">
              <edc:SFRFieldSemantic edc:cname="WDTO" edc:desc="WDT Time-out has occurred and caused a reset." edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NOT_WDTO" edc:desc="WDT Time-out has not occurred." edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DMTO" edc:nzwidth="0x1" edc:desc="Deadman Timer Time-Out Flag bit">
              <edc:SFRFieldSemantic edc:cname="DMTO" edc:desc="DMT Time-out has occurred and caused a reset." edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NOT_DMTO" edc:desc="DMT Time-out has not occurred." edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SWR" edc:nzwidth="0x1" edc:desc="Software Reset Flag bit">
              <edc:SFRFieldSemantic edc:cname="SWR" edc:desc="A Software Commanded Reset has occurred." edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NOT_SWR" edc:desc="A Software Commanded Reset has not occurred." edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EXTR" edc:nzwidth="0x1" edc:desc="External Reset (MCLR) Status bit">
              <edc:SFRFieldSemantic edc:cname="EXTR" edc:desc="A Master Clear (pin) Reset has occurred." edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NOT_EXTR" edc:desc="A Master Clear (pin) Reset has not occurred." edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CMR" edc:nzwidth="0x1" edc:desc="Configuration Mismatch Flag bit">
              <edc:SFRFieldSemantic edc:cname="CMR" edc:desc="A Configuration Mismatch Reset Event has occurred." edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NOT_CMR" edc:desc="A Configuration Mismatch Reset Event has not occurred." edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DPSLP" edc:nzwidth="0x1" edc:desc="DPSLP Deep Sleep Mode Flag Bit">
              <edc:SFRFieldSemantic edc:cname="DSLP" edc:desc="Deep Sleep Mode has occurred." edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NOT_DSLP" edc:desc="Deep Sleep Mode has not occurred." edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0xD"/>
            <edc:SFRFieldDef edc:cname="NVMEOL" edc:nzwidth="0x1" edc:desc="NVM End of Life Flag Bit">
              <edc:SFRFieldSemantic edc:cname="NO_NVMEOL" edc:desc="A NVM EOL Failure has not occurred." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="NVMEOL" edc:desc="A NVM EOL Failure has occurred." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NVMLTA" edc:nzwidth="0x1" edc:desc="NVM Life Time Alert Flag Bit">
              <edc:SFRFieldSemantic edc:cname="NO_NVMLTA" edc:desc="A NVM LTA Error has not occurred." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="NVMLTA" edc:desc="A NVM LTA Error has occurred." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BCFGFAIL" edc:nzwidth="0x1" edc:desc="BCFG Failure Flag Bit">
              <edc:SFRFieldSemantic edc:cname="NO_BCFGFAIL" edc:desc="A BCFG Failure has not occurred." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="BCFGFAIL" edc:desc="A BCFG Failure has occurred." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BCFGERR" edc:nzwidth="0x1" edc:desc="BCFG Error Flag Bit">
              <edc:SFRFieldSemantic edc:cname="NO_BCFGERR" edc:desc="A BCFG Error has not occurred." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="BCFGERR" edc:desc="A BCFG Error has occurred." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PORCORE" edc:nzwidth="0x1" edc:desc="Core Voltage POR Flag bit">
              <edc:SFRFieldSemantic edc:cname="PORCORE" edc:desc="A Power-up Reset has occurred due to Core Voltage." edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NO_PORCORE" edc:desc="A Power-up Reset has not occurred due to Core Voltage." edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PORIO" edc:nzwidth="0x1" edc:desc="IO Voltage POR Flag bit">
              <edc:SFRFieldSemantic edc:cname="PORIO" edc:desc="A Power-up Reset has occurred due to IO Voltage." edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NO_PORIO" edc:desc="A Power-up Reset has not occurred due to IO Voltage." edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RCON" edc:cname="RCONCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000A34"/>
      <edc:SFRDef ltx:memberofperipheral="RCON" edc:cname="RCONSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000A38"/>
      <edc:SFRDef ltx:memberofperipheral="RCON" edc:cname="RCONINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000A3C"/>
      <edc:SFRDef ltx:memberofperipheral="RCON" edc:cname="RSWRST" edc:nzwidth="0x20" edc:access="-------------------------------w" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1" edc:_addr="0x44000A40">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RCON">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Trigger">
              <edc:SFRFieldSemantic edc:cname="SWRST" edc:desc="Enable software reset event" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NO_SWRST" edc:desc="Do not enable software reset event" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RCON" edc:cname="RSWRSTCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000A44"/>
      <edc:SFRDef ltx:memberofperipheral="RCON" edc:cname="RSWRSTSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000A48"/>
      <edc:SFRDef ltx:memberofperipheral="RCON" edc:cname="RSWRSTINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000A4C"/>
      <edc:SFRDef ltx:memberofperipheral="RCON" edc:cname="RNMICON" edc:nzwidth="0x20" edc:access="------nnn---nnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x38FFFFF" edc:_addr="0x44000A50">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RCON">
            <edc:SFRFieldDef edc:cname="NMICNT" edc:nzwidth="0x10" edc:desc="NMI Reset counter value">
              <edc:SFRFieldSemantic edc:cname="NODLY" edc:desc="No delay between NMI assertion and device reset event" edc:when="(field &amp; 0xFFFF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="1CLKDLY" edc:desc="1 sys_clk cycle that Software has to clear the NMI event before a device reset is performed." edc:when="(field &amp; 0xFFFF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="2CLKDLY" edc:desc="2 sys_clk cycles that Software has to clear the NMI event before a device reset is performed." edc:when="(field &amp; 0xFFFF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="64KCLKDLY" edc:desc="65535 sys_clk cycles that Software has to clear the NMI event before a device reset is performed." edc:when="(field &amp; 0xFFFF) == 0xFFFF"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WDTS" edc:nzwidth="0x1" edc:desc="Watch-Dog Timer Time-Out in Sleep Flag bit">
              <edc:SFRFieldSemantic edc:cname="WDTS" edc:desc="WDT Time-out has occurred during sleep_mode and caused a wake-up from sleep." edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NO_WDTS" edc:desc="WDT Time-out has not occurred during sleep_mode." edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CF" edc:nzwidth="0x1" edc:desc="Clock Fail Detect bit">
              <edc:SFRFieldSemantic edc:cname="CFAIL" edc:desc="FSCM has detected clock failure and caused an NMI" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NO_FAILDET" edc:desc="FSCM has not detected clock failure" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LVD" edc:nzwidth="0x1" edc:desc="Programmable Low Voltage Detect Event">
              <edc:SFRFieldSemantic edc:cname="LVD" edc:desc="PLVD has detected a low voltage condition and caused an NMI" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NO_LVD" edc:desc="PLVD has not detected a low voltage condition" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="GNMI" edc:nzwidth="0x1" edc:desc="External / Generic NMI Event">
              <edc:SFRFieldSemantic edc:cname="NMI" edc:desc="A general NMI event has been detected and caused an NMI" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NO_NMI" edc:desc="A general NMI event has not been detected." edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SWNMI" edc:nzwidth="0x1" edc:desc="Software NMI Trigger">
              <edc:SFRFieldSemantic edc:cname="SWNMI" edc:desc="Writing a 1 to this bit will cause an NMI to be generated" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NO_SWNMI" edc:desc="Writing a 0 to this bit will have no effect." edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WDTR" edc:nzwidth="0x1" edc:desc="Watchdog Timer Time-Out in Run Flag bit">
              <edc:SFRFieldSemantic edc:cname="WDTR" edc:desc="WDT Time-out has occurred and caused a NMI." edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NO_WDTR" edc:desc="WDT Time-out has not occurred." edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DMTO" edc:nzwidth="0x1" edc:desc="Deadman Timer Time-Out Flag bit">
              <edc:SFRFieldSemantic edc:cname="DMTO" edc:desc="DMT Time-out has occurred and caused a NMI." edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NO_DMTO" edc:desc="DMT Time-out has not occurred." edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RCON" edc:cname="RNMICONCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000A54"/>
      <edc:SFRDef ltx:memberofperipheral="RCON" edc:cname="RNMICONSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000A58"/>
      <edc:SFRDef ltx:memberofperipheral="RCON" edc:cname="RNMICONINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000A5C"/>
      <edc:AdjustPoint edc:offset="0x10" edc:_addr="0x44000A60"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="REFO1CON" edc:nzwidth="0x20" edc:access="-nnnnnnnnnnnnnnnnnnnn-nn----nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FFFFB0F" edc:_addr="0x44000A70">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CRU">
            <edc:SFRFieldDef edc:cname="ROSEL" edc:nzwidth="0x4" edc:desc="Reference Clock Source Select bits">
              <edc:SFRFieldSemantic edc:cname="REFCLKI" edc:desc="REFI Pin" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="SYSCLK" edc:desc="System clock (reference clock reflects any device clock switching)" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="PBCLK1" edc:desc="Peripheral clock 1 (reference clock reflects any peripheral clock switching)" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="SPLL3" edc:desc="System PLL3 (Clock-3)" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="LPRC" edc:desc="LPRC" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="SOSC" edc:desc="SOSC" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="POSC" edc:desc="POSC" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SPLL1" edc:desc="System PLL1 (Clock-1)" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FRC" edc:desc="FRC" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ACTIVE" edc:nzwidth="0x1" edc:desc="Reference Clock Request Status bit">
              <edc:SFRFieldSemantic edc:cname="ACTIVE" edc:desc="Reference clock request is active (User should not update this REFOCON register)" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NOT_ACTIVE" edc:desc="Reference clock request is not active (User can update this REFOCON register)" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIVSWEN" edc:nzwidth="0x1" edc:desc="Clock RODIV/ROTRIM switch enabled.">
              <edc:SFRFieldSemantic edc:cname="SWINPROGRESS" edc:desc="Clock Divider Switching currently in progress." edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SWCOMPLETE" edc:desc="Clock Divider Switch has completed." edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RSLP" edc:nzwidth="0x1" edc:desc="Reference Oscillator Run in Sleep bit">
              <edc:SFRFieldSemantic edc:cname="RSLP" edc:desc="Reference Oscillator output continues to run in Sleep" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NO_RSLP" edc:desc="Reference Oscillator output is disabled in Sleep" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="OE" edc:nzwidth="0x1" edc:desc="Reference Clock Output Enable bit">
              <edc:SFRFieldSemantic edc:cname="REFO1_OE" edc:desc="Reference clock is driven out on REFO1 pin" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NO_REFO1_OE" edc:desc="Reference clock is not driven out on REFO1 pin." edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SIDL" edc:nzwidth="0x1" edc:desc="Peripheral Stop in Idle Mode bit">
              <edc:SFRFieldSemantic edc:cname="SIDL" edc:desc="Discontinue module operation when device enters Idle mode" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NO_SIDL" edc:desc="Continue module operation in Idle mode" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FRZ" edc:nzwidth="0x1" edc:desc="Freeze in Debug mode bit">
              <edc:SFRFieldSemantic edc:cname="FRZ" edc:desc="When emulator is in Debug mode, module freezes operation" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NO_FRZ" edc:desc="When emulator is in Debug mode, module continues operation" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ON" edc:nzwidth="0x1" edc:desc="Output Enable bit">
              <edc:SFRFieldSemantic edc:cname="ON" edc:desc="Reference Oscillator Module enabled" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Reference Oscillator Module disabled" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RODIV" edc:nzwidth="0xF" edc:desc="Reference Clock Divider bits">
              <edc:SFRFieldSemantic edc:cname="65K" edc:desc="REFO1 clock is Base clock frequency divided by 65,534 (32,767 *2)" edc:when="(field &amp; 0x7FFF) == 0x7FFF"/>
              <edc:SFRFieldSemantic edc:cname="4" edc:desc="REFO1 clock is Base clock frequency divided by 4 (2*2)" edc:when="(field &amp; 0x7FFF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="2" edc:desc="REFO1 clock is Base clock frequency divided by 2 (1*2)" edc:when="(field &amp; 0x7FFF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="REFO1 clock is same frequency as Base clock (no divider)" edc:when="(field &amp; 0x7FFF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="REFO1CONCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000A74"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="REFO1CONSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000A78"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="REFO1CONINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000A7C"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="REFO1TRIM" edc:nzwidth="0x20" edc:access="nnnnnnnnn-----------------------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF800000" edc:_addr="0x44000A80">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CRU">
            <edc:AdjustPoint edc:offset="0x17"/>
            <edc:SFRFieldDef edc:cname="ROTRIM" edc:nzwidth="0x9" edc:desc="Trim bits - Provides fractional additive to RODIV value for 1/2 period of REFO1 clock">
              <edc:SFRFieldSemantic edc:cname="ZERO" edc:desc="0/512 (0.0) divisor added to RODIV value" edc:when="(field &amp; 0x1FF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="1/512 (0.001953125) divisor added to RODIV value" edc:when="(field &amp; 0x1FF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="2" edc:desc="2/512 (0.00390625) divisor added to RODIV value" edc:when="(field &amp; 0x1FF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="256" edc:desc="256/512 (0.5000) divisor added to RODIV value" edc:when="(field &amp; 0x1FF) == 0x100"/>
              <edc:SFRFieldSemantic edc:cname="511" edc:desc="511/512 (0.998046875) divisor added to RODIV value" edc:when="(field &amp; 0x1FF) == 0x1FF"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="REFO1TRIMCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000A84"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="REFO1TRIMSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000A88"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="REFO1TRIMINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000A8C"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="REFO2CON" edc:nzwidth="0x20" edc:access="-nnnnnnnnnnnnnnnnnnnn-nn----nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FFFFB0F" edc:_addr="0x44000A90">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CRU">
            <edc:SFRFieldDef edc:cname="ROSEL" edc:nzwidth="0x4" edc:desc="Reference Clock Source Select bits">
              <edc:SFRFieldSemantic edc:cname="REFCLKI" edc:desc="REFI Pin" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="SYSCLK" edc:desc="System clock (reference clock reflects any device clock switching)" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="PBCLK1" edc:desc="Peripheral clock 1 (reference clock reflects any peripheral clock switching)" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="SPLL3" edc:desc="System PLL3 (Clock-3)" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="LPRC" edc:desc="LPRC" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="SOSC" edc:desc="SOSC" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="POSC" edc:desc="POSC" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SPLL1" edc:desc="System PLL1 (Clock-1)" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FRC" edc:desc="FRC" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ACTIVE" edc:nzwidth="0x1" edc:desc="Reference Clock Request Status bit">
              <edc:SFRFieldSemantic edc:cname="ACTIVE" edc:desc="Reference clock request is active (User should not update this REFOCON register)" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NOT_ACTIVE" edc:desc="Reference clock request is not active (User can update this REFOCON register)" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIVSWEN" edc:nzwidth="0x1" edc:desc="Clock RODIV/ROTRIM switch enabled.">
              <edc:SFRFieldSemantic edc:cname="SWINPROGRESS" edc:desc="Clock Divider Switching currently in progress." edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SWCOMPLETE" edc:desc="Clock Divider Switch has completed." edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RSLP" edc:nzwidth="0x1" edc:desc="Reference Oscillator Run in Sleep bit">
              <edc:SFRFieldSemantic edc:cname="RSLP" edc:desc="Reference Oscillator output continues to run in Sleep" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NO_RSLP" edc:desc="Reference Oscillator output is disabled in Sleep" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="OE" edc:nzwidth="0x1" edc:desc="Reference Clock Output Enable bit">
              <edc:SFRFieldSemantic edc:cname="REFO2_OE" edc:desc="Reference clock is driven out on REFO2 pin" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NO_REFO2_OE" edc:desc="Reference clock is not driven out on REFO2 pin." edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SIDL" edc:nzwidth="0x1" edc:desc="Peripheral Stop in Idle Mode bit">
              <edc:SFRFieldSemantic edc:cname="SIDL" edc:desc="Discontinue module operation when device enters Idle mode" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NO_SIDL" edc:desc="Continue module operation in Idle mode" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FRZ" edc:nzwidth="0x1" edc:desc="Freeze in Debug mode bit">
              <edc:SFRFieldSemantic edc:cname="FRZ" edc:desc="When emulator is in Debug mode, module freezes operation" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NO_FRZ" edc:desc="When emulator is in Debug mode, module continues operation" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ON" edc:nzwidth="0x1" edc:desc="Output Enable bit">
              <edc:SFRFieldSemantic edc:cname="ON" edc:desc="Reference Oscillator Module enabled" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Reference Oscillator Module disabled" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RODIV" edc:nzwidth="0xF" edc:desc="Reference Clock Divider bits">
              <edc:SFRFieldSemantic edc:cname="65K" edc:desc="REFO2 clock is Base clock frequency divided by 65,534 (32,767 *2)" edc:when="(field &amp; 0x7FFF) == 0x7FFF"/>
              <edc:SFRFieldSemantic edc:cname="4" edc:desc="REFO2 clock is Base clock frequency divided by 4 (2*2)" edc:when="(field &amp; 0x7FFF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="2" edc:desc="REFO2 clock is Base clock frequency divided by 2 (1*2)" edc:when="(field &amp; 0x7FFF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="REFO2 clock is same frequency as Base clock (no divider)" edc:when="(field &amp; 0x7FFF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="REFO2CONCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000A94"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="REFO2CONSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000A98"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="REFO2CONINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000A9C"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="REFO2TRIM" edc:nzwidth="0x20" edc:access="nnnnnnnnn-----------------------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF800000" edc:_addr="0x44000AA0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CRU">
            <edc:AdjustPoint edc:offset="0x17"/>
            <edc:SFRFieldDef edc:cname="ROTRIM" edc:nzwidth="0x9" edc:desc="Trim bits - Provides fractional additive to RODIV value for 1/2 period of REFO1 clock">
              <edc:SFRFieldSemantic edc:cname="ZERO" edc:desc="0/512 (0.0) divisor added to RODIV value" edc:when="(field &amp; 0x1FF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="1/512 (0.001953125) divisor added to RODIV value" edc:when="(field &amp; 0x1FF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="2" edc:desc="2/512 (0.00390625) divisor added to RODIV value" edc:when="(field &amp; 0x1FF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="256" edc:desc="256/512 (0.5000) divisor added to RODIV value" edc:when="(field &amp; 0x1FF) == 0x100"/>
              <edc:SFRFieldSemantic edc:cname="511" edc:desc="511/512 (0.998046875) divisor added to RODIV value" edc:when="(field &amp; 0x1FF) == 0x1FF"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="REFO2TRIMCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000AA4"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="REFO2TRIMSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000AA8"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="REFO2TRIMINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000AAC"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="REFO3CON" edc:nzwidth="0x20" edc:access="-nnnnnnnnnnnnnnnnnnnn-nn----nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FFFFB0F" edc:_addr="0x44000AB0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CRU">
            <edc:SFRFieldDef edc:cname="ROSEL" edc:nzwidth="0x4" edc:desc="Reference Clock Source Select bits">
              <edc:SFRFieldSemantic edc:cname="REFCLKI" edc:desc="REFI Pin" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="SYSCLK" edc:desc="System clock (reference clock reflects any device clock switching)" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="PBCLK1" edc:desc="Peripheral clock 1 (reference clock reflects any peripheral clock switching)" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="SPLL3" edc:desc="System PLL3 (Clock-3)" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="LPRC" edc:desc="LPRC" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="SOSC" edc:desc="SOSC" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="POSC" edc:desc="POSC" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SPLL1" edc:desc="System PLL1 (Clock-1)" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FRC" edc:desc="FRC" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ACTIVE" edc:nzwidth="0x1" edc:desc="Reference Clock Request Status bit">
              <edc:SFRFieldSemantic edc:cname="ACTIVE" edc:desc="Reference clock request is active (User should not update this REFOCON register)" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NOT_ACTIVE" edc:desc="Reference clock request is not active (User can update this REFOCON register)" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIVSWEN" edc:nzwidth="0x1" edc:desc="Clock RODIV/ROTRIM switch enabled.">
              <edc:SFRFieldSemantic edc:cname="SWINPROGRESS" edc:desc="Clock Divider Switching currently in progress." edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SWCOMPLETE" edc:desc="Clock Divider Switch has completed." edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RSLP" edc:nzwidth="0x1" edc:desc="Reference Oscillator Run in Sleep bit">
              <edc:SFRFieldSemantic edc:cname="RSLP" edc:desc="Reference Oscillator output continues to run in Sleep" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NO_RSLP" edc:desc="Reference Oscillator output is disabled in Sleep" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="OE" edc:nzwidth="0x1" edc:desc="Reference Clock Output Enable bit">
              <edc:SFRFieldSemantic edc:cname="REFO3_OE" edc:desc="Reference clock is driven out on REFO3 pin" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NO_REFO3_OE" edc:desc="Reference clock is not driven out on REFO3 pin." edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SIDL" edc:nzwidth="0x1" edc:desc="Peripheral Stop in Idle Mode bit">
              <edc:SFRFieldSemantic edc:cname="SIDL" edc:desc="Discontinue module operation when device enters Idle mode" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NO_SIDL" edc:desc="Continue module operation in Idle mode" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FRZ" edc:nzwidth="0x1" edc:desc="Freeze in Debug mode bit">
              <edc:SFRFieldSemantic edc:cname="FRZ" edc:desc="When emulator is in Debug mode, module freezes operation" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NO_FRZ" edc:desc="When emulator is in Debug mode, module continues operation" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ON" edc:nzwidth="0x1" edc:desc="Output Enable bit">
              <edc:SFRFieldSemantic edc:cname="ON" edc:desc="Reference Oscillator Module enabled" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Reference Oscillator Module disabled" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RODIV" edc:nzwidth="0xF" edc:desc="Reference Clock Divider bits">
              <edc:SFRFieldSemantic edc:cname="65K" edc:desc="REFO3 clock is Base clock frequency divided by 65,534 (32,767 *2)" edc:when="(field &amp; 0x7FFF) == 0x7FFF"/>
              <edc:SFRFieldSemantic edc:cname="4" edc:desc="REFO3 clock is Base clock frequency divided by 4 (2*2)" edc:when="(field &amp; 0x7FFF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="2" edc:desc="REFO3 clock is Base clock frequency divided by 2 (1*2)" edc:when="(field &amp; 0x7FFF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="REFO3 clock is same frequency as Base clock (no divider)" edc:when="(field &amp; 0x7FFF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="REFO3CONCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000AB4"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="REFO3CONSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000AB8"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="REFO3CONINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000ABC"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="REFO3TRIM" edc:nzwidth="0x20" edc:access="nnnnnnnnn-----------------------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF800000" edc:_addr="0x44000AC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CRU">
            <edc:AdjustPoint edc:offset="0x17"/>
            <edc:SFRFieldDef edc:cname="ROTRIM" edc:nzwidth="0x9" edc:desc="Trim bits - Provides fractional additive to RODIV value for 1/2 period of REFO1 clock">
              <edc:SFRFieldSemantic edc:cname="ZERO" edc:desc="0/512 (0.0) divisor added to RODIV value" edc:when="(field &amp; 0x1FF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="1/512 (0.001953125) divisor added to RODIV value" edc:when="(field &amp; 0x1FF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="2" edc:desc="2/512 (0.00390625) divisor added to RODIV value" edc:when="(field &amp; 0x1FF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="256" edc:desc="256/512 (0.5000) divisor added to RODIV value" edc:when="(field &amp; 0x1FF) == 0x100"/>
              <edc:SFRFieldSemantic edc:cname="511" edc:desc="511/512 (0.998046875) divisor added to RODIV value" edc:when="(field &amp; 0x1FF) == 0x1FF"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="REFO3TRIMCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000AC4"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="REFO3TRIMSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000AC8"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="REFO3TRIMINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000ACC"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="REFO4CON" edc:nzwidth="0x20" edc:access="-nnnnnnnnnnnnnnnnnnnn-nn----nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FFFFB0F" edc:_addr="0x44000AD0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CRU">
            <edc:SFRFieldDef edc:cname="ROSEL" edc:nzwidth="0x4" edc:desc="Reference Clock Source Select bits">
              <edc:SFRFieldSemantic edc:cname="REFCLKI" edc:desc="REFI Pin" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="SYSCLK" edc:desc="System clock (reference clock reflects any device clock switching)" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="PBCLK1" edc:desc="Peripheral clock 1 (reference clock reflects any peripheral clock switching)" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="SPLL3" edc:desc="System PLL3 (Clock-3)" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="LPRC" edc:desc="LPRC" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="SOSC" edc:desc="SOSC" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="POSC" edc:desc="POSC" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SPLL1" edc:desc="System PLL1 (Clock-1)" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FRC" edc:desc="FRC" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ACTIVE" edc:nzwidth="0x1" edc:desc="Reference Clock Request Status bit">
              <edc:SFRFieldSemantic edc:cname="ACTIVE" edc:desc="Reference clock request is active (User should not update this REFOCON register)" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NOT_ACTIVE" edc:desc="Reference clock request is not active (User can update this REFOCON register)" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIVSWEN" edc:nzwidth="0x1" edc:desc="Clock RODIV/ROTRIM switch enabled.">
              <edc:SFRFieldSemantic edc:cname="SWINPROGRESS" edc:desc="Clock Divider Switching currently in progress." edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SWCOMPLETE" edc:desc="Clock Divider Switch has completed." edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RSLP" edc:nzwidth="0x1" edc:desc="Reference Oscillator Run in Sleep bit">
              <edc:SFRFieldSemantic edc:cname="RSLP" edc:desc="Reference Oscillator output continues to run in Sleep" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NO_RSLP" edc:desc="Reference Oscillator output is disabled in Sleep" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="OE" edc:nzwidth="0x1" edc:desc="Reference Clock Output Enable bit">
              <edc:SFRFieldSemantic edc:cname="REFO4_OE" edc:desc="Reference clock is driven out on REFO4 pin" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NO_REFO4_OE" edc:desc="Reference clock is not driven out on REFO4 pin." edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SIDL" edc:nzwidth="0x1" edc:desc="Peripheral Stop in Idle Mode bit">
              <edc:SFRFieldSemantic edc:cname="SIDL" edc:desc="Discontinue module operation when device enters Idle mode" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NO_SIDL" edc:desc="Continue module operation in Idle mode" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FRZ" edc:nzwidth="0x1" edc:desc="Freeze in Debug mode bit">
              <edc:SFRFieldSemantic edc:cname="FRZ" edc:desc="When emulator is in Debug mode, module freezes operation" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NO_FRZ" edc:desc="When emulator is in Debug mode, module continues operation" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ON" edc:nzwidth="0x1" edc:desc="Output Enable bit">
              <edc:SFRFieldSemantic edc:cname="ON" edc:desc="Reference Oscillator Module enabled" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Reference Oscillator Module disabled" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RODIV" edc:nzwidth="0xF" edc:desc="Reference Clock Divider bits">
              <edc:SFRFieldSemantic edc:cname="65K" edc:desc="REFO4 clock is Base clock frequency divided by 65,534 (32,767 *2)" edc:when="(field &amp; 0x7FFF) == 0x7FFF"/>
              <edc:SFRFieldSemantic edc:cname="4" edc:desc="REFO4 clock is Base clock frequency divided by 4 (2*2)" edc:when="(field &amp; 0x7FFF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="2" edc:desc="REFO4 clock is Base clock frequency divided by 2 (1*2)" edc:when="(field &amp; 0x7FFF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="REFO4 clock is same frequency as Base clock (no divider)" edc:when="(field &amp; 0x7FFF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="REFO4CONCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000AD4"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="REFO4CONSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000AD8"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="REFO4CONINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000ADC"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="REFO4TRIM" edc:nzwidth="0x20" edc:access="nnnnnnnnn-----------------------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF800000" edc:_addr="0x44000AE0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CRU">
            <edc:AdjustPoint edc:offset="0x17"/>
            <edc:SFRFieldDef edc:cname="ROTRIM" edc:nzwidth="0x9" edc:desc="Trim bits - Provides fractional additive to RODIV value for 1/2 period of REFO1 clock">
              <edc:SFRFieldSemantic edc:cname="ZERO" edc:desc="0/512 (0.0) divisor added to RODIV value" edc:when="(field &amp; 0x1FF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="1/512 (0.001953125) divisor added to RODIV value" edc:when="(field &amp; 0x1FF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="2" edc:desc="2/512 (0.00390625) divisor added to RODIV value" edc:when="(field &amp; 0x1FF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="256" edc:desc="256/512 (0.5000) divisor added to RODIV value" edc:when="(field &amp; 0x1FF) == 0x100"/>
              <edc:SFRFieldSemantic edc:cname="511" edc:desc="511/512 (0.998046875) divisor added to RODIV value" edc:when="(field &amp; 0x1FF) == 0x1FF"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="REFO4TRIMCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000AE4"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="REFO4TRIMSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000AE8"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="REFO4TRIMINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000AEC"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="REFO5CON" edc:nzwidth="0x20" edc:access="-nnnnnnnnnnnnnnnnnnnn-nn----nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FFFFB0F" edc:_addr="0x44000AF0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CRU">
            <edc:SFRFieldDef edc:cname="ROSEL" edc:nzwidth="0x4" edc:desc="Reference Clock Source Select bits">
              <edc:SFRFieldSemantic edc:cname="REFCLKI" edc:desc="REFI Pin" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="SYSCLK" edc:desc="System clock (reference clock reflects any device clock switching)" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="PBCLK1" edc:desc="Peripheral clock 1 (reference clock reflects any peripheral clock switching)" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="SPLL3" edc:desc="System PLL3 (Clock-3)" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="LPRC" edc:desc="LPRC" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="SOSC" edc:desc="SOSC" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="POSC" edc:desc="POSC" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SPLL1" edc:desc="System PLL1 (Clock-1)" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FRC" edc:desc="FRC" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ACTIVE" edc:nzwidth="0x1" edc:desc="Reference Clock Request Status bit">
              <edc:SFRFieldSemantic edc:cname="ACTIVE" edc:desc="Reference clock request is active (User should not update this REFOCON register)" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NOT_ACTIVE" edc:desc="Reference clock request is not active (User can update this REFOCON register)" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIVSWEN" edc:nzwidth="0x1" edc:desc="Clock RODIV/ROTRIM switch enabled.">
              <edc:SFRFieldSemantic edc:cname="SWINPROGRESS" edc:desc="Clock Divider Switching currently in progress." edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SWCOMPLETE" edc:desc="Clock Divider Switch has completed." edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RSLP" edc:nzwidth="0x1" edc:desc="Reference Oscillator Run in Sleep bit">
              <edc:SFRFieldSemantic edc:cname="RSLP" edc:desc="Reference Oscillator output continues to run in Sleep" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NO_RSLP" edc:desc="Reference Oscillator output is disabled in Sleep" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="OE" edc:nzwidth="0x1" edc:desc="Reference Clock Output Enable bit">
              <edc:SFRFieldSemantic edc:cname="REFO5_OE" edc:desc="Reference clock is driven out on REFO5 pin" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NO_REFO5_OE" edc:desc="Reference clock is not driven out on REFO5 pin." edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SIDL" edc:nzwidth="0x1" edc:desc="Peripheral Stop in Idle Mode bit">
              <edc:SFRFieldSemantic edc:cname="SIDL" edc:desc="Discontinue module operation when device enters Idle mode" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NO_SIDL" edc:desc="Continue module operation in Idle mode" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FRZ" edc:nzwidth="0x1" edc:desc="Freeze in Debug mode bit">
              <edc:SFRFieldSemantic edc:cname="FRZ" edc:desc="When emulator is in Debug mode, module freezes operation" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NO_FRZ" edc:desc="When emulator is in Debug mode, module continues operation" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ON" edc:nzwidth="0x1" edc:desc="Output Enable bit">
              <edc:SFRFieldSemantic edc:cname="ON" edc:desc="Reference Oscillator Module enabled" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Reference Oscillator Module disabled" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RODIV" edc:nzwidth="0xF" edc:desc="Reference Clock Divider bits">
              <edc:SFRFieldSemantic edc:cname="65K" edc:desc="REFO5 clock is Base clock frequency divided by 65,534 (32,767 *2)" edc:when="(field &amp; 0x7FFF) == 0x7FFF"/>
              <edc:SFRFieldSemantic edc:cname="4" edc:desc="REFO5 clock is Base clock frequency divided by 4 (2*2)" edc:when="(field &amp; 0x7FFF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="2" edc:desc="REFO5 clock is Base clock frequency divided by 2 (1*2)" edc:when="(field &amp; 0x7FFF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="REFO5 clock is same frequency as Base clock (no divider)" edc:when="(field &amp; 0x7FFF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="REFO5CONCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000AF4"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="REFO5CONSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000AF8"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="REFO5CONINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000AFC"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="REFO5TRIM" edc:nzwidth="0x20" edc:access="nnnnnnnnn-----------------------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF800000" edc:_addr="0x44000B00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CRU">
            <edc:AdjustPoint edc:offset="0x17"/>
            <edc:SFRFieldDef edc:cname="ROTRIM" edc:nzwidth="0x9" edc:desc="Trim bits - Provides fractional additive to RODIV value for 1/2 period of REFO1 clock">
              <edc:SFRFieldSemantic edc:cname="ZERO" edc:desc="0/512 (0.0) divisor added to RODIV value" edc:when="(field &amp; 0x1FF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="1/512 (0.001953125) divisor added to RODIV value" edc:when="(field &amp; 0x1FF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="2" edc:desc="2/512 (0.00390625) divisor added to RODIV value" edc:when="(field &amp; 0x1FF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="256" edc:desc="256/512 (0.5000) divisor added to RODIV value" edc:when="(field &amp; 0x1FF) == 0x100"/>
              <edc:SFRFieldSemantic edc:cname="511" edc:desc="511/512 (0.998046875) divisor added to RODIV value" edc:when="(field &amp; 0x1FF) == 0x1FF"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="REFO5TRIMCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000B04"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="REFO5TRIMSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000B08"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="REFO5TRIMINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000B0C"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="REFO6CON" edc:nzwidth="0x20" edc:access="-nnnnnnnnnnnnnnnnnnnn-nn----nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FFFFB0F" edc:_addr="0x44000B10">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CRU">
            <edc:SFRFieldDef edc:cname="ROSEL" edc:nzwidth="0x4" edc:desc="Reference Clock Source Select bits">
              <edc:SFRFieldSemantic edc:cname="REFCLKI" edc:desc="REFI Pin" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="SYSCLK" edc:desc="System clock (reference clock reflects any device clock switching)" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="PBCLK1" edc:desc="Peripheral clock 1 (reference clock reflects any peripheral clock switching)" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="SPLL3" edc:desc="System PLL3 (Clock-3)" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="LPRC" edc:desc="LPRC" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="SOSC" edc:desc="SOSC" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="POSC" edc:desc="POSC" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SPLL1" edc:desc="System PLL1 (Clock-1)" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FRC" edc:desc="FRC" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ACTIVE" edc:nzwidth="0x1" edc:desc="Reference Clock Request Status bit">
              <edc:SFRFieldSemantic edc:cname="ACTIVE" edc:desc="Reference clock request is active (User should not update this REFOCON register)" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NOT_ACTIVE" edc:desc="Reference clock request is not active (User can update this REFOCON register)" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIVSWEN" edc:nzwidth="0x1" edc:desc="Clock RODIV/ROTRIM switch enabled.">
              <edc:SFRFieldSemantic edc:cname="SWINPROGRESS" edc:desc="Clock Divider Switching currently in progress." edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SWCOMPLETE" edc:desc="Clock Divider Switch has completed." edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RSLP" edc:nzwidth="0x1" edc:desc="Reference Oscillator Run in Sleep bit">
              <edc:SFRFieldSemantic edc:cname="RSLP" edc:desc="Reference Oscillator output continues to run in Sleep" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NO_RSLP" edc:desc="Reference Oscillator output is disabled in Sleep" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="OE" edc:nzwidth="0x1" edc:desc="Reference Clock Output Enable bit">
              <edc:SFRFieldSemantic edc:cname="REFO6_OE" edc:desc="Reference clock is driven out on REFO6 pin" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NO_REFO6_OE" edc:desc="Reference clock is not driven out on REFO6 pin." edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SIDL" edc:nzwidth="0x1" edc:desc="Peripheral Stop in Idle Mode bit">
              <edc:SFRFieldSemantic edc:cname="SIDL" edc:desc="Discontinue module operation when device enters Idle mode" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NO_SIDL" edc:desc="Continue module operation in Idle mode" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FRZ" edc:nzwidth="0x1" edc:desc="Freeze in Debug mode bit">
              <edc:SFRFieldSemantic edc:cname="FRZ" edc:desc="When emulator is in Debug mode, module freezes operation" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NO_FRZ" edc:desc="When emulator is in Debug mode, module continues operation" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ON" edc:nzwidth="0x1" edc:desc="Output Enable bit">
              <edc:SFRFieldSemantic edc:cname="ON" edc:desc="Reference Oscillator Module enabled" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Reference Oscillator Module disabled" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RODIV" edc:nzwidth="0xF" edc:desc="Reference Clock Divider bits">
              <edc:SFRFieldSemantic edc:cname="65K" edc:desc="REFO6 clock is Base clock frequency divided by 65,534 (32,767 *2)" edc:when="(field &amp; 0x7FFF) == 0x7FFF"/>
              <edc:SFRFieldSemantic edc:cname="4" edc:desc="REFO6 clock is Base clock frequency divided by 4 (2*2)" edc:when="(field &amp; 0x7FFF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="2" edc:desc="REFO6 clock is Base clock frequency divided by 2 (1*2)" edc:when="(field &amp; 0x7FFF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="REFO6 clock is same frequency as Base clock (no divider)" edc:when="(field &amp; 0x7FFF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="REFO6CONCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000B14"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="REFO6CONSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000B18"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="REFO6CONINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000B1C"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="REFO6TRIM" edc:nzwidth="0x20" edc:access="nnnnnnnnn-----------------------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF800000" edc:_addr="0x44000B20">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CRU">
            <edc:AdjustPoint edc:offset="0x17"/>
            <edc:SFRFieldDef edc:cname="ROTRIM" edc:nzwidth="0x9" edc:desc="Trim bits - Provides fractional additive to RODIV value for 1/2 period of REFO1 clock">
              <edc:SFRFieldSemantic edc:cname="ZERO" edc:desc="0/512 (0.0) divisor added to RODIV value" edc:when="(field &amp; 0x1FF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="1/512 (0.001953125) divisor added to RODIV value" edc:when="(field &amp; 0x1FF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="2" edc:desc="2/512 (0.00390625) divisor added to RODIV value" edc:when="(field &amp; 0x1FF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="256" edc:desc="256/512 (0.5000) divisor added to RODIV value" edc:when="(field &amp; 0x1FF) == 0x100"/>
              <edc:SFRFieldSemantic edc:cname="511" edc:desc="511/512 (0.998046875) divisor added to RODIV value" edc:when="(field &amp; 0x1FF) == 0x1FF"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="REFO6TRIMCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000B24"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="REFO6TRIMSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000B28"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="REFO6TRIMINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000B2C"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="PB1DIV" edc:nzwidth="0x20" edc:access="----------------n---n----nnnnnnn" edc:por="00000000000000001000100000000000" edc:mclr="00000000000000001000100000000000" edc:impl="0x887F" edc:_addr="0x44000B30">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CRU">
            <edc:SFRFieldDef edc:cname="PBDIV" edc:nzwidth="0x7" edc:desc="PB1 Peripheral Clock Divisor Control value">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="Divide by 1 PB1 Clock same frequency as sys_clk" edc:when="(field &amp; 0x7F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Divide by 2 PB1 Clock is 1/2 of sys_clk" edc:when="(field &amp; 0x7F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DIV3" edc:desc="Divide by 3 PB1 Clock is 1/3 of sys_clk" edc:when="(field &amp; 0x7F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="Divide by 16 PB1 Clock is 1/16 of sys_clk" edc:when="(field &amp; 0x7F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="DIV17" edc:desc="Divide by 17 PB1 Clock is 1/17 of sys_clk" edc:when="(field &amp; 0x7F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="DIV127" edc:desc="Divide by 127 PB1 Clock is 1/127 of sys_clk" edc:when="(field &amp; 0x7F) == 0x7E"/>
              <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="Divide by 128 PB1 Clock is 1/128 of sys_clk" edc:when="(field &amp; 0x7F) == 0x7F"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="PBDIVRDY" edc:nzwidth="0x1" edc:desc="PB1 Peripheral Clock Divisor Ready">
              <edc:SFRFieldSemantic edc:cname="PB1RDY" edc:desc="Indicates the PB clock divisor logic is not switching divisors and the PB1DIV may be written." edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NOT_PB1RDY" edc:desc="Indicates the PB clock divisor logic is currently switching values and the PB1DIV cannot be written." edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PBDIVON" edc:nzwidth="0x1" edc:desc="Output Enable bit">
              <edc:SFRFieldSemantic edc:cname="PB1ON" edc:desc="PB1 Output clock is enabled" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="PB1OFF" edc:desc="PB1 Output clock is disabled" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="PB1DIVCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000B34"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="PB1DIVSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000B38"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="PB1DIVINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000B3C"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="PB2DIV" edc:nzwidth="0x20" edc:access="----------------n---n----nnnnnnn" edc:por="00000000000000001000100000000000" edc:mclr="00000000000000001000100000000000" edc:impl="0x887F" edc:_addr="0x44000B40">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CRU">
            <edc:SFRFieldDef edc:cname="PBDIV" edc:nzwidth="0x7" edc:desc="PB2 Peripheral Clock Divisor Control value">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="Divide by 1 PB2 Clock same frequency as sys_clk" edc:when="(field &amp; 0x7F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Divide by 2 PB2 Clock is 1/2 of sys_clk" edc:when="(field &amp; 0x7F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DIV3" edc:desc="Divide by 3 PB2 Clock is 1/3 of sys_clk" edc:when="(field &amp; 0x7F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="Divide by 16 PB2 Clock is 1/16 of sys_clk" edc:when="(field &amp; 0x7F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="DIV17" edc:desc="Divide by 17 PB2 Clock is 1/17 of sys_clk" edc:when="(field &amp; 0x7F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="DIV127" edc:desc="Divide by 127 PB2 Clock is 1/127 of sys_clk" edc:when="(field &amp; 0x7F) == 0x7E"/>
              <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="Divide by 128 PB2 Clock is 1/128 of sys_clk" edc:when="(field &amp; 0x7F) == 0x7F"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="PBDIVRDY" edc:nzwidth="0x1" edc:desc="PB2 Peripheral Clock Divisor Ready">
              <edc:SFRFieldSemantic edc:cname="PB2RDY" edc:desc="Indicates the PB clock divisor logic is not switching divisors and the PB2DIV may be written." edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NOT_PB2RDY" edc:desc="Indicates the PB clock divisor logic is currently switching values and the PB2DIV cannot be written." edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PBDIVON" edc:nzwidth="0x1" edc:desc="Output Enable bit">
              <edc:SFRFieldSemantic edc:cname="PB2ON" edc:desc="PB2 Output clock is enabled" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="PB2OFF" edc:desc="PB2 Output clock is disabled" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="PB2DIVCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000B44"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="PB2DIVSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000B48"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="PB2DIVINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000B4C"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="PB3DIV" edc:nzwidth="0x20" edc:access="----------------n---n----nnnnnnn" edc:por="00000000000000001000100000001001" edc:mclr="00000000000000001000100000001001" edc:impl="0x887F" edc:_addr="0x44000B50">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CRU">
            <edc:SFRFieldDef edc:cname="PBDIV" edc:nzwidth="0x7" edc:desc="PB3 Peripheral Clock Divisor Control value">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="Divide by 1 PB3 Clock same frequency as sys_clk" edc:when="(field &amp; 0x7F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Divide by 2 PB3 Clock is 1/2 of sys_clk" edc:when="(field &amp; 0x7F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DIV3" edc:desc="Divide by 3 PB3 Clock is 1/3 of sys_clk" edc:when="(field &amp; 0x7F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="Divide by 16 PB3 Clock is 1/16 of sys_clk" edc:when="(field &amp; 0x7F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="DIV17" edc:desc="Divide by 17 PB3 Clock is 1/17 of sys_clk" edc:when="(field &amp; 0x7F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="DIV127" edc:desc="Divide by 127 PB3 Clock is 1/127 of sys_clk" edc:when="(field &amp; 0x7F) == 0x7E"/>
              <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="Divide by 128 PB3 Clock is 1/128 of sys_clk" edc:when="(field &amp; 0x7F) == 0x7F"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="PBDIVRDY" edc:nzwidth="0x1" edc:desc="PB3 Peripheral Clock Divisor Ready">
              <edc:SFRFieldSemantic edc:cname="PB3RDY" edc:desc="Indicates the PB clock divisor logic is not switching divisors and the PB3DIV may be written." edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NOT_PB3RDY" edc:desc="Indicates the PB clock divisor logic is currently switching values and the PB3DIV cannot be written." edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PBDIVON" edc:nzwidth="0x1" edc:desc="Output Enable bit">
              <edc:SFRFieldSemantic edc:cname="PB3ON" edc:desc="PB3 Output clock is enabled" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="PB3OFF" edc:desc="PB3 Output clock is disabled" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="PB3DIVCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000B54"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="PB3DIVSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000B58"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="PB3DIVINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000B5C"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="SLEWCON" edc:nzwidth="0x20" edc:access="----nnnn----nnnn-----nnn-----nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF0F0707" edc:_addr="0x44000B60">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CRU">
            <edc:SFRFieldDef edc:cname="BUSY" edc:nzwidth="0x1" edc:desc="Clock Switch Slewing Active Status Bit - Read-Only">
              <edc:SFRFieldSemantic edc:cname="FINAL" edc:desc="Clock Switch has reached its final value" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="BUSY" edc:desc="Clock frequency is being actively Slewed" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DNEN" edc:nzwidth="0x1" edc:desc="Clock slew enable for switching down to slower clocks">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Clock Slewing disabled" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Clock Slewing enabled on a clock switch" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="UPEN" edc:nzwidth="0x1" edc:desc="Clock slew enable for switching up to faster clocks">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Clock Slewing disabled" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Clock Slewing enabled on a clock switch OR exit from SLEEP" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="SLWDIV" edc:nzwidth="0x3" edc:desc="Divisor steps used when doing slewed clock switches">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Divisor used" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="2" edc:desc="Divide by 2, then no divisor" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="4to2" edc:desc="Divide by 4, then by 2, then no divisor" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="8to2" edc:desc="Divide by 8, then by 4, then by 2, then no divisor" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="16to2" edc:desc="Divide by 16, then by 8, then by 4, then by 2, then no divisor" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="32to2" edc:desc="Divide by 32, then by 16, then by 8, then by 4, then by 2, then no divisor" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="64to2" edc:desc="Divide by 64, then by 32, then by 16, then by 8, then by 4, then by 2, then no divisor" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="128to2" edc:desc="Divide by 128, then by 64, then by 32, then by 16, then by 8, then by 4, then by 2, then no divisor" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="SYSDIV" edc:nzwidth="0x4" edc:desc="PBx Peripheral Clock Divisor Control value">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="Divide by 1- sys_clk_out same frequency as sys_clk source - Default" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Divide by 2- sys_clk_out is 1/2 of sys_clk source" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DIV3" edc:desc="Divide by 3- sys_clk_out is 1/3 of sys_clk source" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="Divide by 4- sys_clk_out is 1/4 of sys_clk source" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="DIV5" edc:desc="Divide by 5- sys_clk_out is 1/5 of sys_clk source" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DIV6" edc:desc="Divide by 6- sys_clk_out is 1/6 of sys_clk source" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="DIV7" edc:desc="Divide by 7- sys_clk_out is 1/7 of sys_clk source" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="Divide by 8- sys_clk_out is 1/8 of sys_clk source" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="DIV9" edc:desc="Divide by 9- sys_clk_out is 1/9 of sys_clk source" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="DIV10" edc:desc="Divide by 10- sys_clk_out is 1/10 of sys_clk source" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="DIV11" edc:desc="Divide by 11- sys_clk_out is 1/11 of sys_clk source" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="DIV12" edc:desc="Divide by 12- sys_clk_out is 1/12 of sys_clk source" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="DIV13" edc:desc="Divide by 13- sys_clk_out is 1/13 of sys_clk source" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="DIV14" edc:desc="Divide by 14- sys_clk_out is 1/14 of sys_clk source" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="DIV15" edc:desc="Divide by 15- sys_clk_out is 1/15 of sys_clk source" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="Divide by 16- sys_clk_out is 1/16 of sys_clk source" edc:when="(field &amp; 0xF) == 0x0F"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="SLWDLY" edc:nzwidth="0x4" edc:desc="Number of clocks generated at each slew step for a clock switch">
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="1 clock will be generated at each slew step" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="2" edc:desc="2 clocks will be generated at each slew step" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="3" edc:desc="3 clocks will be generated at each slew step" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="4" edc:desc="4 clocks will be generated at each slew step" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="5" edc:desc="5 clocks will be generated at each slew step" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="6" edc:desc="6 clocks will be generated at each slew step" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="7" edc:desc="7 clocks will be generated at each slew step" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="8" edc:desc="8 clocks will be generated at each slew step" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="9" edc:desc="9 clocks will be generated at each slew step" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="10" edc:desc="10 clocks will be generated at each slew step" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="11" edc:desc="11 clocks will be generated at each slew step" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="12" edc:desc="12 clocks will be generated at each slew step" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="13" edc:desc="13 clocks will be generated at each slew step" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="14" edc:desc="14 clocks will be generated at each slew step" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="15" edc:desc="15 clocks will be generated at each slew step" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="16" edc:desc="16 clocks will be generated at each slew step" edc:when="(field &amp; 0xF) == 0x0F"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="SLEWCONCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000B64"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="SLEWCONSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000B68"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="SLEWCONINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000B6C"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="CLKSTAT" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x44000B70">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CRU">
            <edc:SFRFieldDef edc:cname="FRCRDY" edc:nzwidth="0x1" edc:desc="FRC Ready Status value">
              <edc:SFRFieldSemantic edc:cname="NOTRDY" edc:desc="FRC is not stable and not ready" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RDY" edc:desc="FRC is stable and ready" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SPLL1RDY" edc:nzwidth="0x1" edc:desc="System PLL1 Ready Status value">
              <edc:SFRFieldSemantic edc:cname="NOTRDY" edc:desc="SPLL1 Primary Output is not stable and not ready" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RDY" edc:desc="SPLL1 Primary Output is stable and ready" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="POSCRDY" edc:nzwidth="0x1" edc:desc="Primary Oscillator Ready Status value">
              <edc:SFRFieldSemantic edc:cname="NOTRDY" edc:desc="POSC is not stable and not ready" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RDY" edc:desc="POSC is stable and ready" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SOSCRDY" edc:nzwidth="0x1" edc:desc="SOSC Ready Status value">
              <edc:SFRFieldSemantic edc:cname="NOTRDY" edc:desc="SOSC is not stable and not ready" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RDY" edc:desc="SOSC is stable and ready" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LPRCRDY" edc:nzwidth="0x1" edc:desc="LPRC Ready Status value">
              <edc:SFRFieldSemantic edc:cname="NOTRDY" edc:desc="LPRC is not stable and not ready" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RDY" edc:desc="LPRC is stable and ready" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SPLL3RDY" edc:nzwidth="0x1" edc:desc="System PLL3 Ready Status value">
              <edc:SFRFieldSemantic edc:cname="NOTRDY" edc:desc="SPLL3 Output is not stable and not ready" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RDY" edc:desc="SPLL3 Output is stable and ready" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1C" edc:_addr="0x44000B74"/>
      <edc:SFRDef ltx:memberofperipheral="CRU" edc:cname="CLKDIAG" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnn----------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF003F" edc:_addr="0x44000B90">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CRU">
            <edc:SFRFieldDef edc:cname="POSCSTOP" edc:nzwidth="0x1" edc:desc="POSC Clock Stop Control value">
              <edc:SFRFieldSemantic edc:cname="NORM" edc:desc="POSC clock source runs as normal" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="POSC clock source is stopped" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SOSCSTOP" edc:nzwidth="0x1" edc:desc="SOSC Clock Stop Control value">
              <edc:SFRFieldSemantic edc:cname="NORM" edc:desc="SOSC clock source runs as normal" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="SOSC clock source is stopped" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FRCSTOP" edc:nzwidth="0x1" edc:desc="FRC Clock Stop Control value">
              <edc:SFRFieldSemantic edc:cname="NORM" edc:desc="FRC clock source runs as normal" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="FRC clock source is stopped" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LPRCSTOP" edc:nzwidth="0x1" edc:desc="LPRC Clock Stop Control value">
              <edc:SFRFieldSemantic edc:cname="NORM" edc:desc="LPRC clock source runs as normal" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="LPRC clock source is stopped" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SPLL1STOP" edc:nzwidth="0x1" edc:desc="SPLL1 Clock Stop Control value">
              <edc:SFRFieldSemantic edc:cname="NORM" edc:desc="SPLL1 clock source runs as normal" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="SPLL1 clock source is stopped" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SPLL3STOP" edc:nzwidth="0x1" edc:desc="SPLL3 Clock Stop Control value">
              <edc:SFRFieldSemantic edc:cname="NORM" edc:desc="SPLL3 clock source runs as normal" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="SPLL3 clock source is stopped" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="NMICNT" edc:nzwidth="0x10" edc:desc="NMI Counter value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x26C" edc:_addr="0x44000B94"/>
      <edc:SFRDef ltx:memberofperipheral="DMT" edc:cname="DMTCON" edc:nzwidth="0x20" edc:access="----------------n---------------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x8000" edc:_addr="0x44000E00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMT">
            <edc:AdjustPoint edc:offset="0xF"/>
            <edc:SFRFieldDef edc:cname="ON" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMT" edc:cname="DMTCONCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000E04"/>
      <edc:SFRDef ltx:memberofperipheral="DMT" edc:cname="DMTCONSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000E08"/>
      <edc:SFRDef ltx:memberofperipheral="DMT" edc:cname="DMTCONINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000E0C"/>
      <edc:SFRDef ltx:memberofperipheral="DMT" edc:cname="DMTPRECLR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnn--------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF00" edc:_addr="0x44000E10">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMT">
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="STEP1" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMT" edc:cname="DMTPRECLRCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000E14"/>
      <edc:SFRDef ltx:memberofperipheral="DMT" edc:cname="DMTPRECLRSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000E18"/>
      <edc:SFRDef ltx:memberofperipheral="DMT" edc:cname="DMTPRECLRINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000E1C"/>
      <edc:SFRDef ltx:memberofperipheral="DMT" edc:cname="DMTCLR" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF" edc:_addr="0x44000E20">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMT">
            <edc:SFRFieldDef edc:cname="STEP2" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMT" edc:cname="DMTCLRCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000E24"/>
      <edc:SFRDef ltx:memberofperipheral="DMT" edc:cname="DMTCLRSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000E28"/>
      <edc:SFRDef ltx:memberofperipheral="DMT" edc:cname="DMTCLRINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000E2C"/>
      <edc:SFRDef ltx:memberofperipheral="DMT" edc:cname="DMTSTAT" edc:nzwidth="0x20" edc:access="------------------------nnn----n" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xE1" edc:_addr="0x44000E30">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMT">
            <edc:SFRFieldDef edc:cname="WINOPN" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="DMTEVENT" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BAD2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BAD1" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMT" edc:cname="DMTSTATCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000E34"/>
      <edc:SFRDef ltx:memberofperipheral="DMT" edc:cname="DMTSTATSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000E38"/>
      <edc:SFRDef ltx:memberofperipheral="DMT" edc:cname="DMTSTATINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000E3C"/>
      <edc:SFRDef ltx:memberofperipheral="DMT" edc:cname="DMTCNT" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000E40">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMT">
            <edc:SFRFieldDef edc:cname="COUNTER" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMT" edc:cname="DMTCNTCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000E44"/>
      <edc:SFRDef ltx:memberofperipheral="DMT" edc:cname="DMTCNTSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000E48"/>
      <edc:SFRDef ltx:memberofperipheral="DMT" edc:cname="DMTCNTINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000E4C"/>
      <edc:SFRDef ltx:memberofperipheral="DMT" edc:cname="DMTHOLDREG" edc:nzwidth="0x20" edc:access="----------------rrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF" edc:_addr="0x44000E50">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMT">
            <edc:SFRFieldDef edc:cname="UPRCNT" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMT" edc:cname="DMTHOLDREGCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000E54"/>
      <edc:SFRDef ltx:memberofperipheral="DMT" edc:cname="DMTHOLDREGSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000E58"/>
      <edc:SFRDef ltx:memberofperipheral="DMT" edc:cname="DMTHOLDREGINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000E5C"/>
      <edc:SFRDef ltx:memberofperipheral="DMT" edc:cname="DMTPSCNT" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000E60">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMT">
            <edc:SFRFieldDef edc:cname="PSCNT" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMT" edc:cname="DMTPSCNTCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000E64"/>
      <edc:SFRDef ltx:memberofperipheral="DMT" edc:cname="DMTPSCNTSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000E68"/>
      <edc:SFRDef ltx:memberofperipheral="DMT" edc:cname="DMTPSCNTINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000E6C"/>
      <edc:SFRDef ltx:memberofperipheral="DMT" edc:cname="DMTPSINTV" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000E70">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMT">
            <edc:SFRFieldDef edc:cname="PSINTV" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMT" edc:cname="DMTPSINTVCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000E74"/>
      <edc:SFRDef ltx:memberofperipheral="DMT" edc:cname="DMTPSINTVSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000E78"/>
      <edc:SFRDef ltx:memberofperipheral="DMT" edc:cname="DMTPSINTVINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44000E7C"/>
      <edc:AdjustPoint edc:offset="0x180" edc:_addr="0x44000E80"/>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="EXTINT0R" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x44001000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="EXTINT0" edc:nzwidth="0x4" edc:desc="EXTINT0">
              <edc:SFRFieldSemantic edc:cname="RPA9" edc:desc="RPA9" edc:when="(field &amp; 0xF) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="RPA3" edc:desc="RPA3" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA7" edc:desc="RPA7" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA11" edc:desc="RPA11" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPB0" edc:desc="RPB0" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB4" edc:desc="RPB4" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB8" edc:desc="RPB8" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPB12" edc:desc="RPB12" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPA2" edc:desc="RPA2" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="RPA6" edc:desc="RPA6" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="RPA10" edc:desc="RPA10" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="RPA14" edc:desc="RPA14" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="RPB3" edc:desc="RPB3" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="RPB7" edc:desc="RPB7" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="RPB11" edc:desc="RPB11" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="EXTINT1R" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x44001004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="EXTINT1" edc:nzwidth="0x4" edc:desc="EXTINT1">
              <edc:SFRFieldSemantic edc:cname="RPA0" edc:desc="RPA0" edc:when="(field &amp; 0xF) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="RPA4" edc:desc="RPA4" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA8" edc:desc="RPA8" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA12" edc:desc="RPA12" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPB1" edc:desc="RPB1" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB5" edc:desc="RPB5" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB9" edc:desc="RPB9" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPB13" edc:desc="RPB13" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPA3" edc:desc="RPA3" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="RPA7" edc:desc="RPA7" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="RPA11" edc:desc="RPA11" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="RPB0" edc:desc="RPB0" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="RPB4" edc:desc="RPB4" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="RPB8" edc:desc="RPB8" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="RPB12" edc:desc="RPB12" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="EXTINT2R" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x44001008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="EXTINT2" edc:nzwidth="0x4" edc:desc="EXTINT2">
              <edc:SFRFieldSemantic edc:cname="RPA1" edc:desc="RPA1" edc:when="(field &amp; 0xF) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="RPA5" edc:desc="RPA5" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA9" edc:desc="RPA9" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA13" edc:desc="RPA13" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPB2" edc:desc="RPB2" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB6" edc:desc="RPB6" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB10" edc:desc="RPB10" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPA0" edc:desc="RPA0" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPA4" edc:desc="RPA4" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="RPA8" edc:desc="RPA8" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="RPA12" edc:desc="RPA12" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="RPB1" edc:desc="RPB1" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="RPB5" edc:desc="RPB5" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="RPB9" edc:desc="RPB9" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="RPB13" edc:desc="RPB13" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="EXTINT3R" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x4400100C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="EXTINT3" edc:nzwidth="0x4" edc:desc="EXTINT3">
              <edc:SFRFieldSemantic edc:cname="RPA2" edc:desc="RPA2" edc:when="(field &amp; 0xF) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="RPA6" edc:desc="RPA6" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA10" edc:desc="RPA10" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA14" edc:desc="RPA14" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPB3" edc:desc="RPB3" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB7" edc:desc="RPB7" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB11" edc:desc="RPB11" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPA1" edc:desc="RPA1" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPA5" edc:desc="RPA5" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="RPA9" edc:desc="RPA9" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="RPA13" edc:desc="RPA13" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="RPB2" edc:desc="RPB2" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="RPB6" edc:desc="RPB6" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="RPB10" edc:desc="RPB10" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="RPA8" edc:desc="RPA8" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2C" edc:_addr="0x44001010"/>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="NMIR" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x4400103C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="NMI" edc:nzwidth="0x4" edc:desc="NMI">
              <edc:SFRFieldSemantic edc:cname="RPA2" edc:desc="RPA2" edc:when="(field &amp; 0xF) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="RPA6" edc:desc="RPA6" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA10" edc:desc="RPA10" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA14" edc:desc="RPA14" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPB3" edc:desc="RPB3" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB7" edc:desc="RPB7" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB11" edc:desc="RPB11" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPA1" edc:desc="RPA1" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPA5" edc:desc="RPA5" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="RPA9" edc:desc="RPA9" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="RPA13" edc:desc="RPA13" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="RPB2" edc:desc="RPB2" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="RPB6" edc:desc="RPB6" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="RPB10" edc:desc="RPB10" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="RPA8" edc:desc="RPA8" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="SCOM0P0R" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x44001040">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="SCOM0P0" edc:nzwidth="0x4" edc:desc="SERCOM0/PAD0">
              <edc:SFRFieldSemantic edc:cname="RPA0" edc:desc="RPA0" edc:when="(field &amp; 0xF) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="RPA4" edc:desc="RPA4" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA8" edc:desc="RPA8" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA12" edc:desc="RPA12" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPB1" edc:desc="RPB1" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB5" edc:desc="RPB5" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB9" edc:desc="RPB9" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPB13" edc:desc="RPB13" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPA3" edc:desc="RPA3" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="RPA7" edc:desc="RPA7" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="RPA11" edc:desc="RPA11" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="RPB0" edc:desc="RPB0" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="RPB4" edc:desc="RPB4" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="RPB8" edc:desc="RPB8" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="RPB12" edc:desc="RPB12" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="SCOM0P1R" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x44001044">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="SCOM0P1" edc:nzwidth="0x4" edc:desc="SERCOM0/PAD1">
              <edc:SFRFieldSemantic edc:cname="RPA3" edc:desc="RPA3" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA5" edc:desc="RPA5" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA6" edc:desc="RPA6" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPA7" edc:desc="RPA7" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB5" edc:desc="RPB5" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB6" edc:desc="RPB6" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPB8" edc:desc="RPB8" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPB9" edc:desc="RPB9" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="SCOM0P2R" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x44001048">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="SCOM0P2" edc:nzwidth="0x4" edc:desc="SERCOM0/PAD2">
              <edc:SFRFieldSemantic edc:cname="RPA2" edc:desc="RPA2" edc:when="(field &amp; 0xF) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="RPA6" edc:desc="RPA6" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA10" edc:desc="RPA10" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA14" edc:desc="RPA14" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPB3" edc:desc="RPB3" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB7" edc:desc="RPB7" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB11" edc:desc="RPB11" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPA1" edc:desc="RPA1" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPA5" edc:desc="RPA5" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="RPA9" edc:desc="RPA9" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="RPA13" edc:desc="RPA13" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="RPB2" edc:desc="RPB2" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="RPB6" edc:desc="RPB6" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="RPB10" edc:desc="RPB10" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="RPA8" edc:desc="RPA8" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="SCOM0P3R" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x4400104C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="SCOM0P3" edc:nzwidth="0x4" edc:desc="SERCOM0/PAD3">
              <edc:SFRFieldSemantic edc:cname="RPA9" edc:desc="RPA9" edc:when="(field &amp; 0xF) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="RPA3" edc:desc="RPA3" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA7" edc:desc="RPA7" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA11" edc:desc="RPA11" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPB0" edc:desc="RPB0" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB4" edc:desc="RPB4" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB8" edc:desc="RPB8" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPB12" edc:desc="RPB12" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPA2" edc:desc="RPA2" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="RPA6" edc:desc="RPA6" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="RPA10" edc:desc="RPA10" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="RPA14" edc:desc="RPA14" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="RPB3" edc:desc="RPB3" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="RPB7" edc:desc="RPB7" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="RPB11" edc:desc="RPB11" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="SCOM1P0R" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x44001050">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="SCOM1P0" edc:nzwidth="0x4" edc:desc="SERCOM1/PAD0">
              <edc:SFRFieldSemantic edc:cname="RPA1" edc:desc="RPA1" edc:when="(field &amp; 0xF) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="RPA5" edc:desc="RPA5" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA9" edc:desc="RPA9" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA13" edc:desc="RPA13" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPB2" edc:desc="RPB2" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB6" edc:desc="RPB6" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB10" edc:desc="RPB10" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPA0" edc:desc="RPA0" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPA4" edc:desc="RPA4" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="RPA8" edc:desc="RPA8" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="RPA12" edc:desc="RPA12" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="RPB1" edc:desc="RPB1" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="RPB5" edc:desc="RPB5" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="RPB9" edc:desc="RPB9" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="RPB13" edc:desc="RPB13" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="SCOM1P1R" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x44001054">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="SCOM1P1" edc:nzwidth="0x4" edc:desc="SERCOM1/PAD1">
              <edc:SFRFieldSemantic edc:cname="RPA3" edc:desc="RPA3" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA5" edc:desc="RPA5" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA6" edc:desc="RPA6" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPA7" edc:desc="RPA7" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB5" edc:desc="RPB5" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB6" edc:desc="RPB6" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPB8" edc:desc="RPB8" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPB9" edc:desc="RPB9" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="SCOM1P2R" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x44001058">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="SCOM1P2" edc:nzwidth="0x4" edc:desc="SERCOM1/PAD2">
              <edc:SFRFieldSemantic edc:cname="RPA9" edc:desc="RPA9" edc:when="(field &amp; 0xF) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="RPA3" edc:desc="RPA3" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA7" edc:desc="RPA7" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA11" edc:desc="RPA11" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPB0" edc:desc="RPB0" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB4" edc:desc="RPB4" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB8" edc:desc="RPB8" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPB12" edc:desc="RPB12" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPA2" edc:desc="RPA2" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="RPA6" edc:desc="RPA6" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="RPA10" edc:desc="RPA10" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="RPA14" edc:desc="RPA14" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="RPB3" edc:desc="RPB3" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="RPB7" edc:desc="RPB7" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="RPB11" edc:desc="RPB11" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="SCOM1P3R" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x4400105C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="SCOM1P3" edc:nzwidth="0x4" edc:desc="SERCOM1/PAD3">
              <edc:SFRFieldSemantic edc:cname="RPA0" edc:desc="RPA0" edc:when="(field &amp; 0xF) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="RPA4" edc:desc="RPA4" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA8" edc:desc="RPA8" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA12" edc:desc="RPA12" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPB1" edc:desc="RPB1" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB5" edc:desc="RPB5" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB9" edc:desc="RPB9" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPB13" edc:desc="RPB13" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPA3" edc:desc="RPA3" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="RPA7" edc:desc="RPA7" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="RPA11" edc:desc="RPA11" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="RPB0" edc:desc="RPB0" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="RPB4" edc:desc="RPB4" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="RPB8" edc:desc="RPB8" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="RPB12" edc:desc="RPB12" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x24" edc:_addr="0x44001060"/>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="QD0R" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x44001084">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="QD0" edc:nzwidth="0x4" edc:desc="QSPI/DATA0">
              <edc:SFRFieldSemantic edc:cname="RPA2" edc:desc="RPA2" edc:when="(field &amp; 0xF) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="RPA6" edc:desc="RPA6" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA10" edc:desc="RPA10" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA14" edc:desc="RPA14" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPB3" edc:desc="RPB3" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB7" edc:desc="RPB7" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB11" edc:desc="RPB11" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPA1" edc:desc="RPA1" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPA5" edc:desc="RPA5" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="RPA9" edc:desc="RPA9" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="RPA13" edc:desc="RPA13" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="RPB2" edc:desc="RPB2" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="RPB6" edc:desc="RPB6" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="RPB10" edc:desc="RPB10" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="RPA8" edc:desc="RPA8" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="QD1R" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x44001088">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="QD1" edc:nzwidth="0x4" edc:desc="QSPI/DATA1">
              <edc:SFRFieldSemantic edc:cname="RPA9" edc:desc="RPA9" edc:when="(field &amp; 0xF) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="RPA3" edc:desc="RPA3" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA7" edc:desc="RPA7" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA11" edc:desc="RPA11" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPB0" edc:desc="RPB0" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB4" edc:desc="RPB4" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB8" edc:desc="RPB8" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPB12" edc:desc="RPB12" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPA2" edc:desc="RPA2" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="RPA6" edc:desc="RPA6" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="RPA10" edc:desc="RPA10" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="RPA14" edc:desc="RPA14" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="RPB3" edc:desc="RPB3" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="RPB7" edc:desc="RPB7" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="RPB11" edc:desc="RPB11" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="QD2R" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x4400108C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="QD2" edc:nzwidth="0x4" edc:desc="QSPI/DATA2">
              <edc:SFRFieldSemantic edc:cname="RPA0" edc:desc="RPA0" edc:when="(field &amp; 0xF) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="RPA4" edc:desc="RPA4" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA8" edc:desc="RPA8" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA12" edc:desc="RPA12" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPB1" edc:desc="RPB1" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB5" edc:desc="RPB5" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB9" edc:desc="RPB9" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPB13" edc:desc="RPB13" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPA3" edc:desc="RPA3" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="RPA7" edc:desc="RPA7" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="RPA11" edc:desc="RPA11" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="RPB0" edc:desc="RPB0" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="RPB4" edc:desc="RPB4" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="RPB8" edc:desc="RPB8" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="RPB12" edc:desc="RPB12" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="QD3R" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x44001090">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="QD3" edc:nzwidth="0x4" edc:desc="QSPI/DATA3">
              <edc:SFRFieldSemantic edc:cname="RPA1" edc:desc="RPA1" edc:when="(field &amp; 0xF) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="RPA5" edc:desc="RPA5" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA9" edc:desc="RPA9" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA13" edc:desc="RPA13" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPB2" edc:desc="RPB2" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB6" edc:desc="RPB6" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB10" edc:desc="RPB10" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPA0" edc:desc="RPA0" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPA4" edc:desc="RPA4" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="RPA8" edc:desc="RPA8" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="RPA12" edc:desc="RPA12" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="RPB1" edc:desc="RPB1" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="RPB5" edc:desc="RPB5" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="RPB9" edc:desc="RPB9" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="RPB13" edc:desc="RPB13" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="REFIR" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x44001094">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="REFI" edc:nzwidth="0x4" edc:desc="REFI">
              <edc:SFRFieldSemantic edc:cname="RPA3" edc:desc="RPA3" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA5" edc:desc="RPA5" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA6" edc:desc="RPA6" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPA7" edc:desc="RPA7" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB5" edc:desc="RPB5" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB6" edc:desc="RPB6" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPB8" edc:desc="RPB8" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPB9" edc:desc="RPB9" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="CCLIN0R" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x44001098">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="CCLIN0" edc:nzwidth="0x4" edc:desc="CCL/IN0">
              <edc:SFRFieldSemantic edc:cname="RPA9" edc:desc="RPA9" edc:when="(field &amp; 0xF) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="RPA3" edc:desc="RPA3" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA7" edc:desc="RPA7" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA11" edc:desc="RPA11" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPB0" edc:desc="RPB0" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB4" edc:desc="RPB4" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB8" edc:desc="RPB8" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPB12" edc:desc="RPB12" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPA2" edc:desc="RPA2" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="RPA6" edc:desc="RPA6" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="RPA10" edc:desc="RPA10" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="RPA14" edc:desc="RPA14" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="RPB3" edc:desc="RPB3" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="RPB7" edc:desc="RPB7" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="RPB11" edc:desc="RPB11" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="CCLIN1R" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x4400109C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="CCLIN1" edc:nzwidth="0x4" edc:desc="CCL/IN1">
              <edc:SFRFieldSemantic edc:cname="RPA0" edc:desc="RPA0" edc:when="(field &amp; 0xF) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="RPA4" edc:desc="RPA4" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA8" edc:desc="RPA8" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA12" edc:desc="RPA12" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPB1" edc:desc="RPB1" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB5" edc:desc="RPB5" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB9" edc:desc="RPB9" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPB13" edc:desc="RPB13" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPA3" edc:desc="RPA3" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="RPA7" edc:desc="RPA7" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="RPA11" edc:desc="RPA11" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="RPB0" edc:desc="RPB0" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="RPB4" edc:desc="RPB4" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="RPB8" edc:desc="RPB8" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="RPB12" edc:desc="RPB12" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="CCLIN2R" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x440010A0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="CCLIN2" edc:nzwidth="0x4" edc:desc="CCL/IN2">
              <edc:SFRFieldSemantic edc:cname="RPA1" edc:desc="RPA1" edc:when="(field &amp; 0xF) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="RPA5" edc:desc="RPA5" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA9" edc:desc="RPA9" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA13" edc:desc="RPA13" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPB2" edc:desc="RPB2" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB6" edc:desc="RPB6" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB10" edc:desc="RPB10" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPA0" edc:desc="RPA0" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPA4" edc:desc="RPA4" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="RPA8" edc:desc="RPA8" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="RPA12" edc:desc="RPA12" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="RPB1" edc:desc="RPB1" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="RPB5" edc:desc="RPB5" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="RPB9" edc:desc="RPB9" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="RPB13" edc:desc="RPB13" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="CCLIN3R" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x440010A4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="CCLIN3" edc:nzwidth="0x4" edc:desc="CCL/IN3">
              <edc:SFRFieldSemantic edc:cname="RPA9" edc:desc="RPA9" edc:when="(field &amp; 0xF) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="RPA3" edc:desc="RPA3" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA7" edc:desc="RPA7" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA11" edc:desc="RPA11" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPB0" edc:desc="RPB0" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB4" edc:desc="RPB4" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB8" edc:desc="RPB8" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPB12" edc:desc="RPB12" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPA2" edc:desc="RPA2" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="RPA6" edc:desc="RPA6" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="RPA10" edc:desc="RPA10" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="RPA14" edc:desc="RPA14" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="RPB3" edc:desc="RPB3" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="RPB7" edc:desc="RPB7" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="RPB11" edc:desc="RPB11" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="CCLIN4R" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x440010A8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="CCLIN4" edc:nzwidth="0x4" edc:desc="CCL/IN4">
              <edc:SFRFieldSemantic edc:cname="RPA0" edc:desc="RPA0" edc:when="(field &amp; 0xF) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="RPA4" edc:desc="RPA4" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA8" edc:desc="RPA8" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA12" edc:desc="RPA12" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPB1" edc:desc="RPB1" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB5" edc:desc="RPB5" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB9" edc:desc="RPB9" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPB13" edc:desc="RPB13" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPA3" edc:desc="RPA3" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="RPA7" edc:desc="RPA7" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="RPA11" edc:desc="RPA11" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="RPB0" edc:desc="RPB0" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="RPB4" edc:desc="RPB4" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="RPB8" edc:desc="RPB8" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="RPB12" edc:desc="RPB12" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="CCLIN5R" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x440010AC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="CCLIN5" edc:nzwidth="0x4" edc:desc="CCL/IN5">
              <edc:SFRFieldSemantic edc:cname="RPA1" edc:desc="RPA1" edc:when="(field &amp; 0xF) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="RPA5" edc:desc="RPA5" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA9" edc:desc="RPA9" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA13" edc:desc="RPA13" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPB2" edc:desc="RPB2" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB6" edc:desc="RPB6" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB10" edc:desc="RPB10" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPA0" edc:desc="RPA0" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPA4" edc:desc="RPA4" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="RPA8" edc:desc="RPA8" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="RPA12" edc:desc="RPA12" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="RPB1" edc:desc="RPB1" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="RPB5" edc:desc="RPB5" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="RPB9" edc:desc="RPB9" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="RPB13" edc:desc="RPB13" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="TC0WO0G1R" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x440010B0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="TC0WO0" edc:nzwidth="0x4" edc:desc="TC0/WO0G1">
              <edc:SFRFieldSemantic edc:cname="RPA9" edc:desc="RPA9" edc:when="(field &amp; 0xF) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="RPA3" edc:desc="RPA3" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA7" edc:desc="RPA7" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA11" edc:desc="RPA11" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPB0" edc:desc="RPB0" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB4" edc:desc="RPB4" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB8" edc:desc="RPB8" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPB12" edc:desc="RPB12" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPA2" edc:desc="RPA2" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="RPA6" edc:desc="RPA6" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="RPA10" edc:desc="RPA10" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="RPA14" edc:desc="RPA14" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="RPB3" edc:desc="RPB3" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="RPB7" edc:desc="RPB7" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="RPB11" edc:desc="RPB11" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="TC0WO0G2R" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x440010B4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="TC0WO0" edc:nzwidth="0x4" edc:desc="TC0/WO0G2">
              <edc:SFRFieldSemantic edc:cname="RPA0" edc:desc="RPA0" edc:when="(field &amp; 0xF) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="RPA4" edc:desc="RPA4" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA8" edc:desc="RPA8" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA12" edc:desc="RPA12" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPB1" edc:desc="RPB1" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB5" edc:desc="RPB5" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB9" edc:desc="RPB9" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPB13" edc:desc="RPB13" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPA3" edc:desc="RPA3" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="RPA7" edc:desc="RPA7" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="RPA11" edc:desc="RPA11" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="RPB0" edc:desc="RPB0" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="RPB4" edc:desc="RPB4" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="RPB8" edc:desc="RPB8" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="RPB12" edc:desc="RPB12" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="TC0WO1G3R" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x440010B8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="TC0WO1" edc:nzwidth="0x4" edc:desc="TC0/WO1G3">
              <edc:SFRFieldSemantic edc:cname="RPA1" edc:desc="RPA1" edc:when="(field &amp; 0xF) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="RPA5" edc:desc="RPA5" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA9" edc:desc="RPA9" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA13" edc:desc="RPA13" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPB2" edc:desc="RPB2" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB6" edc:desc="RPB6" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB10" edc:desc="RPB10" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPA0" edc:desc="RPA0" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPA4" edc:desc="RPA4" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="RPA8" edc:desc="RPA8" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="RPA12" edc:desc="RPA12" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="RPB1" edc:desc="RPB1" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="RPB5" edc:desc="RPB5" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="RPB9" edc:desc="RPB9" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="RPB13" edc:desc="RPB13" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="TC0WO1G4R" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x440010BC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="TC0WO1" edc:nzwidth="0x4" edc:desc="TC0/WO1G4">
              <edc:SFRFieldSemantic edc:cname="RPA2" edc:desc="RPA2" edc:when="(field &amp; 0xF) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="RPA6" edc:desc="RPA6" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA10" edc:desc="RPA10" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA14" edc:desc="RPA14" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPB3" edc:desc="RPB3" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB7" edc:desc="RPB7" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB11" edc:desc="RPB11" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPA1" edc:desc="RPA1" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPA5" edc:desc="RPA5" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="RPA9" edc:desc="RPA9" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="RPA13" edc:desc="RPA13" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="RPB2" edc:desc="RPB2" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="RPB6" edc:desc="RPB6" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="RPB10" edc:desc="RPB10" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="RPA8" edc:desc="RPA8" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="TC1WO0G1R" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x440010C0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="TC1WO0" edc:nzwidth="0x4" edc:desc="TC1/WO0G1">
              <edc:SFRFieldSemantic edc:cname="RPA9" edc:desc="RPA9" edc:when="(field &amp; 0xF) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="RPA3" edc:desc="RPA3" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA7" edc:desc="RPA7" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA11" edc:desc="RPA11" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPB0" edc:desc="RPB0" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB4" edc:desc="RPB4" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB8" edc:desc="RPB8" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPB12" edc:desc="RPB12" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPA2" edc:desc="RPA2" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="RPA6" edc:desc="RPA6" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="RPA10" edc:desc="RPA10" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="RPA14" edc:desc="RPA14" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="RPB3" edc:desc="RPB3" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="RPB7" edc:desc="RPB7" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="RPB11" edc:desc="RPB11" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="TC1WO1G2R" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x440010C4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="TC1WO1" edc:nzwidth="0x4" edc:desc="TC1/WO1G2">
              <edc:SFRFieldSemantic edc:cname="RPA0" edc:desc="RPA0" edc:when="(field &amp; 0xF) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="RPA4" edc:desc="RPA4" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA8" edc:desc="RPA8" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA12" edc:desc="RPA12" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPB1" edc:desc="RPB1" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB5" edc:desc="RPB5" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB9" edc:desc="RPB9" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPB13" edc:desc="RPB13" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPA3" edc:desc="RPA3" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="RPA7" edc:desc="RPA7" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="RPA11" edc:desc="RPA11" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="RPB0" edc:desc="RPB0" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="RPB4" edc:desc="RPB4" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="RPB8" edc:desc="RPB8" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="RPB12" edc:desc="RPB12" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="TC2WO0G1R" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x440010C8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="TC2WO0" edc:nzwidth="0x4" edc:desc="TC2/WO0G1">
              <edc:SFRFieldSemantic edc:cname="RPA9" edc:desc="RPA9" edc:when="(field &amp; 0xF) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="RPA3" edc:desc="RPA3" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA7" edc:desc="RPA7" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA11" edc:desc="RPA11" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPB0" edc:desc="RPB0" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB4" edc:desc="RPB4" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB8" edc:desc="RPB8" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPB12" edc:desc="RPB12" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPA2" edc:desc="RPA2" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="RPA6" edc:desc="RPA6" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="RPA10" edc:desc="RPA10" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="RPA14" edc:desc="RPA14" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="RPB3" edc:desc="RPB3" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="RPB7" edc:desc="RPB7" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="RPB11" edc:desc="RPB11" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="TC2WO0G3R" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x440010CC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="TC2WO0" edc:nzwidth="0x4" edc:desc="TC2/WO0G3">
              <edc:SFRFieldSemantic edc:cname="RPA1" edc:desc="RPA1" edc:when="(field &amp; 0xF) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="RPA5" edc:desc="RPA5" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA9" edc:desc="RPA9" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA13" edc:desc="RPA13" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPB2" edc:desc="RPB2" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB6" edc:desc="RPB6" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB10" edc:desc="RPB10" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPA0" edc:desc="RPA0" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPA4" edc:desc="RPA4" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="RPA8" edc:desc="RPA8" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="RPA12" edc:desc="RPA12" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="RPB1" edc:desc="RPB1" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="RPB5" edc:desc="RPB5" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="RPB9" edc:desc="RPB9" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="RPB13" edc:desc="RPB13" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="TC2WO1G2R" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x440010D0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="TC2WO1" edc:nzwidth="0x4" edc:desc="TC2/WO1G2">
              <edc:SFRFieldSemantic edc:cname="RPA0" edc:desc="RPA0" edc:when="(field &amp; 0xF) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="RPA4" edc:desc="RPA4" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA8" edc:desc="RPA8" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA12" edc:desc="RPA12" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPB1" edc:desc="RPB1" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB5" edc:desc="RPB5" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB9" edc:desc="RPB9" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPB13" edc:desc="RPB13" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPA3" edc:desc="RPA3" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="RPA7" edc:desc="RPA7" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="RPA11" edc:desc="RPA11" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="RPB0" edc:desc="RPB0" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="RPB4" edc:desc="RPB4" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="RPB8" edc:desc="RPB8" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="RPB12" edc:desc="RPB12" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="TC2WO1G4R" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x440010D4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="TC2WO1" edc:nzwidth="0x4" edc:desc="TC2/WO1G4">
              <edc:SFRFieldSemantic edc:cname="RPA2" edc:desc="RPA2" edc:when="(field &amp; 0xF) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="RPA6" edc:desc="RPA6" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA10" edc:desc="RPA10" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA14" edc:desc="RPA14" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPB3" edc:desc="RPB3" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB7" edc:desc="RPB7" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB11" edc:desc="RPB11" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPA1" edc:desc="RPA1" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPA5" edc:desc="RPA5" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="RPA9" edc:desc="RPA9" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="RPA13" edc:desc="RPA13" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="RPB2" edc:desc="RPB2" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="RPB6" edc:desc="RPB6" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="RPB10" edc:desc="RPB10" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="RPA8" edc:desc="RPA8" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="TC3WO0G1R" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x440010D8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="TC3WO0" edc:nzwidth="0x4" edc:desc="TC3/WO0G1">
              <edc:SFRFieldSemantic edc:cname="RPA9" edc:desc="RPA9" edc:when="(field &amp; 0xF) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="RPA3" edc:desc="RPA3" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA7" edc:desc="RPA7" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA11" edc:desc="RPA11" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPB0" edc:desc="RPB0" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB4" edc:desc="RPB4" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB8" edc:desc="RPB8" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPB12" edc:desc="RPB12" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPA2" edc:desc="RPA2" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="RPA6" edc:desc="RPA6" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="RPA10" edc:desc="RPA10" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="RPA14" edc:desc="RPA14" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="RPB3" edc:desc="RPB3" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="RPB7" edc:desc="RPB7" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="RPB11" edc:desc="RPB11" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="TC3WO0G3R" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x440010DC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="TC3WO0" edc:nzwidth="0x4" edc:desc="TC3/WO0G3">
              <edc:SFRFieldSemantic edc:cname="RPA1" edc:desc="RPA1" edc:when="(field &amp; 0xF) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="RPA5" edc:desc="RPA5" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA9" edc:desc="RPA9" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA13" edc:desc="RPA13" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPB2" edc:desc="RPB2" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB6" edc:desc="RPB6" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB10" edc:desc="RPB10" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPA0" edc:desc="RPA0" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPA4" edc:desc="RPA4" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="RPA8" edc:desc="RPA8" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="RPA12" edc:desc="RPA12" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="RPB1" edc:desc="RPB1" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="RPB5" edc:desc="RPB5" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="RPB9" edc:desc="RPB9" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="RPB13" edc:desc="RPB13" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="TC3WO1G2R" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x440010E0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="TC3WO1" edc:nzwidth="0x4" edc:desc="TC3/WO1G2">
              <edc:SFRFieldSemantic edc:cname="RPA0" edc:desc="RPA0" edc:when="(field &amp; 0xF) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="RPA4" edc:desc="RPA4" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA8" edc:desc="RPA8" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA12" edc:desc="RPA12" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPB1" edc:desc="RPB1" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB5" edc:desc="RPB5" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB9" edc:desc="RPB9" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPB13" edc:desc="RPB13" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPA3" edc:desc="RPA3" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="RPA7" edc:desc="RPA7" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="RPA11" edc:desc="RPA11" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="RPB0" edc:desc="RPB0" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="RPB4" edc:desc="RPB4" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="RPB8" edc:desc="RPB8" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="RPB12" edc:desc="RPB12" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="TC3WO1G4R" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x440010E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="TC3WO1" edc:nzwidth="0x4" edc:desc="TC3/WO1G4">
              <edc:SFRFieldSemantic edc:cname="RPA2" edc:desc="RPA2" edc:when="(field &amp; 0xF) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="RPA6" edc:desc="RPA6" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA10" edc:desc="RPA10" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA14" edc:desc="RPA14" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPB3" edc:desc="RPB3" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB7" edc:desc="RPB7" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB11" edc:desc="RPB11" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPA1" edc:desc="RPA1" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPA5" edc:desc="RPA5" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="RPA9" edc:desc="RPA9" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="RPA13" edc:desc="RPA13" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="RPB2" edc:desc="RPB2" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="RPB6" edc:desc="RPB6" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="RPB10" edc:desc="RPB10" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="RPA8" edc:desc="RPA8" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="TC4WO0G1R" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x440010E8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="TC4WO0" edc:nzwidth="0x4" edc:desc="TC4/WO0G1">
              <edc:SFRFieldSemantic edc:cname="RPA9" edc:desc="RPA9" edc:when="(field &amp; 0xF) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="RPA3" edc:desc="RPA3" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA7" edc:desc="RPA7" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA11" edc:desc="RPA11" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPB0" edc:desc="RPB0" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB4" edc:desc="RPB4" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB8" edc:desc="RPB8" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPB12" edc:desc="RPB12" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPA2" edc:desc="RPA2" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="RPA6" edc:desc="RPA6" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="RPA10" edc:desc="RPA10" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="RPA14" edc:desc="RPA14" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="RPB3" edc:desc="RPB3" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="RPB7" edc:desc="RPB7" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="RPB11" edc:desc="RPB11" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="TC4WO0G3R" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x440010EC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="TC4WO0" edc:nzwidth="0x4" edc:desc="TC4/WO0G3">
              <edc:SFRFieldSemantic edc:cname="RPA1" edc:desc="RPA1" edc:when="(field &amp; 0xF) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="RPA5" edc:desc="RPA5" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA9" edc:desc="RPA9" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA13" edc:desc="RPA13" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPB2" edc:desc="RPB2" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB6" edc:desc="RPB6" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB10" edc:desc="RPB10" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPA0" edc:desc="RPA0" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPA4" edc:desc="RPA4" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="RPA8" edc:desc="RPA8" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="RPA12" edc:desc="RPA12" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="RPB1" edc:desc="RPB1" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="RPB5" edc:desc="RPB5" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="RPB9" edc:desc="RPB9" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="RPB13" edc:desc="RPB13" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="TC4WO1G2R" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x440010F0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="TC4WO1" edc:nzwidth="0x4" edc:desc="TC4/WO1G2">
              <edc:SFRFieldSemantic edc:cname="RPA0" edc:desc="RPA0" edc:when="(field &amp; 0xF) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="RPA4" edc:desc="RPA4" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA8" edc:desc="RPA8" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA12" edc:desc="RPA12" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPB1" edc:desc="RPB1" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB5" edc:desc="RPB5" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB9" edc:desc="RPB9" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPB13" edc:desc="RPB13" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPA3" edc:desc="RPA3" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="RPA7" edc:desc="RPA7" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="RPA11" edc:desc="RPA11" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="RPB0" edc:desc="RPB0" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="RPB4" edc:desc="RPB4" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="RPB8" edc:desc="RPB8" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="RPB12" edc:desc="RPB12" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="TC4WO1G4R" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x440010F4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="TC4WO1" edc:nzwidth="0x4" edc:desc="TC4/WO1G4">
              <edc:SFRFieldSemantic edc:cname="RPA2" edc:desc="RPA2" edc:when="(field &amp; 0xF) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="RPA6" edc:desc="RPA6" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA10" edc:desc="RPA10" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA14" edc:desc="RPA14" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPB3" edc:desc="RPB3" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB7" edc:desc="RPB7" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB11" edc:desc="RPB11" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPA1" edc:desc="RPA1" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPA5" edc:desc="RPA5" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="RPA9" edc:desc="RPA9" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="RPA13" edc:desc="RPA13" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="RPB2" edc:desc="RPB2" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="RPB6" edc:desc="RPB6" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="RPB10" edc:desc="RPB10" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="RPA8" edc:desc="RPA8" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="TC5WO0G1R" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x440010F8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="TC5WO0" edc:nzwidth="0x4" edc:desc="TC5/WO0G1">
              <edc:SFRFieldSemantic edc:cname="RPA9" edc:desc="RPA9" edc:when="(field &amp; 0xF) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="RPA3" edc:desc="RPA3" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA7" edc:desc="RPA7" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA11" edc:desc="RPA11" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPB0" edc:desc="RPB0" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB4" edc:desc="RPB4" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB8" edc:desc="RPB8" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPB12" edc:desc="RPB12" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPA2" edc:desc="RPA2" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="RPA6" edc:desc="RPA6" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="RPA10" edc:desc="RPA10" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="RPA14" edc:desc="RPA14" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="RPB3" edc:desc="RPB3" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="RPB7" edc:desc="RPB7" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="RPB11" edc:desc="RPB11" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="TC5WO0G3R" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x440010FC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="TC5WO0" edc:nzwidth="0x4" edc:desc="TC5/WO0G3">
              <edc:SFRFieldSemantic edc:cname="RPA1" edc:desc="RPA1" edc:when="(field &amp; 0xF) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="RPA5" edc:desc="RPA5" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA9" edc:desc="RPA9" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA13" edc:desc="RPA13" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPB2" edc:desc="RPB2" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB6" edc:desc="RPB6" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB10" edc:desc="RPB10" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPA0" edc:desc="RPA0" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPA4" edc:desc="RPA4" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="RPA8" edc:desc="RPA8" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="RPA12" edc:desc="RPA12" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="RPB1" edc:desc="RPB1" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="RPB5" edc:desc="RPB5" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="RPB9" edc:desc="RPB9" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="RPB13" edc:desc="RPB13" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="TC5WO1G2R" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x44001100">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="TC5WO1" edc:nzwidth="0x4" edc:desc="TC5/WO1G2">
              <edc:SFRFieldSemantic edc:cname="RPA0" edc:desc="RPA0" edc:when="(field &amp; 0xF) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="RPA4" edc:desc="RPA4" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA8" edc:desc="RPA8" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA12" edc:desc="RPA12" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPB1" edc:desc="RPB1" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB5" edc:desc="RPB5" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB9" edc:desc="RPB9" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPB13" edc:desc="RPB13" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPA3" edc:desc="RPA3" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="RPA7" edc:desc="RPA7" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="RPA11" edc:desc="RPA11" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="RPB0" edc:desc="RPB0" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="RPB4" edc:desc="RPB4" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="RPB8" edc:desc="RPB8" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="RPB12" edc:desc="RPB12" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="TC5WO1G4R" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x44001104">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="TC5WO1" edc:nzwidth="0x4" edc:desc="TC5/WO1G4">
              <edc:SFRFieldSemantic edc:cname="RPA2" edc:desc="RPA2" edc:when="(field &amp; 0xF) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="RPA6" edc:desc="RPA6" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA10" edc:desc="RPA10" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA14" edc:desc="RPA14" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPB3" edc:desc="RPB3" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB7" edc:desc="RPB7" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB11" edc:desc="RPB11" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPA1" edc:desc="RPA1" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPA5" edc:desc="RPA5" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="RPA9" edc:desc="RPA9" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="RPA13" edc:desc="RPA13" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="RPB2" edc:desc="RPB2" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="RPB6" edc:desc="RPB6" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="RPB10" edc:desc="RPB10" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="RPA8" edc:desc="RPA8" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="TC6WO0G1R" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x44001108">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="TC6WO0" edc:nzwidth="0x4" edc:desc="TC6/WO0G1">
              <edc:SFRFieldSemantic edc:cname="RPA9" edc:desc="RPA9" edc:when="(field &amp; 0xF) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="RPA3" edc:desc="RPA3" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA7" edc:desc="RPA7" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA11" edc:desc="RPA11" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPB0" edc:desc="RPB0" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB4" edc:desc="RPB4" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB8" edc:desc="RPB8" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPB12" edc:desc="RPB12" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPA2" edc:desc="RPA2" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="RPA6" edc:desc="RPA6" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="RPA10" edc:desc="RPA10" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="RPA14" edc:desc="RPA14" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="RPB3" edc:desc="RPB3" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="RPB7" edc:desc="RPB7" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="RPB11" edc:desc="RPB11" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="TC6WO0G3R" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x4400110C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="TC6WO0" edc:nzwidth="0x4" edc:desc="TC6/WO0G3">
              <edc:SFRFieldSemantic edc:cname="RPA1" edc:desc="RPA1" edc:when="(field &amp; 0xF) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="RPA5" edc:desc="RPA5" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA9" edc:desc="RPA9" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA13" edc:desc="RPA13" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPB2" edc:desc="RPB2" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB6" edc:desc="RPB6" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB10" edc:desc="RPB10" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPA0" edc:desc="RPA0" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPA4" edc:desc="RPA4" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="RPA8" edc:desc="RPA8" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="RPA12" edc:desc="RPA12" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="RPB1" edc:desc="RPB1" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="RPB5" edc:desc="RPB5" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="RPB9" edc:desc="RPB9" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="RPB13" edc:desc="RPB13" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="TC6WO1G2R" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x44001110">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="TC6WO1" edc:nzwidth="0x4" edc:desc="TC6/WO1G2">
              <edc:SFRFieldSemantic edc:cname="RPA0" edc:desc="RPA0" edc:when="(field &amp; 0xF) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="RPA4" edc:desc="RPA4" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA8" edc:desc="RPA8" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA12" edc:desc="RPA12" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPB1" edc:desc="RPB1" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB5" edc:desc="RPB5" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB9" edc:desc="RPB9" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPB13" edc:desc="RPB13" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPA3" edc:desc="RPA3" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="RPA7" edc:desc="RPA7" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="RPA11" edc:desc="RPA11" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="RPB0" edc:desc="RPB0" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="RPB4" edc:desc="RPB4" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="RPB8" edc:desc="RPB8" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="RPB12" edc:desc="RPB12" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="TC6WO1G4R" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x44001114">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="TC6WO1" edc:nzwidth="0x4" edc:desc="TC6/WO1G4">
              <edc:SFRFieldSemantic edc:cname="RPA2" edc:desc="RPA2" edc:when="(field &amp; 0xF) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="RPA6" edc:desc="RPA6" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA10" edc:desc="RPA10" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA14" edc:desc="RPA14" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPB3" edc:desc="RPB3" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB7" edc:desc="RPB7" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB11" edc:desc="RPB11" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPA1" edc:desc="RPA1" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPA5" edc:desc="RPA5" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="RPA9" edc:desc="RPA9" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="RPA13" edc:desc="RPA13" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="RPB2" edc:desc="RPB2" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="RPB6" edc:desc="RPB6" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="RPB10" edc:desc="RPB10" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="RPA8" edc:desc="RPA8" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="TC7WO0G1R" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x44001118">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="TC7WO0" edc:nzwidth="0x4" edc:desc="TC7/WO0G1">
              <edc:SFRFieldSemantic edc:cname="RPA9" edc:desc="RPA9" edc:when="(field &amp; 0xF) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="RPA3" edc:desc="RPA3" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA7" edc:desc="RPA7" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA11" edc:desc="RPA11" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPB0" edc:desc="RPB0" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB4" edc:desc="RPB4" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB8" edc:desc="RPB8" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPB12" edc:desc="RPB12" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPA2" edc:desc="RPA2" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="RPA6" edc:desc="RPA6" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="RPA10" edc:desc="RPA10" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="RPA14" edc:desc="RPA14" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="RPB3" edc:desc="RPB3" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="RPB7" edc:desc="RPB7" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="RPB11" edc:desc="RPB11" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="TC7WO0G3R" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x4400111C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="TC7WO0" edc:nzwidth="0x4" edc:desc="TC7/WO0G3">
              <edc:SFRFieldSemantic edc:cname="RPA1" edc:desc="RPA1" edc:when="(field &amp; 0xF) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="RPA5" edc:desc="RPA5" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA9" edc:desc="RPA9" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA13" edc:desc="RPA13" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPB2" edc:desc="RPB2" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB6" edc:desc="RPB6" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB10" edc:desc="RPB10" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPA0" edc:desc="RPA0" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPA4" edc:desc="RPA4" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="RPA8" edc:desc="RPA8" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="RPA12" edc:desc="RPA12" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="RPB1" edc:desc="RPB1" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="RPB5" edc:desc="RPB5" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="RPB9" edc:desc="RPB9" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="RPB13" edc:desc="RPB13" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="TC7WO1G2R" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x44001120">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="TC7WO1" edc:nzwidth="0x4" edc:desc="TC7/WO1G2">
              <edc:SFRFieldSemantic edc:cname="RPA0" edc:desc="RPA0" edc:when="(field &amp; 0xF) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="RPA4" edc:desc="RPA4" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA8" edc:desc="RPA8" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA12" edc:desc="RPA12" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPB1" edc:desc="RPB1" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB5" edc:desc="RPB5" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB9" edc:desc="RPB9" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPB13" edc:desc="RPB13" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPA3" edc:desc="RPA3" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="RPA7" edc:desc="RPA7" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="RPA11" edc:desc="RPA11" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="RPB0" edc:desc="RPB0" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="RPB4" edc:desc="RPB4" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="RPB8" edc:desc="RPB8" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="RPB12" edc:desc="RPB12" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="TC7WO1G4R" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x44001124">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="TC7WO1" edc:nzwidth="0x4" edc:desc="TC7/WO1G4">
              <edc:SFRFieldSemantic edc:cname="RPA2" edc:desc="RPA2" edc:when="(field &amp; 0xF) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="RPA6" edc:desc="RPA6" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RPA10" edc:desc="RPA10" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RPA14" edc:desc="RPA14" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RPB3" edc:desc="RPB3" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RPB7" edc:desc="RPB7" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RPB11" edc:desc="RPB11" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RPA1" edc:desc="RPA1" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="RPA5" edc:desc="RPA5" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="RPA9" edc:desc="RPA9" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="RPA13" edc:desc="RPA13" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="RPB2" edc:desc="RPB2" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="RPB6" edc:desc="RPB6" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="RPB10" edc:desc="RPB10" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="RPA8" edc:desc="RPA8" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xD8" edc:_addr="0x44001128"/>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="RPA0G2R" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x44001200">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="RPA0G2R" edc:nzwidth="0x5" edc:desc="RPA0/G2">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P0" edc:desc="SERCOM0/PAD0" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P3" edc:desc="SERCOM0/PAD3" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P2" edc:desc="SERCOM0/PAD2" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P3" edc:desc="SERCOM1/PAD3" edc:when="(field &amp; 0x1F) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P2" edc:desc="SERCOM1/PAD2" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO1" edc:desc="TCC0/WO1" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO5" edc:desc="TCC0/WO5" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO3" edc:desc="TCC0/WO3" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO1" edc:desc="TCC1/WO1" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO5" edc:desc="TCC1/WO5" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO3" edc:desc="TCC1/WO3" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="TCC2WO1" edc:desc="TCC2/WO1" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="TC0WO1" edc:desc="TC0/WO1" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="TC1WO1" edc:desc="TC1/WO1" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="TC2WO1" edc:desc="TC2/WO1" edc:when="(field &amp; 0x1F) == 0x11"/>
              <edc:SFRFieldSemantic edc:cname="TC3WO1" edc:desc="TC3/WO1" edc:when="(field &amp; 0x1F) == 0x12"/>
              <edc:SFRFieldSemantic edc:cname="TC4WO1" edc:desc="TC4/WO1" edc:when="(field &amp; 0x1F) == 0x13"/>
              <edc:SFRFieldSemantic edc:cname="TC5WO1" edc:desc="TC5/WO1" edc:when="(field &amp; 0x1F) == 0x14"/>
              <edc:SFRFieldSemantic edc:cname="TC6WO1" edc:desc="TC6/WO1" edc:when="(field &amp; 0x1F) == 0x15"/>
              <edc:SFRFieldSemantic edc:cname="TC7WO1" edc:desc="TC7/WO1" edc:when="(field &amp; 0x1F) == 0x16"/>
              <edc:SFRFieldSemantic edc:cname="QSPICS" edc:desc="QSPI/CS" edc:when="(field &amp; 0x1F) == 0x17"/>
              <edc:SFRFieldSemantic edc:cname="QD0" edc:desc="QD0" edc:when="(field &amp; 0x1F) == 0x18"/>
              <edc:SFRFieldSemantic edc:cname="QD3" edc:desc="QD3" edc:when="(field &amp; 0x1F) == 0x19"/>
              <edc:SFRFieldSemantic edc:cname="QD2" edc:desc="QD2" edc:when="(field &amp; 0x1F) == 0x1A"/>
              <edc:SFRFieldSemantic edc:cname="CCLOUT1" edc:desc="CCLOUT1" edc:when="(field &amp; 0x1F) == 0x1B"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS0" edc:desc="TSTBUS0" edc:when="(field &amp; 0x1F) == 0x1C"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS3" edc:desc="TSTBUS3" edc:when="(field &amp; 0x1F) == 0x1D"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS6" edc:desc="TSTBUS6" edc:when="(field &amp; 0x1F) == 0x1E"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS9" edc:desc="TSTBUS9" edc:when="(field &amp; 0x1F) == 0x1F"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="RPA0G3R" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x44001204">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="RPA0G3R" edc:nzwidth="0x5" edc:desc="RPA0/G3">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P0" edc:desc="SERCOM0/PAD0" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P3" edc:desc="SERCOM0/PAD3" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P2" edc:desc="SERCOM1/PAD2" edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P3" edc:desc="SERCOM1/PAD3" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO2" edc:desc="TCC0/WO2" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO0" edc:desc="TCC0/WO0" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO4" edc:desc="TCC0/WO4" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO2" edc:desc="TCC1/WO2" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO0" edc:desc="TCC1/WO0" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO4" edc:desc="TCC1/WO4" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="TCC2WO0" edc:desc="TCC2/WO0" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="TC0WO0" edc:desc="TC0/WO0" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="TC1WO0" edc:desc="TC1/WO0" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="TC2WO0" edc:desc="TC2/WO0" edc:when="(field &amp; 0x1F) == 0x11"/>
              <edc:SFRFieldSemantic edc:cname="TC3WO0" edc:desc="TC3/WO0" edc:when="(field &amp; 0x1F) == 0x12"/>
              <edc:SFRFieldSemantic edc:cname="TC4WO0" edc:desc="TC4/WO0" edc:when="(field &amp; 0x1F) == 0x13"/>
              <edc:SFRFieldSemantic edc:cname="TC5WO0" edc:desc="TC5/WO0" edc:when="(field &amp; 0x1F) == 0x14"/>
              <edc:SFRFieldSemantic edc:cname="TC6WO0" edc:desc="TC6/WO0" edc:when="(field &amp; 0x1F) == 0x15"/>
              <edc:SFRFieldSemantic edc:cname="TC7WO0" edc:desc="TC7/WO0" edc:when="(field &amp; 0x1F) == 0x16"/>
              <edc:SFRFieldSemantic edc:cname="QCS" edc:desc="QCS" edc:when="(field &amp; 0x1F) == 0x17"/>
              <edc:SFRFieldSemantic edc:cname="QD1" edc:desc="QD1" edc:when="(field &amp; 0x1F) == 0x18"/>
              <edc:SFRFieldSemantic edc:cname="QD0" edc:desc="QD0" edc:when="(field &amp; 0x1F) == 0x19"/>
              <edc:SFRFieldSemantic edc:cname="QD3" edc:desc="QD3" edc:when="(field &amp; 0x1F) == 0x1A"/>
              <edc:SFRFieldSemantic edc:cname="CCLOUT0" edc:desc="CCLOUT0" edc:when="(field &amp; 0x1F) == 0x1B"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS1" edc:desc="TSTBUS1" edc:when="(field &amp; 0x1F) == 0x1C"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS4" edc:desc="TSTBUS4" edc:when="(field &amp; 0x1F) == 0x1D"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS7" edc:desc="TSTBUS7" edc:when="(field &amp; 0x1F) == 0x1E"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS10" edc:desc="TSTBUS10" edc:when="(field &amp; 0x1F) == 0x1F"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="RPA1G3R" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x44001208">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="RPA1G3R" edc:nzwidth="0x5" edc:desc="RPA1/G3">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P0" edc:desc="SERCOM0/PAD0" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P3" edc:desc="SERCOM0/PAD3" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P2" edc:desc="SERCOM1/PAD2" edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P3" edc:desc="SERCOM1/PAD3" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO2" edc:desc="TCC0/WO2" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO0" edc:desc="TCC0/WO0" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO4" edc:desc="TCC0/WO4" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO2" edc:desc="TCC1/WO2" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO0" edc:desc="TCC1/WO0" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO4" edc:desc="TCC1/WO4" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="TCC2WO0" edc:desc="TCC2/WO0" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="TC0WO0" edc:desc="TC0/WO0" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="TC1WO0" edc:desc="TC1/WO0" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="TC2WO0" edc:desc="TC2/WO0" edc:when="(field &amp; 0x1F) == 0x11"/>
              <edc:SFRFieldSemantic edc:cname="TC3WO0" edc:desc="TC3/WO0" edc:when="(field &amp; 0x1F) == 0x12"/>
              <edc:SFRFieldSemantic edc:cname="TC4WO0" edc:desc="TC4/WO0" edc:when="(field &amp; 0x1F) == 0x13"/>
              <edc:SFRFieldSemantic edc:cname="TC5WO0" edc:desc="TC5/WO0" edc:when="(field &amp; 0x1F) == 0x14"/>
              <edc:SFRFieldSemantic edc:cname="TC6WO0" edc:desc="TC6/WO0" edc:when="(field &amp; 0x1F) == 0x15"/>
              <edc:SFRFieldSemantic edc:cname="TC7WO0" edc:desc="TC7/WO0" edc:when="(field &amp; 0x1F) == 0x16"/>
              <edc:SFRFieldSemantic edc:cname="QCS" edc:desc="QCS" edc:when="(field &amp; 0x1F) == 0x17"/>
              <edc:SFRFieldSemantic edc:cname="QD1" edc:desc="QD1" edc:when="(field &amp; 0x1F) == 0x18"/>
              <edc:SFRFieldSemantic edc:cname="QD0" edc:desc="QD0" edc:when="(field &amp; 0x1F) == 0x19"/>
              <edc:SFRFieldSemantic edc:cname="QD3" edc:desc="QD3" edc:when="(field &amp; 0x1F) == 0x1A"/>
              <edc:SFRFieldSemantic edc:cname="CCLOUT0" edc:desc="CCLOUT0" edc:when="(field &amp; 0x1F) == 0x1B"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS1" edc:desc="TSTBUS1" edc:when="(field &amp; 0x1F) == 0x1C"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS4" edc:desc="TSTBUS4" edc:when="(field &amp; 0x1F) == 0x1D"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS7" edc:desc="TSTBUS7" edc:when="(field &amp; 0x1F) == 0x1E"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS10" edc:desc="TSTBUS10" edc:when="(field &amp; 0x1F) == 0x1F"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="RPA1G4R" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x4400120C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="RPA1G4R" edc:nzwidth="0x5" edc:desc="RPA1/G4">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P2" edc:desc="SERCOM0/PAD2" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P0" edc:desc="SERCOM0/PAD0" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P3" edc:desc="SERCOM1/PAD3" edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P0" edc:desc="SERCOM1/PAD0" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO3" edc:desc="TCC0/WO3" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO1" edc:desc="TCC0/WO1" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO5" edc:desc="TCC0/WO5" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO3" edc:desc="TCC1/WO3" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO1" edc:desc="TCC1/WO1" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO5" edc:desc="TCC1/WO5" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="TCC2WO1" edc:desc="TCC2/WO1" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="TC0WO0" edc:desc="TC0/WO0" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="TC1WO1" edc:desc="TC1/WO1" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="TC2WO1" edc:desc="TC2/WO1" edc:when="(field &amp; 0x1F) == 0x11"/>
              <edc:SFRFieldSemantic edc:cname="TC3WO1" edc:desc="TC3/WO1" edc:when="(field &amp; 0x1F) == 0x12"/>
              <edc:SFRFieldSemantic edc:cname="TC4WO1" edc:desc="TC4/WO1" edc:when="(field &amp; 0x1F) == 0x13"/>
              <edc:SFRFieldSemantic edc:cname="TC5WO1" edc:desc="TC5/WO1" edc:when="(field &amp; 0x1F) == 0x14"/>
              <edc:SFRFieldSemantic edc:cname="TC6WO1" edc:desc="TC6/WO1" edc:when="(field &amp; 0x1F) == 0x15"/>
              <edc:SFRFieldSemantic edc:cname="TC7WO1" edc:desc="TC7/WO1" edc:when="(field &amp; 0x1F) == 0x16"/>
              <edc:SFRFieldSemantic edc:cname="QCS" edc:desc="QCS" edc:when="(field &amp; 0x1F) == 0x17"/>
              <edc:SFRFieldSemantic edc:cname="QD2" edc:desc="QD2" edc:when="(field &amp; 0x1F) == 0x18"/>
              <edc:SFRFieldSemantic edc:cname="QD1" edc:desc="QD1" edc:when="(field &amp; 0x1F) == 0x19"/>
              <edc:SFRFieldSemantic edc:cname="QD0" edc:desc="QD0" edc:when="(field &amp; 0x1F) == 0x1A"/>
              <edc:SFRFieldSemantic edc:cname="CCLOUT1" edc:desc="CCLOUT1" edc:when="(field &amp; 0x1F) == 0x1B"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS2" edc:desc="TSTBUS2" edc:when="(field &amp; 0x1F) == 0x1C"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS5" edc:desc="TSTBUS5" edc:when="(field &amp; 0x1F) == 0x1D"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS8" edc:desc="TSTBUS8" edc:when="(field &amp; 0x1F) == 0x1E"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS11" edc:desc="TSTBUS11" edc:when="(field &amp; 0x1F) == 0x1F"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x44001210"/>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="RPA2G4R" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x44001214">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="RPA2G4R" edc:nzwidth="0x5" edc:desc="RPA2/G4">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P2" edc:desc="SERCOM0/PAD2" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P0" edc:desc="SERCOM0/PAD0" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P3" edc:desc="SERCOM1/PAD3" edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P0" edc:desc="SERCOM1/PAD0" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO3" edc:desc="TCC0/WO3" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO1" edc:desc="TCC0/WO1" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO5" edc:desc="TCC0/WO5" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO3" edc:desc="TCC1/WO3" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO1" edc:desc="TCC1/WO1" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO5" edc:desc="TCC1/WO5" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="TCC2WO1" edc:desc="TCC2/WO1" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="TC0WO0" edc:desc="TC0/WO0" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="TC1WO1" edc:desc="TC1/WO1" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="TC2WO1" edc:desc="TC2/WO1" edc:when="(field &amp; 0x1F) == 0x11"/>
              <edc:SFRFieldSemantic edc:cname="TC3WO1" edc:desc="TC3/WO1" edc:when="(field &amp; 0x1F) == 0x12"/>
              <edc:SFRFieldSemantic edc:cname="TC4WO1" edc:desc="TC4/WO1" edc:when="(field &amp; 0x1F) == 0x13"/>
              <edc:SFRFieldSemantic edc:cname="TC5WO1" edc:desc="TC5/WO1" edc:when="(field &amp; 0x1F) == 0x14"/>
              <edc:SFRFieldSemantic edc:cname="TC6WO1" edc:desc="TC6/WO1" edc:when="(field &amp; 0x1F) == 0x15"/>
              <edc:SFRFieldSemantic edc:cname="TC7WO1" edc:desc="TC7/WO1" edc:when="(field &amp; 0x1F) == 0x16"/>
              <edc:SFRFieldSemantic edc:cname="QCS" edc:desc="QCS" edc:when="(field &amp; 0x1F) == 0x17"/>
              <edc:SFRFieldSemantic edc:cname="QD2" edc:desc="QD2" edc:when="(field &amp; 0x1F) == 0x18"/>
              <edc:SFRFieldSemantic edc:cname="QD1" edc:desc="QD1" edc:when="(field &amp; 0x1F) == 0x19"/>
              <edc:SFRFieldSemantic edc:cname="QD0" edc:desc="QD0" edc:when="(field &amp; 0x1F) == 0x1A"/>
              <edc:SFRFieldSemantic edc:cname="CCLOUT1" edc:desc="CCLOUT1" edc:when="(field &amp; 0x1F) == 0x1B"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS2" edc:desc="TSTBUS2" edc:when="(field &amp; 0x1F) == 0x1C"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS5" edc:desc="TSTBUS5" edc:when="(field &amp; 0x1F) == 0x1D"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS8" edc:desc="TSTBUS8" edc:when="(field &amp; 0x1F) == 0x1E"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS11" edc:desc="TSTBUS11" edc:when="(field &amp; 0x1F) == 0x1F"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="RPA3G1R" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x44001218">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="RPA3G1R" edc:nzwidth="0x5" edc:desc="RPA3/G1">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P1" edc:desc="SERCOM0/PAD1" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P1" edc:desc="SERCOM1/PAD1" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="REFO1" edc:desc="REFO1" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="REFO2" edc:desc="REFO2" edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="REFO3" edc:desc="REFO3" edc:when="(field &amp; 0x1F) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="REFO4" edc:desc="REFO4" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="QSCK" edc:desc="QSCK" edc:when="(field &amp; 0x1F) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="RPA3G2R" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x4400121C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="RPA3G2R" edc:nzwidth="0x5" edc:desc="RPA3/G2">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P0" edc:desc="SERCOM0/PAD0" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P3" edc:desc="SERCOM0/PAD3" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P2" edc:desc="SERCOM0/PAD2" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P3" edc:desc="SERCOM1/PAD3" edc:when="(field &amp; 0x1F) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P2" edc:desc="SERCOM1/PAD2" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO1" edc:desc="TCC0/WO1" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO5" edc:desc="TCC0/WO5" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO3" edc:desc="TCC0/WO3" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO1" edc:desc="TCC1/WO1" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO5" edc:desc="TCC1/WO5" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO3" edc:desc="TCC1/WO3" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="TCC2WO1" edc:desc="TCC2/WO1" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="TC0WO1" edc:desc="TC0/WO1" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="TC1WO1" edc:desc="TC1/WO1" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="TC2WO1" edc:desc="TC2/WO1" edc:when="(field &amp; 0x1F) == 0x11"/>
              <edc:SFRFieldSemantic edc:cname="TC3WO1" edc:desc="TC3/WO1" edc:when="(field &amp; 0x1F) == 0x12"/>
              <edc:SFRFieldSemantic edc:cname="TC4WO1" edc:desc="TC4/WO1" edc:when="(field &amp; 0x1F) == 0x13"/>
              <edc:SFRFieldSemantic edc:cname="TC5WO1" edc:desc="TC5/WO1" edc:when="(field &amp; 0x1F) == 0x14"/>
              <edc:SFRFieldSemantic edc:cname="TC6WO1" edc:desc="TC6/WO1" edc:when="(field &amp; 0x1F) == 0x15"/>
              <edc:SFRFieldSemantic edc:cname="TC7WO1" edc:desc="TC7/WO1" edc:when="(field &amp; 0x1F) == 0x16"/>
              <edc:SFRFieldSemantic edc:cname="QSPICS" edc:desc="QSPI/CS" edc:when="(field &amp; 0x1F) == 0x17"/>
              <edc:SFRFieldSemantic edc:cname="QD0" edc:desc="QD0" edc:when="(field &amp; 0x1F) == 0x18"/>
              <edc:SFRFieldSemantic edc:cname="QD3" edc:desc="QD3" edc:when="(field &amp; 0x1F) == 0x19"/>
              <edc:SFRFieldSemantic edc:cname="QD2" edc:desc="QD2" edc:when="(field &amp; 0x1F) == 0x1A"/>
              <edc:SFRFieldSemantic edc:cname="CCLOUT1" edc:desc="CCLOUT1" edc:when="(field &amp; 0x1F) == 0x1B"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS0" edc:desc="TSTBUS0" edc:when="(field &amp; 0x1F) == 0x1C"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS3" edc:desc="TSTBUS3" edc:when="(field &amp; 0x1F) == 0x1D"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS6" edc:desc="TSTBUS6" edc:when="(field &amp; 0x1F) == 0x1E"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS9" edc:desc="TSTBUS9" edc:when="(field &amp; 0x1F) == 0x1F"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="RPA3G3R" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x44001220">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="RPA3G3R" edc:nzwidth="0x5" edc:desc="RPA3/G3">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P0" edc:desc="SERCOM0/PAD0" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P3" edc:desc="SERCOM0/PAD3" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P2" edc:desc="SERCOM1/PAD2" edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P3" edc:desc="SERCOM1/PAD3" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO2" edc:desc="TCC0/WO2" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO0" edc:desc="TCC0/WO0" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO4" edc:desc="TCC0/WO4" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO2" edc:desc="TCC1/WO2" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO0" edc:desc="TCC1/WO0" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO4" edc:desc="TCC1/WO4" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="TCC2WO0" edc:desc="TCC2/WO0" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="TC0WO0" edc:desc="TC0/WO0" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="TC1WO0" edc:desc="TC1/WO0" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="TC2WO0" edc:desc="TC2/WO0" edc:when="(field &amp; 0x1F) == 0x11"/>
              <edc:SFRFieldSemantic edc:cname="TC3WO0" edc:desc="TC3/WO0" edc:when="(field &amp; 0x1F) == 0x12"/>
              <edc:SFRFieldSemantic edc:cname="TC4WO0" edc:desc="TC4/WO0" edc:when="(field &amp; 0x1F) == 0x13"/>
              <edc:SFRFieldSemantic edc:cname="TC5WO0" edc:desc="TC5/WO0" edc:when="(field &amp; 0x1F) == 0x14"/>
              <edc:SFRFieldSemantic edc:cname="TC6WO0" edc:desc="TC6/WO0" edc:when="(field &amp; 0x1F) == 0x15"/>
              <edc:SFRFieldSemantic edc:cname="TC7WO0" edc:desc="TC7/WO0" edc:when="(field &amp; 0x1F) == 0x16"/>
              <edc:SFRFieldSemantic edc:cname="QCS" edc:desc="QCS" edc:when="(field &amp; 0x1F) == 0x17"/>
              <edc:SFRFieldSemantic edc:cname="QD1" edc:desc="QD1" edc:when="(field &amp; 0x1F) == 0x18"/>
              <edc:SFRFieldSemantic edc:cname="QD0" edc:desc="QD0" edc:when="(field &amp; 0x1F) == 0x19"/>
              <edc:SFRFieldSemantic edc:cname="QD3" edc:desc="QD3" edc:when="(field &amp; 0x1F) == 0x1A"/>
              <edc:SFRFieldSemantic edc:cname="CCLOUT0" edc:desc="CCLOUT0" edc:when="(field &amp; 0x1F) == 0x1B"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS1" edc:desc="TSTBUS1" edc:when="(field &amp; 0x1F) == 0x1C"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS4" edc:desc="TSTBUS4" edc:when="(field &amp; 0x1F) == 0x1D"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS7" edc:desc="TSTBUS7" edc:when="(field &amp; 0x1F) == 0x1E"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS10" edc:desc="TSTBUS10" edc:when="(field &amp; 0x1F) == 0x1F"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="RPA4G2R" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x44001224">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="RPA4G2R" edc:nzwidth="0x5" edc:desc="RPA4/G2">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P0" edc:desc="SERCOM0/PAD0" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P3" edc:desc="SERCOM0/PAD3" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P2" edc:desc="SERCOM0/PAD2" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P3" edc:desc="SERCOM1/PAD3" edc:when="(field &amp; 0x1F) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P2" edc:desc="SERCOM1/PAD2" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO1" edc:desc="TCC0/WO1" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO5" edc:desc="TCC0/WO5" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO3" edc:desc="TCC0/WO3" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO1" edc:desc="TCC1/WO1" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO5" edc:desc="TCC1/WO5" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO3" edc:desc="TCC1/WO3" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="TCC2WO1" edc:desc="TCC2/WO1" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="TC0WO1" edc:desc="TC0/WO1" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="TC1WO1" edc:desc="TC1/WO1" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="TC2WO1" edc:desc="TC2/WO1" edc:when="(field &amp; 0x1F) == 0x11"/>
              <edc:SFRFieldSemantic edc:cname="TC3WO1" edc:desc="TC3/WO1" edc:when="(field &amp; 0x1F) == 0x12"/>
              <edc:SFRFieldSemantic edc:cname="TC4WO1" edc:desc="TC4/WO1" edc:when="(field &amp; 0x1F) == 0x13"/>
              <edc:SFRFieldSemantic edc:cname="TC5WO1" edc:desc="TC5/WO1" edc:when="(field &amp; 0x1F) == 0x14"/>
              <edc:SFRFieldSemantic edc:cname="TC6WO1" edc:desc="TC6/WO1" edc:when="(field &amp; 0x1F) == 0x15"/>
              <edc:SFRFieldSemantic edc:cname="TC7WO1" edc:desc="TC7/WO1" edc:when="(field &amp; 0x1F) == 0x16"/>
              <edc:SFRFieldSemantic edc:cname="QSPICS" edc:desc="QSPI/CS" edc:when="(field &amp; 0x1F) == 0x17"/>
              <edc:SFRFieldSemantic edc:cname="QD0" edc:desc="QD0" edc:when="(field &amp; 0x1F) == 0x18"/>
              <edc:SFRFieldSemantic edc:cname="QD3" edc:desc="QD3" edc:when="(field &amp; 0x1F) == 0x19"/>
              <edc:SFRFieldSemantic edc:cname="QD2" edc:desc="QD2" edc:when="(field &amp; 0x1F) == 0x1A"/>
              <edc:SFRFieldSemantic edc:cname="CCLOUT1" edc:desc="CCLOUT1" edc:when="(field &amp; 0x1F) == 0x1B"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS0" edc:desc="TSTBUS0" edc:when="(field &amp; 0x1F) == 0x1C"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS3" edc:desc="TSTBUS3" edc:when="(field &amp; 0x1F) == 0x1D"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS6" edc:desc="TSTBUS6" edc:when="(field &amp; 0x1F) == 0x1E"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS9" edc:desc="TSTBUS9" edc:when="(field &amp; 0x1F) == 0x1F"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="RPA4G3R" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x44001228">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="RPA4G3R" edc:nzwidth="0x5" edc:desc="RPA4/G3">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P0" edc:desc="SERCOM0/PAD0" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P3" edc:desc="SERCOM0/PAD3" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P2" edc:desc="SERCOM1/PAD2" edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P3" edc:desc="SERCOM1/PAD3" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO2" edc:desc="TCC0/WO2" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO0" edc:desc="TCC0/WO0" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO4" edc:desc="TCC0/WO4" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO2" edc:desc="TCC1/WO2" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO0" edc:desc="TCC1/WO0" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO4" edc:desc="TCC1/WO4" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="TCC2WO0" edc:desc="TCC2/WO0" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="TC0WO0" edc:desc="TC0/WO0" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="TC1WO0" edc:desc="TC1/WO0" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="TC2WO0" edc:desc="TC2/WO0" edc:when="(field &amp; 0x1F) == 0x11"/>
              <edc:SFRFieldSemantic edc:cname="TC3WO0" edc:desc="TC3/WO0" edc:when="(field &amp; 0x1F) == 0x12"/>
              <edc:SFRFieldSemantic edc:cname="TC4WO0" edc:desc="TC4/WO0" edc:when="(field &amp; 0x1F) == 0x13"/>
              <edc:SFRFieldSemantic edc:cname="TC5WO0" edc:desc="TC5/WO0" edc:when="(field &amp; 0x1F) == 0x14"/>
              <edc:SFRFieldSemantic edc:cname="TC6WO0" edc:desc="TC6/WO0" edc:when="(field &amp; 0x1F) == 0x15"/>
              <edc:SFRFieldSemantic edc:cname="TC7WO0" edc:desc="TC7/WO0" edc:when="(field &amp; 0x1F) == 0x16"/>
              <edc:SFRFieldSemantic edc:cname="QCS" edc:desc="QCS" edc:when="(field &amp; 0x1F) == 0x17"/>
              <edc:SFRFieldSemantic edc:cname="QD1" edc:desc="QD1" edc:when="(field &amp; 0x1F) == 0x18"/>
              <edc:SFRFieldSemantic edc:cname="QD0" edc:desc="QD0" edc:when="(field &amp; 0x1F) == 0x19"/>
              <edc:SFRFieldSemantic edc:cname="QD3" edc:desc="QD3" edc:when="(field &amp; 0x1F) == 0x1A"/>
              <edc:SFRFieldSemantic edc:cname="CCLOUT0" edc:desc="CCLOUT0" edc:when="(field &amp; 0x1F) == 0x1B"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS1" edc:desc="TSTBUS1" edc:when="(field &amp; 0x1F) == 0x1C"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS4" edc:desc="TSTBUS4" edc:when="(field &amp; 0x1F) == 0x1D"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS7" edc:desc="TSTBUS7" edc:when="(field &amp; 0x1F) == 0x1E"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS10" edc:desc="TSTBUS10" edc:when="(field &amp; 0x1F) == 0x1F"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="RPA4G4R" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x4400122C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="RPA4G4R" edc:nzwidth="0x5" edc:desc="RPA4/G4">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P2" edc:desc="SERCOM0/PAD2" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P0" edc:desc="SERCOM0/PAD0" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P3" edc:desc="SERCOM1/PAD3" edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P0" edc:desc="SERCOM1/PAD0" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO3" edc:desc="TCC0/WO3" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO1" edc:desc="TCC0/WO1" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO5" edc:desc="TCC0/WO5" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO3" edc:desc="TCC1/WO3" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO1" edc:desc="TCC1/WO1" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO5" edc:desc="TCC1/WO5" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="TCC2WO1" edc:desc="TCC2/WO1" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="TC0WO0" edc:desc="TC0/WO0" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="TC1WO1" edc:desc="TC1/WO1" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="TC2WO1" edc:desc="TC2/WO1" edc:when="(field &amp; 0x1F) == 0x11"/>
              <edc:SFRFieldSemantic edc:cname="TC3WO1" edc:desc="TC3/WO1" edc:when="(field &amp; 0x1F) == 0x12"/>
              <edc:SFRFieldSemantic edc:cname="TC4WO1" edc:desc="TC4/WO1" edc:when="(field &amp; 0x1F) == 0x13"/>
              <edc:SFRFieldSemantic edc:cname="TC5WO1" edc:desc="TC5/WO1" edc:when="(field &amp; 0x1F) == 0x14"/>
              <edc:SFRFieldSemantic edc:cname="TC6WO1" edc:desc="TC6/WO1" edc:when="(field &amp; 0x1F) == 0x15"/>
              <edc:SFRFieldSemantic edc:cname="TC7WO1" edc:desc="TC7/WO1" edc:when="(field &amp; 0x1F) == 0x16"/>
              <edc:SFRFieldSemantic edc:cname="QCS" edc:desc="QCS" edc:when="(field &amp; 0x1F) == 0x17"/>
              <edc:SFRFieldSemantic edc:cname="QD2" edc:desc="QD2" edc:when="(field &amp; 0x1F) == 0x18"/>
              <edc:SFRFieldSemantic edc:cname="QD1" edc:desc="QD1" edc:when="(field &amp; 0x1F) == 0x19"/>
              <edc:SFRFieldSemantic edc:cname="QD0" edc:desc="QD0" edc:when="(field &amp; 0x1F) == 0x1A"/>
              <edc:SFRFieldSemantic edc:cname="CCLOUT1" edc:desc="CCLOUT1" edc:when="(field &amp; 0x1F) == 0x1B"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS2" edc:desc="TSTBUS2" edc:when="(field &amp; 0x1F) == 0x1C"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS5" edc:desc="TSTBUS5" edc:when="(field &amp; 0x1F) == 0x1D"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS8" edc:desc="TSTBUS8" edc:when="(field &amp; 0x1F) == 0x1E"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS11" edc:desc="TSTBUS11" edc:when="(field &amp; 0x1F) == 0x1F"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="RPA5G1R" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x44001230">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="RPA5G1R" edc:nzwidth="0x5" edc:desc="RPA5/G1">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P1" edc:desc="SERCOM0/PAD1" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P1" edc:desc="SERCOM1/PAD1" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="REFO1" edc:desc="REFO1" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="REFO2" edc:desc="REFO2" edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="REFO3" edc:desc="REFO3" edc:when="(field &amp; 0x1F) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="REFO4" edc:desc="REFO4" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="QSCK" edc:desc="QSCK" edc:when="(field &amp; 0x1F) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="RPA5G3R" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x44001234">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="RPA5G3R" edc:nzwidth="0x5" edc:desc="RPA5/G3">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P0" edc:desc="SERCOM0/PAD0" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P3" edc:desc="SERCOM0/PAD3" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P2" edc:desc="SERCOM1/PAD2" edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P3" edc:desc="SERCOM1/PAD3" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO2" edc:desc="TCC0/WO2" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO0" edc:desc="TCC0/WO0" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO4" edc:desc="TCC0/WO4" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO2" edc:desc="TCC1/WO2" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO0" edc:desc="TCC1/WO0" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO4" edc:desc="TCC1/WO4" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="TCC2WO0" edc:desc="TCC2/WO0" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="TC0WO0" edc:desc="TC0/WO0" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="TC1WO0" edc:desc="TC1/WO0" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="TC2WO0" edc:desc="TC2/WO0" edc:when="(field &amp; 0x1F) == 0x11"/>
              <edc:SFRFieldSemantic edc:cname="TC3WO0" edc:desc="TC3/WO0" edc:when="(field &amp; 0x1F) == 0x12"/>
              <edc:SFRFieldSemantic edc:cname="TC4WO0" edc:desc="TC4/WO0" edc:when="(field &amp; 0x1F) == 0x13"/>
              <edc:SFRFieldSemantic edc:cname="TC5WO0" edc:desc="TC5/WO0" edc:when="(field &amp; 0x1F) == 0x14"/>
              <edc:SFRFieldSemantic edc:cname="TC6WO0" edc:desc="TC6/WO0" edc:when="(field &amp; 0x1F) == 0x15"/>
              <edc:SFRFieldSemantic edc:cname="TC7WO0" edc:desc="TC7/WO0" edc:when="(field &amp; 0x1F) == 0x16"/>
              <edc:SFRFieldSemantic edc:cname="QCS" edc:desc="QCS" edc:when="(field &amp; 0x1F) == 0x17"/>
              <edc:SFRFieldSemantic edc:cname="QD1" edc:desc="QD1" edc:when="(field &amp; 0x1F) == 0x18"/>
              <edc:SFRFieldSemantic edc:cname="QD0" edc:desc="QD0" edc:when="(field &amp; 0x1F) == 0x19"/>
              <edc:SFRFieldSemantic edc:cname="QD3" edc:desc="QD3" edc:when="(field &amp; 0x1F) == 0x1A"/>
              <edc:SFRFieldSemantic edc:cname="CCLOUT0" edc:desc="CCLOUT0" edc:when="(field &amp; 0x1F) == 0x1B"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS1" edc:desc="TSTBUS1" edc:when="(field &amp; 0x1F) == 0x1C"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS4" edc:desc="TSTBUS4" edc:when="(field &amp; 0x1F) == 0x1D"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS7" edc:desc="TSTBUS7" edc:when="(field &amp; 0x1F) == 0x1E"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS10" edc:desc="TSTBUS10" edc:when="(field &amp; 0x1F) == 0x1F"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="RPA5G4R" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x44001238">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="RPA5G4R" edc:nzwidth="0x5" edc:desc="RPA5/G4">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P2" edc:desc="SERCOM0/PAD2" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P0" edc:desc="SERCOM0/PAD0" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P3" edc:desc="SERCOM1/PAD3" edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P0" edc:desc="SERCOM1/PAD0" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO3" edc:desc="TCC0/WO3" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO1" edc:desc="TCC0/WO1" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO5" edc:desc="TCC0/WO5" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO3" edc:desc="TCC1/WO3" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO1" edc:desc="TCC1/WO1" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO5" edc:desc="TCC1/WO5" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="TCC2WO1" edc:desc="TCC2/WO1" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="TC0WO0" edc:desc="TC0/WO0" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="TC1WO1" edc:desc="TC1/WO1" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="TC2WO1" edc:desc="TC2/WO1" edc:when="(field &amp; 0x1F) == 0x11"/>
              <edc:SFRFieldSemantic edc:cname="TC3WO1" edc:desc="TC3/WO1" edc:when="(field &amp; 0x1F) == 0x12"/>
              <edc:SFRFieldSemantic edc:cname="TC4WO1" edc:desc="TC4/WO1" edc:when="(field &amp; 0x1F) == 0x13"/>
              <edc:SFRFieldSemantic edc:cname="TC5WO1" edc:desc="TC5/WO1" edc:when="(field &amp; 0x1F) == 0x14"/>
              <edc:SFRFieldSemantic edc:cname="TC6WO1" edc:desc="TC6/WO1" edc:when="(field &amp; 0x1F) == 0x15"/>
              <edc:SFRFieldSemantic edc:cname="TC7WO1" edc:desc="TC7/WO1" edc:when="(field &amp; 0x1F) == 0x16"/>
              <edc:SFRFieldSemantic edc:cname="QCS" edc:desc="QCS" edc:when="(field &amp; 0x1F) == 0x17"/>
              <edc:SFRFieldSemantic edc:cname="QD2" edc:desc="QD2" edc:when="(field &amp; 0x1F) == 0x18"/>
              <edc:SFRFieldSemantic edc:cname="QD1" edc:desc="QD1" edc:when="(field &amp; 0x1F) == 0x19"/>
              <edc:SFRFieldSemantic edc:cname="QD0" edc:desc="QD0" edc:when="(field &amp; 0x1F) == 0x1A"/>
              <edc:SFRFieldSemantic edc:cname="CCLOUT1" edc:desc="CCLOUT1" edc:when="(field &amp; 0x1F) == 0x1B"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS2" edc:desc="TSTBUS2" edc:when="(field &amp; 0x1F) == 0x1C"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS5" edc:desc="TSTBUS5" edc:when="(field &amp; 0x1F) == 0x1D"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS8" edc:desc="TSTBUS8" edc:when="(field &amp; 0x1F) == 0x1E"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS11" edc:desc="TSTBUS11" edc:when="(field &amp; 0x1F) == 0x1F"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="RPA6G1R" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x4400123C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="RPA6G1R" edc:nzwidth="0x5" edc:desc="RPA6/G1">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P1" edc:desc="SERCOM0/PAD1" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P1" edc:desc="SERCOM1/PAD1" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="REFO1" edc:desc="REFO1" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="REFO2" edc:desc="REFO2" edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="REFO3" edc:desc="REFO3" edc:when="(field &amp; 0x1F) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="REFO4" edc:desc="REFO4" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="QSCK" edc:desc="QSCK" edc:when="(field &amp; 0x1F) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="RPA6G2R" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x44001240">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="RPA6G2R" edc:nzwidth="0x5" edc:desc="RPA6/G2">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P0" edc:desc="SERCOM0/PAD0" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P3" edc:desc="SERCOM0/PAD3" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P2" edc:desc="SERCOM0/PAD2" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P3" edc:desc="SERCOM1/PAD3" edc:when="(field &amp; 0x1F) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P2" edc:desc="SERCOM1/PAD2" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO1" edc:desc="TCC0/WO1" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO5" edc:desc="TCC0/WO5" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO3" edc:desc="TCC0/WO3" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO1" edc:desc="TCC1/WO1" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO5" edc:desc="TCC1/WO5" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO3" edc:desc="TCC1/WO3" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="TCC2WO1" edc:desc="TCC2/WO1" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="TC0WO1" edc:desc="TC0/WO1" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="TC1WO1" edc:desc="TC1/WO1" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="TC2WO1" edc:desc="TC2/WO1" edc:when="(field &amp; 0x1F) == 0x11"/>
              <edc:SFRFieldSemantic edc:cname="TC3WO1" edc:desc="TC3/WO1" edc:when="(field &amp; 0x1F) == 0x12"/>
              <edc:SFRFieldSemantic edc:cname="TC4WO1" edc:desc="TC4/WO1" edc:when="(field &amp; 0x1F) == 0x13"/>
              <edc:SFRFieldSemantic edc:cname="TC5WO1" edc:desc="TC5/WO1" edc:when="(field &amp; 0x1F) == 0x14"/>
              <edc:SFRFieldSemantic edc:cname="TC6WO1" edc:desc="TC6/WO1" edc:when="(field &amp; 0x1F) == 0x15"/>
              <edc:SFRFieldSemantic edc:cname="TC7WO1" edc:desc="TC7/WO1" edc:when="(field &amp; 0x1F) == 0x16"/>
              <edc:SFRFieldSemantic edc:cname="QSPICS" edc:desc="QSPI/CS" edc:when="(field &amp; 0x1F) == 0x17"/>
              <edc:SFRFieldSemantic edc:cname="QD0" edc:desc="QD0" edc:when="(field &amp; 0x1F) == 0x18"/>
              <edc:SFRFieldSemantic edc:cname="QD3" edc:desc="QD3" edc:when="(field &amp; 0x1F) == 0x19"/>
              <edc:SFRFieldSemantic edc:cname="QD2" edc:desc="QD2" edc:when="(field &amp; 0x1F) == 0x1A"/>
              <edc:SFRFieldSemantic edc:cname="CCLOUT1" edc:desc="CCLOUT1" edc:when="(field &amp; 0x1F) == 0x1B"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS0" edc:desc="TSTBUS0" edc:when="(field &amp; 0x1F) == 0x1C"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS3" edc:desc="TSTBUS3" edc:when="(field &amp; 0x1F) == 0x1D"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS6" edc:desc="TSTBUS6" edc:when="(field &amp; 0x1F) == 0x1E"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS9" edc:desc="TSTBUS9" edc:when="(field &amp; 0x1F) == 0x1F"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="RPA6G4R" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x44001244">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="RPA6G4R" edc:nzwidth="0x5" edc:desc="RPA6/G4">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P2" edc:desc="SERCOM0/PAD2" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P0" edc:desc="SERCOM0/PAD0" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P3" edc:desc="SERCOM1/PAD3" edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P0" edc:desc="SERCOM1/PAD0" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO3" edc:desc="TCC0/WO3" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO1" edc:desc="TCC0/WO1" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO5" edc:desc="TCC0/WO5" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO3" edc:desc="TCC1/WO3" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO1" edc:desc="TCC1/WO1" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO5" edc:desc="TCC1/WO5" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="TCC2WO1" edc:desc="TCC2/WO1" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="TC0WO0" edc:desc="TC0/WO0" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="TC1WO1" edc:desc="TC1/WO1" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="TC2WO1" edc:desc="TC2/WO1" edc:when="(field &amp; 0x1F) == 0x11"/>
              <edc:SFRFieldSemantic edc:cname="TC3WO1" edc:desc="TC3/WO1" edc:when="(field &amp; 0x1F) == 0x12"/>
              <edc:SFRFieldSemantic edc:cname="TC4WO1" edc:desc="TC4/WO1" edc:when="(field &amp; 0x1F) == 0x13"/>
              <edc:SFRFieldSemantic edc:cname="TC5WO1" edc:desc="TC5/WO1" edc:when="(field &amp; 0x1F) == 0x14"/>
              <edc:SFRFieldSemantic edc:cname="TC6WO1" edc:desc="TC6/WO1" edc:when="(field &amp; 0x1F) == 0x15"/>
              <edc:SFRFieldSemantic edc:cname="TC7WO1" edc:desc="TC7/WO1" edc:when="(field &amp; 0x1F) == 0x16"/>
              <edc:SFRFieldSemantic edc:cname="QCS" edc:desc="QCS" edc:when="(field &amp; 0x1F) == 0x17"/>
              <edc:SFRFieldSemantic edc:cname="QD2" edc:desc="QD2" edc:when="(field &amp; 0x1F) == 0x18"/>
              <edc:SFRFieldSemantic edc:cname="QD1" edc:desc="QD1" edc:when="(field &amp; 0x1F) == 0x19"/>
              <edc:SFRFieldSemantic edc:cname="QD0" edc:desc="QD0" edc:when="(field &amp; 0x1F) == 0x1A"/>
              <edc:SFRFieldSemantic edc:cname="CCLOUT1" edc:desc="CCLOUT1" edc:when="(field &amp; 0x1F) == 0x1B"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS2" edc:desc="TSTBUS2" edc:when="(field &amp; 0x1F) == 0x1C"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS5" edc:desc="TSTBUS5" edc:when="(field &amp; 0x1F) == 0x1D"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS8" edc:desc="TSTBUS8" edc:when="(field &amp; 0x1F) == 0x1E"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS11" edc:desc="TSTBUS11" edc:when="(field &amp; 0x1F) == 0x1F"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="RPA7G1R" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x44001248">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="RPA7G1R" edc:nzwidth="0x5" edc:desc="RPA7/G1">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P1" edc:desc="SERCOM0/PAD1" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P1" edc:desc="SERCOM1/PAD1" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="REFO1" edc:desc="REFO1" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="REFO2" edc:desc="REFO2" edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="REFO3" edc:desc="REFO3" edc:when="(field &amp; 0x1F) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="REFO4" edc:desc="REFO4" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="QSCK" edc:desc="QSCK" edc:when="(field &amp; 0x1F) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="RPA7G2R" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x4400124C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="RPA7G2R" edc:nzwidth="0x5" edc:desc="RPA7/G2">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P0" edc:desc="SERCOM0/PAD0" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P3" edc:desc="SERCOM0/PAD3" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P2" edc:desc="SERCOM0/PAD2" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P3" edc:desc="SERCOM1/PAD3" edc:when="(field &amp; 0x1F) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P2" edc:desc="SERCOM1/PAD2" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO1" edc:desc="TCC0/WO1" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO5" edc:desc="TCC0/WO5" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO3" edc:desc="TCC0/WO3" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO1" edc:desc="TCC1/WO1" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO5" edc:desc="TCC1/WO5" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO3" edc:desc="TCC1/WO3" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="TCC2WO1" edc:desc="TCC2/WO1" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="TC0WO1" edc:desc="TC0/WO1" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="TC1WO1" edc:desc="TC1/WO1" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="TC2WO1" edc:desc="TC2/WO1" edc:when="(field &amp; 0x1F) == 0x11"/>
              <edc:SFRFieldSemantic edc:cname="TC3WO1" edc:desc="TC3/WO1" edc:when="(field &amp; 0x1F) == 0x12"/>
              <edc:SFRFieldSemantic edc:cname="TC4WO1" edc:desc="TC4/WO1" edc:when="(field &amp; 0x1F) == 0x13"/>
              <edc:SFRFieldSemantic edc:cname="TC5WO1" edc:desc="TC5/WO1" edc:when="(field &amp; 0x1F) == 0x14"/>
              <edc:SFRFieldSemantic edc:cname="TC6WO1" edc:desc="TC6/WO1" edc:when="(field &amp; 0x1F) == 0x15"/>
              <edc:SFRFieldSemantic edc:cname="TC7WO1" edc:desc="TC7/WO1" edc:when="(field &amp; 0x1F) == 0x16"/>
              <edc:SFRFieldSemantic edc:cname="QSPICS" edc:desc="QSPI/CS" edc:when="(field &amp; 0x1F) == 0x17"/>
              <edc:SFRFieldSemantic edc:cname="QD0" edc:desc="QD0" edc:when="(field &amp; 0x1F) == 0x18"/>
              <edc:SFRFieldSemantic edc:cname="QD3" edc:desc="QD3" edc:when="(field &amp; 0x1F) == 0x19"/>
              <edc:SFRFieldSemantic edc:cname="QD2" edc:desc="QD2" edc:when="(field &amp; 0x1F) == 0x1A"/>
              <edc:SFRFieldSemantic edc:cname="CCLOUT1" edc:desc="CCLOUT1" edc:when="(field &amp; 0x1F) == 0x1B"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS0" edc:desc="TSTBUS0" edc:when="(field &amp; 0x1F) == 0x1C"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS3" edc:desc="TSTBUS3" edc:when="(field &amp; 0x1F) == 0x1D"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS6" edc:desc="TSTBUS6" edc:when="(field &amp; 0x1F) == 0x1E"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS9" edc:desc="TSTBUS9" edc:when="(field &amp; 0x1F) == 0x1F"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="RPA8G2R" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x44001250">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="RPA8G2R" edc:nzwidth="0x5" edc:desc="RPA8/G2">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P0" edc:desc="SERCOM0/PAD0" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P3" edc:desc="SERCOM0/PAD3" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P2" edc:desc="SERCOM0/PAD2" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P3" edc:desc="SERCOM1/PAD3" edc:when="(field &amp; 0x1F) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P2" edc:desc="SERCOM1/PAD2" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO1" edc:desc="TCC0/WO1" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO5" edc:desc="TCC0/WO5" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO3" edc:desc="TCC0/WO3" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO1" edc:desc="TCC1/WO1" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO5" edc:desc="TCC1/WO5" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO3" edc:desc="TCC1/WO3" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="TCC2WO1" edc:desc="TCC2/WO1" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="TC0WO1" edc:desc="TC0/WO1" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="TC1WO1" edc:desc="TC1/WO1" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="TC2WO1" edc:desc="TC2/WO1" edc:when="(field &amp; 0x1F) == 0x11"/>
              <edc:SFRFieldSemantic edc:cname="TC3WO1" edc:desc="TC3/WO1" edc:when="(field &amp; 0x1F) == 0x12"/>
              <edc:SFRFieldSemantic edc:cname="TC4WO1" edc:desc="TC4/WO1" edc:when="(field &amp; 0x1F) == 0x13"/>
              <edc:SFRFieldSemantic edc:cname="TC5WO1" edc:desc="TC5/WO1" edc:when="(field &amp; 0x1F) == 0x14"/>
              <edc:SFRFieldSemantic edc:cname="TC6WO1" edc:desc="TC6/WO1" edc:when="(field &amp; 0x1F) == 0x15"/>
              <edc:SFRFieldSemantic edc:cname="TC7WO1" edc:desc="TC7/WO1" edc:when="(field &amp; 0x1F) == 0x16"/>
              <edc:SFRFieldSemantic edc:cname="QSPICS" edc:desc="QSPI/CS" edc:when="(field &amp; 0x1F) == 0x17"/>
              <edc:SFRFieldSemantic edc:cname="QD0" edc:desc="QD0" edc:when="(field &amp; 0x1F) == 0x18"/>
              <edc:SFRFieldSemantic edc:cname="QD3" edc:desc="QD3" edc:when="(field &amp; 0x1F) == 0x19"/>
              <edc:SFRFieldSemantic edc:cname="QD2" edc:desc="QD2" edc:when="(field &amp; 0x1F) == 0x1A"/>
              <edc:SFRFieldSemantic edc:cname="CCLOUT1" edc:desc="CCLOUT1" edc:when="(field &amp; 0x1F) == 0x1B"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS0" edc:desc="TSTBUS0" edc:when="(field &amp; 0x1F) == 0x1C"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS3" edc:desc="TSTBUS3" edc:when="(field &amp; 0x1F) == 0x1D"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS6" edc:desc="TSTBUS6" edc:when="(field &amp; 0x1F) == 0x1E"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS9" edc:desc="TSTBUS9" edc:when="(field &amp; 0x1F) == 0x1F"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="RPA8G3R" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x44001254">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="RPA8G3R" edc:nzwidth="0x5" edc:desc="RPA8/G3">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P0" edc:desc="SERCOM0/PAD0" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P3" edc:desc="SERCOM0/PAD3" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P2" edc:desc="SERCOM1/PAD2" edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P3" edc:desc="SERCOM1/PAD3" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO2" edc:desc="TCC0/WO2" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO0" edc:desc="TCC0/WO0" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO4" edc:desc="TCC0/WO4" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO2" edc:desc="TCC1/WO2" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO0" edc:desc="TCC1/WO0" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO4" edc:desc="TCC1/WO4" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="TCC2WO0" edc:desc="TCC2/WO0" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="TC0WO0" edc:desc="TC0/WO0" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="TC1WO0" edc:desc="TC1/WO0" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="TC2WO0" edc:desc="TC2/WO0" edc:when="(field &amp; 0x1F) == 0x11"/>
              <edc:SFRFieldSemantic edc:cname="TC3WO0" edc:desc="TC3/WO0" edc:when="(field &amp; 0x1F) == 0x12"/>
              <edc:SFRFieldSemantic edc:cname="TC4WO0" edc:desc="TC4/WO0" edc:when="(field &amp; 0x1F) == 0x13"/>
              <edc:SFRFieldSemantic edc:cname="TC5WO0" edc:desc="TC5/WO0" edc:when="(field &amp; 0x1F) == 0x14"/>
              <edc:SFRFieldSemantic edc:cname="TC6WO0" edc:desc="TC6/WO0" edc:when="(field &amp; 0x1F) == 0x15"/>
              <edc:SFRFieldSemantic edc:cname="TC7WO0" edc:desc="TC7/WO0" edc:when="(field &amp; 0x1F) == 0x16"/>
              <edc:SFRFieldSemantic edc:cname="QCS" edc:desc="QCS" edc:when="(field &amp; 0x1F) == 0x17"/>
              <edc:SFRFieldSemantic edc:cname="QD1" edc:desc="QD1" edc:when="(field &amp; 0x1F) == 0x18"/>
              <edc:SFRFieldSemantic edc:cname="QD0" edc:desc="QD0" edc:when="(field &amp; 0x1F) == 0x19"/>
              <edc:SFRFieldSemantic edc:cname="QD3" edc:desc="QD3" edc:when="(field &amp; 0x1F) == 0x1A"/>
              <edc:SFRFieldSemantic edc:cname="CCLOUT0" edc:desc="CCLOUT0" edc:when="(field &amp; 0x1F) == 0x1B"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS1" edc:desc="TSTBUS1" edc:when="(field &amp; 0x1F) == 0x1C"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS4" edc:desc="TSTBUS4" edc:when="(field &amp; 0x1F) == 0x1D"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS7" edc:desc="TSTBUS7" edc:when="(field &amp; 0x1F) == 0x1E"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS10" edc:desc="TSTBUS10" edc:when="(field &amp; 0x1F) == 0x1F"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="RPA8G4R" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x44001258">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="RPA8G4R" edc:nzwidth="0x5" edc:desc="RPA8/G4">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P2" edc:desc="SERCOM0/PAD2" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P0" edc:desc="SERCOM0/PAD0" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P3" edc:desc="SERCOM1/PAD3" edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P0" edc:desc="SERCOM1/PAD0" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO3" edc:desc="TCC0/WO3" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO1" edc:desc="TCC0/WO1" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO5" edc:desc="TCC0/WO5" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO3" edc:desc="TCC1/WO3" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO1" edc:desc="TCC1/WO1" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO5" edc:desc="TCC1/WO5" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="TCC2WO1" edc:desc="TCC2/WO1" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="TC0WO0" edc:desc="TC0/WO0" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="TC1WO1" edc:desc="TC1/WO1" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="TC2WO1" edc:desc="TC2/WO1" edc:when="(field &amp; 0x1F) == 0x11"/>
              <edc:SFRFieldSemantic edc:cname="TC3WO1" edc:desc="TC3/WO1" edc:when="(field &amp; 0x1F) == 0x12"/>
              <edc:SFRFieldSemantic edc:cname="TC4WO1" edc:desc="TC4/WO1" edc:when="(field &amp; 0x1F) == 0x13"/>
              <edc:SFRFieldSemantic edc:cname="TC5WO1" edc:desc="TC5/WO1" edc:when="(field &amp; 0x1F) == 0x14"/>
              <edc:SFRFieldSemantic edc:cname="TC6WO1" edc:desc="TC6/WO1" edc:when="(field &amp; 0x1F) == 0x15"/>
              <edc:SFRFieldSemantic edc:cname="TC7WO1" edc:desc="TC7/WO1" edc:when="(field &amp; 0x1F) == 0x16"/>
              <edc:SFRFieldSemantic edc:cname="QCS" edc:desc="QCS" edc:when="(field &amp; 0x1F) == 0x17"/>
              <edc:SFRFieldSemantic edc:cname="QD2" edc:desc="QD2" edc:when="(field &amp; 0x1F) == 0x18"/>
              <edc:SFRFieldSemantic edc:cname="QD1" edc:desc="QD1" edc:when="(field &amp; 0x1F) == 0x19"/>
              <edc:SFRFieldSemantic edc:cname="QD0" edc:desc="QD0" edc:when="(field &amp; 0x1F) == 0x1A"/>
              <edc:SFRFieldSemantic edc:cname="CCLOUT1" edc:desc="CCLOUT1" edc:when="(field &amp; 0x1F) == 0x1B"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS2" edc:desc="TSTBUS2" edc:when="(field &amp; 0x1F) == 0x1C"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS5" edc:desc="TSTBUS5" edc:when="(field &amp; 0x1F) == 0x1D"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS8" edc:desc="TSTBUS8" edc:when="(field &amp; 0x1F) == 0x1E"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS11" edc:desc="TSTBUS11" edc:when="(field &amp; 0x1F) == 0x1F"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4400125C"/>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="RPA9G3R" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x44001260">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="RPA9G3R" edc:nzwidth="0x5" edc:desc="RPA9/G3">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P0" edc:desc="SERCOM0/PAD0" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P3" edc:desc="SERCOM0/PAD3" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P2" edc:desc="SERCOM1/PAD2" edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P3" edc:desc="SERCOM1/PAD3" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO2" edc:desc="TCC0/WO2" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO0" edc:desc="TCC0/WO0" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO4" edc:desc="TCC0/WO4" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO2" edc:desc="TCC1/WO2" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO0" edc:desc="TCC1/WO0" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO4" edc:desc="TCC1/WO4" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="TCC2WO0" edc:desc="TCC2/WO0" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="TC0WO0" edc:desc="TC0/WO0" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="TC1WO0" edc:desc="TC1/WO0" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="TC2WO0" edc:desc="TC2/WO0" edc:when="(field &amp; 0x1F) == 0x11"/>
              <edc:SFRFieldSemantic edc:cname="TC3WO0" edc:desc="TC3/WO0" edc:when="(field &amp; 0x1F) == 0x12"/>
              <edc:SFRFieldSemantic edc:cname="TC4WO0" edc:desc="TC4/WO0" edc:when="(field &amp; 0x1F) == 0x13"/>
              <edc:SFRFieldSemantic edc:cname="TC5WO0" edc:desc="TC5/WO0" edc:when="(field &amp; 0x1F) == 0x14"/>
              <edc:SFRFieldSemantic edc:cname="TC6WO0" edc:desc="TC6/WO0" edc:when="(field &amp; 0x1F) == 0x15"/>
              <edc:SFRFieldSemantic edc:cname="TC7WO0" edc:desc="TC7/WO0" edc:when="(field &amp; 0x1F) == 0x16"/>
              <edc:SFRFieldSemantic edc:cname="QCS" edc:desc="QCS" edc:when="(field &amp; 0x1F) == 0x17"/>
              <edc:SFRFieldSemantic edc:cname="QD1" edc:desc="QD1" edc:when="(field &amp; 0x1F) == 0x18"/>
              <edc:SFRFieldSemantic edc:cname="QD0" edc:desc="QD0" edc:when="(field &amp; 0x1F) == 0x19"/>
              <edc:SFRFieldSemantic edc:cname="QD3" edc:desc="QD3" edc:when="(field &amp; 0x1F) == 0x1A"/>
              <edc:SFRFieldSemantic edc:cname="CCLOUT0" edc:desc="CCLOUT0" edc:when="(field &amp; 0x1F) == 0x1B"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS1" edc:desc="TSTBUS1" edc:when="(field &amp; 0x1F) == 0x1C"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS4" edc:desc="TSTBUS4" edc:when="(field &amp; 0x1F) == 0x1D"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS7" edc:desc="TSTBUS7" edc:when="(field &amp; 0x1F) == 0x1E"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS10" edc:desc="TSTBUS10" edc:when="(field &amp; 0x1F) == 0x1F"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="RPA9G4R" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x44001264">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="RPA9G4R" edc:nzwidth="0x5" edc:desc="RPA9/G4">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P2" edc:desc="SERCOM0/PAD2" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P0" edc:desc="SERCOM0/PAD0" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P3" edc:desc="SERCOM1/PAD3" edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P0" edc:desc="SERCOM1/PAD0" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO3" edc:desc="TCC0/WO3" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO1" edc:desc="TCC0/WO1" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO5" edc:desc="TCC0/WO5" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO3" edc:desc="TCC1/WO3" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO1" edc:desc="TCC1/WO1" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO5" edc:desc="TCC1/WO5" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="TCC2WO1" edc:desc="TCC2/WO1" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="TC0WO0" edc:desc="TC0/WO0" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="TC1WO1" edc:desc="TC1/WO1" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="TC2WO1" edc:desc="TC2/WO1" edc:when="(field &amp; 0x1F) == 0x11"/>
              <edc:SFRFieldSemantic edc:cname="TC3WO1" edc:desc="TC3/WO1" edc:when="(field &amp; 0x1F) == 0x12"/>
              <edc:SFRFieldSemantic edc:cname="TC4WO1" edc:desc="TC4/WO1" edc:when="(field &amp; 0x1F) == 0x13"/>
              <edc:SFRFieldSemantic edc:cname="TC5WO1" edc:desc="TC5/WO1" edc:when="(field &amp; 0x1F) == 0x14"/>
              <edc:SFRFieldSemantic edc:cname="TC6WO1" edc:desc="TC6/WO1" edc:when="(field &amp; 0x1F) == 0x15"/>
              <edc:SFRFieldSemantic edc:cname="TC7WO1" edc:desc="TC7/WO1" edc:when="(field &amp; 0x1F) == 0x16"/>
              <edc:SFRFieldSemantic edc:cname="QCS" edc:desc="QCS" edc:when="(field &amp; 0x1F) == 0x17"/>
              <edc:SFRFieldSemantic edc:cname="QD2" edc:desc="QD2" edc:when="(field &amp; 0x1F) == 0x18"/>
              <edc:SFRFieldSemantic edc:cname="QD1" edc:desc="QD1" edc:when="(field &amp; 0x1F) == 0x19"/>
              <edc:SFRFieldSemantic edc:cname="QD0" edc:desc="QD0" edc:when="(field &amp; 0x1F) == 0x1A"/>
              <edc:SFRFieldSemantic edc:cname="CCLOUT1" edc:desc="CCLOUT1" edc:when="(field &amp; 0x1F) == 0x1B"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS2" edc:desc="TSTBUS2" edc:when="(field &amp; 0x1F) == 0x1C"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS5" edc:desc="TSTBUS5" edc:when="(field &amp; 0x1F) == 0x1D"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS8" edc:desc="TSTBUS8" edc:when="(field &amp; 0x1F) == 0x1E"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS11" edc:desc="TSTBUS11" edc:when="(field &amp; 0x1F) == 0x1F"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x44001268"/>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="RPA10G4R" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x4400126C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="RPA10G4R" edc:nzwidth="0x5" edc:desc="RPA10/G4">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P2" edc:desc="SERCOM0/PAD2" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P0" edc:desc="SERCOM0/PAD0" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P3" edc:desc="SERCOM1/PAD3" edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P0" edc:desc="SERCOM1/PAD0" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO3" edc:desc="TCC0/WO3" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO1" edc:desc="TCC0/WO1" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO5" edc:desc="TCC0/WO5" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO3" edc:desc="TCC1/WO3" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO1" edc:desc="TCC1/WO1" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO5" edc:desc="TCC1/WO5" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="TCC2WO1" edc:desc="TCC2/WO1" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="TC0WO0" edc:desc="TC0/WO0" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="TC1WO1" edc:desc="TC1/WO1" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="TC2WO1" edc:desc="TC2/WO1" edc:when="(field &amp; 0x1F) == 0x11"/>
              <edc:SFRFieldSemantic edc:cname="TC3WO1" edc:desc="TC3/WO1" edc:when="(field &amp; 0x1F) == 0x12"/>
              <edc:SFRFieldSemantic edc:cname="TC4WO1" edc:desc="TC4/WO1" edc:when="(field &amp; 0x1F) == 0x13"/>
              <edc:SFRFieldSemantic edc:cname="TC5WO1" edc:desc="TC5/WO1" edc:when="(field &amp; 0x1F) == 0x14"/>
              <edc:SFRFieldSemantic edc:cname="TC6WO1" edc:desc="TC6/WO1" edc:when="(field &amp; 0x1F) == 0x15"/>
              <edc:SFRFieldSemantic edc:cname="TC7WO1" edc:desc="TC7/WO1" edc:when="(field &amp; 0x1F) == 0x16"/>
              <edc:SFRFieldSemantic edc:cname="QCS" edc:desc="QCS" edc:when="(field &amp; 0x1F) == 0x17"/>
              <edc:SFRFieldSemantic edc:cname="QD2" edc:desc="QD2" edc:when="(field &amp; 0x1F) == 0x18"/>
              <edc:SFRFieldSemantic edc:cname="QD1" edc:desc="QD1" edc:when="(field &amp; 0x1F) == 0x19"/>
              <edc:SFRFieldSemantic edc:cname="QD0" edc:desc="QD0" edc:when="(field &amp; 0x1F) == 0x1A"/>
              <edc:SFRFieldSemantic edc:cname="CCLOUT1" edc:desc="CCLOUT1" edc:when="(field &amp; 0x1F) == 0x1B"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS2" edc:desc="TSTBUS2" edc:when="(field &amp; 0x1F) == 0x1C"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS5" edc:desc="TSTBUS5" edc:when="(field &amp; 0x1F) == 0x1D"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS8" edc:desc="TSTBUS8" edc:when="(field &amp; 0x1F) == 0x1E"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS11" edc:desc="TSTBUS11" edc:when="(field &amp; 0x1F) == 0x1F"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x44001270"/>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="RPA13G3R" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x44001278">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="RPA13G3R" edc:nzwidth="0x5" edc:desc="RPA13/G3">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P0" edc:desc="SERCOM0/PAD0" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P3" edc:desc="SERCOM0/PAD3" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P2" edc:desc="SERCOM1/PAD2" edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P3" edc:desc="SERCOM1/PAD3" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO2" edc:desc="TCC0/WO2" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO0" edc:desc="TCC0/WO0" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO4" edc:desc="TCC0/WO4" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO2" edc:desc="TCC1/WO2" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO0" edc:desc="TCC1/WO0" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO4" edc:desc="TCC1/WO4" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="TCC2WO0" edc:desc="TCC2/WO0" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="TC0WO0" edc:desc="TC0/WO0" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="TC1WO0" edc:desc="TC1/WO0" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="TC2WO0" edc:desc="TC2/WO0" edc:when="(field &amp; 0x1F) == 0x11"/>
              <edc:SFRFieldSemantic edc:cname="TC3WO0" edc:desc="TC3/WO0" edc:when="(field &amp; 0x1F) == 0x12"/>
              <edc:SFRFieldSemantic edc:cname="TC4WO0" edc:desc="TC4/WO0" edc:when="(field &amp; 0x1F) == 0x13"/>
              <edc:SFRFieldSemantic edc:cname="TC5WO0" edc:desc="TC5/WO0" edc:when="(field &amp; 0x1F) == 0x14"/>
              <edc:SFRFieldSemantic edc:cname="TC6WO0" edc:desc="TC6/WO0" edc:when="(field &amp; 0x1F) == 0x15"/>
              <edc:SFRFieldSemantic edc:cname="TC7WO0" edc:desc="TC7/WO0" edc:when="(field &amp; 0x1F) == 0x16"/>
              <edc:SFRFieldSemantic edc:cname="QCS" edc:desc="QCS" edc:when="(field &amp; 0x1F) == 0x17"/>
              <edc:SFRFieldSemantic edc:cname="QD1" edc:desc="QD1" edc:when="(field &amp; 0x1F) == 0x18"/>
              <edc:SFRFieldSemantic edc:cname="QD0" edc:desc="QD0" edc:when="(field &amp; 0x1F) == 0x19"/>
              <edc:SFRFieldSemantic edc:cname="QD3" edc:desc="QD3" edc:when="(field &amp; 0x1F) == 0x1A"/>
              <edc:SFRFieldSemantic edc:cname="CCLOUT0" edc:desc="CCLOUT0" edc:when="(field &amp; 0x1F) == 0x1B"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS1" edc:desc="TSTBUS1" edc:when="(field &amp; 0x1F) == 0x1C"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS4" edc:desc="TSTBUS4" edc:when="(field &amp; 0x1F) == 0x1D"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS7" edc:desc="TSTBUS7" edc:when="(field &amp; 0x1F) == 0x1E"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS10" edc:desc="TSTBUS10" edc:when="(field &amp; 0x1F) == 0x1F"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="RPA13G4R" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x4400127C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="RPA13G4R" edc:nzwidth="0x5" edc:desc="RPA13/G4">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P2" edc:desc="SERCOM0/PAD2" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P0" edc:desc="SERCOM0/PAD0" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P3" edc:desc="SERCOM1/PAD3" edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P0" edc:desc="SERCOM1/PAD0" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO3" edc:desc="TCC0/WO3" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO1" edc:desc="TCC0/WO1" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO5" edc:desc="TCC0/WO5" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO3" edc:desc="TCC1/WO3" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO1" edc:desc="TCC1/WO1" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO5" edc:desc="TCC1/WO5" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="TCC2WO1" edc:desc="TCC2/WO1" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="TC0WO0" edc:desc="TC0/WO0" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="TC1WO1" edc:desc="TC1/WO1" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="TC2WO1" edc:desc="TC2/WO1" edc:when="(field &amp; 0x1F) == 0x11"/>
              <edc:SFRFieldSemantic edc:cname="TC3WO1" edc:desc="TC3/WO1" edc:when="(field &amp; 0x1F) == 0x12"/>
              <edc:SFRFieldSemantic edc:cname="TC4WO1" edc:desc="TC4/WO1" edc:when="(field &amp; 0x1F) == 0x13"/>
              <edc:SFRFieldSemantic edc:cname="TC5WO1" edc:desc="TC5/WO1" edc:when="(field &amp; 0x1F) == 0x14"/>
              <edc:SFRFieldSemantic edc:cname="TC6WO1" edc:desc="TC6/WO1" edc:when="(field &amp; 0x1F) == 0x15"/>
              <edc:SFRFieldSemantic edc:cname="TC7WO1" edc:desc="TC7/WO1" edc:when="(field &amp; 0x1F) == 0x16"/>
              <edc:SFRFieldSemantic edc:cname="QCS" edc:desc="QCS" edc:when="(field &amp; 0x1F) == 0x17"/>
              <edc:SFRFieldSemantic edc:cname="QD2" edc:desc="QD2" edc:when="(field &amp; 0x1F) == 0x18"/>
              <edc:SFRFieldSemantic edc:cname="QD1" edc:desc="QD1" edc:when="(field &amp; 0x1F) == 0x19"/>
              <edc:SFRFieldSemantic edc:cname="QD0" edc:desc="QD0" edc:when="(field &amp; 0x1F) == 0x1A"/>
              <edc:SFRFieldSemantic edc:cname="CCLOUT1" edc:desc="CCLOUT1" edc:when="(field &amp; 0x1F) == 0x1B"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS2" edc:desc="TSTBUS2" edc:when="(field &amp; 0x1F) == 0x1C"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS5" edc:desc="TSTBUS5" edc:when="(field &amp; 0x1F) == 0x1D"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS8" edc:desc="TSTBUS8" edc:when="(field &amp; 0x1F) == 0x1E"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS11" edc:desc="TSTBUS11" edc:when="(field &amp; 0x1F) == 0x1F"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x44001280"/>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="RPA14G4R" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x44001284">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="RPA14G4R" edc:nzwidth="0x5" edc:desc="RPA14/G4">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P2" edc:desc="SERCOM0/PAD2" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P0" edc:desc="SERCOM0/PAD0" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P3" edc:desc="SERCOM1/PAD3" edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P0" edc:desc="SERCOM1/PAD0" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO3" edc:desc="TCC0/WO3" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO1" edc:desc="TCC0/WO1" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO5" edc:desc="TCC0/WO5" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO3" edc:desc="TCC1/WO3" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO1" edc:desc="TCC1/WO1" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO5" edc:desc="TCC1/WO5" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="TCC2WO1" edc:desc="TCC2/WO1" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="TC0WO0" edc:desc="TC0/WO0" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="TC1WO1" edc:desc="TC1/WO1" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="TC2WO1" edc:desc="TC2/WO1" edc:when="(field &amp; 0x1F) == 0x11"/>
              <edc:SFRFieldSemantic edc:cname="TC3WO1" edc:desc="TC3/WO1" edc:when="(field &amp; 0x1F) == 0x12"/>
              <edc:SFRFieldSemantic edc:cname="TC4WO1" edc:desc="TC4/WO1" edc:when="(field &amp; 0x1F) == 0x13"/>
              <edc:SFRFieldSemantic edc:cname="TC5WO1" edc:desc="TC5/WO1" edc:when="(field &amp; 0x1F) == 0x14"/>
              <edc:SFRFieldSemantic edc:cname="TC6WO1" edc:desc="TC6/WO1" edc:when="(field &amp; 0x1F) == 0x15"/>
              <edc:SFRFieldSemantic edc:cname="TC7WO1" edc:desc="TC7/WO1" edc:when="(field &amp; 0x1F) == 0x16"/>
              <edc:SFRFieldSemantic edc:cname="QCS" edc:desc="QCS" edc:when="(field &amp; 0x1F) == 0x17"/>
              <edc:SFRFieldSemantic edc:cname="QD2" edc:desc="QD2" edc:when="(field &amp; 0x1F) == 0x18"/>
              <edc:SFRFieldSemantic edc:cname="QD1" edc:desc="QD1" edc:when="(field &amp; 0x1F) == 0x19"/>
              <edc:SFRFieldSemantic edc:cname="QD0" edc:desc="QD0" edc:when="(field &amp; 0x1F) == 0x1A"/>
              <edc:SFRFieldSemantic edc:cname="CCLOUT1" edc:desc="CCLOUT1" edc:when="(field &amp; 0x1F) == 0x1B"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS2" edc:desc="TSTBUS2" edc:when="(field &amp; 0x1F) == 0x1C"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS5" edc:desc="TSTBUS5" edc:when="(field &amp; 0x1F) == 0x1D"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS8" edc:desc="TSTBUS8" edc:when="(field &amp; 0x1F) == 0x1E"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS11" edc:desc="TSTBUS11" edc:when="(field &amp; 0x1F) == 0x1F"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x44001288"/>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="RPB0G2R" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x44001290">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="RPB0G2R" edc:nzwidth="0x5" edc:desc="RPB0/G2">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P0" edc:desc="SERCOM0/PAD0" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P3" edc:desc="SERCOM0/PAD3" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P2" edc:desc="SERCOM0/PAD2" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P3" edc:desc="SERCOM1/PAD3" edc:when="(field &amp; 0x1F) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P2" edc:desc="SERCOM1/PAD2" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO1" edc:desc="TCC0/WO1" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO5" edc:desc="TCC0/WO5" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO3" edc:desc="TCC0/WO3" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO1" edc:desc="TCC1/WO1" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO5" edc:desc="TCC1/WO5" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO3" edc:desc="TCC1/WO3" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="TCC2WO1" edc:desc="TCC2/WO1" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="TC0WO1" edc:desc="TC0/WO1" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="TC1WO1" edc:desc="TC1/WO1" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="TC2WO1" edc:desc="TC2/WO1" edc:when="(field &amp; 0x1F) == 0x11"/>
              <edc:SFRFieldSemantic edc:cname="TC3WO1" edc:desc="TC3/WO1" edc:when="(field &amp; 0x1F) == 0x12"/>
              <edc:SFRFieldSemantic edc:cname="TC4WO1" edc:desc="TC4/WO1" edc:when="(field &amp; 0x1F) == 0x13"/>
              <edc:SFRFieldSemantic edc:cname="TC5WO1" edc:desc="TC5/WO1" edc:when="(field &amp; 0x1F) == 0x14"/>
              <edc:SFRFieldSemantic edc:cname="TC6WO1" edc:desc="TC6/WO1" edc:when="(field &amp; 0x1F) == 0x15"/>
              <edc:SFRFieldSemantic edc:cname="TC7WO1" edc:desc="TC7/WO1" edc:when="(field &amp; 0x1F) == 0x16"/>
              <edc:SFRFieldSemantic edc:cname="QSPICS" edc:desc="QSPI/CS" edc:when="(field &amp; 0x1F) == 0x17"/>
              <edc:SFRFieldSemantic edc:cname="QD0" edc:desc="QD0" edc:when="(field &amp; 0x1F) == 0x18"/>
              <edc:SFRFieldSemantic edc:cname="QD3" edc:desc="QD3" edc:when="(field &amp; 0x1F) == 0x19"/>
              <edc:SFRFieldSemantic edc:cname="QD2" edc:desc="QD2" edc:when="(field &amp; 0x1F) == 0x1A"/>
              <edc:SFRFieldSemantic edc:cname="CCLOUT1" edc:desc="CCLOUT1" edc:when="(field &amp; 0x1F) == 0x1B"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS0" edc:desc="TSTBUS0" edc:when="(field &amp; 0x1F) == 0x1C"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS3" edc:desc="TSTBUS3" edc:when="(field &amp; 0x1F) == 0x1D"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS6" edc:desc="TSTBUS6" edc:when="(field &amp; 0x1F) == 0x1E"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS9" edc:desc="TSTBUS9" edc:when="(field &amp; 0x1F) == 0x1F"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="RPB1G2R" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x44001294">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="RPB1G2R" edc:nzwidth="0x5" edc:desc="RPB1/G2">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P0" edc:desc="SERCOM0/PAD0" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P3" edc:desc="SERCOM0/PAD3" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P2" edc:desc="SERCOM0/PAD2" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P3" edc:desc="SERCOM1/PAD3" edc:when="(field &amp; 0x1F) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P2" edc:desc="SERCOM1/PAD2" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO1" edc:desc="TCC0/WO1" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO5" edc:desc="TCC0/WO5" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO3" edc:desc="TCC0/WO3" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO1" edc:desc="TCC1/WO1" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO5" edc:desc="TCC1/WO5" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO3" edc:desc="TCC1/WO3" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="TCC2WO1" edc:desc="TCC2/WO1" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="TC0WO1" edc:desc="TC0/WO1" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="TC1WO1" edc:desc="TC1/WO1" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="TC2WO1" edc:desc="TC2/WO1" edc:when="(field &amp; 0x1F) == 0x11"/>
              <edc:SFRFieldSemantic edc:cname="TC3WO1" edc:desc="TC3/WO1" edc:when="(field &amp; 0x1F) == 0x12"/>
              <edc:SFRFieldSemantic edc:cname="TC4WO1" edc:desc="TC4/WO1" edc:when="(field &amp; 0x1F) == 0x13"/>
              <edc:SFRFieldSemantic edc:cname="TC5WO1" edc:desc="TC5/WO1" edc:when="(field &amp; 0x1F) == 0x14"/>
              <edc:SFRFieldSemantic edc:cname="TC6WO1" edc:desc="TC6/WO1" edc:when="(field &amp; 0x1F) == 0x15"/>
              <edc:SFRFieldSemantic edc:cname="TC7WO1" edc:desc="TC7/WO1" edc:when="(field &amp; 0x1F) == 0x16"/>
              <edc:SFRFieldSemantic edc:cname="QSPICS" edc:desc="QSPI/CS" edc:when="(field &amp; 0x1F) == 0x17"/>
              <edc:SFRFieldSemantic edc:cname="QD0" edc:desc="QD0" edc:when="(field &amp; 0x1F) == 0x18"/>
              <edc:SFRFieldSemantic edc:cname="QD3" edc:desc="QD3" edc:when="(field &amp; 0x1F) == 0x19"/>
              <edc:SFRFieldSemantic edc:cname="QD2" edc:desc="QD2" edc:when="(field &amp; 0x1F) == 0x1A"/>
              <edc:SFRFieldSemantic edc:cname="CCLOUT1" edc:desc="CCLOUT1" edc:when="(field &amp; 0x1F) == 0x1B"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS0" edc:desc="TSTBUS0" edc:when="(field &amp; 0x1F) == 0x1C"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS3" edc:desc="TSTBUS3" edc:when="(field &amp; 0x1F) == 0x1D"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS6" edc:desc="TSTBUS6" edc:when="(field &amp; 0x1F) == 0x1E"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS9" edc:desc="TSTBUS9" edc:when="(field &amp; 0x1F) == 0x1F"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="RPB1G3R" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x44001298">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="RPB1G3R" edc:nzwidth="0x5" edc:desc="RPB1/G3">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P0" edc:desc="SERCOM0/PAD0" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P3" edc:desc="SERCOM0/PAD3" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P2" edc:desc="SERCOM1/PAD2" edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P3" edc:desc="SERCOM1/PAD3" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO2" edc:desc="TCC0/WO2" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO0" edc:desc="TCC0/WO0" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO4" edc:desc="TCC0/WO4" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO2" edc:desc="TCC1/WO2" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO0" edc:desc="TCC1/WO0" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO4" edc:desc="TCC1/WO4" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="TCC2WO0" edc:desc="TCC2/WO0" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="TC0WO0" edc:desc="TC0/WO0" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="TC1WO0" edc:desc="TC1/WO0" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="TC2WO0" edc:desc="TC2/WO0" edc:when="(field &amp; 0x1F) == 0x11"/>
              <edc:SFRFieldSemantic edc:cname="TC3WO0" edc:desc="TC3/WO0" edc:when="(field &amp; 0x1F) == 0x12"/>
              <edc:SFRFieldSemantic edc:cname="TC4WO0" edc:desc="TC4/WO0" edc:when="(field &amp; 0x1F) == 0x13"/>
              <edc:SFRFieldSemantic edc:cname="TC5WO0" edc:desc="TC5/WO0" edc:when="(field &amp; 0x1F) == 0x14"/>
              <edc:SFRFieldSemantic edc:cname="TC6WO0" edc:desc="TC6/WO0" edc:when="(field &amp; 0x1F) == 0x15"/>
              <edc:SFRFieldSemantic edc:cname="TC7WO0" edc:desc="TC7/WO0" edc:when="(field &amp; 0x1F) == 0x16"/>
              <edc:SFRFieldSemantic edc:cname="QCS" edc:desc="QCS" edc:when="(field &amp; 0x1F) == 0x17"/>
              <edc:SFRFieldSemantic edc:cname="QD1" edc:desc="QD1" edc:when="(field &amp; 0x1F) == 0x18"/>
              <edc:SFRFieldSemantic edc:cname="QD0" edc:desc="QD0" edc:when="(field &amp; 0x1F) == 0x19"/>
              <edc:SFRFieldSemantic edc:cname="QD3" edc:desc="QD3" edc:when="(field &amp; 0x1F) == 0x1A"/>
              <edc:SFRFieldSemantic edc:cname="CCLOUT0" edc:desc="CCLOUT0" edc:when="(field &amp; 0x1F) == 0x1B"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS1" edc:desc="TSTBUS1" edc:when="(field &amp; 0x1F) == 0x1C"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS4" edc:desc="TSTBUS4" edc:when="(field &amp; 0x1F) == 0x1D"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS7" edc:desc="TSTBUS7" edc:when="(field &amp; 0x1F) == 0x1E"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS10" edc:desc="TSTBUS10" edc:when="(field &amp; 0x1F) == 0x1F"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="RPB2G3R" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x4400129C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="RPB2G3R" edc:nzwidth="0x5" edc:desc="RPB2/G3">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P0" edc:desc="SERCOM0/PAD0" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P3" edc:desc="SERCOM0/PAD3" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P2" edc:desc="SERCOM1/PAD2" edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P3" edc:desc="SERCOM1/PAD3" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO2" edc:desc="TCC0/WO2" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO0" edc:desc="TCC0/WO0" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO4" edc:desc="TCC0/WO4" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO2" edc:desc="TCC1/WO2" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO0" edc:desc="TCC1/WO0" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO4" edc:desc="TCC1/WO4" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="TCC2WO0" edc:desc="TCC2/WO0" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="TC0WO0" edc:desc="TC0/WO0" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="TC1WO0" edc:desc="TC1/WO0" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="TC2WO0" edc:desc="TC2/WO0" edc:when="(field &amp; 0x1F) == 0x11"/>
              <edc:SFRFieldSemantic edc:cname="TC3WO0" edc:desc="TC3/WO0" edc:when="(field &amp; 0x1F) == 0x12"/>
              <edc:SFRFieldSemantic edc:cname="TC4WO0" edc:desc="TC4/WO0" edc:when="(field &amp; 0x1F) == 0x13"/>
              <edc:SFRFieldSemantic edc:cname="TC5WO0" edc:desc="TC5/WO0" edc:when="(field &amp; 0x1F) == 0x14"/>
              <edc:SFRFieldSemantic edc:cname="TC6WO0" edc:desc="TC6/WO0" edc:when="(field &amp; 0x1F) == 0x15"/>
              <edc:SFRFieldSemantic edc:cname="TC7WO0" edc:desc="TC7/WO0" edc:when="(field &amp; 0x1F) == 0x16"/>
              <edc:SFRFieldSemantic edc:cname="QCS" edc:desc="QCS" edc:when="(field &amp; 0x1F) == 0x17"/>
              <edc:SFRFieldSemantic edc:cname="QD1" edc:desc="QD1" edc:when="(field &amp; 0x1F) == 0x18"/>
              <edc:SFRFieldSemantic edc:cname="QD0" edc:desc="QD0" edc:when="(field &amp; 0x1F) == 0x19"/>
              <edc:SFRFieldSemantic edc:cname="QD3" edc:desc="QD3" edc:when="(field &amp; 0x1F) == 0x1A"/>
              <edc:SFRFieldSemantic edc:cname="CCLOUT0" edc:desc="CCLOUT0" edc:when="(field &amp; 0x1F) == 0x1B"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS1" edc:desc="TSTBUS1" edc:when="(field &amp; 0x1F) == 0x1C"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS4" edc:desc="TSTBUS4" edc:when="(field &amp; 0x1F) == 0x1D"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS7" edc:desc="TSTBUS7" edc:when="(field &amp; 0x1F) == 0x1E"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS10" edc:desc="TSTBUS10" edc:when="(field &amp; 0x1F) == 0x1F"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="RPB2G4R" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x440012A0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="RPB2G4R" edc:nzwidth="0x5" edc:desc="RPB2/G4">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P2" edc:desc="SERCOM0/PAD2" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P0" edc:desc="SERCOM0/PAD0" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P3" edc:desc="SERCOM1/PAD3" edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P0" edc:desc="SERCOM1/PAD0" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO3" edc:desc="TCC0/WO3" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO1" edc:desc="TCC0/WO1" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO5" edc:desc="TCC0/WO5" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO3" edc:desc="TCC1/WO3" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO1" edc:desc="TCC1/WO1" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO5" edc:desc="TCC1/WO5" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="TCC2WO1" edc:desc="TCC2/WO1" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="TC0WO0" edc:desc="TC0/WO0" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="TC1WO1" edc:desc="TC1/WO1" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="TC2WO1" edc:desc="TC2/WO1" edc:when="(field &amp; 0x1F) == 0x11"/>
              <edc:SFRFieldSemantic edc:cname="TC3WO1" edc:desc="TC3/WO1" edc:when="(field &amp; 0x1F) == 0x12"/>
              <edc:SFRFieldSemantic edc:cname="TC4WO1" edc:desc="TC4/WO1" edc:when="(field &amp; 0x1F) == 0x13"/>
              <edc:SFRFieldSemantic edc:cname="TC5WO1" edc:desc="TC5/WO1" edc:when="(field &amp; 0x1F) == 0x14"/>
              <edc:SFRFieldSemantic edc:cname="TC6WO1" edc:desc="TC6/WO1" edc:when="(field &amp; 0x1F) == 0x15"/>
              <edc:SFRFieldSemantic edc:cname="TC7WO1" edc:desc="TC7/WO1" edc:when="(field &amp; 0x1F) == 0x16"/>
              <edc:SFRFieldSemantic edc:cname="QCS" edc:desc="QCS" edc:when="(field &amp; 0x1F) == 0x17"/>
              <edc:SFRFieldSemantic edc:cname="QD2" edc:desc="QD2" edc:when="(field &amp; 0x1F) == 0x18"/>
              <edc:SFRFieldSemantic edc:cname="QD1" edc:desc="QD1" edc:when="(field &amp; 0x1F) == 0x19"/>
              <edc:SFRFieldSemantic edc:cname="QD0" edc:desc="QD0" edc:when="(field &amp; 0x1F) == 0x1A"/>
              <edc:SFRFieldSemantic edc:cname="CCLOUT1" edc:desc="CCLOUT1" edc:when="(field &amp; 0x1F) == 0x1B"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS2" edc:desc="TSTBUS2" edc:when="(field &amp; 0x1F) == 0x1C"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS5" edc:desc="TSTBUS5" edc:when="(field &amp; 0x1F) == 0x1D"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS8" edc:desc="TSTBUS8" edc:when="(field &amp; 0x1F) == 0x1E"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS11" edc:desc="TSTBUS11" edc:when="(field &amp; 0x1F) == 0x1F"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x440012A4"/>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="RPB3G4R" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x440012A8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="RPB3G4R" edc:nzwidth="0x5" edc:desc="RPB3/G4">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P2" edc:desc="SERCOM0/PAD2" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P0" edc:desc="SERCOM0/PAD0" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P3" edc:desc="SERCOM1/PAD3" edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P0" edc:desc="SERCOM1/PAD0" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO3" edc:desc="TCC0/WO3" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO1" edc:desc="TCC0/WO1" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO5" edc:desc="TCC0/WO5" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO3" edc:desc="TCC1/WO3" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO1" edc:desc="TCC1/WO1" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO5" edc:desc="TCC1/WO5" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="TCC2WO1" edc:desc="TCC2/WO1" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="TC0WO0" edc:desc="TC0/WO0" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="TC1WO1" edc:desc="TC1/WO1" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="TC2WO1" edc:desc="TC2/WO1" edc:when="(field &amp; 0x1F) == 0x11"/>
              <edc:SFRFieldSemantic edc:cname="TC3WO1" edc:desc="TC3/WO1" edc:when="(field &amp; 0x1F) == 0x12"/>
              <edc:SFRFieldSemantic edc:cname="TC4WO1" edc:desc="TC4/WO1" edc:when="(field &amp; 0x1F) == 0x13"/>
              <edc:SFRFieldSemantic edc:cname="TC5WO1" edc:desc="TC5/WO1" edc:when="(field &amp; 0x1F) == 0x14"/>
              <edc:SFRFieldSemantic edc:cname="TC6WO1" edc:desc="TC6/WO1" edc:when="(field &amp; 0x1F) == 0x15"/>
              <edc:SFRFieldSemantic edc:cname="TC7WO1" edc:desc="TC7/WO1" edc:when="(field &amp; 0x1F) == 0x16"/>
              <edc:SFRFieldSemantic edc:cname="QCS" edc:desc="QCS" edc:when="(field &amp; 0x1F) == 0x17"/>
              <edc:SFRFieldSemantic edc:cname="QD2" edc:desc="QD2" edc:when="(field &amp; 0x1F) == 0x18"/>
              <edc:SFRFieldSemantic edc:cname="QD1" edc:desc="QD1" edc:when="(field &amp; 0x1F) == 0x19"/>
              <edc:SFRFieldSemantic edc:cname="QD0" edc:desc="QD0" edc:when="(field &amp; 0x1F) == 0x1A"/>
              <edc:SFRFieldSemantic edc:cname="CCLOUT1" edc:desc="CCLOUT1" edc:when="(field &amp; 0x1F) == 0x1B"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS2" edc:desc="TSTBUS2" edc:when="(field &amp; 0x1F) == 0x1C"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS5" edc:desc="TSTBUS5" edc:when="(field &amp; 0x1F) == 0x1D"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS8" edc:desc="TSTBUS8" edc:when="(field &amp; 0x1F) == 0x1E"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS11" edc:desc="TSTBUS11" edc:when="(field &amp; 0x1F) == 0x1F"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x440012AC"/>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="RPB4G2R" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x440012B0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="RPB4G2R" edc:nzwidth="0x5" edc:desc="RPB4G2">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P0" edc:desc="SERCOM0/PAD0" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P3" edc:desc="SERCOM0/PAD3" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P2" edc:desc="SERCOM0/PAD2" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P3" edc:desc="SERCOM1/PAD3" edc:when="(field &amp; 0x1F) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P2" edc:desc="SERCOM1/PAD2" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO1" edc:desc="TCC0/WO1" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO5" edc:desc="TCC0/WO5" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO3" edc:desc="TCC0/WO3" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO1" edc:desc="TCC1/WO1" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO5" edc:desc="TCC1/WO5" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO3" edc:desc="TCC1/WO3" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="TCC2WO1" edc:desc="TCC2/WO1" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="TC0WO1" edc:desc="TC0/WO1" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="TC1WO1" edc:desc="TC1/WO1" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="TC2WO1" edc:desc="TC2/WO1" edc:when="(field &amp; 0x1F) == 0x11"/>
              <edc:SFRFieldSemantic edc:cname="TC3WO1" edc:desc="TC3/WO1" edc:when="(field &amp; 0x1F) == 0x12"/>
              <edc:SFRFieldSemantic edc:cname="TC4WO1" edc:desc="TC4/WO1" edc:when="(field &amp; 0x1F) == 0x13"/>
              <edc:SFRFieldSemantic edc:cname="TC5WO1" edc:desc="TC5/WO1" edc:when="(field &amp; 0x1F) == 0x14"/>
              <edc:SFRFieldSemantic edc:cname="TC6WO1" edc:desc="TC6/WO1" edc:when="(field &amp; 0x1F) == 0x15"/>
              <edc:SFRFieldSemantic edc:cname="TC7WO1" edc:desc="TC7/WO1" edc:when="(field &amp; 0x1F) == 0x16"/>
              <edc:SFRFieldSemantic edc:cname="QSPICS" edc:desc="QSPI/CS" edc:when="(field &amp; 0x1F) == 0x17"/>
              <edc:SFRFieldSemantic edc:cname="QD0" edc:desc="QD0" edc:when="(field &amp; 0x1F) == 0x18"/>
              <edc:SFRFieldSemantic edc:cname="QD3" edc:desc="QD3" edc:when="(field &amp; 0x1F) == 0x19"/>
              <edc:SFRFieldSemantic edc:cname="QD2" edc:desc="QD2" edc:when="(field &amp; 0x1F) == 0x1A"/>
              <edc:SFRFieldSemantic edc:cname="CCLOUT1" edc:desc="CCLOUT1" edc:when="(field &amp; 0x1F) == 0x1B"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS0" edc:desc="TSTBUS0" edc:when="(field &amp; 0x1F) == 0x1C"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS3" edc:desc="TSTBUS3" edc:when="(field &amp; 0x1F) == 0x1D"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS6" edc:desc="TSTBUS6" edc:when="(field &amp; 0x1F) == 0x1E"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS9" edc:desc="TSTBUS9" edc:when="(field &amp; 0x1F) == 0x1F"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="RPB5G2R" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x440012B4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="RPB5G2R" edc:nzwidth="0x5" edc:desc="RPB5/G2">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P0" edc:desc="SERCOM0/PAD0" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P3" edc:desc="SERCOM0/PAD3" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P2" edc:desc="SERCOM0/PAD2" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P3" edc:desc="SERCOM1/PAD3" edc:when="(field &amp; 0x1F) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P2" edc:desc="SERCOM1/PAD2" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO1" edc:desc="TCC0/WO1" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO5" edc:desc="TCC0/WO5" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO3" edc:desc="TCC0/WO3" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO1" edc:desc="TCC1/WO1" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO5" edc:desc="TCC1/WO5" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO3" edc:desc="TCC1/WO3" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="TCC2WO1" edc:desc="TCC2/WO1" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="TC0WO1" edc:desc="TC0/WO1" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="TC1WO1" edc:desc="TC1/WO1" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="TC2WO1" edc:desc="TC2/WO1" edc:when="(field &amp; 0x1F) == 0x11"/>
              <edc:SFRFieldSemantic edc:cname="TC3WO1" edc:desc="TC3/WO1" edc:when="(field &amp; 0x1F) == 0x12"/>
              <edc:SFRFieldSemantic edc:cname="TC4WO1" edc:desc="TC4/WO1" edc:when="(field &amp; 0x1F) == 0x13"/>
              <edc:SFRFieldSemantic edc:cname="TC5WO1" edc:desc="TC5/WO1" edc:when="(field &amp; 0x1F) == 0x14"/>
              <edc:SFRFieldSemantic edc:cname="TC6WO1" edc:desc="TC6/WO1" edc:when="(field &amp; 0x1F) == 0x15"/>
              <edc:SFRFieldSemantic edc:cname="TC7WO1" edc:desc="TC7/WO1" edc:when="(field &amp; 0x1F) == 0x16"/>
              <edc:SFRFieldSemantic edc:cname="QSPICS" edc:desc="QSPI/CS" edc:when="(field &amp; 0x1F) == 0x17"/>
              <edc:SFRFieldSemantic edc:cname="QD0" edc:desc="QD0" edc:when="(field &amp; 0x1F) == 0x18"/>
              <edc:SFRFieldSemantic edc:cname="QD3" edc:desc="QD3" edc:when="(field &amp; 0x1F) == 0x19"/>
              <edc:SFRFieldSemantic edc:cname="QD2" edc:desc="QD2" edc:when="(field &amp; 0x1F) == 0x1A"/>
              <edc:SFRFieldSemantic edc:cname="CCLOUT1" edc:desc="CCLOUT1" edc:when="(field &amp; 0x1F) == 0x1B"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS0" edc:desc="TSTBUS0" edc:when="(field &amp; 0x1F) == 0x1C"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS3" edc:desc="TSTBUS3" edc:when="(field &amp; 0x1F) == 0x1D"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS6" edc:desc="TSTBUS6" edc:when="(field &amp; 0x1F) == 0x1E"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS9" edc:desc="TSTBUS9" edc:when="(field &amp; 0x1F) == 0x1F"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="RPB5G1R" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x440012B8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="RPB5G1R" edc:nzwidth="0x5" edc:desc="RPB5/G1">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P1" edc:desc="SERCOM0/PAD1" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P1" edc:desc="SERCOM1/PAD1" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="REFO1" edc:desc="REFO1" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="REFO2" edc:desc="REFO2" edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="REFO3" edc:desc="REFO3" edc:when="(field &amp; 0x1F) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="REFO4" edc:desc="REFO4" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="QSCK" edc:desc="QSCK" edc:when="(field &amp; 0x1F) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="RPB6G3R" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x440012BC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="RPB6G3R" edc:nzwidth="0x5" edc:desc="RPB6/G3">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P0" edc:desc="SERCOM0/PAD0" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P3" edc:desc="SERCOM0/PAD3" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P2" edc:desc="SERCOM1/PAD2" edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P3" edc:desc="SERCOM1/PAD3" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO2" edc:desc="TCC0/WO2" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO0" edc:desc="TCC0/WO0" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO4" edc:desc="TCC0/WO4" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO2" edc:desc="TCC1/WO2" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO0" edc:desc="TCC1/WO0" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO4" edc:desc="TCC1/WO4" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="TCC2WO0" edc:desc="TCC2/WO0" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="TC0WO0" edc:desc="TC0/WO0" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="TC1WO0" edc:desc="TC1/WO0" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="TC2WO0" edc:desc="TC2/WO0" edc:when="(field &amp; 0x1F) == 0x11"/>
              <edc:SFRFieldSemantic edc:cname="TC3WO0" edc:desc="TC3/WO0" edc:when="(field &amp; 0x1F) == 0x12"/>
              <edc:SFRFieldSemantic edc:cname="TC4WO0" edc:desc="TC4/WO0" edc:when="(field &amp; 0x1F) == 0x13"/>
              <edc:SFRFieldSemantic edc:cname="TC5WO0" edc:desc="TC5/WO0" edc:when="(field &amp; 0x1F) == 0x14"/>
              <edc:SFRFieldSemantic edc:cname="TC6WO0" edc:desc="TC6/WO0" edc:when="(field &amp; 0x1F) == 0x15"/>
              <edc:SFRFieldSemantic edc:cname="TC7WO0" edc:desc="TC7/WO0" edc:when="(field &amp; 0x1F) == 0x16"/>
              <edc:SFRFieldSemantic edc:cname="QCS" edc:desc="QCS" edc:when="(field &amp; 0x1F) == 0x17"/>
              <edc:SFRFieldSemantic edc:cname="QD1" edc:desc="QD1" edc:when="(field &amp; 0x1F) == 0x18"/>
              <edc:SFRFieldSemantic edc:cname="QD0" edc:desc="QD0" edc:when="(field &amp; 0x1F) == 0x19"/>
              <edc:SFRFieldSemantic edc:cname="QD3" edc:desc="QD3" edc:when="(field &amp; 0x1F) == 0x1A"/>
              <edc:SFRFieldSemantic edc:cname="CCLOUT0" edc:desc="CCLOUT0" edc:when="(field &amp; 0x1F) == 0x1B"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS1" edc:desc="TSTBUS1" edc:when="(field &amp; 0x1F) == 0x1C"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS4" edc:desc="TSTBUS4" edc:when="(field &amp; 0x1F) == 0x1D"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS7" edc:desc="TSTBUS7" edc:when="(field &amp; 0x1F) == 0x1E"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS10" edc:desc="TSTBUS10" edc:when="(field &amp; 0x1F) == 0x1F"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="RPB6G1R" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x440012C0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="RPB6G1R" edc:nzwidth="0x5" edc:desc="RPB6/G1">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P1" edc:desc="SERCOM0/PAD1" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P1" edc:desc="SERCOM1/PAD1" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="REFO1" edc:desc="REFO1" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="REFO2" edc:desc="REFO2" edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="REFO3" edc:desc="REFO3" edc:when="(field &amp; 0x1F) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="REFO4" edc:desc="REFO4" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="QSCK" edc:desc="QSCK" edc:when="(field &amp; 0x1F) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="RPB7G1R" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x440012C4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="RPB7G1R" edc:nzwidth="0x5" edc:desc="RPB7/G1">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P1" edc:desc="SERCOM0/PAD1" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P1" edc:desc="SERCOM1/PAD1" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="REFO1" edc:desc="REFO1" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="REFO2" edc:desc="REFO2" edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="REFO3" edc:desc="REFO3" edc:when="(field &amp; 0x1F) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="REFO4" edc:desc="REFO4" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="QSCK" edc:desc="QSCK" edc:when="(field &amp; 0x1F) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="RPB7G4R" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x440012C8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="RPB7G4R" edc:nzwidth="0x5" edc:desc="RPB7/G4">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P2" edc:desc="SERCOM0/PAD2" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P0" edc:desc="SERCOM0/PAD0" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P3" edc:desc="SERCOM1/PAD3" edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P0" edc:desc="SERCOM1/PAD0" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO3" edc:desc="TCC0/WO3" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO1" edc:desc="TCC0/WO1" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO5" edc:desc="TCC0/WO5" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO3" edc:desc="TCC1/WO3" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO1" edc:desc="TCC1/WO1" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO5" edc:desc="TCC1/WO5" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="TCC2WO1" edc:desc="TCC2/WO1" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="TC0WO0" edc:desc="TC0/WO0" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="TC1WO1" edc:desc="TC1/WO1" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="TC2WO1" edc:desc="TC2/WO1" edc:when="(field &amp; 0x1F) == 0x11"/>
              <edc:SFRFieldSemantic edc:cname="TC3WO1" edc:desc="TC3/WO1" edc:when="(field &amp; 0x1F) == 0x12"/>
              <edc:SFRFieldSemantic edc:cname="TC4WO1" edc:desc="TC4/WO1" edc:when="(field &amp; 0x1F) == 0x13"/>
              <edc:SFRFieldSemantic edc:cname="TC5WO1" edc:desc="TC5/WO1" edc:when="(field &amp; 0x1F) == 0x14"/>
              <edc:SFRFieldSemantic edc:cname="TC6WO1" edc:desc="TC6/WO1" edc:when="(field &amp; 0x1F) == 0x15"/>
              <edc:SFRFieldSemantic edc:cname="TC7WO1" edc:desc="TC7/WO1" edc:when="(field &amp; 0x1F) == 0x16"/>
              <edc:SFRFieldSemantic edc:cname="QCS" edc:desc="QCS" edc:when="(field &amp; 0x1F) == 0x17"/>
              <edc:SFRFieldSemantic edc:cname="QD2" edc:desc="QD2" edc:when="(field &amp; 0x1F) == 0x18"/>
              <edc:SFRFieldSemantic edc:cname="QD1" edc:desc="QD1" edc:when="(field &amp; 0x1F) == 0x19"/>
              <edc:SFRFieldSemantic edc:cname="QD0" edc:desc="QD0" edc:when="(field &amp; 0x1F) == 0x1A"/>
              <edc:SFRFieldSemantic edc:cname="CCLOUT1" edc:desc="CCLOUT1" edc:when="(field &amp; 0x1F) == 0x1B"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS2" edc:desc="TSTBUS2" edc:when="(field &amp; 0x1F) == 0x1C"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS5" edc:desc="TSTBUS5" edc:when="(field &amp; 0x1F) == 0x1D"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS8" edc:desc="TSTBUS8" edc:when="(field &amp; 0x1F) == 0x1E"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS11" edc:desc="TSTBUS11" edc:when="(field &amp; 0x1F) == 0x1F"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="RPB8G1R" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x440012CC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="RPB8G1R" edc:nzwidth="0x5" edc:desc="RPB8/G1">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P1" edc:desc="SERCOM0/PAD1" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P1" edc:desc="SERCOM1/PAD1" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="REFO1" edc:desc="REFO1" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="REFO2" edc:desc="REFO2" edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="REFO3" edc:desc="REFO3" edc:when="(field &amp; 0x1F) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="REFO4" edc:desc="REFO4" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="QSCK" edc:desc="QSCK" edc:when="(field &amp; 0x1F) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="RPB8G2R" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x440012D0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="RPB8G2R" edc:nzwidth="0x5" edc:desc="RPB8/G2">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P0" edc:desc="SERCOM0/PAD0" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P3" edc:desc="SERCOM0/PAD3" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P2" edc:desc="SERCOM0/PAD2" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P3" edc:desc="SERCOM1/PAD3" edc:when="(field &amp; 0x1F) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P2" edc:desc="SERCOM1/PAD2" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO1" edc:desc="TCC0/WO1" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO5" edc:desc="TCC0/WO5" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO3" edc:desc="TCC0/WO3" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO1" edc:desc="TCC1/WO1" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO5" edc:desc="TCC1/WO5" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO3" edc:desc="TCC1/WO3" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="TCC2WO1" edc:desc="TCC2/WO1" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="TC0WO1" edc:desc="TC0/WO1" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="TC1WO1" edc:desc="TC1/WO1" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="TC2WO1" edc:desc="TC2/WO1" edc:when="(field &amp; 0x1F) == 0x11"/>
              <edc:SFRFieldSemantic edc:cname="TC3WO1" edc:desc="TC3/WO1" edc:when="(field &amp; 0x1F) == 0x12"/>
              <edc:SFRFieldSemantic edc:cname="TC4WO1" edc:desc="TC4/WO1" edc:when="(field &amp; 0x1F) == 0x13"/>
              <edc:SFRFieldSemantic edc:cname="TC5WO1" edc:desc="TC5/WO1" edc:when="(field &amp; 0x1F) == 0x14"/>
              <edc:SFRFieldSemantic edc:cname="TC6WO1" edc:desc="TC6/WO1" edc:when="(field &amp; 0x1F) == 0x15"/>
              <edc:SFRFieldSemantic edc:cname="TC7WO1" edc:desc="TC7/WO1" edc:when="(field &amp; 0x1F) == 0x16"/>
              <edc:SFRFieldSemantic edc:cname="QSPICS" edc:desc="QSPI/CS" edc:when="(field &amp; 0x1F) == 0x17"/>
              <edc:SFRFieldSemantic edc:cname="QD0" edc:desc="QD0" edc:when="(field &amp; 0x1F) == 0x18"/>
              <edc:SFRFieldSemantic edc:cname="QD3" edc:desc="QD3" edc:when="(field &amp; 0x1F) == 0x19"/>
              <edc:SFRFieldSemantic edc:cname="QD2" edc:desc="QD2" edc:when="(field &amp; 0x1F) == 0x1A"/>
              <edc:SFRFieldSemantic edc:cname="CCLOUT1" edc:desc="CCLOUT1" edc:when="(field &amp; 0x1F) == 0x1B"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS0" edc:desc="TSTBUS0" edc:when="(field &amp; 0x1F) == 0x1C"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS3" edc:desc="TSTBUS3" edc:when="(field &amp; 0x1F) == 0x1D"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS6" edc:desc="TSTBUS6" edc:when="(field &amp; 0x1F) == 0x1E"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS9" edc:desc="TSTBUS9" edc:when="(field &amp; 0x1F) == 0x1F"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="RPB9G1R" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x440012D4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="RPB9G1R" edc:nzwidth="0x5" edc:desc="RPB9/G1">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P1" edc:desc="SERCOM0/PAD1" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P1" edc:desc="SERCOM1/PAD1" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="REFO1" edc:desc="REFO1" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="REFO2" edc:desc="REFO2" edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="REFO3" edc:desc="REFO3" edc:when="(field &amp; 0x1F) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="REFO4" edc:desc="REFO4" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="QSCK" edc:desc="QSCK" edc:when="(field &amp; 0x1F) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="RPB9G3R" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x440012D8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="RPB9G3R" edc:nzwidth="0x5" edc:desc="RPB9/G3">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P0" edc:desc="SERCOM0/PAD0" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P3" edc:desc="SERCOM0/PAD3" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P2" edc:desc="SERCOM1/PAD2" edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P3" edc:desc="SERCOM1/PAD3" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO2" edc:desc="TCC0/WO2" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO0" edc:desc="TCC0/WO0" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO4" edc:desc="TCC0/WO4" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO2" edc:desc="TCC1/WO2" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO0" edc:desc="TCC1/WO0" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO4" edc:desc="TCC1/WO4" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="TCC2WO0" edc:desc="TCC2/WO0" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="TC0WO0" edc:desc="TC0/WO0" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="TC1WO0" edc:desc="TC1/WO0" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="TC2WO0" edc:desc="TC2/WO0" edc:when="(field &amp; 0x1F) == 0x11"/>
              <edc:SFRFieldSemantic edc:cname="TC3WO0" edc:desc="TC3/WO0" edc:when="(field &amp; 0x1F) == 0x12"/>
              <edc:SFRFieldSemantic edc:cname="TC4WO0" edc:desc="TC4/WO0" edc:when="(field &amp; 0x1F) == 0x13"/>
              <edc:SFRFieldSemantic edc:cname="TC5WO0" edc:desc="TC5/WO0" edc:when="(field &amp; 0x1F) == 0x14"/>
              <edc:SFRFieldSemantic edc:cname="TC6WO0" edc:desc="TC6/WO0" edc:when="(field &amp; 0x1F) == 0x15"/>
              <edc:SFRFieldSemantic edc:cname="TC7WO0" edc:desc="TC7/WO0" edc:when="(field &amp; 0x1F) == 0x16"/>
              <edc:SFRFieldSemantic edc:cname="QCS" edc:desc="QCS" edc:when="(field &amp; 0x1F) == 0x17"/>
              <edc:SFRFieldSemantic edc:cname="QD1" edc:desc="QD1" edc:when="(field &amp; 0x1F) == 0x18"/>
              <edc:SFRFieldSemantic edc:cname="QD0" edc:desc="QD0" edc:when="(field &amp; 0x1F) == 0x19"/>
              <edc:SFRFieldSemantic edc:cname="QD3" edc:desc="QD3" edc:when="(field &amp; 0x1F) == 0x1A"/>
              <edc:SFRFieldSemantic edc:cname="CCLOUT0" edc:desc="CCLOUT0" edc:when="(field &amp; 0x1F) == 0x1B"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS1" edc:desc="TSTBUS1" edc:when="(field &amp; 0x1F) == 0x1C"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS4" edc:desc="TSTBUS4" edc:when="(field &amp; 0x1F) == 0x1D"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS7" edc:desc="TSTBUS7" edc:when="(field &amp; 0x1F) == 0x1E"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS10" edc:desc="TSTBUS10" edc:when="(field &amp; 0x1F) == 0x1F"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="RPB10G3R" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x440012DC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="RPB10G3R" edc:nzwidth="0x5" edc:desc="RPB10/G3">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P0" edc:desc="SERCOM0/PAD0" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P3" edc:desc="SERCOM0/PAD3" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P2" edc:desc="SERCOM1/PAD2" edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P3" edc:desc="SERCOM1/PAD3" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO2" edc:desc="TCC0/WO2" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO0" edc:desc="TCC0/WO0" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO4" edc:desc="TCC0/WO4" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO2" edc:desc="TCC1/WO2" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO0" edc:desc="TCC1/WO0" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO4" edc:desc="TCC1/WO4" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="TCC2WO0" edc:desc="TCC2/WO0" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="TC0WO0" edc:desc="TC0/WO0" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="TC1WO0" edc:desc="TC1/WO0" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="TC2WO0" edc:desc="TC2/WO0" edc:when="(field &amp; 0x1F) == 0x11"/>
              <edc:SFRFieldSemantic edc:cname="TC3WO0" edc:desc="TC3/WO0" edc:when="(field &amp; 0x1F) == 0x12"/>
              <edc:SFRFieldSemantic edc:cname="TC4WO0" edc:desc="TC4/WO0" edc:when="(field &amp; 0x1F) == 0x13"/>
              <edc:SFRFieldSemantic edc:cname="TC5WO0" edc:desc="TC5/WO0" edc:when="(field &amp; 0x1F) == 0x14"/>
              <edc:SFRFieldSemantic edc:cname="TC6WO0" edc:desc="TC6/WO0" edc:when="(field &amp; 0x1F) == 0x15"/>
              <edc:SFRFieldSemantic edc:cname="TC7WO0" edc:desc="TC7/WO0" edc:when="(field &amp; 0x1F) == 0x16"/>
              <edc:SFRFieldSemantic edc:cname="QCS" edc:desc="QCS" edc:when="(field &amp; 0x1F) == 0x17"/>
              <edc:SFRFieldSemantic edc:cname="QD1" edc:desc="QD1" edc:when="(field &amp; 0x1F) == 0x18"/>
              <edc:SFRFieldSemantic edc:cname="QD0" edc:desc="QD0" edc:when="(field &amp; 0x1F) == 0x19"/>
              <edc:SFRFieldSemantic edc:cname="QD3" edc:desc="QD3" edc:when="(field &amp; 0x1F) == 0x1A"/>
              <edc:SFRFieldSemantic edc:cname="CCLOUT0" edc:desc="CCLOUT0" edc:when="(field &amp; 0x1F) == 0x1B"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS1" edc:desc="TSTBUS1" edc:when="(field &amp; 0x1F) == 0x1C"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS4" edc:desc="TSTBUS4" edc:when="(field &amp; 0x1F) == 0x1D"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS7" edc:desc="TSTBUS7" edc:when="(field &amp; 0x1F) == 0x1E"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS10" edc:desc="TSTBUS10" edc:when="(field &amp; 0x1F) == 0x1F"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="RPB10G4R" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x440012E0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="RPB10G4R" edc:nzwidth="0x5" edc:desc="RPB10/G4">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P2" edc:desc="SERCOM0/PAD2" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P0" edc:desc="SERCOM0/PAD0" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P3" edc:desc="SERCOM1/PAD3" edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P0" edc:desc="SERCOM1/PAD0" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO3" edc:desc="TCC0/WO3" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO1" edc:desc="TCC0/WO1" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO5" edc:desc="TCC0/WO5" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO3" edc:desc="TCC1/WO3" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO1" edc:desc="TCC1/WO1" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO5" edc:desc="TCC1/WO5" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="TCC2WO1" edc:desc="TCC2/WO1" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="TC0WO0" edc:desc="TC0/WO0" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="TC1WO1" edc:desc="TC1/WO1" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="TC2WO1" edc:desc="TC2/WO1" edc:when="(field &amp; 0x1F) == 0x11"/>
              <edc:SFRFieldSemantic edc:cname="TC3WO1" edc:desc="TC3/WO1" edc:when="(field &amp; 0x1F) == 0x12"/>
              <edc:SFRFieldSemantic edc:cname="TC4WO1" edc:desc="TC4/WO1" edc:when="(field &amp; 0x1F) == 0x13"/>
              <edc:SFRFieldSemantic edc:cname="TC5WO1" edc:desc="TC5/WO1" edc:when="(field &amp; 0x1F) == 0x14"/>
              <edc:SFRFieldSemantic edc:cname="TC6WO1" edc:desc="TC6/WO1" edc:when="(field &amp; 0x1F) == 0x15"/>
              <edc:SFRFieldSemantic edc:cname="TC7WO1" edc:desc="TC7/WO1" edc:when="(field &amp; 0x1F) == 0x16"/>
              <edc:SFRFieldSemantic edc:cname="QCS" edc:desc="QCS" edc:when="(field &amp; 0x1F) == 0x17"/>
              <edc:SFRFieldSemantic edc:cname="QD2" edc:desc="QD2" edc:when="(field &amp; 0x1F) == 0x18"/>
              <edc:SFRFieldSemantic edc:cname="QD1" edc:desc="QD1" edc:when="(field &amp; 0x1F) == 0x19"/>
              <edc:SFRFieldSemantic edc:cname="QD0" edc:desc="QD0" edc:when="(field &amp; 0x1F) == 0x1A"/>
              <edc:SFRFieldSemantic edc:cname="CCLOUT1" edc:desc="CCLOUT1" edc:when="(field &amp; 0x1F) == 0x1B"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS2" edc:desc="TSTBUS2" edc:when="(field &amp; 0x1F) == 0x1C"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS5" edc:desc="TSTBUS5" edc:when="(field &amp; 0x1F) == 0x1D"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS8" edc:desc="TSTBUS8" edc:when="(field &amp; 0x1F) == 0x1E"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS11" edc:desc="TSTBUS11" edc:when="(field &amp; 0x1F) == 0x1F"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x440012E4"/>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="RPB11G4R" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x440012E8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="RPB11G4R" edc:nzwidth="0x5" edc:desc="RPB11/G4">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P2" edc:desc="SERCOM0/PAD2" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P0" edc:desc="SERCOM0/PAD0" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P3" edc:desc="SERCOM1/PAD3" edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P0" edc:desc="SERCOM1/PAD0" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO3" edc:desc="TCC0/WO3" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO1" edc:desc="TCC0/WO1" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO5" edc:desc="TCC0/WO5" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO3" edc:desc="TCC1/WO3" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO1" edc:desc="TCC1/WO1" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO5" edc:desc="TCC1/WO5" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="TCC2WO1" edc:desc="TCC2/WO1" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="TC0WO0" edc:desc="TC0/WO0" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="TC1WO1" edc:desc="TC1/WO1" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="TC2WO1" edc:desc="TC2/WO1" edc:when="(field &amp; 0x1F) == 0x11"/>
              <edc:SFRFieldSemantic edc:cname="TC3WO1" edc:desc="TC3/WO1" edc:when="(field &amp; 0x1F) == 0x12"/>
              <edc:SFRFieldSemantic edc:cname="TC4WO1" edc:desc="TC4/WO1" edc:when="(field &amp; 0x1F) == 0x13"/>
              <edc:SFRFieldSemantic edc:cname="TC5WO1" edc:desc="TC5/WO1" edc:when="(field &amp; 0x1F) == 0x14"/>
              <edc:SFRFieldSemantic edc:cname="TC6WO1" edc:desc="TC6/WO1" edc:when="(field &amp; 0x1F) == 0x15"/>
              <edc:SFRFieldSemantic edc:cname="TC7WO1" edc:desc="TC7/WO1" edc:when="(field &amp; 0x1F) == 0x16"/>
              <edc:SFRFieldSemantic edc:cname="QCS" edc:desc="QCS" edc:when="(field &amp; 0x1F) == 0x17"/>
              <edc:SFRFieldSemantic edc:cname="QD2" edc:desc="QD2" edc:when="(field &amp; 0x1F) == 0x18"/>
              <edc:SFRFieldSemantic edc:cname="QD1" edc:desc="QD1" edc:when="(field &amp; 0x1F) == 0x19"/>
              <edc:SFRFieldSemantic edc:cname="QD0" edc:desc="QD0" edc:when="(field &amp; 0x1F) == 0x1A"/>
              <edc:SFRFieldSemantic edc:cname="CCLOUT1" edc:desc="CCLOUT1" edc:when="(field &amp; 0x1F) == 0x1B"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS2" edc:desc="TSTBUS2" edc:when="(field &amp; 0x1F) == 0x1C"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS5" edc:desc="TSTBUS5" edc:when="(field &amp; 0x1F) == 0x1D"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS8" edc:desc="TSTBUS8" edc:when="(field &amp; 0x1F) == 0x1E"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS11" edc:desc="TSTBUS11" edc:when="(field &amp; 0x1F) == 0x1F"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x440012EC"/>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="RPB12G2R" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x440012F0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="RPB12G2R" edc:nzwidth="0x5" edc:desc="RPB12/G2">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P0" edc:desc="SERCOM0/PAD0" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P3" edc:desc="SERCOM0/PAD3" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P2" edc:desc="SERCOM0/PAD2" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P3" edc:desc="SERCOM1/PAD3" edc:when="(field &amp; 0x1F) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P2" edc:desc="SERCOM1/PAD2" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO1" edc:desc="TCC0/WO1" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO5" edc:desc="TCC0/WO5" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO3" edc:desc="TCC0/WO3" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO1" edc:desc="TCC1/WO1" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO5" edc:desc="TCC1/WO5" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO3" edc:desc="TCC1/WO3" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="TCC2WO1" edc:desc="TCC2/WO1" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="TC0WO1" edc:desc="TC0/WO1" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="TC1WO1" edc:desc="TC1/WO1" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="TC2WO1" edc:desc="TC2/WO1" edc:when="(field &amp; 0x1F) == 0x11"/>
              <edc:SFRFieldSemantic edc:cname="TC3WO1" edc:desc="TC3/WO1" edc:when="(field &amp; 0x1F) == 0x12"/>
              <edc:SFRFieldSemantic edc:cname="TC4WO1" edc:desc="TC4/WO1" edc:when="(field &amp; 0x1F) == 0x13"/>
              <edc:SFRFieldSemantic edc:cname="TC5WO1" edc:desc="TC5/WO1" edc:when="(field &amp; 0x1F) == 0x14"/>
              <edc:SFRFieldSemantic edc:cname="TC6WO1" edc:desc="TC6/WO1" edc:when="(field &amp; 0x1F) == 0x15"/>
              <edc:SFRFieldSemantic edc:cname="TC7WO1" edc:desc="TC7/WO1" edc:when="(field &amp; 0x1F) == 0x16"/>
              <edc:SFRFieldSemantic edc:cname="QSPICS" edc:desc="QSPI/CS" edc:when="(field &amp; 0x1F) == 0x17"/>
              <edc:SFRFieldSemantic edc:cname="QD0" edc:desc="QD0" edc:when="(field &amp; 0x1F) == 0x18"/>
              <edc:SFRFieldSemantic edc:cname="QD3" edc:desc="QD3" edc:when="(field &amp; 0x1F) == 0x19"/>
              <edc:SFRFieldSemantic edc:cname="QD2" edc:desc="QD2" edc:when="(field &amp; 0x1F) == 0x1A"/>
              <edc:SFRFieldSemantic edc:cname="CCLOUT1" edc:desc="CCLOUT1" edc:when="(field &amp; 0x1F) == 0x1B"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS0" edc:desc="TSTBUS0" edc:when="(field &amp; 0x1F) == 0x1C"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS3" edc:desc="TSTBUS3" edc:when="(field &amp; 0x1F) == 0x1D"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS6" edc:desc="TSTBUS6" edc:when="(field &amp; 0x1F) == 0x1E"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS9" edc:desc="TSTBUS9" edc:when="(field &amp; 0x1F) == 0x1F"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="RPB13G2R" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x440012F4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="RPB13G2R" edc:nzwidth="0x5" edc:desc="RPB13/G2">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P0" edc:desc="SERCOM0/PAD0" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P3" edc:desc="SERCOM0/PAD3" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P2" edc:desc="SERCOM0/PAD2" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P3" edc:desc="SERCOM1/PAD3" edc:when="(field &amp; 0x1F) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P2" edc:desc="SERCOM1/PAD2" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO1" edc:desc="TCC0/WO1" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO5" edc:desc="TCC0/WO5" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO3" edc:desc="TCC0/WO3" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO1" edc:desc="TCC1/WO1" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO5" edc:desc="TCC1/WO5" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO3" edc:desc="TCC1/WO3" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="TCC2WO1" edc:desc="TCC2/WO1" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="TC0WO1" edc:desc="TC0/WO1" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="TC1WO1" edc:desc="TC1/WO1" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="TC2WO1" edc:desc="TC2/WO1" edc:when="(field &amp; 0x1F) == 0x11"/>
              <edc:SFRFieldSemantic edc:cname="TC3WO1" edc:desc="TC3/WO1" edc:when="(field &amp; 0x1F) == 0x12"/>
              <edc:SFRFieldSemantic edc:cname="TC4WO1" edc:desc="TC4/WO1" edc:when="(field &amp; 0x1F) == 0x13"/>
              <edc:SFRFieldSemantic edc:cname="TC5WO1" edc:desc="TC5/WO1" edc:when="(field &amp; 0x1F) == 0x14"/>
              <edc:SFRFieldSemantic edc:cname="TC6WO1" edc:desc="TC6/WO1" edc:when="(field &amp; 0x1F) == 0x15"/>
              <edc:SFRFieldSemantic edc:cname="TC7WO1" edc:desc="TC7/WO1" edc:when="(field &amp; 0x1F) == 0x16"/>
              <edc:SFRFieldSemantic edc:cname="QSPICS" edc:desc="QSPI/CS" edc:when="(field &amp; 0x1F) == 0x17"/>
              <edc:SFRFieldSemantic edc:cname="QD0" edc:desc="QD0" edc:when="(field &amp; 0x1F) == 0x18"/>
              <edc:SFRFieldSemantic edc:cname="QD3" edc:desc="QD3" edc:when="(field &amp; 0x1F) == 0x19"/>
              <edc:SFRFieldSemantic edc:cname="QD2" edc:desc="QD2" edc:when="(field &amp; 0x1F) == 0x1A"/>
              <edc:SFRFieldSemantic edc:cname="CCLOUT1" edc:desc="CCLOUT1" edc:when="(field &amp; 0x1F) == 0x1B"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS0" edc:desc="TSTBUS0" edc:when="(field &amp; 0x1F) == 0x1C"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS3" edc:desc="TSTBUS3" edc:when="(field &amp; 0x1F) == 0x1D"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS6" edc:desc="TSTBUS6" edc:when="(field &amp; 0x1F) == 0x1E"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS9" edc:desc="TSTBUS9" edc:when="(field &amp; 0x1F) == 0x1F"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PPS" edc:cname="RPB13G3R" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x440012F8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PPS">
            <edc:SFRFieldDef edc:cname="RPB13G3R" edc:nzwidth="0x5" edc:desc="RPB13/G3">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P0" edc:desc="SERCOM0/PAD0" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SCOM0P3" edc:desc="SERCOM0/PAD3" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P2" edc:desc="SERCOM1/PAD2" edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="SCOM1P3" edc:desc="SERCOM1/PAD3" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO2" edc:desc="TCC0/WO2" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO0" edc:desc="TCC0/WO0" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="TCC0WO4" edc:desc="TCC0/WO4" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO2" edc:desc="TCC1/WO2" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO0" edc:desc="TCC1/WO0" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="TCC1WO4" edc:desc="TCC1/WO4" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="TCC2WO0" edc:desc="TCC2/WO0" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="TC0WO0" edc:desc="TC0/WO0" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="TC1WO0" edc:desc="TC1/WO0" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="TC2WO0" edc:desc="TC2/WO0" edc:when="(field &amp; 0x1F) == 0x11"/>
              <edc:SFRFieldSemantic edc:cname="TC3WO0" edc:desc="TC3/WO0" edc:when="(field &amp; 0x1F) == 0x12"/>
              <edc:SFRFieldSemantic edc:cname="TC4WO0" edc:desc="TC4/WO0" edc:when="(field &amp; 0x1F) == 0x13"/>
              <edc:SFRFieldSemantic edc:cname="TC5WO0" edc:desc="TC5/WO0" edc:when="(field &amp; 0x1F) == 0x14"/>
              <edc:SFRFieldSemantic edc:cname="TC6WO0" edc:desc="TC6/WO0" edc:when="(field &amp; 0x1F) == 0x15"/>
              <edc:SFRFieldSemantic edc:cname="TC7WO0" edc:desc="TC7/WO0" edc:when="(field &amp; 0x1F) == 0x16"/>
              <edc:SFRFieldSemantic edc:cname="QCS" edc:desc="QCS" edc:when="(field &amp; 0x1F) == 0x17"/>
              <edc:SFRFieldSemantic edc:cname="QD1" edc:desc="QD1" edc:when="(field &amp; 0x1F) == 0x18"/>
              <edc:SFRFieldSemantic edc:cname="QD0" edc:desc="QD0" edc:when="(field &amp; 0x1F) == 0x19"/>
              <edc:SFRFieldSemantic edc:cname="QD3" edc:desc="QD3" edc:when="(field &amp; 0x1F) == 0x1A"/>
              <edc:SFRFieldSemantic edc:cname="CCLOUT0" edc:desc="CCLOUT0" edc:when="(field &amp; 0x1F) == 0x1B"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS1" edc:desc="TSTBUS1" edc:when="(field &amp; 0x1F) == 0x1C"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS4" edc:desc="TSTBUS4" edc:when="(field &amp; 0x1F) == 0x1D"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS7" edc:desc="TSTBUS7" edc:when="(field &amp; 0x1F) == 0x1E"/>
              <edc:SFRFieldSemantic edc:cname="TSTBUS10" edc:desc="TSTBUS10" edc:when="(field &amp; 0x1F) == 0x1F"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x104" edc:_addr="0x440012FC"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCCON1" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnn-nnnn-nnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFEF7F" edc:_addr="0x44001400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADCHS">
            <edc:SFRFieldDef edc:cname="DMABL" edc:nzwidth="0x3" edc:desc="DMA to System RAM Buffer Length Size bits">
              <edc:SFRFieldSemantic edc:cname="128_DMABL" edc:desc="Allocates 128 locations in system memory to each analog input" edc:when="(field &amp; 0x7) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="64_DMABL" edc:desc="Allocates 64 locations in system memory to each analog input" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="32_DMABL" edc:desc="Allocates 32 locations in system memory to each analog input" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="16_DMABL" edc:desc="Allocates 16 locations in system memory to each analog input" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="8_DMABL" edc:desc="Allocates 8 locations in system memory to each analog input" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="4_DMABL" edc:desc="Allocates 4 locations in system memory to each analog input" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="2_DMABL" edc:desc="Allocates 2 locations in system memory to each analog input" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="1_DMABL" edc:desc="Allocates 1 location in system memory to each analog input" edc:when="(field &amp; 0x7) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="STRGLVL" edc:nzwidth="0x1" edc:desc="Scan Trigger High Level/Positive Edge Sensitivity bit">
              <edc:SFRFieldSemantic edc:cname="SCTRIG_HIGH" edc:desc="Scan trigger is high level sensitive. Once STRIG mode is selected the scan trigger will continue for all selected analog inputs" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SCTRIG_POSEDGE" edc:desc="Scan trigger is positive edge sensitive. Once STRIG mode is selected only a single scan trigger will be generated which will complete the scan of all selected analog inputs. (TRGSRCx in the ADCTRGx register)" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="IRQVS" edc:nzwidth="0x3" edc:desc="Interrupt Vector Shift bits">
              <edc:SFRFieldSemantic edc:cname="SHL_7" edc:desc="Shift x left 7 bit position" edc:when="(field &amp; 0x7) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="SHL_6" edc:desc="Shift x left 6 bit position" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="SHL_5" edc:desc="Shift x left 5 bit position" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="SHL_4" edc:desc="Shift x left 4 bit position" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="SHL_3" edc:desc="Shift x left 3 bit position" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SHL_2" edc:desc="Shift x left 2 bit position" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SHL_1" edc:desc="Shift x left 1 bit position" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SHL_0" edc:desc="Shift x left 0 bit position" edc:when="(field &amp; 0x7) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SCANEN" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FSYUPB" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FSYDMA" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CVD_EN" edc:nzwidth="0x1" edc:desc="CVD Enable bit"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SIDL" edc:nzwidth="0x1" edc:desc="Stop in Idle Mode bit">
              <edc:SFRFieldSemantic edc:cname="DISCONTINUE" edc:desc="Discontinue module operation when device enters Idle mode" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CONTINUE" edc:desc="Continue module operation in Idle mode" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FRZ" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ON" edc:nzwidth="0x1" edc:desc="ADC Module Enable bit">
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="ADC module is enabled" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="ADC module is disabled" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="STRGSRC" edc:nzwidth="0x5" edc:desc="Scan Trigger Source Select bits">
              <edc:SFRFieldSemantic edc:cname="EXT_TRIG_VAL" edc:desc="External trigger for validation" edc:when="(field &amp; 0x1F) == 0x1F"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_47" edc:desc="ADC_TRIG_16" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_46" edc:desc="ADC_TRIG_15" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_45" edc:desc="ADC_TRIG_14" edc:when="(field &amp; 0x1F) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_44" edc:desc="ADC_TRIG_13" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_43" edc:desc="ADC_TRIG_12" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_42" edc:desc="ADC_TRIG_11" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_41" edc:desc="ADC_TRIG_10" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_40" edc:desc="ADC_TRIG_9" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_39" edc:desc="ADC_TRIG_8" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_38" edc:desc="ADC_TRIG_7" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_37" edc:desc="ADC_TRIG_6" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_36" edc:desc="ADC_TRIG_5" edc:when="(field &amp; 0x1F) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="INT0" edc:desc="INT0" edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RESERVED" edc:desc="RESERVED" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SW_LVL" edc:desc="Software level trigger" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SW_EDGE" edc:desc="Software edge trigger" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Trigger" edc:when="(field &amp; 0x1F) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SELRES" edc:nzwidth="0x2" edc:desc="Shared ADC7 Resolution bits">
              <edc:SFRFieldSemantic edc:cname="12_BITS" edc:desc="12 bits (default)" edc:when="(field &amp; 0x3) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="10_BITS" edc:desc="10 bits" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="8_BITS" edc:desc="8 bits" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="6_BITS" edc:desc="6 bits" edc:when="(field &amp; 0x3) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FRACT" edc:nzwidth="0x1" edc:desc="Fractional Data Output Format bit">
              <edc:SFRFieldSemantic edc:cname="FRAC" edc:desc="Fractional" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="INT" edc:desc="Integer" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCCON1CLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001404"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCCON1SET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001408"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCCON1INV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4400140C"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCCON2" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnn-nnnn-nnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFEF7F" edc:_addr="0x44001410">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADCHS">
            <edc:SFRFieldDef edc:cname="ADCDIV" edc:nzwidth="0x7" edc:desc="Shared ADC Clock Divider bits"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ADCEIS" edc:nzwidth="0x3" edc:desc="Shared ADC Early Interrupt Select bits">
              <edc:SFRFieldSemantic edc:cname="8CLKS_EARLY" edc:desc="The data ready interrupt is generated 8 ADC clocks prior to end of conversion" edc:when="(field &amp; 0x7) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="7CLKS_EARLY" edc:desc="The data ready interrupt is generated 7 ADC clocks prior to end of conversion" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="6CLKS_EARLY" edc:desc="The data ready interrupt is generated 6 ADC clocks prior to end of conversion" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="5CLKS_EARLY" edc:desc="The data ready interrupt is generated 5 ADC clocks prior to end of conversion" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="4CLKS_EARLY" edc:desc="The data ready interrupt is generated 4 ADC clocks prior to end of conversion" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="3CLKS_EARLY" edc:desc="The data ready interrupt is generated 3 ADC clocks prior to end of conversion" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="2CLKS_EARLY" edc:desc="The data ready interrupt is generated 2 ADC module clocks prior to end of conversion" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="1CLKS_EARLY" edc:desc="The data ready interrupt is generated 1 ADC module clock prior to end of conversion" edc:when="(field &amp; 0x7) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ENXCNVRT" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="EOSIEN" edc:nzwidth="0x1" edc:desc="End of Scan Interrupt Enable bit">
              <edc:SFRFieldSemantic edc:cname="EOSRDY_INT" edc:desc="Interrupt will be generated when EOSRDY bit is set" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NOEOSRDY_INT" edc:desc="No interrupt is generated when the EOSRDY bit is set" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="REFFLTIEN" edc:nzwidth="0x1" edc:desc="Band Gap/ Vref Voltage Fault Interrupt Enable bit">
              <edc:SFRFieldSemantic edc:cname="REFFLT_INT" edc:desc="Interrupt will be generated when the REFFLT bit is set" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NOREFFLT_INT" edc:desc="No interrupt is generated when the REFFLT bit is set" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BGVRIEN" edc:nzwidth="0x1" edc:desc="Band Gap/ Vref Voltage Ready Interrupt Enable bit">
              <edc:SFRFieldSemantic edc:cname="BGVRDDY_INT" edc:desc="Interrupt will be generated when the BGVRDDY bit is set" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NOBGVRDDY_INT" edc:desc="No interrupt is generated when the BGVRRDY bit is set" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SAMC" edc:nzwidth="0xA" edc:desc="Sample Time for the Shared ADC (ADC7) bits"/>
            <edc:SFRFieldDef edc:cname="CVD_CPL" edc:nzwidth="0x3" edc:desc="CVD Partly Line Capacitor Setting bits"/>
            <edc:SFRFieldDef edc:cname="EOSRDY" edc:nzwidth="0x1" edc:desc="End of Scan Interrupt Status bit">
              <edc:SFRFieldSemantic edc:cname="SCAN_COMPLETE" edc:desc="All analog inputs are considered for scanning through the scan trigger (all analog inputs specified in the ADCCSS1 and ADCCSS2 registers) have completed scanning" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SCAN_NOT_COMPLETE" edc:desc="Scanning has not completed" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="REFFLT" edc:nzwidth="0x1" edc:desc="Band Gap/ Vref / AVdd BOR Fault Status bit">
              <edc:SFRFieldSemantic edc:cname="BG_VREF_FLT" edc:desc="Fault in band gap or the Vref voltage while the ON bit (ADCCON1) was set. Most likely a band gap or Vref fault will be caused by a BOR of the analog Vdd supply." edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="BG_VREF_OK" edc:desc="Band gap and Vref voltage are working properly" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BGVRRDY" edc:nzwidth="0x1" edc:desc="Band Gap Voltage/ADC Reference Voltage Status bit">
              <edc:SFRFieldSemantic edc:cname="VREF_RDY" edc:desc="Both band gap voltage and ADC reference voltages (Vref) are ready" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="VREF_NOTRDY" edc:desc="Either or both band gap voltage and ADC reference voltages (Vref) are not ready" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCCON2CLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001414"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCCON2SET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001418"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCCON2INV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4400141C"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCCON3" edc:nzwidth="0x20" edc:access="nnnnnnnnn-------nnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF80FFFF" edc:_addr="0x44001420">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADCHS">
            <edc:SFRFieldDef edc:cname="ADINSEL" edc:nzwidth="0x6" edc:desc="Analog Input Select bits">
              <edc:SFRFieldSemantic edc:cname="TMP_SENSE" edc:desc="CTMU Temperature Sensor (internal AN11)" edc:when="(field &amp; 0x3F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="VBATDIV2_SENSE" edc:desc="VBAT/2 (internal AN10)" edc:when="(field &amp; 0x3F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="1P2V_SENSE" edc:desc="IVref 1.2V (internal AN9)" edc:when="(field &amp; 0x3F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="BGREF" edc:desc="BandGap Reference (internal AN8)" edc:when="(field &amp; 0x3F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="AN7" edc:desc="AN7" edc:when="(field &amp; 0x3F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="AN6" edc:desc="AN6" edc:when="(field &amp; 0x3F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="AN5" edc:desc="AN5" edc:when="(field &amp; 0x3F) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="AN4" edc:desc="AN4" edc:when="(field &amp; 0x3F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="AN3" edc:desc="AN3" edc:when="(field &amp; 0x3F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="AN2" edc:desc="AN2" edc:when="(field &amp; 0x3F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="AN1" edc:desc="AN1" edc:when="(field &amp; 0x3F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="AN0" edc:desc="AN0" edc:when="(field &amp; 0x3F) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="GSWTRG" edc:nzwidth="0x1" edc:desc="Global Software Trigger bit">
              <edc:SFRFieldSemantic edc:cname="GSWTRG" edc:desc="Trigger conversion for ADC inputs that have selected the GSWTRG bit as either through the associated TRGSRC bits in the ADCTRGx registers or through the STRGSRC&lt;4:0&gt; bits in the ADCCON1 register the trigger signal" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NO_GSWTRG" edc:desc="Do not trigger an analog-to-digital conversion" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="GLSWTRG" edc:nzwidth="0x1" edc:desc="Global Level Software Trigger bit">
              <edc:SFRFieldSemantic edc:cname="GLSWTRG" edc:desc="Trigger conversion for ADC inputs that have selected the GLSWTRG bit as the trigger signal" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NO_GLSWTRG" edc:desc="Do not trigger an analog-to-digital conversion" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RQCNVRT" edc:nzwidth="0x1" edc:desc="Individual ADC Input Conversion Request bit">
              <edc:SFRFieldSemantic edc:cname="IND_TRIGGER" edc:desc="Trigger the conversion of the selected ADC input as specified by the ADINSEL bits" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NO_TRIGGER" edc:desc="Do not trigger the conversion" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SAMP" edc:nzwidth="0x1" edc:desc="Shared ADC7 Analog Input Sampling Enable bit ">
              <edc:SFRFieldSemantic edc:cname="SAMPLE" edc:desc="The ADC S&amp;H amplifier is sampling" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="HOLD" edc:desc="The ADC S&amp;H amplifier is holding" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="UPDRDY" edc:nzwidth="0x1" edc:desc="ADC Update Ready Status bit">
              <edc:SFRFieldSemantic edc:cname="UPDATE_RDY" edc:desc="ADC SFRs can be updated" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE_NOT_RDY" edc:desc="ADC SFRs cannot be updated" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="UPDIEN" edc:nzwidth="0x1" edc:desc="Update Ready Interrupt Enable bit">
              <edc:SFRFieldSemantic edc:cname="INT_ON_UPDATE_RDY" edc:desc="Interrupt will be generated when the UPDRDY bit is set by hardware" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NO_INT_ON_UPDATE_RDY" edc:desc="No interrupt is generated" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TRGSUSP" edc:nzwidth="0x1" edc:desc="Trigger Suspend bit">
              <edc:SFRFieldSemantic edc:cname="TRIG_BLOCKED" edc:desc="Triggers are blocked from starting a new analog-to-digital conversion" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="TRIG_NOT_BLOCKED" edc:desc="Triggers are not blocked" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="VREFSEL" edc:nzwidth="0x3" edc:desc="Voltage Reference Input Selection bits">
              <edc:SFRFieldSemantic edc:cname="AVDD_AVSS" edc:desc="ADC VREFH is AVDD, ADC VREFL is AVSS" edc:when="(field &amp; 0x7) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DIGEN7" edc:nzwidth="0x1" edc:desc="Shared ADC (ADC7) Digital Enable bit"/>
            <edc:SFRFieldDef edc:cname="CONCLKDIV" edc:nzwidth="0x6" edc:desc="Analog-to-Digital Control Clock Divider bits"/>
            <edc:SFRFieldDef edc:cname="ADCSEL" edc:nzwidth="0x2" edc:desc="Analog-to-Digital Clock Source bits">
              <edc:SFRFieldSemantic edc:cname="SYSCLK" edc:desc="SYSCLK" edc:when="(field &amp; 0x3) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="REFCLK3" edc:desc="REFCLK3" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="FRC" edc:desc="FRC" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="PBCLK1" edc:desc="PBCLK1" edc:when="(field &amp; 0x3) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCCON3CLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001424"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCCON3SET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001428"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCCON3INV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4400142C"/>
      <edc:AdjustPoint edc:offset="0x10" edc:_addr="0x44001430"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCIMCON1" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x44001440">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADCHS">
            <edc:SFRFieldDef edc:cname="SIGN0" edc:nzwidth="0x1" edc:desc="AN0 Signed Data Mode bit">
              <edc:SFRFieldSemantic edc:cname="SIGNED" edc:desc="AN0 is using Signed Data mode" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="UNSIGNED" edc:desc="AN0 is using Unsigned Data mode" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIFF0" edc:nzwidth="0x1" edc:desc="AN0 Mode bit">
              <edc:SFRFieldSemantic edc:cname="DIFF" edc:desc="Selects AN0 differential input pair as AN0+ and ANN0-" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="AN0 is using Single-ended mode" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SIGN1" edc:nzwidth="0x1" edc:desc="AN1 Signed Data Mode bit">
              <edc:SFRFieldSemantic edc:cname="SIGNED" edc:desc="AN1 is using Signed Data mode" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="UNSIGNED" edc:desc="AN1 is using Unsigned Data mode" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIFF1" edc:nzwidth="0x1" edc:desc="AN1 Mode bit">
              <edc:SFRFieldSemantic edc:cname="DIFF" edc:desc="Selects AN1 differential input pair as AN1+ and ANN0-" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="AN1 is using Single-ended mode" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SIGN2" edc:nzwidth="0x1" edc:desc="AN2 Signed Data Mode bit">
              <edc:SFRFieldSemantic edc:cname="SIGNED" edc:desc="AN2 is using Signed Data mode" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="UNSIGNED" edc:desc="AN2 is using Unsigned Data mode" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIFF2" edc:nzwidth="0x1" edc:desc="AN2 Mode bit">
              <edc:SFRFieldSemantic edc:cname="DIFF" edc:desc="Selects AN2 differential input pair as AN2+ and ANN0-" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="AN2 is using Single-ended mode" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SIGN3" edc:nzwidth="0x1" edc:desc="AN3 Signed Data Mode bit">
              <edc:SFRFieldSemantic edc:cname="SIGNED" edc:desc="AN3 is using Signed Data mode" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="UNSIGNED" edc:desc="AN3 is using Unsigned Data mode" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIFF3" edc:nzwidth="0x1" edc:desc="AN3 Mode bit">
              <edc:SFRFieldSemantic edc:cname="DIFF" edc:desc="Selects AN3 differential input pair as AN3+ and ANN0-" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="AN3 is using Single-ended mode" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SIGN4" edc:nzwidth="0x1" edc:desc="AN4 Signed Data Mode bit">
              <edc:SFRFieldSemantic edc:cname="SIGNED" edc:desc="AN4 is using Signed Data mode" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="UNSIGNED" edc:desc="AN4 is using Unsigned Data mode" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIFF4" edc:nzwidth="0x1" edc:desc="AN4 Mode bit">
              <edc:SFRFieldSemantic edc:cname="DIFF" edc:desc="Selects AN4 differential input pair as AN4+ and ANN0-" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="AN4 is using Single-ended mode" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SIGN5" edc:nzwidth="0x1" edc:desc="AN5 Signed Data Mode bit">
              <edc:SFRFieldSemantic edc:cname="SIGNED" edc:desc="AN5 is using Signed Data mode" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="UNSIGNED" edc:desc="AN5 is using Unsigned Data mode" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIFF5" edc:nzwidth="0x1" edc:desc="AN5 Mode bit">
              <edc:SFRFieldSemantic edc:cname="DIFF" edc:desc="Selects AN5 differential input pair as AN5+ and ANN0-" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="AN5 is using Single-ended mode" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SIGN6" edc:nzwidth="0x1" edc:desc="AN6 Signed Data Mode bit">
              <edc:SFRFieldSemantic edc:cname="SIGNED" edc:desc="AN6 is using Signed Data mode" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="UNSIGNED" edc:desc="AN6 is using Unsigned Data mode" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIFF6" edc:nzwidth="0x1" edc:desc="AN6 Mode bit">
              <edc:SFRFieldSemantic edc:cname="DIFF" edc:desc="Selects AN6 differential input pair as AN6+ and ANN0-" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="AN6 is using Single-ended mode" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SIGN7" edc:nzwidth="0x1" edc:desc="AN7 Signed Data Mode bit">
              <edc:SFRFieldSemantic edc:cname="SIGNED" edc:desc="AN7 is using Signed Data mode" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="UNSIGNED" edc:desc="AN7 is using Unsigned Data mode" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIFF7" edc:nzwidth="0x1" edc:desc="AN7 Mode bit">
              <edc:SFRFieldSemantic edc:cname="DIFF" edc:desc="Selects AN7 differential input pair as AN7+ and ANN0-" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="AN7 is using Single-ended mode" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SIGN8" edc:nzwidth="0x1" edc:desc="AN8 Signed Data Mode bit">
              <edc:SFRFieldSemantic edc:cname="SIGNED" edc:desc="AN8 is using Signed Data mode" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="UNSIGNED" edc:desc="AN8 is using Unsigned Data mode" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIFF8" edc:nzwidth="0x1" edc:desc="AN 8 Mode bit">
              <edc:SFRFieldSemantic edc:cname="DIFF" edc:desc="Selects AN8 differential input pair as AN8+ and ANN0-" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="AN8 is using Single-ended mode" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SIGN9" edc:nzwidth="0x1" edc:desc="AN9 Signed Data Mode bit">
              <edc:SFRFieldSemantic edc:cname="SIGNED" edc:desc="AN9 is using Signed Data mode" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="UNSIGNED" edc:desc="AN9 is using Unsigned Data mode" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIFF9" edc:nzwidth="0x1" edc:desc="AN9 Mode bit">
              <edc:SFRFieldSemantic edc:cname="DIFF" edc:desc="Selects AN9 differential input pair as AN9+ and ANN0-" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="AN9 is using Single-ended mode" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SIGN10" edc:nzwidth="0x1" edc:desc="AN10 Signed Data Mode bit">
              <edc:SFRFieldSemantic edc:cname="SIGNED" edc:desc="AN10 is using Signed Data mode" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="UNSIGNED" edc:desc="AN10 is using Unsigned Data mode" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIFF10" edc:nzwidth="0x1" edc:desc="AN10 Mode bit">
              <edc:SFRFieldSemantic edc:cname="DIFF" edc:desc="Selects AN10 differential input pair as AN10+ and ANN0-" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="AN10 is using Single-ended mode" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SIGN11" edc:nzwidth="0x1" edc:desc="AN11 Signed Data Mode bit">
              <edc:SFRFieldSemantic edc:cname="SIGNED" edc:desc="AN11 is using Signed Data mode" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="UNSIGNED" edc:desc="AN11 is using Unsigned Data mode" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIFF11" edc:nzwidth="0x1" edc:desc="AN11 Mode bit">
              <edc:SFRFieldSemantic edc:cname="DIFF" edc:desc="Selects AN11 differential input pair as AN11+ and ANN0-" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="AN11 is using Single-ended mode" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCIMOD1CLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001444"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCIMOD1SET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001448"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCIMOD1INV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4400144C"/>
      <edc:AdjustPoint edc:offset="0x30" edc:_addr="0x44001450"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCGIRQEN1" edc:nzwidth="0x20" edc:access="--------------------nnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFF" edc:_addr="0x44001480">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADCHS">
            <edc:SFRFieldDef edc:cname="AGIEN0" edc:nzwidth="0x1" edc:desc="ADC Global Interrupt Enable bit">
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Interrupts are enabled for the selected analog input. The interrupt is generated after the converted data is ready (indicated by the AIRDYx bit of the ADCDSTAT1 register)" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Interrupts are disabled" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AGIEN1" edc:nzwidth="0x1" edc:desc="ADC Global Interrupt Enable bit">
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Interrupts are enabled for the selected analog input. The interrupt is generated after the converted data is ready (indicated by the AIRDYx bit of the ADCDSTAT1 register)" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Interrupts are disabled" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AGIEN2" edc:nzwidth="0x1" edc:desc="ADC Global Interrupt Enable bit">
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Interrupts are enabled for the selected analog input. The interrupt is generated after the converted data is ready (indicated by the AIRDYx bit of the ADCDSTAT1 register)" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Interrupts are disabled" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AGIEN3" edc:nzwidth="0x1" edc:desc="ADC Global Interrupt Enable bit">
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Interrupts are enabled for the selected analog input. The interrupt is generated after the converted data is ready (indicated by the AIRDYx bit of the ADCDSTAT1 register)" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Interrupts are disabled" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AGIEN4" edc:nzwidth="0x1" edc:desc="ADC Global Interrupt Enable bit">
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Interrupts are enabled for the selected analog input. The interrupt is generated after the converted data is ready (indicated by the AIRDYx bit of the ADCDSTAT1 register)" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Interrupts are disabled" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AGIEN5" edc:nzwidth="0x1" edc:desc="ADC Global Interrupt Enable bit">
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Interrupts are enabled for the selected analog input. The interrupt is generated after the converted data is ready (indicated by the AIRDYx bit of the ADCDSTAT1 register)" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Interrupts are disabled" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AGIEN6" edc:nzwidth="0x1" edc:desc="ADC Global Interrupt Enable bit">
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Interrupts are enabled for the selected analog input. The interrupt is generated after the converted data is ready (indicated by the AIRDYx bit of the ADCDSTAT1 register)" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Interrupts are disabled" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AGIEN7" edc:nzwidth="0x1" edc:desc="ADC Global Interrupt Enable bit">
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Interrupts are enabled for the selected analog input. The interrupt is generated after the converted data is ready (indicated by the AIRDYx bit of the ADCDSTAT1 register)" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Interrupts are disabled" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AGIEN8" edc:nzwidth="0x1" edc:desc="ADC Global Interrupt Enable bit">
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Interrupts are enabled for the selected analog input. The interrupt is generated after the converted data is ready (indicated by the AIRDYx bit of the ADCDSTAT1 register)" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Interrupts are disabled" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AGIEN9" edc:nzwidth="0x1" edc:desc="ADC Global Interrupt Enable bit">
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Interrupts are enabled for the selected analog input. The interrupt is generated after the converted data is ready (indicated by the AIRDYx bit of the ADCDSTAT1 register)" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Interrupts are disabled" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AGIEN10" edc:nzwidth="0x1" edc:desc="ADC Global Interrupt Enable bit">
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Interrupts are enabled for the selected analog input. The interrupt is generated after the converted data is ready (indicated by the AIRDYx bit of the ADCDSTAT1 register)" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Interrupts are disabled" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AGIEN11" edc:nzwidth="0x1" edc:desc="ADC Global Interrupt Enable bit">
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Interrupts are enabled for the selected analog input. The interrupt is generated after the converted data is ready (indicated by the AIRDYx bit of the ADCDSTAT1 register)" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Interrupts are disabled" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCGIRQEN1CLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001484"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCGIRQEN1SET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001488"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCGIRQEN1INV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4400148C"/>
      <edc:AdjustPoint edc:offset="0x10" edc:_addr="0x44001490"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCCSS1" edc:nzwidth="0x20" edc:access="--------------------nnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFF" edc:_addr="0x440014A0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADCHS">
            <edc:SFRFieldDef edc:cname="CSS0" edc:nzwidth="0x1" edc:desc="Analog Common Scan Select bits">
              <edc:SFRFieldSemantic edc:cname="SEL_AN0" edc:desc="Select ANx for input scan (i.e.ANx = CSSx and scan is sequential starting with the lowest to highest enabled CSSx analog input pin)" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SKIP_AN0" edc:desc="Skip ANx for input scan" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CSS1" edc:nzwidth="0x1" edc:desc="Analog Common Scan Select bits">
              <edc:SFRFieldSemantic edc:cname="SEL_AN1" edc:desc="Select ANx for input scan (i.e.ANx = CSSx and scan is sequential starting with the lowest to highest enabled CSSx analog input pin)" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SKIP_AN1" edc:desc="Skip ANx for input scan" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CSS2" edc:nzwidth="0x1" edc:desc="Analog Common Scan Select bits">
              <edc:SFRFieldSemantic edc:cname="SEL_AN2" edc:desc="Select ANx for input scan (i.e.ANx = CSSx and scan is sequential starting with the lowest to highest enabled CSSx analog input pin)" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SKIP_AN2" edc:desc="Skip ANx for input scan" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CSS3" edc:nzwidth="0x1" edc:desc="Analog Common Scan Select bits">
              <edc:SFRFieldSemantic edc:cname="SEL_AN3" edc:desc="Select ANx for input scan (i.e.ANx = CSSx and scan is sequential starting with the lowest to highest enabled CSSx analog input pin)" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SKIP_AN3" edc:desc="Skip ANx for input scan" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CSS4" edc:nzwidth="0x1" edc:desc="Analog Common Scan Select bits">
              <edc:SFRFieldSemantic edc:cname="SEL_AN4" edc:desc="Select ANx for input scan (i.e.ANx = CSSx and scan is sequential starting with the lowest to highest enabled CSSx analog input pin)" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SKIP_AN4" edc:desc="Skip ANx for input scan" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CSS5" edc:nzwidth="0x1" edc:desc="Analog Common Scan Select bits">
              <edc:SFRFieldSemantic edc:cname="SEL_AN5" edc:desc="Select ANx for input scan (i.e.ANx = CSSx and scan is sequential starting with the lowest to highest enabled CSSx analog input pin)" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SKIP_AN5" edc:desc="Skip ANx for input scan" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CSS6" edc:nzwidth="0x1" edc:desc="Analog Common Scan Select bits">
              <edc:SFRFieldSemantic edc:cname="SEL_AN6" edc:desc="Select ANx for input scan (i.e.ANx = CSSx and scan is sequential starting with the lowest to highest enabled CSSx analog input pin)" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SKIP_AN6" edc:desc="Skip ANx for input scan" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CSS7" edc:nzwidth="0x1" edc:desc="Analog Common Scan Select bits">
              <edc:SFRFieldSemantic edc:cname="SEL_AN7" edc:desc="Select ANx for input scan (i.e.ANx = CSSx and scan is sequential starting with the lowest to highest enabled CSSx analog input pin)" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SKIP_AN7" edc:desc="Skip ANx for input scan" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CSS8" edc:nzwidth="0x1" edc:desc="Analog Common Scan Select bits">
              <edc:SFRFieldSemantic edc:cname="SEL_AN8" edc:desc="Select ANx for input scan (i.e.ANx = CSSx and scan is sequential starting with the lowest to highest enabled CSSx analog input pin)" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SKIP_AN8" edc:desc="Skip ANx for input scan" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CSS9" edc:nzwidth="0x1" edc:desc="Analog Common Scan Select bits">
              <edc:SFRFieldSemantic edc:cname="SEL_AN9" edc:desc="Select ANx for input scan (i.e.ANx = CSSx and scan is sequential starting with the lowest to highest enabled CSSx analog input pin)" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SKIP_AN9" edc:desc="Skip ANx for input scan" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CSS10" edc:nzwidth="0x1" edc:desc="Analog Common Scan Select bits">
              <edc:SFRFieldSemantic edc:cname="SEL_AN10" edc:desc="Select ANx for input scan (i.e.ANx = CSSx and scan is sequential starting with the lowest to highest enabled CSSx analog input pin)" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SKIP_AN10" edc:desc="Skip ANx for input scan" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CSS11" edc:nzwidth="0x1" edc:desc="Analog Common Scan Select bits">
              <edc:SFRFieldSemantic edc:cname="SEL_AN11" edc:desc="Select ANx for input scan (i.e.ANx = CSSx and scan is sequential starting with the lowest to highest enabled CSSx analog input pin)" edc:when="(field &amp; 0x1) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SKIP_AN11" edc:desc="Skip ANx for input scan" edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCCSS1CLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x440014A4"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCCSS1SET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x440014A8"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCCSS1INV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x440014AC"/>
      <edc:AdjustPoint edc:offset="0x10" edc:_addr="0x440014B0"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCDSTAT1" edc:nzwidth="0x20" edc:access="--------------------nnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFF" edc:_addr="0x440014C0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADCHS">
            <edc:SFRFieldDef edc:cname="ARDY0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ARDY1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ARDY2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ARDY3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ARDY4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ARDY5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ARDY6" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ARDY7" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ARDY8" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ARDY9" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ARDY10" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ARDY11" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCDSTAT1CLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x440014C4"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCDSTAT1SET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x440014C8"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCDSTAT1INV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x440014CC"/>
      <edc:AdjustPoint edc:offset="0x10" edc:_addr="0x440014D0"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCCMPEN1" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF" edc:_addr="0x440014E0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADCHS">
            <edc:SFRFieldDef edc:cname="CMPE0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPE1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPE2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPE3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPE4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPE5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPE6" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPE7" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCCMPEN0CLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x440014E4"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCCMPEN0SET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x440014E8"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCCMPEN0INV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x440014EC"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCCMP1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x440014F0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADCHS">
            <edc:SFRFieldDef edc:cname="ADCMPLO" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="ADCMPHI" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCCMP0CLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x440014F4"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCCMP0SET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x440014F8"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCCMP0INV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x440014FC"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCCMPEN2" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF" edc:_addr="0x44001500">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADCHS">
            <edc:SFRFieldDef edc:cname="CMPE0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPE1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPE2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPE3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPE4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPE5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPE6" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPE7" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCCMPEN1CLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001504"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCCMPEN1SET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001508"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCCMPEN1INV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4400150C"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCCMP2" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001510">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADCHS">
            <edc:SFRFieldDef edc:cname="ADCMPLO" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="ADCMPHI" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADDCMP1CLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001514"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADDCMP1SET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001518"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADDCMP1INV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4400151C"/>
      <edc:AdjustPoint edc:offset="0x80" edc:_addr="0x44001520"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCFLTR1" edc:nzwidth="0x20" edc:access="nnnnnnnn---nnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF1FFFFF" edc:_addr="0x440015A0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADCHS">
            <edc:SFRFieldDef edc:cname="FLT_DATA0" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="FLTINID0" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="AFIF0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AFIEN0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRSAM0" edc:nzwidth="0x3"/>
            <edc:SFRFieldDef edc:cname="ADFMODE0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DATA16EN0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AFEN0" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCFLTR0CLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x440015A4"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCFLTR0SET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x440015A8"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCFLTR0INV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x440015AC"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCFLTR2" edc:nzwidth="0x20" edc:access="nnnnnnnn---nnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF1FFFFF" edc:_addr="0x440015B0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADCHS">
            <edc:SFRFieldDef edc:cname="FLT_DATA1" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="FLTINID1" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="AFIF1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AFIEN1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRSAM1" edc:nzwidth="0x3"/>
            <edc:SFRFieldDef edc:cname="ADFMODE1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DATA16EN1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AFEN1" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCFLTR1CLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x440015B4"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCFLTR1SET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x440015B8"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCFLTR1INV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x440015BC"/>
      <edc:AdjustPoint edc:offset="0x40" edc:_addr="0x440015C0"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCTRG1" edc:nzwidth="0x20" edc:access="---nnnnn---nnnnn---nnnnn---nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F1F1F1F" edc:_addr="0x44001600">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADCHS">
            <edc:SFRFieldDef edc:cname="TRGSRC0" edc:nzwidth="0x5" edc:desc="Trigger Source for Conversion of ADC0 Module Select bits">
              <edc:SFRFieldSemantic edc:cname="RESERVED" edc:desc="RESERVED" edc:when="(field &amp; 0x1F) == 0x1F"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_47" edc:desc="ADC_TRIG_16" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_46" edc:desc="ADC_TRIG_15" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_45" edc:desc="ADC_TRIG_14" edc:when="(field &amp; 0x1F) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_44" edc:desc="ADC_TRIG_13" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_43" edc:desc="ADC_TRIG_12" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_42" edc:desc="ADC_TRIG_11" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_41" edc:desc="ADC_TRIG_10" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_40" edc:desc="ADC_TRIG_9" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_39" edc:desc="ADC_TRIG_8" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_38" edc:desc="ADC_TRIG_7" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_37" edc:desc="ADC_TRIG_6" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_36" edc:desc="ADC_TRIG_5" edc:when="(field &amp; 0x1F) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="INT0" edc:desc="INT0" edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="SCAN_TRIG" edc:desc="Scan trigger" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SW_LVL" edc:desc="Software level trigger" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SW_EDGE" edc:desc="Software edge trigger" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Trigger" edc:when="(field &amp; 0x1F) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="TRGSRC1" edc:nzwidth="0x5" edc:desc="Trigger Source for Conversion of ADC1 Module Select bits">
              <edc:SFRFieldSemantic edc:cname="RESERVED" edc:desc="RESERVED" edc:when="(field &amp; 0x1F) == 0x1F"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_47" edc:desc="ADC_TRIG_16" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_46" edc:desc="ADC_TRIG_15" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_45" edc:desc="ADC_TRIG_14" edc:when="(field &amp; 0x1F) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_44" edc:desc="ADC_TRIG_13" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_43" edc:desc="ADC_TRIG_12" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_42" edc:desc="ADC_TRIG_11" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_41" edc:desc="ADC_TRIG_10" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_40" edc:desc="ADC_TRIG_9" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_39" edc:desc="ADC_TRIG_8" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_38" edc:desc="ADC_TRIG_7" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_37" edc:desc="ADC_TRIG_6" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_36" edc:desc="ADC_TRIG_5" edc:when="(field &amp; 0x1F) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="INT0" edc:desc="INT0" edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="SCAN_TRIG" edc:desc="Scan trigger" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SW_LVL" edc:desc="Software level trigger" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SW_EDGE" edc:desc="Software edge trigger" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Trigger" edc:when="(field &amp; 0x1F) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="TRGSRC2" edc:nzwidth="0x5" edc:desc="Trigger Source for Conversion of ADC2 Module Select bits">
              <edc:SFRFieldSemantic edc:cname="RESERVED" edc:desc="RESERVED" edc:when="(field &amp; 0x1F) == 0x1F"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_47" edc:desc="ADC_TRIG_16" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_46" edc:desc="ADC_TRIG_15" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_45" edc:desc="ADC_TRIG_14" edc:when="(field &amp; 0x1F) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_44" edc:desc="ADC_TRIG_13" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_43" edc:desc="ADC_TRIG_12" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_42" edc:desc="ADC_TRIG_11" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_41" edc:desc="ADC_TRIG_10" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_40" edc:desc="ADC_TRIG_9" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_39" edc:desc="ADC_TRIG_8" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_38" edc:desc="ADC_TRIG_7" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_37" edc:desc="ADC_TRIG_6" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_36" edc:desc="ADC_TRIG_5" edc:when="(field &amp; 0x1F) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="INT0" edc:desc="INT0" edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="SCAN_TRIG" edc:desc="Scan trigger" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SW_LVL" edc:desc="Software level trigger" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SW_EDGE" edc:desc="Software edge trigger" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Trigger" edc:when="(field &amp; 0x1F) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="TRGSRC3" edc:nzwidth="0x5" edc:desc="Trigger Source for Conversion of ADC3 Module Select bits">
              <edc:SFRFieldSemantic edc:cname="RESERVED" edc:desc="RESERVED" edc:when="(field &amp; 0x1F) == 0x1F"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_47" edc:desc="ADC_TRIG_16" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_46" edc:desc="ADC_TRIG_15" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_45" edc:desc="ADC_TRIG_14" edc:when="(field &amp; 0x1F) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_44" edc:desc="ADC_TRIG_13" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_43" edc:desc="ADC_TRIG_12" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_42" edc:desc="ADC_TRIG_11" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_41" edc:desc="ADC_TRIG_10" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_40" edc:desc="ADC_TRIG_9" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_39" edc:desc="ADC_TRIG_8" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_38" edc:desc="ADC_TRIG_7" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_37" edc:desc="ADC_TRIG_6" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_36" edc:desc="ADC_TRIG_5" edc:when="(field &amp; 0x1F) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="INT0" edc:desc="INT0" edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="SCAN_TRIG" edc:desc="Scan trigger" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SW_LVL" edc:desc="Software level trigger" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SW_EDGE" edc:desc="Software edge trigger" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Trigger" edc:when="(field &amp; 0x1F) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCTRG1CLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001604"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCTRG1SET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001608"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCTRG1INV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4400160C"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCTRG2" edc:nzwidth="0x20" edc:access="---nnnnn---nnnnn---nnnnn---nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F1F1F1F" edc:_addr="0x44001610">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADCHS">
            <edc:SFRFieldDef edc:cname="TRGSRC4" edc:nzwidth="0x5" edc:desc="Trigger Source for Conversion of ADC4 Module Select bits">
              <edc:SFRFieldSemantic edc:cname="RESERVED" edc:desc="RESERVED" edc:when="(field &amp; 0x1F) == 0x1F"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_47" edc:desc="ADC_TRIG_16" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_46" edc:desc="ADC_TRIG_15" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_45" edc:desc="ADC_TRIG_14" edc:when="(field &amp; 0x1F) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_44" edc:desc="ADC_TRIG_13" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_43" edc:desc="ADC_TRIG_12" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_42" edc:desc="ADC_TRIG_11" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_41" edc:desc="ADC_TRIG_10" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_40" edc:desc="ADC_TRIG_9" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_39" edc:desc="ADC_TRIG_8" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_38" edc:desc="ADC_TRIG_7" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_37" edc:desc="ADC_TRIG_6" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_36" edc:desc="ADC_TRIG_5" edc:when="(field &amp; 0x1F) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="INT0" edc:desc="INT0" edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="SCAN_TRIG" edc:desc="Scan trigger" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SW_LVL" edc:desc="Software level trigger" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SW_EDGE" edc:desc="Software edge trigger" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Trigger" edc:when="(field &amp; 0x1F) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="TRGSRC5" edc:nzwidth="0x5" edc:desc="Trigger Source for Conversion of ADC5 Module Select bits">
              <edc:SFRFieldSemantic edc:cname="RESERVED" edc:desc="RESERVED" edc:when="(field &amp; 0x1F) == 0x1F"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_47" edc:desc="ADC_TRIG_16" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_46" edc:desc="ADC_TRIG_15" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_45" edc:desc="ADC_TRIG_14" edc:when="(field &amp; 0x1F) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_44" edc:desc="ADC_TRIG_13" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_43" edc:desc="ADC_TRIG_12" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_42" edc:desc="ADC_TRIG_11" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_41" edc:desc="ADC_TRIG_10" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_40" edc:desc="ADC_TRIG_9" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_39" edc:desc="ADC_TRIG_8" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_38" edc:desc="ADC_TRIG_7" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_37" edc:desc="ADC_TRIG_6" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_36" edc:desc="ADC_TRIG_5" edc:when="(field &amp; 0x1F) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="INT0" edc:desc="INT0" edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="SCAN_TRIG" edc:desc="Scan trigger" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SW_LVL" edc:desc="Software level trigger" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SW_EDGE" edc:desc="Software edge trigger" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Trigger" edc:when="(field &amp; 0x1F) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="TRGSRC6" edc:nzwidth="0x5" edc:desc="Trigger Source for Conversion of ADC6 Module Select bits">
              <edc:SFRFieldSemantic edc:cname="RESERVED" edc:desc="RESERVED" edc:when="(field &amp; 0x1F) == 0x1F"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_47" edc:desc="ADC_TRIG_16" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_46" edc:desc="ADC_TRIG_15" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_45" edc:desc="ADC_TRIG_14" edc:when="(field &amp; 0x1F) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_44" edc:desc="ADC_TRIG_13" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_43" edc:desc="ADC_TRIG_12" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_42" edc:desc="ADC_TRIG_11" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_41" edc:desc="ADC_TRIG_10" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_40" edc:desc="ADC_TRIG_9" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_39" edc:desc="ADC_TRIG_8" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_38" edc:desc="ADC_TRIG_7" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_37" edc:desc="ADC_TRIG_6" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_36" edc:desc="ADC_TRIG_5" edc:when="(field &amp; 0x1F) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="INT0" edc:desc="INT0" edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="SCAN_TRIG" edc:desc="Scan trigger" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SW_LVL" edc:desc="Software level trigger" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SW_EDGE" edc:desc="Software edge trigger" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Trigger" edc:when="(field &amp; 0x1F) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="TRGSRC7" edc:nzwidth="0x5" edc:desc="Trigger Source for Conversion of ADC7 Module Select bits">
              <edc:SFRFieldSemantic edc:cname="RESERVED" edc:desc="RESERVED" edc:when="(field &amp; 0x1F) == 0x1F"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_47" edc:desc="ADC_TRIG_16" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_46" edc:desc="ADC_TRIG_15" edc:when="(field &amp; 0x1F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_45" edc:desc="ADC_TRIG_14" edc:when="(field &amp; 0x1F) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_44" edc:desc="ADC_TRIG_13" edc:when="(field &amp; 0x1F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_43" edc:desc="ADC_TRIG_12" edc:when="(field &amp; 0x1F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_42" edc:desc="ADC_TRIG_11" edc:when="(field &amp; 0x1F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_41" edc:desc="ADC_TRIG_10" edc:when="(field &amp; 0x1F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_40" edc:desc="ADC_TRIG_9" edc:when="(field &amp; 0x1F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_39" edc:desc="ADC_TRIG_8" edc:when="(field &amp; 0x1F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_38" edc:desc="ADC_TRIG_7" edc:when="(field &amp; 0x1F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_37" edc:desc="ADC_TRIG_6" edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="EVSYS_36" edc:desc="ADC_TRIG_5" edc:when="(field &amp; 0x1F) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="INT0" edc:desc="INT0" edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="SCAN_TRIG" edc:desc="Scan trigger" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SW_LVL" edc:desc="Software level trigger" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SW_EDGE" edc:desc="Software edge trigger" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Trigger" edc:when="(field &amp; 0x1F) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADTRG2CLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001614"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADTRG2SET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001618"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADTRG2INV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4400161C"/>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x44001620"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADTRG3CLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001624"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADTRG3SET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001628"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADTRG3INV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4400162C"/>
      <edc:AdjustPoint edc:offset="0x50" edc:_addr="0x44001630"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCCMPCON1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnn--nnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF3FFF" edc:_addr="0x44001680">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADCHS">
            <edc:SFRFieldDef edc:cname="IELOLO" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IELOHI" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IEHILO" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IEHIHI" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IEBTWN" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DCMPED" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DCMPIEN" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ENDCMP" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPINID0" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CVD_DATA" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCCMPCON1CLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001684"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCCMPCON1SET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001688"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCCMPCON1INV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4400168C"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCCMPCON2" edc:nzwidth="0x20" edc:access="-------------------nnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1FFF" edc:_addr="0x44001690">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADCHS">
            <edc:SFRFieldDef edc:cname="IELOLO" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IELOHI" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IEHILO" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IEHIHI" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IEBTWN" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DCMPED" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DCMPGIEN" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ENDCMP" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AINID" edc:nzwidth="0x5"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCMPCON2CLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001694"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCMPCON2SET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001698"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCMPCON2INV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4400169C"/>
      <edc:AdjustPoint edc:offset="0x44" edc:_addr="0x440016A0"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCFSTATCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x440016E4"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCFSTATSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x440016E8"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCFSTATINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x440016EC"/>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x440016F0"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCFIFOCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x440016F4"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCFIFOSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x440016F8"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCFIFOINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x440016FC"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCBASE" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF" edc:_addr="0x44001700">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADCHS">
            <edc:SFRFieldDef edc:cname="ADCBASE" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCBASECLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001704"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCBASESET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001708"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCBASEINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4400170C"/>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x44001710"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCDMASTATCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001714"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCDMASTATSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001718"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCDMASTATINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4400171C"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCCNTB" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001720">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADCHS">
            <edc:SFRFieldDef edc:cname="ADCCNTB" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCCNTBCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001724"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCCNTBSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001728"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCCNTBINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4400172C"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCDMAB" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001730">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADCHS">
            <edc:SFRFieldDef edc:cname="ADDMAB" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCDMABCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001734"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCDMABSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001738"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCDMABINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4400173C"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCTRGSNS" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF" edc:_addr="0x44001740">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADCHS">
            <edc:SFRFieldDef edc:cname="LVL0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LVL1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LVL2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LVL3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LVL4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LVL5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LVL6" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LVL7" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCTRGSNSCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001744"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCTRGSNSSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001748"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCTRGSNSINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4400174C"/>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x44001750"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADC0TIMECLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001754"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADC0TIMESET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001758"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADC0TIMEINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4400175C"/>
      <edc:AdjustPoint edc:offset="0x84" edc:_addr="0x44001760"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCEISTAT1CLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x440017E4"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCEISTAT1SET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x440017E8"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCEISTAT1INV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x440017EC"/>
      <edc:AdjustPoint edc:offset="0x10" edc:_addr="0x440017F0"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCANCON" edc:nzwidth="0x20" edc:access="----nnnnn------nn------nn------n" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF818181" edc:_addr="0x44001800">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADCHS">
            <edc:SFRFieldDef edc:cname="ANEN0" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="ANEN7" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WKRDY0" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="WKRDY7" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WKIEN0" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="WKIEN7" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WKUPCLKCNT" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCANLCTLCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001804"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCANLCTLSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001808"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCANLCTLINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4400180C"/>
      <edc:AdjustPoint edc:offset="0x260" edc:_addr="0x44001810"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADC7CFG" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001A70">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADCHS">
            <edc:SFRFieldDef edc:cname="ADC7CFG" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCFGSHRCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001A74"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCFGSHRSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001A78"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCFGSHRINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001A7C"/>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x44001A80"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCSVCONCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001A84"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCSVCONSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001A88"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCSVCONINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001A8C"/>
      <edc:AdjustPoint edc:offset="0x70" edc:_addr="0x44001A90"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCSYSCFG0" edc:nzwidth="0x20" edc:access="--------------------nnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFF" edc:_addr="0x44001B00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADCHS">
            <edc:SFRFieldDef edc:cname="AN0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AN1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AN2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AN3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AN4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AN5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AN6" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AN7" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AN8" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AN9" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AN10" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AN11" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCSYSCFG0CLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001B04"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCSYSCFG0SET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001B08"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCSYSCFG0INV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001B0C"/>
      <edc:AdjustPoint edc:offset="0x2F0" edc:_addr="0x44001B10"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCDATA0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001E00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADCHS">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x44001E04"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCDATA1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001E10">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADCHS">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x44001E14"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCDATA2" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001E20">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADCHS">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x44001E24"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCDATA3" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001E30">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADCHS">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x44001E34"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCDATA4" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001E40">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADCHS">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x44001E44"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCDATA5" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001E50">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADCHS">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x44001E54"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCDATA6" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001E60">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADCHS">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x44001E64"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCDATA7" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001E70">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADCHS">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x44001E74"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCDATA8" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001E80">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADCHS">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x44001E84"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCDATA9" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001E90">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADCHS">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x44001E94"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCDATA10" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001EA0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADCHS">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x44001EA4"/>
      <edc:SFRDef ltx:memberofperipheral="ADCHS" edc:cname="ADCDATA11" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44001EB0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADCHS">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x54C" edc:_addr="0x44001EB4"/>
      <edc:SFRDef ltx:memberofperipheral="CVD" edc:cname="CVDCON" edc:nzwidth="0x20" edc:access="nnnnn-nnn---nnnnnnnnnnnn--nnnnnn" edc:por="00000000000000100000000000000000" edc:mclr="00000000000000100000000000000000" edc:impl="0xFB8FFF3F" edc:_addr="0x44002400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CVD">
            <edc:SFRFieldDef edc:cname="TRIGSEL" edc:nzwidth="0x4" edc:desc="Selects one of 15 external trigger inputs to start scanning."/>
            <edc:SFRFieldDef edc:cname="CLKSEL" edc:nzwidth="0x2" edc:desc="Clock Select for FSM00= UPB_FSM_CLK01= External clock source 110= External clock source 211= External clock source 3"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FIFOTH" edc:nzwidth="0xA" edc:desc="Threshold for the results FIFO that will cause an interrupt and watermark FIFOWM status bitassertion"/>
            <edc:SFRFieldDef edc:cname="FIFOTHIEN" edc:nzwidth="0x1" edc:desc="FIFO Threshold Interrupt Enable1= Controller will assert an interrupt when the FIFO threshold is met0= Controller will not assert an interrupt when the FIFO threshold is met"/>
            <edc:SFRFieldDef edc:cname="CVDIEN" edc:nzwidth="0x1" edc:desc="Global Interrupt Enable for full macro. Gates any enabled FIFO or Scan Descriptor interrupts."/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="THSTR" edc:nzwidth="0x1" edc:desc="Threshold Store Mode1= Store only results which exceed the programmed threshold for the Scan Descriptor0= Store all results in FIFO"/>
            <edc:SFRFieldDef edc:cname="SWTRIG" edc:nzwidth="0x1" edc:desc="Software Trigger control. Starts scan manuallyCleared by Hardware."/>
            <edc:SFRFieldDef edc:cname="ABORT" edc:nzwidth="0x1" edc:desc="Instructs the controller to abort the current scan. The controller will move on to the next enabled ScanDescriptor if there is one, else it will go idle.Cleared by Hardware"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SDWREN" edc:nzwidth="0x1" edc:desc="Scan Descriptor Write Enable1= Enables writes to the scan descriptors, and prevents Scan Descriptor EN bits from being decoded and captured intoFSM_CLK domain by the Descriptor Selection Logic. This simplifies synchronization issues. The currently active ScanDescriptor registers should NOT be written even if SDWREN is asserted, as the FSM uses those bits directly without asynchronizer as a means of saving gates.0= Prevents writes to the scan descriptors, and enables the Descriptor Selector Logic to decode the next Scan Descriptor to run and capture it into the FSM domain."/>
            <edc:SFRFieldDef edc:cname="ORDER" edc:nzwidth="0x1" edc:desc="RX/TX Loop Order1= Scan all requested TX indexes, then increment RX index and continue0= Scan all requested RX indexes, then increment TX index and continue"/>
            <edc:SFRFieldDef edc:cname="SIDL" edc:nzwidth="0x1" edc:desc="Stop in Idle Mode bit1= CVD controller halts when device enters Idle mode0= CVD controller continues running in Idle mode"/>
            <edc:SFRFieldDef edc:cname="FRZ" edc:nzwidth="0x1" edc:desc="Freeze Mode1= CVD controller halts in debugger mode0= CVD controller runs in debugger mode"/>
            <edc:SFRFieldDef edc:cname="ON" edc:nzwidth="0x1" edc:desc="Enables the State Machine to scan enabled Scan Descriptors upon next trigger."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CVD" edc:cname="CVDADC" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x44002404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CVD">
            <edc:SFRFieldDef edc:cname="SELRES" edc:nzwidth="0x2" edc:desc="Shared ADC Resolution bits"/>
            <edc:SFRFieldDef edc:cname="DIFFPEN" edc:nzwidth="0x1" edc:desc="Control differential mode operation of ANN0"/>
            <edc:SFRFieldDef edc:cname="DIGEN" edc:nzwidth="0x1" edc:desc="Control differential mode operation of ANN0"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CVD" edc:cname="CVDSTAT" edc:nzwidth="0x20" edc:access="nnn---nnnnnnnnnn-nnn-nnn-nnn-nnn" edc:por="00100000000000000000000000000000" edc:mclr="00100000000000000000000000000000" edc:impl="0xE3FF7777" edc:_addr="0x44002408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CVD">
            <edc:SFRFieldDef edc:cname="SD1BUSY" edc:nzwidth="0x1" edc:desc="Scan Descriptor 1 is in progress"/>
            <edc:SFRFieldDef edc:cname="SD1DONE" edc:nzwidth="0x1" edc:desc="Core will set this bit if Scan Descriptor 1 has completed at least once. Core will clear this bit uponreceiving next trigger for Scan Descriptor 1."/>
            <edc:SFRFieldDef edc:cname="SD1INT" edc:nzwidth="0x1" edc:desc="Scan Descriptor 1 has caused an interrupt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SD2BUSY" edc:nzwidth="0x1" edc:desc="Scan Descriptor 2 is in progress"/>
            <edc:SFRFieldDef edc:cname="SD2DONE" edc:nzwidth="0x1" edc:desc="Core will set this bit if Scan Descriptor 2 has completed at least once. Core will clear this bit uponreceiving next trigger for Scan Descriptor 2."/>
            <edc:SFRFieldDef edc:cname="SD2INT" edc:nzwidth="0x1" edc:desc="Scan Descriptor 2 has caused an interrupt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SD3BUSY" edc:nzwidth="0x1" edc:desc="Scan Descriptor 3 is in progress"/>
            <edc:SFRFieldDef edc:cname="SD3DONE" edc:nzwidth="0x1" edc:desc="Core will set this bit if Scan Descriptor 3 has completed at least once. Core will clear this bit uponreceiving next trigger for Scan Descriptor 3."/>
            <edc:SFRFieldDef edc:cname="SD3INT" edc:nzwidth="0x1" edc:desc="Scan Descriptor 3 has caused an interrupt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SD4BUSY" edc:nzwidth="0x1" edc:desc="Scan Descriptor 4 is in progress"/>
            <edc:SFRFieldDef edc:cname="SD4DONE" edc:nzwidth="0x1" edc:desc="Core will set this bit if Scan Descriptor 4 has completed at least once. Core will clear this bit uponreceiving next trigger for Scan Descriptor 4."/>
            <edc:SFRFieldDef edc:cname="SD4INT" edc:nzwidth="0x1" edc:desc="Scan Descriptor 4 has caused an interrupt."/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FIFOCNT" edc:nzwidth="0xA" edc:desc="Results FIFO word count: Indicates the number of words in the Results FIFO."/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="FIFOMT" edc:nzwidth="0x1" edc:desc="The Results FIFO is empty."/>
            <edc:SFRFieldDef edc:cname="FIFOWM" edc:nzwidth="0x1" edc:desc="The Results FIFO has reached the programmed FIFOTHRESH threshold."/>
            <edc:SFRFieldDef edc:cname="FIFOFULL" edc:nzwidth="0x1" edc:desc="The Results FIFO is full."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4400240C"/>
      <edc:SFRDef ltx:memberofperipheral="CVD" edc:cname="CVDRESH" edc:nzwidth="0x20" edc:access="--------rrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x44002410">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CVD">
            <edc:SFRFieldDef edc:cname="POS" edc:nzwidth="0x18" edc:desc="The accumulated result of the positive-side measurements.Since the controller supports up to 128x oversampling, each polarity can accumulate up to 23 bits when using a 16-bitADC. The accumulation is not shifted back down to create an average. Therefore, if oversampling was requested, theSW will need to account for the left-shift of the result returned."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CVD" edc:cname="CVDRESL" edc:nzwidth="0x20" edc:access="--------rrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x44002414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CVD">
            <edc:SFRFieldDef edc:cname="NEG" edc:nzwidth="0x18" edc:desc="The accumulated result of the negative-side measurements.Since the controller supports up to 128x oversampling, each polarity can accumulate up to 23 bits when using a 16-bitADC. The accumulation is not shifted back down to create an average. Therefore, if oversampling was requested, theSW will need to account for the left-shift of the result returned."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CVD" edc:cname="CVDRESD" edc:nzwidth="0x20" edc:access="rrrrr-rrrrrrr-rrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFBFBFFFF" edc:_addr="0x44002418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CVD">
            <edc:SFRFieldDef edc:cname="DELTA" edc:nzwidth="0x12" edc:desc="Delta of the accumulated results of the negative-side and positive-side measurements."/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXINDEX" edc:nzwidth="0x5" edc:desc="Receive Index for this result. If the Stride of the Scan Descriptor was more than one, the ReceiveIndex indicates the first one of the group."/>
            <edc:SFRFieldDef edc:cname="SDNUM" edc:nzwidth="0x2" edc:desc="Scan Descriptor Number that generated this result"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXINDEX" edc:nzwidth="0x5" edc:desc="Transmit Index for this result. If the Stride of the Scan Descriptor was more than one, the Transmit Index indicates the first one of the group."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x64" edc:_addr="0x4400241C"/>
      <edc:SFRDef ltx:memberofperipheral="CVD" edc:cname="CVDRX0" edc:nzwidth="0x20" edc:access="--nnnnnn--nnnnnn--nnnnnn--nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F3F3F3F" edc:_addr="0x44002480">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CVD">
            <edc:SFRFieldDef edc:cname="RXAN0" edc:nzwidth="0x6" edc:desc="ANx/CVDR channel to use for RX Index 4n+3"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXAN1" edc:nzwidth="0x6" edc:desc="ANx/CVDR channel to use for RX Index 4n+3"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXAN2" edc:nzwidth="0x6" edc:desc="ANx/CVDR channel to use for RX Index 4n+3"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXAN3" edc:nzwidth="0x6" edc:desc="ANx/CVDR channel to use for RX Index 4n+3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CVD" edc:cname="CVDRX1" edc:nzwidth="0x20" edc:access="--nnnnnn--nnnnnn--nnnnnn--nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F3F3F3F" edc:_addr="0x44002484">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CVD">
            <edc:SFRFieldDef edc:cname="RXAN0" edc:nzwidth="0x6" edc:desc="ANx/CVDR channel to use for RX Index 4n+3"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXAN1" edc:nzwidth="0x6" edc:desc="ANx/CVDR channel to use for RX Index 4n+3"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXAN2" edc:nzwidth="0x6" edc:desc="ANx/CVDR channel to use for RX Index 4n+3"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXAN3" edc:nzwidth="0x6" edc:desc="ANx/CVDR channel to use for RX Index 4n+3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x38" edc:_addr="0x44002488"/>
      <edc:SFRDef ltx:memberofperipheral="CVD" edc:cname="CVDTX0" edc:nzwidth="0x20" edc:access="--nnnnnn--nnnnnn--nnnnnn--nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F3F3F3F" edc:_addr="0x440024C0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CVD">
            <edc:SFRFieldDef edc:cname="TXAN0" edc:nzwidth="0x6" edc:desc="CVDT channel to use for TX Index"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TXAN1" edc:nzwidth="0x6" edc:desc="CVDT channel to use for TX Index"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TXAN2" edc:nzwidth="0x6" edc:desc="CVDT channel to use for TX Index"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TXAN3" edc:nzwidth="0x6" edc:desc="CVDT channel to use for TX Index"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CVD" edc:cname="CVDTX1" edc:nzwidth="0x20" edc:access="--nnnnnn--nnnnnn--nnnnnn--nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F3F3F3F" edc:_addr="0x440024C4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CVD">
            <edc:SFRFieldDef edc:cname="TXAN0" edc:nzwidth="0x6" edc:desc="CVDT channel to use for TX Index"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TXAN1" edc:nzwidth="0x6" edc:desc="CVDT channel to use for TX Index"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TXAN2" edc:nzwidth="0x6" edc:desc="CVDT channel to use for TX Index"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TXAN3" edc:nzwidth="0x6" edc:desc="CVDT channel to use for TX Index"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x38" edc:_addr="0x440024C8"/>
      <edc:SFRDef ltx:memberofperipheral="CVD" edc:cname="CVDSD0C1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-nnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF7F" edc:_addr="0x44002500">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CVD">
            <edc:SFRFieldDef edc:cname="SDOVRSAMP" edc:nzwidth="0x7" edc:desc="Scan Descriptor Over Sampling0= One measurement1= Two measurements accumulated...127= 128 measurements accumulated"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SDTH" edc:nzwidth="0x18" edc:desc="Scan Descriptor Threshold."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CVD" edc:cname="CVDSD0C2" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002504">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CVD">
            <edc:SFRFieldDef edc:cname="SDRXBEG" edc:nzwidth="0x6" edc:desc="Scan Descriptor RX Index StartDetermines the first RX index to include in a scan."/>
            <edc:SFRFieldDef edc:cname="SDRXSTRIDE0" edc:nzwidth="0x2" edc:desc="Scan Descriptor RX Index StrideDetermines the number of RX Indexes included in a single measurement4'h0= One RX Index4'hF= 16 TX Indexes"/>
            <edc:SFRFieldDef edc:cname="SDRXEND" edc:nzwidth="0x6" edc:desc="Scan Descriptor RX Index EndDetermines the last RX index to include in a scan.One the RX index pointer, which is incremented by the SDnRXSTRIDE+1 value, meets or exceeds this value, the RXloop of the scan is complete."/>
            <edc:SFRFieldDef edc:cname="SDRXSTRIDE1" edc:nzwidth="0x2" edc:desc="Scan Descriptor RX Index StrideDetermines the number of RX Indexes included in a single measurement4'h0= One RX Index4'hF= 16 TX Indexes"/>
            <edc:SFRFieldDef edc:cname="SDTXBEG" edc:nzwidth="0x6" edc:desc="Scan Descriptor TX Index StartDetermines the first TX index to include in a scan."/>
            <edc:SFRFieldDef edc:cname="SDTXSTRIDE0" edc:nzwidth="0x2" edc:desc="Scan Descriptor TX Index StrideDetermines the number of TX Indexes included in a single measurement.4'h0= One TX Index4'bF= 16TX Indexes"/>
            <edc:SFRFieldDef edc:cname="SDTXEND" edc:nzwidth="0x6" edc:desc="Scan Descriptor TX Index EndDetermines the last TX index to include in a scan.One the TX index pointer, which is incremented by the SDnTXSTRIDE+1 value, meets or exceeds this value, the TXloop of the scan is complete."/>
            <edc:SFRFieldDef edc:cname="SDTXSTRIDE1" edc:nzwidth="0x2" edc:desc="Scan Descriptor TX Index StrideDetermines the number of TX Indexes included in a single measurement.4'h0= One TX Index4'bF= 16TX Indexes"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CVD" edc:cname="CVDSD0C3" edc:nzwidth="0x20" edc:access="nn--nnnn----nnnn-nnnnnnn-nnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xCF0F7F7F" edc:_addr="0x44002508">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CVD">
            <edc:SFRFieldDef edc:cname="SDCHGTIME" edc:nzwidth="0x7" edc:desc="Scan Descriptor Charge TimeControls the number of cycles (clock based on CVDCON.CLKSEL[1:0]) the state machine waits in the CHARGE statedriving both the internal and external capacitor nodes, as well as the TX output(s)"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SDACQTIME" edc:nzwidth="0x7" edc:desc="Scan Descriptor Acquire TimeControls the number of cycles (clock based on CVDCON.CLKSEL[1:0]) the state machine waits in the ACQUIRE stateto allow the ADC voltage to settle"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CVDCPL" edc:nzwidth="0x3" edc:desc="Capacitor Voltage Divider (CVD) Setting bits"/>
            <edc:SFRFieldDef edc:cname="CVDEN" edc:nzwidth="0x1" edc:desc=" Capacitive Voltage Division Enable bit"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="SDMUT" edc:nzwidth="0x1" edc:desc="Scan Descriptor Mutual Mode1= Mutual Measurement Mode; TX outputs are part of CVD measurement and are driven0=No Mutual Measurement Mode; TX outputs are not part of CVD measurements"/>
            <edc:SFRFieldDef edc:cname="SDSELF" edc:nzwidth="0x1" edc:desc="Scan Descriptor Mutual Mode1= Self Measurement Mode; RX outputs are part of CVD measurement and are driven0= No Self Measurement; RX outputs are not part of CVD measurements"/>
            <edc:SFRFieldDef edc:cname="SDINTEN" edc:nzwidth="0x1" edc:desc="Scan Descriptor Interrupt Enable1= Scan Descriptor creates an interrupt if the accumulator threshold is met0= Scan descriptor does not create an interrupt"/>
            <edc:SFRFieldDef edc:cname="SDBUF" edc:nzwidth="0x1" edc:desc="Scan Descriptor CVD Buffer Enable1= Use the SOC's CVD Buffer macro to drive the party-line (shared ADC core input) rather than the RX outputs0= SOC's CVD Buffer macro not used to drive party-line (or doesn't exist)"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SDEN" edc:nzwidth="0x2" edc:desc="Scan Descriptor Enable Mode00= Scan Descriptor Disabled01= Execute Scan Descriptor one time only, then clear the enable.10= Execute the Scan Descriptor, but keep enabled. Move on to next enabled descriptors.11= Execute the Scan Descriptor in a loop until a threshold match is detected, then clear the enable and move on tonext enabled descriptors."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CVD" edc:cname="CVDSD0T2" edc:nzwidth="0x20" edc:access="-nnnnnnn-nnnnnnn-nnnnnnn-nnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7F7F7F7F" edc:_addr="0x4400250C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CVD">
            <edc:SFRFieldDef edc:cname="SDCONTIME" edc:nzwidth="0x7" edc:desc="Scan Descriptor Charge TimeControls the number of cycles (clock based on CVDCON.CLKSEL[1:0]) the state machine waits in the CONVERT statewaiting for the ADC sample data. It must be ensured that the ADC will assert End-Of-Convert (EOC) before the CONVERT state timer expires."/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SDPOLTIME" edc:nzwidth="0x7" edc:desc="Scan Descriptor Polarity TimeControls the number of cycles (clock based on CVDCON.CLKSEL[1:0]) the state machine waits in the POLARITY statebefore taking the second polarity measurement of an RX/TX pair"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SDOVRTIME" edc:nzwidth="0x7" edc:desc="Scan Descriptor Oversample TimeControls the number of cycles (clock based on CVDCON.CLKSEL[1:0]) the state machine waits in the OVERSAMPstate before taking the next oversampling measurement of an RX/TX pair."/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SDCHNTIME" edc:nzwidth="0x7" edc:desc="Scan Descriptor Channel TimeControls the number of cycles (clock based on CVDCON.CLKSEL[1:0]) the state machine waits in the RXCHAN orTXCHAN state before moving to the next RX/TX pair"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CVD" edc:cname="CVDSD1C1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-nnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF7F" edc:_addr="0x44002510">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CVD">
            <edc:SFRFieldDef edc:cname="SDOVRSAMP" edc:nzwidth="0x7" edc:desc="Scan Descriptor Over Sampling0= One measurement1= Two measurements accumulated...127= 128 measurements accumulated"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SDTH" edc:nzwidth="0x18" edc:desc="Scan Descriptor Threshold."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CVD" edc:cname="CVDSD1C2" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002514">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CVD">
            <edc:SFRFieldDef edc:cname="SDRXBEG" edc:nzwidth="0x6" edc:desc="Scan Descriptor RX Index StartDetermines the first RX index to include in a scan."/>
            <edc:SFRFieldDef edc:cname="SDRXSTRIDE0" edc:nzwidth="0x2" edc:desc="Scan Descriptor RX Index StrideDetermines the number of RX Indexes included in a single measurement4'h0= One RX Index4'hF= 16 TX Indexes"/>
            <edc:SFRFieldDef edc:cname="SDRXEND" edc:nzwidth="0x6" edc:desc="Scan Descriptor RX Index EndDetermines the last RX index to include in a scan.One the RX index pointer, which is incremented by the SDnRXSTRIDE+1 value, meets or exceeds this value, the RXloop of the scan is complete."/>
            <edc:SFRFieldDef edc:cname="SDRXSTRIDE1" edc:nzwidth="0x2" edc:desc="Scan Descriptor RX Index StrideDetermines the number of RX Indexes included in a single measurement4'h0= One RX Index4'hF= 16 TX Indexes"/>
            <edc:SFRFieldDef edc:cname="SDTXBEG" edc:nzwidth="0x6" edc:desc="Scan Descriptor TX Index StartDetermines the first TX index to include in a scan."/>
            <edc:SFRFieldDef edc:cname="SDTXSTRIDE0" edc:nzwidth="0x2" edc:desc="Scan Descriptor TX Index StrideDetermines the number of TX Indexes included in a single measurement.4'h0= One TX Index4'bF= 16TX Indexes"/>
            <edc:SFRFieldDef edc:cname="SDTXEND" edc:nzwidth="0x6" edc:desc="Scan Descriptor TX Index EndDetermines the last TX index to include in a scan.One the TX index pointer, which is incremented by the SDnTXSTRIDE+1 value, meets or exceeds this value, the TXloop of the scan is complete."/>
            <edc:SFRFieldDef edc:cname="SDTXSTRIDE1" edc:nzwidth="0x2" edc:desc="Scan Descriptor TX Index StrideDetermines the number of TX Indexes included in a single measurement.4'h0= One TX Index4'bF= 16TX Indexes"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CVD" edc:cname="CVDSD1C3" edc:nzwidth="0x20" edc:access="nn--nnnn----nnnn-nnnnnnn-nnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xCF0F7F7F" edc:_addr="0x44002518">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CVD">
            <edc:SFRFieldDef edc:cname="SDCHGTIME" edc:nzwidth="0x7" edc:desc="Scan Descriptor Charge TimeControls the number of cycles (clock based on CVDCON.CLKSEL[1:0]) the state machine waits in the CHARGE statedriving both the internal and external capacitor nodes, as well as the TX output(s)"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SDACQTIME" edc:nzwidth="0x7" edc:desc="Scan Descriptor Acquire TimeControls the number of cycles (clock based on CVDCON.CLKSEL[1:0]) the state machine waits in the ACQUIRE stateto allow the ADC voltage to settle"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CVDCPL" edc:nzwidth="0x3" edc:desc="Capacitor Voltage Divider (CVD) Setting bits"/>
            <edc:SFRFieldDef edc:cname="CVDEN" edc:nzwidth="0x1" edc:desc=" Capacitive Voltage Division Enable bit"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="SDMUT" edc:nzwidth="0x1" edc:desc="Scan Descriptor Mutual Mode1= Mutual Measurement Mode; TX outputs are part of CVD measurement and are driven0=No Mutual Measurement Mode; TX outputs are not part of CVD measurements"/>
            <edc:SFRFieldDef edc:cname="SDSELF" edc:nzwidth="0x1" edc:desc="Scan Descriptor Mutual Mode1= Self Measurement Mode; RX outputs are part of CVD measurement and are driven0= No Self Measurement; RX outputs are not part of CVD measurements"/>
            <edc:SFRFieldDef edc:cname="SDINTEN" edc:nzwidth="0x1" edc:desc="Scan Descriptor Interrupt Enable1= Scan Descriptor creates an interrupt if the accumulator threshold is met0= Scan descriptor does not create an interrupt"/>
            <edc:SFRFieldDef edc:cname="SDBUF" edc:nzwidth="0x1" edc:desc="Scan Descriptor CVD Buffer Enable1= Use the SOC's CVD Buffer macro to drive the party-line (shared ADC core input) rather than the RX outputs0= SOC's CVD Buffer macro not used to drive party-line (or doesn't exist)"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SDEN" edc:nzwidth="0x2" edc:desc="Scan Descriptor Enable Mode00= Scan Descriptor Disabled01= Execute Scan Descriptor one time only, then clear the enable.10= Execute the Scan Descriptor, but keep enabled. Move on to next enabled descriptors.11= Execute the Scan Descriptor in a loop until a threshold match is detected, then clear the enable and move on tonext enabled descriptors."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CVD" edc:cname="CVDSD1T2" edc:nzwidth="0x20" edc:access="-nnnnnnn-nnnnnnn-nnnnnnn-nnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7F7F7F7F" edc:_addr="0x4400251C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CVD">
            <edc:SFRFieldDef edc:cname="SDCONTIME" edc:nzwidth="0x7" edc:desc="Scan Descriptor Charge TimeControls the number of cycles (clock based on CVDCON.CLKSEL[1:0]) the state machine waits in the CONVERT statewaiting for the ADC sample data. It must be ensured that the ADC will assert End-Of-Convert (EOC) before the CONVERT state timer expires."/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SDPOLTIME" edc:nzwidth="0x7" edc:desc="Scan Descriptor Polarity TimeControls the number of cycles (clock based on CVDCON.CLKSEL[1:0]) the state machine waits in the POLARITY statebefore taking the second polarity measurement of an RX/TX pair"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SDOVRTIME" edc:nzwidth="0x7" edc:desc="Scan Descriptor Oversample TimeControls the number of cycles (clock based on CVDCON.CLKSEL[1:0]) the state machine waits in the OVERSAMPstate before taking the next oversampling measurement of an RX/TX pair."/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SDCHNTIME" edc:nzwidth="0x7" edc:desc="Scan Descriptor Channel TimeControls the number of cycles (clock based on CVDCON.CLKSEL[1:0]) the state machine waits in the RXCHAN orTXCHAN state before moving to the next RX/TX pair"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CVD" edc:cname="CVDSD2C1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-nnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF7F" edc:_addr="0x44002520">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CVD">
            <edc:SFRFieldDef edc:cname="SDOVRSAMP" edc:nzwidth="0x7" edc:desc="Scan Descriptor Over Sampling0= One measurement1= Two measurements accumulated...127= 128 measurements accumulated"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SDTH" edc:nzwidth="0x18" edc:desc="Scan Descriptor Threshold."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CVD" edc:cname="CVDSD2C2" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002524">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CVD">
            <edc:SFRFieldDef edc:cname="SDRXBEG" edc:nzwidth="0x6" edc:desc="Scan Descriptor RX Index StartDetermines the first RX index to include in a scan."/>
            <edc:SFRFieldDef edc:cname="SDRXSTRIDE0" edc:nzwidth="0x2" edc:desc="Scan Descriptor RX Index StrideDetermines the number of RX Indexes included in a single measurement4'h0= One RX Index4'hF= 16 TX Indexes"/>
            <edc:SFRFieldDef edc:cname="SDRXEND" edc:nzwidth="0x6" edc:desc="Scan Descriptor RX Index EndDetermines the last RX index to include in a scan.One the RX index pointer, which is incremented by the SDnRXSTRIDE+1 value, meets or exceeds this value, the RXloop of the scan is complete."/>
            <edc:SFRFieldDef edc:cname="SDRXSTRIDE1" edc:nzwidth="0x2" edc:desc="Scan Descriptor RX Index StrideDetermines the number of RX Indexes included in a single measurement4'h0= One RX Index4'hF= 16 TX Indexes"/>
            <edc:SFRFieldDef edc:cname="SDTXBEG" edc:nzwidth="0x6" edc:desc="Scan Descriptor TX Index StartDetermines the first TX index to include in a scan."/>
            <edc:SFRFieldDef edc:cname="SDTXSTRIDE0" edc:nzwidth="0x2" edc:desc="Scan Descriptor TX Index StrideDetermines the number of TX Indexes included in a single measurement.4'h0= One TX Index4'bF= 16TX Indexes"/>
            <edc:SFRFieldDef edc:cname="SDTXEND" edc:nzwidth="0x6" edc:desc="Scan Descriptor TX Index EndDetermines the last TX index to include in a scan.One the TX index pointer, which is incremented by the SDnTXSTRIDE+1 value, meets or exceeds this value, the TXloop of the scan is complete."/>
            <edc:SFRFieldDef edc:cname="SDTXSTRIDE1" edc:nzwidth="0x2" edc:desc="Scan Descriptor TX Index StrideDetermines the number of TX Indexes included in a single measurement.4'h0= One TX Index4'bF= 16TX Indexes"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CVD" edc:cname="CVDSD2C3" edc:nzwidth="0x20" edc:access="nn--nnnn----nnnn-nnnnnnn-nnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xCF0F7F7F" edc:_addr="0x44002528">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CVD">
            <edc:SFRFieldDef edc:cname="SDCHGTIME" edc:nzwidth="0x7" edc:desc="Scan Descriptor Charge TimeControls the number of cycles (clock based on CVDCON.CLKSEL[1:0]) the state machine waits in the CHARGE statedriving both the internal and external capacitor nodes, as well as the TX output(s)"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SDACQTIME" edc:nzwidth="0x7" edc:desc="Scan Descriptor Acquire TimeControls the number of cycles (clock based on CVDCON.CLKSEL[1:0]) the state machine waits in the ACQUIRE stateto allow the ADC voltage to settle"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CVDCPL" edc:nzwidth="0x3" edc:desc="Capacitor Voltage Divider (CVD) Setting bits"/>
            <edc:SFRFieldDef edc:cname="CVDEN" edc:nzwidth="0x1" edc:desc=" Capacitive Voltage Division Enable bit"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="SDMUT" edc:nzwidth="0x1" edc:desc="Scan Descriptor Mutual Mode1= Mutual Measurement Mode; TX outputs are part of CVD measurement and are driven0=No Mutual Measurement Mode; TX outputs are not part of CVD measurements"/>
            <edc:SFRFieldDef edc:cname="SDSELF" edc:nzwidth="0x1" edc:desc="Scan Descriptor Mutual Mode1= Self Measurement Mode; RX outputs are part of CVD measurement and are driven0= No Self Measurement; RX outputs are not part of CVD measurements"/>
            <edc:SFRFieldDef edc:cname="SDINTEN" edc:nzwidth="0x1" edc:desc="Scan Descriptor Interrupt Enable1= Scan Descriptor creates an interrupt if the accumulator threshold is met0= Scan descriptor does not create an interrupt"/>
            <edc:SFRFieldDef edc:cname="SDBUF" edc:nzwidth="0x1" edc:desc="Scan Descriptor CVD Buffer Enable1= Use the SOC's CVD Buffer macro to drive the party-line (shared ADC core input) rather than the RX outputs0= SOC's CVD Buffer macro not used to drive party-line (or doesn't exist)"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SDEN" edc:nzwidth="0x2" edc:desc="Scan Descriptor Enable Mode00= Scan Descriptor Disabled01= Execute Scan Descriptor one time only, then clear the enable.10= Execute the Scan Descriptor, but keep enabled. Move on to next enabled descriptors.11= Execute the Scan Descriptor in a loop until a threshold match is detected, then clear the enable and move on tonext enabled descriptors."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CVD" edc:cname="CVDSD2T2" edc:nzwidth="0x20" edc:access="-nnnnnnn-nnnnnnn-nnnnnnn-nnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7F7F7F7F" edc:_addr="0x4400252C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CVD">
            <edc:SFRFieldDef edc:cname="SDCONTIME" edc:nzwidth="0x7" edc:desc="Scan Descriptor Charge TimeControls the number of cycles (clock based on CVDCON.CLKSEL[1:0]) the state machine waits in the CONVERT statewaiting for the ADC sample data. It must be ensured that the ADC will assert End-Of-Convert (EOC) before the CONVERT state timer expires."/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SDPOLTIME" edc:nzwidth="0x7" edc:desc="Scan Descriptor Polarity TimeControls the number of cycles (clock based on CVDCON.CLKSEL[1:0]) the state machine waits in the POLARITY statebefore taking the second polarity measurement of an RX/TX pair"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SDOVRTIME" edc:nzwidth="0x7" edc:desc="Scan Descriptor Oversample TimeControls the number of cycles (clock based on CVDCON.CLKSEL[1:0]) the state machine waits in the OVERSAMPstate before taking the next oversampling measurement of an RX/TX pair."/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SDCHNTIME" edc:nzwidth="0x7" edc:desc="Scan Descriptor Channel TimeControls the number of cycles (clock based on CVDCON.CLKSEL[1:0]) the state machine waits in the RXCHAN orTXCHAN state before moving to the next RX/TX pair"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CVD" edc:cname="CVDSD3C1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-nnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF7F" edc:_addr="0x44002530">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CVD">
            <edc:SFRFieldDef edc:cname="SDOVRSAMP" edc:nzwidth="0x7" edc:desc="Scan Descriptor Over Sampling0= One measurement1= Two measurements accumulated...127= 128 measurements accumulated"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SDTH" edc:nzwidth="0x18" edc:desc="Scan Descriptor Threshold."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CVD" edc:cname="CVDSD3C2" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002534">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CVD">
            <edc:SFRFieldDef edc:cname="SDRXBEG" edc:nzwidth="0x6" edc:desc="Scan Descriptor RX Index StartDetermines the first RX index to include in a scan."/>
            <edc:SFRFieldDef edc:cname="SDRXSTRIDE0" edc:nzwidth="0x2" edc:desc="Scan Descriptor RX Index StrideDetermines the number of RX Indexes included in a single measurement4'h0= One RX Index4'hF= 16 TX Indexes"/>
            <edc:SFRFieldDef edc:cname="SDRXEND" edc:nzwidth="0x6" edc:desc="Scan Descriptor RX Index EndDetermines the last RX index to include in a scan.One the RX index pointer, which is incremented by the SDnRXSTRIDE+1 value, meets or exceeds this value, the RXloop of the scan is complete."/>
            <edc:SFRFieldDef edc:cname="SDRXSTRIDE1" edc:nzwidth="0x2" edc:desc="Scan Descriptor RX Index StrideDetermines the number of RX Indexes included in a single measurement4'h0= One RX Index4'hF= 16 TX Indexes"/>
            <edc:SFRFieldDef edc:cname="SDTXBEG" edc:nzwidth="0x6" edc:desc="Scan Descriptor TX Index StartDetermines the first TX index to include in a scan."/>
            <edc:SFRFieldDef edc:cname="SDTXSTRIDE0" edc:nzwidth="0x2" edc:desc="Scan Descriptor TX Index StrideDetermines the number of TX Indexes included in a single measurement.4'h0= One TX Index4'bF= 16TX Indexes"/>
            <edc:SFRFieldDef edc:cname="SDTXEND" edc:nzwidth="0x6" edc:desc="Scan Descriptor TX Index EndDetermines the last TX index to include in a scan.One the TX index pointer, which is incremented by the SDnTXSTRIDE+1 value, meets or exceeds this value, the TXloop of the scan is complete."/>
            <edc:SFRFieldDef edc:cname="SDTXSTRIDE1" edc:nzwidth="0x2" edc:desc="Scan Descriptor TX Index StrideDetermines the number of TX Indexes included in a single measurement.4'h0= One TX Index4'bF= 16TX Indexes"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CVD" edc:cname="CVDSD3C3" edc:nzwidth="0x20" edc:access="nn--nnnn----nnnn-nnnnnnn-nnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xCF0F7F7F" edc:_addr="0x44002538">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CVD">
            <edc:SFRFieldDef edc:cname="SDCHGTIME" edc:nzwidth="0x7" edc:desc="Scan Descriptor Charge TimeControls the number of cycles (clock based on CVDCON.CLKSEL[1:0]) the state machine waits in the CHARGE statedriving both the internal and external capacitor nodes, as well as the TX output(s)"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SDACQTIME" edc:nzwidth="0x7" edc:desc="Scan Descriptor Acquire TimeControls the number of cycles (clock based on CVDCON.CLKSEL[1:0]) the state machine waits in the ACQUIRE stateto allow the ADC voltage to settle"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CVDCPL" edc:nzwidth="0x3" edc:desc="Capacitor Voltage Divider (CVD) Setting bits"/>
            <edc:SFRFieldDef edc:cname="CVDEN" edc:nzwidth="0x1" edc:desc=" Capacitive Voltage Division Enable bit"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="SDMUT" edc:nzwidth="0x1" edc:desc="Scan Descriptor Mutual Mode1= Mutual Measurement Mode; TX outputs are part of CVD measurement and are driven0=No Mutual Measurement Mode; TX outputs are not part of CVD measurements"/>
            <edc:SFRFieldDef edc:cname="SDSELF" edc:nzwidth="0x1" edc:desc="Scan Descriptor Mutual Mode1= Self Measurement Mode; RX outputs are part of CVD measurement and are driven0= No Self Measurement; RX outputs are not part of CVD measurements"/>
            <edc:SFRFieldDef edc:cname="SDINTEN" edc:nzwidth="0x1" edc:desc="Scan Descriptor Interrupt Enable1= Scan Descriptor creates an interrupt if the accumulator threshold is met0= Scan descriptor does not create an interrupt"/>
            <edc:SFRFieldDef edc:cname="SDBUF" edc:nzwidth="0x1" edc:desc="Scan Descriptor CVD Buffer Enable1= Use the SOC's CVD Buffer macro to drive the party-line (shared ADC core input) rather than the RX outputs0= SOC's CVD Buffer macro not used to drive party-line (or doesn't exist)"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SDEN" edc:nzwidth="0x2" edc:desc="Scan Descriptor Enable Mode00= Scan Descriptor Disabled01= Execute Scan Descriptor one time only, then clear the enable.10= Execute the Scan Descriptor, but keep enabled. Move on to next enabled descriptors.11= Execute the Scan Descriptor in a loop until a threshold match is detected, then clear the enable and move on tonext enabled descriptors."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CVD" edc:cname="CVDSD3T2" edc:nzwidth="0x20" edc:access="-nnnnnnn-nnnnnnn-nnnnnnn-nnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7F7F7F7F" edc:_addr="0x4400253C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CVD">
            <edc:SFRFieldDef edc:cname="SDCONTIME" edc:nzwidth="0x7" edc:desc="Scan Descriptor Charge TimeControls the number of cycles (clock based on CVDCON.CLKSEL[1:0]) the state machine waits in the CONVERT statewaiting for the ADC sample data. It must be ensured that the ADC will assert End-Of-Convert (EOC) before the CONVERT state timer expires."/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SDPOLTIME" edc:nzwidth="0x7" edc:desc="Scan Descriptor Polarity TimeControls the number of cycles (clock based on CVDCON.CLKSEL[1:0]) the state machine waits in the POLARITY statebefore taking the second polarity measurement of an RX/TX pair"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SDOVRTIME" edc:nzwidth="0x7" edc:desc="Scan Descriptor Oversample TimeControls the number of cycles (clock based on CVDCON.CLKSEL[1:0]) the state machine waits in the OVERSAMPstate before taking the next oversampling measurement of an RX/TX pair."/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SDCHNTIME" edc:nzwidth="0x7" edc:desc="Scan Descriptor Channel TimeControls the number of cycles (clock based on CVDCON.CLKSEL[1:0]) the state machine waits in the RXCHAN orTXCHAN state before moving to the next RX/TX pair"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC0" edc:_addr="0x44002540"/>
      <edc:SFRDef ltx:memberofperipheral="CVD" edc:cname="CVDBG" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002600">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CVD">
            <edc:SFRFieldDef edc:cname="SEL_L" edc:nzwidth="0x10" edc:desc="Select signal to MUX debug signals on to port cvd_tst_dbg_data[15:0]"/>
            <edc:SFRFieldDef edc:cname="SEL_H" edc:nzwidth="0x10" edc:desc="Select signal to MUX debug signals on to port cvd_tst_dbg_data[31:16]"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3FC" edc:_addr="0x44002604"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="ANSEL" edc:nzwidth="0x20" edc:access="-----------------nnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FFF" edc:_addr="0x44002A00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPIOA">
            <edc:SFRFieldDef edc:cname="ANS0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ANS1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ANS2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ANS3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ANS4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ANS5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ANS6" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ANS7" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ANS8" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ANS9" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ANS10" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ANS11" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ANS12" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ANS13" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ANS14" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="ANSELCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002A04"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="ANSELSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002A08"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="ANSELINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002A0C"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="TRIS" edc:nzwidth="0x20" edc:access="-----------------nnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FFF" edc:_addr="0x44002A10">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPIOA">
            <edc:SFRFieldDef edc:cname="TRIS0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRIS1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRIS2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRIS3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRIS4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRIS5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRIS6" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRIS7" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRIS8" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRIS9" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRIS10" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRIS11" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRIS12" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRIS13" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRIS14" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="TRISCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002A14"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="TRISSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002A18"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="TRISINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002A1C"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="PORT" edc:nzwidth="0x20" edc:access="-----------------nnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FFF" edc:_addr="0x44002A20">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPIOA">
            <edc:SFRFieldDef edc:cname="R0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="R1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="R2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="R3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="R4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="R5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="R6" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="R7" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="R8" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="R9" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="R10" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="R11" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="R12" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="R13" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="R14" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="PORTCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002A24"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="PORTSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002A28"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="PORTINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002A2C"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="LAT" edc:nzwidth="0x20" edc:access="-----------------nnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FFF" edc:_addr="0x44002A30">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPIOA">
            <edc:SFRFieldDef edc:cname="LAT0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAT1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAT2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAT3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAT4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAT5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAT6" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAT7" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAT8" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAT9" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAT10" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAT11" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAT12" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAT13" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAT14" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="LATCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002A34"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="LATSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002A38"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="LATINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002A3C"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="ODC" edc:nzwidth="0x20" edc:access="-----------------nnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FFF" edc:_addr="0x44002A40">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPIOA">
            <edc:SFRFieldDef edc:cname="ODC0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ODC1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ODC2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ODC3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ODC4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ODC5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ODC6" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ODC7" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ODC8" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ODC9" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ODC10" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ODC11" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ODC12" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ODC13" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ODC14" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="ODCCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002A44"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="ODCSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002A48"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="ODCINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002A4C"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="CNPU" edc:nzwidth="0x20" edc:access="-----------------nnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FFF" edc:_addr="0x44002A50">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPIOA">
            <edc:SFRFieldDef edc:cname="CNPU0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPU1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPU2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPU3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPU4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPU5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPU6" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPU7" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPU8" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPU9" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPU10" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPU11" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPU12" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPU13" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPU14" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="CNPUCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002A54"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="CNPUSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002A58"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="CNPUINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002A5C"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="CNPD" edc:nzwidth="0x20" edc:access="-----------------nnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FFF" edc:_addr="0x44002A60">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPIOA">
            <edc:SFRFieldDef edc:cname="CNPD0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPD1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPD2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPD3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPD4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPD5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPD6" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPD7" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPD8" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPD9" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPD10" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPD11" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPD12" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPD13" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPD14" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="CNPDCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002A64"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="CNPDSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002A68"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="CNPDINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002A6C"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="CNCON" edc:nzwidth="0x20" edc:access="----------------nnn-n-----------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xE800" edc:_addr="0x44002A70">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPIOA">
            <edc:AdjustPoint edc:offset="0xB"/>
            <edc:SFRFieldDef edc:cname="EDGEDETECT" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SIDL" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FRZ" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ON" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="CNCONCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002A74"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="CNCONSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002A78"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="CNCONINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002A7C"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="CNEN" edc:nzwidth="0x20" edc:access="-----------------nnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FFF" edc:_addr="0x44002A80">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPIOA">
            <edc:SFRFieldDef edc:cname="CNIE0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNIE1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNIE2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNIE3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNIE4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNIE5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNIE6" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNIE7" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNIE8" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNIE9" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNIE10" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNIE11" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNIE12" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNIE13" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNIE14" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="CNENCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002A84"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="CNENSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002A88"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="CNENINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002A8C"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="CNSTAT" edc:nzwidth="0x20" edc:access="-----------------nnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FFF" edc:_addr="0x44002A90">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPIOA">
            <edc:SFRFieldDef edc:cname="CNSTAT0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNSTAT1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNSTAT2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNSTAT3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNSTAT4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNSTAT5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNSTAT6" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNSTAT7" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNSTAT8" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNSTATA" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNSTAT10" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNSTAT11" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNSTAT12" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNSTAT13" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNSTAT14" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="CNSTATCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002A94"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="CNSTATSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002A98"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="CNSTATINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002A9C"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="CNNE" edc:nzwidth="0x20" edc:access="-----------------nnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FFF" edc:_addr="0x44002AA0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPIOA">
            <edc:SFRFieldDef edc:cname="CNNE0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNNE1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNNE2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNNE3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNNE4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNNE5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNNE6" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNNE7" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNNE8" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNNE9" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNNE10" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNNE11" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNNE12" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNNE13" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNNE14" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="CNNECLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002AA4"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="CNNESET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002AA8"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="CNNEINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002AAC"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="CNF" edc:nzwidth="0x20" edc:access="-----------------nnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FFF" edc:_addr="0x44002AB0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPIOA">
            <edc:SFRFieldDef edc:cname="CNF0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNF1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNF2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNF3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNF4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNF5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNF6" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNF7" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNF8" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNF9" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNF10" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNF11" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNF12" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNF13" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNF14" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="CNFCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002AB4"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="CNFSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002AB8"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="CNFINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002ABC"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="SRCON0" edc:nzwidth="0x20" edc:access="-----------------nnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FFF" edc:_addr="0x44002AC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPIOA">
            <edc:SFRFieldDef edc:cname="SR00" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR01" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR02" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR03" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR04" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR05" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR06" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR07" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR08" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR09" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR010" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR011" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR012" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR013" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR014" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="SRCON0CLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002AC4"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="SRCON0SET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002AC8"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="SRCON0INV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002ACC"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="SRCON1" edc:nzwidth="0x20" edc:access="-----------------nnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FFF" edc:_addr="0x44002AD0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPIOA">
            <edc:SFRFieldDef edc:cname="SR10" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR11" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR12" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR13" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR14" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR15" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR16" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR17" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR18" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR19" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR110" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR111" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR112" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR113" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR114" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="SRCON1CLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002AD4"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="SRCON1SET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002AD8"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOA" edc:cname="SRCON1INV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002ADC"/>
      <edc:AdjustPoint edc:offset="0x20" edc:_addr="0x44002AE0"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="ANSEL" edc:nzwidth="0x20" edc:access="-----------------nnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FFF" edc:_addr="0x44002B00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPIOB">
            <edc:SFRFieldDef edc:cname="ANS0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ANS1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ANS2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ANS3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ANS4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ANS5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ANS6" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ANS7" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ANS8" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ANS9" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ANS10" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ANS11" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ANS12" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ANS13" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ANS14" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="ANSELCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002B04"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="ANSELSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002B08"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="ANSELINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002B0C"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="TRIS" edc:nzwidth="0x20" edc:access="-----------------nnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FFF" edc:_addr="0x44002B10">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPIOB">
            <edc:SFRFieldDef edc:cname="TRIS0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRIS1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRIS2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRIS3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRIS4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRIS5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRIS6" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRIS7" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRIS8" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRIS9" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRIS10" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRIS11" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRIS12" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRIS13" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRIS14" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="TRISCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002B14"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="TRISSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002B18"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="TRISINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002B1C"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="PORT" edc:nzwidth="0x20" edc:access="-----------------nnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FFF" edc:_addr="0x44002B20">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPIOB">
            <edc:SFRFieldDef edc:cname="R0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="R1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="R2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="R3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="R4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="R5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="R6" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="R7" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="R8" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="R9" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="R10" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="R11" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="R12" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="R13" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="R14" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="PORTCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002B24"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="PORTSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002B28"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="PORTINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002B2C"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="LAT" edc:nzwidth="0x20" edc:access="-----------------nnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FFF" edc:_addr="0x44002B30">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPIOB">
            <edc:SFRFieldDef edc:cname="LAT0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAT1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAT2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAT3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAT4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAT5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAT6" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAT7" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAT8" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAT9" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAT10" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAT11" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAT12" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAT13" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAT14" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="LATCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002B34"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="LATSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002B38"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="LATINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002B3C"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="ODC" edc:nzwidth="0x20" edc:access="-----------------nnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FFF" edc:_addr="0x44002B40">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPIOB">
            <edc:SFRFieldDef edc:cname="ODC0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ODC1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ODC2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ODC3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ODC4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ODC5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ODC6" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ODC7" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ODC8" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ODC9" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ODC10" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ODC11" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ODC12" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ODC13" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ODC14" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="ODCCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002B44"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="ODCSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002B48"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="ODCINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002B4C"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="CNPU" edc:nzwidth="0x20" edc:access="-----------------nnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FFF" edc:_addr="0x44002B50">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPIOB">
            <edc:SFRFieldDef edc:cname="CNPU0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPU1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPU2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPU3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPU4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPU5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPU6" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPU7" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPU8" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPU9" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPU10" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPU11" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPU12" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPU13" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPU14" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="CNPUCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002B54"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="CNPUSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002B58"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="CNPUINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002B5C"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="CNPD" edc:nzwidth="0x20" edc:access="-----------------nnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FFF" edc:_addr="0x44002B60">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPIOB">
            <edc:SFRFieldDef edc:cname="CNPD0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPD1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPD2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPD3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPD4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPD5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPD6" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPD7" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPD8" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPD9" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPD10" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPD11" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPD12" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPD13" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNPD14" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="CNPDCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002B64"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="CNPDSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002B68"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="CNPDINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002B6C"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="CNCON" edc:nzwidth="0x20" edc:access="----------------nnn-n-----------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xE800" edc:_addr="0x44002B70">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPIOB">
            <edc:AdjustPoint edc:offset="0xB"/>
            <edc:SFRFieldDef edc:cname="EDGEDETECT" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SIDL" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FRZ" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ON" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="CNCONCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002B74"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="CNCONSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002B78"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="CNCONINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002B7C"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="CNEN" edc:nzwidth="0x20" edc:access="-----------------nnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FFF" edc:_addr="0x44002B80">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPIOB">
            <edc:SFRFieldDef edc:cname="CNIE0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNIE1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNIE2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNIE3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNIE4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNIE5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNIE6" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNIE7" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNIE8" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNIE9" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNIE10" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNIE11" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNIE12" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNIE13" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNIE14" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="CNENCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002B84"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="CNENSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002B88"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="CNENINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002B8C"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="CNSTAT" edc:nzwidth="0x20" edc:access="-----------------nnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FFF" edc:_addr="0x44002B90">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPIOB">
            <edc:SFRFieldDef edc:cname="CNSTAT0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNSTAT1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNSTAT2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNSTAT3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNSTAT4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNSTAT5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNSTAT6" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNSTAT7" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNSTAT8" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNSTATA" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNSTAT10" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNSTAT11" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNSTAT12" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNSTAT13" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNSTAT14" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="CNSTATCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002B94"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="CNSTATSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002B98"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="CNSTATINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002B9C"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="CNNE" edc:nzwidth="0x20" edc:access="-----------------nnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FFF" edc:_addr="0x44002BA0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPIOB">
            <edc:SFRFieldDef edc:cname="CNNE0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNNE1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNNE2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNNE3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNNE4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNNE5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNNE6" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNNE7" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNNE8" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNNE9" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNNE10" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNNE11" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNNE12" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNNE13" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNNE14" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="CNNECLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002BA4"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="CNNESET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002BA8"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="CNNEINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002BAC"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="CNF" edc:nzwidth="0x20" edc:access="-----------------nnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FFF" edc:_addr="0x44002BB0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPIOB">
            <edc:SFRFieldDef edc:cname="CNF0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNF1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNF2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNF3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNF4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNF5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNF6" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNF7" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNF8" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNF9" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNF10" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNF11" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNF12" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNF13" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CNF14" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="CNFCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002BB4"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="CNFSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002BB8"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="CNFINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002BBC"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="SRCON0" edc:nzwidth="0x20" edc:access="-----------------nnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FFF" edc:_addr="0x44002BC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPIOB">
            <edc:SFRFieldDef edc:cname="SR00" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR01" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR02" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR03" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR04" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR05" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR06" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR07" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR08" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR09" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR010" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR011" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR012" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR013" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR014" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="SRCON0CLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002BC4"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="SRCON0SET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002BC8"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="SRCON0INV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002BCC"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="SRCON1" edc:nzwidth="0x20" edc:access="-----------------nnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FFF" edc:_addr="0x44002BD0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPIOB">
            <edc:SFRFieldDef edc:cname="SR10" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR11" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR12" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR13" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR14" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR15" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR16" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR17" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR18" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR19" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR110" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR111" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR112" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR113" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR114" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="SRCON1CLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002BD4"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="SRCON1SET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002BD8"/>
      <edc:SFRDef ltx:memberofperipheral="GPIOB" edc:cname="SRCON1INV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44002BDC"/>
      <edc:AdjustPoint edc:offset="0x20" edc:_addr="0x44002BE0"/>
      <edc:SFRDef ltx:memberofperipheral="ROT" edc:cname="SECCFG" edc:nzwidth="0x20" edc:access="---------------n----nnnnnnnn----" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x10FF0" edc:_addr="0x44002C00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ROT">
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="UUID_LCK" edc:nzwidth="0x2" edc:desc="Programming lock bits for Unique ID fuses">
              <edc:SFRFieldSemantic edc:cname="0" edc:desc="Unique ID is not locked" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="Unique ID is locked and cannot be programmed" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="2" edc:desc="Unique ID is locked and cannot be programmed" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="3" edc:desc="Unique ID is locked and cannot be programmed" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DEBUG_LCK" edc:nzwidth="0x2" edc:desc="Lock bits for debug/programming">
              <edc:SFRFieldSemantic edc:cname="0" edc:desc="Debug is not locked" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="Debug is locked" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="2" edc:desc="Debug is locked" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="3" edc:desc="Debug is locked" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ROOT_KEY_LCK" edc:nzwidth="0x2" edc:desc="Lock bits for storage root Key">
              <edc:SFRFieldSemantic edc:cname="0" edc:desc="Storage root key is not locked" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="Storage root key is locked and cannot be programmed" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="2" edc:desc="Storage root key is locked and cannot be programmed" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="3" edc:desc="Storage root key is locked and cannot be programmed" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BOOT_KEY_LCK" edc:nzwidth="0x2" edc:desc="Lock bits for Secure Boot/OTA Key">
              <edc:SFRFieldSemantic edc:cname="0" edc:desc="Secure boot key is not locked" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="Secure boot key is locked and cannot be programmed" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="2" edc:desc="Secure boot key is locked and cannot be programmed" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="3" edc:desc="Secure boot key is locked and cannot be programmed" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ADD_BOOT_KEY" edc:nzwidth="0x1" edc:desc="Additional boot Key bit"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xBFC" edc:_addr="0x44002C04"/>
      <edc:SFRDef ltx:memberofperipheral="ROT" edc:cname="SEC_BOOT" edc:nzwidth="0x20" edc:access="--------------nnnnnnnnnn------nn" edc:por="00000000000000010000000000000010" edc:mclr="00000000000000010000000000000010" edc:impl="0x3FF03" edc:_addr="0x44003800">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ROT">
            <edc:SFRFieldDef edc:cname="SEC_BOOT_REQD" edc:nzwidth="0x2" edc:desc="Bits to indicate that secure boot is required on the next device reset.">
              <edc:SFRFieldSemantic edc:cname="0" edc:desc="S ecure boot code authentication is required" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="S ecure boot code authentication is NOT required" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="2" edc:desc="S ecure boot code authentication is NOT required" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="3" edc:desc="S ecure boot code authentication is required" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="SEC_BOOT_STATUS" edc:nzwidth="0x8" edc:desc="Bits to indicate that secure boot status"/>
            <edc:SFRFieldDef edc:cname="SEC_BOOT_DONE" edc:nzwidth="0x2" edc:desc="Bits to indicate that secure boot is done">
              <edc:SFRFieldSemantic edc:cname="0" edc:desc="S ecure boot is done" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="S ecure boot is not done" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="2" edc:desc="S ecure boot is not done" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="3" edc:desc="S ecure boot is done" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ROT" edc:cname="EFUSE_RWDATA" edc:nzwidth="0x20" edc:access="----nnnnnnnnnnnn--------nnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFF00FF" edc:_addr="0x44003804">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ROT">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x8" edc:desc="eFuse Program (Write) Data"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0xC" edc:desc="eFuse Program/Read Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ROT" edc:cname="EFUSE_CON" edc:nzwidth="0x20" edc:access="------------------------nnn---nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xE3" edc:_addr="0x44003808">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ROT">
            <edc:SFRFieldDef edc:cname="PGM_1BIT" edc:nzwidth="0x1" edc:desc="eFuse CTRL to program 1 bit at a time. Valid only when EN_PGM is set">
              <edc:SFRFieldSemantic edc:cname="0" edc:desc="EFuse controller will program EFUSE_RWDATA.DATA[15:0] to the address in EFUSE_RWDATA.ADDR[11:3]" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="EFuse controller will program EFUSE_RWDATA.DATA[0] to the address in EFUSE_RWDATA.ADDR[11:0]" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PGM_MODE" edc:nzwidth="0x1" edc:desc="eFuse Programming Mode Enable bit">
              <edc:SFRFieldSemantic edc:cname="0" edc:desc="EFuse Programming disabled" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="EFuse Programming enabled" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="EN_LD" edc:nzwidth="0x1" edc:desc="eFuse Word Read Start bit for loading the fuse byte pointed by ADDR field into the holding register">
              <edc:SFRFieldSemantic edc:cname="0" edc:desc="EFuse Read operation has completed" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="Start eFuse Read operation for specified eFuse word as addressed in EFUSE_RWDATA register" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EN_LD_ALL1" edc:nzwidth="0x1" edc:desc="eFuse Panel Read Start bit for loading into the holding registers">
              <edc:SFRFieldSemantic edc:cname="0" edc:desc="EFuse Read operation has completed" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="Start eFuse Read operation for entire eFuse panel" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EN_PGM" edc:nzwidth="0x1" edc:desc="eFuse Programming Start bit">
              <edc:SFRFieldSemantic edc:cname="0" edc:desc="EFuse Programming operation has completed" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="Start eFuse Programming operation" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3F4" edc:_addr="0x4400380C"/>
      <edc:SFRDef ltx:memberofperipheral="DAC_CTRL" edc:cname="DACCON" edc:nzwidth="0x20" edc:access="----------------n-------nnn-----" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x80E0" edc:_addr="0x44003C00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DAC_CTRL">
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="LPRCEN1" edc:nzwidth="0x1" edc:desc="LPRC clock enabled for SnH mode">
              <edc:SFRFieldSemantic edc:cname="0" edc:desc="LPRC clock not enabled" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="LPRC clock enabled" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="OUTEN" edc:nzwidth="0x1" edc:desc="Will enable the output buffer">
              <edc:SFRFieldSemantic edc:cname="0" edc:desc="Output buffer disabled" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="Output buffer enabled" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SNH" edc:nzwidth="0x1" edc:desc="Sample and hold circuitry">
              <edc:SFRFieldSemantic edc:cname="0" edc:desc="DAC operation in normal mode" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="DAC operation in low power mode" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="EN" edc:nzwidth="0x1" edc:desc="Enable">
              <edc:SFRFieldSemantic edc:cname="0" edc:desc="The peripheral is disabled." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="The peripheral is enabled." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DAC_CTRL" edc:cname="DACCODE" edc:nzwidth="0x20" edc:access="-------------------------nnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7F" edc:_addr="0x44003C04">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DAC_CTRL">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x7" edc:desc="DAC data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DAC_CTRL" edc:cname="DACCON2" edc:nzwidth="0x20" edc:access="nnn---nnnnnnnnnn------nnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xE3FF03FF" edc:_addr="0x44003C08">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DAC_CTRL">
            <edc:SFRFieldDef edc:cname="WIDTH" edc:nzwidth="0xA" edc:desc="SnH clock width"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="PERIOD" edc:nzwidth="0xA" edc:desc="SnH clock period"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PRESCALAR" edc:nzwidth="0x3" edc:desc="Prescaling factor for SnH clock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1F4" edc:_addr="0x44003C0C"/>
      <edc:SFRDef ltx:memberofperipheral="DGI_SPI" edc:cname="SPICON" edc:nzwidth="0x20" edc:access="---n----n------nnnnnnn-nnn--nn-n" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1081FDCD" edc:_addr="0x44003E00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DGI_SPI">
            <edc:SFRFieldDef edc:cname="GO" edc:nzwidth="0x1" edc:desc="DMA Operation Status bitThis bit is set by the user software to start the DMA operation. It is reset back to zero by the DMA engine whenthe DMA operation is completed or aborted by clearing the ON bit.">
              <edc:SFRFieldSemantic edc:cname="0" edc:desc="DMA is not in operation" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="DMA is in operation" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="STXISEL" edc:nzwidth="0x2" edc:desc="SPI Transmit Service Request Interrupt SelectFor enhanced buffer mode, the SPI generates a Transmit Service Request when:">
              <edc:SFRFieldSemantic edc:cname="0" edc:desc="The SPIxTXB is empty and SPIxSR is empty (i.e. all transmit operations are complete)" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="The SPIxTXB is empty" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="2" edc:desc="The SPIxTXB is at least half empty" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="3" edc:desc="The SPIxTXB is not full" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CKP" edc:nzwidth="0x1" edc:desc="Clock Polarity Select bit">
              <edc:SFRFieldSemantic edc:cname="0" edc:desc="Idle state for clock is a low level; active state is a high level" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="Idle state for clock is a high level; active state is a low level" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SSCON" edc:nzwidth="0x1" edc:desc="SSControl bits">
              <edc:SFRFieldSemantic edc:cname="0" edc:desc="SS is not controlled by the DMA module" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="SS is asserted for the duration of TXCNT" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CKE" edc:nzwidth="0x1" edc:desc="SPI Clock Edge Select bit">
              <edc:SFRFieldSemantic edc:cname="0" edc:desc="Transmit happens on transition from idle clock state to active clock stat e" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="Transmit happens on transition from active clock state to idle clock state" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x2" edc:desc="Serial Word Length bits"/>
            <edc:SFRFieldDef edc:cname="DISSDO" edc:nzwidth="0x1" edc:desc="Disable SDO bit">
              <edc:SFRFieldSemantic edc:cname="0" edc:desc="SDO pin is controlled by the macro" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="SDO pin is not used by the macro. Pin controlled by PORT function" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SIDL" edc:nzwidth="0x1" edc:desc="Stop in Idle control bit">
              <edc:SFRFieldSemantic edc:cname="0" edc:desc="Continue to operate in CPU Idle mode" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="Halt in CPU Idle mode" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FRZ" edc:nzwidth="0x1" edc:desc="Freeze bit (in Debug Mode)">
              <edc:SFRFieldSemantic edc:cname="0" edc:desc="Continue macro operation when in Debug mode" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="Break macro operation when in Debug mode" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ON" edc:nzwidth="0x1" edc:desc="DGISPI On bit">
              <edc:SFRFieldSemantic edc:cname="0" edc:desc="Turn off and reset macro, disable clocks, disable interrupt event generation, allow SFR modifications." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="Enable macro" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ENHBUF" edc:nzwidth="0x1" edc:desc="Enhanced Buffer Enable bit">
              <edc:SFRFieldSemantic edc:cname="0" edc:desc="Enhanced Buffer Mode is disabled" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="Enhanced Buffer Mode is enabled" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="MCLKEN" edc:nzwidth="0x1" edc:desc="Master Clock Enable">
              <edc:SFRFieldSemantic edc:cname="0" edc:desc="PBCLK is used by the BRG" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="MCLK is used by the BRG" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="MSSEN" edc:nzwidth="0x1" edc:desc="Master Mode Slave Select Enable bit">
              <edc:SFRFieldSemantic edc:cname="0" edc:desc="Slave select SPI support disabled" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="SPI Slave Select support enabled " edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x44003E04"/>
      <edc:SFRDef ltx:memberofperipheral="DGI_SPI" edc:cname="SPISTAT" edc:nzwidth="0x20" edc:access="-----------rrrrr----r---r---r-r-" edc:por="00000000000000000000000000001000" edc:mclr="00000000000000000000000000001000" edc:impl="0x1F088A" edc:_addr="0x44003E10">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DGI_SPI">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SPITBF" edc:nzwidth="0x1" edc:desc="SPI Transmit Buffer Full Status bit">
              <edc:SFRFieldSemantic edc:cname="0" edc:desc="SPIxTXB not full" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="SPIxTXB is full" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SPITBE" edc:nzwidth="0x1" edc:desc="SPI Transmit Buffer Empty status bit">
              <edc:SFRFieldSemantic edc:cname="0" edc:desc="SPIxTXB is not empty" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="SPIxTXB is empty" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SRMT" edc:nzwidth="0x1" edc:desc="Shift Register (SPIxSR) Empty bit0= There are current or pending transactions">
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="There are no current or pending transactions" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SPIBUSY" edc:nzwidth="0x1" edc:desc="SPI activity status bit">
              <edc:SFRFieldSemantic edc:cname="0" edc:desc="No on-going transactions (at time of read)" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="Macro currently busy with some transactions" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TXBUFELM" edc:nzwidth="0x5" edc:desc="TransmitBuffer Element Count bits (valid only when ENHBUF = 1)"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x44003E14"/>
      <edc:SFRDef ltx:memberofperipheral="DGI_SPI" edc:cname="SPIBUF" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44003E20">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DGI_SPI">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="FIFO Data bits"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x44003E24"/>
      <edc:SFRDef ltx:memberofperipheral="DGI_SPI" edc:cname="SPIBRG" edc:nzwidth="0x20" edc:access="-------------------nnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1FFF" edc:_addr="0x44003E30">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DGI_SPI">
            <edc:SFRFieldDef edc:cname="BRG" edc:nzwidth="0xD" edc:desc="Baud Rate Divisor bitsseeSection 2.4.1."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x44003E34"/>
      <edc:SFRDef ltx:memberofperipheral="DGI_SPI" edc:cname="SPITXADD" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF" edc:_addr="0x44003E40">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DGI_SPI">
            <edc:SFRFieldDef edc:cname="TXADD" edc:nzwidth="0x10" edc:desc="Transmit Source Address bitsTXADD can constantly be updated to reflect the current transmit address as the transfer progresses"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x44003E44"/>
      <edc:SFRDef ltx:memberofperipheral="DGI_SPI" edc:cname="SPITXCNT" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF" edc:_addr="0x44003E50">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DGI_SPI">
            <edc:SFRFieldDef edc:cname="TXCNT" edc:nzwidth="0x10" edc:desc="Transmit Count bitsThis register indicates the number of transferred data words. As the DMA progresses, TXCNT is constantly decremented to reflect the remaining count yet to be transferred."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xE5AC" edc:_addr="0x44003E54"/>
      <edc:SFRDef ltx:memberofperipheral="PCHE" edc:cname="CHECON" edc:nzwidth="0x20" edc:access="-----nnn-nnn-nnn---n---nn-nnnnnn" edc:por="00000111000000000000000100001111" edc:mclr="00000111000000000000000100001111" edc:impl="0x77711BF" edc:_addr="0x44012400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PCHE">
            <edc:SFRFieldDef edc:cname="PFMWS" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PREFEN" edc:nzwidth="0x2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PFMSECEN" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ADRWS" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CHEPERF" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ICHECOH" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DCHECOH" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ACHECOH" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ICHEINV" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DCHEINV" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ACHEINV" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ICHEEN" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DCHEEN" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ACHEEN" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PCHE" edc:cname="CHECONCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44012404"/>
      <edc:SFRDef ltx:memberofperipheral="PCHE" edc:cname="CHECONSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44012408"/>
      <edc:SFRDef ltx:memberofperipheral="PCHE" edc:cname="CHECONINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4401240C"/>
      <edc:SFRDef ltx:memberofperipheral="PCHE" edc:cname="CHESTAT" edc:nzwidth="0x20" edc:access="----nn------------------nnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC0000FF" edc:_addr="0x44012410">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PCHE">
            <edc:SFRFieldDef edc:cname="PFMSECCNT" edc:nzwidth="0x8"/>
            <edc:AdjustPoint edc:offset="0x12"/>
            <edc:SFRFieldDef edc:cname="PFMSEC" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PFMDED" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PCHE" edc:cname="CHESTATCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44012414"/>
      <edc:SFRDef ltx:memberofperipheral="PCHE" edc:cname="CHESTATSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44012418"/>
      <edc:SFRDef ltx:memberofperipheral="PCHE" edc:cname="CHESTATINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4401241C"/>
      <edc:SFRDef ltx:memberofperipheral="PCHE" edc:cname="CHEHIT" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44012420">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PCHE">
            <edc:SFRFieldDef edc:cname="CHEHIT" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PCHE" edc:cname="CHEHITCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44012424"/>
      <edc:SFRDef ltx:memberofperipheral="PCHE" edc:cname="CHEHITSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44012428"/>
      <edc:SFRDef ltx:memberofperipheral="PCHE" edc:cname="CHEHITINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4401242C"/>
      <edc:SFRDef ltx:memberofperipheral="PCHE" edc:cname="CHEMIS" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44012430">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PCHE">
            <edc:SFRFieldDef edc:cname="CHEMIS" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PCHE" edc:cname="CHEMISCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44012434"/>
      <edc:SFRDef ltx:memberofperipheral="PCHE" edc:cname="CHEMISSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44012438"/>
      <edc:SFRDef ltx:memberofperipheral="PCHE" edc:cname="CHEMISINV" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4401243C"/>
      <edc:AdjustPoint edc:offset="0x19C0" edc:_addr="0x44012440"/>
      <edc:SFRDef ltx:memberofperipheral="PMU" edc:cname="SPICTRL" edc:nzwidth="0x20" edc:access="nn-----nnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC1FFFFFF" edc:_addr="0x44013E00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMU">
            <edc:SFRFieldDef edc:cname="SPIWDATA" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="SPIADDR" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="PMUCRST" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SPIRST" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMU" edc:cname="SPISTATUS" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnn------n" edc:por="00000000000000000000000000001000" edc:mclr="00000000000000000000000000001000" edc:impl="0xFFFFFF81" edc:_addr="0x44013E04">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMU">
            <edc:SFRFieldDef edc:cname="SPIERR" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="SPIRDY" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SPIADDR" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="SPIRDATA" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMU" edc:cname="CLKCTRL" edc:nzwidth="0x20" edc:access="--nnnn-nnnnn-nnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000101000010000010" edc:mclr="00000000000000000101000010000010" edc:impl="0x3DF7FFFF" edc:_addr="0x44013E08">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMU">
            <edc:SFRFieldDef edc:cname="SPICLKDIV" edc:nzwidth="0x6"/>
            <edc:SFRFieldDef edc:cname="PMUANA_BKBOREN" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SPISRC" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BUCKCLKDIV" edc:nzwidth="0x6"/>
            <edc:SFRFieldDef edc:cname="BUCKSRC" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="BACWD" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MLDOEXTEN" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MVREFFSMEN" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CMP_CYCLE" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="BKCLK_HW_OVR" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MLDOEXT_BOREN" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ADCBOREN" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BUCKBOREN" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="F_BCLK_CFG" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMU" edc:cname="MODECTRL1" edc:nzwidth="0x20" edc:access="nnnnnnnn---nnnnn---nnnnn---nnnnn" edc:por="10000000000000000000000000000000" edc:mclr="10000000000000000000000000000000" edc:impl="0xFF1F1F1F" edc:_addr="0x44013E0C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMU">
            <edc:SFRFieldDef edc:cname="VREG4CTRL" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="VREG3CTRL" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="VREG2CTRL" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="VREG1CTRL" edc:nzwidth="0x5"/>
            <edc:SFRFieldDef edc:cname="BUCKMODE" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MLDOEN" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BUCKEN" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMU" edc:cname="MODECTRL2" edc:nzwidth="0x20" edc:access="nnnnnnnn---nnnnn---nnnnn---nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF1F1F1F" edc:_addr="0x44013E10">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMU">
            <edc:SFRFieldDef edc:cname="VREG4CTRL" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="VREG3CTRL" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="VREG2CTRL" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="VREG1CTRL" edc:nzwidth="0x5"/>
            <edc:SFRFieldDef edc:cname="BUCKMODE" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MLDOEN" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BUCKEN" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMU" edc:cname="MODECTRL3" edc:nzwidth="0x20" edc:access="nnnnnnnn---nnnnn---nnnnn---nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF1F1F1F" edc:_addr="0x44013E14">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMU">
            <edc:SFRFieldDef edc:cname="VREG4CTRL" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="VREG3CTRL" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="VREG2CTRL" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="VREG1CTRL" edc:nzwidth="0x5"/>
            <edc:SFRFieldDef edc:cname="BUCKMODE" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MLDOEN" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BUCKEN" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMU" edc:cname="MODECTRL4" edc:nzwidth="0x20" edc:access="nnnnnnnn---nnnnn---nnnnn---nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF1F1F1F" edc:_addr="0x44013E18">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMU">
            <edc:SFRFieldDef edc:cname="VREG4CTRL" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="VREG3CTRL" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="VREG2CTRL" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="VREG1CTRL" edc:nzwidth="0x5"/>
            <edc:SFRFieldDef edc:cname="BUCKMODE" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MLDOEN" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BUCKEN" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMU" edc:cname="OVERCTRL" edc:nzwidth="0x20" edc:access="nnnnnnnnnn-nnnnn---nnnnn---nnnnn" edc:por="10000000010000000000000000000000" edc:mclr="10000000010000000000000000000000" edc:impl="0xFFDF1F1F" edc:_addr="0x44013E1C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMU">
            <edc:SFRFieldDef edc:cname="VREG4OCTRL" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="VREG3OCTRL" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="VREG2OCTRL" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PHWC" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVEREN" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="VREG1OCTRL" edc:nzwidth="0x5"/>
            <edc:SFRFieldDef edc:cname="OBUCKMODE" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OMLDOEN" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OBUCKEN" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMU" edc:cname="PMUCMODE" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnn---nnnnnnnnnnnnn" edc:por="01000000000000000000000001000000" edc:mclr="01000000000000000000000001000000" edc:impl="0xFFFF1FFF" edc:_addr="0x44013E20">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMU">
            <edc:SFRFieldDef edc:cname="CVREG4OCTRL" edc:nzwidth="0x5"/>
            <edc:SFRFieldDef edc:cname="SUPFSM" edc:nzwidth="0x3"/>
            <edc:SFRFieldDef edc:cname="CVREG3OCTRL" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CVREG2OCTROL" edc:nzwidth="0x5"/>
            <edc:SFRFieldDef edc:cname="ADCBOR" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BUCKBOR" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MLDOEXTBOR" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CVREG1OCTRL" edc:nzwidth="0x5"/>
            <edc:SFRFieldDef edc:cname="CBUCKMODE" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMLDOEN" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CBUCKEN" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMU" edc:cname="PMUSTATUS" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-nnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF7F" edc:_addr="0x44013E24">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMU">
            <edc:SFRFieldDef edc:cname="PMUSTATUS" edc:nzwidth="0x5"/>
            <edc:SFRFieldDef edc:cname="WCMRM" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PMUANA_BUCKBOR" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BSSEDATA" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="BSSENUM" edc:nzwidth="0x7"/>
            <edc:SFRFieldDef edc:cname="BSSERR" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMU" edc:cname="PMUSEQ1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44013E28">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMU">
            <edc:SFRFieldDef edc:cname="DELAY" edc:nzwidth="0x6"/>
            <edc:SFRFieldDef edc:cname="CMPBVAL" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SPIRADDR" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="SPIDATA" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMU" edc:cname="PMUSEQ2" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44013E2C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMU">
            <edc:SFRFieldDef edc:cname="DELAY" edc:nzwidth="0x6"/>
            <edc:SFRFieldDef edc:cname="CMPBVAL" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SPIRADDR" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="SPIDATA" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMU" edc:cname="PMUSEQ3" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44013E30">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMU">
            <edc:SFRFieldDef edc:cname="DELAY" edc:nzwidth="0x6"/>
            <edc:SFRFieldDef edc:cname="CMPBVAL" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SPIRADDR" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="SPIDATA" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMU" edc:cname="PMUSEQ4" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44013E34">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMU">
            <edc:SFRFieldDef edc:cname="DELAY" edc:nzwidth="0x6"/>
            <edc:SFRFieldDef edc:cname="CMPBVAL" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SPIRADDR" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="SPIDATA" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMU" edc:cname="PMUCFG" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-nnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF7F" edc:_addr="0x44013E38">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMU">
            <edc:SFRFieldDef edc:cname="BUCK_SW_DELAY" edc:nzwidth="0x7"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MLDO_SW_DELAY" edc:nzwidth="0x6"/>
            <edc:SFRFieldDef edc:cname="MLDOEXT_l" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="BUCK_CP_L" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="BUCK_CP_H" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="ADC_CP_L" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="ADC_CP_H" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x44013E3C"/>
      <edc:SFRDef ltx:memberofperipheral="PMU" edc:cname="PMU_VBCCMD" edc:nzwidth="0x20" edc:access="-n-n------------nnnnnnnnnnnnnnnn" edc:por="00010000000000000000000000000000" edc:mclr="00010000000000000000000000000000" edc:impl="0x5000FFFF" edc:_addr="0x44013E48">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMU">
            <edc:SFRFieldDef edc:cname="VBCADDR" edc:nzwidth="0x10"/>
            <edc:AdjustPoint edc:offset="0xC"/>
            <edc:SFRFieldDef edc:cname="VBCRDY" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMU" edc:cname="PMU_VBCWDATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44013E4C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMU">
            <edc:SFRFieldDef edc:cname="VBCWDATA" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMU" edc:cname="PMU_VBCRDATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x44013E50">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMU">
            <edc:SFRFieldDef edc:cname="VBCRDATA" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMU" edc:cname="WCMCFG" edc:nzwidth="0x20" edc:access="-------------------------nnn-nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x77" edc:_addr="0x44013E54">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMU">
            <edc:SFRFieldDef edc:cname="WCM1CFG" edc:nzwidth="0x3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="WCM2CFG" edc:nzwidth="0x3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMU" edc:cname="PMUIENB" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x44013E58">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMU">
            <edc:SFRFieldDef edc:cname="ADCBORIEN" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BUCKBORIEN" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SCMPIEN" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WCMIAIEN" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="VBCIAIEN" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMU" edc:cname="PMUISTAT" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x44013E5C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMU">
            <edc:SFRFieldDef edc:cname="ADCBORINT" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BUCKBORINT" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SCMPINT" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WCMIAINT" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="VBCIAINT" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMU" edc:cname="WCMSIZ" edc:nzwidth="0x20" edc:access="----------------------nn--------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x300" edc:_addr="0x44013E60">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMU">
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="SRAM1_SIZ" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NO_SRAM_RETENTION" edc:desc="FlexRAM is completely powered OFF" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="16K_SRAM" edc:desc="16K Flex RAM available in retention" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="32K_SRAM" edc:desc="32K Flex RAM available in retention" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RESERVED" edc:desc="Reserved" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:SFRDataSector>
    <edc:BootConfigSector edc:regionid="MCROM_ROM" edc:beginaddr="0x45000000" edc:endaddr="0x45002000" edc:rw="r"/>
    <edc:SFRDataSector edc:regionid="SYSTEM_CM4F_SYSTEM_REGISTERS" edc:beginaddr="0xE0000000" edc:endaddr="0xE0042000" edc:rw="rw">
      <edc:SFRDef ltx:memberofperipheral="ITM" edc:cname="PORT0" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0xE0000000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ITM">
            <edc:SFRFieldDef edc:cname="PORT" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ITM" edc:cname="PORT1" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0xE0000004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ITM">
            <edc:SFRFieldDef edc:cname="PORT" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ITM" edc:cname="PORT2" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0xE0000008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ITM">
            <edc:SFRFieldDef edc:cname="PORT" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ITM" edc:cname="PORT3" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0xE000000C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ITM">
            <edc:SFRFieldDef edc:cname="PORT" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ITM" edc:cname="PORT4" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0xE0000010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ITM">
            <edc:SFRFieldDef edc:cname="PORT" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ITM" edc:cname="PORT5" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0xE0000014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ITM">
            <edc:SFRFieldDef edc:cname="PORT" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ITM" edc:cname="PORT6" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0xE0000018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ITM">
            <edc:SFRFieldDef edc:cname="PORT" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ITM" edc:cname="PORT7" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0xE000001C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ITM">
            <edc:SFRFieldDef edc:cname="PORT" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ITM" edc:cname="PORT8" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0xE0000020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ITM">
            <edc:SFRFieldDef edc:cname="PORT" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ITM" edc:cname="PORT9" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0xE0000024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ITM">
            <edc:SFRFieldDef edc:cname="PORT" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ITM" edc:cname="PORT10" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0xE0000028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ITM">
            <edc:SFRFieldDef edc:cname="PORT" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ITM" edc:cname="PORT11" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0xE000002C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ITM">
            <edc:SFRFieldDef edc:cname="PORT" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ITM" edc:cname="PORT12" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0xE0000030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ITM">
            <edc:SFRFieldDef edc:cname="PORT" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ITM" edc:cname="PORT13" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0xE0000034">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ITM">
            <edc:SFRFieldDef edc:cname="PORT" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ITM" edc:cname="PORT14" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0xE0000038">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ITM">
            <edc:SFRFieldDef edc:cname="PORT" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ITM" edc:cname="PORT15" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0xE000003C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ITM">
            <edc:SFRFieldDef edc:cname="PORT" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ITM" edc:cname="PORT16" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0xE0000040">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ITM">
            <edc:SFRFieldDef edc:cname="PORT" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ITM" edc:cname="PORT17" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0xE0000044">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ITM">
            <edc:SFRFieldDef edc:cname="PORT" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ITM" edc:cname="PORT18" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0xE0000048">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ITM">
            <edc:SFRFieldDef edc:cname="PORT" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ITM" edc:cname="PORT19" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0xE000004C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ITM">
            <edc:SFRFieldDef edc:cname="PORT" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ITM" edc:cname="PORT20" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0xE0000050">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ITM">
            <edc:SFRFieldDef edc:cname="PORT" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ITM" edc:cname="PORT21" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0xE0000054">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ITM">
            <edc:SFRFieldDef edc:cname="PORT" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ITM" edc:cname="PORT22" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0xE0000058">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ITM">
            <edc:SFRFieldDef edc:cname="PORT" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ITM" edc:cname="PORT23" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0xE000005C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ITM">
            <edc:SFRFieldDef edc:cname="PORT" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ITM" edc:cname="PORT24" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0xE0000060">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ITM">
            <edc:SFRFieldDef edc:cname="PORT" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ITM" edc:cname="PORT25" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0xE0000064">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ITM">
            <edc:SFRFieldDef edc:cname="PORT" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ITM" edc:cname="PORT26" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0xE0000068">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ITM">
            <edc:SFRFieldDef edc:cname="PORT" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ITM" edc:cname="PORT27" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0xE000006C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ITM">
            <edc:SFRFieldDef edc:cname="PORT" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ITM" edc:cname="PORT28" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0xE0000070">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ITM">
            <edc:SFRFieldDef edc:cname="PORT" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ITM" edc:cname="PORT29" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0xE0000074">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ITM">
            <edc:SFRFieldDef edc:cname="PORT" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ITM" edc:cname="PORT30" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0xE0000078">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ITM">
            <edc:SFRFieldDef edc:cname="PORT" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ITM" edc:cname="PORT31" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0xE000007C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ITM">
            <edc:SFRFieldDef edc:cname="PORT" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xD80" edc:_addr="0xE0000080"/>
      <edc:SFRDef ltx:memberofperipheral="ITM" edc:cname="TER" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE0000E00"/>
      <edc:AdjustPoint edc:offset="0x3C" edc:_addr="0xE0000E04"/>
      <edc:SFRDef ltx:memberofperipheral="ITM" edc:cname="TPR" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:impl="0xF" edc:_addr="0xE0000E40">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ITM">
            <edc:SFRFieldDef edc:cname="PRIVMASK" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3C" edc:_addr="0xE0000E44"/>
      <edc:SFRDef ltx:memberofperipheral="ITM" edc:cname="TCR" edc:nzwidth="0x20" edc:access="--------nnnnnnnn----nnnn--nnnnnn" edc:impl="0xFF0F3F" edc:_addr="0xE0000E80">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ITM">
            <edc:SFRFieldDef edc:cname="ITMENA" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TSENA" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SYNCENA" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DWTENA" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWOENA" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="STALLENA" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TSPrescale" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="GTSFREQ" edc:nzwidth="0x2"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TraceBusID" edc:nzwidth="0x7"/>
            <edc:SFRFieldDef edc:cname="BUSY" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x74" edc:_addr="0xE0000E84"/>
      <edc:SFRDef ltx:memberofperipheral="ITM" edc:cname="IWR" edc:nzwidth="0x20" edc:access="-------------------------------w" edc:impl="0x1" edc:_addr="0xE0000EF8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ITM">
            <edc:SFRFieldDef edc:cname="ATVALIDM" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ITM" edc:cname="IRR" edc:nzwidth="0x20" edc:access="-------------------------------r" edc:impl="0x1" edc:_addr="0xE0000EFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ITM">
            <edc:SFRFieldDef edc:cname="ATREADYM" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xD0" edc:_addr="0xE0000F00"/>
      <edc:SFRDef ltx:memberofperipheral="ITM" edc:cname="PID4" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000100" edc:mclr="00000000000000000000000000000100" edc:_addr="0xE0000FD0"/>
      <edc:SFRDef ltx:memberofperipheral="ITM" edc:cname="PID5" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0xE0000FD4"/>
      <edc:SFRDef ltx:memberofperipheral="ITM" edc:cname="PID6" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0xE0000FD8"/>
      <edc:SFRDef ltx:memberofperipheral="ITM" edc:cname="PID7" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0xE0000FDC"/>
      <edc:SFRDef ltx:memberofperipheral="ITM" edc:cname="PID0" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000001" edc:mclr="00000000000000000000000000000001" edc:_addr="0xE0000FE0"/>
      <edc:SFRDef ltx:memberofperipheral="ITM" edc:cname="PID1" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000010110000" edc:mclr="00000000000000000000000010110000" edc:_addr="0xE0000FE4"/>
      <edc:SFRDef ltx:memberofperipheral="ITM" edc:cname="PID2" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000111011" edc:mclr="00000000000000000000000000111011" edc:_addr="0xE0000FE8"/>
      <edc:SFRDef ltx:memberofperipheral="ITM" edc:cname="PID3" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0xE0000FEC"/>
      <edc:SFRDef ltx:memberofperipheral="ITM" edc:cname="CID0" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000001101" edc:mclr="00000000000000000000000000001101" edc:_addr="0xE0000FF0"/>
      <edc:SFRDef ltx:memberofperipheral="ITM" edc:cname="CID1" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000011100000" edc:mclr="00000000000000000000000011100000" edc:_addr="0xE0000FF4"/>
      <edc:SFRDef ltx:memberofperipheral="ITM" edc:cname="CID2" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000101" edc:mclr="00000000000000000000000000000101" edc:_addr="0xE0000FF8"/>
      <edc:SFRDef ltx:memberofperipheral="ITM" edc:cname="CID3" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000010110001" edc:mclr="00000000000000000000000010110001" edc:_addr="0xE0000FFC"/>
      <edc:SFRDef ltx:memberofperipheral="DWT" edc:cname="CTRL" edc:nzwidth="0x20" edc:access="nnnnnnnn-nnnnnnn---nnnnnnnnnnnnn" edc:impl="0xFF7F1FFF" edc:_addr="0xE0001000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWT">
            <edc:SFRFieldDef edc:cname="CYCCNTENA" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="POSTPRESET" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="POSTINIT" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CYCTAP" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SYNCTAP" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="PCSAMPLENA" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="EXCTRCENA" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPIEVTENA" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EXCEVTENA" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SLEEPEVTENA" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LSUEVTENA" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FOLDEVTENA" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CYCEVTENA" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NOPRFCNT" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NOCYCCNT" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NOEXTTRIG" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NOTRCPKT" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NUMCOMP" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DWT" edc:cname="CYCCNT" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE0001004"/>
      <edc:SFRDef ltx:memberofperipheral="DWT" edc:cname="CPICNT" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:impl="0xFF" edc:_addr="0xE0001008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWT">
            <edc:SFRFieldDef edc:cname="CPICNT" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DWT" edc:cname="EXCCNT" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:impl="0xFF" edc:_addr="0xE000100C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWT">
            <edc:SFRFieldDef edc:cname="EXCCNT" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DWT" edc:cname="SLEEPCNT" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:impl="0xFF" edc:_addr="0xE0001010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWT">
            <edc:SFRFieldDef edc:cname="SLEEPCNT" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DWT" edc:cname="LSUCNT" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:impl="0xFF" edc:_addr="0xE0001014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWT">
            <edc:SFRFieldDef edc:cname="LSUCNT" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DWT" edc:cname="FOLDCNT" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:impl="0xFF" edc:_addr="0xE0001018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWT">
            <edc:SFRFieldDef edc:cname="FOLDCNT" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DWT" edc:cname="PCSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0xE000101C"/>
      <edc:SFRDef ltx:memberofperipheral="DWT" edc:cname="COMP0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE0001020"/>
      <edc:SFRDef ltx:memberofperipheral="DWT" edc:cname="MASK0" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:impl="0x1F" edc:_addr="0xE0001024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWT">
            <edc:SFRFieldDef edc:cname="MASK" edc:nzwidth="0x5"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DWT" edc:cname="FUNCTION0" edc:nzwidth="0x20" edc:access="-------n----nnnnnnnnnnnnn-n-nnnn" edc:impl="0x10FFFAF" edc:_addr="0xE0001028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWT">
            <edc:SFRFieldDef edc:cname="FUNCTION" edc:nzwidth="0x4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="EMITRANGE" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CYCMATCH" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DATAVMATCH" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LNK1ENA" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DATAVSIZE" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="DATAVADDR0" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="DATAVADDR1" edc:nzwidth="0x4"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="MATCHED" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0xE000102C"/>
      <edc:SFRDef ltx:memberofperipheral="DWT" edc:cname="COMP1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE0001030"/>
      <edc:SFRDef ltx:memberofperipheral="DWT" edc:cname="MASK1" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:impl="0x1F" edc:_addr="0xE0001034">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWT">
            <edc:SFRFieldDef edc:cname="MASK" edc:nzwidth="0x5"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DWT" edc:cname="FUNCTION1" edc:nzwidth="0x20" edc:access="-------n----nnnnnnnnnnnnn-n-nnnn" edc:impl="0x10FFFAF" edc:_addr="0xE0001038">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWT">
            <edc:SFRFieldDef edc:cname="FUNCTION" edc:nzwidth="0x4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="EMITRANGE" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CYCMATCH" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DATAVMATCH" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LNK1ENA" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DATAVSIZE" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="DATAVADDR0" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="DATAVADDR1" edc:nzwidth="0x4"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="MATCHED" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0xE000103C"/>
      <edc:SFRDef ltx:memberofperipheral="DWT" edc:cname="COMP2" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE0001040"/>
      <edc:SFRDef ltx:memberofperipheral="DWT" edc:cname="MASK2" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:impl="0x1F" edc:_addr="0xE0001044">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWT">
            <edc:SFRFieldDef edc:cname="MASK" edc:nzwidth="0x5"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DWT" edc:cname="FUNCTION2" edc:nzwidth="0x20" edc:access="-------n----nnnnnnnnnnnnn-n-nnnn" edc:impl="0x10FFFAF" edc:_addr="0xE0001048">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWT">
            <edc:SFRFieldDef edc:cname="FUNCTION" edc:nzwidth="0x4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="EMITRANGE" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CYCMATCH" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DATAVMATCH" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LNK1ENA" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DATAVSIZE" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="DATAVADDR0" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="DATAVADDR1" edc:nzwidth="0x4"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="MATCHED" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0xE000104C"/>
      <edc:SFRDef ltx:memberofperipheral="DWT" edc:cname="COMP3" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE0001050"/>
      <edc:SFRDef ltx:memberofperipheral="DWT" edc:cname="MASK3" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:impl="0x1F" edc:_addr="0xE0001054">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWT">
            <edc:SFRFieldDef edc:cname="MASK" edc:nzwidth="0x5"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DWT" edc:cname="FUNCTION3" edc:nzwidth="0x20" edc:access="-------n----nnnnnnnnnnnnn-n-nnnn" edc:impl="0x10FFFAF" edc:_addr="0xE0001058">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWT">
            <edc:SFRFieldDef edc:cname="FUNCTION" edc:nzwidth="0x4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="EMITRANGE" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CYCMATCH" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DATAVMATCH" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LNK1ENA" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DATAVSIZE" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="DATAVADDR0" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="DATAVADDR1" edc:nzwidth="0x4"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="MATCHED" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xCFA8" edc:_addr="0xE000105C"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="ICTR" edc:impl="0xF" edc:access="----------------------------rrrr" edc:por="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="Interrupt Controller Type Register" edc:_addr="0xE000E004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0">
            <edc:SFRFieldDef edc:nzwidth="0x4" edc:cname="INTLINESNUM" edc:desc="Number of interrupt lines supported by NVIC in granularities of 32."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SystemControl" edc:cname="ACTLR" edc:nzwidth="0x20" edc:access="----------------------nn-----nnn" edc:impl="0x307" edc:_addr="0xE000E008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SystemControl">
            <edc:SFRFieldDef edc:cname="DISMCYCINT" edc:nzwidth="0x1" edc:desc="Disable interruption of LDM/STM instructions"/>
            <edc:SFRFieldDef edc:cname="DISDEFWBUF" edc:nzwidth="0x1" edc:desc="Disable wruite buffer use during default memory map accesses"/>
            <edc:SFRFieldDef edc:cname="DISFOLD" edc:nzwidth="0x1" edc:desc="Disable IT folding"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="DISFPCA" edc:nzwidth="0x1" edc:desc="Disable automatic update of CONTROL.FPCA"/>
            <edc:SFRFieldDef edc:cname="DISOOFP" edc:nzwidth="0x1" edc:desc="Disable out-of-order FP instructions"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0xE000E00C"/>
      <edc:SFRDef ltx:memberofperipheral="SysTick" edc:cname="CSR" edc:nzwidth="0x20" edc:access="---------------n-------------nnn" edc:por="00000000000000000000000000000100" edc:mclr="00000000000000000000000000000100" edc:impl="0x10007" edc:_addr="0xE000E010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SysTick">
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SysTick Counter Enable">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="Counter disabled" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Counter enabled" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TICKINT" edc:nzwidth="0x1" edc:desc="SysTick Exception Request Enable">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="Counting down to 0 does not assert the SysTick exception request" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Counting down to 0 asserts the SysTick exception request" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CLKSOURCE" edc:nzwidth="0x1" edc:desc="Clock Source 0=external, 1=processor">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="External clock" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Processor clock" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0xD"/>
            <edc:SFRFieldDef edc:cname="COUNTFLAG" edc:nzwidth="0x1" edc:desc="Timer counted to 0 since last read of register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SysTick" edc:cname="RVR" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:impl="0xFFFFFF" edc:_addr="0xE000E014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SysTick">
            <edc:SFRFieldDef edc:cname="RELOAD" edc:nzwidth="0x18" edc:desc="Value to load into the SysTick Current Value Register when the counter reaches 0"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SysTick" edc:cname="CVR" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:impl="0xFFFFFF" edc:_addr="0xE000E018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SysTick">
            <edc:SFRFieldDef edc:cname="CURRENT" edc:nzwidth="0x18" edc:desc="Current value at the time the register is accessed"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SysTick" edc:cname="CALIB" edc:nzwidth="0x20" edc:access="rr------rrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC0FFFFFF" edc:_addr="0xE000E01C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SysTick">
            <edc:SFRFieldDef edc:cname="TENMS" edc:nzwidth="0x18" edc:desc="Reload value to use for 10ms timing"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="SKEW" edc:nzwidth="0x1" edc:desc="TENMS is rounded from non-integer ratio">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="10ms calibration value is exact" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="10ms calibration value is inexact, because of the clock frequency" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NOREF" edc:nzwidth="0x1" edc:desc="No Separate Reference Clock">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="The reference clock is provided" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="The reference clock is not provided" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xE0" edc:_addr="0xE000E020"/>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="ISER0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0xE000E100">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="SETENA" edc:nzwidth="0x20" edc:desc="Interrupt set enable bits"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="ISER1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0xE000E104">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="SETENA" edc:nzwidth="0x20" edc:desc="Interrupt set enable bits"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x78" edc:_addr="0xE000E108"/>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="ICER0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0xE000E180">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="CLRENA" edc:nzwidth="0x20" edc:desc="Interrupt clear-enable bits"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="ICER1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0xE000E184">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="CLRENA" edc:nzwidth="0x20" edc:desc="Interrupt clear-enable bits"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x78" edc:_addr="0xE000E188"/>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="ISPR0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0xE000E200">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="SETPEND" edc:nzwidth="0x20" edc:desc="Interrupt set-pending bits"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="ISPR1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0xE000E204">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="SETPEND" edc:nzwidth="0x20" edc:desc="Interrupt set-pending bits"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x78" edc:_addr="0xE000E208"/>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="ICPR0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0xE000E280">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="CLRPEND" edc:nzwidth="0x20" edc:desc="Interrupt clear-pending bits"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="ICPR1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0xE000E284">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="CLRPEND" edc:nzwidth="0x20" edc:desc="Interrupt clear-pending bits"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x78" edc:_addr="0xE000E288"/>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IABR0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0xE000E300">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="ACTIVE" edc:nzwidth="0x20" edc:desc="Interrupt active bits"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IABR1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0xE000E304">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="ACTIVE" edc:nzwidth="0x20" edc:desc="Interrupt active bits"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xF8" edc:_addr="0xE000E308"/>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IP0" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0xE000E400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:nzwidth="0x3" edc:desc="Priority of interrupt n"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IP1" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0xE000E401">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:nzwidth="0x3" edc:desc="Priority of interrupt n"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IP2" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0xE000E402">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:nzwidth="0x3" edc:desc="Priority of interrupt n"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IP3" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0xE000E403">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:nzwidth="0x3" edc:desc="Priority of interrupt n"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IP4" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0xE000E404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:nzwidth="0x3" edc:desc="Priority of interrupt n"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IP5" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0xE000E405">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:nzwidth="0x3" edc:desc="Priority of interrupt n"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IP6" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0xE000E406">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:nzwidth="0x3" edc:desc="Priority of interrupt n"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IP7" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0xE000E407">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:nzwidth="0x3" edc:desc="Priority of interrupt n"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IP8" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0xE000E408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:nzwidth="0x3" edc:desc="Priority of interrupt n"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IP9" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0xE000E409">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:nzwidth="0x3" edc:desc="Priority of interrupt n"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IP10" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0xE000E40A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:nzwidth="0x3" edc:desc="Priority of interrupt n"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IP11" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0xE000E40B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:nzwidth="0x3" edc:desc="Priority of interrupt n"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IP12" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0xE000E40C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:nzwidth="0x3" edc:desc="Priority of interrupt n"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IP13" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0xE000E40D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:nzwidth="0x3" edc:desc="Priority of interrupt n"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IP14" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0xE000E40E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:nzwidth="0x3" edc:desc="Priority of interrupt n"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IP15" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0xE000E40F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:nzwidth="0x3" edc:desc="Priority of interrupt n"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IP16" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0xE000E410">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:nzwidth="0x3" edc:desc="Priority of interrupt n"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IP17" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0xE000E411">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:nzwidth="0x3" edc:desc="Priority of interrupt n"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IP18" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0xE000E412">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:nzwidth="0x3" edc:desc="Priority of interrupt n"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IP19" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0xE000E413">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:nzwidth="0x3" edc:desc="Priority of interrupt n"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IP20" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0xE000E414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:nzwidth="0x3" edc:desc="Priority of interrupt n"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IP21" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0xE000E415">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:nzwidth="0x3" edc:desc="Priority of interrupt n"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IP22" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0xE000E416">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:nzwidth="0x3" edc:desc="Priority of interrupt n"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IP23" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0xE000E417">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:nzwidth="0x3" edc:desc="Priority of interrupt n"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IP24" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0xE000E418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:nzwidth="0x3" edc:desc="Priority of interrupt n"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IP25" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0xE000E419">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:nzwidth="0x3" edc:desc="Priority of interrupt n"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IP26" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0xE000E41A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:nzwidth="0x3" edc:desc="Priority of interrupt n"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IP27" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0xE000E41B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:nzwidth="0x3" edc:desc="Priority of interrupt n"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IP28" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0xE000E41C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:nzwidth="0x3" edc:desc="Priority of interrupt n"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IP29" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0xE000E41D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:nzwidth="0x3" edc:desc="Priority of interrupt n"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IP30" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0xE000E41E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:nzwidth="0x3" edc:desc="Priority of interrupt n"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IP31" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0xE000E41F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:nzwidth="0x3" edc:desc="Priority of interrupt n"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IP32" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0xE000E420">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:nzwidth="0x3" edc:desc="Priority of interrupt n"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IP33" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0xE000E421">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:nzwidth="0x3" edc:desc="Priority of interrupt n"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IP34" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0xE000E422">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:nzwidth="0x3" edc:desc="Priority of interrupt n"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IP35" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0xE000E423">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:nzwidth="0x3" edc:desc="Priority of interrupt n"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IP36" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0xE000E424">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:nzwidth="0x3" edc:desc="Priority of interrupt n"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IP37" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0xE000E425">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:nzwidth="0x3" edc:desc="Priority of interrupt n"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IP38" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0xE000E426">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:nzwidth="0x3" edc:desc="Priority of interrupt n"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IP39" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0xE000E427">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:nzwidth="0x3" edc:desc="Priority of interrupt n"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IP40" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0xE000E428">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:nzwidth="0x3" edc:desc="Priority of interrupt n"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IP41" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0xE000E429">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:nzwidth="0x3" edc:desc="Priority of interrupt n"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IP42" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0xE000E42A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:nzwidth="0x3" edc:desc="Priority of interrupt n"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8D5" edc:_addr="0xE000E42B"/>
      <edc:SFRDef ltx:memberofperipheral="SystemControl" edc:cname="CPUID" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="01000001000011111100001001000000" edc:mclr="01000001000011111100001001000000" edc:_addr="0xE000ED00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SystemControl">
            <edc:SFRFieldDef edc:cname="REVISION" edc:nzwidth="0x4" edc:desc="Processor revision number"/>
            <edc:SFRFieldDef edc:cname="PARTNO" edc:nzwidth="0xC" edc:desc="Process Part Number, 0xC24=Cortex-M4"/>
            <edc:SFRFieldDef edc:cname="CONSTANT" edc:nzwidth="0x4" edc:desc="Constant"/>
            <edc:SFRFieldDef edc:cname="VARIANT" edc:nzwidth="0x4" edc:desc="Variant number"/>
            <edc:SFRFieldDef edc:cname="IMPLEMENTER" edc:nzwidth="0x8" edc:desc="Implementer code, 0x41=ARM"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SystemControl" edc:cname="ICSR" edc:nzwidth="0x20" edc:access="n--nnnn-nn----nnnnnnn--nnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x9EC3F9FF" edc:_addr="0xE000ED04">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SystemControl">
            <edc:SFRFieldDef edc:cname="VECTACTIVE" edc:nzwidth="0x9" edc:desc="Active exception number"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RETTOBASE" edc:nzwidth="0x1" edc:desc="No preempted active exceptions to execute"/>
            <edc:SFRFieldDef edc:cname="VECTPENDING" edc:nzwidth="0x6" edc:desc="Exception number of the highest priority pending enabled exception"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ISRPENDING" edc:nzwidth="0x1" edc:desc="Interrupt pending flag"/>
            <edc:SFRFieldDef edc:cname="ISRPREEMPT" edc:nzwidth="0x1" edc:desc="Debug only"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PENDSTCLR" edc:nzwidth="0x1" edc:desc="SysTick clear-pending bit">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="No effect" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Removes the pending state from the SysTick exception" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PENDSTSET" edc:nzwidth="0x1" edc:desc="SysTick set-pending bit">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="Write: no effect; read: SysTick exception is not pending" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Write: changes SysTick exception state to pending; read: SysTick exception is pending" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PENDSVCLR" edc:nzwidth="0x1" edc:desc="PendSV clear-pending bit">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="No effect" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Removes the pending state from the PendSV exception" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PENDSVSET" edc:nzwidth="0x1" edc:desc="PendSV set-pending bit">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="Write: no effect; read: PendSV exception is not pending" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Write: changes PendSV exception state to pending; read: PendSV exception is pending" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="NMIPENDSET" edc:nzwidth="0x1" edc:desc="NMI set-pending bit">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="Write: no effect; read: NMI exception is not pending" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Write: changes NMI exception state to pending; read: NMI exception is pending" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SystemControl" edc:cname="VTOR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnn-------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF80" edc:_addr="0xE000ED08">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SystemControl">
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="TBLOFF" edc:nzwidth="0x19" edc:desc="Vector table base offset"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SystemControl" edc:cname="AIRCR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnn----nnn-----nnn" edc:por="11111010000001010000000000000000" edc:mclr="11111010000001010000000000000000" edc:impl="0xFFFF8707" edc:_addr="0xE000ED0C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SystemControl">
            <edc:SFRFieldDef edc:cname="VECTRESET" edc:nzwidth="0x1" edc:desc="Must write 0"/>
            <edc:SFRFieldDef edc:cname="VECTCLRACTIVE" edc:nzwidth="0x1" edc:desc="Must write 0"/>
            <edc:SFRFieldDef edc:cname="SYSRESETREQ" edc:nzwidth="0x1" edc:desc="System Reset Request">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="No system reset request" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Asserts a signal to the outer system that requests a reset" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="PRIGROUP" edc:nzwidth="0x3" edc:desc="Interrupt priority grouping"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ENDIANNESS" edc:nzwidth="0x1" edc:desc="Data endianness, 0=little, 1=big">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="Little-endian" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Big-endian" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="VECTKEY" edc:nzwidth="0x10" edc:desc="Register key"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SystemControl" edc:cname="SCR" edc:nzwidth="0x20" edc:access="---------------------------n-nn-" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x16" edc:_addr="0xE000ED10">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SystemControl">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SLEEPONEXIT" edc:nzwidth="0x1" edc:desc="Sleep-on-exit on handler return">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="Do not sleep when returning to Thread mode" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Enter sleep, or deep sleep, on return from an ISR" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SLEEPDEEP" edc:nzwidth="0x1" edc:desc="Deep Sleep used as low power mode">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="Sleep" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Deep sleep" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SEVONPEND" edc:nzwidth="0x1" edc:desc="Send Event on Pending bit">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="Only enabled interrupts or events can wakeup the processor, disabled interrupts are excluded" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Enabled events and all interrupts, including disabled interrupts, can wakeup the processor" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SystemControl" edc:cname="CCR" edc:nzwidth="0x20" edc:access="----------------------nn---nn-nn" edc:por="00000000000000000000001000000000" edc:mclr="00000000000000000000001000000000" edc:impl="0x31B" edc:_addr="0xE000ED14">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SystemControl">
            <edc:SFRFieldDef edc:cname="NONBASETHRDENA" edc:nzwidth="0x1" edc:desc="Indicates how processor enters Thread mode"/>
            <edc:SFRFieldDef edc:cname="USERSETMPEND" edc:nzwidth="0x1" edc:desc="Enables unprivileged software access to STIR register"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="UNALIGN_TRP" edc:nzwidth="0x1" edc:desc="Enables unaligned access traps">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="Do not trap unaligned halfword and word accesses" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Trap unaligned halfword and word accesses" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIV_0_TRP" edc:nzwidth="0x1" edc:desc="Enables divide by 0 trap"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="BFHFNMIGN" edc:nzwidth="0x1" edc:desc="Ignore LDM/STM BusFault for -1/-2 priority handlers"/>
            <edc:SFRFieldDef edc:cname="STKALIGN" edc:nzwidth="0x1" edc:desc="Indicates stack alignment on exception entry">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="4-byte aligned" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="8-byte aligned" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SystemControl" edc:cname="SHPR1" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:impl="0xFFFFFF" edc:_addr="0xE000ED18">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SystemControl">
            <edc:SFRFieldDef edc:cname="PRI_4" edc:nzwidth="0x8" edc:desc="Priority of system handler 4, MemManage"/>
            <edc:SFRFieldDef edc:cname="PRI_5" edc:nzwidth="0x8" edc:desc="Priority of system handler 5, BusFault"/>
            <edc:SFRFieldDef edc:cname="PRI_6" edc:nzwidth="0x8" edc:desc="Priority of system handler 6, UsageFault"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SystemControl" edc:cname="SHPR2" edc:nzwidth="0x20" edc:access="nnnnnnnn------------------------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF000000" edc:_addr="0xE000ED1C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SystemControl">
            <edc:AdjustPoint edc:offset="0x18"/>
            <edc:SFRFieldDef edc:cname="PRI_11" edc:nzwidth="0x8" edc:desc="Priority of system handler 11, SVCall"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SystemControl" edc:cname="SHPR3" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnn----------------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF0000" edc:_addr="0xE000ED20">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SystemControl">
            <edc:AdjustPoint edc:offset="0x10"/>
            <edc:SFRFieldDef edc:cname="PRI_14" edc:nzwidth="0x8" edc:desc="Priority of system handler 14, PendSV"/>
            <edc:SFRFieldDef edc:cname="PRI_15" edc:nzwidth="0x8" edc:desc="Priority of system handler 15, SysTick exception"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SystemControl" edc:cname="SHCSR" edc:nzwidth="0x20" edc:access="-------------nnnnnnnnn-nn---n-nn" edc:impl="0x7FD8B" edc:_addr="0xE000ED24">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SystemControl">
            <edc:SFRFieldDef edc:cname="MEMFAULTACT" edc:nzwidth="0x1" edc:desc="MemManage exception active bit"/>
            <edc:SFRFieldDef edc:cname="BUSFAULTACT" edc:nzwidth="0x1" edc:desc="BusFault exception active bit"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="USGFAULTACT" edc:nzwidth="0x1" edc:desc="UsageFault exception active bit"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SVCALLACT" edc:nzwidth="0x1" edc:desc="SVCall active bit"/>
            <edc:SFRFieldDef edc:cname="MONITORACT" edc:nzwidth="0x1" edc:desc="DebugMonitor exception active bit"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PENDSVACT" edc:nzwidth="0x1" edc:desc="PendSV exception active bit"/>
            <edc:SFRFieldDef edc:cname="SYSTICKACT" edc:nzwidth="0x1" edc:desc="SysTick exception active bit"/>
            <edc:SFRFieldDef edc:cname="USGFAULTPENDED" edc:nzwidth="0x1" edc:desc="UsageFault exception pending bit"/>
            <edc:SFRFieldDef edc:cname="MEMFAULTPENDED" edc:nzwidth="0x1" edc:desc="MemManage exception pending bit"/>
            <edc:SFRFieldDef edc:cname="BUSFAULTPENDED" edc:nzwidth="0x1" edc:desc="BusFault exception pending bit"/>
            <edc:SFRFieldDef edc:cname="SVCALLPENDED" edc:nzwidth="0x1" edc:desc="SVCall pending bit"/>
            <edc:SFRFieldDef edc:cname="MEMFAULTENA" edc:nzwidth="0x1" edc:desc="MemManage enable bit"/>
            <edc:SFRFieldDef edc:cname="BUSFAULTENA" edc:nzwidth="0x1" edc:desc="BusFault enable bit"/>
            <edc:SFRFieldDef edc:cname="USGFAULTENA" edc:nzwidth="0x1" edc:desc="UsageFault enable bit"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SystemControl" edc:cname="CFSR" edc:nzwidth="0x20" edc:access="------nn----nnnnn-nnnnnnn-nnn-nn" edc:impl="0x30FBFBB" edc:_addr="0xE000ED28">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SystemControl">
            <edc:SFRFieldDef edc:cname="IACCVIOL" edc:nzwidth="0x1" edc:desc="Instruction access violation"/>
            <edc:SFRFieldDef edc:cname="DACCVIOL" edc:nzwidth="0x1" edc:desc="Data access violation"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MUNSTKERR" edc:nzwidth="0x1" edc:desc="MemManage Fault on unstacking for exception return"/>
            <edc:SFRFieldDef edc:cname="MSTKERR" edc:nzwidth="0x1" edc:desc="MemManage Fault on stacking for exception entry"/>
            <edc:SFRFieldDef edc:cname="MLSPERR" edc:nzwidth="0x1" edc:desc="MemManager Fault occured during FP lazy state preservation"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MMARVALID" edc:nzwidth="0x1" edc:desc="MemManage Fault Address Register valid"/>
            <edc:SFRFieldDef edc:cname="IBUSERR" edc:nzwidth="0x1" edc:desc="Instruction bus error"/>
            <edc:SFRFieldDef edc:cname="PRECISERR" edc:nzwidth="0x1" edc:desc="Precise data bus error"/>
            <edc:SFRFieldDef edc:cname="IMPRECISERR" edc:nzwidth="0x1" edc:desc="Imprecise data bus error"/>
            <edc:SFRFieldDef edc:cname="UNSTKERR" edc:nzwidth="0x1" edc:desc="BusFault on unstacking for exception return"/>
            <edc:SFRFieldDef edc:cname="STKERR" edc:nzwidth="0x1" edc:desc="BusFault on stacking for exception entry"/>
            <edc:SFRFieldDef edc:cname="LSPERR" edc:nzwidth="0x1" edc:desc="BusFault occured during FP lazy state preservation"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BFARVALID" edc:nzwidth="0x1" edc:desc="BusFault Address Register valid"/>
            <edc:SFRFieldDef edc:cname="UNDEFINSTR" edc:nzwidth="0x1" edc:desc="Undefined instruction UsageFault"/>
            <edc:SFRFieldDef edc:cname="INVSTATE" edc:nzwidth="0x1" edc:desc="Invalid state UsageFault"/>
            <edc:SFRFieldDef edc:cname="INVPC" edc:nzwidth="0x1" edc:desc="Invalid PC load UsageFault"/>
            <edc:SFRFieldDef edc:cname="NOCP" edc:nzwidth="0x1" edc:desc="No coprocessor UsageFault"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="UNALIGNED" edc:nzwidth="0x1" edc:desc="Unaligned access UsageFault"/>
            <edc:SFRFieldDef edc:cname="DIVBYZERO" edc:nzwidth="0x1" edc:desc="Divide by zero UsageFault"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SystemControl" edc:cname="HFSR" edc:nzwidth="0x20" edc:access="nn----------------------------n-" edc:impl="0xC0000002" edc:_addr="0xE000ED2C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SystemControl">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="VECTTBL" edc:nzwidth="0x1" edc:desc="BusFault on a Vector Table read during exception processing"/>
            <edc:AdjustPoint edc:offset="0x1C"/>
            <edc:SFRFieldDef edc:cname="FORCED" edc:nzwidth="0x1" edc:desc="Forced Hard Fault"/>
            <edc:SFRFieldDef edc:cname="DEBUGEVT" edc:nzwidth="0x1" edc:desc="Debug: always write 0"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SystemControl" edc:cname="DFSR" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:impl="0x1F" edc:_addr="0xE000ED30">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SystemControl">
            <edc:SFRFieldDef edc:cname="HALTED" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BKPT" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DWTTRAP" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="VCATCH" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EXTERNAL" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SystemControl" edc:cname="MMFAR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE000ED34">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SystemControl">
            <edc:SFRFieldDef edc:cname="ADDRESS" edc:nzwidth="0x20" edc:desc="Address that generated the MemManage fault"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SystemControl" edc:cname="BFAR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE000ED38">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SystemControl">
            <edc:SFRFieldDef edc:cname="ADDRESS" edc:nzwidth="0x20" edc:desc="Address that generated the BusFault"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SystemControl" edc:cname="AFSR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE000ED3C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SystemControl">
            <edc:SFRFieldDef edc:cname="IMPDEF" edc:nzwidth="0x20" edc:desc="AUXFAULT input signals"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SystemControl" edc:cname="PFR0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE000ED40"/>
      <edc:SFRDef ltx:memberofperipheral="SystemControl" edc:cname="PFR1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE000ED44"/>
      <edc:SFRDef ltx:memberofperipheral="SystemControl" edc:cname="DFR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0xE000ED48"/>
      <edc:SFRDef ltx:memberofperipheral="SystemControl" edc:cname="ADR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0xE000ED4C"/>
      <edc:SFRDef ltx:memberofperipheral="SystemControl" edc:cname="MMFR0" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0xE000ED50"/>
      <edc:SFRDef ltx:memberofperipheral="SystemControl" edc:cname="MMFR1" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0xE000ED54"/>
      <edc:SFRDef ltx:memberofperipheral="SystemControl" edc:cname="MMFR2" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0xE000ED58"/>
      <edc:SFRDef ltx:memberofperipheral="SystemControl" edc:cname="MMFR3" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0xE000ED5C"/>
      <edc:SFRDef ltx:memberofperipheral="SystemControl" edc:cname="ISAR0" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0xE000ED60"/>
      <edc:SFRDef ltx:memberofperipheral="SystemControl" edc:cname="ISAR1" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0xE000ED64"/>
      <edc:SFRDef ltx:memberofperipheral="SystemControl" edc:cname="ISAR2" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0xE000ED68"/>
      <edc:SFRDef ltx:memberofperipheral="SystemControl" edc:cname="ISAR3" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0xE000ED6C"/>
      <edc:SFRDef ltx:memberofperipheral="SystemControl" edc:cname="ISAR4" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0xE000ED70"/>
      <edc:AdjustPoint edc:offset="0x14" edc:_addr="0xE000ED74"/>
      <edc:SFRDef ltx:memberofperipheral="SystemControl" edc:cname="CPACR" edc:nzwidth="0x20" edc:access="--------nnnn--------------------" edc:impl="0xF00000" edc:_addr="0xE000ED88">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SystemControl">
            <edc:AdjustPoint edc:offset="0x14"/>
            <edc:SFRFieldDef edc:cname="CP10" edc:nzwidth="0x2" edc:desc="Access privileges for coprocessor 10">
              <edc:SFRFieldSemantic edc:cname="DENIED" edc:desc="Access denied" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PRIV" edc:desc="Privileged access only" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FULL" edc:desc="Full access" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CP11" edc:nzwidth="0x2" edc:desc="Access privileges for coprocessor 11">
              <edc:SFRFieldSemantic edc:cname="DENIED" edc:desc="Access denied" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PRIV" edc:desc="Privileged access only" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FULL" edc:desc="Full access" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0xE000ED8C"/>
      <edc:SFRDef ltx:memberofperipheral="MPU" edc:cname="TYPE" edc:nzwidth="0x20" edc:access="--------rrrrrrrrrrrrrrrr-------r" edc:impl="0xFFFF01" edc:_addr="0xE000ED90">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MPU">
            <edc:SFRFieldDef edc:cname="SEPARATE" edc:nzwidth="0x1" edc:desc="Separate instruction and Data Memory MapsRegions"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DREGION" edc:nzwidth="0x8" edc:desc="Number of Data Regions"/>
            <edc:SFRFieldDef edc:cname="IREGION" edc:nzwidth="0x8" edc:desc="Number of Instruction Regions"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MPU" edc:cname="CTRL" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0xE000ED94">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MPU">
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="MPU Enable"/>
            <edc:SFRFieldDef edc:cname="HFNMIENA" edc:nzwidth="0x1" edc:desc="Enable Hard Fault and NMI handlers"/>
            <edc:SFRFieldDef edc:cname="PRIVDEFENA" edc:nzwidth="0x1" edc:desc="Enables privileged software access to default memory map"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MPU" edc:cname="RNR" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:impl="0xFF" edc:_addr="0xE000ED98">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MPU">
            <edc:SFRFieldDef edc:cname="REGION" edc:nzwidth="0x8" edc:desc="Region referenced by RBAR and RASR"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MPU" edc:cname="RBAR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE000ED9C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MPU">
            <edc:SFRFieldDef edc:cname="REGION" edc:nzwidth="0x4" edc:desc="Region number"/>
            <edc:SFRFieldDef edc:cname="VALID" edc:nzwidth="0x1" edc:desc="Region number valid"/>
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0x1B" edc:desc="Region base address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MPU" edc:cname="RASR" edc:nzwidth="0x20" edc:access="---n-nnn--nnnnnnnnnnnnnn------nn" edc:impl="0x173FFF03" edc:_addr="0xE000EDA0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MPU">
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Region Enable"/>
            <edc:SFRFieldDef edc:cname="SIZE" edc:nzwidth="0x1" edc:desc="Region Size"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="SRD" edc:nzwidth="0x8" edc:desc="Sub-region disable"/>
            <edc:SFRFieldDef edc:cname="B" edc:nzwidth="0x1" edc:desc="Bufferable bit"/>
            <edc:SFRFieldDef edc:cname="C" edc:nzwidth="0x1" edc:desc="Cacheable bit"/>
            <edc:SFRFieldDef edc:cname="S" edc:nzwidth="0x1" edc:desc="Shareable bit"/>
            <edc:SFRFieldDef edc:cname="TEX" edc:nzwidth="0x3" edc:desc="TEX bit"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="AP" edc:nzwidth="0x3" edc:desc="Access Permission"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="XN" edc:nzwidth="0x1" edc:desc="Execute Never Attribute"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MPU" edc:cname="RBAR_A1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE000EDA4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MPU">
            <edc:SFRFieldDef edc:cname="REGION" edc:nzwidth="0x4" edc:desc="Region number"/>
            <edc:SFRFieldDef edc:cname="VALID" edc:nzwidth="0x1" edc:desc="Region number valid"/>
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0x1B" edc:desc="Region base address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MPU" edc:cname="RASR_A1" edc:nzwidth="0x20" edc:access="---n-nnn--nnnnnnnnnnnnnn------nn" edc:impl="0x173FFF03" edc:_addr="0xE000EDA8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MPU">
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Region Enable"/>
            <edc:SFRFieldDef edc:cname="SIZE" edc:nzwidth="0x1" edc:desc="Region Size"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="SRD" edc:nzwidth="0x8" edc:desc="Sub-region disable"/>
            <edc:SFRFieldDef edc:cname="B" edc:nzwidth="0x1" edc:desc="Bufferable bit"/>
            <edc:SFRFieldDef edc:cname="C" edc:nzwidth="0x1" edc:desc="Cacheable bit"/>
            <edc:SFRFieldDef edc:cname="S" edc:nzwidth="0x1" edc:desc="Shareable bit"/>
            <edc:SFRFieldDef edc:cname="TEX" edc:nzwidth="0x3" edc:desc="TEX bit"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="AP" edc:nzwidth="0x3" edc:desc="Access Permission"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="XN" edc:nzwidth="0x1" edc:desc="Execute Never Attribute"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MPU" edc:cname="RBAR_A2" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE000EDAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MPU">
            <edc:SFRFieldDef edc:cname="REGION" edc:nzwidth="0x4" edc:desc="Region number"/>
            <edc:SFRFieldDef edc:cname="VALID" edc:nzwidth="0x1" edc:desc="Region number valid"/>
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0x1B" edc:desc="Region base address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MPU" edc:cname="RASR_A2" edc:nzwidth="0x20" edc:access="---n-nnn--nnnnnnnnnnnnnn------nn" edc:impl="0x173FFF03" edc:_addr="0xE000EDB0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MPU">
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Region Enable"/>
            <edc:SFRFieldDef edc:cname="SIZE" edc:nzwidth="0x1" edc:desc="Region Size"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="SRD" edc:nzwidth="0x8" edc:desc="Sub-region disable"/>
            <edc:SFRFieldDef edc:cname="B" edc:nzwidth="0x1" edc:desc="Bufferable bit"/>
            <edc:SFRFieldDef edc:cname="C" edc:nzwidth="0x1" edc:desc="Cacheable bit"/>
            <edc:SFRFieldDef edc:cname="S" edc:nzwidth="0x1" edc:desc="Shareable bit"/>
            <edc:SFRFieldDef edc:cname="TEX" edc:nzwidth="0x3" edc:desc="TEX bit"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="AP" edc:nzwidth="0x3" edc:desc="Access Permission"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="XN" edc:nzwidth="0x1" edc:desc="Execute Never Attribute"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MPU" edc:cname="RBAR_A3" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE000EDB4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MPU">
            <edc:SFRFieldDef edc:cname="REGION" edc:nzwidth="0x4" edc:desc="Region number"/>
            <edc:SFRFieldDef edc:cname="VALID" edc:nzwidth="0x1" edc:desc="Region number valid"/>
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0x1B" edc:desc="Region base address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MPU" edc:cname="RASR_A3" edc:nzwidth="0x20" edc:access="---n-nnn--nnnnnnnnnnnnnn------nn" edc:impl="0x173FFF03" edc:_addr="0xE000EDB8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MPU">
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Region Enable"/>
            <edc:SFRFieldDef edc:cname="SIZE" edc:nzwidth="0x1" edc:desc="Region Size"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="SRD" edc:nzwidth="0x8" edc:desc="Sub-region disable"/>
            <edc:SFRFieldDef edc:cname="B" edc:nzwidth="0x1" edc:desc="Bufferable bit"/>
            <edc:SFRFieldDef edc:cname="C" edc:nzwidth="0x1" edc:desc="Cacheable bit"/>
            <edc:SFRFieldDef edc:cname="S" edc:nzwidth="0x1" edc:desc="Shareable bit"/>
            <edc:SFRFieldDef edc:cname="TEX" edc:nzwidth="0x3" edc:desc="TEX bit"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="AP" edc:nzwidth="0x3" edc:desc="Access Permission"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="XN" edc:nzwidth="0x1" edc:desc="Execute Never Attribute"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x34" edc:_addr="0xE000EDBC"/>
      <edc:SFRDef ltx:memberofperipheral="CoreDebug" edc:cname="DHCSR" edc:nzwidth="0x20" edc:access="------nn----nnnn----------n-nnnn" edc:impl="0x30F002F" edc:_addr="0xE000EDF0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CoreDebug">
            <edc:SFRFieldDef edc:cname="C_DEBUGEN" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="C_HALT" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="C_STEP" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="C_MASKINTS" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="C_SNAPSTALL" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="S_REGRDY" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="S_HALT" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="S_SLEEP" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="S_LOCKUP" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="S_RETIRE_ST" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="S_RESET_ST" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CoreDebug" edc:cname="DCRSR" edc:nzwidth="0x20" edc:access="---------------w-----------wwwww" edc:impl="0x1001F" edc:_addr="0xE000EDF4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CoreDebug">
            <edc:SFRFieldDef edc:cname="REGSEL" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0xB"/>
            <edc:SFRFieldDef edc:cname="REGWnR" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CoreDebug" edc:cname="DCRDR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE000EDF8"/>
      <edc:SFRDef ltx:memberofperipheral="CoreDebug" edc:cname="DEMCR" edc:nzwidth="0x20" edc:access="-------n----nnnn-----nnnnnnn---n" edc:impl="0x10F07F1" edc:_addr="0xE000EDFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CoreDebug">
            <edc:SFRFieldDef edc:cname="VC_CORERESET" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="VC_MMERR" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="VC_NOCPERR" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="VC_CHKERR" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="VC_STATERR" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="VC_BUSERR" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="VC_INTERR" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="VC_HARDERR" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="MON_EN" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MON_PEND" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MON_STEP" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MON_REQ" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TRCENA" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x100" edc:_addr="0xE000EE00"/>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="STIR" edc:nzwidth="0x20" edc:access="-----------------------wwwwwwwww" edc:impl="0x1FF" edc:_addr="0xE000EF00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="INTID" edc:nzwidth="0x9" edc:desc="Interrupt ID to trigger"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x30" edc:_addr="0xE000EF04"/>
      <edc:SFRDef ltx:memberofperipheral="FPU" edc:cname="FPCCR" edc:nzwidth="0x20" edc:access="nn---------------------n-nnnn-nn" edc:por="11000000000000000000000000000000" edc:mclr="11000000000000000000000000000000" edc:impl="0xC000017B" edc:_addr="0xE000EF34">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FPU">
            <edc:SFRFieldDef edc:cname="LSPACT" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="THREAD" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="HFRDY" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MMRDY" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BFRDY" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MONRDY" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x15"/>
            <edc:SFRFieldDef edc:cname="LSPEN" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ASPEN" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FPU" edc:cname="FPCAR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnn---" edc:impl="0xFFFFFFF8" edc:_addr="0xE000EF38">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FPU">
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ADDRESS" edc:nzwidth="0x1D" edc:desc="Address for FP registers in exception stack frame"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FPU" edc:cname="FPDSCR" edc:nzwidth="0x20" edc:access="-----nnnnn----------------------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7C00000" edc:_addr="0xE000EF3C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FPU">
            <edc:AdjustPoint edc:offset="0x16"/>
            <edc:SFRFieldDef edc:cname="RMODE" edc:nzwidth="0x2" edc:desc="Default value for FPSCR.RMODE">
              <edc:SFRFieldSemantic edc:cname="RN" edc:desc="Round to Nearest" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RP" edc:desc="Round towards Positive Infinity" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RM" edc:desc="Round towards Negative Infinity" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RZ" edc:desc="Round towards Zero" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FZ" edc:nzwidth="0x1" edc:desc="Default value for FPSCR.FZ"/>
            <edc:SFRFieldDef edc:cname="DN" edc:nzwidth="0x1" edc:desc="Default value for FPSCR.DN"/>
            <edc:SFRFieldDef edc:cname="AHP" edc:nzwidth="0x1" edc:desc="Default value for FPSCR.AHP"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FPU" edc:cname="MVFR0" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0xE000EF40">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FPU">
            <edc:SFRFieldDef edc:cname="A_SIMD_registers" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="Single_precision" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="Double_precision" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="FP_excep_trapping" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="Divide" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="Square_root" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="Short_vectors" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="FP_rounding_modes" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FPU" edc:cname="MVFR1" edc:nzwidth="0x20" edc:access="rrrrrrrr----------------rrrrrrrr" edc:impl="0xFF0000FF" edc:_addr="0xE000EF44">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FPU">
            <edc:SFRFieldDef edc:cname="FtZ_mode" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="D_NaN_mode" edc:nzwidth="0x4"/>
            <edc:AdjustPoint edc:offset="0x10"/>
            <edc:SFRFieldDef edc:cname="FP_HPFP" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="FP_fused_MAC" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x310B8" edc:_addr="0xE000EF48"/>
      <edc:SFRDef ltx:memberofperipheral="TPI" edc:cname="SSPSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0xE0040000"/>
      <edc:SFRDef ltx:memberofperipheral="TPI" edc:cname="CSPSR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE0040004"/>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0xE0040008"/>
      <edc:SFRDef ltx:memberofperipheral="TPI" edc:cname="ACPR" edc:nzwidth="0x20" edc:access="-------------------nnnnnnnnnnnnn" edc:impl="0x1FFF" edc:_addr="0xE0040010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TPI">
            <edc:SFRFieldDef edc:cname="PRESCALER" edc:nzwidth="0xD"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xDC" edc:_addr="0xE0040014"/>
      <edc:SFRDef ltx:memberofperipheral="TPI" edc:cname="SPPR" edc:nzwidth="0x20" edc:access="------------------------------nn" edc:impl="0x3" edc:_addr="0xE00400F0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TPI">
            <edc:SFRFieldDef edc:cname="TXMODE" edc:nzwidth="0x2"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x20C" edc:_addr="0xE00400F4"/>
      <edc:SFRDef ltx:memberofperipheral="TPI" edc:cname="FFSR" edc:nzwidth="0x20" edc:access="----------------------------rrrr" edc:impl="0xF" edc:_addr="0xE0040300">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TPI">
            <edc:SFRFieldDef edc:cname="FlInProg" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FtStopped" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TCPresent" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FtNonStop" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TPI" edc:cname="FFCR" edc:nzwidth="0x20" edc:access="-----------------------n------n-" edc:impl="0x102" edc:_addr="0xE0040304">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TPI">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="EnFCont" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="TrigIn" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TPI" edc:cname="FSCR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0xE0040308"/>
      <edc:AdjustPoint edc:offset="0xBDC" edc:_addr="0xE004030C"/>
      <edc:SFRDef ltx:memberofperipheral="TPI" edc:cname="TRIGGER" edc:nzwidth="0x20" edc:access="-------------------------------r" edc:impl="0x1" edc:_addr="0xE0040EE8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TPI">
            <edc:SFRFieldDef edc:cname="TRIGGER" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TPI" edc:cname="FIFO0" edc:nzwidth="0x20" edc:access="--rrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:impl="0x3FFFFFFF" edc:_addr="0xE0040EEC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TPI">
            <edc:SFRFieldDef edc:cname="ETM0" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="ETM1" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="ETM2" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="ETM_bytecount" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="ETM_ATVALID" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ITM_bytecount" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="ITM_ATVALID" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TPI" edc:cname="ITATBCTR2" edc:nzwidth="0x20" edc:access="-------------------------------r" edc:impl="0x1" edc:_addr="0xE0040EF0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TPI">
            <edc:SFRFieldDef edc:cname="ATREADY" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0xE0040EF4"/>
      <edc:SFRDef ltx:memberofperipheral="TPI" edc:cname="ITATBCTR0" edc:nzwidth="0x20" edc:access="-------------------------------r" edc:impl="0x1" edc:_addr="0xE0040EF8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TPI">
            <edc:SFRFieldDef edc:cname="ATREADY" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TPI" edc:cname="FIFO1" edc:nzwidth="0x20" edc:access="--rrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:impl="0x3FFFFFFF" edc:_addr="0xE0040EFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TPI">
            <edc:SFRFieldDef edc:cname="ITM0" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="ITM1" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="ITM2" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="ETM_bytecount" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="ETM_ATVALID" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ITM_bytecount" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="ITM_ATVALID" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TPI" edc:cname="ITCTRL" edc:nzwidth="0x20" edc:access="-------------------------------n" edc:impl="0x1" edc:_addr="0xE0040F00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TPI">
            <edc:SFRFieldDef edc:cname="Mode" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x9C" edc:_addr="0xE0040F04"/>
      <edc:SFRDef ltx:memberofperipheral="TPI" edc:cname="CLAIMSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE0040FA0"/>
      <edc:SFRDef ltx:memberofperipheral="TPI" edc:cname="CLAIMCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE0040FA4"/>
      <edc:AdjustPoint edc:offset="0x20" edc:_addr="0xE0040FA8"/>
      <edc:SFRDef ltx:memberofperipheral="TPI" edc:cname="DEVID" edc:nzwidth="0x20" edc:access="--------------------rrrrrrr----r" edc:impl="0xFE1" edc:_addr="0xE0040FC8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TPI">
            <edc:SFRFieldDef edc:cname="NrTraceInput" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="AsynClkIn" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MinBufSz" edc:nzwidth="0x3"/>
            <edc:SFRFieldDef edc:cname="PTINVALID" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MANCVALID" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NRZVALID" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TPI" edc:cname="DEVTYPE" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:impl="0xFF" edc:_addr="0xE0040FCC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TPI">
            <edc:SFRFieldDef edc:cname="SubType" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="MajorType" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x30" edc:_addr="0xE0040FD0"/>
      <edc:SFRDef ltx:memberofperipheral="ETM" edc:cname="CR" edc:nzwidth="0x20" edc:access="---n------n---nn--n-nnnnnnnn---n" edc:por="00000000000000000000010000010001" edc:mclr="00000000000000000000010000010001" edc:impl="0x10232FF1" edc:_addr="0xE0041000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ETM">
            <edc:SFRFieldDef edc:cname="ETMPD" edc:nzwidth="0x1" edc:desc="ETM Power Down"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PORTSIZE" edc:nzwidth="0x3" edc:desc="Port Size bits 2:0"/>
            <edc:SFRFieldDef edc:cname="STALL" edc:nzwidth="0x1" edc:desc="Stall Processor"/>
            <edc:SFRFieldDef edc:cname="BROUT" edc:nzwidth="0x1" edc:desc="Branch Output"/>
            <edc:SFRFieldDef edc:cname="DBGRQ" edc:nzwidth="0x1" edc:desc="Debug Request Control"/>
            <edc:SFRFieldDef edc:cname="PROG" edc:nzwidth="0x1" edc:desc="ETM Programming"/>
            <edc:SFRFieldDef edc:cname="PORTSEL" edc:nzwidth="0x1" edc:desc="ETM Port Select"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PORTMODE2" edc:nzwidth="0x1" edc:desc="Port Mode bit 2"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PORTMODE" edc:nzwidth="0x2" edc:desc="Port Mode bits 1:0"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PORTSIZE3" edc:nzwidth="0x1" edc:desc="Port Size bit 3"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="TSEN" edc:nzwidth="0x1" edc:desc="TimeStamp Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ETM" edc:cname="CCR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="10001100100000000010000000000000" edc:mclr="10001100100000000010000000000000" edc:_addr="0xE0041004"/>
      <edc:SFRDef ltx:memberofperipheral="ETM" edc:cname="TRIGGER" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE0041008"/>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0xE004100C"/>
      <edc:SFRDef ltx:memberofperipheral="ETM" edc:cname="SR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE0041010"/>
      <edc:SFRDef ltx:memberofperipheral="ETM" edc:cname="SCR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000100000110100001001" edc:mclr="00000000000000100000110100001001" edc:_addr="0xE0041014"/>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0xE0041018"/>
      <edc:SFRDef ltx:memberofperipheral="ETM" edc:cname="TEEVR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE0041020"/>
      <edc:SFRDef ltx:memberofperipheral="ETM" edc:cname="TECR1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE0041024"/>
      <edc:SFRDef ltx:memberofperipheral="ETM" edc:cname="FFLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE0041028"/>
      <edc:AdjustPoint edc:offset="0x114" edc:_addr="0xE004102C"/>
      <edc:SFRDef ltx:memberofperipheral="ETM" edc:cname="CNTRLDVR1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE0041140"/>
      <edc:AdjustPoint edc:offset="0x9C" edc:_addr="0xE0041144"/>
      <edc:SFRDef ltx:memberofperipheral="ETM" edc:cname="SYNCFR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000010000000000" edc:mclr="00000000000000000000010000000000" edc:_addr="0xE00411E0"/>
      <edc:SFRDef ltx:memberofperipheral="ETM" edc:cname="IDR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="01000001000101001111001001010000" edc:mclr="01000001000101001111001001010000" edc:_addr="0xE00411E4"/>
      <edc:SFRDef ltx:memberofperipheral="ETM" edc:cname="CCER" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00011000010101000001100000000000" edc:mclr="00011000010101000001100000000000" edc:_addr="0xE00411E8"/>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0xE00411EC"/>
      <edc:SFRDef ltx:memberofperipheral="ETM" edc:cname="TESSEICR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE00411F0"/>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0xE00411F4"/>
      <edc:SFRDef ltx:memberofperipheral="ETM" edc:cname="TSEVT" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE00411F8"/>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0xE00411FC"/>
      <edc:SFRDef ltx:memberofperipheral="ETM" edc:cname="TRACEIDR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0xE0041200"/>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0xE0041204"/>
      <edc:SFRDef ltx:memberofperipheral="ETM" edc:cname="IDR2" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0xE0041208"/>
      <edc:AdjustPoint edc:offset="0x108" edc:_addr="0xE004120C"/>
      <edc:SFRDef ltx:memberofperipheral="ETM" edc:cname="PDSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000001" edc:mclr="00000000000000000000000000000001" edc:_addr="0xE0041314"/>
      <edc:AdjustPoint edc:offset="0xBC8" edc:_addr="0xE0041318"/>
      <edc:SFRDef ltx:memberofperipheral="ETM" edc:cname="ITMISCIN" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0xE0041EE0"/>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0xE0041EE4"/>
      <edc:SFRDef ltx:memberofperipheral="ETM" edc:cname="ITTRIGOUT" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0xE0041EE8"/>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0xE0041EEC"/>
      <edc:SFRDef ltx:memberofperipheral="ETM" edc:cname="ITATBCTR2" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0xE0041EF0"/>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0xE0041EF4"/>
      <edc:SFRDef ltx:memberofperipheral="ETM" edc:cname="ITATBCTR0" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0xE0041EF8"/>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0xE0041EFC"/>
      <edc:SFRDef ltx:memberofperipheral="ETM" edc:cname="ITCTRL" edc:nzwidth="0x20" edc:access="-------------------------------n" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1" edc:_addr="0xE0041F00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ETM">
            <edc:SFRFieldDef edc:cname="INTEGRATION" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x9C" edc:_addr="0xE0041F04"/>
      <edc:SFRDef ltx:memberofperipheral="ETM" edc:cname="CLAIMSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE0041FA0"/>
      <edc:SFRDef ltx:memberofperipheral="ETM" edc:cname="CLAIMCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE0041FA4"/>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0xE0041FA8"/>
      <edc:SFRDef ltx:memberofperipheral="ETM" edc:cname="LAR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0xE0041FB0"/>
      <edc:SFRDef ltx:memberofperipheral="ETM" edc:cname="LSR" edc:nzwidth="0x20" edc:access="-----------------------------rrr" edc:impl="0x7" edc:_addr="0xE0041FB4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ETM">
            <edc:SFRFieldDef edc:cname="Present" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="Access" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ByteAcc" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ETM" edc:cname="AUTHSTATUS" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0xE0041FB8"/>
      <edc:AdjustPoint edc:offset="0x10" edc:_addr="0xE0041FBC"/>
      <edc:SFRDef ltx:memberofperipheral="ETM" edc:cname="DEVTYPE" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000010011" edc:mclr="00000000000000000000000000010011" edc:_addr="0xE0041FCC"/>
      <edc:SFRDef ltx:memberofperipheral="ETM" edc:cname="PIDR4" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000100" edc:mclr="00000000000000000000000000000100" edc:_addr="0xE0041FD0"/>
      <edc:SFRDef ltx:memberofperipheral="ETM" edc:cname="PIDR5" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0xE0041FD4"/>
      <edc:SFRDef ltx:memberofperipheral="ETM" edc:cname="PIDR6" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0xE0041FD8"/>
      <edc:SFRDef ltx:memberofperipheral="ETM" edc:cname="PIDR7" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0xE0041FDC"/>
      <edc:SFRDef ltx:memberofperipheral="ETM" edc:cname="PIDR0" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000100101" edc:mclr="00000000000000000000000000100101" edc:_addr="0xE0041FE0"/>
      <edc:SFRDef ltx:memberofperipheral="ETM" edc:cname="PIDR1" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000010111001" edc:mclr="00000000000000000000000010111001" edc:_addr="0xE0041FE4"/>
      <edc:SFRDef ltx:memberofperipheral="ETM" edc:cname="PIDR2" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000001011" edc:mclr="00000000000000000000000000001011" edc:_addr="0xE0041FE8"/>
      <edc:SFRDef ltx:memberofperipheral="ETM" edc:cname="PIDR3" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0xE0041FEC"/>
      <edc:SFRDef ltx:memberofperipheral="ETM" edc:cname="CIDR0" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000001101" edc:mclr="00000000000000000000000000001101" edc:_addr="0xE0041FF0"/>
      <edc:SFRDef ltx:memberofperipheral="ETM" edc:cname="CIDR1" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000010010000" edc:mclr="00000000000000000000000010010000" edc:_addr="0xE0041FF4"/>
      <edc:SFRDef ltx:memberofperipheral="ETM" edc:cname="CIDR2" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000101" edc:mclr="00000000000000000000000000000101" edc:_addr="0xE0041FF8"/>
      <edc:SFRDef ltx:memberofperipheral="ETM" edc:cname="CIDR3" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000010110001" edc:mclr="00000000000000000000000010110001" edc:_addr="0xE0041FFC"/>
    </edc:SFRDataSector>
    <edc:DeviceIDSector edc:regionid="devid" edc:beginaddr="0x41000018" edc:endaddr="0x4100001C" edc:value="0x9E03" edc:mask="0xFFFFFFF"/>
    <edc:RegisterMap edc:id="RTC/MODE0">
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="CTRLA" edc:nzwidth="0x10" edc:access="nnn-nnnnn---nnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xEF8F" edc:addr="0x42010000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x2" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="COUNT32" edc:desc="Mode 0: 32-bit Counter" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="COUNT16" edc:desc="Mode 1: 16-bit Counter" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLOCK" edc:desc="Mode 2: Clock/Calendar" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="MATCHCLR" edc:nzwidth="0x1" edc:desc="Clear on Match"/>
            <edc:SFRFieldDef edc:cname="PRESCALER" edc:nzwidth="0x4" edc:desc="Prescaler">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="CLK_RTC_CNT = GCLK_RTC/1" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="CLK_RTC_CNT = GCLK_RTC/1" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="CLK_RTC_CNT = GCLK_RTC/2" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="CLK_RTC_CNT = GCLK_RTC/4" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="CLK_RTC_CNT = GCLK_RTC/8" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="CLK_RTC_CNT = GCLK_RTC/16" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="CLK_RTC_CNT = GCLK_RTC/32" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="CLK_RTC_CNT = GCLK_RTC/64" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="CLK_RTC_CNT = GCLK_RTC/128" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="CLK_RTC_CNT = GCLK_RTC/256" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="DIV512" edc:desc="CLK_RTC_CNT = GCLK_RTC/512" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="CLK_RTC_CNT = GCLK_RTC/1024" edc:when="(field &amp; 0xF) == 0x0B"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BKTRST" edc:nzwidth="0x1" edc:desc="BKUP Registers Reset On Tamper Enable"/>
            <edc:SFRFieldDef edc:cname="GPTRST" edc:nzwidth="0x1" edc:desc="GP Registers Reset On Tamper Enable"/>
            <edc:SFRFieldDef edc:cname="COUNTSYNC" edc:nzwidth="0x1" edc:desc="Count Read Synchronization Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="CTRLB" edc:nzwidth="0x10" edc:access="-nnn-nnnnnnn--nn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x77F3" edc:addr="0x42010002">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="GP0EN" edc:nzwidth="0x1" edc:desc="General Purpose 0 Enable"/>
            <edc:SFRFieldDef edc:cname="GP2EN" edc:nzwidth="0x1" edc:desc="General Purpose 2 Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DEBMAJ" edc:nzwidth="0x1" edc:desc="Debouncer Majority Enable"/>
            <edc:SFRFieldDef edc:cname="DEBASYNC" edc:nzwidth="0x1" edc:desc="Debouncer Asynchronous Enable"/>
            <edc:SFRFieldDef edc:cname="RTCOUT" edc:nzwidth="0x1" edc:desc="RTC Output Enable"/>
            <edc:SFRFieldDef edc:cname="DMAEN" edc:nzwidth="0x1" edc:desc="DMA Enable"/>
            <edc:SFRFieldDef edc:cname="DEBF" edc:nzwidth="0x3" edc:desc="Debounce Frequency">
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="CLK_RTC_DEB = CLK_RTC/2" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="CLK_RTC_DEB = CLK_RTC/4" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="CLK_RTC_DEB = CLK_RTC/8" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="CLK_RTC_DEB = CLK_RTC/16" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="CLK_RTC_DEB = CLK_RTC/32" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="CLK_RTC_DEB = CLK_RTC/64" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="CLK_RTC_DEB = CLK_RTC/128" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="CLK_RTC_DEB = CLK_RTC/256" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ACTF" edc:nzwidth="0x3" edc:desc="Active Layer Frequency">
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="CLK_RTC_OUT = CLK_RTC/2" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="CLK_RTC_OUT = CLK_RTC/4" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="CLK_RTC_OUT = CLK_RTC/8" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="CLK_RTC_OUT = CLK_RTC/16" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="CLK_RTC_OUT = CLK_RTC/32" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="CLK_RTC_OUT = CLK_RTC/64" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="CLK_RTC_OUT = CLK_RTC/128" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="CLK_RTC_OUT = CLK_RTC/256" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="EVCTRL" edc:nzwidth="0x20" edc:access="---------------nnn----nnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1C3FF" edc:addr="0x42010004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="PEREO0" edc:nzwidth="0x1" edc:desc="Periodic Interval 0 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO1" edc:nzwidth="0x1" edc:desc="Periodic Interval 1 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO2" edc:nzwidth="0x1" edc:desc="Periodic Interval 2 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO3" edc:nzwidth="0x1" edc:desc="Periodic Interval 3 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO4" edc:nzwidth="0x1" edc:desc="Periodic Interval 4 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO5" edc:nzwidth="0x1" edc:desc="Periodic Interval 5 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO6" edc:nzwidth="0x1" edc:desc="Periodic Interval 6 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO7" edc:nzwidth="0x1" edc:desc="Periodic Interval 7 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="CMPEO0" edc:nzwidth="0x1" edc:desc="Compare 0 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="CMPEO1" edc:nzwidth="0x1" edc:desc="Compare 1 Event Output Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TAMPEREO" edc:nzwidth="0x1" edc:desc="Tamper Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="OVFEO" edc:nzwidth="0x1" edc:desc="Overflow Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="TAMPEVEI" edc:nzwidth="0x1" edc:desc="Tamper Event Input Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="INTENCLR" edc:nzwidth="0x10" edc:access="nn----nnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xC3FF" edc:addr="0x42010008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="PER0" edc:nzwidth="0x1" edc:desc="Periodic Interval 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER1" edc:nzwidth="0x1" edc:desc="Periodic Interval 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER2" edc:nzwidth="0x1" edc:desc="Periodic Interval 2 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER3" edc:nzwidth="0x1" edc:desc="Periodic Interval 3 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER4" edc:nzwidth="0x1" edc:desc="Periodic Interval 4 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER5" edc:nzwidth="0x1" edc:desc="Periodic Interval 5 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER6" edc:nzwidth="0x1" edc:desc="Periodic Interval 6 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER7" edc:nzwidth="0x1" edc:desc="Periodic Interval 7 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CMP0" edc:nzwidth="0x1" edc:desc="Compare 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CMP1" edc:nzwidth="0x1" edc:desc="Compare 1 Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TAMPER" edc:nzwidth="0x1" edc:desc="Tamper Enable"/>
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="INTENSET" edc:nzwidth="0x10" edc:access="nn----nnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xC3FF" edc:addr="0x4201000A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="PER0" edc:nzwidth="0x1" edc:desc="Periodic Interval 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER1" edc:nzwidth="0x1" edc:desc="Periodic Interval 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER2" edc:nzwidth="0x1" edc:desc="Periodic Interval 2 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER3" edc:nzwidth="0x1" edc:desc="Periodic Interval 3 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER4" edc:nzwidth="0x1" edc:desc="Periodic Interval 4 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER5" edc:nzwidth="0x1" edc:desc="Periodic Interval 5 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER6" edc:nzwidth="0x1" edc:desc="Periodic Interval 6 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER7" edc:nzwidth="0x1" edc:desc="Periodic Interval 7 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CMP0" edc:nzwidth="0x1" edc:desc="Compare 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CMP1" edc:nzwidth="0x1" edc:desc="Compare 1 Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TAMPER" edc:nzwidth="0x1" edc:desc="Tamper Enable"/>
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="INTFLAG" edc:nzwidth="0x10" edc:access="nn----nnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xC3FF" edc:addr="0x4201000C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="PER0" edc:nzwidth="0x1" edc:desc="Periodic Interval 0"/>
            <edc:SFRFieldDef edc:cname="PER1" edc:nzwidth="0x1" edc:desc="Periodic Interval 1"/>
            <edc:SFRFieldDef edc:cname="PER2" edc:nzwidth="0x1" edc:desc="Periodic Interval 2"/>
            <edc:SFRFieldDef edc:cname="PER3" edc:nzwidth="0x1" edc:desc="Periodic Interval 3"/>
            <edc:SFRFieldDef edc:cname="PER4" edc:nzwidth="0x1" edc:desc="Periodic Interval 4"/>
            <edc:SFRFieldDef edc:cname="PER5" edc:nzwidth="0x1" edc:desc="Periodic Interval 5"/>
            <edc:SFRFieldDef edc:cname="PER6" edc:nzwidth="0x1" edc:desc="Periodic Interval 6"/>
            <edc:SFRFieldDef edc:cname="PER7" edc:nzwidth="0x1" edc:desc="Periodic Interval 7"/>
            <edc:SFRFieldDef edc:cname="CMP0" edc:nzwidth="0x1" edc:desc="Compare 0"/>
            <edc:SFRFieldDef edc:cname="CMP1" edc:nzwidth="0x1" edc:desc="Compare 1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TAMPER" edc:nzwidth="0x1" edc:desc="Tamper"/>
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="------------rrrrr--------rr-rrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF806F" edc:addr="0x42010010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable Bit Busy"/>
            <edc:SFRFieldDef edc:cname="FREQCORR" edc:nzwidth="0x1" edc:desc="FREQCORR Register Busy"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x1" edc:desc="COUNT Register Busy"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="COMP0" edc:nzwidth="0x1" edc:desc="COMP 0 Register Busy"/>
            <edc:SFRFieldDef edc:cname="COMP1" edc:nzwidth="0x1" edc:desc="COMP 1 Register Busy"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="COUNTSYNC" edc:nzwidth="0x1" edc:desc="Count Synchronization Enable Bit Busy"/>
            <edc:SFRFieldDef edc:cname="GP0" edc:nzwidth="0x1" edc:desc="General Purpose 0 Register Busy"/>
            <edc:SFRFieldDef edc:cname="GP1" edc:nzwidth="0x1" edc:desc="General Purpose 1 Register Busy"/>
            <edc:SFRFieldDef edc:cname="GP2" edc:nzwidth="0x1" edc:desc="General Purpose 2 Register Busy"/>
            <edc:SFRFieldDef edc:cname="GP3" edc:nzwidth="0x1" edc:desc="General Purpose 3 Register Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="COUNT" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42010018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x20" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="COMP0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42010020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="COMP" edc:nzwidth="0x20" edc:desc="Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="COMP1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42010024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="COMP" edc:nzwidth="0x20" edc:desc="Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="TIMESTAMP" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42010064">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x20" edc:desc="Count Timestamp Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="RTC/MODE1">
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="CTRLA" edc:nzwidth="0x10" edc:access="nnn-nnnn----nnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xEF0F" edc:addr="0x42010000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x2" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="COUNT32" edc:desc="Mode 0: 32-bit Counter" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="COUNT16" edc:desc="Mode 1: 16-bit Counter" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLOCK" edc:desc="Mode 2: Clock/Calendar" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="PRESCALER" edc:nzwidth="0x4" edc:desc="Prescaler">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="CLK_RTC_CNT = GCLK_RTC/1" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="CLK_RTC_CNT = GCLK_RTC/1" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="CLK_RTC_CNT = GCLK_RTC/2" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="CLK_RTC_CNT = GCLK_RTC/4" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="CLK_RTC_CNT = GCLK_RTC/8" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="CLK_RTC_CNT = GCLK_RTC/16" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="CLK_RTC_CNT = GCLK_RTC/32" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="CLK_RTC_CNT = GCLK_RTC/64" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="CLK_RTC_CNT = GCLK_RTC/128" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="CLK_RTC_CNT = GCLK_RTC/256" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="DIV512" edc:desc="CLK_RTC_CNT = GCLK_RTC/512" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="CLK_RTC_CNT = GCLK_RTC/1024" edc:when="(field &amp; 0xF) == 0x0B"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BKTRST" edc:nzwidth="0x1" edc:desc="BKUP Registers Reset On Tamper Enable"/>
            <edc:SFRFieldDef edc:cname="GPTRST" edc:nzwidth="0x1" edc:desc="GP Registers Reset On Tamper Enable"/>
            <edc:SFRFieldDef edc:cname="COUNTSYNC" edc:nzwidth="0x1" edc:desc="Count Read Synchronization Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="CTRLB" edc:nzwidth="0x10" edc:access="-nnn-nnnnnnn--nn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x77F3" edc:addr="0x42010002">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="GP0EN" edc:nzwidth="0x1" edc:desc="General Purpose 0 Enable"/>
            <edc:SFRFieldDef edc:cname="GP2EN" edc:nzwidth="0x1" edc:desc="General Purpose 2 Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DEBMAJ" edc:nzwidth="0x1" edc:desc="Debouncer Majority Enable"/>
            <edc:SFRFieldDef edc:cname="DEBASYNC" edc:nzwidth="0x1" edc:desc="Debouncer Asynchronous Enable"/>
            <edc:SFRFieldDef edc:cname="RTCOUT" edc:nzwidth="0x1" edc:desc="RTC Output Enable"/>
            <edc:SFRFieldDef edc:cname="DMAEN" edc:nzwidth="0x1" edc:desc="DMA Enable"/>
            <edc:SFRFieldDef edc:cname="DEBF" edc:nzwidth="0x3" edc:desc="Debounce Frequency">
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="CLK_RTC_DEB = CLK_RTC/2" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="CLK_RTC_DEB = CLK_RTC/4" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="CLK_RTC_DEB = CLK_RTC/8" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="CLK_RTC_DEB = CLK_RTC/16" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="CLK_RTC_DEB = CLK_RTC/32" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="CLK_RTC_DEB = CLK_RTC/64" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="CLK_RTC_DEB = CLK_RTC/128" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="CLK_RTC_DEB = CLK_RTC/256" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ACTF" edc:nzwidth="0x3" edc:desc="Active Layer Frequency">
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="CLK_RTC_OUT = CLK_RTC/2" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="CLK_RTC_OUT = CLK_RTC/4" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="CLK_RTC_OUT = CLK_RTC/8" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="CLK_RTC_OUT = CLK_RTC/16" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="CLK_RTC_OUT = CLK_RTC/32" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="CLK_RTC_OUT = CLK_RTC/64" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="CLK_RTC_OUT = CLK_RTC/128" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="CLK_RTC_OUT = CLK_RTC/256" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="EVCTRL" edc:nzwidth="0x20" edc:access="---------------nnn--nnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1CFFF" edc:addr="0x42010004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="PEREO0" edc:nzwidth="0x1" edc:desc="Periodic Interval 0 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO1" edc:nzwidth="0x1" edc:desc="Periodic Interval 1 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO2" edc:nzwidth="0x1" edc:desc="Periodic Interval 2 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO3" edc:nzwidth="0x1" edc:desc="Periodic Interval 3 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO4" edc:nzwidth="0x1" edc:desc="Periodic Interval 4 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO5" edc:nzwidth="0x1" edc:desc="Periodic Interval 5 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO6" edc:nzwidth="0x1" edc:desc="Periodic Interval 6 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO7" edc:nzwidth="0x1" edc:desc="Periodic Interval 7 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="CMPEO0" edc:nzwidth="0x1" edc:desc="Compare 0 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="CMPEO1" edc:nzwidth="0x1" edc:desc="Compare 1 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="CMPEO2" edc:nzwidth="0x1" edc:desc="Compare 2 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="CMPEO3" edc:nzwidth="0x1" edc:desc="Compare 3 Event Output Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TAMPEREO" edc:nzwidth="0x1" edc:desc="Tamper Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="OVFEO" edc:nzwidth="0x1" edc:desc="Overflow Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="TAMPEVEI" edc:nzwidth="0x1" edc:desc="Tamper Event Input Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="INTENCLR" edc:nzwidth="0x10" edc:access="nn--nnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xCFFF" edc:addr="0x42010008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="PER0" edc:nzwidth="0x1" edc:desc="Periodic Interval 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER1" edc:nzwidth="0x1" edc:desc="Periodic Interval 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER2" edc:nzwidth="0x1" edc:desc="Periodic Interval 2 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER3" edc:nzwidth="0x1" edc:desc="Periodic Interval 3 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER4" edc:nzwidth="0x1" edc:desc="Periodic Interval 4 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER5" edc:nzwidth="0x1" edc:desc="Periodic Interval 5 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER6" edc:nzwidth="0x1" edc:desc="Periodic Interval 6 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER7" edc:nzwidth="0x1" edc:desc="Periodic Interval 7 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CMP0" edc:nzwidth="0x1" edc:desc="Compare 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CMP1" edc:nzwidth="0x1" edc:desc="Compare 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CMP2" edc:nzwidth="0x1" edc:desc="Compare 2 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CMP3" edc:nzwidth="0x1" edc:desc="Compare 3 Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TAMPER" edc:nzwidth="0x1" edc:desc="Tamper Enable"/>
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="INTENSET" edc:nzwidth="0x10" edc:access="nn--nnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xCFFF" edc:addr="0x4201000A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="PER0" edc:nzwidth="0x1" edc:desc="Periodic Interval 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER1" edc:nzwidth="0x1" edc:desc="Periodic Interval 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER2" edc:nzwidth="0x1" edc:desc="Periodic Interval 2 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER3" edc:nzwidth="0x1" edc:desc="Periodic Interval 3 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER4" edc:nzwidth="0x1" edc:desc="Periodic Interval 4 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER5" edc:nzwidth="0x1" edc:desc="Periodic Interval 5 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER6" edc:nzwidth="0x1" edc:desc="Periodic Interval 6 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER7" edc:nzwidth="0x1" edc:desc="Periodic Interval 7 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CMP0" edc:nzwidth="0x1" edc:desc="Compare 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CMP1" edc:nzwidth="0x1" edc:desc="Compare 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CMP2" edc:nzwidth="0x1" edc:desc="Compare 2 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CMP3" edc:nzwidth="0x1" edc:desc="Compare 3 Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TAMPER" edc:nzwidth="0x1" edc:desc="Tamper Enable"/>
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="INTFLAG" edc:nzwidth="0x10" edc:access="nn--nnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xCFFF" edc:addr="0x4201000C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="PER0" edc:nzwidth="0x1" edc:desc="Periodic Interval 0"/>
            <edc:SFRFieldDef edc:cname="PER1" edc:nzwidth="0x1" edc:desc="Periodic Interval 1"/>
            <edc:SFRFieldDef edc:cname="PER2" edc:nzwidth="0x1" edc:desc="Periodic Interval 2"/>
            <edc:SFRFieldDef edc:cname="PER3" edc:nzwidth="0x1" edc:desc="Periodic Interval 3"/>
            <edc:SFRFieldDef edc:cname="PER4" edc:nzwidth="0x1" edc:desc="Periodic Interval 4"/>
            <edc:SFRFieldDef edc:cname="PER5" edc:nzwidth="0x1" edc:desc="Periodic Interval 5"/>
            <edc:SFRFieldDef edc:cname="PER6" edc:nzwidth="0x1" edc:desc="Periodic Interval 6"/>
            <edc:SFRFieldDef edc:cname="PER7" edc:nzwidth="0x1" edc:desc="Periodic Interval 7"/>
            <edc:SFRFieldDef edc:cname="CMP0" edc:nzwidth="0x1" edc:desc="Compare 0"/>
            <edc:SFRFieldDef edc:cname="CMP1" edc:nzwidth="0x1" edc:desc="Compare 1"/>
            <edc:SFRFieldDef edc:cname="CMP2" edc:nzwidth="0x1" edc:desc="Compare 2"/>
            <edc:SFRFieldDef edc:cname="CMP3" edc:nzwidth="0x1" edc:desc="Compare 3"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TAMPER" edc:nzwidth="0x1" edc:desc="Tamper"/>
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="------------rrrrr------rrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF81FF" edc:addr="0x42010010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Bit Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable Bit Busy"/>
            <edc:SFRFieldDef edc:cname="FREQCORR" edc:nzwidth="0x1" edc:desc="FREQCORR Register Busy"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x1" edc:desc="COUNT Register Busy"/>
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x1" edc:desc="PER Register Busy"/>
            <edc:SFRFieldDef edc:cname="COMP0" edc:nzwidth="0x1" edc:desc="COMP 0 Register Busy"/>
            <edc:SFRFieldDef edc:cname="COMP1" edc:nzwidth="0x1" edc:desc="COMP 1 Register Busy"/>
            <edc:SFRFieldDef edc:cname="COMP2" edc:nzwidth="0x1" edc:desc="COMP 2 Register Busy"/>
            <edc:SFRFieldDef edc:cname="COMP3" edc:nzwidth="0x1" edc:desc="COMP 3 Register Busy"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="COUNTSYNC" edc:nzwidth="0x1" edc:desc="Count Synchronization Enable Bit Busy"/>
            <edc:SFRFieldDef edc:cname="GP0" edc:nzwidth="0x1" edc:desc="General Purpose 0 Register Busy"/>
            <edc:SFRFieldDef edc:cname="GP1" edc:nzwidth="0x1" edc:desc="General Purpose 1 Register Busy"/>
            <edc:SFRFieldDef edc:cname="GP2" edc:nzwidth="0x1" edc:desc="General Purpose 2 Register Busy"/>
            <edc:SFRFieldDef edc:cname="GP3" edc:nzwidth="0x1" edc:desc="General Purpose 3 Register Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="COUNT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x42010018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x10" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="PER" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x4201001C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x10" edc:desc="Counter Period"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="COMP0" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x42010020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="COMP" edc:nzwidth="0x10" edc:desc="Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="COMP1" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x42010022">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="COMP" edc:nzwidth="0x10" edc:desc="Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="COMP2" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x42010024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="COMP" edc:nzwidth="0x10" edc:desc="Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="COMP3" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x42010026">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="COMP" edc:nzwidth="0x10" edc:desc="Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="TIMESTAMP" edc:nzwidth="0x20" edc:access="----------------rrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF" edc:addr="0x42010064">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x10" edc:desc="Count Timestamp Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="RTC/MODE2">
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="CTRLA" edc:nzwidth="0x10" edc:access="nnn-nnnnnn--nnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xEFCF" edc:addr="0x42010000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x2" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="COUNT32" edc:desc="Mode 0: 32-bit Counter" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="COUNT16" edc:desc="Mode 1: 16-bit Counter" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLOCK" edc:desc="Mode 2: Clock/Calendar" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CLKREP" edc:nzwidth="0x1" edc:desc="Clock Representation"/>
            <edc:SFRFieldDef edc:cname="MATCHCLR" edc:nzwidth="0x1" edc:desc="Clear on Match"/>
            <edc:SFRFieldDef edc:cname="PRESCALER" edc:nzwidth="0x4" edc:desc="Prescaler">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="CLK_RTC_CNT = GCLK_RTC/1" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="CLK_RTC_CNT = GCLK_RTC/1" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="CLK_RTC_CNT = GCLK_RTC/2" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="CLK_RTC_CNT = GCLK_RTC/4" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="CLK_RTC_CNT = GCLK_RTC/8" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="CLK_RTC_CNT = GCLK_RTC/16" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="CLK_RTC_CNT = GCLK_RTC/32" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="CLK_RTC_CNT = GCLK_RTC/64" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="CLK_RTC_CNT = GCLK_RTC/128" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="CLK_RTC_CNT = GCLK_RTC/256" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="DIV512" edc:desc="CLK_RTC_CNT = GCLK_RTC/512" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="CLK_RTC_CNT = GCLK_RTC/1024" edc:when="(field &amp; 0xF) == 0x0B"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BKTRST" edc:nzwidth="0x1" edc:desc="BKUP Registers Reset On Tamper Enable"/>
            <edc:SFRFieldDef edc:cname="GPTRST" edc:nzwidth="0x1" edc:desc="GP Registers Reset On Tamper Enable"/>
            <edc:SFRFieldDef edc:cname="CLOCKSYNC" edc:nzwidth="0x1" edc:desc="Clock Read Synchronization Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="CTRLB" edc:nzwidth="0x10" edc:access="-nnn-nnnnnnn--nn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x77F3" edc:addr="0x42010002">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="GP0EN" edc:nzwidth="0x1" edc:desc="General Purpose 0 Enable"/>
            <edc:SFRFieldDef edc:cname="GP2EN" edc:nzwidth="0x1" edc:desc="General Purpose 2 Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DEBMAJ" edc:nzwidth="0x1" edc:desc="Debouncer Majority Enable"/>
            <edc:SFRFieldDef edc:cname="DEBASYNC" edc:nzwidth="0x1" edc:desc="Debouncer Asynchronous Enable"/>
            <edc:SFRFieldDef edc:cname="RTCOUT" edc:nzwidth="0x1" edc:desc="RTC Output Enable"/>
            <edc:SFRFieldDef edc:cname="DMAEN" edc:nzwidth="0x1" edc:desc="DMA Enable"/>
            <edc:SFRFieldDef edc:cname="DEBF" edc:nzwidth="0x3" edc:desc="Debounce Frequency">
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="CLK_RTC_DEB = CLK_RTC/2" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="CLK_RTC_DEB = CLK_RTC/4" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="CLK_RTC_DEB = CLK_RTC/8" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="CLK_RTC_DEB = CLK_RTC/16" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="CLK_RTC_DEB = CLK_RTC/32" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="CLK_RTC_DEB = CLK_RTC/64" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="CLK_RTC_DEB = CLK_RTC/128" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="CLK_RTC_DEB = CLK_RTC/256" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ACTF" edc:nzwidth="0x3" edc:desc="Active Layer Frequency">
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="CLK_RTC_OUT = CLK_RTC/2" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="CLK_RTC_OUT = CLK_RTC/4" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="CLK_RTC_OUT = CLK_RTC/8" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="CLK_RTC_OUT = CLK_RTC/16" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="CLK_RTC_OUT = CLK_RTC/32" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="CLK_RTC_OUT = CLK_RTC/64" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="CLK_RTC_OUT = CLK_RTC/128" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="CLK_RTC_OUT = CLK_RTC/256" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="EVCTRL" edc:nzwidth="0x20" edc:access="---------------nnn----nnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1C3FF" edc:addr="0x42010004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="PEREO0" edc:nzwidth="0x1" edc:desc="Periodic Interval 0 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO1" edc:nzwidth="0x1" edc:desc="Periodic Interval 1 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO2" edc:nzwidth="0x1" edc:desc="Periodic Interval 2 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO3" edc:nzwidth="0x1" edc:desc="Periodic Interval 3 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO4" edc:nzwidth="0x1" edc:desc="Periodic Interval 4 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO5" edc:nzwidth="0x1" edc:desc="Periodic Interval 5 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO6" edc:nzwidth="0x1" edc:desc="Periodic Interval 6 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO7" edc:nzwidth="0x1" edc:desc="Periodic Interval 7 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="ALARMEO0" edc:nzwidth="0x1" edc:desc="Alarm 0 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="ALARMEO1" edc:nzwidth="0x1" edc:desc="Alarm 1 Event Output Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TAMPEREO" edc:nzwidth="0x1" edc:desc="Tamper Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="OVFEO" edc:nzwidth="0x1" edc:desc="Overflow Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="TAMPEVEI" edc:nzwidth="0x1" edc:desc="Tamper Event Input Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="INTENCLR" edc:nzwidth="0x10" edc:access="nn----nnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xC3FF" edc:addr="0x42010008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="PER0" edc:nzwidth="0x1" edc:desc="Periodic Interval 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER1" edc:nzwidth="0x1" edc:desc="Periodic Interval 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER2" edc:nzwidth="0x1" edc:desc="Periodic Interval 2 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER3" edc:nzwidth="0x1" edc:desc="Periodic Interval 3 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER4" edc:nzwidth="0x1" edc:desc="Periodic Interval 4 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER5" edc:nzwidth="0x1" edc:desc="Periodic Interval 5 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER6" edc:nzwidth="0x1" edc:desc="Periodic Interval 6 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER7" edc:nzwidth="0x1" edc:desc="Periodic Interval 7 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ALARM0" edc:nzwidth="0x1" edc:desc="Alarm 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ALARM1" edc:nzwidth="0x1" edc:desc="Alarm 1 Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TAMPER" edc:nzwidth="0x1" edc:desc="Tamper Enable"/>
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="INTENSET" edc:nzwidth="0x10" edc:access="nn----nnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xC3FF" edc:addr="0x4201000A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="PER0" edc:nzwidth="0x1" edc:desc="Periodic Interval 0 Enable"/>
            <edc:SFRFieldDef edc:cname="PER1" edc:nzwidth="0x1" edc:desc="Periodic Interval 1 Enable"/>
            <edc:SFRFieldDef edc:cname="PER2" edc:nzwidth="0x1" edc:desc="Periodic Interval 2 Enable"/>
            <edc:SFRFieldDef edc:cname="PER3" edc:nzwidth="0x1" edc:desc="Periodic Interval 3 Enable"/>
            <edc:SFRFieldDef edc:cname="PER4" edc:nzwidth="0x1" edc:desc="Periodic Interval 4 Enable"/>
            <edc:SFRFieldDef edc:cname="PER5" edc:nzwidth="0x1" edc:desc="Periodic Interval 5 Enable"/>
            <edc:SFRFieldDef edc:cname="PER6" edc:nzwidth="0x1" edc:desc="Periodic Interval 6 Enable"/>
            <edc:SFRFieldDef edc:cname="PER7" edc:nzwidth="0x1" edc:desc="Periodic Interval 7 Enable"/>
            <edc:SFRFieldDef edc:cname="ALARM0" edc:nzwidth="0x1" edc:desc="Alarm 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ALARM1" edc:nzwidth="0x1" edc:desc="Alarm 1 Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TAMPER" edc:nzwidth="0x1" edc:desc="Tamper Enable"/>
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="INTFLAG" edc:nzwidth="0x10" edc:access="nn----nnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xC3FF" edc:addr="0x4201000C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="PER0" edc:nzwidth="0x1" edc:desc="Periodic Interval 0"/>
            <edc:SFRFieldDef edc:cname="PER1" edc:nzwidth="0x1" edc:desc="Periodic Interval 1"/>
            <edc:SFRFieldDef edc:cname="PER2" edc:nzwidth="0x1" edc:desc="Periodic Interval 2"/>
            <edc:SFRFieldDef edc:cname="PER3" edc:nzwidth="0x1" edc:desc="Periodic Interval 3"/>
            <edc:SFRFieldDef edc:cname="PER4" edc:nzwidth="0x1" edc:desc="Periodic Interval 4"/>
            <edc:SFRFieldDef edc:cname="PER5" edc:nzwidth="0x1" edc:desc="Periodic Interval 5"/>
            <edc:SFRFieldDef edc:cname="PER6" edc:nzwidth="0x1" edc:desc="Periodic Interval 6"/>
            <edc:SFRFieldDef edc:cname="PER7" edc:nzwidth="0x1" edc:desc="Periodic Interval 7"/>
            <edc:SFRFieldDef edc:cname="ALARM0" edc:nzwidth="0x1" edc:desc="Alarm 0"/>
            <edc:SFRFieldDef edc:cname="ALARM1" edc:nzwidth="0x1" edc:desc="Alarm 1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TAMPER" edc:nzwidth="0x1" edc:desc="Tamper"/>
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="------------rrrrr--rr----rr-rrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF986F" edc:addr="0x42010010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Bit Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable Bit Busy"/>
            <edc:SFRFieldDef edc:cname="FREQCORR" edc:nzwidth="0x1" edc:desc="FREQCORR Register Busy"/>
            <edc:SFRFieldDef edc:cname="CLOCK" edc:nzwidth="0x1" edc:desc="CLOCK Register Busy"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ALARM0" edc:nzwidth="0x1" edc:desc="ALARM 0 Register Busy"/>
            <edc:SFRFieldDef edc:cname="ALARM1" edc:nzwidth="0x1" edc:desc="ALARM 1 Register Busy"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="MASK0" edc:nzwidth="0x1" edc:desc="MASK 0 Register Busy"/>
            <edc:SFRFieldDef edc:cname="MASK1" edc:nzwidth="0x1" edc:desc="MASK 1 Register Busy"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CLOCKSYNC" edc:nzwidth="0x1" edc:desc="Clock Synchronization Enable Bit Busy"/>
            <edc:SFRFieldDef edc:cname="GP0" edc:nzwidth="0x1" edc:desc="General Purpose 0 Register Busy"/>
            <edc:SFRFieldDef edc:cname="GP1" edc:nzwidth="0x1" edc:desc="General Purpose 1 Register Busy"/>
            <edc:SFRFieldDef edc:cname="GP2" edc:nzwidth="0x1" edc:desc="General Purpose 2 Register Busy"/>
            <edc:SFRFieldDef edc:cname="GP3" edc:nzwidth="0x1" edc:desc="General Purpose 3 Register Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="CLOCK" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42010018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="SECOND" edc:nzwidth="0x6" edc:desc="Second"/>
            <edc:SFRFieldDef edc:cname="MINUTE" edc:nzwidth="0x6" edc:desc="Minute"/>
            <edc:SFRFieldDef edc:cname="HOUR" edc:nzwidth="0x5" edc:desc="Hour">
              <edc:SFRFieldSemantic edc:cname="AM" edc:desc="AM when CLKREP in 12-hour" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PM" edc:desc="PM when CLKREP in 12-hour" edc:when="(field &amp; 0x1F) == 0x10"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DAY" edc:nzwidth="0x5" edc:desc="Day"/>
            <edc:SFRFieldDef edc:cname="MONTH" edc:nzwidth="0x4" edc:desc="Month"/>
            <edc:SFRFieldDef edc:cname="YEAR" edc:nzwidth="0x6" edc:desc="Year"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="ALARM0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42010020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="SECOND" edc:nzwidth="0x6" edc:desc="Second"/>
            <edc:SFRFieldDef edc:cname="MINUTE" edc:nzwidth="0x6" edc:desc="Minute"/>
            <edc:SFRFieldDef edc:cname="HOUR" edc:nzwidth="0x5" edc:desc="Hour">
              <edc:SFRFieldSemantic edc:cname="AM" edc:desc="Morning hour" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PM" edc:desc="Afternoon hour" edc:when="(field &amp; 0x1F) == 0x10"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DAY" edc:nzwidth="0x5" edc:desc="Day"/>
            <edc:SFRFieldDef edc:cname="MONTH" edc:nzwidth="0x4" edc:desc="Month"/>
            <edc:SFRFieldDef edc:cname="YEAR" edc:nzwidth="0x6" edc:desc="Year"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="MASK0" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:addr="0x42010024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="SEL" edc:nzwidth="0x3" edc:desc="Alarm Mask Selection">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Alarm Disabled" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SS" edc:desc="Match seconds only" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="MMSS" edc:desc="Match seconds and minutes only" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="HHMMSS" edc:desc="Match seconds, minutes, and hours only" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="DDHHMMSS" edc:desc="Match seconds, minutes, hours, and days only" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="MMDDHHMMSS" edc:desc="Match seconds, minutes, hours, days, and months only" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="YYMMDDHHMMSS" edc:desc="Match seconds, minutes, hours, days, months, and years" edc:when="(field &amp; 0x7) == 0x06"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="ALARM1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42010028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="SECOND" edc:nzwidth="0x6" edc:desc="Second"/>
            <edc:SFRFieldDef edc:cname="MINUTE" edc:nzwidth="0x6" edc:desc="Minute"/>
            <edc:SFRFieldDef edc:cname="HOUR" edc:nzwidth="0x5" edc:desc="Hour">
              <edc:SFRFieldSemantic edc:cname="AM" edc:desc="Morning hour" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PM" edc:desc="Afternoon hour" edc:when="(field &amp; 0x1F) == 0x10"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DAY" edc:nzwidth="0x5" edc:desc="Day"/>
            <edc:SFRFieldDef edc:cname="MONTH" edc:nzwidth="0x4" edc:desc="Month"/>
            <edc:SFRFieldDef edc:cname="YEAR" edc:nzwidth="0x6" edc:desc="Year"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="MASK1" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:addr="0x4201002C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="SEL" edc:nzwidth="0x3" edc:desc="Alarm Mask Selection">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Alarm Disabled" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SS" edc:desc="Match seconds only" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="MMSS" edc:desc="Match seconds and minutes only" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="HHMMSS" edc:desc="Match seconds, minutes, and hours only" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="DDHHMMSS" edc:desc="Match seconds, minutes, hours, and days only" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="MMDDHHMMSS" edc:desc="Match seconds, minutes, hours, days, and months only" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="YYMMDDHHMMSS" edc:desc="Match seconds, minutes, hours, days, months, and years" edc:when="(field &amp; 0x7) == 0x06"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="TIMESTAMP" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42010064">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="SECOND" edc:nzwidth="0x6" edc:desc="Second Timestamp Value"/>
            <edc:SFRFieldDef edc:cname="MINUTE" edc:nzwidth="0x6" edc:desc="Minute Timestamp Value"/>
            <edc:SFRFieldDef edc:cname="HOUR" edc:nzwidth="0x5" edc:desc="Hour Timestamp Value">
              <edc:SFRFieldSemantic edc:cname="AM" edc:desc="AM when CLKREP in 12-hour" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PM" edc:desc="PM when CLKREP in 12-hour" edc:when="(field &amp; 0x1F) == 0x10"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DAY" edc:nzwidth="0x5" edc:desc="Day Timestamp Value"/>
            <edc:SFRFieldDef edc:cname="MONTH" edc:nzwidth="0x4" edc:desc="Month Timestamp Value"/>
            <edc:SFRFieldDef edc:cname="YEAR" edc:nzwidth="0x6" edc:desc="Year Timestamp Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM0/I2CM">
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnn-nnnnnn---n--------n--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7BF1009F" edc:addr="0x40000C00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="USART_EXT_CLK" edc:desc="USART with external clock" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USART_INT_CLK" edc:desc="USART with internal clock" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SPI_SLAVE" edc:desc="SPI in slave operation" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SPI_MASTER" edc:desc="SPI in master operation" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="I2C_SLAVE" edc:desc="I2C slave operation" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="I2C_MASTER" edc:desc="I2C master operation" edc:when="(field &amp; 0x7) == 0x05"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="PINOUT" edc:nzwidth="0x1" edc:desc="Pin Usage"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SDAHOLD" edc:nzwidth="0x2" edc:desc="SDA Hold Time">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Disabled" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="75NS" edc:desc="50-100ns hold time" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="450NS" edc:desc="300-600ns hold time" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="600NS" edc:desc="400-800ns hold time" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MEXTTOEN" edc:nzwidth="0x1" edc:desc="Master SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="SEXTTOEN" edc:nzwidth="0x1" edc:desc="Slave SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="SPEED" edc:nzwidth="0x2" edc:desc="Transfer Speed">
              <edc:SFRFieldSemantic edc:cname="STANDARD_AND_FAST_MODE" edc:desc="Standard Mode(Sm) Upto 100kHz and Fast Mode(Fm) Upto 400kHz " edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="FASTPLUS_MODE" edc:desc="Fast-mode Plus Upto 1MHz" edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SCLSM" edc:nzwidth="0x1" edc:desc="SCL Clock Stretch Mode"/>
            <edc:SFRFieldDef edc:cname="INACTOUT" edc:nzwidth="0x2" edc:desc="Inactive Time-Out">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Disabled" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="55US" edc:desc="5-6 SCL Time-Out(50-60us)" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="105US" edc:desc="10-11 SCL Time-Out(100-110us)" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="205US" edc:desc="20-21 SCL Time-Out(200-210us)" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LOWTOUTEN" edc:nzwidth="0x1" edc:desc="SCL Low Timeout Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="-------------nnn------nn--------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x70300" edc:addr="0x40000C04">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="SMEN" edc:nzwidth="0x1" edc:desc="Smart Mode Enable"/>
            <edc:SFRFieldDef edc:cname="QCEN" edc:nzwidth="0x1" edc:desc="Quick Command Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Command"/>
            <edc:SFRFieldDef edc:cname="ACKACT" edc:nzwidth="0x1" edc:desc="Acknowledge Action"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="-------n------------------------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1000000" edc:addr="0x40000C08">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:AdjustPoint edc:offset="0x18"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x1" edc:desc="Data 32 Bit">
              <edc:SFRFieldSemantic edc:cname="DATA_TRANS_8BIT" edc:desc="Data transaction from/to DATA register are 8-bit" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DATA_TRANS_32BIT" edc:desc="Data transaction from/to DATA register are 32-bit" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="BAUD" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF" edc:addr="0x40000C0C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x8" edc:desc="Baud Rate Value"/>
            <edc:SFRFieldDef edc:cname="BAUDLOW" edc:nzwidth="0x8" edc:desc="Baud Rate Value Low"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n-----nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x83" edc:addr="0x40000C14">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="MB" edc:nzwidth="0x1" edc:desc="Master On Bus Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SB" edc:nzwidth="0x1" edc:desc="Slave On Bus Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n-----nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x83" edc:addr="0x40000C16">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="MB" edc:nzwidth="0x1" edc:desc="Master On Bus Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SB" edc:nzwidth="0x1" edc:desc="Slave On Bus Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n-----nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x83" edc:addr="0x40000C18">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="MB" edc:nzwidth="0x1" edc:desc="Master On Bus Interrupt"/>
            <edc:SFRFieldDef edc:cname="SB" edc:nzwidth="0x1" edc:desc="Slave On Bus Interrupt"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="-----nnnnnnn-nnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x7F7" edc:addr="0x40000C1A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="BUSERR" edc:nzwidth="0x1" edc:desc="Bus Error"/>
            <edc:SFRFieldDef edc:cname="ARBLOST" edc:nzwidth="0x1" edc:desc="Arbitration Lost"/>
            <edc:SFRFieldDef edc:cname="RXNACK" edc:nzwidth="0x1" edc:desc="Received Not Acknowledge"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BUSSTATE" edc:nzwidth="0x2" edc:desc="Bus State"/>
            <edc:SFRFieldDef edc:cname="LOWTOUT" edc:nzwidth="0x1" edc:desc="SCL Low Timeout"/>
            <edc:SFRFieldDef edc:cname="CLKHOLD" edc:nzwidth="0x1" edc:desc="Clock Hold"/>
            <edc:SFRFieldDef edc:cname="MEXTTOUT" edc:nzwidth="0x1" edc:desc="Master SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="SEXTTOUT" edc:nzwidth="0x1" edc:desc="Slave SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="LENERR" edc:nzwidth="0x1" edc:desc="Length Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="---------------------------r-rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x17" edc:addr="0x40000C1C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="SYSOP" edc:nzwidth="0x1" edc:desc="System Operation Synchronization Busy"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LENGTH" edc:nzwidth="0x1" edc:desc="Length Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="--------nnnnnnnnn-n--nnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFA7FF" edc:addr="0x40000C24">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0xB" edc:desc="Address Value"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x1" edc:desc="Length Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TENBITEN" edc:nzwidth="0x1" edc:desc="Ten Bit Addressing Enable"/>
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Length"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="DATA" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF" edc:addr="0x40000C28">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x8" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x40000C30">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM0/I2CS">
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-n--n-nnn-nn---n--------n--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x4BB1009F" edc:addr="0x40000C00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="USART_EXT_CLK" edc:desc="USART with external clock" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USART_INT_CLK" edc:desc="USART with internal clock" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SPI_SLAVE" edc:desc="SPI in slave operation" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SPI_MASTER" edc:desc="SPI in master operation" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="I2C_SLAVE" edc:desc="I2C slave operation" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="I2C_MASTER" edc:desc="I2C master operation" edc:when="(field &amp; 0x7) == 0x05"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="PINOUT" edc:nzwidth="0x1" edc:desc="Pin Usage"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SDAHOLD" edc:nzwidth="0x2" edc:desc="SDA Hold Time">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Disabled" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="75NS" edc:desc="50-100ns hold time" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="450NS" edc:desc="300-600ns hold time" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="600NS" edc:desc="400-800ns hold time" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SEXTTOEN" edc:nzwidth="0x1" edc:desc="Slave SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="SPEED" edc:nzwidth="0x2" edc:desc="Transfer Speed">
              <edc:SFRFieldSemantic edc:cname="STANDARD_AND_FAST_MODE" edc:desc="Standard Mode(Sm) Upto 100kHz and Fast Mode(Fm) Upto 400kHz " edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="FASTPLUS_MODE" edc:desc="Fast-mode Plus Upto 1MHz" edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SCLSM" edc:nzwidth="0x1" edc:desc="SCL Clock Stretch Mode"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="LOWTOUTEN" edc:nzwidth="0x1" edc:desc="SCL Low Timeout Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="-------------nnnnn---nnn--------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7C700" edc:addr="0x40000C04">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="SMEN" edc:nzwidth="0x1" edc:desc="Smart Mode Enable"/>
            <edc:SFRFieldDef edc:cname="GCMD" edc:nzwidth="0x1" edc:desc="PMBus Group Command"/>
            <edc:SFRFieldDef edc:cname="AACKEN" edc:nzwidth="0x1" edc:desc="Automatic Address Acknowledge"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="AMODE" edc:nzwidth="0x2" edc:desc="Address Mode"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Command"/>
            <edc:SFRFieldDef edc:cname="ACKACT" edc:nzwidth="0x1" edc:desc="Acknowledge Action"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="-------n--------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x100000F" edc:addr="0x40000C08">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="SDASETUP" edc:nzwidth="0x4" edc:desc="SDA Setup Time"/>
            <edc:AdjustPoint edc:offset="0x14"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x1" edc:desc="Data 32 Bit">
              <edc:SFRFieldSemantic edc:cname="DATA_TRANS_8BIT" edc:desc="Data transaction from/to DATA register are 8-bit" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DATA_TRANS_32BIT" edc:desc="Data transaction from/to DATA register are 32-bit" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x87" edc:addr="0x40000C14">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="PREC" edc:nzwidth="0x1" edc:desc="Stop Received Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="AMATCH" edc:nzwidth="0x1" edc:desc="Address Match Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="DRDY" edc:nzwidth="0x1" edc:desc="Data Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x87" edc:addr="0x40000C16">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="PREC" edc:nzwidth="0x1" edc:desc="Stop Received Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="AMATCH" edc:nzwidth="0x1" edc:desc="Address Match Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DRDY" edc:nzwidth="0x1" edc:desc="Data Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x87" edc:addr="0x40000C18">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="PREC" edc:nzwidth="0x1" edc:desc="Stop Received Interrupt"/>
            <edc:SFRFieldDef edc:cname="AMATCH" edc:nzwidth="0x1" edc:desc="Address Match Interrupt"/>
            <edc:SFRFieldDef edc:cname="DRDY" edc:nzwidth="0x1" edc:desc="Data Interrupt"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="----n-n-nn-nnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xADF" edc:addr="0x40000C1A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="BUSERR" edc:nzwidth="0x1" edc:desc="Bus Error"/>
            <edc:SFRFieldDef edc:cname="COLL" edc:nzwidth="0x1" edc:desc="Transmit Collision"/>
            <edc:SFRFieldDef edc:cname="RXNACK" edc:nzwidth="0x1" edc:desc="Received Not Acknowledge"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Read/Write Direction"/>
            <edc:SFRFieldDef edc:cname="SR" edc:nzwidth="0x1" edc:desc="Repeated Start"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LOWTOUT" edc:nzwidth="0x1" edc:desc="SCL Low Timeout"/>
            <edc:SFRFieldDef edc:cname="CLKHOLD" edc:nzwidth="0x1" edc:desc="Clock Hold"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SEXTTOUT" edc:nzwidth="0x1" edc:desc="Slave SCL Low Extend Timeout"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LENERR" edc:nzwidth="0x1" edc:desc="Transaction Length Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="---------------------------r--rr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x13" edc:addr="0x40000C1C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="LENGTH" edc:nzwidth="0x1" edc:desc="Length Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="LENGTH" edc:nzwidth="0x10" edc:access="-------nnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1FF" edc:addr="0x40000C22">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x1" edc:desc="Data Length Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="-----nnnnnnnnnn------nnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FE07FF" edc:addr="0x40000C24">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="GENCEN" edc:nzwidth="0x1" edc:desc="General Call Address Enable"/>
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0xA" edc:desc="Address Value"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="ADDRMASK" edc:nzwidth="0xA" edc:desc="Address Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40000C28">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM0/SPIM">
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnnnnn--nn--nn-------nn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7F33019F" edc:addr="0x40000C00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="USART_EXT_CLK" edc:desc="USART with external clock" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USART_INT_CLK" edc:desc="USART with internal clock" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SPI_SLAVE" edc:desc="SPI in slave operation" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SPI_MASTER" edc:desc="SPI in master operation" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="I2C_SLAVE" edc:desc="I2C slave operation" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="I2C_MASTER" edc:desc="I2C master operation" edc:when="(field &amp; 0x7) == 0x05"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="IBON" edc:nzwidth="0x1" edc:desc="Immediate Buffer Overflow Notification"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DOPO" edc:nzwidth="0x2" edc:desc="Data Out Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="DO on PAD[0], SCK on PAD[1] and SS on PAD[2]" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="DO on PAD[3], SCK on PAD[1] and SS on PAD[2]" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DIPO" edc:nzwidth="0x2" edc:desc="Data In Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="SERCOM PAD[0] is used as data input" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="SERCOM PAD[1] is used as data input" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="SERCOM PAD[2] is used as data input" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="SERCOM PAD[3] is used as data input" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FORM" edc:nzwidth="0x4" edc:desc="Frame Format">
              <edc:SFRFieldSemantic edc:cname="SPI_FRAME" edc:desc="SPI Frame" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SPI_FRAME_WITH_ADDR" edc:desc="SPI Frame with Addr" edc:when="(field &amp; 0xF) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPHA" edc:nzwidth="0x1" edc:desc="Clock Phase">
              <edc:SFRFieldSemantic edc:cname="LEADING_EDGE" edc:desc="The data is sampled on a leading SCK edge and changed on a trailing SCK edge" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TRAILING_EDGE" edc:desc="The data is sampled on a trailing SCK edge and changed on a leading SCK edge" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity">
              <edc:SFRFieldSemantic edc:cname="IDLE_LOW" edc:desc="SCK is low when idle" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="IDLE_HIGH" edc:desc="SCK is high when idle" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order">
              <edc:SFRFieldSemantic edc:cname="MSB" edc:desc="MSB is transferred first" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LSB" edc:desc="LSB is transferred first" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="--------------n-nnn---n--n---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x2E247" edc:addr="0x40000C04">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits" edc:when="(field &amp; 0x7) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PLOADEN" edc:nzwidth="0x1" edc:desc="Data Preload Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SSDE" edc:nzwidth="0x1" edc:desc="Slave Select Low Detect Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="MSSEN" edc:nzwidth="0x1" edc:desc="Master Slave Select Enable"/>
            <edc:SFRFieldDef edc:cname="AMODE" edc:nzwidth="0x2" edc:desc="Address Mode">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="SPI Address mask " edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="2_ADDRESSES" edc:desc="Two unique Addressess" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RANGE" edc:desc="Address Range" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="-------n------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x100003F" edc:addr="0x40000C08">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="ICSPACE" edc:nzwidth="0x6" edc:desc="Inter-Character Spacing"/>
            <edc:AdjustPoint edc:offset="0x12"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x1" edc:desc="Data 32 Bit">
              <edc:SFRFieldSemantic edc:cname="DATA_TRANS_8BIT" edc:desc="Transaction from and to DATA register are 8-bit" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DATA_TRANS_32BIT" edc:desc="Transaction from and to DATA register are 32-bit" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="BAUD" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x40000C0C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x8" edc:desc="Baud Rate Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x40000C14">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x40000C16">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x40000C18">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Flag"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="----n--------n--" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x804" edc:addr="0x40000C1A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="LENERR" edc:nzwidth="0x1" edc:desc="Transaction Length Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="---------------------------r-rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x17" edc:addr="0x40000C1C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB Synchronization Busy"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LENGTH" edc:nzwidth="0x1" edc:desc="LENGTH Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="LENGTH" edc:nzwidth="0x10" edc:access="-------nnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1FF" edc:addr="0x40000C22">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x1" edc:desc="Data Length Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="--------nnnnnnnn--------nnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF00FF" edc:addr="0x40000C24">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0x8" edc:desc="Address Value"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="ADDRMASK" edc:nzwidth="0x8" edc:desc="Address Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40000C28">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x40000C30">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM0/SPIS">
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnnnnn--nn--nn-------nn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7F33019F" edc:addr="0x40000C00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="USART_EXT_CLK" edc:desc="USART with external clock" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USART_INT_CLK" edc:desc="USART with internal clock" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SPI_SLAVE" edc:desc="SPI in slave operation" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SPI_MASTER" edc:desc="SPI in master operation" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="I2C_SLAVE" edc:desc="I2C slave operation" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="I2C_MASTER" edc:desc="I2C master operation" edc:when="(field &amp; 0x7) == 0x05"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="IBON" edc:nzwidth="0x1" edc:desc="Immediate Buffer Overflow Notification"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DOPO" edc:nzwidth="0x2" edc:desc="Data Out Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="DO on PAD[0], SCK on PAD[1] and SS on PAD[2]" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="DO on PAD[3], SCK on PAD[1] and SS on PAD[2]" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DIPO" edc:nzwidth="0x2" edc:desc="Data In Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="SERCOM PAD[0] is used as data input" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="SERCOM PAD[1] is used as data input" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="SERCOM PAD[2] is used as data input" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="SERCOM PAD[3] is used as data input" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FORM" edc:nzwidth="0x4" edc:desc="Frame Format">
              <edc:SFRFieldSemantic edc:cname="SPI_FRAME" edc:desc="SPI Frame" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SPI_FRAME_WITH_ADDR" edc:desc="SPI Frame with Addr" edc:when="(field &amp; 0xF) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPHA" edc:nzwidth="0x1" edc:desc="Clock Phase">
              <edc:SFRFieldSemantic edc:cname="LEADING_EDGE" edc:desc="The data is sampled on a leading SCK edge and changed on a trailing SCK edge" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TRAILING_EDGE" edc:desc="The data is sampled on a trailing SCK edge and changed on a leading SCK edge" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity">
              <edc:SFRFieldSemantic edc:cname="IDLE_LOW" edc:desc="SCK is low when idle" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="IDLE_HIGH" edc:desc="SCK is high when idle" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order">
              <edc:SFRFieldSemantic edc:cname="MSB" edc:desc="MSB is transferred first" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LSB" edc:desc="LSB is transferred first" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="--------------n-nnn---n--n---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x2E247" edc:addr="0x40000C04">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits" edc:when="(field &amp; 0x7) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PLOADEN" edc:nzwidth="0x1" edc:desc="Data Preload Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SSDE" edc:nzwidth="0x1" edc:desc="Slave Select Low Detect Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="MSSEN" edc:nzwidth="0x1" edc:desc="Master Slave Select Enable"/>
            <edc:SFRFieldDef edc:cname="AMODE" edc:nzwidth="0x2" edc:desc="Address Mode">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="SPI Address mask " edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="2_ADDRESSES" edc:desc="Two unique Addressess" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RANGE" edc:desc="Address Range" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="-------n------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x100003F" edc:addr="0x40000C08">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="ICSPACE" edc:nzwidth="0x6" edc:desc="Inter-Character Spacing"/>
            <edc:AdjustPoint edc:offset="0x12"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x1" edc:desc="Data 32 Bit">
              <edc:SFRFieldSemantic edc:cname="DATA_TRANS_8BIT" edc:desc="Transaction from and to DATA register are 8-bit" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DATA_TRANS_32BIT" edc:desc="Transaction from and to DATA register are 32-bit" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="BAUD" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x40000C0C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x8" edc:desc="Baud Rate Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x40000C14">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x40000C16">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x40000C18">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Flag"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="----n--------n--" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x804" edc:addr="0x40000C1A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="LENERR" edc:nzwidth="0x1" edc:desc="Transaction Length Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="---------------------------r-rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x17" edc:addr="0x40000C1C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB Synchronization Busy"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LENGTH" edc:nzwidth="0x1" edc:desc="LENGTH Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="LENGTH" edc:nzwidth="0x10" edc:access="-------nnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1FF" edc:addr="0x40000C22">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x1" edc:desc="Data Length Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="--------nnnnnnnn--------nnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF00FF" edc:addr="0x40000C24">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0x8" edc:desc="Address Value"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="ADDRMASK" edc:nzwidth="0x8" edc:desc="Address Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40000C28">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x40000C30">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM0/USART_EXT">
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnnnnnnnnn--nnnnn--nnnn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FF3E79F" edc:addr="0x40000C00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="USART_EXT_CLK" edc:desc="USART with external clock" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USART_INT_CLK" edc:desc="USART with internal clock" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SPI_SLAVE" edc:desc="SPI in slave operation" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SPI_MASTER" edc:desc="SPI in master operation" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="I2C_SLAVE" edc:desc="I2C slave operation" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="I2C_MASTER" edc:desc="I2C master operation" edc:when="(field &amp; 0x7) == 0x05"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="IBON" edc:nzwidth="0x1" edc:desc="Immediate Buffer Overflow Notification"/>
            <edc:SFRFieldDef edc:cname="TXINV" edc:nzwidth="0x1" edc:desc="Transmit Data Invert"/>
            <edc:SFRFieldDef edc:cname="RXINV" edc:nzwidth="0x1" edc:desc="Receive Data Invert"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SAMPR" edc:nzwidth="0x3" edc:desc="Sample">
              <edc:SFRFieldSemantic edc:cname="16X_ARITHMETIC" edc:desc="16x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="16X_FRACTIONAL" edc:desc="16x over-sampling using fractional baudrate generation" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="8X_ARITHMETIC" edc:desc="8x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="8X_FRACTIONAL" edc:desc="8x over-sampling using fractional baudrate generation" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="3X_ARITHMETIC" edc:desc="3x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x04"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXPO" edc:nzwidth="0x2" edc:desc="Transmit Data Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="PAD[0] = TxD; PAD[1] = XCK" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="PAD[0] = TxD; PAD[2] = RTS; PAD[3] = CTS" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="PAD[0] = TxD; PAD[1] = XCK; PAD[2] = TE" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXPO" edc:nzwidth="0x2" edc:desc="Receive Data Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="SERCOM PAD[0] is used for data reception" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="SERCOM PAD[1] is used for data reception" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="SERCOM PAD[2] is used for data reception" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="SERCOM PAD[3] is used for data reception" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SAMPA" edc:nzwidth="0x2" edc:desc="Sample Adjustment">
              <edc:SFRFieldSemantic edc:cname="ADJ0" edc:desc="16x Over-sampling = 7-8-9; 8x Over-sampling = 3-4-5" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ADJ1" edc:desc="16x Over-sampling = 9-10-11; 8x Over-sampling = 4-5-6" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ADJ2" edc:desc="16x Over-sampling = 11-12-13; 8x Over-sampling = 5-6-7" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="ADJ3" edc:desc="16x Over-sampling = 13-14-15; 8x Over-sampling = 6-7-8" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FORM" edc:nzwidth="0x4" edc:desc="Frame Format">
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_NO_PARITY" edc:desc="USART frame" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_WITH_PARITY" edc:desc="USART frame with parity" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_LIN_MASTER_MODE" edc:desc="LIN Master - Break and sync generation" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_AUTO_BAUD_NO_PARITY" edc:desc="Auto-baud (LIN Slave) - break detection and auto-baud" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_AUTO_BAUD_WITH_PARITY" edc:desc="Auto-baud - break detection and auto-baud with parity" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_ISO_7816" edc:desc="ISO 7816" edc:when="(field &amp; 0xF) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMODE" edc:nzwidth="0x1" edc:desc="Communication Mode">
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Asynchronous Communication" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Synchronous Communication" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity">
              <edc:SFRFieldSemantic edc:cname="IDLE_LOW" edc:desc="TxD Change:- Rising XCK edge, RxD Sample:- Falling XCK edge" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="IDLE_HIGH" edc:desc="TxD Change:- Falling XCK edge, RxD Sample:- Rising XCK edge" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order">
              <edc:SFRFieldSemantic edc:cname="MSB" edc:desc="MSB is transmitted first" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LSB" edc:desc="LSB is transmitted first" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="------nn------nn--n--nnn-n---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3032747" edc:addr="0x40000C04">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 Bits" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 Bits" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="5_BIT" edc:desc="5 Bits" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="6_BIT" edc:desc="6 Bits" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="7_BIT" edc:desc="7 Bits" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SBMODE" edc:nzwidth="0x1" edc:desc="Stop Bit Mode">
              <edc:SFRFieldSemantic edc:cname="1_BIT" edc:desc="One Stop Bit" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="2_BIT" edc:desc="Two Stop Bits" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="COLDEN" edc:nzwidth="0x1" edc:desc="Collision Detection Enable"/>
            <edc:SFRFieldDef edc:cname="SFDE" edc:nzwidth="0x1" edc:desc="Start of Frame Detection Enable"/>
            <edc:SFRFieldDef edc:cname="ENC" edc:nzwidth="0x1" edc:desc="Encoding Format"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PMODE" edc:nzwidth="0x1" edc:desc="Parity Mode">
              <edc:SFRFieldSemantic edc:cname="EVEN" edc:desc="Even Parity" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ODD" edc:desc="Odd Parity" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TXEN" edc:nzwidth="0x1" edc:desc="Transmitter Enable"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="LINCMD" edc:nzwidth="0x2" edc:desc="LIN Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Normal USART transmission" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SOFTWARE_CONTROL_TRANSMIT_CMD" edc:desc="Break field is transmitted when DATA is written" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="AUTO_TRANSMIT_CMD" edc:desc="Break, sync and identifier are automatically transmitted when DATA is written with the identifier" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="------nn-nnn--nn----nnnn-----nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3730F07" edc:addr="0x40000C08">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="GTIME" edc:nzwidth="0x3" edc:desc="Guard Time"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="BRKLEN" edc:nzwidth="0x2" edc:desc="LIN Master Break Length">
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="Break field transmission is 13 bit times" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="17_BIT" edc:desc="Break field transmission is 17 bit times" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="21_BIT" edc:desc="Break field transmission is 21 bit times" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="26_BIT" edc:desc="Break field transmission is 26 bit times" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="HDRDLY" edc:nzwidth="0x2" edc:desc="LIN Master Header Delay">
              <edc:SFRFieldSemantic edc:cname="DELAY0" edc:desc="Delay between break and sync transmission is 1 bit time; Delay between sync and ID transmission is 1 bit time" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DELAY1" edc:desc="Delay between break and sync transmission is 4 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DELAY2" edc:desc="Delay between break and sync transmission is 8 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DELAY3" edc:desc="Delay between break and sync transmission is 14 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="INACK" edc:nzwidth="0x1" edc:desc="Inhibit Not Acknowledge"/>
            <edc:SFRFieldDef edc:cname="DSNACK" edc:nzwidth="0x1" edc:desc="Disable Successive NACK"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MAXITER" edc:nzwidth="0x3" edc:desc="Maximum Iterations"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x2" edc:desc="Data 32 Bit">
              <edc:SFRFieldSemantic edc:cname="DATA_READ_WRITE_CHSIZE" edc:desc="Data reads and writes according CTRLB.CHSIZE" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DATA_READ_CHSIZE_WRITE_32BIT" edc:desc="Data reads according CTRLB.CHSIZE and writes according 32-bit extension" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DATA_READ_32BIT_WRITE_CHSIZE" edc:desc="Data reads according 32-bit extension and writes according CTRLB.CHSIZE" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DATA_READ_WRITE_32BIT" edc:desc="Data reads and writes according 32-bit extension" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="BAUD" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x40000C0C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x10" edc:desc="Baud Rate Value"/>
            <edc:AdjustPoint edc:offset="-3"/>
            <edc:SFRFieldDef edc:cname="FP" edc:nzwidth="0x3" edc:desc="Fractional Part"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="RXPL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x40000C0E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="RXPL" edc:nzwidth="0x8" edc:desc="Receive Pulse Length"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x40000C14">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x40000C16">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x40000C18">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="--------nnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xFF" edc:addr="0x40000C1A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Parity Error"/>
            <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Frame Error"/>
            <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
            <edc:SFRFieldDef edc:cname="CTS" edc:nzwidth="0x1" edc:desc="Clear To Send"/>
            <edc:SFRFieldDef edc:cname="ISF" edc:nzwidth="0x1" edc:desc="Inconsistent Sync Field"/>
            <edc:SFRFieldDef edc:cname="COLL" edc:nzwidth="0x1" edc:desc="Collision Detected"/>
            <edc:SFRFieldDef edc:cname="TXE" edc:nzwidth="0x1" edc:desc="Transmitter Empty"/>
            <edc:SFRFieldDef edc:cname="ITER" edc:nzwidth="0x1" edc:desc="Maximum Number of Repetitions Reached"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="---------------------------rrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:addr="0x40000C1C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="RXERRCNT" edc:nzwidth="0x1" edc:desc="RXERRCNT Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="LENGTH" edc:nzwidth="0x1" edc:desc="LENGTH Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="RXERRCNT" edc:nzwidth="0x8" edc:access="rrrrrrrr" edc:por="00000000" edc:mclr="00000000" edc:addr="0x40000C20">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="RXERRCNT" edc:nzwidth="0x8" edc:desc="Receive Error Count"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="LENGTH" edc:nzwidth="0x10" edc:access="------nnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x3FF" edc:addr="0x40000C22">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x2" edc:desc="Data Length Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40000C28">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x40000C30">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM0/USART_INT">
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnnnnnnnnn--nnnnn--nnnn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FF3E79F" edc:addr="0x40000C00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="USART_EXT_CLK" edc:desc="USART with external clock" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USART_INT_CLK" edc:desc="USART with internal clock" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SPI_SLAVE" edc:desc="SPI in slave operation" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SPI_MASTER" edc:desc="SPI in master operation" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="I2C_SLAVE" edc:desc="I2C slave operation" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="I2C_MASTER" edc:desc="I2C master operation" edc:when="(field &amp; 0x7) == 0x05"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="IBON" edc:nzwidth="0x1" edc:desc="Immediate Buffer Overflow Notification"/>
            <edc:SFRFieldDef edc:cname="TXINV" edc:nzwidth="0x1" edc:desc="Transmit Data Invert"/>
            <edc:SFRFieldDef edc:cname="RXINV" edc:nzwidth="0x1" edc:desc="Receive Data Invert"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SAMPR" edc:nzwidth="0x3" edc:desc="Sample">
              <edc:SFRFieldSemantic edc:cname="16X_ARITHMETIC" edc:desc="16x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="16X_FRACTIONAL" edc:desc="16x over-sampling using fractional baudrate generation" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="8X_ARITHMETIC" edc:desc="8x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="8X_FRACTIONAL" edc:desc="8x over-sampling using fractional baudrate generation" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="3X_ARITHMETIC" edc:desc="3x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x04"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXPO" edc:nzwidth="0x2" edc:desc="Transmit Data Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="PAD[0] = TxD; PAD[1] = XCK" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="PAD[0] = TxD; PAD[2] = RTS; PAD[3] = CTS" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="PAD[0] = TxD; PAD[1] = XCK; PAD[2] = TE" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXPO" edc:nzwidth="0x2" edc:desc="Receive Data Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="SERCOM PAD[0] is used for data reception" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="SERCOM PAD[1] is used for data reception" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="SERCOM PAD[2] is used for data reception" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="SERCOM PAD[3] is used for data reception" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SAMPA" edc:nzwidth="0x2" edc:desc="Sample Adjustment">
              <edc:SFRFieldSemantic edc:cname="ADJ0" edc:desc="16x Over-sampling = 7-8-9; 8x Over-sampling = 3-4-5" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ADJ1" edc:desc="16x Over-sampling = 9-10-11; 8x Over-sampling = 4-5-6" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ADJ2" edc:desc="16x Over-sampling = 11-12-13; 8x Over-sampling = 5-6-7" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="ADJ3" edc:desc="16x Over-sampling = 13-14-15; 8x Over-sampling = 6-7-8" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FORM" edc:nzwidth="0x4" edc:desc="Frame Format">
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_NO_PARITY" edc:desc="USART frame" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_WITH_PARITY" edc:desc="USART frame with parity" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_LIN_MASTER_MODE" edc:desc="LIN Master - Break and sync generation" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_AUTO_BAUD_NO_PARITY" edc:desc="Auto-baud (LIN Slave) - break detection and auto-baud" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_AUTO_BAUD_WITH_PARITY" edc:desc="Auto-baud - break detection and auto-baud with parity" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_ISO_7816" edc:desc="ISO 7816" edc:when="(field &amp; 0xF) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMODE" edc:nzwidth="0x1" edc:desc="Communication Mode">
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Asynchronous Communication" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Synchronous Communication" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity">
              <edc:SFRFieldSemantic edc:cname="IDLE_LOW" edc:desc="TxD Change:- Rising XCK edge, RxD Sample:- Falling XCK edge" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="IDLE_HIGH" edc:desc="TxD Change:- Falling XCK edge, RxD Sample:- Rising XCK edge" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order">
              <edc:SFRFieldSemantic edc:cname="MSB" edc:desc="MSB is transmitted first" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LSB" edc:desc="LSB is transmitted first" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="------nn------nn--n--nnn-n---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3032747" edc:addr="0x40000C04">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 Bits" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 Bits" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="5_BIT" edc:desc="5 Bits" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="6_BIT" edc:desc="6 Bits" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="7_BIT" edc:desc="7 Bits" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SBMODE" edc:nzwidth="0x1" edc:desc="Stop Bit Mode">
              <edc:SFRFieldSemantic edc:cname="1_BIT" edc:desc="One Stop Bit" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="2_BIT" edc:desc="Two Stop Bits" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="COLDEN" edc:nzwidth="0x1" edc:desc="Collision Detection Enable"/>
            <edc:SFRFieldDef edc:cname="SFDE" edc:nzwidth="0x1" edc:desc="Start of Frame Detection Enable"/>
            <edc:SFRFieldDef edc:cname="ENC" edc:nzwidth="0x1" edc:desc="Encoding Format"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PMODE" edc:nzwidth="0x1" edc:desc="Parity Mode">
              <edc:SFRFieldSemantic edc:cname="EVEN" edc:desc="Even Parity" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ODD" edc:desc="Odd Parity" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TXEN" edc:nzwidth="0x1" edc:desc="Transmitter Enable"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="LINCMD" edc:nzwidth="0x2" edc:desc="LIN Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Normal USART transmission" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SOFTWARE_CONTROL_TRANSMIT_CMD" edc:desc="Break field is transmitted when DATA is written" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="AUTO_TRANSMIT_CMD" edc:desc="Break, sync and identifier are automatically transmitted when DATA is written with the identifier" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="------nn-nnn--nn----nnnn-----nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3730F07" edc:addr="0x40000C08">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="GTIME" edc:nzwidth="0x3" edc:desc="Guard Time"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="BRKLEN" edc:nzwidth="0x2" edc:desc="LIN Master Break Length">
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="Break field transmission is 13 bit times" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="17_BIT" edc:desc="Break field transmission is 17 bit times" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="21_BIT" edc:desc="Break field transmission is 21 bit times" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="26_BIT" edc:desc="Break field transmission is 26 bit times" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="HDRDLY" edc:nzwidth="0x2" edc:desc="LIN Master Header Delay">
              <edc:SFRFieldSemantic edc:cname="DELAY0" edc:desc="Delay between break and sync transmission is 1 bit time; Delay between sync and ID transmission is 1 bit time" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DELAY1" edc:desc="Delay between break and sync transmission is 4 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DELAY2" edc:desc="Delay between break and sync transmission is 8 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DELAY3" edc:desc="Delay between break and sync transmission is 14 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="INACK" edc:nzwidth="0x1" edc:desc="Inhibit Not Acknowledge"/>
            <edc:SFRFieldDef edc:cname="DSNACK" edc:nzwidth="0x1" edc:desc="Disable Successive NACK"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MAXITER" edc:nzwidth="0x3" edc:desc="Maximum Iterations"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x2" edc:desc="Data 32 Bit">
              <edc:SFRFieldSemantic edc:cname="DATA_READ_WRITE_CHSIZE" edc:desc="Data reads and writes according CTRLB.CHSIZE" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DATA_READ_CHSIZE_WRITE_32BIT" edc:desc="Data reads according CTRLB.CHSIZE and writes according 32-bit extension" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DATA_READ_32BIT_WRITE_CHSIZE" edc:desc="Data reads according 32-bit extension and writes according CTRLB.CHSIZE" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DATA_READ_WRITE_32BIT" edc:desc="Data reads and writes according 32-bit extension" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="BAUD" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x40000C0C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x10" edc:desc="Baud Rate Value"/>
            <edc:AdjustPoint edc:offset="-3"/>
            <edc:SFRFieldDef edc:cname="FP" edc:nzwidth="0x3" edc:desc="Fractional Part"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="RXPL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x40000C0E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="RXPL" edc:nzwidth="0x8" edc:desc="Receive Pulse Length"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x40000C14">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x40000C16">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x40000C18">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="--------nnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xFF" edc:addr="0x40000C1A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Parity Error"/>
            <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Frame Error"/>
            <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
            <edc:SFRFieldDef edc:cname="CTS" edc:nzwidth="0x1" edc:desc="Clear To Send"/>
            <edc:SFRFieldDef edc:cname="ISF" edc:nzwidth="0x1" edc:desc="Inconsistent Sync Field"/>
            <edc:SFRFieldDef edc:cname="COLL" edc:nzwidth="0x1" edc:desc="Collision Detected"/>
            <edc:SFRFieldDef edc:cname="TXE" edc:nzwidth="0x1" edc:desc="Transmitter Empty"/>
            <edc:SFRFieldDef edc:cname="ITER" edc:nzwidth="0x1" edc:desc="Maximum Number of Repetitions Reached"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="---------------------------rrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:addr="0x40000C1C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="RXERRCNT" edc:nzwidth="0x1" edc:desc="RXERRCNT Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="LENGTH" edc:nzwidth="0x1" edc:desc="LENGTH Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="RXERRCNT" edc:nzwidth="0x8" edc:access="rrrrrrrr" edc:por="00000000" edc:mclr="00000000" edc:addr="0x40000C20">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="RXERRCNT" edc:nzwidth="0x8" edc:desc="Receive Error Count"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="LENGTH" edc:nzwidth="0x10" edc:access="------nnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x3FF" edc:addr="0x40000C22">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x2" edc:desc="Data Length Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40000C28">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x40000C30">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM1/I2CM">
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnn-nnnnnn---n--------n--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7BF1009F" edc:addr="0x40001000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="USART_EXT_CLK" edc:desc="USART with external clock" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USART_INT_CLK" edc:desc="USART with internal clock" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SPI_SLAVE" edc:desc="SPI in slave operation" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SPI_MASTER" edc:desc="SPI in master operation" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="I2C_SLAVE" edc:desc="I2C slave operation" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="I2C_MASTER" edc:desc="I2C master operation" edc:when="(field &amp; 0x7) == 0x05"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="PINOUT" edc:nzwidth="0x1" edc:desc="Pin Usage"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SDAHOLD" edc:nzwidth="0x2" edc:desc="SDA Hold Time">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Disabled" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="75NS" edc:desc="50-100ns hold time" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="450NS" edc:desc="300-600ns hold time" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="600NS" edc:desc="400-800ns hold time" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MEXTTOEN" edc:nzwidth="0x1" edc:desc="Master SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="SEXTTOEN" edc:nzwidth="0x1" edc:desc="Slave SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="SPEED" edc:nzwidth="0x2" edc:desc="Transfer Speed">
              <edc:SFRFieldSemantic edc:cname="STANDARD_AND_FAST_MODE" edc:desc="Standard Mode(Sm) Upto 100kHz and Fast Mode(Fm) Upto 400kHz " edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="FASTPLUS_MODE" edc:desc="Fast-mode Plus Upto 1MHz" edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SCLSM" edc:nzwidth="0x1" edc:desc="SCL Clock Stretch Mode"/>
            <edc:SFRFieldDef edc:cname="INACTOUT" edc:nzwidth="0x2" edc:desc="Inactive Time-Out">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Disabled" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="55US" edc:desc="5-6 SCL Time-Out(50-60us)" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="105US" edc:desc="10-11 SCL Time-Out(100-110us)" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="205US" edc:desc="20-21 SCL Time-Out(200-210us)" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LOWTOUTEN" edc:nzwidth="0x1" edc:desc="SCL Low Timeout Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="-------------nnn------nn--------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x70300" edc:addr="0x40001004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="SMEN" edc:nzwidth="0x1" edc:desc="Smart Mode Enable"/>
            <edc:SFRFieldDef edc:cname="QCEN" edc:nzwidth="0x1" edc:desc="Quick Command Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Command"/>
            <edc:SFRFieldDef edc:cname="ACKACT" edc:nzwidth="0x1" edc:desc="Acknowledge Action"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="-------n------------------------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1000000" edc:addr="0x40001008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:AdjustPoint edc:offset="0x18"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x1" edc:desc="Data 32 Bit">
              <edc:SFRFieldSemantic edc:cname="DATA_TRANS_8BIT" edc:desc="Data transaction from/to DATA register are 8-bit" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DATA_TRANS_32BIT" edc:desc="Data transaction from/to DATA register are 32-bit" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="BAUD" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF" edc:addr="0x4000100C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x8" edc:desc="Baud Rate Value"/>
            <edc:SFRFieldDef edc:cname="BAUDLOW" edc:nzwidth="0x8" edc:desc="Baud Rate Value Low"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n-----nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x83" edc:addr="0x40001014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="MB" edc:nzwidth="0x1" edc:desc="Master On Bus Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SB" edc:nzwidth="0x1" edc:desc="Slave On Bus Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n-----nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x83" edc:addr="0x40001016">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="MB" edc:nzwidth="0x1" edc:desc="Master On Bus Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SB" edc:nzwidth="0x1" edc:desc="Slave On Bus Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n-----nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x83" edc:addr="0x40001018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="MB" edc:nzwidth="0x1" edc:desc="Master On Bus Interrupt"/>
            <edc:SFRFieldDef edc:cname="SB" edc:nzwidth="0x1" edc:desc="Slave On Bus Interrupt"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="-----nnnnnnn-nnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x7F7" edc:addr="0x4000101A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="BUSERR" edc:nzwidth="0x1" edc:desc="Bus Error"/>
            <edc:SFRFieldDef edc:cname="ARBLOST" edc:nzwidth="0x1" edc:desc="Arbitration Lost"/>
            <edc:SFRFieldDef edc:cname="RXNACK" edc:nzwidth="0x1" edc:desc="Received Not Acknowledge"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BUSSTATE" edc:nzwidth="0x2" edc:desc="Bus State"/>
            <edc:SFRFieldDef edc:cname="LOWTOUT" edc:nzwidth="0x1" edc:desc="SCL Low Timeout"/>
            <edc:SFRFieldDef edc:cname="CLKHOLD" edc:nzwidth="0x1" edc:desc="Clock Hold"/>
            <edc:SFRFieldDef edc:cname="MEXTTOUT" edc:nzwidth="0x1" edc:desc="Master SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="SEXTTOUT" edc:nzwidth="0x1" edc:desc="Slave SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="LENERR" edc:nzwidth="0x1" edc:desc="Length Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="---------------------------r-rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x17" edc:addr="0x4000101C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="SYSOP" edc:nzwidth="0x1" edc:desc="System Operation Synchronization Busy"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LENGTH" edc:nzwidth="0x1" edc:desc="Length Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="--------nnnnnnnnn-n--nnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFA7FF" edc:addr="0x40001024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0xB" edc:desc="Address Value"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x1" edc:desc="Length Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TENBITEN" edc:nzwidth="0x1" edc:desc="Ten Bit Addressing Enable"/>
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Length"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="DATA" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF" edc:addr="0x40001028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x8" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x40001030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM1/I2CS">
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-n--n-nnn-nn---n--------n--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x4BB1009F" edc:addr="0x40001000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="USART_EXT_CLK" edc:desc="USART with external clock" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USART_INT_CLK" edc:desc="USART with internal clock" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SPI_SLAVE" edc:desc="SPI in slave operation" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SPI_MASTER" edc:desc="SPI in master operation" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="I2C_SLAVE" edc:desc="I2C slave operation" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="I2C_MASTER" edc:desc="I2C master operation" edc:when="(field &amp; 0x7) == 0x05"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="PINOUT" edc:nzwidth="0x1" edc:desc="Pin Usage"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SDAHOLD" edc:nzwidth="0x2" edc:desc="SDA Hold Time">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Disabled" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="75NS" edc:desc="50-100ns hold time" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="450NS" edc:desc="300-600ns hold time" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="600NS" edc:desc="400-800ns hold time" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SEXTTOEN" edc:nzwidth="0x1" edc:desc="Slave SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="SPEED" edc:nzwidth="0x2" edc:desc="Transfer Speed">
              <edc:SFRFieldSemantic edc:cname="STANDARD_AND_FAST_MODE" edc:desc="Standard Mode(Sm) Upto 100kHz and Fast Mode(Fm) Upto 400kHz " edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="FASTPLUS_MODE" edc:desc="Fast-mode Plus Upto 1MHz" edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SCLSM" edc:nzwidth="0x1" edc:desc="SCL Clock Stretch Mode"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="LOWTOUTEN" edc:nzwidth="0x1" edc:desc="SCL Low Timeout Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="-------------nnnnn---nnn--------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7C700" edc:addr="0x40001004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="SMEN" edc:nzwidth="0x1" edc:desc="Smart Mode Enable"/>
            <edc:SFRFieldDef edc:cname="GCMD" edc:nzwidth="0x1" edc:desc="PMBus Group Command"/>
            <edc:SFRFieldDef edc:cname="AACKEN" edc:nzwidth="0x1" edc:desc="Automatic Address Acknowledge"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="AMODE" edc:nzwidth="0x2" edc:desc="Address Mode"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Command"/>
            <edc:SFRFieldDef edc:cname="ACKACT" edc:nzwidth="0x1" edc:desc="Acknowledge Action"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="-------n--------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x100000F" edc:addr="0x40001008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="SDASETUP" edc:nzwidth="0x4" edc:desc="SDA Setup Time"/>
            <edc:AdjustPoint edc:offset="0x14"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x1" edc:desc="Data 32 Bit">
              <edc:SFRFieldSemantic edc:cname="DATA_TRANS_8BIT" edc:desc="Data transaction from/to DATA register are 8-bit" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DATA_TRANS_32BIT" edc:desc="Data transaction from/to DATA register are 32-bit" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x87" edc:addr="0x40001014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="PREC" edc:nzwidth="0x1" edc:desc="Stop Received Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="AMATCH" edc:nzwidth="0x1" edc:desc="Address Match Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="DRDY" edc:nzwidth="0x1" edc:desc="Data Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x87" edc:addr="0x40001016">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="PREC" edc:nzwidth="0x1" edc:desc="Stop Received Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="AMATCH" edc:nzwidth="0x1" edc:desc="Address Match Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DRDY" edc:nzwidth="0x1" edc:desc="Data Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x87" edc:addr="0x40001018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="PREC" edc:nzwidth="0x1" edc:desc="Stop Received Interrupt"/>
            <edc:SFRFieldDef edc:cname="AMATCH" edc:nzwidth="0x1" edc:desc="Address Match Interrupt"/>
            <edc:SFRFieldDef edc:cname="DRDY" edc:nzwidth="0x1" edc:desc="Data Interrupt"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="----n-n-nn-nnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xADF" edc:addr="0x4000101A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="BUSERR" edc:nzwidth="0x1" edc:desc="Bus Error"/>
            <edc:SFRFieldDef edc:cname="COLL" edc:nzwidth="0x1" edc:desc="Transmit Collision"/>
            <edc:SFRFieldDef edc:cname="RXNACK" edc:nzwidth="0x1" edc:desc="Received Not Acknowledge"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Read/Write Direction"/>
            <edc:SFRFieldDef edc:cname="SR" edc:nzwidth="0x1" edc:desc="Repeated Start"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LOWTOUT" edc:nzwidth="0x1" edc:desc="SCL Low Timeout"/>
            <edc:SFRFieldDef edc:cname="CLKHOLD" edc:nzwidth="0x1" edc:desc="Clock Hold"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SEXTTOUT" edc:nzwidth="0x1" edc:desc="Slave SCL Low Extend Timeout"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LENERR" edc:nzwidth="0x1" edc:desc="Transaction Length Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="---------------------------r--rr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x13" edc:addr="0x4000101C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="LENGTH" edc:nzwidth="0x1" edc:desc="Length Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="LENGTH" edc:nzwidth="0x10" edc:access="-------nnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1FF" edc:addr="0x40001022">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x1" edc:desc="Data Length Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="-----nnnnnnnnnn------nnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FE07FF" edc:addr="0x40001024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="GENCEN" edc:nzwidth="0x1" edc:desc="General Call Address Enable"/>
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0xA" edc:desc="Address Value"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="ADDRMASK" edc:nzwidth="0xA" edc:desc="Address Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40001028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM1/SPIM">
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnnnnn--nn--nn-------nn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7F33019F" edc:addr="0x40001000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="USART_EXT_CLK" edc:desc="USART with external clock" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USART_INT_CLK" edc:desc="USART with internal clock" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SPI_SLAVE" edc:desc="SPI in slave operation" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SPI_MASTER" edc:desc="SPI in master operation" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="I2C_SLAVE" edc:desc="I2C slave operation" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="I2C_MASTER" edc:desc="I2C master operation" edc:when="(field &amp; 0x7) == 0x05"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="IBON" edc:nzwidth="0x1" edc:desc="Immediate Buffer Overflow Notification"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DOPO" edc:nzwidth="0x2" edc:desc="Data Out Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="DO on PAD[0], SCK on PAD[1] and SS on PAD[2]" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="DO on PAD[3], SCK on PAD[1] and SS on PAD[2]" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DIPO" edc:nzwidth="0x2" edc:desc="Data In Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="SERCOM PAD[0] is used as data input" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="SERCOM PAD[1] is used as data input" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="SERCOM PAD[2] is used as data input" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="SERCOM PAD[3] is used as data input" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FORM" edc:nzwidth="0x4" edc:desc="Frame Format">
              <edc:SFRFieldSemantic edc:cname="SPI_FRAME" edc:desc="SPI Frame" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SPI_FRAME_WITH_ADDR" edc:desc="SPI Frame with Addr" edc:when="(field &amp; 0xF) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPHA" edc:nzwidth="0x1" edc:desc="Clock Phase">
              <edc:SFRFieldSemantic edc:cname="LEADING_EDGE" edc:desc="The data is sampled on a leading SCK edge and changed on a trailing SCK edge" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TRAILING_EDGE" edc:desc="The data is sampled on a trailing SCK edge and changed on a leading SCK edge" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity">
              <edc:SFRFieldSemantic edc:cname="IDLE_LOW" edc:desc="SCK is low when idle" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="IDLE_HIGH" edc:desc="SCK is high when idle" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order">
              <edc:SFRFieldSemantic edc:cname="MSB" edc:desc="MSB is transferred first" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LSB" edc:desc="LSB is transferred first" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="--------------n-nnn---n--n---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x2E247" edc:addr="0x40001004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits" edc:when="(field &amp; 0x7) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PLOADEN" edc:nzwidth="0x1" edc:desc="Data Preload Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SSDE" edc:nzwidth="0x1" edc:desc="Slave Select Low Detect Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="MSSEN" edc:nzwidth="0x1" edc:desc="Master Slave Select Enable"/>
            <edc:SFRFieldDef edc:cname="AMODE" edc:nzwidth="0x2" edc:desc="Address Mode">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="SPI Address mask " edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="2_ADDRESSES" edc:desc="Two unique Addressess" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RANGE" edc:desc="Address Range" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="-------n------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x100003F" edc:addr="0x40001008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="ICSPACE" edc:nzwidth="0x6" edc:desc="Inter-Character Spacing"/>
            <edc:AdjustPoint edc:offset="0x12"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x1" edc:desc="Data 32 Bit">
              <edc:SFRFieldSemantic edc:cname="DATA_TRANS_8BIT" edc:desc="Transaction from and to DATA register are 8-bit" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DATA_TRANS_32BIT" edc:desc="Transaction from and to DATA register are 32-bit" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="BAUD" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4000100C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x8" edc:desc="Baud Rate Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x40001014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x40001016">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x40001018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Flag"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="----n--------n--" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x804" edc:addr="0x4000101A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="LENERR" edc:nzwidth="0x1" edc:desc="Transaction Length Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="---------------------------r-rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x17" edc:addr="0x4000101C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB Synchronization Busy"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LENGTH" edc:nzwidth="0x1" edc:desc="LENGTH Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="LENGTH" edc:nzwidth="0x10" edc:access="-------nnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1FF" edc:addr="0x40001022">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x1" edc:desc="Data Length Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="--------nnnnnnnn--------nnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF00FF" edc:addr="0x40001024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0x8" edc:desc="Address Value"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="ADDRMASK" edc:nzwidth="0x8" edc:desc="Address Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40001028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x40001030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM1/SPIS">
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnnnnn--nn--nn-------nn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7F33019F" edc:addr="0x40001000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="USART_EXT_CLK" edc:desc="USART with external clock" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USART_INT_CLK" edc:desc="USART with internal clock" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SPI_SLAVE" edc:desc="SPI in slave operation" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SPI_MASTER" edc:desc="SPI in master operation" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="I2C_SLAVE" edc:desc="I2C slave operation" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="I2C_MASTER" edc:desc="I2C master operation" edc:when="(field &amp; 0x7) == 0x05"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="IBON" edc:nzwidth="0x1" edc:desc="Immediate Buffer Overflow Notification"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DOPO" edc:nzwidth="0x2" edc:desc="Data Out Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="DO on PAD[0], SCK on PAD[1] and SS on PAD[2]" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="DO on PAD[3], SCK on PAD[1] and SS on PAD[2]" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DIPO" edc:nzwidth="0x2" edc:desc="Data In Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="SERCOM PAD[0] is used as data input" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="SERCOM PAD[1] is used as data input" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="SERCOM PAD[2] is used as data input" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="SERCOM PAD[3] is used as data input" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FORM" edc:nzwidth="0x4" edc:desc="Frame Format">
              <edc:SFRFieldSemantic edc:cname="SPI_FRAME" edc:desc="SPI Frame" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SPI_FRAME_WITH_ADDR" edc:desc="SPI Frame with Addr" edc:when="(field &amp; 0xF) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPHA" edc:nzwidth="0x1" edc:desc="Clock Phase">
              <edc:SFRFieldSemantic edc:cname="LEADING_EDGE" edc:desc="The data is sampled on a leading SCK edge and changed on a trailing SCK edge" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TRAILING_EDGE" edc:desc="The data is sampled on a trailing SCK edge and changed on a leading SCK edge" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity">
              <edc:SFRFieldSemantic edc:cname="IDLE_LOW" edc:desc="SCK is low when idle" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="IDLE_HIGH" edc:desc="SCK is high when idle" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order">
              <edc:SFRFieldSemantic edc:cname="MSB" edc:desc="MSB is transferred first" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LSB" edc:desc="LSB is transferred first" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="--------------n-nnn---n--n---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x2E247" edc:addr="0x40001004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits" edc:when="(field &amp; 0x7) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PLOADEN" edc:nzwidth="0x1" edc:desc="Data Preload Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SSDE" edc:nzwidth="0x1" edc:desc="Slave Select Low Detect Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="MSSEN" edc:nzwidth="0x1" edc:desc="Master Slave Select Enable"/>
            <edc:SFRFieldDef edc:cname="AMODE" edc:nzwidth="0x2" edc:desc="Address Mode">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="SPI Address mask " edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="2_ADDRESSES" edc:desc="Two unique Addressess" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RANGE" edc:desc="Address Range" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="-------n------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x100003F" edc:addr="0x40001008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="ICSPACE" edc:nzwidth="0x6" edc:desc="Inter-Character Spacing"/>
            <edc:AdjustPoint edc:offset="0x12"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x1" edc:desc="Data 32 Bit">
              <edc:SFRFieldSemantic edc:cname="DATA_TRANS_8BIT" edc:desc="Transaction from and to DATA register are 8-bit" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DATA_TRANS_32BIT" edc:desc="Transaction from and to DATA register are 32-bit" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="BAUD" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4000100C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x8" edc:desc="Baud Rate Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x40001014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x40001016">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x40001018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Flag"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="----n--------n--" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x804" edc:addr="0x4000101A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="LENERR" edc:nzwidth="0x1" edc:desc="Transaction Length Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="---------------------------r-rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x17" edc:addr="0x4000101C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB Synchronization Busy"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LENGTH" edc:nzwidth="0x1" edc:desc="LENGTH Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="LENGTH" edc:nzwidth="0x10" edc:access="-------nnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1FF" edc:addr="0x40001022">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x1" edc:desc="Data Length Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="--------nnnnnnnn--------nnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF00FF" edc:addr="0x40001024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0x8" edc:desc="Address Value"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="ADDRMASK" edc:nzwidth="0x8" edc:desc="Address Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40001028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x40001030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM1/USART_EXT">
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnnnnnnnnn--nnnnn--nnnn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FF3E79F" edc:addr="0x40001000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="USART_EXT_CLK" edc:desc="USART with external clock" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USART_INT_CLK" edc:desc="USART with internal clock" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SPI_SLAVE" edc:desc="SPI in slave operation" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SPI_MASTER" edc:desc="SPI in master operation" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="I2C_SLAVE" edc:desc="I2C slave operation" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="I2C_MASTER" edc:desc="I2C master operation" edc:when="(field &amp; 0x7) == 0x05"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="IBON" edc:nzwidth="0x1" edc:desc="Immediate Buffer Overflow Notification"/>
            <edc:SFRFieldDef edc:cname="TXINV" edc:nzwidth="0x1" edc:desc="Transmit Data Invert"/>
            <edc:SFRFieldDef edc:cname="RXINV" edc:nzwidth="0x1" edc:desc="Receive Data Invert"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SAMPR" edc:nzwidth="0x3" edc:desc="Sample">
              <edc:SFRFieldSemantic edc:cname="16X_ARITHMETIC" edc:desc="16x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="16X_FRACTIONAL" edc:desc="16x over-sampling using fractional baudrate generation" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="8X_ARITHMETIC" edc:desc="8x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="8X_FRACTIONAL" edc:desc="8x over-sampling using fractional baudrate generation" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="3X_ARITHMETIC" edc:desc="3x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x04"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXPO" edc:nzwidth="0x2" edc:desc="Transmit Data Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="PAD[0] = TxD; PAD[1] = XCK" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="PAD[0] = TxD; PAD[2] = RTS; PAD[3] = CTS" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="PAD[0] = TxD; PAD[1] = XCK; PAD[2] = TE" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXPO" edc:nzwidth="0x2" edc:desc="Receive Data Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="SERCOM PAD[0] is used for data reception" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="SERCOM PAD[1] is used for data reception" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="SERCOM PAD[2] is used for data reception" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="SERCOM PAD[3] is used for data reception" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SAMPA" edc:nzwidth="0x2" edc:desc="Sample Adjustment">
              <edc:SFRFieldSemantic edc:cname="ADJ0" edc:desc="16x Over-sampling = 7-8-9; 8x Over-sampling = 3-4-5" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ADJ1" edc:desc="16x Over-sampling = 9-10-11; 8x Over-sampling = 4-5-6" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ADJ2" edc:desc="16x Over-sampling = 11-12-13; 8x Over-sampling = 5-6-7" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="ADJ3" edc:desc="16x Over-sampling = 13-14-15; 8x Over-sampling = 6-7-8" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FORM" edc:nzwidth="0x4" edc:desc="Frame Format">
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_NO_PARITY" edc:desc="USART frame" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_WITH_PARITY" edc:desc="USART frame with parity" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_LIN_MASTER_MODE" edc:desc="LIN Master - Break and sync generation" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_AUTO_BAUD_NO_PARITY" edc:desc="Auto-baud (LIN Slave) - break detection and auto-baud" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_AUTO_BAUD_WITH_PARITY" edc:desc="Auto-baud - break detection and auto-baud with parity" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_ISO_7816" edc:desc="ISO 7816" edc:when="(field &amp; 0xF) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMODE" edc:nzwidth="0x1" edc:desc="Communication Mode">
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Asynchronous Communication" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Synchronous Communication" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity">
              <edc:SFRFieldSemantic edc:cname="IDLE_LOW" edc:desc="TxD Change:- Rising XCK edge, RxD Sample:- Falling XCK edge" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="IDLE_HIGH" edc:desc="TxD Change:- Falling XCK edge, RxD Sample:- Rising XCK edge" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order">
              <edc:SFRFieldSemantic edc:cname="MSB" edc:desc="MSB is transmitted first" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LSB" edc:desc="LSB is transmitted first" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="------nn------nn--n--nnn-n---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3032747" edc:addr="0x40001004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 Bits" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 Bits" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="5_BIT" edc:desc="5 Bits" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="6_BIT" edc:desc="6 Bits" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="7_BIT" edc:desc="7 Bits" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SBMODE" edc:nzwidth="0x1" edc:desc="Stop Bit Mode">
              <edc:SFRFieldSemantic edc:cname="1_BIT" edc:desc="One Stop Bit" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="2_BIT" edc:desc="Two Stop Bits" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="COLDEN" edc:nzwidth="0x1" edc:desc="Collision Detection Enable"/>
            <edc:SFRFieldDef edc:cname="SFDE" edc:nzwidth="0x1" edc:desc="Start of Frame Detection Enable"/>
            <edc:SFRFieldDef edc:cname="ENC" edc:nzwidth="0x1" edc:desc="Encoding Format"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PMODE" edc:nzwidth="0x1" edc:desc="Parity Mode">
              <edc:SFRFieldSemantic edc:cname="EVEN" edc:desc="Even Parity" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ODD" edc:desc="Odd Parity" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TXEN" edc:nzwidth="0x1" edc:desc="Transmitter Enable"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="LINCMD" edc:nzwidth="0x2" edc:desc="LIN Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Normal USART transmission" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SOFTWARE_CONTROL_TRANSMIT_CMD" edc:desc="Break field is transmitted when DATA is written" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="AUTO_TRANSMIT_CMD" edc:desc="Break, sync and identifier are automatically transmitted when DATA is written with the identifier" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="------nn-nnn--nn----nnnn-----nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3730F07" edc:addr="0x40001008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="GTIME" edc:nzwidth="0x3" edc:desc="Guard Time"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="BRKLEN" edc:nzwidth="0x2" edc:desc="LIN Master Break Length">
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="Break field transmission is 13 bit times" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="17_BIT" edc:desc="Break field transmission is 17 bit times" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="21_BIT" edc:desc="Break field transmission is 21 bit times" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="26_BIT" edc:desc="Break field transmission is 26 bit times" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="HDRDLY" edc:nzwidth="0x2" edc:desc="LIN Master Header Delay">
              <edc:SFRFieldSemantic edc:cname="DELAY0" edc:desc="Delay between break and sync transmission is 1 bit time; Delay between sync and ID transmission is 1 bit time" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DELAY1" edc:desc="Delay between break and sync transmission is 4 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DELAY2" edc:desc="Delay between break and sync transmission is 8 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DELAY3" edc:desc="Delay between break and sync transmission is 14 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="INACK" edc:nzwidth="0x1" edc:desc="Inhibit Not Acknowledge"/>
            <edc:SFRFieldDef edc:cname="DSNACK" edc:nzwidth="0x1" edc:desc="Disable Successive NACK"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MAXITER" edc:nzwidth="0x3" edc:desc="Maximum Iterations"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x2" edc:desc="Data 32 Bit">
              <edc:SFRFieldSemantic edc:cname="DATA_READ_WRITE_CHSIZE" edc:desc="Data reads and writes according CTRLB.CHSIZE" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DATA_READ_CHSIZE_WRITE_32BIT" edc:desc="Data reads according CTRLB.CHSIZE and writes according 32-bit extension" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DATA_READ_32BIT_WRITE_CHSIZE" edc:desc="Data reads according 32-bit extension and writes according CTRLB.CHSIZE" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DATA_READ_WRITE_32BIT" edc:desc="Data reads and writes according 32-bit extension" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="BAUD" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x4000100C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x10" edc:desc="Baud Rate Value"/>
            <edc:AdjustPoint edc:offset="-3"/>
            <edc:SFRFieldDef edc:cname="FP" edc:nzwidth="0x3" edc:desc="Fractional Part"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="RXPL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4000100E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="RXPL" edc:nzwidth="0x8" edc:desc="Receive Pulse Length"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x40001014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x40001016">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x40001018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="--------nnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xFF" edc:addr="0x4000101A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Parity Error"/>
            <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Frame Error"/>
            <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
            <edc:SFRFieldDef edc:cname="CTS" edc:nzwidth="0x1" edc:desc="Clear To Send"/>
            <edc:SFRFieldDef edc:cname="ISF" edc:nzwidth="0x1" edc:desc="Inconsistent Sync Field"/>
            <edc:SFRFieldDef edc:cname="COLL" edc:nzwidth="0x1" edc:desc="Collision Detected"/>
            <edc:SFRFieldDef edc:cname="TXE" edc:nzwidth="0x1" edc:desc="Transmitter Empty"/>
            <edc:SFRFieldDef edc:cname="ITER" edc:nzwidth="0x1" edc:desc="Maximum Number of Repetitions Reached"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="---------------------------rrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:addr="0x4000101C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="RXERRCNT" edc:nzwidth="0x1" edc:desc="RXERRCNT Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="LENGTH" edc:nzwidth="0x1" edc:desc="LENGTH Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="RXERRCNT" edc:nzwidth="0x8" edc:access="rrrrrrrr" edc:por="00000000" edc:mclr="00000000" edc:addr="0x40001020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="RXERRCNT" edc:nzwidth="0x8" edc:desc="Receive Error Count"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="LENGTH" edc:nzwidth="0x10" edc:access="------nnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x3FF" edc:addr="0x40001022">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x2" edc:desc="Data Length Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40001028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x40001030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM1/USART_INT">
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnnnnnnnnn--nnnnn--nnnn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FF3E79F" edc:addr="0x40001000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="USART_EXT_CLK" edc:desc="USART with external clock" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USART_INT_CLK" edc:desc="USART with internal clock" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SPI_SLAVE" edc:desc="SPI in slave operation" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SPI_MASTER" edc:desc="SPI in master operation" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="I2C_SLAVE" edc:desc="I2C slave operation" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="I2C_MASTER" edc:desc="I2C master operation" edc:when="(field &amp; 0x7) == 0x05"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="IBON" edc:nzwidth="0x1" edc:desc="Immediate Buffer Overflow Notification"/>
            <edc:SFRFieldDef edc:cname="TXINV" edc:nzwidth="0x1" edc:desc="Transmit Data Invert"/>
            <edc:SFRFieldDef edc:cname="RXINV" edc:nzwidth="0x1" edc:desc="Receive Data Invert"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SAMPR" edc:nzwidth="0x3" edc:desc="Sample">
              <edc:SFRFieldSemantic edc:cname="16X_ARITHMETIC" edc:desc="16x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="16X_FRACTIONAL" edc:desc="16x over-sampling using fractional baudrate generation" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="8X_ARITHMETIC" edc:desc="8x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="8X_FRACTIONAL" edc:desc="8x over-sampling using fractional baudrate generation" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="3X_ARITHMETIC" edc:desc="3x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x04"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXPO" edc:nzwidth="0x2" edc:desc="Transmit Data Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="PAD[0] = TxD; PAD[1] = XCK" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="PAD[0] = TxD; PAD[2] = RTS; PAD[3] = CTS" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="PAD[0] = TxD; PAD[1] = XCK; PAD[2] = TE" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXPO" edc:nzwidth="0x2" edc:desc="Receive Data Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="SERCOM PAD[0] is used for data reception" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="SERCOM PAD[1] is used for data reception" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="SERCOM PAD[2] is used for data reception" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="SERCOM PAD[3] is used for data reception" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SAMPA" edc:nzwidth="0x2" edc:desc="Sample Adjustment">
              <edc:SFRFieldSemantic edc:cname="ADJ0" edc:desc="16x Over-sampling = 7-8-9; 8x Over-sampling = 3-4-5" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ADJ1" edc:desc="16x Over-sampling = 9-10-11; 8x Over-sampling = 4-5-6" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ADJ2" edc:desc="16x Over-sampling = 11-12-13; 8x Over-sampling = 5-6-7" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="ADJ3" edc:desc="16x Over-sampling = 13-14-15; 8x Over-sampling = 6-7-8" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FORM" edc:nzwidth="0x4" edc:desc="Frame Format">
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_NO_PARITY" edc:desc="USART frame" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_WITH_PARITY" edc:desc="USART frame with parity" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_LIN_MASTER_MODE" edc:desc="LIN Master - Break and sync generation" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_AUTO_BAUD_NO_PARITY" edc:desc="Auto-baud (LIN Slave) - break detection and auto-baud" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_AUTO_BAUD_WITH_PARITY" edc:desc="Auto-baud - break detection and auto-baud with parity" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_ISO_7816" edc:desc="ISO 7816" edc:when="(field &amp; 0xF) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMODE" edc:nzwidth="0x1" edc:desc="Communication Mode">
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Asynchronous Communication" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Synchronous Communication" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity">
              <edc:SFRFieldSemantic edc:cname="IDLE_LOW" edc:desc="TxD Change:- Rising XCK edge, RxD Sample:- Falling XCK edge" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="IDLE_HIGH" edc:desc="TxD Change:- Falling XCK edge, RxD Sample:- Rising XCK edge" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order">
              <edc:SFRFieldSemantic edc:cname="MSB" edc:desc="MSB is transmitted first" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LSB" edc:desc="LSB is transmitted first" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="------nn------nn--n--nnn-n---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3032747" edc:addr="0x40001004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 Bits" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 Bits" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="5_BIT" edc:desc="5 Bits" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="6_BIT" edc:desc="6 Bits" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="7_BIT" edc:desc="7 Bits" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SBMODE" edc:nzwidth="0x1" edc:desc="Stop Bit Mode">
              <edc:SFRFieldSemantic edc:cname="1_BIT" edc:desc="One Stop Bit" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="2_BIT" edc:desc="Two Stop Bits" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="COLDEN" edc:nzwidth="0x1" edc:desc="Collision Detection Enable"/>
            <edc:SFRFieldDef edc:cname="SFDE" edc:nzwidth="0x1" edc:desc="Start of Frame Detection Enable"/>
            <edc:SFRFieldDef edc:cname="ENC" edc:nzwidth="0x1" edc:desc="Encoding Format"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PMODE" edc:nzwidth="0x1" edc:desc="Parity Mode">
              <edc:SFRFieldSemantic edc:cname="EVEN" edc:desc="Even Parity" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ODD" edc:desc="Odd Parity" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TXEN" edc:nzwidth="0x1" edc:desc="Transmitter Enable"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="LINCMD" edc:nzwidth="0x2" edc:desc="LIN Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Normal USART transmission" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SOFTWARE_CONTROL_TRANSMIT_CMD" edc:desc="Break field is transmitted when DATA is written" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="AUTO_TRANSMIT_CMD" edc:desc="Break, sync and identifier are automatically transmitted when DATA is written with the identifier" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="------nn-nnn--nn----nnnn-----nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3730F07" edc:addr="0x40001008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="GTIME" edc:nzwidth="0x3" edc:desc="Guard Time"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="BRKLEN" edc:nzwidth="0x2" edc:desc="LIN Master Break Length">
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="Break field transmission is 13 bit times" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="17_BIT" edc:desc="Break field transmission is 17 bit times" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="21_BIT" edc:desc="Break field transmission is 21 bit times" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="26_BIT" edc:desc="Break field transmission is 26 bit times" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="HDRDLY" edc:nzwidth="0x2" edc:desc="LIN Master Header Delay">
              <edc:SFRFieldSemantic edc:cname="DELAY0" edc:desc="Delay between break and sync transmission is 1 bit time; Delay between sync and ID transmission is 1 bit time" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DELAY1" edc:desc="Delay between break and sync transmission is 4 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DELAY2" edc:desc="Delay between break and sync transmission is 8 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DELAY3" edc:desc="Delay between break and sync transmission is 14 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="INACK" edc:nzwidth="0x1" edc:desc="Inhibit Not Acknowledge"/>
            <edc:SFRFieldDef edc:cname="DSNACK" edc:nzwidth="0x1" edc:desc="Disable Successive NACK"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MAXITER" edc:nzwidth="0x3" edc:desc="Maximum Iterations"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x2" edc:desc="Data 32 Bit">
              <edc:SFRFieldSemantic edc:cname="DATA_READ_WRITE_CHSIZE" edc:desc="Data reads and writes according CTRLB.CHSIZE" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DATA_READ_CHSIZE_WRITE_32BIT" edc:desc="Data reads according CTRLB.CHSIZE and writes according 32-bit extension" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DATA_READ_32BIT_WRITE_CHSIZE" edc:desc="Data reads according 32-bit extension and writes according CTRLB.CHSIZE" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DATA_READ_WRITE_32BIT" edc:desc="Data reads and writes according 32-bit extension" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="BAUD" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x4000100C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x10" edc:desc="Baud Rate Value"/>
            <edc:AdjustPoint edc:offset="-3"/>
            <edc:SFRFieldDef edc:cname="FP" edc:nzwidth="0x3" edc:desc="Fractional Part"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="RXPL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4000100E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="RXPL" edc:nzwidth="0x8" edc:desc="Receive Pulse Length"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x40001014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x40001016">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x40001018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="--------nnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xFF" edc:addr="0x4000101A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Parity Error"/>
            <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Frame Error"/>
            <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
            <edc:SFRFieldDef edc:cname="CTS" edc:nzwidth="0x1" edc:desc="Clear To Send"/>
            <edc:SFRFieldDef edc:cname="ISF" edc:nzwidth="0x1" edc:desc="Inconsistent Sync Field"/>
            <edc:SFRFieldDef edc:cname="COLL" edc:nzwidth="0x1" edc:desc="Collision Detected"/>
            <edc:SFRFieldDef edc:cname="TXE" edc:nzwidth="0x1" edc:desc="Transmitter Empty"/>
            <edc:SFRFieldDef edc:cname="ITER" edc:nzwidth="0x1" edc:desc="Maximum Number of Repetitions Reached"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="---------------------------rrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:addr="0x4000101C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="RXERRCNT" edc:nzwidth="0x1" edc:desc="RXERRCNT Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="LENGTH" edc:nzwidth="0x1" edc:desc="LENGTH Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="RXERRCNT" edc:nzwidth="0x8" edc:access="rrrrrrrr" edc:por="00000000" edc:mclr="00000000" edc:addr="0x40001020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="RXERRCNT" edc:nzwidth="0x8" edc:desc="Receive Error Count"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="LENGTH" edc:nzwidth="0x10" edc:access="------nnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x3FF" edc:addr="0x40001022">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x2" edc:desc="Data Length Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40001028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x40001030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM2/I2CM">
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnn-nnnnnn---n--------n--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7BF1009F" edc:addr="0x42000400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="USART_EXT_CLK" edc:desc="USART with external clock" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USART_INT_CLK" edc:desc="USART with internal clock" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SPI_SLAVE" edc:desc="SPI in slave operation" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SPI_MASTER" edc:desc="SPI in master operation" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="I2C_SLAVE" edc:desc="I2C slave operation" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="I2C_MASTER" edc:desc="I2C master operation" edc:when="(field &amp; 0x7) == 0x05"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="PINOUT" edc:nzwidth="0x1" edc:desc="Pin Usage"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SDAHOLD" edc:nzwidth="0x2" edc:desc="SDA Hold Time">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Disabled" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="75NS" edc:desc="50-100ns hold time" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="450NS" edc:desc="300-600ns hold time" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="600NS" edc:desc="400-800ns hold time" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MEXTTOEN" edc:nzwidth="0x1" edc:desc="Master SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="SEXTTOEN" edc:nzwidth="0x1" edc:desc="Slave SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="SPEED" edc:nzwidth="0x2" edc:desc="Transfer Speed">
              <edc:SFRFieldSemantic edc:cname="STANDARD_AND_FAST_MODE" edc:desc="Standard Mode(Sm) Upto 100kHz and Fast Mode(Fm) Upto 400kHz " edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="FASTPLUS_MODE" edc:desc="Fast-mode Plus Upto 1MHz" edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SCLSM" edc:nzwidth="0x1" edc:desc="SCL Clock Stretch Mode"/>
            <edc:SFRFieldDef edc:cname="INACTOUT" edc:nzwidth="0x2" edc:desc="Inactive Time-Out">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Disabled" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="55US" edc:desc="5-6 SCL Time-Out(50-60us)" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="105US" edc:desc="10-11 SCL Time-Out(100-110us)" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="205US" edc:desc="20-21 SCL Time-Out(200-210us)" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LOWTOUTEN" edc:nzwidth="0x1" edc:desc="SCL Low Timeout Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="-------------nnn------nn--------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x70300" edc:addr="0x42000404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="SMEN" edc:nzwidth="0x1" edc:desc="Smart Mode Enable"/>
            <edc:SFRFieldDef edc:cname="QCEN" edc:nzwidth="0x1" edc:desc="Quick Command Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Command"/>
            <edc:SFRFieldDef edc:cname="ACKACT" edc:nzwidth="0x1" edc:desc="Acknowledge Action"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="-------n------------------------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1000000" edc:addr="0x42000408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:AdjustPoint edc:offset="0x18"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x1" edc:desc="Data 32 Bit">
              <edc:SFRFieldSemantic edc:cname="DATA_TRANS_8BIT" edc:desc="Data transaction from/to DATA register are 8-bit" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DATA_TRANS_32BIT" edc:desc="Data transaction from/to DATA register are 32-bit" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="BAUD" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF" edc:addr="0x4200040C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x8" edc:desc="Baud Rate Value"/>
            <edc:SFRFieldDef edc:cname="BAUDLOW" edc:nzwidth="0x8" edc:desc="Baud Rate Value Low"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n-----nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x83" edc:addr="0x42000414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="MB" edc:nzwidth="0x1" edc:desc="Master On Bus Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SB" edc:nzwidth="0x1" edc:desc="Slave On Bus Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n-----nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x83" edc:addr="0x42000416">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="MB" edc:nzwidth="0x1" edc:desc="Master On Bus Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SB" edc:nzwidth="0x1" edc:desc="Slave On Bus Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n-----nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x83" edc:addr="0x42000418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="MB" edc:nzwidth="0x1" edc:desc="Master On Bus Interrupt"/>
            <edc:SFRFieldDef edc:cname="SB" edc:nzwidth="0x1" edc:desc="Slave On Bus Interrupt"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="-----nnnnnnn-nnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x7F7" edc:addr="0x4200041A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="BUSERR" edc:nzwidth="0x1" edc:desc="Bus Error"/>
            <edc:SFRFieldDef edc:cname="ARBLOST" edc:nzwidth="0x1" edc:desc="Arbitration Lost"/>
            <edc:SFRFieldDef edc:cname="RXNACK" edc:nzwidth="0x1" edc:desc="Received Not Acknowledge"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BUSSTATE" edc:nzwidth="0x2" edc:desc="Bus State"/>
            <edc:SFRFieldDef edc:cname="LOWTOUT" edc:nzwidth="0x1" edc:desc="SCL Low Timeout"/>
            <edc:SFRFieldDef edc:cname="CLKHOLD" edc:nzwidth="0x1" edc:desc="Clock Hold"/>
            <edc:SFRFieldDef edc:cname="MEXTTOUT" edc:nzwidth="0x1" edc:desc="Master SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="SEXTTOUT" edc:nzwidth="0x1" edc:desc="Slave SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="LENERR" edc:nzwidth="0x1" edc:desc="Length Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="---------------------------r-rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x17" edc:addr="0x4200041C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="SYSOP" edc:nzwidth="0x1" edc:desc="System Operation Synchronization Busy"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LENGTH" edc:nzwidth="0x1" edc:desc="Length Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="--------nnnnnnnnn-n--nnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFA7FF" edc:addr="0x42000424">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0xB" edc:desc="Address Value"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x1" edc:desc="Length Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TENBITEN" edc:nzwidth="0x1" edc:desc="Ten Bit Addressing Enable"/>
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Length"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="DATA" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF" edc:addr="0x42000428">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x8" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x42000430">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM2/I2CS">
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-n--n-nnn-nn---n--------n--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x4BB1009F" edc:addr="0x42000400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="USART_EXT_CLK" edc:desc="USART with external clock" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USART_INT_CLK" edc:desc="USART with internal clock" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SPI_SLAVE" edc:desc="SPI in slave operation" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SPI_MASTER" edc:desc="SPI in master operation" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="I2C_SLAVE" edc:desc="I2C slave operation" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="I2C_MASTER" edc:desc="I2C master operation" edc:when="(field &amp; 0x7) == 0x05"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="PINOUT" edc:nzwidth="0x1" edc:desc="Pin Usage"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SDAHOLD" edc:nzwidth="0x2" edc:desc="SDA Hold Time">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Disabled" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="75NS" edc:desc="50-100ns hold time" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="450NS" edc:desc="300-600ns hold time" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="600NS" edc:desc="400-800ns hold time" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SEXTTOEN" edc:nzwidth="0x1" edc:desc="Slave SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="SPEED" edc:nzwidth="0x2" edc:desc="Transfer Speed">
              <edc:SFRFieldSemantic edc:cname="STANDARD_AND_FAST_MODE" edc:desc="Standard Mode(Sm) Upto 100kHz and Fast Mode(Fm) Upto 400kHz " edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="FASTPLUS_MODE" edc:desc="Fast-mode Plus Upto 1MHz" edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SCLSM" edc:nzwidth="0x1" edc:desc="SCL Clock Stretch Mode"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="LOWTOUTEN" edc:nzwidth="0x1" edc:desc="SCL Low Timeout Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="-------------nnnnn---nnn--------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7C700" edc:addr="0x42000404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="SMEN" edc:nzwidth="0x1" edc:desc="Smart Mode Enable"/>
            <edc:SFRFieldDef edc:cname="GCMD" edc:nzwidth="0x1" edc:desc="PMBus Group Command"/>
            <edc:SFRFieldDef edc:cname="AACKEN" edc:nzwidth="0x1" edc:desc="Automatic Address Acknowledge"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="AMODE" edc:nzwidth="0x2" edc:desc="Address Mode"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Command"/>
            <edc:SFRFieldDef edc:cname="ACKACT" edc:nzwidth="0x1" edc:desc="Acknowledge Action"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="-------n--------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x100000F" edc:addr="0x42000408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="SDASETUP" edc:nzwidth="0x4" edc:desc="SDA Setup Time"/>
            <edc:AdjustPoint edc:offset="0x14"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x1" edc:desc="Data 32 Bit">
              <edc:SFRFieldSemantic edc:cname="DATA_TRANS_8BIT" edc:desc="Data transaction from/to DATA register are 8-bit" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DATA_TRANS_32BIT" edc:desc="Data transaction from/to DATA register are 32-bit" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x87" edc:addr="0x42000414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="PREC" edc:nzwidth="0x1" edc:desc="Stop Received Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="AMATCH" edc:nzwidth="0x1" edc:desc="Address Match Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="DRDY" edc:nzwidth="0x1" edc:desc="Data Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x87" edc:addr="0x42000416">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="PREC" edc:nzwidth="0x1" edc:desc="Stop Received Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="AMATCH" edc:nzwidth="0x1" edc:desc="Address Match Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DRDY" edc:nzwidth="0x1" edc:desc="Data Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x87" edc:addr="0x42000418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="PREC" edc:nzwidth="0x1" edc:desc="Stop Received Interrupt"/>
            <edc:SFRFieldDef edc:cname="AMATCH" edc:nzwidth="0x1" edc:desc="Address Match Interrupt"/>
            <edc:SFRFieldDef edc:cname="DRDY" edc:nzwidth="0x1" edc:desc="Data Interrupt"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="----n-n-nn-nnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xADF" edc:addr="0x4200041A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="BUSERR" edc:nzwidth="0x1" edc:desc="Bus Error"/>
            <edc:SFRFieldDef edc:cname="COLL" edc:nzwidth="0x1" edc:desc="Transmit Collision"/>
            <edc:SFRFieldDef edc:cname="RXNACK" edc:nzwidth="0x1" edc:desc="Received Not Acknowledge"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Read/Write Direction"/>
            <edc:SFRFieldDef edc:cname="SR" edc:nzwidth="0x1" edc:desc="Repeated Start"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LOWTOUT" edc:nzwidth="0x1" edc:desc="SCL Low Timeout"/>
            <edc:SFRFieldDef edc:cname="CLKHOLD" edc:nzwidth="0x1" edc:desc="Clock Hold"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SEXTTOUT" edc:nzwidth="0x1" edc:desc="Slave SCL Low Extend Timeout"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LENERR" edc:nzwidth="0x1" edc:desc="Transaction Length Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="---------------------------r--rr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x13" edc:addr="0x4200041C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="LENGTH" edc:nzwidth="0x1" edc:desc="Length Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="LENGTH" edc:nzwidth="0x10" edc:access="-------nnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1FF" edc:addr="0x42000422">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x1" edc:desc="Data Length Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="-----nnnnnnnnnn------nnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FE07FF" edc:addr="0x42000424">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="GENCEN" edc:nzwidth="0x1" edc:desc="General Call Address Enable"/>
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0xA" edc:desc="Address Value"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="ADDRMASK" edc:nzwidth="0xA" edc:desc="Address Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42000428">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM2/SPIM">
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnnnnn--nn--nn-------nn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7F33019F" edc:addr="0x42000400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="USART_EXT_CLK" edc:desc="USART with external clock" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USART_INT_CLK" edc:desc="USART with internal clock" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SPI_SLAVE" edc:desc="SPI in slave operation" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SPI_MASTER" edc:desc="SPI in master operation" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="I2C_SLAVE" edc:desc="I2C slave operation" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="I2C_MASTER" edc:desc="I2C master operation" edc:when="(field &amp; 0x7) == 0x05"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="IBON" edc:nzwidth="0x1" edc:desc="Immediate Buffer Overflow Notification"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DOPO" edc:nzwidth="0x2" edc:desc="Data Out Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="DO on PAD[0], SCK on PAD[1] and SS on PAD[2]" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="DO on PAD[3], SCK on PAD[1] and SS on PAD[2]" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DIPO" edc:nzwidth="0x2" edc:desc="Data In Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="SERCOM PAD[0] is used as data input" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="SERCOM PAD[1] is used as data input" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="SERCOM PAD[2] is used as data input" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="SERCOM PAD[3] is used as data input" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FORM" edc:nzwidth="0x4" edc:desc="Frame Format">
              <edc:SFRFieldSemantic edc:cname="SPI_FRAME" edc:desc="SPI Frame" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SPI_FRAME_WITH_ADDR" edc:desc="SPI Frame with Addr" edc:when="(field &amp; 0xF) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPHA" edc:nzwidth="0x1" edc:desc="Clock Phase">
              <edc:SFRFieldSemantic edc:cname="LEADING_EDGE" edc:desc="The data is sampled on a leading SCK edge and changed on a trailing SCK edge" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TRAILING_EDGE" edc:desc="The data is sampled on a trailing SCK edge and changed on a leading SCK edge" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity">
              <edc:SFRFieldSemantic edc:cname="IDLE_LOW" edc:desc="SCK is low when idle" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="IDLE_HIGH" edc:desc="SCK is high when idle" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order">
              <edc:SFRFieldSemantic edc:cname="MSB" edc:desc="MSB is transferred first" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LSB" edc:desc="LSB is transferred first" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="--------------n-nnn---n--n---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x2E247" edc:addr="0x42000404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits" edc:when="(field &amp; 0x7) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PLOADEN" edc:nzwidth="0x1" edc:desc="Data Preload Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SSDE" edc:nzwidth="0x1" edc:desc="Slave Select Low Detect Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="MSSEN" edc:nzwidth="0x1" edc:desc="Master Slave Select Enable"/>
            <edc:SFRFieldDef edc:cname="AMODE" edc:nzwidth="0x2" edc:desc="Address Mode">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="SPI Address mask " edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="2_ADDRESSES" edc:desc="Two unique Addressess" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RANGE" edc:desc="Address Range" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="-------n------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x100003F" edc:addr="0x42000408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="ICSPACE" edc:nzwidth="0x6" edc:desc="Inter-Character Spacing"/>
            <edc:AdjustPoint edc:offset="0x12"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x1" edc:desc="Data 32 Bit">
              <edc:SFRFieldSemantic edc:cname="DATA_TRANS_8BIT" edc:desc="Transaction from and to DATA register are 8-bit" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DATA_TRANS_32BIT" edc:desc="Transaction from and to DATA register are 32-bit" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="BAUD" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4200040C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x8" edc:desc="Baud Rate Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42000414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42000416">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42000418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Flag"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="----n--------n--" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x804" edc:addr="0x4200041A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="LENERR" edc:nzwidth="0x1" edc:desc="Transaction Length Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="---------------------------r-rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x17" edc:addr="0x4200041C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB Synchronization Busy"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LENGTH" edc:nzwidth="0x1" edc:desc="LENGTH Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="LENGTH" edc:nzwidth="0x10" edc:access="-------nnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1FF" edc:addr="0x42000422">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x1" edc:desc="Data Length Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="--------nnnnnnnn--------nnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF00FF" edc:addr="0x42000424">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0x8" edc:desc="Address Value"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="ADDRMASK" edc:nzwidth="0x8" edc:desc="Address Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42000428">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x42000430">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM2/SPIS">
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnnnnn--nn--nn-------nn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7F33019F" edc:addr="0x42000400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="USART_EXT_CLK" edc:desc="USART with external clock" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USART_INT_CLK" edc:desc="USART with internal clock" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SPI_SLAVE" edc:desc="SPI in slave operation" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SPI_MASTER" edc:desc="SPI in master operation" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="I2C_SLAVE" edc:desc="I2C slave operation" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="I2C_MASTER" edc:desc="I2C master operation" edc:when="(field &amp; 0x7) == 0x05"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="IBON" edc:nzwidth="0x1" edc:desc="Immediate Buffer Overflow Notification"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DOPO" edc:nzwidth="0x2" edc:desc="Data Out Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="DO on PAD[0], SCK on PAD[1] and SS on PAD[2]" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="DO on PAD[3], SCK on PAD[1] and SS on PAD[2]" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DIPO" edc:nzwidth="0x2" edc:desc="Data In Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="SERCOM PAD[0] is used as data input" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="SERCOM PAD[1] is used as data input" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="SERCOM PAD[2] is used as data input" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="SERCOM PAD[3] is used as data input" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FORM" edc:nzwidth="0x4" edc:desc="Frame Format">
              <edc:SFRFieldSemantic edc:cname="SPI_FRAME" edc:desc="SPI Frame" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SPI_FRAME_WITH_ADDR" edc:desc="SPI Frame with Addr" edc:when="(field &amp; 0xF) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPHA" edc:nzwidth="0x1" edc:desc="Clock Phase">
              <edc:SFRFieldSemantic edc:cname="LEADING_EDGE" edc:desc="The data is sampled on a leading SCK edge and changed on a trailing SCK edge" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TRAILING_EDGE" edc:desc="The data is sampled on a trailing SCK edge and changed on a leading SCK edge" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity">
              <edc:SFRFieldSemantic edc:cname="IDLE_LOW" edc:desc="SCK is low when idle" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="IDLE_HIGH" edc:desc="SCK is high when idle" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order">
              <edc:SFRFieldSemantic edc:cname="MSB" edc:desc="MSB is transferred first" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LSB" edc:desc="LSB is transferred first" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="--------------n-nnn---n--n---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x2E247" edc:addr="0x42000404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits" edc:when="(field &amp; 0x7) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PLOADEN" edc:nzwidth="0x1" edc:desc="Data Preload Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SSDE" edc:nzwidth="0x1" edc:desc="Slave Select Low Detect Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="MSSEN" edc:nzwidth="0x1" edc:desc="Master Slave Select Enable"/>
            <edc:SFRFieldDef edc:cname="AMODE" edc:nzwidth="0x2" edc:desc="Address Mode">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="SPI Address mask " edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="2_ADDRESSES" edc:desc="Two unique Addressess" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RANGE" edc:desc="Address Range" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="-------n------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x100003F" edc:addr="0x42000408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="ICSPACE" edc:nzwidth="0x6" edc:desc="Inter-Character Spacing"/>
            <edc:AdjustPoint edc:offset="0x12"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x1" edc:desc="Data 32 Bit">
              <edc:SFRFieldSemantic edc:cname="DATA_TRANS_8BIT" edc:desc="Transaction from and to DATA register are 8-bit" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DATA_TRANS_32BIT" edc:desc="Transaction from and to DATA register are 32-bit" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="BAUD" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4200040C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x8" edc:desc="Baud Rate Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42000414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42000416">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42000418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Flag"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="----n--------n--" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x804" edc:addr="0x4200041A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="LENERR" edc:nzwidth="0x1" edc:desc="Transaction Length Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="---------------------------r-rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x17" edc:addr="0x4200041C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB Synchronization Busy"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LENGTH" edc:nzwidth="0x1" edc:desc="LENGTH Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="LENGTH" edc:nzwidth="0x10" edc:access="-------nnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1FF" edc:addr="0x42000422">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x1" edc:desc="Data Length Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="--------nnnnnnnn--------nnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF00FF" edc:addr="0x42000424">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0x8" edc:desc="Address Value"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="ADDRMASK" edc:nzwidth="0x8" edc:desc="Address Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42000428">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x42000430">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM2/USART_EXT">
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnnnnnnnnn--nnnnn--nnnn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FF3E79F" edc:addr="0x42000400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="USART_EXT_CLK" edc:desc="USART with external clock" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USART_INT_CLK" edc:desc="USART with internal clock" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SPI_SLAVE" edc:desc="SPI in slave operation" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SPI_MASTER" edc:desc="SPI in master operation" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="I2C_SLAVE" edc:desc="I2C slave operation" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="I2C_MASTER" edc:desc="I2C master operation" edc:when="(field &amp; 0x7) == 0x05"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="IBON" edc:nzwidth="0x1" edc:desc="Immediate Buffer Overflow Notification"/>
            <edc:SFRFieldDef edc:cname="TXINV" edc:nzwidth="0x1" edc:desc="Transmit Data Invert"/>
            <edc:SFRFieldDef edc:cname="RXINV" edc:nzwidth="0x1" edc:desc="Receive Data Invert"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SAMPR" edc:nzwidth="0x3" edc:desc="Sample">
              <edc:SFRFieldSemantic edc:cname="16X_ARITHMETIC" edc:desc="16x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="16X_FRACTIONAL" edc:desc="16x over-sampling using fractional baudrate generation" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="8X_ARITHMETIC" edc:desc="8x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="8X_FRACTIONAL" edc:desc="8x over-sampling using fractional baudrate generation" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="3X_ARITHMETIC" edc:desc="3x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x04"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXPO" edc:nzwidth="0x2" edc:desc="Transmit Data Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="PAD[0] = TxD; PAD[1] = XCK" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="PAD[0] = TxD; PAD[2] = RTS; PAD[3] = CTS" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="PAD[0] = TxD; PAD[1] = XCK; PAD[2] = TE" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXPO" edc:nzwidth="0x2" edc:desc="Receive Data Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="SERCOM PAD[0] is used for data reception" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="SERCOM PAD[1] is used for data reception" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="SERCOM PAD[2] is used for data reception" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="SERCOM PAD[3] is used for data reception" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SAMPA" edc:nzwidth="0x2" edc:desc="Sample Adjustment">
              <edc:SFRFieldSemantic edc:cname="ADJ0" edc:desc="16x Over-sampling = 7-8-9; 8x Over-sampling = 3-4-5" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ADJ1" edc:desc="16x Over-sampling = 9-10-11; 8x Over-sampling = 4-5-6" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ADJ2" edc:desc="16x Over-sampling = 11-12-13; 8x Over-sampling = 5-6-7" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="ADJ3" edc:desc="16x Over-sampling = 13-14-15; 8x Over-sampling = 6-7-8" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FORM" edc:nzwidth="0x4" edc:desc="Frame Format">
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_NO_PARITY" edc:desc="USART frame" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_WITH_PARITY" edc:desc="USART frame with parity" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_LIN_MASTER_MODE" edc:desc="LIN Master - Break and sync generation" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_AUTO_BAUD_NO_PARITY" edc:desc="Auto-baud (LIN Slave) - break detection and auto-baud" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_AUTO_BAUD_WITH_PARITY" edc:desc="Auto-baud - break detection and auto-baud with parity" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_ISO_7816" edc:desc="ISO 7816" edc:when="(field &amp; 0xF) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMODE" edc:nzwidth="0x1" edc:desc="Communication Mode">
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Asynchronous Communication" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Synchronous Communication" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity">
              <edc:SFRFieldSemantic edc:cname="IDLE_LOW" edc:desc="TxD Change:- Rising XCK edge, RxD Sample:- Falling XCK edge" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="IDLE_HIGH" edc:desc="TxD Change:- Falling XCK edge, RxD Sample:- Rising XCK edge" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order">
              <edc:SFRFieldSemantic edc:cname="MSB" edc:desc="MSB is transmitted first" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LSB" edc:desc="LSB is transmitted first" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="------nn------nn--n--nnn-n---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3032747" edc:addr="0x42000404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 Bits" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 Bits" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="5_BIT" edc:desc="5 Bits" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="6_BIT" edc:desc="6 Bits" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="7_BIT" edc:desc="7 Bits" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SBMODE" edc:nzwidth="0x1" edc:desc="Stop Bit Mode">
              <edc:SFRFieldSemantic edc:cname="1_BIT" edc:desc="One Stop Bit" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="2_BIT" edc:desc="Two Stop Bits" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="COLDEN" edc:nzwidth="0x1" edc:desc="Collision Detection Enable"/>
            <edc:SFRFieldDef edc:cname="SFDE" edc:nzwidth="0x1" edc:desc="Start of Frame Detection Enable"/>
            <edc:SFRFieldDef edc:cname="ENC" edc:nzwidth="0x1" edc:desc="Encoding Format"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PMODE" edc:nzwidth="0x1" edc:desc="Parity Mode">
              <edc:SFRFieldSemantic edc:cname="EVEN" edc:desc="Even Parity" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ODD" edc:desc="Odd Parity" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TXEN" edc:nzwidth="0x1" edc:desc="Transmitter Enable"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="LINCMD" edc:nzwidth="0x2" edc:desc="LIN Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Normal USART transmission" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SOFTWARE_CONTROL_TRANSMIT_CMD" edc:desc="Break field is transmitted when DATA is written" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="AUTO_TRANSMIT_CMD" edc:desc="Break, sync and identifier are automatically transmitted when DATA is written with the identifier" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="------nn-nnn--nn----nnnn-----nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3730F07" edc:addr="0x42000408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="GTIME" edc:nzwidth="0x3" edc:desc="Guard Time"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="BRKLEN" edc:nzwidth="0x2" edc:desc="LIN Master Break Length">
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="Break field transmission is 13 bit times" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="17_BIT" edc:desc="Break field transmission is 17 bit times" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="21_BIT" edc:desc="Break field transmission is 21 bit times" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="26_BIT" edc:desc="Break field transmission is 26 bit times" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="HDRDLY" edc:nzwidth="0x2" edc:desc="LIN Master Header Delay">
              <edc:SFRFieldSemantic edc:cname="DELAY0" edc:desc="Delay between break and sync transmission is 1 bit time; Delay between sync and ID transmission is 1 bit time" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DELAY1" edc:desc="Delay between break and sync transmission is 4 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DELAY2" edc:desc="Delay between break and sync transmission is 8 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DELAY3" edc:desc="Delay between break and sync transmission is 14 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="INACK" edc:nzwidth="0x1" edc:desc="Inhibit Not Acknowledge"/>
            <edc:SFRFieldDef edc:cname="DSNACK" edc:nzwidth="0x1" edc:desc="Disable Successive NACK"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MAXITER" edc:nzwidth="0x3" edc:desc="Maximum Iterations"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x2" edc:desc="Data 32 Bit">
              <edc:SFRFieldSemantic edc:cname="DATA_READ_WRITE_CHSIZE" edc:desc="Data reads and writes according CTRLB.CHSIZE" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DATA_READ_CHSIZE_WRITE_32BIT" edc:desc="Data reads according CTRLB.CHSIZE and writes according 32-bit extension" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DATA_READ_32BIT_WRITE_CHSIZE" edc:desc="Data reads according 32-bit extension and writes according CTRLB.CHSIZE" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DATA_READ_WRITE_32BIT" edc:desc="Data reads and writes according 32-bit extension" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="BAUD" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x4200040C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x10" edc:desc="Baud Rate Value"/>
            <edc:AdjustPoint edc:offset="-3"/>
            <edc:SFRFieldDef edc:cname="FP" edc:nzwidth="0x3" edc:desc="Fractional Part"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="RXPL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4200040E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="RXPL" edc:nzwidth="0x8" edc:desc="Receive Pulse Length"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42000414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42000416">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42000418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="--------nnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xFF" edc:addr="0x4200041A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Parity Error"/>
            <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Frame Error"/>
            <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
            <edc:SFRFieldDef edc:cname="CTS" edc:nzwidth="0x1" edc:desc="Clear To Send"/>
            <edc:SFRFieldDef edc:cname="ISF" edc:nzwidth="0x1" edc:desc="Inconsistent Sync Field"/>
            <edc:SFRFieldDef edc:cname="COLL" edc:nzwidth="0x1" edc:desc="Collision Detected"/>
            <edc:SFRFieldDef edc:cname="TXE" edc:nzwidth="0x1" edc:desc="Transmitter Empty"/>
            <edc:SFRFieldDef edc:cname="ITER" edc:nzwidth="0x1" edc:desc="Maximum Number of Repetitions Reached"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="---------------------------rrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:addr="0x4200041C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="RXERRCNT" edc:nzwidth="0x1" edc:desc="RXERRCNT Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="LENGTH" edc:nzwidth="0x1" edc:desc="LENGTH Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="RXERRCNT" edc:nzwidth="0x8" edc:access="rrrrrrrr" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42000420">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="RXERRCNT" edc:nzwidth="0x8" edc:desc="Receive Error Count"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="LENGTH" edc:nzwidth="0x10" edc:access="------nnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x3FF" edc:addr="0x42000422">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x2" edc:desc="Data Length Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42000428">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x42000430">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM2/USART_INT">
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnnnnnnnnn--nnnnn--nnnn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FF3E79F" edc:addr="0x42000400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="USART_EXT_CLK" edc:desc="USART with external clock" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USART_INT_CLK" edc:desc="USART with internal clock" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SPI_SLAVE" edc:desc="SPI in slave operation" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SPI_MASTER" edc:desc="SPI in master operation" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="I2C_SLAVE" edc:desc="I2C slave operation" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="I2C_MASTER" edc:desc="I2C master operation" edc:when="(field &amp; 0x7) == 0x05"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="IBON" edc:nzwidth="0x1" edc:desc="Immediate Buffer Overflow Notification"/>
            <edc:SFRFieldDef edc:cname="TXINV" edc:nzwidth="0x1" edc:desc="Transmit Data Invert"/>
            <edc:SFRFieldDef edc:cname="RXINV" edc:nzwidth="0x1" edc:desc="Receive Data Invert"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SAMPR" edc:nzwidth="0x3" edc:desc="Sample">
              <edc:SFRFieldSemantic edc:cname="16X_ARITHMETIC" edc:desc="16x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="16X_FRACTIONAL" edc:desc="16x over-sampling using fractional baudrate generation" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="8X_ARITHMETIC" edc:desc="8x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="8X_FRACTIONAL" edc:desc="8x over-sampling using fractional baudrate generation" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="3X_ARITHMETIC" edc:desc="3x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x04"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXPO" edc:nzwidth="0x2" edc:desc="Transmit Data Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="PAD[0] = TxD; PAD[1] = XCK" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="PAD[0] = TxD; PAD[2] = RTS; PAD[3] = CTS" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="PAD[0] = TxD; PAD[1] = XCK; PAD[2] = TE" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXPO" edc:nzwidth="0x2" edc:desc="Receive Data Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="SERCOM PAD[0] is used for data reception" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="SERCOM PAD[1] is used for data reception" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="SERCOM PAD[2] is used for data reception" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="SERCOM PAD[3] is used for data reception" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SAMPA" edc:nzwidth="0x2" edc:desc="Sample Adjustment">
              <edc:SFRFieldSemantic edc:cname="ADJ0" edc:desc="16x Over-sampling = 7-8-9; 8x Over-sampling = 3-4-5" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ADJ1" edc:desc="16x Over-sampling = 9-10-11; 8x Over-sampling = 4-5-6" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ADJ2" edc:desc="16x Over-sampling = 11-12-13; 8x Over-sampling = 5-6-7" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="ADJ3" edc:desc="16x Over-sampling = 13-14-15; 8x Over-sampling = 6-7-8" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FORM" edc:nzwidth="0x4" edc:desc="Frame Format">
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_NO_PARITY" edc:desc="USART frame" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_WITH_PARITY" edc:desc="USART frame with parity" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_LIN_MASTER_MODE" edc:desc="LIN Master - Break and sync generation" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_AUTO_BAUD_NO_PARITY" edc:desc="Auto-baud (LIN Slave) - break detection and auto-baud" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_AUTO_BAUD_WITH_PARITY" edc:desc="Auto-baud - break detection and auto-baud with parity" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_ISO_7816" edc:desc="ISO 7816" edc:when="(field &amp; 0xF) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMODE" edc:nzwidth="0x1" edc:desc="Communication Mode">
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Asynchronous Communication" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Synchronous Communication" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity">
              <edc:SFRFieldSemantic edc:cname="IDLE_LOW" edc:desc="TxD Change:- Rising XCK edge, RxD Sample:- Falling XCK edge" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="IDLE_HIGH" edc:desc="TxD Change:- Falling XCK edge, RxD Sample:- Rising XCK edge" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order">
              <edc:SFRFieldSemantic edc:cname="MSB" edc:desc="MSB is transmitted first" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LSB" edc:desc="LSB is transmitted first" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="------nn------nn--n--nnn-n---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3032747" edc:addr="0x42000404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 Bits" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 Bits" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="5_BIT" edc:desc="5 Bits" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="6_BIT" edc:desc="6 Bits" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="7_BIT" edc:desc="7 Bits" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SBMODE" edc:nzwidth="0x1" edc:desc="Stop Bit Mode">
              <edc:SFRFieldSemantic edc:cname="1_BIT" edc:desc="One Stop Bit" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="2_BIT" edc:desc="Two Stop Bits" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="COLDEN" edc:nzwidth="0x1" edc:desc="Collision Detection Enable"/>
            <edc:SFRFieldDef edc:cname="SFDE" edc:nzwidth="0x1" edc:desc="Start of Frame Detection Enable"/>
            <edc:SFRFieldDef edc:cname="ENC" edc:nzwidth="0x1" edc:desc="Encoding Format"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PMODE" edc:nzwidth="0x1" edc:desc="Parity Mode">
              <edc:SFRFieldSemantic edc:cname="EVEN" edc:desc="Even Parity" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ODD" edc:desc="Odd Parity" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TXEN" edc:nzwidth="0x1" edc:desc="Transmitter Enable"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="LINCMD" edc:nzwidth="0x2" edc:desc="LIN Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Normal USART transmission" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SOFTWARE_CONTROL_TRANSMIT_CMD" edc:desc="Break field is transmitted when DATA is written" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="AUTO_TRANSMIT_CMD" edc:desc="Break, sync and identifier are automatically transmitted when DATA is written with the identifier" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="------nn-nnn--nn----nnnn-----nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3730F07" edc:addr="0x42000408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="GTIME" edc:nzwidth="0x3" edc:desc="Guard Time"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="BRKLEN" edc:nzwidth="0x2" edc:desc="LIN Master Break Length">
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="Break field transmission is 13 bit times" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="17_BIT" edc:desc="Break field transmission is 17 bit times" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="21_BIT" edc:desc="Break field transmission is 21 bit times" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="26_BIT" edc:desc="Break field transmission is 26 bit times" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="HDRDLY" edc:nzwidth="0x2" edc:desc="LIN Master Header Delay">
              <edc:SFRFieldSemantic edc:cname="DELAY0" edc:desc="Delay between break and sync transmission is 1 bit time; Delay between sync and ID transmission is 1 bit time" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DELAY1" edc:desc="Delay between break and sync transmission is 4 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DELAY2" edc:desc="Delay between break and sync transmission is 8 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DELAY3" edc:desc="Delay between break and sync transmission is 14 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="INACK" edc:nzwidth="0x1" edc:desc="Inhibit Not Acknowledge"/>
            <edc:SFRFieldDef edc:cname="DSNACK" edc:nzwidth="0x1" edc:desc="Disable Successive NACK"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MAXITER" edc:nzwidth="0x3" edc:desc="Maximum Iterations"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x2" edc:desc="Data 32 Bit">
              <edc:SFRFieldSemantic edc:cname="DATA_READ_WRITE_CHSIZE" edc:desc="Data reads and writes according CTRLB.CHSIZE" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DATA_READ_CHSIZE_WRITE_32BIT" edc:desc="Data reads according CTRLB.CHSIZE and writes according 32-bit extension" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DATA_READ_32BIT_WRITE_CHSIZE" edc:desc="Data reads according 32-bit extension and writes according CTRLB.CHSIZE" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DATA_READ_WRITE_32BIT" edc:desc="Data reads and writes according 32-bit extension" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="BAUD" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x4200040C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x10" edc:desc="Baud Rate Value"/>
            <edc:AdjustPoint edc:offset="-3"/>
            <edc:SFRFieldDef edc:cname="FP" edc:nzwidth="0x3" edc:desc="Fractional Part"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="RXPL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4200040E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="RXPL" edc:nzwidth="0x8" edc:desc="Receive Pulse Length"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42000414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42000416">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42000418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="--------nnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xFF" edc:addr="0x4200041A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Parity Error"/>
            <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Frame Error"/>
            <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
            <edc:SFRFieldDef edc:cname="CTS" edc:nzwidth="0x1" edc:desc="Clear To Send"/>
            <edc:SFRFieldDef edc:cname="ISF" edc:nzwidth="0x1" edc:desc="Inconsistent Sync Field"/>
            <edc:SFRFieldDef edc:cname="COLL" edc:nzwidth="0x1" edc:desc="Collision Detected"/>
            <edc:SFRFieldDef edc:cname="TXE" edc:nzwidth="0x1" edc:desc="Transmitter Empty"/>
            <edc:SFRFieldDef edc:cname="ITER" edc:nzwidth="0x1" edc:desc="Maximum Number of Repetitions Reached"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="---------------------------rrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:addr="0x4200041C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="RXERRCNT" edc:nzwidth="0x1" edc:desc="RXERRCNT Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="LENGTH" edc:nzwidth="0x1" edc:desc="LENGTH Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="RXERRCNT" edc:nzwidth="0x8" edc:access="rrrrrrrr" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42000420">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="RXERRCNT" edc:nzwidth="0x8" edc:desc="Receive Error Count"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="LENGTH" edc:nzwidth="0x10" edc:access="------nnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x3FF" edc:addr="0x42000422">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x2" edc:desc="Data Length Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42000428">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x42000430">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TC0/COUNT8">
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="COUNT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x40001414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x8" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="PER" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="11111111" edc:mclr="11111111" edc:addr="0x4000141B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x8" edc:desc="Period Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="CC0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4000141C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x8" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="CC1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4000141D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x8" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="PERBUF" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="11111111" edc:mclr="11111111" edc:addr="0x4000142F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x8" edc:desc="Period Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="CCBUF0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x40001430">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x8" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="CCBUF1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x40001431">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x8" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TC0/COUNT16">
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="COUNT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x40001414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x10" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="CC0" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x4000141C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x10" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="CC1" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x4000141E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x10" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="CCBUF0" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x40001430">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x10" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="CCBUF1" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x40001432">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x10" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TC0/COUNT32">
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="COUNT" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40001414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x20" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="CC0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x4000141C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x20" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="CC1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40001420">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x20" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="CCBUF0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40001430">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x20" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="CCBUF1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40001434">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x20" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TC1/COUNT8">
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="COUNT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x40001814">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x8" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="PER" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="11111111" edc:mclr="11111111" edc:addr="0x4000181B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x8" edc:desc="Period Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="CC0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4000181C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x8" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="CC1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4000181D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x8" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="PERBUF" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="11111111" edc:mclr="11111111" edc:addr="0x4000182F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x8" edc:desc="Period Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="CCBUF0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x40001830">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x8" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="CCBUF1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x40001831">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x8" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TC1/COUNT16">
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="COUNT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x40001814">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x10" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="CC0" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x4000181C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x10" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="CC1" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x4000181E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x10" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="CCBUF0" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x40001830">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x10" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="CCBUF1" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x40001832">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x10" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TC1/COUNT32">
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="COUNT" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40001814">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x20" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="CC0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x4000181C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x20" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="CC1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40001820">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x20" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="CCBUF0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40001830">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x20" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="CCBUF1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40001834">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x20" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TC2/COUNT8">
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="COUNT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x40001C14">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x8" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="PER" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="11111111" edc:mclr="11111111" edc:addr="0x40001C1B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x8" edc:desc="Period Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="CC0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x40001C1C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x8" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="CC1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x40001C1D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x8" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="PERBUF" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="11111111" edc:mclr="11111111" edc:addr="0x40001C2F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x8" edc:desc="Period Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="CCBUF0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x40001C30">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x8" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="CCBUF1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x40001C31">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x8" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TC2/COUNT16">
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="COUNT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x40001C14">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x10" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="CC0" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x40001C1C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x10" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="CC1" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x40001C1E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x10" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="CCBUF0" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x40001C30">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x10" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="CCBUF1" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x40001C32">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x10" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TC2/COUNT32">
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="COUNT" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40001C14">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x20" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="CC0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40001C1C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x20" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="CC1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40001C20">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x20" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="CCBUF0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40001C30">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x20" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="CCBUF1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40001C34">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x20" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TC3/COUNT8">
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="COUNT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x40002014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x8" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="PER" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="11111111" edc:mclr="11111111" edc:addr="0x4000201B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x8" edc:desc="Period Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="CC0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4000201C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x8" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="CC1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4000201D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x8" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="PERBUF" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="11111111" edc:mclr="11111111" edc:addr="0x4000202F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x8" edc:desc="Period Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="CCBUF0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x40002030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x8" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="CCBUF1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x40002031">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x8" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TC3/COUNT16">
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="COUNT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x40002014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x10" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="CC0" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x4000201C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x10" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="CC1" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x4000201E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x10" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="CCBUF0" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x40002030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x10" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="CCBUF1" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x40002032">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x10" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TC3/COUNT32">
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="COUNT" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40002014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x20" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="CC0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x4000201C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x20" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="CC1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40002020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x20" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="CCBUF0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40002030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x20" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="CCBUF1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40002034">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x20" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TC4/COUNT8">
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="COUNT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x40002414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x8" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="PER" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="11111111" edc:mclr="11111111" edc:addr="0x4000241B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x8" edc:desc="Period Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="CC0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4000241C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x8" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="CC1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4000241D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x8" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="PERBUF" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="11111111" edc:mclr="11111111" edc:addr="0x4000242F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x8" edc:desc="Period Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="CCBUF0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x40002430">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x8" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="CCBUF1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x40002431">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x8" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TC4/COUNT16">
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="COUNT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x40002414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x10" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="CC0" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x4000241C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x10" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="CC1" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x4000241E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x10" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="CCBUF0" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x40002430">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x10" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="CCBUF1" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x40002432">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x10" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TC4/COUNT32">
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="COUNT" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40002414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x20" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="CC0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x4000241C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x20" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="CC1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40002420">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x20" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="CCBUF0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40002430">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x20" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="CCBUF1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40002434">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x20" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TC5/COUNT8">
      <edc:SFRDef ltx:memberofperipheral="TC5" edc:cname="COUNT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x40002814">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC5">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x8" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC5" edc:cname="PER" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="11111111" edc:mclr="11111111" edc:addr="0x4000281B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC5">
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x8" edc:desc="Period Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC5" edc:cname="CC0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4000281C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC5">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x8" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC5" edc:cname="CC1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4000281D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC5">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x8" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC5" edc:cname="PERBUF" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="11111111" edc:mclr="11111111" edc:addr="0x4000282F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC5">
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x8" edc:desc="Period Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC5" edc:cname="CCBUF0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x40002830">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC5">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x8" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC5" edc:cname="CCBUF1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x40002831">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC5">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x8" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TC5/COUNT16">
      <edc:SFRDef ltx:memberofperipheral="TC5" edc:cname="COUNT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x40002814">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC5">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x10" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC5" edc:cname="CC0" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x4000281C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC5">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x10" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC5" edc:cname="CC1" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x4000281E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC5">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x10" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC5" edc:cname="CCBUF0" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x40002830">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC5">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x10" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC5" edc:cname="CCBUF1" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x40002832">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC5">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x10" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TC5/COUNT32">
      <edc:SFRDef ltx:memberofperipheral="TC5" edc:cname="COUNT" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40002814">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC5">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x20" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC5" edc:cname="CC0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x4000281C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC5">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x20" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC5" edc:cname="CC1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40002820">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC5">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x20" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC5" edc:cname="CCBUF0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40002830">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC5">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x20" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC5" edc:cname="CCBUF1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40002834">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC5">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x20" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TC6/COUNT8">
      <edc:SFRDef ltx:memberofperipheral="TC6" edc:cname="COUNT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x40002C14">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC6">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x8" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC6" edc:cname="PER" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="11111111" edc:mclr="11111111" edc:addr="0x40002C1B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC6">
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x8" edc:desc="Period Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC6" edc:cname="CC0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x40002C1C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC6">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x8" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC6" edc:cname="CC1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x40002C1D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC6">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x8" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC6" edc:cname="PERBUF" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="11111111" edc:mclr="11111111" edc:addr="0x40002C2F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC6">
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x8" edc:desc="Period Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC6" edc:cname="CCBUF0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x40002C30">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC6">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x8" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC6" edc:cname="CCBUF1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x40002C31">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC6">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x8" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TC6/COUNT16">
      <edc:SFRDef ltx:memberofperipheral="TC6" edc:cname="COUNT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x40002C14">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC6">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x10" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC6" edc:cname="CC0" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x40002C1C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC6">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x10" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC6" edc:cname="CC1" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x40002C1E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC6">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x10" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC6" edc:cname="CCBUF0" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x40002C30">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC6">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x10" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC6" edc:cname="CCBUF1" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x40002C32">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC6">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x10" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TC6/COUNT32">
      <edc:SFRDef ltx:memberofperipheral="TC6" edc:cname="COUNT" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40002C14">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC6">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x20" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC6" edc:cname="CC0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40002C1C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC6">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x20" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC6" edc:cname="CC1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40002C20">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC6">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x20" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC6" edc:cname="CCBUF0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40002C30">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC6">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x20" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC6" edc:cname="CCBUF1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40002C34">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC6">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x20" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TC7/COUNT8">
      <edc:SFRDef ltx:memberofperipheral="TC7" edc:cname="COUNT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x40003014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC7">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x8" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC7" edc:cname="PER" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="11111111" edc:mclr="11111111" edc:addr="0x4000301B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC7">
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x8" edc:desc="Period Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC7" edc:cname="CC0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4000301C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC7">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x8" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC7" edc:cname="CC1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4000301D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC7">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x8" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC7" edc:cname="PERBUF" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="11111111" edc:mclr="11111111" edc:addr="0x4000302F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC7">
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x8" edc:desc="Period Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC7" edc:cname="CCBUF0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x40003030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC7">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x8" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC7" edc:cname="CCBUF1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x40003031">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC7">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x8" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TC7/COUNT16">
      <edc:SFRDef ltx:memberofperipheral="TC7" edc:cname="COUNT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x40003014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC7">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x10" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC7" edc:cname="CC0" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x4000301C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC7">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x10" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC7" edc:cname="CC1" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x4000301E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC7">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x10" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC7" edc:cname="CCBUF0" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x40003030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC7">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x10" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC7" edc:cname="CCBUF1" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x40003032">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC7">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x10" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TC7/COUNT32">
      <edc:SFRDef ltx:memberofperipheral="TC7" edc:cname="COUNT" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40003014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC7">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x20" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC7" edc:cname="CC0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x4000301C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC7">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x20" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC7" edc:cname="CC1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40003020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC7">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x20" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC7" edc:cname="CCBUF0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40003030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC7">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x20" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC7" edc:cname="CCBUF1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40003034">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC7">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x20" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:EmulatorSector edc:beginaddr="0xE0001000" edc:endaddr="0xE000F000" edc:regionid="emulation"/>
  </edc:PhysicalSpace>
  <edc:PinList edc:ppsflavor="atmel">
    <edc:Pin>
      <edc:VirtualPin edc:name="VPMU_VDD"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA0"/>
      <edc:VirtualPin edc:name="IOCA0" edc:ppsfunction="CHANGE_NOTIFICATION" ltx:memberofperipheral="GPIOA"/>
      <edc:VirtualPin edc:name="RA0" edc:ppsfunction="PORT_I_O" ltx:memberofperipheral="GPIOA"/>
      <edc:VirtualPin edc:name="RPA0" edc:ppsfunction="PPS" ltx:memberofperipheral="PPS"/>
      <edc:VirtualPin edc:name="IN3" edc:ppsfunction="RTCC" ltx:memberofperipheral="RTC"/>
      <edc:VirtualPin edc:name="DATA0" edc:ppsfunction="SQI" ltx:memberofperipheral="QSPI"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA1"/>
      <edc:VirtualPin edc:name="IOCA1" edc:ppsfunction="CHANGE_NOTIFICATION" ltx:memberofperipheral="GPIOA"/>
      <edc:VirtualPin edc:name="RA1" edc:ppsfunction="PORT_I_O" ltx:memberofperipheral="GPIOA"/>
      <edc:VirtualPin edc:name="RPA1" edc:ppsfunction="PPS" ltx:memberofperipheral="PPS"/>
      <edc:VirtualPin edc:name="IN2" edc:ppsfunction="RTCC" ltx:memberofperipheral="RTC"/>
      <edc:VirtualPin edc:name="SCK" edc:ppsfunction="SQI" ltx:memberofperipheral="QSPI"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA2"/>
      <edc:VirtualPin edc:name="IOCA2" edc:ppsfunction="CHANGE_NOTIFICATION" ltx:memberofperipheral="GPIOA"/>
      <edc:VirtualPin edc:name="RA2" edc:ppsfunction="PORT_I_O" ltx:memberofperipheral="GPIOA"/>
      <edc:VirtualPin edc:name="RPA2" edc:ppsfunction="PPS" ltx:memberofperipheral="PPS"/>
      <edc:VirtualPin edc:name="IN1" edc:ppsfunction="RTCC" ltx:memberofperipheral="RTC"/>
      <edc:VirtualPin edc:name="DATA3" edc:ppsfunction="SQI" ltx:memberofperipheral="QSPI"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA5"/>
      <edc:VirtualPin edc:name="IOCA5" edc:ppsfunction="CHANGE_NOTIFICATION" ltx:memberofperipheral="GPIOA"/>
      <edc:VirtualPin edc:name="CMP0" edc:ppsfunction="COMPARATOR__DIGITAL" ltx:memberofperipheral="AC"/>
      <edc:VirtualPin edc:name="CMPTRDY" edc:ppsfunction="COMPARATOR__DIGITAL" ltx:memberofperipheral="AC"/>
      <edc:VirtualPin edc:name="PAD0" edc:ppsfunction="MSSP_SPI_I2C" ltx:memberofperipheral="SERCOM0"/>
      <edc:VirtualPin edc:name="RA5" edc:ppsfunction="PORT_I_O" ltx:memberofperipheral="GPIOA"/>
      <edc:VirtualPin edc:name="RPA5" edc:ppsfunction="PPS" ltx:memberofperipheral="PPS"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VDD"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA6"/>
      <edc:VirtualPin edc:name="IOCA6" edc:ppsfunction="CHANGE_NOTIFICATION" ltx:memberofperipheral="GPIOA"/>
      <edc:VirtualPin edc:name="CMP1" edc:ppsfunction="COMPARATOR__DIGITAL" ltx:memberofperipheral="AC"/>
      <edc:VirtualPin edc:name="CMPTEN" edc:ppsfunction="COMPARATOR__DIGITAL" ltx:memberofperipheral="AC"/>
      <edc:VirtualPin edc:name="AC_CMP1_ALT" edc:ppsfunction="COMPARATOR__DIGITAL" ltx:memberofperipheral="BTZBSYS"/>
      <edc:VirtualPin edc:name="PAD1" edc:ppsfunction="MSSP_SPI_I2C" ltx:memberofperipheral="SERCOM0"/>
      <edc:VirtualPin edc:name="RA6" edc:ppsfunction="PORT_I_O" ltx:memberofperipheral="GPIOA"/>
      <edc:VirtualPin edc:name="RPA6" edc:ppsfunction="PPS" ltx:memberofperipheral="PPS"/>
      <edc:VirtualPin edc:name="TA4D_ALT" edc:ppsfunction="TEST_MODES" ltx:memberofperipheral="BTZBSYS"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA7"/>
      <edc:VirtualPin edc:name="IOCA7" edc:ppsfunction="CHANGE_NOTIFICATION" ltx:memberofperipheral="GPIOA"/>
      <edc:VirtualPin edc:name="PAD0" edc:ppsfunction="MSSP_SPI_I2C" ltx:memberofperipheral="SERCOM1"/>
      <edc:VirtualPin edc:name="RA7" edc:ppsfunction="PORT_I_O" ltx:memberofperipheral="GPIOA"/>
      <edc:VirtualPin edc:name="RPA7" edc:ppsfunction="PPS" ltx:memberofperipheral="PPS"/>
      <edc:VirtualPin edc:name="PMU_TEST_SCK" edc:ppsfunction="RF__DIGITAL" ltx:memberofperipheral="PMU"/>
      <edc:VirtualPin edc:name="ADCSVCLKI" edc:ppsfunction="SILICON_VALIDATION__DFT_" ltx:memberofperipheral="ADCHS"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA8"/>
      <edc:VirtualPin edc:name="IOCA8" edc:ppsfunction="CHANGE_NOTIFICATION" ltx:memberofperipheral="GPIOA"/>
      <edc:VirtualPin edc:name="PAD1" edc:ppsfunction="MSSP_SPI_I2C" ltx:memberofperipheral="SERCOM1"/>
      <edc:VirtualPin edc:name="RA8" edc:ppsfunction="PORT_I_O" ltx:memberofperipheral="GPIOA"/>
      <edc:VirtualPin edc:name="RPA8" edc:ppsfunction="PPS" ltx:memberofperipheral="PPS"/>
      <edc:VirtualPin edc:name="FECTRL0" edc:ppsfunction="RF__DIGITAL" ltx:memberofperipheral="BTZBSYS"/>
      <edc:VirtualPin edc:name="PMU_TEST_SDI" edc:ppsfunction="RF__DIGITAL" ltx:memberofperipheral="PMU"/>
      <edc:VirtualPin edc:name="ADCSVTRG" edc:ppsfunction="SILICON_VALIDATION__DFT_" ltx:memberofperipheral="ADCHS"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA9"/>
      <edc:VirtualPin edc:name="IOCA9" edc:ppsfunction="CHANGE_NOTIFICATION" ltx:memberofperipheral="GPIOA"/>
      <edc:VirtualPin edc:name="PAD2" edc:ppsfunction="MSSP_SPI_I2C" ltx:memberofperipheral="SERCOM1"/>
      <edc:VirtualPin edc:name="RA9" edc:ppsfunction="PORT_I_O" ltx:memberofperipheral="GPIOA"/>
      <edc:VirtualPin edc:name="RPA9" edc:ppsfunction="PPS" ltx:memberofperipheral="PPS"/>
      <edc:VirtualPin edc:name="FECTRL1" edc:ppsfunction="RF__DIGITAL" ltx:memberofperipheral="BTZBSYS"/>
      <edc:VirtualPin edc:name="PMU_TEST_CS" edc:ppsfunction="RF__DIGITAL" ltx:memberofperipheral="PMU"/>
      <edc:VirtualPin edc:name="RTC_IN0_ALT" edc:ppsfunction="RTCC" ltx:memberofperipheral="BTZBSYS"/>
      <edc:VirtualPin edc:name="IN0_ALT" edc:ppsfunction="RTCC" ltx:memberofperipheral="RTC"/>
      <edc:VirtualPin edc:name="ADCSVFRM" edc:ppsfunction="SILICON_VALIDATION__DFT_" ltx:memberofperipheral="ADCHS"/>
      <edc:VirtualPin edc:name="DGI_SDO" edc:ppsfunction="SPI" ltx:memberofperipheral="DGI_SPI"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA10"/>
      <edc:VirtualPin edc:name="IN0" edc:ppsfunction="10" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="IN3" edc:ppsfunction="10" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="EXTINT0" edc:ppsfunction="10" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="EXTINT3" edc:ppsfunction="2" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="NMI" edc:ppsfunction="2" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="OUT1" edc:ppsfunction="27" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="IOCA10" edc:ppsfunction="CHANGE_NOTIFICATION" ltx:memberofperipheral="GPIOA"/>
      <edc:VirtualPin edc:name="PAD3" edc:ppsfunction="MSSP_SPI_I2C" ltx:memberofperipheral="SERCOM1"/>
      <edc:VirtualPin edc:name="RA10" edc:ppsfunction="PORT_I_O" ltx:memberofperipheral="GPIOA"/>
      <edc:VirtualPin edc:name="RPA10" edc:ppsfunction="PPS" ltx:memberofperipheral="PPS"/>
      <edc:VirtualPin edc:name="FECTRL2" edc:ppsfunction="RF__DIGITAL" ltx:memberofperipheral="BTZBSYS"/>
      <edc:VirtualPin edc:name="PMU_TEST_SDO" edc:ppsfunction="RF__DIGITAL" ltx:memberofperipheral="PMU"/>
      <edc:VirtualPin edc:name="RTC_OUT_ALT" edc:ppsfunction="RTCC" ltx:memberofperipheral="BTZBSYS"/>
      <edc:VirtualPin edc:name="OUT_ALT" edc:ppsfunction="RTCC" ltx:memberofperipheral="RTC"/>
      <edc:VirtualPin edc:name="ADCSVSARCLK" edc:ppsfunction="SILICON_VALIDATION__DFT_" ltx:memberofperipheral="ADCHS"/>
      <edc:VirtualPin edc:name="DGI_SCK" edc:ppsfunction="SPI" ltx:memberofperipheral="DGI_SPI"/>
      <edc:VirtualPin edc:name="MBISTCLK" edc:ppsfunction="TEST_MODES" ltx:memberofperipheral="BTZBSYS"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB12"/>
      <edc:VirtualPin edc:name="IN1" edc:ppsfunction="14" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="IN4" edc:ppsfunction="14" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="EXTINT1" edc:ppsfunction="14" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="OUT0" edc:ppsfunction="27" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="IN0" edc:ppsfunction="7" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="IN3" edc:ppsfunction="7" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="EXTINT0" edc:ppsfunction="7" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="IOCB12" edc:ppsfunction="CHANGE_NOTIFICATION" ltx:memberofperipheral="GPIOB"/>
      <edc:VirtualPin edc:name="RB12" edc:ppsfunction="PORT_I_O" ltx:memberofperipheral="GPIOB"/>
      <edc:VirtualPin edc:name="RPB12" edc:ppsfunction="PPS" ltx:memberofperipheral="PPS"/>
      <edc:VirtualPin edc:name="DATA1" edc:ppsfunction="SQI" ltx:memberofperipheral="QSPI"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB13"/>
      <edc:VirtualPin edc:name="IN2" edc:ppsfunction="14" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="IN5" edc:ppsfunction="14" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="EXTINT2" edc:ppsfunction="14" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="OUT0" edc:ppsfunction="27" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="OUT0" edc:ppsfunction="27" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="IN1" edc:ppsfunction="7" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="IN4" edc:ppsfunction="7" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="EXTINT1" edc:ppsfunction="7" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="IOCB13" edc:ppsfunction="CHANGE_NOTIFICATION" ltx:memberofperipheral="GPIOB"/>
      <edc:VirtualPin edc:name="RB13" edc:ppsfunction="PORT_I_O" ltx:memberofperipheral="GPIOB"/>
      <edc:VirtualPin edc:name="RPB13" edc:ppsfunction="PPS" ltx:memberofperipheral="PPS"/>
      <edc:VirtualPin edc:name="EVENT" edc:ppsfunction="RTCC" ltx:memberofperipheral="RTC"/>
      <edc:VirtualPin edc:name="CS" edc:ppsfunction="SQI" ltx:memberofperipheral="QSPI"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB9"/>
      <edc:VirtualPin edc:name="IOCB9" edc:ppsfunction="CHANGE_NOTIFICATION" ltx:memberofperipheral="GPIOB"/>
      <edc:VirtualPin edc:name="INT0" edc:ppsfunction="EDGE_INTERRUPT" ltx:memberofperipheral="PMU"/>
      <edc:VirtualPin edc:name="PAD2" edc:ppsfunction="MSSP_SPI_I2C" ltx:memberofperipheral="SERCOM0"/>
      <edc:VirtualPin edc:name="RB9" edc:ppsfunction="PORT_I_O" ltx:memberofperipheral="GPIOB"/>
      <edc:VirtualPin edc:name="RPB9" edc:ppsfunction="PPS" ltx:memberofperipheral="PPS"/>
      <edc:VirtualPin edc:name="FEM_PD_EXT_PA" edc:ppsfunction="RF__ANALOG" ltx:memberofperipheral="BTZBSYS"/>
      <edc:VirtualPin edc:name="TP3" edc:ppsfunction="RF__ANALOG" ltx:memberofperipheral="BTZBSYS"/>
      <edc:VirtualPin edc:name="ADCSVSOUT" edc:ppsfunction="SILICON_VALIDATION__DFT_" ltx:memberofperipheral="ADCHS"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB8"/>
      <edc:VirtualPin edc:name="IOCB8" edc:ppsfunction="CHANGE_NOTIFICATION" ltx:memberofperipheral="GPIOB"/>
      <edc:VirtualPin edc:name="RB8" edc:ppsfunction="PORT_I_O" ltx:memberofperipheral="GPIOB"/>
      <edc:VirtualPin edc:name="RPB8" edc:ppsfunction="PPS" ltx:memberofperipheral="PPS"/>
      <edc:VirtualPin edc:name="TP2" edc:ppsfunction="RF__ANALOG" ltx:memberofperipheral="BTZBSYS"/>
      <edc:VirtualPin edc:name="TP6" edc:ppsfunction="RF__ANALOG" ltx:memberofperipheral="BTZBSYS"/>
      <edc:VirtualPin edc:name="PMU_TEST_SCKO" edc:ppsfunction="RF__DIGITAL" ltx:memberofperipheral="PMU"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA4"/>
      <edc:VirtualPin edc:name="IOCA4" edc:ppsfunction="CHANGE_NOTIFICATION" ltx:memberofperipheral="GPIOA"/>
      <edc:VirtualPin edc:name="PAD3" edc:ppsfunction="MSSP_SPI_I2C" ltx:memberofperipheral="SERCOM0"/>
      <edc:VirtualPin edc:name="RA4" edc:ppsfunction="PORT_I_O" ltx:memberofperipheral="GPIOA"/>
      <edc:VirtualPin edc:name="RPA4" edc:ppsfunction="PPS" ltx:memberofperipheral="PPS"/>
      <edc:VirtualPin edc:name="OUT" edc:ppsfunction="RTCC" ltx:memberofperipheral="RTC"/>
      <edc:VirtualPin edc:name="DGI_SSN" edc:ppsfunction="SPI" ltx:memberofperipheral="DGI_SPI"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA13"/>
      <edc:VirtualPin edc:name="EXTINT3" edc:ppsfunction="10" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="NMI" edc:ppsfunction="10" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="OUT0" edc:ppsfunction="27" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="OUT1" edc:ppsfunction="27" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="IN2" edc:ppsfunction="3" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="IN5" edc:ppsfunction="3" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="EXTINT2" edc:ppsfunction="3" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="IOCA13" edc:ppsfunction="CHANGE_NOTIFICATION" ltx:memberofperipheral="GPIOA"/>
      <edc:VirtualPin edc:name="CMP1" edc:ppsfunction="COMPARATOR__DIGITAL" ltx:memberofperipheral="AC"/>
      <edc:VirtualPin edc:name="CMPTOUT" edc:ppsfunction="COMPARATOR__DIGITAL" ltx:memberofperipheral="AC"/>
      <edc:VirtualPin edc:name="I2C_SERCOM_PAD0" edc:ppsfunction="I2C" ltx:memberofperipheral="SERCOM2"/>
      <edc:VirtualPin edc:name="RA13" edc:ppsfunction="PORT_I_O" ltx:memberofperipheral="GPIOA"/>
      <edc:VirtualPin edc:name="RPA13" edc:ppsfunction="PPS" ltx:memberofperipheral="PPS"/>
      <edc:VirtualPin edc:name="COEXCTRL0" edc:ppsfunction="RF__DIGITAL" ltx:memberofperipheral="BTZBSYS"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA14"/>
      <edc:VirtualPin edc:name="IN0" edc:ppsfunction="11" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="IN3" edc:ppsfunction="11" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="EXTINT0" edc:ppsfunction="11" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="OUT1" edc:ppsfunction="27" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="EXTINT3" edc:ppsfunction="3" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="NMI" edc:ppsfunction="3" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="IOCA14" edc:ppsfunction="CHANGE_NOTIFICATION" ltx:memberofperipheral="GPIOA"/>
      <edc:VirtualPin edc:name="I2C_SERCOM_PAD1" edc:ppsfunction="I2C" ltx:memberofperipheral="SERCOM2"/>
      <edc:VirtualPin edc:name="RA14" edc:ppsfunction="PORT_I_O" ltx:memberofperipheral="GPIOA"/>
      <edc:VirtualPin edc:name="RPA14" edc:ppsfunction="PPS" ltx:memberofperipheral="PPS"/>
      <edc:VirtualPin edc:name="COEXCTRL1" edc:ppsfunction="RF__DIGITAL" ltx:memberofperipheral="BTZBSYS"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="NMCLR"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VDDCORE"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="CLDO_IN"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="XO_N"/>
      <edc:VirtualPin edc:name="xo_n" edc:ppsfunction="RF__ANALOG" ltx:memberofperipheral="BTZBSYS"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="XO_P"/>
      <edc:VirtualPin edc:name="xo_p" edc:ppsfunction="RF__ANALOG" ltx:memberofperipheral="BTZBSYS"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VDD_PLL"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="CLDO_OUT"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="RFLDO_OUT" edc:ppsfunction="POWER_SUPPLY" ltx:memberofperipheral="BTZBSYS"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="BUCK_CLDO"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="BUCK_PA"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="RF_IO"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB0"/>
      <edc:VirtualPin edc:name="AIN4" edc:ppsfunction="ADC" ltx:memberofperipheral="ADCHS"/>
      <edc:VirtualPin edc:name="CVD4" edc:ppsfunction="ADC" ltx:memberofperipheral="ADCHS"/>
      <edc:VirtualPin edc:name="CVDR4" edc:ppsfunction="ADC" ltx:memberofperipheral="CVD"/>
      <edc:VirtualPin edc:name="CVDT4" edc:ppsfunction="ADC" ltx:memberofperipheral="CVD"/>
      <edc:VirtualPin edc:name="IOCB0" edc:ppsfunction="CHANGE_NOTIFICATION" ltx:memberofperipheral="GPIOB"/>
      <edc:VirtualPin edc:name="AIN2" edc:ppsfunction="COMPARATOR__ANALOG" ltx:memberofperipheral="AC"/>
      <edc:VirtualPin edc:name="RB0" edc:ppsfunction="PORT_I_O" ltx:memberofperipheral="GPIOB"/>
      <edc:VirtualPin edc:name="RPB0" edc:ppsfunction="PPS" ltx:memberofperipheral="PPS"/>
      <edc:VirtualPin edc:name="COEXCTRL2" edc:ppsfunction="RF__DIGITAL" ltx:memberofperipheral="BTZBSYS"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB1"/>
      <edc:VirtualPin edc:name="AIN5" edc:ppsfunction="ADC" ltx:memberofperipheral="ADCHS"/>
      <edc:VirtualPin edc:name="CVD5" edc:ppsfunction="ADC" ltx:memberofperipheral="ADCHS"/>
      <edc:VirtualPin edc:name="CVDR5" edc:ppsfunction="ADC" ltx:memberofperipheral="CVD"/>
      <edc:VirtualPin edc:name="CVDT5" edc:ppsfunction="ADC" ltx:memberofperipheral="CVD"/>
      <edc:VirtualPin edc:name="IOCB1" edc:ppsfunction="CHANGE_NOTIFICATION" ltx:memberofperipheral="GPIOB"/>
      <edc:VirtualPin edc:name="AIN3" edc:ppsfunction="COMPARATOR__ANALOG" ltx:memberofperipheral="AC"/>
      <edc:VirtualPin edc:name="RB1" edc:ppsfunction="PORT_I_O" ltx:memberofperipheral="GPIOB"/>
      <edc:VirtualPin edc:name="RPB1" edc:ppsfunction="PPS" ltx:memberofperipheral="PPS"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB2"/>
      <edc:VirtualPin edc:name="AIN6" edc:ppsfunction="ADC" ltx:memberofperipheral="ADCHS"/>
      <edc:VirtualPin edc:name="CVD6" edc:ppsfunction="ADC" ltx:memberofperipheral="ADCHS"/>
      <edc:VirtualPin edc:name="CVDR6" edc:ppsfunction="ADC" ltx:memberofperipheral="CVD"/>
      <edc:VirtualPin edc:name="CVDT6" edc:ppsfunction="ADC" ltx:memberofperipheral="CVD"/>
      <edc:VirtualPin edc:name="IOCB2" edc:ppsfunction="CHANGE_NOTIFICATION" ltx:memberofperipheral="GPIOB"/>
      <edc:VirtualPin edc:name="AIN0" edc:ppsfunction="COMPARATOR__ANALOG" ltx:memberofperipheral="AC"/>
      <edc:VirtualPin edc:name="RB2" edc:ppsfunction="PORT_I_O" ltx:memberofperipheral="GPIOB"/>
      <edc:VirtualPin edc:name="RPB2" edc:ppsfunction="PPS" ltx:memberofperipheral="PPS"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB3"/>
      <edc:VirtualPin edc:name="AIN7" edc:ppsfunction="ADC" ltx:memberofperipheral="ADCHS"/>
      <edc:VirtualPin edc:name="CVD7" edc:ppsfunction="ADC" ltx:memberofperipheral="ADCHS"/>
      <edc:VirtualPin edc:name="CVDR7" edc:ppsfunction="ADC" ltx:memberofperipheral="CVD"/>
      <edc:VirtualPin edc:name="CVDT7" edc:ppsfunction="ADC" ltx:memberofperipheral="CVD"/>
      <edc:VirtualPin edc:name="IOCB3" edc:ppsfunction="CHANGE_NOTIFICATION" ltx:memberofperipheral="GPIOB"/>
      <edc:VirtualPin edc:name="AIN1" edc:ppsfunction="COMPARATOR__ANALOG" ltx:memberofperipheral="AC"/>
      <edc:VirtualPin edc:name="RB3" edc:ppsfunction="PORT_I_O" ltx:memberofperipheral="GPIOB"/>
      <edc:VirtualPin edc:name="RPB3" edc:ppsfunction="PPS" ltx:memberofperipheral="PPS"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB4"/>
      <edc:VirtualPin edc:name="AIN0" edc:ppsfunction="ADC" ltx:memberofperipheral="ADCHS"/>
      <edc:VirtualPin edc:name="CVD0" edc:ppsfunction="ADC" ltx:memberofperipheral="ADCHS"/>
      <edc:VirtualPin edc:name="CVDR0" edc:ppsfunction="ADC" ltx:memberofperipheral="CVD"/>
      <edc:VirtualPin edc:name="CVDT0" edc:ppsfunction="ADC" ltx:memberofperipheral="CVD"/>
      <edc:VirtualPin edc:name="IOCB4" edc:ppsfunction="CHANGE_NOTIFICATION" ltx:memberofperipheral="GPIOB"/>
      <edc:VirtualPin edc:name="RB4" edc:ppsfunction="PORT_I_O" ltx:memberofperipheral="GPIOB"/>
      <edc:VirtualPin edc:name="RPB4" edc:ppsfunction="PPS" ltx:memberofperipheral="PPS"/>
      <edc:VirtualPin edc:name="TP4" edc:ppsfunction="RF__ANALOG" ltx:memberofperipheral="BTZBSYS"/>
      <edc:VirtualPin edc:name="FECTRL3" edc:ppsfunction="RF__DIGITAL" ltx:memberofperipheral="BTZBSYS"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="AVDD"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB5"/>
      <edc:VirtualPin edc:name="AIN1" edc:ppsfunction="ADC" ltx:memberofperipheral="ADCHS"/>
      <edc:VirtualPin edc:name="CVD1" edc:ppsfunction="ADC" ltx:memberofperipheral="ADCHS"/>
      <edc:VirtualPin edc:name="CVDR1" edc:ppsfunction="ADC" ltx:memberofperipheral="CVD"/>
      <edc:VirtualPin edc:name="CVDT1" edc:ppsfunction="ADC" ltx:memberofperipheral="CVD"/>
      <edc:VirtualPin edc:name="IOCB5" edc:ppsfunction="CHANGE_NOTIFICATION" ltx:memberofperipheral="GPIOB"/>
      <edc:VirtualPin edc:name="RB5" edc:ppsfunction="PORT_I_O" ltx:memberofperipheral="GPIOB"/>
      <edc:VirtualPin edc:name="RPB5" edc:ppsfunction="PPS" ltx:memberofperipheral="PPS"/>
      <edc:VirtualPin edc:name="TP5" edc:ppsfunction="RF__ANALOG" ltx:memberofperipheral="BTZBSYS"/>
      <edc:VirtualPin edc:name="FECTRL4" edc:ppsfunction="RF__DIGITAL" ltx:memberofperipheral="BTZBSYS"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB6"/>
      <edc:VirtualPin edc:name="AIN2" edc:ppsfunction="ADC" ltx:memberofperipheral="ADCHS"/>
      <edc:VirtualPin edc:name="CVD2" edc:ppsfunction="ADC" ltx:memberofperipheral="ADCHS"/>
      <edc:VirtualPin edc:name="CVDR2" edc:ppsfunction="ADC" ltx:memberofperipheral="CVD"/>
      <edc:VirtualPin edc:name="CVDT2" edc:ppsfunction="ADC" ltx:memberofperipheral="CVD"/>
      <edc:VirtualPin edc:name="IOCB6" edc:ppsfunction="CHANGE_NOTIFICATION" ltx:memberofperipheral="GPIOB"/>
      <edc:VirtualPin edc:name="RB6" edc:ppsfunction="PORT_I_O" ltx:memberofperipheral="GPIOB"/>
      <edc:VirtualPin edc:name="RPB6" edc:ppsfunction="PPS" ltx:memberofperipheral="PPS"/>
      <edc:VirtualPin edc:name="FECTRL5" edc:ppsfunction="RF__DIGITAL" ltx:memberofperipheral="BTZBSYS"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB7"/>
      <edc:VirtualPin edc:name="AIN3" edc:ppsfunction="ADC" ltx:memberofperipheral="ADCHS"/>
      <edc:VirtualPin edc:name="CVD3" edc:ppsfunction="ADC" ltx:memberofperipheral="ADCHS"/>
      <edc:VirtualPin edc:name="CVDR3" edc:ppsfunction="ADC" ltx:memberofperipheral="CVD"/>
      <edc:VirtualPin edc:name="CVDT3" edc:ppsfunction="ADC" ltx:memberofperipheral="CVD"/>
      <edc:VirtualPin edc:name="IOCB7" edc:ppsfunction="CHANGE_NOTIFICATION" ltx:memberofperipheral="GPIOB"/>
      <edc:VirtualPin edc:name="RB7" edc:ppsfunction="PORT_I_O" ltx:memberofperipheral="GPIOB"/>
      <edc:VirtualPin edc:name="RPB7" edc:ppsfunction="PPS" ltx:memberofperipheral="PPS"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA3"/>
      <edc:VirtualPin edc:name="ANN0" edc:ppsfunction="ADC__DIFFERENTIAL_" ltx:memberofperipheral="ADCHS"/>
      <edc:VirtualPin edc:name="IOCA3" edc:ppsfunction="CHANGE_NOTIFICATION" ltx:memberofperipheral="GPIOA"/>
      <edc:VirtualPin edc:name="DACOUT" edc:ppsfunction="DAC" ltx:memberofperipheral="DAC_CTRL"/>
      <edc:VirtualPin edc:name="RA3" edc:ppsfunction="PORT_I_O" ltx:memberofperipheral="GPIOA"/>
      <edc:VirtualPin edc:name="RPA3" edc:ppsfunction="PPS" ltx:memberofperipheral="PPS"/>
      <edc:VirtualPin edc:name="IN0" edc:ppsfunction="RTCC" ltx:memberofperipheral="RTC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VDD"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB10"/>
      <edc:VirtualPin edc:name="EXTINT3" edc:ppsfunction="13" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="NMI" edc:ppsfunction="13" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="OUT0" edc:ppsfunction="27" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="OUT1" edc:ppsfunction="27" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="IN2" edc:ppsfunction="6" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="IN5" edc:ppsfunction="6" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="EXTINT2" edc:ppsfunction="6" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="IOCB10" edc:ppsfunction="CHANGE_NOTIFICATION" ltx:memberofperipheral="GPIOB"/>
      <edc:VirtualPin edc:name="RB10" edc:ppsfunction="PORT_I_O" ltx:memberofperipheral="GPIOB"/>
      <edc:VirtualPin edc:name="RPB10" edc:ppsfunction="PPS" ltx:memberofperipheral="PPS"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB11"/>
      <edc:VirtualPin edc:name="IN0" edc:ppsfunction="14" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="IN3" edc:ppsfunction="14" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="EXTINT0" edc:ppsfunction="14" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="OUT1" edc:ppsfunction="27" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="EXTINT3" edc:ppsfunction="6" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="NMI" edc:ppsfunction="6" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="IOCB11" edc:ppsfunction="CHANGE_NOTIFICATION" ltx:memberofperipheral="GPIOB"/>
      <edc:VirtualPin edc:name="RB11" edc:ppsfunction="PORT_I_O" ltx:memberofperipheral="GPIOB"/>
      <edc:VirtualPin edc:name="RPB11" edc:ppsfunction="PPS" ltx:memberofperipheral="PPS"/>
      <edc:VirtualPin edc:name="DATA2" edc:ppsfunction="SQI" ltx:memberofperipheral="QSPI"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA11"/>
      <edc:VirtualPin edc:name="IN1" edc:ppsfunction="10" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="IN4" edc:ppsfunction="10" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="EXTINT1" edc:ppsfunction="10" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="IN0" edc:ppsfunction="3" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="IN3" edc:ppsfunction="3" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="EXTINT0" edc:ppsfunction="3" ltx:memberofperipheral="EIC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA12"/>
      <edc:VirtualPin edc:name="IN2" edc:ppsfunction="10" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="IN5" edc:ppsfunction="10" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="EXTINT2" edc:ppsfunction="10" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="IN1" edc:ppsfunction="3" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="IN4" edc:ppsfunction="3" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="EXTINT1" edc:ppsfunction="3" ltx:memberofperipheral="EIC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PMU_MLDO"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VPMU_VDD"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PMU_BK"/>
    </edc:Pin>
  </edc:PinList>
</edc:PIC>
