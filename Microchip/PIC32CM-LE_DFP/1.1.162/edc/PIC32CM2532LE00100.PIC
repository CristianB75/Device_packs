<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<edc:PIC xmlns:atdf="http://crownking/atdf" xmlns:edc="http://crownking/edc" xmlns:ltx="http://crownking/ltx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://crownking/edc edc/PIC.xsd" edc:name="PIC32CM2532LE00100" edc:arch="arm32bit" edc:procid="0x0000" atdf:architecture="CORTEX-M23" atdf:family="PIC32CM" edc:hasFreeze="false" edc:masksetid="SG003">
  <edc:Properties>
    <edc:Property edc:propkey="file.registers.are.odd.address.accessible" edc:propvalue="true"/>
  </edc:Properties>
  <edc:Power>
    <edc:VDD edc:minvoltage="1.62" edc:maxvoltage="3.63" edc:nominalvoltage="3.300"/>
  </edc:Power>
  <edc:Programming edc:haslvp2="true">
    <edc:ProgrammingRowSize edc:progop="rowerase" edc:nzsize="256"/>
  </edc:Programming>
  <edc:ArchDef edc:name="arm32bit" edc:desc="arm32bit">
    <edc:MemTraits edc:addrinc="0x1" edc:locsize="0x1" edc:wordimpl="0xFFFFFFFF" edc:wordinit="0xFFFFFFFF" edc:wordsafe="0xFFFFFFFF" edc:wordsize="0x4"/>
  </edc:ArchDef>
  <edc:InstructionSet edc:instructionsetid="armv8m"/>
  <edc:InterruptList>
    <edc:Interrupt edc:irq="-15" edc:cname="Reset" edc:desc="Reset Vector, invoked on Power up and warm reset"/>
    <edc:Interrupt edc:irq="-14" edc:cname="NonMaskableInt" edc:desc="Non maskable Interrupt, cannot be stopped or preempted"/>
    <edc:Interrupt edc:irq="-13" edc:cname="HardFault" edc:desc="Hard Fault, all classes of Fault"/>
    <edc:Interrupt edc:irq="-5" edc:cname="SVCall" edc:desc="System Service Call via SVC instruction"/>
    <edc:Interrupt edc:irq="-2" edc:cname="PendSV" edc:desc="Pendable request for system service"/>
    <edc:Interrupt edc:irq="-1" edc:cname="SysTick" edc:desc="System Tick Timer"/>
    <edc:Interrupt edc:irq="0" edc:cname="SYSTEM" edc:desc="System peripherals shared interrupt" ltx:memberofperipheral="MCLK OSCCTRL OSC32KCTRL PM SUPC"/>
    <edc:Interrupt edc:irq="1" edc:cname="WDT" edc:desc="Watchdog Timer" ltx:memberofperipheral="WDT"/>
    <edc:Interrupt edc:irq="2" edc:cname="RTC" edc:desc="Real Time Counter" ltx:memberofperipheral="RTC"/>
    <edc:Interrupt edc:irq="3" edc:cname="EIC_EXTINT_0" edc:desc="External Channel 0" ltx:memberofperipheral="EIC"/>
    <edc:Interrupt edc:irq="4" edc:cname="EIC_EXTINT_1" edc:desc="External Channel 1" ltx:memberofperipheral="EIC"/>
    <edc:Interrupt edc:irq="5" edc:cname="EIC_EXTINT_2" edc:desc="External Channel 2" ltx:memberofperipheral="EIC"/>
    <edc:Interrupt edc:irq="6" edc:cname="EIC_EXTINT_3" edc:desc="External Channel 3" ltx:memberofperipheral="EIC"/>
    <edc:Interrupt edc:irq="7" edc:cname="EIC_EXTINT_4" edc:desc="External Channel 4" ltx:memberofperipheral="EIC"/>
    <edc:Interrupt edc:irq="8" edc:cname="EIC_EXTINT_5" edc:desc="External Channel 5" ltx:memberofperipheral="EIC"/>
    <edc:Interrupt edc:irq="9" edc:cname="EIC_EXTINT_6" edc:desc="External Channel 6" ltx:memberofperipheral="EIC"/>
    <edc:Interrupt edc:irq="10" edc:cname="EIC_EXTINT_7" edc:desc="External Channel 7" ltx:memberofperipheral="EIC"/>
    <edc:Interrupt edc:irq="11" edc:cname="EIC_OTHER" edc:desc="External Channel 8..X" ltx:memberofperipheral="EIC"/>
    <edc:Interrupt edc:irq="12" edc:cname="FREQM" edc:desc="Frequency Meter" ltx:memberofperipheral="FREQM"/>
    <edc:Interrupt edc:irq="13" edc:cname="NVMCTRL" edc:desc="Non-Volatile Memory Controller" ltx:memberofperipheral="NVMCTRL"/>
    <edc:Interrupt edc:irq="15" edc:cname="DMAC_0" edc:desc="DMA Channel 0" ltx:memberofperipheral="DMAC"/>
    <edc:Interrupt edc:irq="16" edc:cname="DMAC_1" edc:desc="DMA Channel 1" ltx:memberofperipheral="DMAC"/>
    <edc:Interrupt edc:irq="17" edc:cname="DMAC_2" edc:desc="DMA Channel 2" ltx:memberofperipheral="DMAC"/>
    <edc:Interrupt edc:irq="18" edc:cname="DMAC_3" edc:desc="DMA Channel 3" ltx:memberofperipheral="DMAC"/>
    <edc:Interrupt edc:irq="19" edc:cname="DMAC_OTHER" edc:desc="DMA Channel 4..X" ltx:memberofperipheral="DMAC"/>
    <edc:Interrupt edc:irq="20" edc:cname="USB" edc:desc="Universal Serial Bus" ltx:memberofperipheral="USB"/>
    <edc:Interrupt edc:irq="21" edc:cname="EVSYS_0" edc:desc="Event System Channel 0" ltx:memberofperipheral="EVSYS"/>
    <edc:Interrupt edc:irq="22" edc:cname="EVSYS_1" edc:desc="Event System Channel 1" ltx:memberofperipheral="EVSYS"/>
    <edc:Interrupt edc:irq="23" edc:cname="EVSYS_2" edc:desc="Event System Channel 2" ltx:memberofperipheral="EVSYS"/>
    <edc:Interrupt edc:irq="24" edc:cname="EVSYS_3" edc:desc="Event System Channel 3" ltx:memberofperipheral="EVSYS"/>
    <edc:Interrupt edc:irq="25" edc:cname="EVSYS_4" edc:desc="Event System Channel 4" ltx:memberofperipheral="EVSYS"/>
    <edc:Interrupt edc:irq="26" edc:cname="EVSYS_5" edc:desc="Event System Channel 5" ltx:memberofperipheral="EVSYS"/>
    <edc:Interrupt edc:irq="27" edc:cname="EVSYS_6" edc:desc="Event System Channel 6" ltx:memberofperipheral="EVSYS"/>
    <edc:Interrupt edc:irq="28" edc:cname="EVSYS_7" edc:desc="Event System Channel 7" ltx:memberofperipheral="EVSYS"/>
    <edc:Interrupt edc:irq="30" edc:cname="PAC" edc:desc="Peripheral Access Controller" ltx:memberofperipheral="PAC"/>
    <edc:Interrupt edc:irq="31" edc:cname="SERCOM0_0" edc:desc="Serial Communication Interface 0" ltx:memberofperipheral="SERCOM0"/>
    <edc:Interrupt edc:irq="32" edc:cname="SERCOM0_1" edc:desc="Serial Communication Interface 0" ltx:memberofperipheral="SERCOM0"/>
    <edc:Interrupt edc:irq="33" edc:cname="SERCOM0_2" edc:desc="Serial Communication Interface 0" ltx:memberofperipheral="SERCOM0"/>
    <edc:Interrupt edc:irq="34" edc:cname="SERCOM0_OTHER" edc:desc="Serial Communication Interface 0" ltx:memberofperipheral="SERCOM0"/>
    <edc:Interrupt edc:irq="35" edc:cname="SERCOM1_0" edc:desc="Serial Communication Interface 1" ltx:memberofperipheral="SERCOM1"/>
    <edc:Interrupt edc:irq="36" edc:cname="SERCOM1_1" edc:desc="Serial Communication Interface 1" ltx:memberofperipheral="SERCOM1"/>
    <edc:Interrupt edc:irq="37" edc:cname="SERCOM1_2" edc:desc="Serial Communication Interface 1" ltx:memberofperipheral="SERCOM1"/>
    <edc:Interrupt edc:irq="38" edc:cname="SERCOM1_OTHER" edc:desc="Serial Communication Interface 1" ltx:memberofperipheral="SERCOM1"/>
    <edc:Interrupt edc:irq="39" edc:cname="SERCOM2_0" edc:desc="Serial Communication Interface 2" ltx:memberofperipheral="SERCOM2"/>
    <edc:Interrupt edc:irq="40" edc:cname="SERCOM2_1" edc:desc="Serial Communication Interface 2" ltx:memberofperipheral="SERCOM2"/>
    <edc:Interrupt edc:irq="41" edc:cname="SERCOM2_2" edc:desc="Serial Communication Interface 2" ltx:memberofperipheral="SERCOM2"/>
    <edc:Interrupt edc:irq="42" edc:cname="SERCOM2_OTHER" edc:desc="Serial Communication Interface 2" ltx:memberofperipheral="SERCOM2"/>
    <edc:Interrupt edc:irq="43" edc:cname="SERCOM3_0" edc:desc="Serial Communication Interface 3" ltx:memberofperipheral="SERCOM3"/>
    <edc:Interrupt edc:irq="44" edc:cname="SERCOM3_1" edc:desc="Serial Communication Interface 3" ltx:memberofperipheral="SERCOM3"/>
    <edc:Interrupt edc:irq="45" edc:cname="SERCOM3_2" edc:desc="Serial Communication Interface 3" ltx:memberofperipheral="SERCOM3"/>
    <edc:Interrupt edc:irq="46" edc:cname="SERCOM3_OTHER" edc:desc="Serial Communication Interface 3" ltx:memberofperipheral="SERCOM3"/>
    <edc:Interrupt edc:irq="47" edc:cname="SERCOM4_0" edc:desc="Serial Communication Interface 4" ltx:memberofperipheral="SERCOM4"/>
    <edc:Interrupt edc:irq="48" edc:cname="SERCOM4_1" edc:desc="Serial Communication Interface 4" ltx:memberofperipheral="SERCOM4"/>
    <edc:Interrupt edc:irq="49" edc:cname="SERCOM4_2" edc:desc="Serial Communication Interface 4" ltx:memberofperipheral="SERCOM4"/>
    <edc:Interrupt edc:irq="50" edc:cname="SERCOM4_OTHER" edc:desc="Serial Communication Interface 4" ltx:memberofperipheral="SERCOM4"/>
    <edc:Interrupt edc:irq="51" edc:cname="SERCOM5_0" edc:desc="Serial Communication Interface 5" ltx:memberofperipheral="SERCOM5"/>
    <edc:Interrupt edc:irq="52" edc:cname="SERCOM5_1" edc:desc="Serial Communication Interface 5" ltx:memberofperipheral="SERCOM5"/>
    <edc:Interrupt edc:irq="53" edc:cname="SERCOM5_2" edc:desc="Serial Communication Interface 5" ltx:memberofperipheral="SERCOM5"/>
    <edc:Interrupt edc:irq="54" edc:cname="SERCOM5_OTHER" edc:desc="Serial Communication Interface 5" ltx:memberofperipheral="SERCOM5"/>
    <edc:Interrupt edc:irq="55" edc:cname="TC0" edc:desc="Timer Counter 0" ltx:memberofperipheral="TC0"/>
    <edc:Interrupt edc:irq="56" edc:cname="TC1" edc:desc="Timer Counter 1" ltx:memberofperipheral="TC1"/>
    <edc:Interrupt edc:irq="57" edc:cname="TC2" edc:desc="Timer Counter 2" ltx:memberofperipheral="TC2"/>
    <edc:Interrupt edc:irq="58" edc:cname="TCC0" edc:desc="TCC Match/Compare 0" ltx:memberofperipheral="TCC0"/>
    <edc:Interrupt edc:irq="59" edc:cname="TCC1" edc:desc="TCC Match/Compare 1" ltx:memberofperipheral="TCC1"/>
    <edc:Interrupt edc:irq="60" edc:cname="TCC2" edc:desc="TCC Match/Compare 2" ltx:memberofperipheral="TCC2"/>
    <edc:Interrupt edc:irq="61" edc:cname="TCC3" edc:desc="TCC Match/Compare 3" ltx:memberofperipheral="TCC3"/>
    <edc:Interrupt edc:irq="62" edc:cname="ADC_OTHER" edc:desc="Analog To Digital Converter" ltx:memberofperipheral="ADC"/>
    <edc:Interrupt edc:irq="63" edc:cname="ADC_RESRDY" edc:desc="ADC Result Ready" ltx:memberofperipheral="ADC"/>
    <edc:Interrupt edc:irq="64" edc:cname="AC" edc:desc="Analog Comparator" ltx:memberofperipheral="AC"/>
    <edc:Interrupt edc:irq="65" edc:cname="DAC_UNDERRUN" edc:desc="Digital to Analog Converter" ltx:memberofperipheral="DAC"/>
    <edc:Interrupt edc:irq="66" edc:cname="DAC_EMPTY" edc:desc="DAC Buffer 0 Empty" ltx:memberofperipheral="DAC"/>
    <edc:Interrupt edc:irq="67" edc:cname="PTC" edc:desc="Peripheral Touch Controller" ltx:memberofperipheral="PTC"/>
    <edc:Interrupt edc:irq="68" edc:cname="TRNG" edc:desc="True Random Generator" ltx:memberofperipheral="TRNG"/>
    <edc:Interrupt edc:irq="69" edc:cname="I2S" edc:desc="Inter-IC Sound Interface" ltx:memberofperipheral="I2S"/>
    <edc:Interrupt edc:irq="70" edc:cname="TRAM" edc:desc="Trust Ram" ltx:memberofperipheral="TRAM"/>
  </edc:InterruptList>
  <edc:PeripheralList>
    <edc:Peripheral edc:cname="AC" edc:desc=""/>
    <edc:Peripheral edc:cname="ADC" edc:desc=""/>
    <edc:Peripheral edc:cname="CCL" edc:desc=""/>
    <edc:Peripheral edc:cname="CoreDebug" edc:desc=""/>
    <edc:Peripheral edc:cname="DAC" edc:desc=""/>
    <edc:Peripheral edc:cname="DIB" edc:desc=""/>
    <edc:Peripheral edc:cname="DMAC" edc:desc=""/>
    <edc:Peripheral edc:cname="DSU" edc:desc=""/>
    <edc:Peripheral edc:cname="DWT" edc:desc=""/>
    <edc:Peripheral edc:cname="EIC" edc:desc=""/>
    <edc:Peripheral edc:cname="EVSYS" edc:desc=""/>
    <edc:Peripheral edc:cname="FPB" edc:desc=""/>
    <edc:Peripheral edc:cname="FREQM" edc:desc=""/>
    <edc:Peripheral edc:cname="GCLK" edc:desc=""/>
    <edc:Peripheral edc:cname="I2S" edc:desc=""/>
    <edc:Peripheral edc:cname="ICB" edc:desc=""/>
    <edc:Peripheral edc:cname="MCLK" edc:desc=""/>
    <edc:Peripheral edc:cname="MPU" edc:desc=""/>
    <edc:Peripheral edc:cname="NVIC" edc:desc=""/>
    <edc:Peripheral edc:cname="NVMCTRL" edc:desc=""/>
    <edc:Peripheral edc:cname="FUSES" edc:desc=""/>
    <edc:Peripheral edc:cname="OPAMP" edc:desc=""/>
    <edc:Peripheral edc:cname="OSC32KCTRL" edc:desc=""/>
    <edc:Peripheral edc:cname="OSCCTRL" edc:desc=""/>
    <edc:Peripheral edc:cname="PAC" edc:desc=""/>
    <edc:Peripheral edc:cname="PM" edc:desc=""/>
    <edc:Peripheral edc:cname="PORT" edc:desc=""/>
    <edc:Peripheral edc:cname="PTC" edc:desc=""/>
    <edc:Peripheral edc:cname="RSTC" edc:desc=""/>
    <edc:Peripheral edc:cname="RTC" edc:desc=""/>
    <edc:Peripheral edc:cname="SCB" edc:desc=""/>
    <edc:Peripheral edc:cname="SERCOM0" edc:desc=""/>
    <edc:Peripheral edc:cname="SERCOM1" edc:desc=""/>
    <edc:Peripheral edc:cname="SERCOM2" edc:desc=""/>
    <edc:Peripheral edc:cname="SERCOM3" edc:desc=""/>
    <edc:Peripheral edc:cname="SERCOM4" edc:desc=""/>
    <edc:Peripheral edc:cname="SERCOM5" edc:desc=""/>
    <edc:Peripheral edc:cname="SUPC" edc:desc=""/>
    <edc:Peripheral edc:cname="SysTick" edc:desc=""/>
    <edc:Peripheral edc:cname="TC0" edc:desc=""/>
    <edc:Peripheral edc:cname="TC1" edc:desc=""/>
    <edc:Peripheral edc:cname="TC2" edc:desc=""/>
    <edc:Peripheral edc:cname="TCC0" edc:desc=""/>
    <edc:Peripheral edc:cname="TCC1" edc:desc=""/>
    <edc:Peripheral edc:cname="TCC2" edc:desc=""/>
    <edc:Peripheral edc:cname="TCC3" edc:desc=""/>
    <edc:Peripheral edc:cname="TRAM" edc:desc=""/>
    <edc:Peripheral edc:cname="TRNG" edc:desc=""/>
    <edc:Peripheral edc:cname="USB" edc:desc=""/>
    <edc:Peripheral edc:cname="WDT" edc:desc=""/>
  </edc:PeripheralList>
  <edc:PhysicalSpace>
    <edc:NMMRPlace edc:regionid="corenmmrs">
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R0" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="0"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R1" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="4"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R2" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="8"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R3" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="12"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R4" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="16"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R5" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="20"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R6" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="24"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R7" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="28"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R8" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="32"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R9" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="36"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R10" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="40"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R11" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="44"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R12" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="48"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="SP" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="Stack Pointer" edc:nmmrid="52"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="MSP" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="Main Stack Pointer" edc:nmmrid="64"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="PSP" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="Process Stack Pointer" edc:nmmrid="68"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="LR" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="11111111111111111111111111111111" edc:mclr="11111111111111111111111111111111" edc:desc="Link Register" edc:nmmrid="56"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="PC" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="Program Counter" edc:nmmrid="60"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="PSR" edc:impl="0xF10001FF" edc:access="nnnn---n---------------nnnnnnnnn" edc:por="00000001000000000000000000000000" edc:mclr="00000001000000000000000000000000" edc:desc="Program Status Register" edc:nmmrid="72"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="APSR" edc:impl="0xF0000000" edc:access="nnnn----------------------------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Application Program Status Register" edc:nmmrid="76"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="IPSR" edc:impl="0x3F" edc:access="--------------------------rrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Interrupt Program Status Register" edc:nmmrid="80"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="EPSR" edc:impl="0x1000000" edc:access="-------r------------------------" edc:por="00000001000000000000000000000000" edc:mclr="00000001000000000000000000000000" edc:desc="Execution Program Status Register" edc:nmmrid="84"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="PRIMASK" edc:impl="0x1" edc:access="-------------------------------n" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Priority Mask Register" edc:nmmrid="88"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="CONTROL" edc:impl="0x3" edc:access="------------------------------nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Control Register" edc:nmmrid="100"/>
    </edc:NMMRPlace>
    <edc:CodeSector edc:regionid="IFLASH" edc:beginaddr="0x0" edc:endaddr="0x40000" atdf:pagesize="0x40" edc:rw="rw"/>
    <edc:CodeSector edc:regionid="DATAFLASH" edc:beginaddr="0x400000" edc:endaddr="0x402000" atdf:pagesize="0x40" edc:rw="rw"/>
    <edc:UserZone edc:regionid="USER_PAGE" edc:beginaddr="0x804000" edc:endaddr="0x804100" atdf:pagesize="0x40" edc:rw="rw" edc:erasepagesize="0x100"/>
    <edc:ConfigFuseSector edc:regionid="USER_FUSES" edc:beginaddr="0x804000" edc:endaddr="0x804008" atdf:pagesize="0x40" edc:erasepagesize="0x100">
      <edc:DCRDef ltx:memberofperipheral="FUSES" edc:cname="USER_WORD_0" edc:nzwidth="0x20" edc:impl="0xFE00FFBF" edc:unused="0x0" edc:useinchecksum="0xFFFFFFFF" edc:factorydefault="0xB08F4377" edc:access="nnnnnnn---------nnnnnnnnn-nnnnnn" edc:_addr="0x804000" edc:default="0xB08F4377">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSES">
            <edc:DCRFieldDef edc:cname="NVMCTRL_SULCK" edc:nzwidth="0x3" edc:desc="NVM Secure Region Locks"/>
            <edc:DCRFieldDef edc:cname="NVMCTRL_NSULCK" edc:nzwidth="0x3" edc:desc="NVM Non-Secure Region Locks"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:DCRFieldDef edc:cname="BOD33USERLEVEL" edc:nzwidth="0x6" edc:desc="BOD33 User Level"/>
            <edc:DCRFieldDef edc:cname="BOD33_DIS" edc:nzwidth="0x1" edc:desc="BOD33 Disable">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="BOD33_ACTION" edc:nzwidth="0x2" edc:desc="BOD33 Action"/>
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:DCRFieldDef edc:cname="WDT_RUNSTDBY" edc:nzwidth="0x1" edc:desc="WDT Run During Standby">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="WDT_ENABLE" edc:nzwidth="0x1" edc:desc="WDT Enable">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="WDT_ALWAYSON" edc:nzwidth="0x1" edc:desc="WDT Always On">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="WDT_PER" edc:nzwidth="0x4" edc:desc="WDT Period"/>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
      <edc:DCRDef ltx:memberofperipheral="FUSES" edc:cname="USER_WORD_1" edc:nzwidth="0x20" edc:impl="0x3FF" edc:unused="0x0" edc:useinchecksum="0xFFFFFFFF" edc:factorydefault="0xFFFFF0BB" edc:access="----------------------nnnnnnnnnn" edc:_addr="0x804004" edc:default="0xFFFFF0BB">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSES">
            <edc:DCRFieldDef edc:cname="WDT_WINDOW" edc:nzwidth="0x4" edc:desc="WDT Window"/>
            <edc:DCRFieldDef edc:cname="WDT_EWOFFSET" edc:nzwidth="0x4" edc:desc="WDT Early Warning Offset"/>
            <edc:DCRFieldDef edc:cname="WDT_WEN" edc:nzwidth="0x1" edc:desc="WDT Window Mode Enable">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="BOD33_HYST" edc:nzwidth="0x1" edc:desc="BOD33 Hysteresis">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
            </edc:DCRFieldDef>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
    </edc:ConfigFuseSector>
    <edc:UserIDSector edc:regionid="userid" edc:beginaddr="0x804008" edc:endaddr="0x804100" atdf:pagesize="0x40" edc:erasepagesize="0x100"/>
    <edc:ConfigFuseSector edc:regionid="BOCOR_FUSES" edc:beginaddr="0x80C004" edc:endaddr="0x80C050" atdf:pagesize="0x40" edc:erasepagesize="0x100">
      <edc:DCRDef ltx:memberofperipheral="FUSES" edc:cname="BOCOR_WORD_1" edc:nzwidth="0x20" edc:impl="0x7FF00" edc:unused="0x0" edc:useinchecksum="0xFFFFFFFF" edc:factorydefault="0xFFE80000" edc:access="-------------nnnnnnnnnnn--------" edc:_addr="0x80C004" edc:default="0xFFE80000">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSES">
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:DCRFieldDef edc:cname="BOOTROM_BOOTPROT" edc:nzwidth="0xB" edc:desc="Boot Protection"/>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
      <edc:AdjustPoint edc:offset="0x38" edc:_addr="0x80C008"/>
      <edc:DCRDef ltx:memberofperipheral="FUSES" edc:cname="BOCOR_WORD_16" edc:nzwidth="0x20" edc:impl="0xFFFFFFFF" edc:unused="0x0" edc:useinchecksum="0xFFFFFFFF" edc:factorydefault="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x80C040" edc:default="0xFFFFFFFF">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSES">
            <edc:DCRFieldDef edc:cname="BOOTROM_CRCKEY_0" edc:nzwidth="0x20" edc:desc="Crc Key bits 31:0"/>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
      <edc:DCRDef ltx:memberofperipheral="FUSES" edc:cname="BOCOR_WORD_17" edc:nzwidth="0x20" edc:impl="0xFFFFFFFF" edc:unused="0x0" edc:useinchecksum="0xFFFFFFFF" edc:factorydefault="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x80C044" edc:default="0xFFFFFFFF">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSES">
            <edc:DCRFieldDef edc:cname="BOOTROM_CRCKEY_1" edc:nzwidth="0x20" edc:desc="Crc Key bits 63:32"/>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
      <edc:DCRDef ltx:memberofperipheral="FUSES" edc:cname="BOCOR_WORD_18" edc:nzwidth="0x20" edc:impl="0xFFFFFFFF" edc:unused="0x0" edc:useinchecksum="0xFFFFFFFF" edc:factorydefault="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x80C048" edc:default="0xFFFFFFFF">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSES">
            <edc:DCRFieldDef edc:cname="BOOTROM_CRCKEY_2" edc:nzwidth="0x20" edc:desc="Crc Key bits 95:64"/>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
      <edc:DCRDef ltx:memberofperipheral="FUSES" edc:cname="BOCOR_WORD_19" edc:nzwidth="0x20" edc:impl="0xFFFFFFFF" edc:unused="0x0" edc:useinchecksum="0xFFFFFFFF" edc:factorydefault="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x80C04C" edc:default="0xFFFFFFFF">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSES">
            <edc:DCRFieldDef edc:cname="BOOTROM_CRCKEY_3" edc:nzwidth="0x20" edc:desc="Crc Key bits 127:96"/>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
    </edc:ConfigFuseSector>
    <edc:GPRDataSector edc:regionid="HSRAM" edc:beginaddr="0x20000000" edc:endaddr="0x20008000" edc:isexecutable="true" edc:rw="rw"/>
    <edc:SFRDataSector edc:regionid="APBA" edc:beginaddr="0x40000000" edc:endaddr="0x40003424" edc:rw="rw">
      <edc:SFRDef ltx:memberofperipheral="PAC" edc:cname="WRCTRL" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000100000000000100001" edc:mclr="00000000000000100000000000100001" edc:impl="0xFFFFFF" edc:_addr="0x40000000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PAC">
            <edc:SFRFieldDef edc:cname="PERID" edc:nzwidth="0x10" edc:desc="Peripheral identifier"/>
            <edc:SFRFieldDef edc:cname="KEY" edc:nzwidth="0x8" edc:desc="Peripheral access control key">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="No action" edc:when="(field &amp; 0xFF) == 0"/>
              <edc:SFRFieldSemantic edc:cname="CLR" edc:desc="Clear protection" edc:when="(field &amp; 0xFF) == 1"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set protection" edc:when="(field &amp; 0xFF) == 2"/>
              <edc:SFRFieldSemantic edc:cname="SETLCK" edc:desc="Set and lock protection" edc:when="(field &amp; 0xFF) == 3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PAC" edc:cname="EVCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x40000004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PAC">
            <edc:SFRFieldDef edc:cname="ERREO" edc:nzwidth="0x1" edc:desc="Peripheral acess error event output"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x40000005"/>
      <edc:SFRDef ltx:memberofperipheral="PAC" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x40000008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PAC">
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Peripheral access error interrupt disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PAC" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x40000009">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PAC">
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Peripheral access error interrupt enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x6" edc:_addr="0x4000000A"/>
      <edc:SFRDef ltx:memberofperipheral="PAC" edc:cname="INTFLAGAHB" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF" edc:_addr="0x40000010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PAC">
            <edc:SFRFieldDef edc:cname="FLASH_" edc:nzwidth="0x1" edc:desc="FLASH"/>
            <edc:SFRFieldDef edc:cname="APBA_" edc:nzwidth="0x1" edc:desc="APBA"/>
            <edc:SFRFieldDef edc:cname="APBB_" edc:nzwidth="0x1" edc:desc="APBB"/>
            <edc:SFRFieldDef edc:cname="APBC_" edc:nzwidth="0x1" edc:desc="APBC"/>
            <edc:SFRFieldDef edc:cname="HSRAMCPU_" edc:nzwidth="0x1" edc:desc="HSRAMCPU"/>
            <edc:SFRFieldDef edc:cname="HSRAMDMAC_" edc:nzwidth="0x1" edc:desc="HSRAMDMAC"/>
            <edc:SFRFieldDef edc:cname="HSRAMDSU_" edc:nzwidth="0x1" edc:desc="HSRAMDSU"/>
            <edc:SFRFieldDef edc:cname="BROM_" edc:nzwidth="0x1" edc:desc="BROM"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PAC" edc:cname="INTFLAGA" edc:nzwidth="0x20" edc:access="------------------nnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3FFF" edc:_addr="0x40000014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PAC">
            <edc:SFRFieldDef edc:cname="PAC_" edc:nzwidth="0x1" edc:desc="PAC"/>
            <edc:SFRFieldDef edc:cname="PM_" edc:nzwidth="0x1" edc:desc="PM"/>
            <edc:SFRFieldDef edc:cname="MCLK_" edc:nzwidth="0x1" edc:desc="MCLK"/>
            <edc:SFRFieldDef edc:cname="RSTC_" edc:nzwidth="0x1" edc:desc="RSTC"/>
            <edc:SFRFieldDef edc:cname="OSCCTRL_" edc:nzwidth="0x1" edc:desc="OSCCTRL"/>
            <edc:SFRFieldDef edc:cname="OSC32KCTRL_" edc:nzwidth="0x1" edc:desc="OSC32KCTRL"/>
            <edc:SFRFieldDef edc:cname="SUPC_" edc:nzwidth="0x1" edc:desc="SUPC"/>
            <edc:SFRFieldDef edc:cname="GCLK_" edc:nzwidth="0x1" edc:desc="GCLK"/>
            <edc:SFRFieldDef edc:cname="WDT_" edc:nzwidth="0x1" edc:desc="WDT"/>
            <edc:SFRFieldDef edc:cname="RTC_" edc:nzwidth="0x1" edc:desc="RTC"/>
            <edc:SFRFieldDef edc:cname="EIC_" edc:nzwidth="0x1" edc:desc="EIC"/>
            <edc:SFRFieldDef edc:cname="FREQM_" edc:nzwidth="0x1" edc:desc="FREQM"/>
            <edc:SFRFieldDef edc:cname="PORT_" edc:nzwidth="0x1" edc:desc="PORT"/>
            <edc:SFRFieldDef edc:cname="AC_" edc:nzwidth="0x1" edc:desc="AC"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PAC" edc:cname="INTFLAGB" edc:nzwidth="0x20" edc:access="--------------------------nnnnn-" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3E" edc:_addr="0x40000018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PAC">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DSU_" edc:nzwidth="0x1" edc:desc="DSU"/>
            <edc:SFRFieldDef edc:cname="NVMCTRL_" edc:nzwidth="0x1" edc:desc="NVMCTRL"/>
            <edc:SFRFieldDef edc:cname="DMAC_" edc:nzwidth="0x1" edc:desc="DMAC"/>
            <edc:SFRFieldDef edc:cname="HMATRIXHS_" edc:nzwidth="0x1" edc:desc="HMATRIXHS"/>
            <edc:SFRFieldDef edc:cname="USB_" edc:nzwidth="0x1" edc:desc="USB"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PAC" edc:cname="INTFLAGC" edc:nzwidth="0x20" edc:access="----------nnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3FFFFF" edc:_addr="0x4000001C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PAC">
            <edc:SFRFieldDef edc:cname="EVSYS_" edc:nzwidth="0x1" edc:desc="EVSYS"/>
            <edc:SFRFieldDef edc:cname="SERCOM0_" edc:nzwidth="0x1" edc:desc="SERCOM0"/>
            <edc:SFRFieldDef edc:cname="SERCOM1_" edc:nzwidth="0x1" edc:desc="SERCOM1"/>
            <edc:SFRFieldDef edc:cname="SERCOM2_" edc:nzwidth="0x1" edc:desc="SERCOM2"/>
            <edc:SFRFieldDef edc:cname="SERCOM3_" edc:nzwidth="0x1" edc:desc="SERCOM3"/>
            <edc:SFRFieldDef edc:cname="SERCOM4_" edc:nzwidth="0x1" edc:desc="SERCOM4"/>
            <edc:SFRFieldDef edc:cname="SERCOM5_" edc:nzwidth="0x1" edc:desc="SERCOM5"/>
            <edc:SFRFieldDef edc:cname="TC0_" edc:nzwidth="0x1" edc:desc="TC0"/>
            <edc:SFRFieldDef edc:cname="TC1_" edc:nzwidth="0x1" edc:desc="TC1"/>
            <edc:SFRFieldDef edc:cname="TC2_" edc:nzwidth="0x1" edc:desc="TC2"/>
            <edc:SFRFieldDef edc:cname="TCC0_" edc:nzwidth="0x1" edc:desc="TCC0"/>
            <edc:SFRFieldDef edc:cname="TCC1_" edc:nzwidth="0x1" edc:desc="TCC1"/>
            <edc:SFRFieldDef edc:cname="TCC2_" edc:nzwidth="0x1" edc:desc="TCC2"/>
            <edc:SFRFieldDef edc:cname="TCC3_" edc:nzwidth="0x1" edc:desc="TCC3"/>
            <edc:SFRFieldDef edc:cname="ADC_" edc:nzwidth="0x1" edc:desc="ADC"/>
            <edc:SFRFieldDef edc:cname="DAC_" edc:nzwidth="0x1" edc:desc="DAC"/>
            <edc:SFRFieldDef edc:cname="PTC_" edc:nzwidth="0x1" edc:desc="PTC"/>
            <edc:SFRFieldDef edc:cname="TRNG_" edc:nzwidth="0x1" edc:desc="TRNG"/>
            <edc:SFRFieldDef edc:cname="CCL_" edc:nzwidth="0x1" edc:desc="CCL"/>
            <edc:SFRFieldDef edc:cname="I2S_" edc:nzwidth="0x1" edc:desc="I2S"/>
            <edc:SFRFieldDef edc:cname="OPAMP_" edc:nzwidth="0x1" edc:desc="OPAMP"/>
            <edc:SFRFieldDef edc:cname="TRAM_" edc:nzwidth="0x1" edc:desc="TRAM"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x14" edc:_addr="0x40000020"/>
      <edc:SFRDef ltx:memberofperipheral="PAC" edc:cname="STATUSA" edc:nzwidth="0x20" edc:access="------------------rrrrrrrrrrrrrr" edc:por="00000000000000001100000000000000" edc:mclr="00000000000000001100000000000000" edc:impl="0x3FFF" edc:_addr="0x40000034">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PAC">
            <edc:SFRFieldDef edc:cname="PAC_" edc:nzwidth="0x1" edc:desc="PAC APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="PM_" edc:nzwidth="0x1" edc:desc="PM APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="MCLK_" edc:nzwidth="0x1" edc:desc="MCLK APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="RSTC_" edc:nzwidth="0x1" edc:desc="RSTC APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="OSCCTRL_" edc:nzwidth="0x1" edc:desc="OSCCTRL APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="OSC32KCTRL_" edc:nzwidth="0x1" edc:desc="OSC32KCTRL APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="SUPC_" edc:nzwidth="0x1" edc:desc="SUPC APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="GCLK_" edc:nzwidth="0x1" edc:desc="GCLK APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="WDT_" edc:nzwidth="0x1" edc:desc="WDT APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="RTC_" edc:nzwidth="0x1" edc:desc="RTC APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="EIC_" edc:nzwidth="0x1" edc:desc="EIC APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="FREQM_" edc:nzwidth="0x1" edc:desc="FREQM APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="PORT_" edc:nzwidth="0x1" edc:desc="PORT APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="AC_" edc:nzwidth="0x1" edc:desc="AC APB Protect Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PAC" edc:cname="STATUSB" edc:nzwidth="0x20" edc:access="--------------------------rrrrr-" edc:por="00000000000000000000000000000010" edc:mclr="00000000000000000000000000000010" edc:impl="0x3E" edc:_addr="0x40000038">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PAC">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DSU_" edc:nzwidth="0x1" edc:desc="DSU APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="NVMCTRL_" edc:nzwidth="0x1" edc:desc="NVMCTRL APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="DMAC_" edc:nzwidth="0x1" edc:desc="DMAC APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="HMATRIXHS_" edc:nzwidth="0x1" edc:desc="HMATRIXHS APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="USB_" edc:nzwidth="0x1" edc:desc="USB APB Protect Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PAC" edc:cname="STATUSC" edc:nzwidth="0x20" edc:access="----------rrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3FFFFF" edc:_addr="0x4000003C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PAC">
            <edc:SFRFieldDef edc:cname="EVSYS_" edc:nzwidth="0x1" edc:desc="EVSYS APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="SERCOM0_" edc:nzwidth="0x1" edc:desc="SERCOM0 APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="SERCOM1_" edc:nzwidth="0x1" edc:desc="SERCOM1 APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="SERCOM2_" edc:nzwidth="0x1" edc:desc="SERCOM2 APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="SERCOM3_" edc:nzwidth="0x1" edc:desc="SERCOM3 APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="SERCOM4_" edc:nzwidth="0x1" edc:desc="SERCOM4 APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="SERCOM5_" edc:nzwidth="0x1" edc:desc="SERCOM5 APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="TC0_" edc:nzwidth="0x1" edc:desc="TC0 APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="TC1_" edc:nzwidth="0x1" edc:desc="TC1 APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="TC2_" edc:nzwidth="0x1" edc:desc="TC2 APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="TCC0_" edc:nzwidth="0x1" edc:desc="TCC0 APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="TCC1_" edc:nzwidth="0x1" edc:desc="TCC1 APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="TCC2_" edc:nzwidth="0x1" edc:desc="TCC2 APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="TCC3_" edc:nzwidth="0x1" edc:desc="TCC3 APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="ADC_" edc:nzwidth="0x1" edc:desc="ADC APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="DAC_" edc:nzwidth="0x1" edc:desc="DAC APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="PTC_" edc:nzwidth="0x1" edc:desc="PTC APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="TRNG_" edc:nzwidth="0x1" edc:desc="TRNG APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="CCL_" edc:nzwidth="0x1" edc:desc="CCL APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="I2S_" edc:nzwidth="0x1" edc:desc="I2S APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="OPAMP_" edc:nzwidth="0x1" edc:desc="OPAMP APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="TRAM_" edc:nzwidth="0x1" edc:desc="TRAM APB Protect Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3C1" edc:_addr="0x40000040"/>
      <edc:SFRDef ltx:memberofperipheral="PM" edc:cname="SLEEPCFG" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000010" edc:mclr="00000010" edc:impl="0x7" edc:_addr="0x40000401">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PM">
            <edc:SFRFieldDef edc:cname="SLEEPMODE" edc:nzwidth="0x3" edc:desc="Sleep Mode">
              <edc:SFRFieldSemantic edc:cname="IDLE" edc:desc="CPU, AHBx, and APBx clocks are OFF" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="STANDBY" edc:desc="ALL clocks are OFF, unless requested by sleepwalking peripheral" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="All power domains are powered OFF" edc:when="(field &amp; 0x7) == 6"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PM" edc:cname="PLCFG" edc:nzwidth="0x8" edc:access="n-----nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x83" edc:_addr="0x40000402">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PM">
            <edc:SFRFieldDef edc:cname="PLSEL" edc:nzwidth="0x2" edc:desc="Performance Level Select">
              <edc:SFRFieldSemantic edc:cname="PL0" edc:desc="Performance Level 0" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PL2" edc:desc="Performance Level 2" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="PLDIS" edc:nzwidth="0x1" edc:desc="Performance Level Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PM" edc:cname="PWCFG" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x40000403">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PM">
            <edc:SFRFieldDef edc:cname="RAMPSWC" edc:nzwidth="0x2" edc:desc="RAM Power Switch Configuration">
              <edc:SFRFieldSemantic edc:cname="64KB" edc:desc="64KB Available" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="48KB" edc:desc="48KB Available" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="32KB" edc:desc="32KB Available" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="16KB" edc:desc="16KB Available" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PM" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x40000404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PM">
            <edc:SFRFieldDef edc:cname="PLRDY" edc:nzwidth="0x1" edc:desc="Performance Level Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PM" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x40000405">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PM">
            <edc:SFRFieldDef edc:cname="PLRDY" edc:nzwidth="0x1" edc:desc="Performance Level Ready interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PM" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x40000406">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PM">
            <edc:SFRFieldDef edc:cname="PLRDY" edc:nzwidth="0x1" edc:desc="Performance Level Ready"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x40000407"/>
      <edc:SFRDef ltx:memberofperipheral="PM" edc:cname="STDBYCFG" edc:nzwidth="0x10" edc:access="---n-n--nn-n---n" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x14D1" edc:_addr="0x40000408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PM">
            <edc:SFRFieldDef edc:cname="PDCFG" edc:nzwidth="0x1" edc:desc="Power Domain Configuration">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="PDSW power domain switching is handled by hardware." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PDSW" edc:desc="PDSW is forced ACTIVE." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DPGPDSW" edc:nzwidth="0x1" edc:desc="Dynamic Power Gating for PDSW">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Dynamic Power Gating disabled" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Dynamic Power Gating enabled" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="VREGSMOD" edc:nzwidth="0x2" edc:desc="Voltage Regulator Standby mode">
              <edc:SFRFieldSemantic edc:cname="AUTO" edc:desc="Automatic mode" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PERFORMANCE" edc:desc="Performance oriented" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="LP" edc:desc="Low Power oriented" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="BBIASHS" edc:nzwidth="0x1" edc:desc="Back Bias for SRAM"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BBIASTR" edc:nzwidth="0x1" edc:desc="Back Bias for Trust RAM"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3F6" edc:_addr="0x4000040A"/>
      <edc:SFRDef ltx:memberofperipheral="MCLK" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="-----n--" edc:por="00000000" edc:mclr="00000000" edc:impl="0x4" edc:_addr="0x40000800">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCLK">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CKSEL" edc:nzwidth="0x1" edc:desc="Clock Select"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MCLK" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x40000801">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCLK">
            <edc:SFRFieldDef edc:cname="CKRDY" edc:nzwidth="0x1" edc:desc="Clock Ready Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MCLK" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x40000802">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCLK">
            <edc:SFRFieldDef edc:cname="CKRDY" edc:nzwidth="0x1" edc:desc="Clock Ready Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MCLK" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000001" edc:mclr="00000001" edc:impl="0x1" edc:_addr="0x40000803">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCLK">
            <edc:SFRFieldDef edc:cname="CKRDY" edc:nzwidth="0x1" edc:desc="Clock Ready"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MCLK" edc:cname="CPUDIV" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000001" edc:mclr="00000001" edc:_addr="0x40000804">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCLK">
            <edc:SFRFieldDef edc:cname="CPUDIV" edc:nzwidth="0x8" edc:desc="CPU Clock Division Factor">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="Divide by 1" edc:when="(field &amp; 0xFF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Divide by 2" edc:when="(field &amp; 0xFF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="Divide by 4" edc:when="(field &amp; 0xFF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="Divide by 8" edc:when="(field &amp; 0xFF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="Divide by 16" edc:when="(field &amp; 0xFF) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="Divide by 32" edc:when="(field &amp; 0xFF) == 0x20"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="Divide by 64" edc:when="(field &amp; 0xFF) == 0x40"/>
              <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="Divide by 128" edc:when="(field &amp; 0xFF) == 0x80"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xB" edc:_addr="0x40000805"/>
      <edc:SFRDef ltx:memberofperipheral="MCLK" edc:cname="AHBMASK" edc:nzwidth="0x20" edc:access="------------------nn----nnnnnnnn" edc:por="00000000000000000011111111111111" edc:mclr="00000000000000000011111111111111" edc:impl="0x30FF" edc:_addr="0x40000810">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCLK">
            <edc:SFRFieldDef edc:cname="APBA_" edc:nzwidth="0x1" edc:desc="APBA AHB Clock Mask"/>
            <edc:SFRFieldDef edc:cname="APBB_" edc:nzwidth="0x1" edc:desc="APBB AHB Clock Mask"/>
            <edc:SFRFieldDef edc:cname="APBC_" edc:nzwidth="0x1" edc:desc="APBC AHB Clock Mask"/>
            <edc:SFRFieldDef edc:cname="DMAC_" edc:nzwidth="0x1" edc:desc="DMAC AHB Clock Mask"/>
            <edc:SFRFieldDef edc:cname="DSU_" edc:nzwidth="0x1" edc:desc="DSU AHB Clock Mask"/>
            <edc:SFRFieldDef edc:cname="HMATRIXHS_" edc:nzwidth="0x1" edc:desc="HMATRIXHS AHB Clock Mask"/>
            <edc:SFRFieldDef edc:cname="PAC_" edc:nzwidth="0x1" edc:desc="PAC AHB Clock Mask"/>
            <edc:SFRFieldDef edc:cname="NVMCTRL_" edc:nzwidth="0x1" edc:desc="NVMCTRL AHB Clock Mask"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TRAM_" edc:nzwidth="0x1" edc:desc="TRAM AHB Clock Mask"/>
            <edc:SFRFieldDef edc:cname="USB_" edc:nzwidth="0x1" edc:desc="USB AHB Clock Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MCLK" edc:cname="APBAMASK" edc:nzwidth="0x20" edc:access="------------------nnnnnnnnnnnnnn" edc:por="00000000000000000111111111111111" edc:mclr="00000000000000000111111111111111" edc:impl="0x3FFF" edc:_addr="0x40000814">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCLK">
            <edc:SFRFieldDef edc:cname="PAC_" edc:nzwidth="0x1" edc:desc="PAC APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="PM_" edc:nzwidth="0x1" edc:desc="PM APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="MCLK_" edc:nzwidth="0x1" edc:desc="MCLK APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="RSTC_" edc:nzwidth="0x1" edc:desc="RSTC APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="OSCCTRL_" edc:nzwidth="0x1" edc:desc="OSCCTRL APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="OSC32KCTRL_" edc:nzwidth="0x1" edc:desc="OSC32KCTRL APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="SUPC_" edc:nzwidth="0x1" edc:desc="SUPC APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="GCLK_" edc:nzwidth="0x1" edc:desc="GCLK APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="WDT_" edc:nzwidth="0x1" edc:desc="WDT APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="RTC_" edc:nzwidth="0x1" edc:desc="RTC APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="EIC_" edc:nzwidth="0x1" edc:desc="EIC APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="FREQM_" edc:nzwidth="0x1" edc:desc="FREQM APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="PORT_" edc:nzwidth="0x1" edc:desc="PORT APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="AC_" edc:nzwidth="0x1" edc:desc="AC APB Clock Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MCLK" edc:cname="APBBMASK" edc:nzwidth="0x20" edc:access="--------------------------nn-nn-" edc:por="00000000000000000000000000110111" edc:mclr="00000000000000000000000000110111" edc:impl="0x36" edc:_addr="0x40000818">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCLK">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DSU_" edc:nzwidth="0x1" edc:desc="DSU APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="NVMCTRL_" edc:nzwidth="0x1" edc:desc="NVMCTRL APB Clock Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="HMATRIXHS_" edc:nzwidth="0x1" edc:desc="HMATRIXHS APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="USB_" edc:nzwidth="0x1" edc:desc="USB APB Clock Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MCLK" edc:cname="APBCMASK" edc:nzwidth="0x20" edc:access="-----------nnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000111111111111111111111" edc:mclr="00000000000111111111111111111111" edc:impl="0x1FFFFF" edc:_addr="0x4000081C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCLK">
            <edc:SFRFieldDef edc:cname="EVSYS_" edc:nzwidth="0x1" edc:desc="EVSYS APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="SERCOM0_" edc:nzwidth="0x1" edc:desc="SERCOM0 APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="SERCOM1_" edc:nzwidth="0x1" edc:desc="SERCOM1 APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="SERCOM2_" edc:nzwidth="0x1" edc:desc="SERCOM2 APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="SERCOM3_" edc:nzwidth="0x1" edc:desc="SERCOM3 APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="SERCOM4_" edc:nzwidth="0x1" edc:desc="SERCOM4 APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="SERCOM5_" edc:nzwidth="0x1" edc:desc="SERCOM5 APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="TC0_" edc:nzwidth="0x1" edc:desc="TC0 APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="TC1_" edc:nzwidth="0x1" edc:desc="TC1 APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="TC2_" edc:nzwidth="0x1" edc:desc="TC2 APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="TCC0_" edc:nzwidth="0x1" edc:desc="TCC0 APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="TCC1_" edc:nzwidth="0x1" edc:desc="TCC1 APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="TCC2_" edc:nzwidth="0x1" edc:desc="TCC2 APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="TCC3_" edc:nzwidth="0x1" edc:desc="TCC3 APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="ADC_" edc:nzwidth="0x1" edc:desc="ADC APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="DAC_" edc:nzwidth="0x1" edc:desc="DAC APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="PTC_" edc:nzwidth="0x1" edc:desc="PTC APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="TRNG_" edc:nzwidth="0x1" edc:desc="TRNG APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="CCL_" edc:nzwidth="0x1" edc:desc="CCL APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="I2S_" edc:nzwidth="0x1" edc:desc="I2S APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="OPAMP_" edc:nzwidth="0x1" edc:desc="OPAMP APB Clock Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3E0" edc:_addr="0x40000820"/>
      <edc:SFRDef ltx:memberofperipheral="RSTC" edc:cname="RCAUSE" edc:nzwidth="0x8" edc:access="-rrrrrrr" edc:impl="0x7F" edc:_addr="0x40000C00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RSTC">
            <edc:SFRFieldDef edc:cname="POR" edc:nzwidth="0x1" edc:desc="Power On Reset"/>
            <edc:SFRFieldDef edc:cname="BOD12" edc:nzwidth="0x1" edc:desc="Brown Out VDDCORE Detector Reset"/>
            <edc:SFRFieldDef edc:cname="BOD33" edc:nzwidth="0x1" edc:desc="Brown Out VDD/AVDD Detector Reset"/>
            <edc:SFRFieldDef edc:cname="BOD12PLL" edc:nzwidth="0x1" edc:desc="Brown Out VDDPLL Detector Reset"/>
            <edc:SFRFieldDef edc:cname="EXT" edc:nzwidth="0x1" edc:desc="External Reset"/>
            <edc:SFRFieldDef edc:cname="WDT" edc:nzwidth="0x1" edc:desc="Watchdog Reset"/>
            <edc:SFRFieldDef edc:cname="SYST" edc:nzwidth="0x1" edc:desc="System Reset Request"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3FF" edc:_addr="0x40000C01"/>
      <edc:SFRDef ltx:memberofperipheral="OSCCTRL" edc:cname="EVCTRL" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x40001000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSCCTRL">
            <edc:SFRFieldDef edc:cname="CFDEO" edc:nzwidth="0x1" edc:desc="Clock Failure Detector Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="TUNEEI" edc:nzwidth="0x1" edc:desc="Tune Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="TUNEINV" edc:nzwidth="0x1" edc:desc="Tune Event Input Invert"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x40001001"/>
      <edc:SFRDef ltx:memberofperipheral="OSCCTRL" edc:cname="INTENCLR" edc:nzwidth="0x20" edc:access="---nnnnn----nnnn-----nnn---n--nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F0F0713" edc:_addr="0x40001004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSCCTRL">
            <edc:SFRFieldDef edc:cname="XOSCRDY" edc:nzwidth="0x1" edc:desc="XOSC Ready Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="XOSCFAIL" edc:nzwidth="0x1" edc:desc="XOSC Clock Failure Detector Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="OSC16MRDY" edc:nzwidth="0x1" edc:desc="OSC16M Ready Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DFLLULPRDY" edc:nzwidth="0x1" edc:desc="DFLLULP Ready interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DFLLULPLOCK" edc:nzwidth="0x1" edc:desc="DFLLULP Lock Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DFLLULPNOLOCK" edc:nzwidth="0x1" edc:desc="DFLLULP No Lock Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="DPLLLCKR" edc:nzwidth="0x1" edc:desc="DPLL Lock Rise Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DPLLLCKF" edc:nzwidth="0x1" edc:desc="DPLL Lock Fall Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DPLLLTO" edc:nzwidth="0x1" edc:desc="DPLL Lock Timeout Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DPLLLDRTO" edc:nzwidth="0x1" edc:desc="DPLL Loop Divider Ratio Update Complete Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="DFLLRDY" edc:nzwidth="0x1" edc:desc="DFLL Ready Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DFLLOOB" edc:nzwidth="0x1" edc:desc="DFLL Out Of Bounds Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DFLLLCKF" edc:nzwidth="0x1" edc:desc="DFLL Lock Fine Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DFLLLCKC" edc:nzwidth="0x1" edc:desc="DFLL Lock Coarse Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DFLLRCS" edc:nzwidth="0x1" edc:desc="DFLL Reference Clock Stopped Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="OSCCTRL" edc:cname="INTENSET" edc:nzwidth="0x20" edc:access="---nnnnn----nnnn-----nnn---n--nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F0F0713" edc:_addr="0x40001008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSCCTRL">
            <edc:SFRFieldDef edc:cname="XOSCRDY" edc:nzwidth="0x1" edc:desc="XOSC Ready Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="XOSCFAIL" edc:nzwidth="0x1" edc:desc="XOSC Clock Failure Detector Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="OSC16MRDY" edc:nzwidth="0x1" edc:desc="OSC16M Ready Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DFLLULPRDY" edc:nzwidth="0x1" edc:desc="DFLLULP Ready interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DFLLULPLOCK" edc:nzwidth="0x1" edc:desc="DFLLULP Lock Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DFLLULPNOLOCK" edc:nzwidth="0x1" edc:desc="DFLLULP No Lock Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="DPLLLCKR" edc:nzwidth="0x1" edc:desc="DPLL Lock Rise Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DPLLLCKF" edc:nzwidth="0x1" edc:desc="DPLL Lock Fall Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DPLLLTO" edc:nzwidth="0x1" edc:desc="DPLL Lock Timeout Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DPLLLDRTO" edc:nzwidth="0x1" edc:desc="DPLL Loop Divider Ratio Update Complete Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="DFLLRDY" edc:nzwidth="0x1" edc:desc="DFLL Ready Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DFLLOOB" edc:nzwidth="0x1" edc:desc="DFLL Out Of Bounds Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DFLLLCKF" edc:nzwidth="0x1" edc:desc="DFLL Lock Fine Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DFLLLCKC" edc:nzwidth="0x1" edc:desc="DFLL Lock Coarse Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DFLLRCS" edc:nzwidth="0x1" edc:desc="DFLL Reference Clock Stopped Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="OSCCTRL" edc:cname="INTFLAG" edc:nzwidth="0x20" edc:access="---nnnnn----nnnn-----nnn---n--nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F0F0713" edc:_addr="0x4000100C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSCCTRL">
            <edc:SFRFieldDef edc:cname="XOSCRDY" edc:nzwidth="0x1" edc:desc="XOSC Ready"/>
            <edc:SFRFieldDef edc:cname="XOSCFAIL" edc:nzwidth="0x1" edc:desc="XOSC Clock Failure Detector"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="OSC16MRDY" edc:nzwidth="0x1" edc:desc="OSC16M Ready"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DFLLULPRDY" edc:nzwidth="0x1" edc:desc="DFLLULP Ready"/>
            <edc:SFRFieldDef edc:cname="DFLLULPLOCK" edc:nzwidth="0x1" edc:desc="DFLLULP Lock"/>
            <edc:SFRFieldDef edc:cname="DFLLULPNOLOCK" edc:nzwidth="0x1" edc:desc="DFLLULP No Lock"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="DPLLLCKR" edc:nzwidth="0x1" edc:desc="DPLL Lock Rise"/>
            <edc:SFRFieldDef edc:cname="DPLLLCKF" edc:nzwidth="0x1" edc:desc="DPLL Lock Fall"/>
            <edc:SFRFieldDef edc:cname="DPLLLTO" edc:nzwidth="0x1" edc:desc="DPLL Lock Timeout"/>
            <edc:SFRFieldDef edc:cname="DPLLLDRTO" edc:nzwidth="0x1" edc:desc="DPLL Loop Divider Ratio Update Complete"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="DFLLRDY" edc:nzwidth="0x1" edc:desc="DFLL Ready Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DFLLOOB" edc:nzwidth="0x1" edc:desc="DFLL Out Of Bounds Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DFLLLCKF" edc:nzwidth="0x1" edc:desc="DFLL Lock Fine Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DFLLLCKC" edc:nzwidth="0x1" edc:desc="DFLL Lock Coarse Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DFLLRCS" edc:nzwidth="0x1" edc:desc="DFLL Reference Clock Stopped Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="OSCCTRL" edc:cname="STATUS" edc:nzwidth="0x20" edc:access="---rrrrr----rrrr-----rrr---r-rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F0F0717" edc:_addr="0x40001010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSCCTRL">
            <edc:SFRFieldDef edc:cname="XOSCRDY" edc:nzwidth="0x1" edc:desc="XOSC Ready"/>
            <edc:SFRFieldDef edc:cname="XOSCFAIL" edc:nzwidth="0x1" edc:desc="XOSC Clock Failure Detector"/>
            <edc:SFRFieldDef edc:cname="XOSCCKSW" edc:nzwidth="0x1" edc:desc="XOSC Clock Switch"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="OSC16MRDY" edc:nzwidth="0x1" edc:desc="OSC16M Ready"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DFLLULPRDY" edc:nzwidth="0x1" edc:desc="DFLLULP Ready"/>
            <edc:SFRFieldDef edc:cname="DFLLULPLOCK" edc:nzwidth="0x1" edc:desc="DFLLULP Lock"/>
            <edc:SFRFieldDef edc:cname="DFLLULPNOLOCK" edc:nzwidth="0x1" edc:desc="DFLLULP No Lock"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="DPLLLCKR" edc:nzwidth="0x1" edc:desc="DPLL Lock Rise"/>
            <edc:SFRFieldDef edc:cname="DPLLLCKF" edc:nzwidth="0x1" edc:desc="DPLL Lock Fall"/>
            <edc:SFRFieldDef edc:cname="DPLLLTO" edc:nzwidth="0x1" edc:desc="DPLL Lock Timeout"/>
            <edc:SFRFieldDef edc:cname="DPLLLDRTO" edc:nzwidth="0x1" edc:desc="DPLL Loop Divider Ratio Update Complete"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="DFLLRDY" edc:nzwidth="0x1" edc:desc="DFLL Ready"/>
            <edc:SFRFieldDef edc:cname="DFLLOOB" edc:nzwidth="0x1" edc:desc="DFLL Out Of Bounds"/>
            <edc:SFRFieldDef edc:cname="DFLLLCKF" edc:nzwidth="0x1" edc:desc="DFLL Lock Fine"/>
            <edc:SFRFieldDef edc:cname="DFLLLCKC" edc:nzwidth="0x1" edc:desc="DFLL Lock Coarse"/>
            <edc:SFRFieldDef edc:cname="DFLLRCS" edc:nzwidth="0x1" edc:desc="DFLL Reference Clock Stopped"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="OSCCTRL" edc:cname="XOSCCTRL" edc:nzwidth="0x10" edc:access="nnnnnnnnnn-nnnn-" edc:por="0000000010000000" edc:mclr="0000000010000000" edc:impl="0xFFDE" edc:_addr="0x40001014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSCCTRL">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Oscillator Enable"/>
            <edc:SFRFieldDef edc:cname="XTALEN" edc:nzwidth="0x1" edc:desc="Crystal Oscillator Enable"/>
            <edc:SFRFieldDef edc:cname="CFDEN" edc:nzwidth="0x1" edc:desc="Clock Failure Detector Enable"/>
            <edc:SFRFieldDef edc:cname="SWBEN" edc:nzwidth="0x1" edc:desc="Clock Switch Back Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="On Demand Control"/>
            <edc:SFRFieldDef edc:cname="GAIN" edc:nzwidth="0x3" edc:desc="Oscillator Gain">
              <edc:SFRFieldSemantic edc:cname="GAIN2" edc:desc="2MHz max" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GAIN4" edc:desc="4MHz max" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GAIN8" edc:desc="8MHz max" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GAIN16" edc:desc="16MHz max" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GAIN30" edc:desc="30MHz max" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AMPGC" edc:nzwidth="0x1" edc:desc="Automatic Amplitude Gain Control"/>
            <edc:SFRFieldDef edc:cname="STARTUP" edc:nzwidth="0x4" edc:desc="Start-Up Time">
              <edc:SFRFieldSemantic edc:cname="CYCLE1" edc:desc="1 cycle" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE2" edc:desc="2 cycles" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE4" edc:desc="4 cycles" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE8" edc:desc="8 cycles" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE16" edc:desc="16 cycles" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE32" edc:desc="32 cycles" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE64" edc:desc="64 cycles" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE128" edc:desc="128 cycles" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE256" edc:desc="256 cycles" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE512" edc:desc="512 cycles" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE1024" edc:desc="1024 cycles" edc:when="(field &amp; 0xF) == 0xA"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE2048" edc:desc="2048 cycles" edc:when="(field &amp; 0xF) == 0xB"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE4096" edc:desc="4096 cycles" edc:when="(field &amp; 0xF) == 0xC"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE8192" edc:desc="8192 cycles" edc:when="(field &amp; 0xF) == 0xD"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE16384" edc:desc="16384 cycles" edc:when="(field &amp; 0xF) == 0xE"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE32768" edc:desc="32768 cycles" edc:when="(field &amp; 0xF) == 0xF"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="OSCCTRL" edc:cname="CFDPRESC" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x40001016">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSCCTRL">
            <edc:SFRFieldDef edc:cname="CFDPRESC" edc:nzwidth="0x3" edc:desc="Clock Failure Detector Prescaler">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="OSC16M/1" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="OSC16M/2" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="OSC16M/4" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="OSC16M/8" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="OSC16M/16" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="OSC16M/32" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="OSC16M/64" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="OSC16M/128" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x40001017"/>
      <edc:SFRDef ltx:memberofperipheral="OSCCTRL" edc:cname="OSC16MCTRL" edc:nzwidth="0x8" edc:access="nn--nnn-" edc:por="10000010" edc:mclr="10000010" edc:impl="0xCE" edc:_addr="0x40001018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSCCTRL">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Oscillator Enable"/>
            <edc:SFRFieldDef edc:cname="FSEL" edc:nzwidth="0x2" edc:desc="Oscillator Frequency Selection">
              <edc:SFRFieldSemantic edc:cname="4MHZ" edc:desc="4MHz" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="8MHZ" edc:desc="8MHz" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="12MHZ" edc:desc="12MHz" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="16MHZ" edc:desc="16MHz" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="On Demand Control"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x40001019"/>
      <edc:SFRDef ltx:memberofperipheral="OSCCTRL" edc:cname="DFLLULPCTRL" edc:nzwidth="0x10" edc:access="-----nnnnnnnn-n-" edc:por="0000010100000100" edc:mclr="0000010100000100" edc:impl="0x7FA" edc:_addr="0x4000101C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSCCTRL">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BINSE" edc:nzwidth="0x1" edc:desc="Binary Search Enable"/>
            <edc:SFRFieldDef edc:cname="SAFE" edc:nzwidth="0x1" edc:desc="Tuner Safe Mode"/>
            <edc:SFRFieldDef edc:cname="DITHER" edc:nzwidth="0x1" edc:desc="Tuner Dither Mode"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="On Demand"/>
            <edc:SFRFieldDef edc:cname="DIV" edc:nzwidth="0x3" edc:desc="Division Factor">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="Frequency Divided by 1" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Frequency Divided by 2" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="Frequency Divided by 4" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="Frequency Divided by 8" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="Frequency Divided by 16" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="Frequency Divided by 32" edc:when="(field &amp; 0x7) == 0x5"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="OSCCTRL" edc:cname="DFLLULPDITHER" edc:nzwidth="0x8" edc:access="-nnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x77" edc:_addr="0x4000101E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSCCTRL">
            <edc:SFRFieldDef edc:cname="STEP" edc:nzwidth="0x3" edc:desc="Dither Step">
              <edc:SFRFieldSemantic edc:cname="STEP1" edc:desc="Dither Step = 1" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="STEP2" edc:desc="Dither Step = 2" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="STEP4" edc:desc="Dither Step = 4" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="STEP8" edc:desc="Dither Step = 8" edc:when="(field &amp; 0x7) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x3" edc:desc="Dither Period">
              <edc:SFRFieldSemantic edc:cname="PER1" edc:desc="Dither Over 1 Reference Clock Period" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PER2" edc:desc="Dither Over 2 Reference Clock Period" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PER4" edc:desc="Dither Over 4 Reference Clock Period" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PER8" edc:desc="Dither Over 8 Reference Clock Period" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="PER16" edc:desc="Dither Over 16 Reference Clock Period" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="PER32" edc:desc="Dither Over 32 Reference Clock Period" edc:when="(field &amp; 0x7) == 0x5"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="OSCCTRL" edc:cname="DFLLULPRREQ" edc:nzwidth="0x8" edc:access="n-------" edc:por="00000000" edc:mclr="00000000" edc:impl="0x80" edc:_addr="0x4000101F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSCCTRL">
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="RREQ" edc:nzwidth="0x1" edc:desc="Read Request"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="OSCCTRL" edc:cname="DFLLULPDLY" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:por="00000000000000000000000010000000" edc:mclr="00000000000000000000000010000000" edc:impl="0xFF" edc:_addr="0x40001020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSCCTRL">
            <edc:SFRFieldDef edc:cname="DELAY" edc:nzwidth="0x8" edc:desc="Delay Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="OSCCTRL" edc:cname="DFLLULPRATIO" edc:nzwidth="0x20" edc:access="---------------------nnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FF" edc:_addr="0x40001024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSCCTRL">
            <edc:SFRFieldDef edc:cname="RATIO" edc:nzwidth="0xB" edc:desc="Target Tuner Ratio"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="OSCCTRL" edc:cname="DFLLULPSYNCBUSY" edc:nzwidth="0x20" edc:access="----------------------------r-r-" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xA" edc:_addr="0x40001028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSCCTRL">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable Bit Synchronization Busy"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DELAY" edc:nzwidth="0x1" edc:desc="Delay Register Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4000102C"/>
      <edc:SFRDef ltx:memberofperipheral="OSCCTRL" edc:cname="DFLLCTRL" edc:nzwidth="0x10" edc:access="----nnnnnnnnnnn-" edc:por="0000000010000000" edc:mclr="0000000010000000" edc:impl="0xFFE" edc:_addr="0x40001030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSCCTRL">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="DFLL Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x1" edc:desc="Operating Mode Selection"/>
            <edc:SFRFieldDef edc:cname="STABLE" edc:nzwidth="0x1" edc:desc="Stable DFLL Frequency"/>
            <edc:SFRFieldDef edc:cname="LLAW" edc:nzwidth="0x1" edc:desc="Lose Lock After Wake"/>
            <edc:SFRFieldDef edc:cname="USBCRM" edc:nzwidth="0x1" edc:desc="USB Clock Recovery Mode"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="On Demand Control"/>
            <edc:SFRFieldDef edc:cname="CCDIS" edc:nzwidth="0x1" edc:desc="Chill Cycle Disable"/>
            <edc:SFRFieldDef edc:cname="QLDIS" edc:nzwidth="0x1" edc:desc="Quick Lock Disable"/>
            <edc:SFRFieldDef edc:cname="BPLCKC" edc:nzwidth="0x1" edc:desc="Bypass Coarse Lock"/>
            <edc:SFRFieldDef edc:cname="WAITLOCK" edc:nzwidth="0x1" edc:desc="Wait Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x40001032"/>
      <edc:SFRDef ltx:memberofperipheral="OSCCTRL" edc:cname="DFLLVAL" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x40001034">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSCCTRL">
            <edc:SFRFieldDef edc:cname="FINE" edc:nzwidth="0xA" edc:desc="Fine Value"/>
            <edc:SFRFieldDef edc:cname="COARSE" edc:nzwidth="0x6" edc:desc="Coarse Value"/>
            <edc:SFRFieldDef edc:cname="DIFF" edc:nzwidth="0x10" edc:desc="Multiplication Ratio Difference"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="OSCCTRL" edc:cname="DFLLMUL" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x40001038">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSCCTRL">
            <edc:SFRFieldDef edc:cname="MUL" edc:nzwidth="0x10" edc:desc="DFLL Multiply Factor"/>
            <edc:SFRFieldDef edc:cname="FSTEP" edc:nzwidth="0xA" edc:desc="Fine Maximum Step"/>
            <edc:SFRFieldDef edc:cname="CSTEP" edc:nzwidth="0x6" edc:desc="Coarse Maximum Step"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="OSCCTRL" edc:cname="DFLLSYNC" edc:nzwidth="0x8" edc:access="n-------" edc:por="00000000" edc:mclr="00000000" edc:impl="0x80" edc:_addr="0x4000103C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSCCTRL">
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="READREQ" edc:nzwidth="0x1" edc:desc="Read Request"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x4000103D"/>
      <edc:SFRDef ltx:memberofperipheral="OSCCTRL" edc:cname="DPLLCTRLA" edc:nzwidth="0x8" edc:access="nn----n-" edc:por="10000000" edc:mclr="10000000" edc:impl="0xC2" edc:_addr="0x40001040">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSCCTRL">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="DPLL Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="On Demand Clock Activation"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x40001041"/>
      <edc:SFRDef ltx:memberofperipheral="OSCCTRL" edc:cname="DPLLRATIO" edc:nzwidth="0x20" edc:access="------------nnnn----nnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF0FFF" edc:_addr="0x40001044">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSCCTRL">
            <edc:SFRFieldDef edc:cname="LDR" edc:nzwidth="0xC" edc:desc="Loop Divider Ratio"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="LDRFRAC" edc:nzwidth="0x4" edc:desc="Loop Divider Ratio Fractional Part"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="OSCCTRL" edc:cname="DPLLCTRLB" edc:nzwidth="0x20" edc:access="-----nnnnnnnnnnn---n-nnn--nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FF173F" edc:_addr="0x40001048">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSCCTRL">
            <edc:SFRFieldDef edc:cname="FILTER" edc:nzwidth="0x2" edc:desc="Proportional Integral Filter Selection">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Default Filter Mode" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="LBFILT" edc:desc="Low Bandwidth Filter" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="HBFILT" edc:desc="High Bandwidth Filter" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="HDFILT" edc:desc="High Damping Filter" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LPEN" edc:nzwidth="0x1" edc:desc="Low-Power Enable"/>
            <edc:SFRFieldDef edc:cname="WUF" edc:nzwidth="0x1" edc:desc="Wake Up Fast"/>
            <edc:SFRFieldDef edc:cname="REFCLK" edc:nzwidth="0x2" edc:desc="Reference Clock Selection">
              <edc:SFRFieldSemantic edc:cname="XOSC32K" edc:desc="XOSC32K Clock Reference" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="XOSC" edc:desc="XOSC Clock Reference" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="GCLK Clock Reference" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="LTIME" edc:nzwidth="0x3" edc:desc="Lock Time">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="No time-out. Automatic lock" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="8MS" edc:desc="Time-out if no lock within 8 ms" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="9MS" edc:desc="Time-out if no lock within 9 ms" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="10MS" edc:desc="Time-out if no lock within 10 ms" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="11MS" edc:desc="Time-out if no lock within 11 ms" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LBYPASS" edc:nzwidth="0x1" edc:desc="Lock Bypass"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DIV" edc:nzwidth="0xB" edc:desc="Clock Divider"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="OSCCTRL" edc:cname="DPLLPRESC" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4000104C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSCCTRL">
            <edc:SFRFieldDef edc:cname="PRESC" edc:nzwidth="0x2" edc:desc="Output Clock Prescaler">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="DPLL output is divided by 1" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="DPLL output is divided by 2" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="DPLL output is divided by 4" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x4000104D"/>
      <edc:SFRDef ltx:memberofperipheral="OSCCTRL" edc:cname="DPLLSYNCBUSY" edc:nzwidth="0x8" edc:access="----rrr-" edc:por="00000000" edc:mclr="00000000" edc:impl="0xE" edc:_addr="0x40001050">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSCCTRL">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="DPLL Enable Synchronization Status"/>
            <edc:SFRFieldDef edc:cname="DPLLRATIO" edc:nzwidth="0x1" edc:desc="DPLL Loop Divider Ratio Synchronization Status"/>
            <edc:SFRFieldDef edc:cname="DPLLPRESC" edc:nzwidth="0x1" edc:desc="DPLL Prescaler Synchronization Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x40001051"/>
      <edc:SFRDef ltx:memberofperipheral="OSCCTRL" edc:cname="DPLLSTATUS" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x40001054">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSCCTRL">
            <edc:SFRFieldDef edc:cname="LOCK" edc:nzwidth="0x1" edc:desc="DPLL Lock"/>
            <edc:SFRFieldDef edc:cname="CLKRDY" edc:nzwidth="0x1" edc:desc="DPLL Clock Ready"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3AB" edc:_addr="0x40001055"/>
      <edc:SFRDef ltx:memberofperipheral="OSC32KCTRL" edc:cname="INTENCLR" edc:nzwidth="0x20" edc:access="-----------------------------n-n" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x5" edc:_addr="0x40001400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSC32KCTRL">
            <edc:SFRFieldDef edc:cname="XOSC32KRDY" edc:nzwidth="0x1" edc:desc="XOSC32K Ready Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CLKFAIL" edc:nzwidth="0x1" edc:desc="XOSC32K Clock Failure Detector Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="OSC32KCTRL" edc:cname="INTENSET" edc:nzwidth="0x20" edc:access="-----------------------------n-n" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x5" edc:_addr="0x40001404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSC32KCTRL">
            <edc:SFRFieldDef edc:cname="XOSC32KRDY" edc:nzwidth="0x1" edc:desc="XOSC32K Ready Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CLKFAIL" edc:nzwidth="0x1" edc:desc="XOSC32K Clock Failure Detector Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="OSC32KCTRL" edc:cname="INTFLAG" edc:nzwidth="0x20" edc:access="-----------------------------n-n" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x5" edc:_addr="0x40001408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSC32KCTRL">
            <edc:SFRFieldDef edc:cname="XOSC32KRDY" edc:nzwidth="0x1" edc:desc="XOSC32K Ready"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CLKFAIL" edc:nzwidth="0x1" edc:desc="XOSC32K Clock Failure Detector"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="OSC32KCTRL" edc:cname="STATUS" edc:nzwidth="0x20" edc:access="---------------------------rrr-r" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1D" edc:_addr="0x4000140C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSC32KCTRL">
            <edc:SFRFieldDef edc:cname="XOSC32KRDY" edc:nzwidth="0x1" edc:desc="XOSC32K Ready"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CLKFAIL" edc:nzwidth="0x1" edc:desc="XOSC32K Clock Failure Detector"/>
            <edc:SFRFieldDef edc:cname="CLKSW" edc:nzwidth="0x1" edc:desc="XOSC32K Clock switch"/>
            <edc:SFRFieldDef edc:cname="ULP32KSW" edc:nzwidth="0x1" edc:desc="OSCULP32K Clock Switch"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="OSC32KCTRL" edc:cname="RTCCTRL" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x40001410">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSC32KCTRL">
            <edc:SFRFieldDef edc:cname="RTCSEL" edc:nzwidth="0x3" edc:desc="RTC Clock Selection">
              <edc:SFRFieldSemantic edc:cname="ULP1K" edc:desc="1.024kHz from 32kHz internal ULP oscillator" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ULP32K" edc:desc="32.768kHz from 32kHz internal ULP oscillator" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="XOSC1K" edc:desc="1.024kHz from 32.768kHz external crystal oscillator" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="XOSC32K" edc:desc="32.768kHz from 32.768kHz external crystal oscillator" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x40001411"/>
      <edc:SFRDef ltx:memberofperipheral="OSC32KCTRL" edc:cname="XOSC32K" edc:nzwidth="0x10" edc:access="---n-nnnnn-nnnn-" edc:por="0000000010000000" edc:mclr="0000000010000000" edc:impl="0x17DE" edc:_addr="0x40001414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSC32KCTRL">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Oscillator Enable"/>
            <edc:SFRFieldDef edc:cname="XTALEN" edc:nzwidth="0x1" edc:desc="Crystal Oscillator Enable"/>
            <edc:SFRFieldDef edc:cname="EN32K" edc:nzwidth="0x1" edc:desc="32kHz Output Enable"/>
            <edc:SFRFieldDef edc:cname="EN1K" edc:nzwidth="0x1" edc:desc="1kHz Output Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="On Demand Control"/>
            <edc:SFRFieldDef edc:cname="STARTUP" edc:nzwidth="0x3" edc:desc="Oscillator Start-Up Time">
              <edc:SFRFieldSemantic edc:cname="CYCLE2048" edc:desc="62.5 ms" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE4096" edc:desc="125 ms" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE16384" edc:desc="500 ms" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE32768" edc:desc="1000 ms" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE65536" edc:desc="2000 ms" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE131072" edc:desc="4000 ms" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE262144" edc:desc="8000 ms" edc:when="(field &amp; 0x7) == 6"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="OSC32KCTRL" edc:cname="CFDCTRL" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x40001416">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSC32KCTRL">
            <edc:SFRFieldDef edc:cname="CFDEN" edc:nzwidth="0x1" edc:desc="Clock Failure Detector Enable"/>
            <edc:SFRFieldDef edc:cname="SWBACK" edc:nzwidth="0x1" edc:desc="Clock Switch Back Enable"/>
            <edc:SFRFieldDef edc:cname="CFDPRESC" edc:nzwidth="0x1" edc:desc="Clock Failure Detector Prescaler"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="OSC32KCTRL" edc:cname="EVCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x40001417">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSC32KCTRL">
            <edc:SFRFieldDef edc:cname="CFDEO" edc:nzwidth="0x1" edc:desc="Clock Failure Detector Event Output Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x40001418"/>
      <edc:SFRDef ltx:memberofperipheral="OSC32KCTRL" edc:cname="OSCULP32K" edc:nzwidth="0x20" edc:access="----------------n---------n-----" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x8020" edc:_addr="0x4000141C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSC32KCTRL">
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="ULP32KSW" edc:nzwidth="0x1" edc:desc="OSCULP32K Clock Switch Enable"/>
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3E0" edc:_addr="0x40001420"/>
      <edc:SFRDef ltx:memberofperipheral="SUPC" edc:cname="INTENCLR" edc:nzwidth="0x20" edc:access="-------------n------nn-n-----nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x40D07" edc:_addr="0x40001800">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SUPC">
            <edc:SFRFieldDef edc:cname="BOD33RDY" edc:nzwidth="0x1" edc:desc="BOD33 Ready"/>
            <edc:SFRFieldDef edc:cname="BOD33DET" edc:nzwidth="0x1" edc:desc="BOD33 Detection"/>
            <edc:SFRFieldDef edc:cname="B33SRDY" edc:nzwidth="0x1" edc:desc="BOD33 Synchronization Ready"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="VREGRDY" edc:nzwidth="0x1" edc:desc="Voltage Regulator Ready"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="VCORERDY" edc:nzwidth="0x1" edc:desc="VDDCORE Ready"/>
            <edc:SFRFieldDef edc:cname="ULPVREFRDY" edc:nzwidth="0x1" edc:desc="ULPVREF Voltage Reference Ready"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="VCOREPLLRDY" edc:nzwidth="0x1" edc:desc="Voltage Regulator PLL Ready"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SUPC" edc:cname="INTENSET" edc:nzwidth="0x20" edc:access="-------------n------nn-n-----nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x40D07" edc:_addr="0x40001804">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SUPC">
            <edc:SFRFieldDef edc:cname="BOD33RDY" edc:nzwidth="0x1" edc:desc="BOD33 Ready"/>
            <edc:SFRFieldDef edc:cname="BOD33DET" edc:nzwidth="0x1" edc:desc="BOD33 Detection"/>
            <edc:SFRFieldDef edc:cname="B33SRDY" edc:nzwidth="0x1" edc:desc="BOD33 Synchronization Ready"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="VREGRDY" edc:nzwidth="0x1" edc:desc="Voltage Regulator Ready"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="VCORERDY" edc:nzwidth="0x1" edc:desc="VDDCORE Ready"/>
            <edc:SFRFieldDef edc:cname="ULPVREFRDY" edc:nzwidth="0x1" edc:desc="ULPVREF Voltage Reference Ready"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="VCOREPLLRDY" edc:nzwidth="0x1" edc:desc="Voltage Regulator PLL Ready"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SUPC" edc:cname="INTFLAG" edc:nzwidth="0x20" edc:access="-------------n------nn-n-----nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x40D07" edc:_addr="0x40001808">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SUPC">
            <edc:SFRFieldDef edc:cname="BOD33RDY" edc:nzwidth="0x1" edc:desc="BOD33 Ready"/>
            <edc:SFRFieldDef edc:cname="BOD33DET" edc:nzwidth="0x1" edc:desc="BOD33 Detection"/>
            <edc:SFRFieldDef edc:cname="B33SRDY" edc:nzwidth="0x1" edc:desc="BOD33 Synchronization Ready"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="VREGRDY" edc:nzwidth="0x1" edc:desc="Voltage Regulator Ready"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="VCORERDY" edc:nzwidth="0x1" edc:desc="VDDCORE Ready"/>
            <edc:SFRFieldDef edc:cname="ULPVREFRDY" edc:nzwidth="0x1" edc:desc="ULPVREF Voltage Reference Ready"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="VCOREPLLRDY" edc:nzwidth="0x1" edc:desc="Voltage Regulator PLL Ready"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SUPC" edc:cname="STATUS" edc:nzwidth="0x20" edc:access="-------------r-----r-r-r-----rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x41507" edc:_addr="0x4000180C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SUPC">
            <edc:SFRFieldDef edc:cname="BOD33RDY" edc:nzwidth="0x1" edc:desc="BOD33 Ready"/>
            <edc:SFRFieldDef edc:cname="BOD33DET" edc:nzwidth="0x1" edc:desc="BOD33 Detection"/>
            <edc:SFRFieldDef edc:cname="B33SRDY" edc:nzwidth="0x1" edc:desc="BOD33 Synchronization Ready"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="VREGRDY" edc:nzwidth="0x1" edc:desc="Voltage Regulator Ready"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="VCORERDY" edc:nzwidth="0x1" edc:desc="VDDCORE Ready"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ULPVREFRDY" edc:nzwidth="0x1" edc:desc="Low Power Voltage Reference Ready"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="VCOREPLLRDY" edc:nzwidth="0x1" edc:desc="Voltage Regulator PLL Ready"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SUPC" edc:cname="BOD33" edc:nzwidth="0x20" edc:access="----------nnnnnnnnnnn--n-nnnnnn-" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3FF97E" edc:_addr="0x40001810">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SUPC">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="HYST" edc:nzwidth="0x1" edc:desc="Hysteresis Enable"/>
            <edc:SFRFieldDef edc:cname="ACTION" edc:nzwidth="0x2" edc:desc="Action when Threshold Crossed">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="RESET" edc:desc="The BOD33 generates a reset" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="INT" edc:desc="The BOD33 generates an interrupt" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="STDBYCFG" edc:nzwidth="0x1" edc:desc="Configuration in Standby mode"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ACTCFG" edc:nzwidth="0x1" edc:desc="Configuration in Active mode"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="VREFSEL" edc:nzwidth="0x1" edc:desc="BOD33 Voltage Reference Selection">
              <edc:SFRFieldSemantic edc:cname="SEL_VREF" edc:desc="Selects VREF for the BOD33" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SEL_ULPVREF" edc:desc="Selects ULPVREF for the BOD33" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PSEL" edc:nzwidth="0x4" edc:desc="Prescaler Select">
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Divide clock by 2" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="Divide clock by 4" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="Divide clock by 8" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="Divide clock by 16" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="Divide clock by 32" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="Divide clock by 64" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="Divide clock by 128" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="Divide clock by 256" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="DIV512" edc:desc="Divide clock by 512" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="Divide clock by 1024" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="DIV2048" edc:desc="Divide clock by 2048" edc:when="(field &amp; 0xF) == 0xA"/>
              <edc:SFRFieldSemantic edc:cname="DIV4096" edc:desc="Divide clock by 4096" edc:when="(field &amp; 0xF) == 0xB"/>
              <edc:SFRFieldSemantic edc:cname="DIV8192" edc:desc="Divide clock by 8192" edc:when="(field &amp; 0xF) == 0xC"/>
              <edc:SFRFieldSemantic edc:cname="DIV16384" edc:desc="Divide clock by 16384" edc:when="(field &amp; 0xF) == 0xD"/>
              <edc:SFRFieldSemantic edc:cname="DIV32768" edc:desc="Divide clock by 32768" edc:when="(field &amp; 0xF) == 0xE"/>
              <edc:SFRFieldSemantic edc:cname="DIV65536" edc:desc="Divide clock by 65536" edc:when="(field &amp; 0xF) == 0xF"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LEVEL" edc:nzwidth="0x6" edc:desc="Threshold Level for VDD/AVDD"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x40001814"/>
      <edc:SFRDef ltx:memberofperipheral="SUPC" edc:cname="VREG" edc:nzwidth="0x20" edc:access="nnnnnnnn----nnnn------nn-nn-nnn-" edc:por="00000000000000000000000000000010" edc:mclr="00000000000000000000000000000010" edc:impl="0xFF0F036E" edc:_addr="0x40001818">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SUPC">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="SEL" edc:nzwidth="0x2" edc:desc="Voltage Regulator Selection in active mode">
              <edc:SFRFieldSemantic edc:cname="LDO" edc:desc="LDO selection" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="BUCK" edc:desc="Buck selection" edc:when="(field &amp; 0x3) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="STDBYPL0" edc:nzwidth="0x1" edc:desc="Standby in PL0"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LPEFF" edc:nzwidth="0x1" edc:desc="Low Power efficiency"/>
            <edc:SFRFieldDef edc:cname="VREFSEL" edc:nzwidth="0x1" edc:desc="Voltage Regulator Voltage Reference Selection">
              <edc:SFRFieldSemantic edc:cname="SEL_VREF" edc:desc="Selects VREF for the VREG" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SEL_ULPVREF" edc:desc="Selects ULPVREF for the VREG" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="VSVSTEP" edc:nzwidth="0x4" edc:desc="Voltage Scaling Voltage Step"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="VSPER" edc:nzwidth="0x8" edc:desc="Voltage Scaling Period"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SUPC" edc:cname="VREF" edc:nzwidth="0x20" edc:access="------------nnnn--------nn---n--" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF00C4" edc:_addr="0x4000181C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SUPC">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="VREFOE" edc:nzwidth="0x1" edc:desc="Voltage Reference Output Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="On Demand Control"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="SEL" edc:nzwidth="0x4" edc:desc="Voltage Reference Selection for ADC/DAC">
              <edc:SFRFieldSemantic edc:cname="2V4" edc:desc="2.4V voltage reference typical value" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="2V5" edc:desc="2.5V voltage reference typical value" edc:when="(field &amp; 0xF) == 0x7"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SUPC" edc:cname="VREGPLL" edc:nzwidth="0x20" edc:access="--------------------nnnn-n----n-" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF42" edc:_addr="0x40001820">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SUPC">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Vreg PLL Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="STARTUP" edc:nzwidth="0x4" edc:desc="Startup Time"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x40001824"/>
      <edc:SFRDef ltx:memberofperipheral="SUPC" edc:cname="EVCTRL" edc:nzwidth="0x20" edc:access="------------------------------n-" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x2" edc:_addr="0x4000182C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SUPC">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BOD33DETEO" edc:nzwidth="0x1" edc:desc="BOD33 Detection Event Output Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3D0" edc:_addr="0x40001830"/>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x40001C00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x40001C01"/>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="----------------------rrrrrrrr-r" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3FD" edc:_addr="0x40001C04">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy bit"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="GENCTRL0" edc:nzwidth="0x1" edc:desc="Generic Clock Generator Control 0 Synchronization Busy bit"/>
            <edc:SFRFieldDef edc:cname="GENCTRL1" edc:nzwidth="0x1" edc:desc="Generic Clock Generator Control 1 Synchronization Busy bit"/>
            <edc:SFRFieldDef edc:cname="GENCTRL2" edc:nzwidth="0x1" edc:desc="Generic Clock Generator Control 2 Synchronization Busy bit"/>
            <edc:SFRFieldDef edc:cname="GENCTRL3" edc:nzwidth="0x1" edc:desc="Generic Clock Generator Control 3 Synchronization Busy bit"/>
            <edc:SFRFieldDef edc:cname="GENCTRL4" edc:nzwidth="0x1" edc:desc="Generic Clock Generator Control 4 Synchronization Busy bit"/>
            <edc:SFRFieldDef edc:cname="GENCTRL5" edc:nzwidth="0x1" edc:desc="Generic Clock Generator Control 5 Synchronization Busy bit"/>
            <edc:SFRFieldDef edc:cname="GENCTRL6" edc:nzwidth="0x1" edc:desc="Generic Clock Generator Control 6 Synchronization Busy bit"/>
            <edc:SFRFieldDef edc:cname="GENCTRL7" edc:nzwidth="0x1" edc:desc="Generic Clock Generator Control 7 Synchronization Busy bit"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x18" edc:_addr="0x40001C08"/>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="GENCTRL0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnn--nnnnnn----nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF3F0F" edc:_addr="0x40001C20">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="SRC" edc:nzwidth="0x4" edc:desc="Source Select">
              <edc:SFRFieldSemantic edc:cname="XOSC" edc:desc="XOSC oscillator output" edc:when="(field &amp; 0xF) == 0"/>
              <edc:SFRFieldSemantic edc:cname="GCLKIN" edc:desc="Generator input pad (GCLK_IO)" edc:when="(field &amp; 0xF) == 1"/>
              <edc:SFRFieldSemantic edc:cname="GCLKGEN1" edc:desc="Generic clock generator 1 output" edc:when="(field &amp; 0xF) == 2"/>
              <edc:SFRFieldSemantic edc:cname="OSCULP32K" edc:desc="OSCULP32K oscillator output" edc:when="(field &amp; 0xF) == 3"/>
              <edc:SFRFieldSemantic edc:cname="XOSC32K" edc:desc="XOSC32K oscillator output" edc:when="(field &amp; 0xF) == 4"/>
              <edc:SFRFieldSemantic edc:cname="OSC16M" edc:desc="OSC16M oscillator output" edc:when="(field &amp; 0xF) == 5"/>
              <edc:SFRFieldSemantic edc:cname="DFLLULP" edc:desc="DFLLULP output" edc:when="(field &amp; 0xF) == 6"/>
              <edc:SFRFieldSemantic edc:cname="DFLL48M" edc:desc="DFLL48M output" edc:when="(field &amp; 0xF) == 7"/>
              <edc:SFRFieldSemantic edc:cname="FDPLL96M" edc:desc="FDPLL96M output" edc:when="(field &amp; 0xF) == 8"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="GENEN" edc:nzwidth="0x1" edc:desc="Generic Clock Generator Enable"/>
            <edc:SFRFieldDef edc:cname="IDC" edc:nzwidth="0x1" edc:desc="Improve Duty Cycle"/>
            <edc:SFRFieldDef edc:cname="OOV" edc:nzwidth="0x1" edc:desc="Output Off Value"/>
            <edc:SFRFieldDef edc:cname="OE" edc:nzwidth="0x1" edc:desc="Output Enable"/>
            <edc:SFRFieldDef edc:cname="DIVSEL" edc:nzwidth="0x1" edc:desc="Divide Selection">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="Division by GENCTRLn.DIV" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Division by 2^(GENCTRLn.DIV+1)" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DIV" edc:nzwidth="0x10" edc:desc="Division Factor"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="GENCTRL1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnn--nnnnnn----nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF3F0F" edc:_addr="0x40001C24">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="SRC" edc:nzwidth="0x4" edc:desc="Source Select">
              <edc:SFRFieldSemantic edc:cname="XOSC" edc:desc="XOSC oscillator output" edc:when="(field &amp; 0xF) == 0"/>
              <edc:SFRFieldSemantic edc:cname="GCLKIN" edc:desc="Generator input pad (GCLK_IO)" edc:when="(field &amp; 0xF) == 1"/>
              <edc:SFRFieldSemantic edc:cname="GCLKGEN1" edc:desc="Generic clock generator 1 output" edc:when="(field &amp; 0xF) == 2"/>
              <edc:SFRFieldSemantic edc:cname="OSCULP32K" edc:desc="OSCULP32K oscillator output" edc:when="(field &amp; 0xF) == 3"/>
              <edc:SFRFieldSemantic edc:cname="XOSC32K" edc:desc="XOSC32K oscillator output" edc:when="(field &amp; 0xF) == 4"/>
              <edc:SFRFieldSemantic edc:cname="OSC16M" edc:desc="OSC16M oscillator output" edc:when="(field &amp; 0xF) == 5"/>
              <edc:SFRFieldSemantic edc:cname="DFLLULP" edc:desc="DFLLULP output" edc:when="(field &amp; 0xF) == 6"/>
              <edc:SFRFieldSemantic edc:cname="DFLL48M" edc:desc="DFLL48M output" edc:when="(field &amp; 0xF) == 7"/>
              <edc:SFRFieldSemantic edc:cname="FDPLL96M" edc:desc="FDPLL96M output" edc:when="(field &amp; 0xF) == 8"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="GENEN" edc:nzwidth="0x1" edc:desc="Generic Clock Generator Enable"/>
            <edc:SFRFieldDef edc:cname="IDC" edc:nzwidth="0x1" edc:desc="Improve Duty Cycle"/>
            <edc:SFRFieldDef edc:cname="OOV" edc:nzwidth="0x1" edc:desc="Output Off Value"/>
            <edc:SFRFieldDef edc:cname="OE" edc:nzwidth="0x1" edc:desc="Output Enable"/>
            <edc:SFRFieldDef edc:cname="DIVSEL" edc:nzwidth="0x1" edc:desc="Divide Selection">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="Division by GENCTRLn.DIV" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Division by 2^(GENCTRLn.DIV+1)" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DIV" edc:nzwidth="0x10" edc:desc="Division Factor"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="GENCTRL2" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnn--nnnnnn----nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF3F0F" edc:_addr="0x40001C28">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="SRC" edc:nzwidth="0x4" edc:desc="Source Select">
              <edc:SFRFieldSemantic edc:cname="XOSC" edc:desc="XOSC oscillator output" edc:when="(field &amp; 0xF) == 0"/>
              <edc:SFRFieldSemantic edc:cname="GCLKIN" edc:desc="Generator input pad (GCLK_IO)" edc:when="(field &amp; 0xF) == 1"/>
              <edc:SFRFieldSemantic edc:cname="GCLKGEN1" edc:desc="Generic clock generator 1 output" edc:when="(field &amp; 0xF) == 2"/>
              <edc:SFRFieldSemantic edc:cname="OSCULP32K" edc:desc="OSCULP32K oscillator output" edc:when="(field &amp; 0xF) == 3"/>
              <edc:SFRFieldSemantic edc:cname="XOSC32K" edc:desc="XOSC32K oscillator output" edc:when="(field &amp; 0xF) == 4"/>
              <edc:SFRFieldSemantic edc:cname="OSC16M" edc:desc="OSC16M oscillator output" edc:when="(field &amp; 0xF) == 5"/>
              <edc:SFRFieldSemantic edc:cname="DFLLULP" edc:desc="DFLLULP output" edc:when="(field &amp; 0xF) == 6"/>
              <edc:SFRFieldSemantic edc:cname="DFLL48M" edc:desc="DFLL48M output" edc:when="(field &amp; 0xF) == 7"/>
              <edc:SFRFieldSemantic edc:cname="FDPLL96M" edc:desc="FDPLL96M output" edc:when="(field &amp; 0xF) == 8"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="GENEN" edc:nzwidth="0x1" edc:desc="Generic Clock Generator Enable"/>
            <edc:SFRFieldDef edc:cname="IDC" edc:nzwidth="0x1" edc:desc="Improve Duty Cycle"/>
            <edc:SFRFieldDef edc:cname="OOV" edc:nzwidth="0x1" edc:desc="Output Off Value"/>
            <edc:SFRFieldDef edc:cname="OE" edc:nzwidth="0x1" edc:desc="Output Enable"/>
            <edc:SFRFieldDef edc:cname="DIVSEL" edc:nzwidth="0x1" edc:desc="Divide Selection">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="Division by GENCTRLn.DIV" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Division by 2^(GENCTRLn.DIV+1)" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DIV" edc:nzwidth="0x10" edc:desc="Division Factor"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="GENCTRL3" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnn--nnnnnn----nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF3F0F" edc:_addr="0x40001C2C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="SRC" edc:nzwidth="0x4" edc:desc="Source Select">
              <edc:SFRFieldSemantic edc:cname="XOSC" edc:desc="XOSC oscillator output" edc:when="(field &amp; 0xF) == 0"/>
              <edc:SFRFieldSemantic edc:cname="GCLKIN" edc:desc="Generator input pad (GCLK_IO)" edc:when="(field &amp; 0xF) == 1"/>
              <edc:SFRFieldSemantic edc:cname="GCLKGEN1" edc:desc="Generic clock generator 1 output" edc:when="(field &amp; 0xF) == 2"/>
              <edc:SFRFieldSemantic edc:cname="OSCULP32K" edc:desc="OSCULP32K oscillator output" edc:when="(field &amp; 0xF) == 3"/>
              <edc:SFRFieldSemantic edc:cname="XOSC32K" edc:desc="XOSC32K oscillator output" edc:when="(field &amp; 0xF) == 4"/>
              <edc:SFRFieldSemantic edc:cname="OSC16M" edc:desc="OSC16M oscillator output" edc:when="(field &amp; 0xF) == 5"/>
              <edc:SFRFieldSemantic edc:cname="DFLLULP" edc:desc="DFLLULP output" edc:when="(field &amp; 0xF) == 6"/>
              <edc:SFRFieldSemantic edc:cname="DFLL48M" edc:desc="DFLL48M output" edc:when="(field &amp; 0xF) == 7"/>
              <edc:SFRFieldSemantic edc:cname="FDPLL96M" edc:desc="FDPLL96M output" edc:when="(field &amp; 0xF) == 8"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="GENEN" edc:nzwidth="0x1" edc:desc="Generic Clock Generator Enable"/>
            <edc:SFRFieldDef edc:cname="IDC" edc:nzwidth="0x1" edc:desc="Improve Duty Cycle"/>
            <edc:SFRFieldDef edc:cname="OOV" edc:nzwidth="0x1" edc:desc="Output Off Value"/>
            <edc:SFRFieldDef edc:cname="OE" edc:nzwidth="0x1" edc:desc="Output Enable"/>
            <edc:SFRFieldDef edc:cname="DIVSEL" edc:nzwidth="0x1" edc:desc="Divide Selection">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="Division by GENCTRLn.DIV" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Division by 2^(GENCTRLn.DIV+1)" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DIV" edc:nzwidth="0x10" edc:desc="Division Factor"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="GENCTRL4" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnn--nnnnnn----nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF3F0F" edc:_addr="0x40001C30">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="SRC" edc:nzwidth="0x4" edc:desc="Source Select">
              <edc:SFRFieldSemantic edc:cname="XOSC" edc:desc="XOSC oscillator output" edc:when="(field &amp; 0xF) == 0"/>
              <edc:SFRFieldSemantic edc:cname="GCLKIN" edc:desc="Generator input pad (GCLK_IO)" edc:when="(field &amp; 0xF) == 1"/>
              <edc:SFRFieldSemantic edc:cname="GCLKGEN1" edc:desc="Generic clock generator 1 output" edc:when="(field &amp; 0xF) == 2"/>
              <edc:SFRFieldSemantic edc:cname="OSCULP32K" edc:desc="OSCULP32K oscillator output" edc:when="(field &amp; 0xF) == 3"/>
              <edc:SFRFieldSemantic edc:cname="XOSC32K" edc:desc="XOSC32K oscillator output" edc:when="(field &amp; 0xF) == 4"/>
              <edc:SFRFieldSemantic edc:cname="OSC16M" edc:desc="OSC16M oscillator output" edc:when="(field &amp; 0xF) == 5"/>
              <edc:SFRFieldSemantic edc:cname="DFLLULP" edc:desc="DFLLULP output" edc:when="(field &amp; 0xF) == 6"/>
              <edc:SFRFieldSemantic edc:cname="DFLL48M" edc:desc="DFLL48M output" edc:when="(field &amp; 0xF) == 7"/>
              <edc:SFRFieldSemantic edc:cname="FDPLL96M" edc:desc="FDPLL96M output" edc:when="(field &amp; 0xF) == 8"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="GENEN" edc:nzwidth="0x1" edc:desc="Generic Clock Generator Enable"/>
            <edc:SFRFieldDef edc:cname="IDC" edc:nzwidth="0x1" edc:desc="Improve Duty Cycle"/>
            <edc:SFRFieldDef edc:cname="OOV" edc:nzwidth="0x1" edc:desc="Output Off Value"/>
            <edc:SFRFieldDef edc:cname="OE" edc:nzwidth="0x1" edc:desc="Output Enable"/>
            <edc:SFRFieldDef edc:cname="DIVSEL" edc:nzwidth="0x1" edc:desc="Divide Selection">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="Division by GENCTRLn.DIV" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Division by 2^(GENCTRLn.DIV+1)" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DIV" edc:nzwidth="0x10" edc:desc="Division Factor"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="GENCTRL5" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnn--nnnnnn----nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF3F0F" edc:_addr="0x40001C34">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="SRC" edc:nzwidth="0x4" edc:desc="Source Select">
              <edc:SFRFieldSemantic edc:cname="XOSC" edc:desc="XOSC oscillator output" edc:when="(field &amp; 0xF) == 0"/>
              <edc:SFRFieldSemantic edc:cname="GCLKIN" edc:desc="Generator input pad (GCLK_IO)" edc:when="(field &amp; 0xF) == 1"/>
              <edc:SFRFieldSemantic edc:cname="GCLKGEN1" edc:desc="Generic clock generator 1 output" edc:when="(field &amp; 0xF) == 2"/>
              <edc:SFRFieldSemantic edc:cname="OSCULP32K" edc:desc="OSCULP32K oscillator output" edc:when="(field &amp; 0xF) == 3"/>
              <edc:SFRFieldSemantic edc:cname="XOSC32K" edc:desc="XOSC32K oscillator output" edc:when="(field &amp; 0xF) == 4"/>
              <edc:SFRFieldSemantic edc:cname="OSC16M" edc:desc="OSC16M oscillator output" edc:when="(field &amp; 0xF) == 5"/>
              <edc:SFRFieldSemantic edc:cname="DFLLULP" edc:desc="DFLLULP output" edc:when="(field &amp; 0xF) == 6"/>
              <edc:SFRFieldSemantic edc:cname="DFLL48M" edc:desc="DFLL48M output" edc:when="(field &amp; 0xF) == 7"/>
              <edc:SFRFieldSemantic edc:cname="FDPLL96M" edc:desc="FDPLL96M output" edc:when="(field &amp; 0xF) == 8"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="GENEN" edc:nzwidth="0x1" edc:desc="Generic Clock Generator Enable"/>
            <edc:SFRFieldDef edc:cname="IDC" edc:nzwidth="0x1" edc:desc="Improve Duty Cycle"/>
            <edc:SFRFieldDef edc:cname="OOV" edc:nzwidth="0x1" edc:desc="Output Off Value"/>
            <edc:SFRFieldDef edc:cname="OE" edc:nzwidth="0x1" edc:desc="Output Enable"/>
            <edc:SFRFieldDef edc:cname="DIVSEL" edc:nzwidth="0x1" edc:desc="Divide Selection">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="Division by GENCTRLn.DIV" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Division by 2^(GENCTRLn.DIV+1)" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DIV" edc:nzwidth="0x10" edc:desc="Division Factor"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="GENCTRL6" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnn--nnnnnn----nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF3F0F" edc:_addr="0x40001C38">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="SRC" edc:nzwidth="0x4" edc:desc="Source Select">
              <edc:SFRFieldSemantic edc:cname="XOSC" edc:desc="XOSC oscillator output" edc:when="(field &amp; 0xF) == 0"/>
              <edc:SFRFieldSemantic edc:cname="GCLKIN" edc:desc="Generator input pad (GCLK_IO)" edc:when="(field &amp; 0xF) == 1"/>
              <edc:SFRFieldSemantic edc:cname="GCLKGEN1" edc:desc="Generic clock generator 1 output" edc:when="(field &amp; 0xF) == 2"/>
              <edc:SFRFieldSemantic edc:cname="OSCULP32K" edc:desc="OSCULP32K oscillator output" edc:when="(field &amp; 0xF) == 3"/>
              <edc:SFRFieldSemantic edc:cname="XOSC32K" edc:desc="XOSC32K oscillator output" edc:when="(field &amp; 0xF) == 4"/>
              <edc:SFRFieldSemantic edc:cname="OSC16M" edc:desc="OSC16M oscillator output" edc:when="(field &amp; 0xF) == 5"/>
              <edc:SFRFieldSemantic edc:cname="DFLLULP" edc:desc="DFLLULP output" edc:when="(field &amp; 0xF) == 6"/>
              <edc:SFRFieldSemantic edc:cname="DFLL48M" edc:desc="DFLL48M output" edc:when="(field &amp; 0xF) == 7"/>
              <edc:SFRFieldSemantic edc:cname="FDPLL96M" edc:desc="FDPLL96M output" edc:when="(field &amp; 0xF) == 8"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="GENEN" edc:nzwidth="0x1" edc:desc="Generic Clock Generator Enable"/>
            <edc:SFRFieldDef edc:cname="IDC" edc:nzwidth="0x1" edc:desc="Improve Duty Cycle"/>
            <edc:SFRFieldDef edc:cname="OOV" edc:nzwidth="0x1" edc:desc="Output Off Value"/>
            <edc:SFRFieldDef edc:cname="OE" edc:nzwidth="0x1" edc:desc="Output Enable"/>
            <edc:SFRFieldDef edc:cname="DIVSEL" edc:nzwidth="0x1" edc:desc="Divide Selection">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="Division by GENCTRLn.DIV" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Division by 2^(GENCTRLn.DIV+1)" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DIV" edc:nzwidth="0x10" edc:desc="Division Factor"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="GENCTRL7" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnn--nnnnnn----nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF3F0F" edc:_addr="0x40001C3C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="SRC" edc:nzwidth="0x4" edc:desc="Source Select">
              <edc:SFRFieldSemantic edc:cname="XOSC" edc:desc="XOSC oscillator output" edc:when="(field &amp; 0xF) == 0"/>
              <edc:SFRFieldSemantic edc:cname="GCLKIN" edc:desc="Generator input pad (GCLK_IO)" edc:when="(field &amp; 0xF) == 1"/>
              <edc:SFRFieldSemantic edc:cname="GCLKGEN1" edc:desc="Generic clock generator 1 output" edc:when="(field &amp; 0xF) == 2"/>
              <edc:SFRFieldSemantic edc:cname="OSCULP32K" edc:desc="OSCULP32K oscillator output" edc:when="(field &amp; 0xF) == 3"/>
              <edc:SFRFieldSemantic edc:cname="XOSC32K" edc:desc="XOSC32K oscillator output" edc:when="(field &amp; 0xF) == 4"/>
              <edc:SFRFieldSemantic edc:cname="OSC16M" edc:desc="OSC16M oscillator output" edc:when="(field &amp; 0xF) == 5"/>
              <edc:SFRFieldSemantic edc:cname="DFLLULP" edc:desc="DFLLULP output" edc:when="(field &amp; 0xF) == 6"/>
              <edc:SFRFieldSemantic edc:cname="DFLL48M" edc:desc="DFLL48M output" edc:when="(field &amp; 0xF) == 7"/>
              <edc:SFRFieldSemantic edc:cname="FDPLL96M" edc:desc="FDPLL96M output" edc:when="(field &amp; 0xF) == 8"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="GENEN" edc:nzwidth="0x1" edc:desc="Generic Clock Generator Enable"/>
            <edc:SFRFieldDef edc:cname="IDC" edc:nzwidth="0x1" edc:desc="Improve Duty Cycle"/>
            <edc:SFRFieldDef edc:cname="OOV" edc:nzwidth="0x1" edc:desc="Output Off Value"/>
            <edc:SFRFieldDef edc:cname="OE" edc:nzwidth="0x1" edc:desc="Output Enable"/>
            <edc:SFRFieldDef edc:cname="DIVSEL" edc:nzwidth="0x1" edc:desc="Divide Selection">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="Division by GENCTRLn.DIV" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Division by 2^(GENCTRLn.DIV+1)" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DIV" edc:nzwidth="0x10" edc:desc="Division Factor"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x40" edc:_addr="0x40001C40"/>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL0" edc:nzwidth="0x20" edc:access="------------------------nn---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC7" edc:_addr="0x40001C80">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x3" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL1" edc:nzwidth="0x20" edc:access="------------------------nn---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC7" edc:_addr="0x40001C84">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x3" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL2" edc:nzwidth="0x20" edc:access="------------------------nn---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC7" edc:_addr="0x40001C88">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x3" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL3" edc:nzwidth="0x20" edc:access="------------------------nn---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC7" edc:_addr="0x40001C8C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x3" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL4" edc:nzwidth="0x20" edc:access="------------------------nn---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC7" edc:_addr="0x40001C90">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x3" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL5" edc:nzwidth="0x20" edc:access="------------------------nn---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC7" edc:_addr="0x40001C94">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x3" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL6" edc:nzwidth="0x20" edc:access="------------------------nn---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC7" edc:_addr="0x40001C98">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x3" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL7" edc:nzwidth="0x20" edc:access="------------------------nn---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC7" edc:_addr="0x40001C9C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x3" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL8" edc:nzwidth="0x20" edc:access="------------------------nn---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC7" edc:_addr="0x40001CA0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x3" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL9" edc:nzwidth="0x20" edc:access="------------------------nn---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC7" edc:_addr="0x40001CA4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x3" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL10" edc:nzwidth="0x20" edc:access="------------------------nn---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC7" edc:_addr="0x40001CA8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x3" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL11" edc:nzwidth="0x20" edc:access="------------------------nn---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC7" edc:_addr="0x40001CAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x3" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL12" edc:nzwidth="0x20" edc:access="------------------------nn---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC7" edc:_addr="0x40001CB0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x3" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL13" edc:nzwidth="0x20" edc:access="------------------------nn---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC7" edc:_addr="0x40001CB4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x3" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL14" edc:nzwidth="0x20" edc:access="------------------------nn---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC7" edc:_addr="0x40001CB8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x3" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL15" edc:nzwidth="0x20" edc:access="------------------------nn---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC7" edc:_addr="0x40001CBC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x3" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL16" edc:nzwidth="0x20" edc:access="------------------------nn---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC7" edc:_addr="0x40001CC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x3" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL17" edc:nzwidth="0x20" edc:access="------------------------nn---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC7" edc:_addr="0x40001CC4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x3" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL18" edc:nzwidth="0x20" edc:access="------------------------nn---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC7" edc:_addr="0x40001CC8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x3" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL19" edc:nzwidth="0x20" edc:access="------------------------nn---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC7" edc:_addr="0x40001CCC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x3" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL20" edc:nzwidth="0x20" edc:access="------------------------nn---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC7" edc:_addr="0x40001CD0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x3" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL21" edc:nzwidth="0x20" edc:access="------------------------nn---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC7" edc:_addr="0x40001CD4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x3" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL22" edc:nzwidth="0x20" edc:access="------------------------nn---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC7" edc:_addr="0x40001CD8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x3" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL23" edc:nzwidth="0x20" edc:access="------------------------nn---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC7" edc:_addr="0x40001CDC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x3" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL24" edc:nzwidth="0x20" edc:access="------------------------nn---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC7" edc:_addr="0x40001CE0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x3" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL25" edc:nzwidth="0x20" edc:access="------------------------nn---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC7" edc:_addr="0x40001CE4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x3" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL26" edc:nzwidth="0x20" edc:access="------------------------nn---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC7" edc:_addr="0x40001CE8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x3" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL27" edc:nzwidth="0x20" edc:access="------------------------nn---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC7" edc:_addr="0x40001CEC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x3" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL28" edc:nzwidth="0x20" edc:access="------------------------nn---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC7" edc:_addr="0x40001CF0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x3" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL29" edc:nzwidth="0x20" edc:access="------------------------nn---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC7" edc:_addr="0x40001CF4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x3" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL30" edc:nzwidth="0x20" edc:access="------------------------nn---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC7" edc:_addr="0x40001CF8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x3" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL31" edc:nzwidth="0x20" edc:access="------------------------nn---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC7" edc:_addr="0x40001CFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x3" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL32" edc:nzwidth="0x20" edc:access="------------------------nn---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC7" edc:_addr="0x40001D00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x3" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL33" edc:nzwidth="0x20" edc:access="------------------------nn---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC7" edc:_addr="0x40001D04">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x3" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL34" edc:nzwidth="0x20" edc:access="------------------------nn---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC7" edc:_addr="0x40001D08">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x3" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2F4" edc:_addr="0x40001D0C"/>
      <edc:SFRDef ltx:memberofperipheral="WDT" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="nn---nn-" edc:por="00000000" edc:mclr="00000000" edc:impl="0xC6" edc:_addr="0x40002000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="WDT">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="WEN" edc:nzwidth="0x1" edc:desc="Watchdog Timer Window Mode Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run During Standby"/>
            <edc:SFRFieldDef edc:cname="ALWAYSON" edc:nzwidth="0x1" edc:desc="Always-On"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="WDT" edc:cname="CONFIG" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="10111011" edc:mclr="10111011" edc:_addr="0x40002001">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="WDT">
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x4" edc:desc="Time-Out Period">
              <edc:SFRFieldSemantic edc:cname="CYC8" edc:desc="8 clock cycles" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CYC16" edc:desc="16 clock cycles" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CYC32" edc:desc="32 clock cycles" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="CYC64" edc:desc="64 clock cycles" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="CYC128" edc:desc="128 clock cycles" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="CYC256" edc:desc="256 clock cycles" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="CYC512" edc:desc="512 clock cycles" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="CYC1024" edc:desc="1024 clock cycles" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="CYC2048" edc:desc="2048 clock cycles" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="CYC4096" edc:desc="4096 clock cycles" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="CYC8192" edc:desc="8192 clock cycles" edc:when="(field &amp; 0xF) == 0xA"/>
              <edc:SFRFieldSemantic edc:cname="CYC16384" edc:desc="16384 clock cycles" edc:when="(field &amp; 0xF) == 0xB"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WINDOW" edc:nzwidth="0x4" edc:desc="Window Mode Time-Out Period">
              <edc:SFRFieldSemantic edc:cname="CYC8" edc:desc="8 clock cycles" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CYC16" edc:desc="16 clock cycles" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CYC32" edc:desc="32 clock cycles" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="CYC64" edc:desc="64 clock cycles" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="CYC128" edc:desc="128 clock cycles" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="CYC256" edc:desc="256 clock cycles" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="CYC512" edc:desc="512 clock cycles" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="CYC1024" edc:desc="1024 clock cycles" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="CYC2048" edc:desc="2048 clock cycles" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="CYC4096" edc:desc="4096 clock cycles" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="CYC8192" edc:desc="8192 clock cycles" edc:when="(field &amp; 0xF) == 0xA"/>
              <edc:SFRFieldSemantic edc:cname="CYC16384" edc:desc="16384 clock cycles" edc:when="(field &amp; 0xF) == 0xB"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="WDT" edc:cname="EWCTRL" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00001011" edc:mclr="00001011" edc:impl="0xF" edc:_addr="0x40002002">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="WDT">
            <edc:SFRFieldDef edc:cname="EWOFFSET" edc:nzwidth="0x4" edc:desc="Early Warning Interrupt Time Offset">
              <edc:SFRFieldSemantic edc:cname="CYC8" edc:desc="8 clock cycles" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CYC16" edc:desc="16 clock cycles" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CYC32" edc:desc="32 clock cycles" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="CYC64" edc:desc="64 clock cycles" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="CYC128" edc:desc="128 clock cycles" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="CYC256" edc:desc="256 clock cycles" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="CYC512" edc:desc="512 clock cycles" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="CYC1024" edc:desc="1024 clock cycles" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="CYC2048" edc:desc="2048 clock cycles" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="CYC4096" edc:desc="4096 clock cycles" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="CYC8192" edc:desc="8192 clock cycles" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x40002003"/>
      <edc:SFRDef ltx:memberofperipheral="WDT" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x40002004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="WDT">
            <edc:SFRFieldDef edc:cname="EW" edc:nzwidth="0x1" edc:desc="Early Warning Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="WDT" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x40002005">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="WDT">
            <edc:SFRFieldDef edc:cname="EW" edc:nzwidth="0x1" edc:desc="Early Warning Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="WDT" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x40002006">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="WDT">
            <edc:SFRFieldDef edc:cname="EW" edc:nzwidth="0x1" edc:desc="Early Warning"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x40002007"/>
      <edc:SFRDef ltx:memberofperipheral="WDT" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="--------------------------rrrrr-" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3E" edc:_addr="0x40002008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="WDT">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="WEN" edc:nzwidth="0x1" edc:desc="Window Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run During Standby Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ALWAYSON" edc:nzwidth="0x1" edc:desc="Always-On Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CLEAR" edc:nzwidth="0x1" edc:desc="Clear Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="WDT" edc:cname="CLEAR" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x4000200C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="WDT">
            <edc:SFRFieldDef edc:cname="CLEAR" edc:nzwidth="0x8" edc:desc="Watchdog Clear">
              <edc:SFRFieldSemantic edc:cname="KEY" edc:desc="Clear Key" edc:when="(field &amp; 0xFF) == 0xA5"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x401" edc:_addr="0x4000200D"/>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x4000240E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Run During Debug"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x5" edc:_addr="0x4000240F"/>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="FREQCORR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x40002414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="VALUE" edc:nzwidth="0x7" edc:desc="Correction Value"/>
            <edc:SFRFieldDef edc:cname="SIGN" edc:nzwidth="0x1" edc:desc="Correction Sign"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2B" edc:_addr="0x40002415"/>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="GP0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x40002440">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="GP" edc:nzwidth="0x20" edc:desc="General Purpose"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="GP1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x40002444">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="GP" edc:nzwidth="0x20" edc:desc="General Purpose"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x18" edc:_addr="0x40002448"/>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="TAMPCTRL" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x40002460">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="IN0ACT" edc:nzwidth="0x2" edc:desc="Tamper Input 0 Action">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off (Disabled)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="WAKE" edc:desc="Wake and set Tamper flag" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CAPTURE" edc:desc="Capture timestamp and set Tamper flag" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="ACTL" edc:desc="Compare IN0 to OUT. When a mismatch occurs, capture timestamp and set Tamper flag" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="IN1ACT" edc:nzwidth="0x2" edc:desc="Tamper Input 1 Action">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off (Disabled)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="WAKE" edc:desc="Wake and set Tamper flag" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CAPTURE" edc:desc="Capture timestamp and set Tamper flag" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="ACTL" edc:desc="Compare IN1 to OUT. When a mismatch occurs, capture timestamp and set Tamper flag" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="IN2ACT" edc:nzwidth="0x2" edc:desc="Tamper Input 2 Action">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off (Disabled)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="WAKE" edc:desc="Wake and set Tamper flag" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CAPTURE" edc:desc="Capture timestamp and set Tamper flag" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="ACTL" edc:desc="Compare IN2 to OUT. When a mismatch occurs, capture timestamp and set Tamper flag" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="IN3ACT" edc:nzwidth="0x2" edc:desc="Tamper Input 3 Action">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off (Disabled)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="WAKE" edc:desc="Wake and set Tamper flag" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CAPTURE" edc:desc="Capture timestamp and set Tamper flag" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="ACTL" edc:desc="Compare IN3 to OUT. When a mismatch occurs, capture timestamp and set Tamper flag" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="IN4ACT" edc:nzwidth="0x2" edc:desc="Tamper Input 4 Action">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off (Disabled)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="WAKE" edc:desc="Wake and set Tamper flag" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CAPTURE" edc:desc="Capture timestamp and set Tamper flag" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="ACTL" edc:desc="Compare IN4 to OUT. When a mismatch occurs, capture timestamp and set Tamper flag" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="IN5ACT" edc:nzwidth="0x2" edc:desc="Tamper Input 5 Action">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off (Disabled)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="WAKE" edc:desc="Wake and set Tamper flag" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CAPTURE" edc:desc="Capture timestamp and set Tamper flag" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="ACTL" edc:desc="Compare IN5 to OUT. When a mismatch occurs, capture timestamp and set Tamper flag" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="IN6ACT" edc:nzwidth="0x2" edc:desc="Tamper Input 6 Action">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off (Disabled)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="WAKE" edc:desc="Wake and set Tamper flag" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CAPTURE" edc:desc="Capture timestamp and set Tamper flag" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="ACTL" edc:desc="Compare IN6 to OUT. When a mismatch occurs, capture timestamp and set Tamper flag" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="IN7ACT" edc:nzwidth="0x2" edc:desc="Tamper Input 7 Action">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off (Disabled)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="WAKE" edc:desc="Wake and set Tamper flag" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CAPTURE" edc:desc="Capture timestamp and set Tamper flag" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="ACTL" edc:desc="Compare IN7 to OUT. When a mismatch occurs, capture timestamp and set Tamper flag" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TAMLVL0" edc:nzwidth="0x1" edc:desc="Tamper Level Select 0"/>
            <edc:SFRFieldDef edc:cname="TAMLVL1" edc:nzwidth="0x1" edc:desc="Tamper Level Select 1"/>
            <edc:SFRFieldDef edc:cname="TAMLVL2" edc:nzwidth="0x1" edc:desc="Tamper Level Select 2"/>
            <edc:SFRFieldDef edc:cname="TAMLVL3" edc:nzwidth="0x1" edc:desc="Tamper Level Select 3"/>
            <edc:SFRFieldDef edc:cname="TAMLVL4" edc:nzwidth="0x1" edc:desc="Tamper Level Select 4"/>
            <edc:SFRFieldDef edc:cname="TAMLVL5" edc:nzwidth="0x1" edc:desc="Tamper Level Select 5"/>
            <edc:SFRFieldDef edc:cname="TAMLVL6" edc:nzwidth="0x1" edc:desc="Tamper Level Select 6"/>
            <edc:SFRFieldDef edc:cname="TAMLVL7" edc:nzwidth="0x1" edc:desc="Tamper Level Select 7"/>
            <edc:SFRFieldDef edc:cname="DEBNC0" edc:nzwidth="0x1" edc:desc="Debouncer Enable 0"/>
            <edc:SFRFieldDef edc:cname="DEBNC1" edc:nzwidth="0x1" edc:desc="Debouncer Enable 1"/>
            <edc:SFRFieldDef edc:cname="DEBNC2" edc:nzwidth="0x1" edc:desc="Debouncer Enable 2"/>
            <edc:SFRFieldDef edc:cname="DEBNC3" edc:nzwidth="0x1" edc:desc="Debouncer Enable 3"/>
            <edc:SFRFieldDef edc:cname="DEBNC4" edc:nzwidth="0x1" edc:desc="Debouncer Enable 4"/>
            <edc:SFRFieldDef edc:cname="DEBNC5" edc:nzwidth="0x1" edc:desc="Debouncer Enable 5"/>
            <edc:SFRFieldDef edc:cname="DEBNC6" edc:nzwidth="0x1" edc:desc="Debouncer Enable 6"/>
            <edc:SFRFieldDef edc:cname="DEBNC7" edc:nzwidth="0x1" edc:desc="Debouncer Enable 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x40002464"/>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="TAMPID" edc:nzwidth="0x20" edc:access="n-----------------------nnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x800000FF" edc:_addr="0x40002468">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="TAMPID0" edc:nzwidth="0x1" edc:desc="Tamper Input 0 Detected"/>
            <edc:SFRFieldDef edc:cname="TAMPID1" edc:nzwidth="0x1" edc:desc="Tamper Input 1 Detected"/>
            <edc:SFRFieldDef edc:cname="TAMPID2" edc:nzwidth="0x1" edc:desc="Tamper Input 2 Detected"/>
            <edc:SFRFieldDef edc:cname="TAMPID3" edc:nzwidth="0x1" edc:desc="Tamper Input 3 Detected"/>
            <edc:SFRFieldDef edc:cname="TAMPID4" edc:nzwidth="0x1" edc:desc="Tamper Input 4 Detected"/>
            <edc:SFRFieldDef edc:cname="TAMPID5" edc:nzwidth="0x1" edc:desc="Tamper Input 5 Detected"/>
            <edc:SFRFieldDef edc:cname="TAMPID6" edc:nzwidth="0x1" edc:desc="Tamper Input 6 Detected"/>
            <edc:SFRFieldDef edc:cname="TAMPID7" edc:nzwidth="0x1" edc:desc="Tamper Input 7 Detected"/>
            <edc:AdjustPoint edc:offset="0x17"/>
            <edc:SFRFieldDef edc:cname="TAMPEVT" edc:nzwidth="0x1" edc:desc="Tamper Event Detected"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="TAMPCTRLB" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF" edc:_addr="0x4000246C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="ALSI0" edc:nzwidth="0x1" edc:desc="Active Layer Select Internal 0"/>
            <edc:SFRFieldDef edc:cname="ALSI1" edc:nzwidth="0x1" edc:desc="Active Layer Select Internal 1"/>
            <edc:SFRFieldDef edc:cname="ALSI2" edc:nzwidth="0x1" edc:desc="Active Layer Select Internal 2"/>
            <edc:SFRFieldDef edc:cname="ALSI3" edc:nzwidth="0x1" edc:desc="Active Layer Select Internal 3"/>
            <edc:SFRFieldDef edc:cname="ALSI4" edc:nzwidth="0x1" edc:desc="Active Layer Select Internal 4"/>
            <edc:SFRFieldDef edc:cname="ALSI5" edc:nzwidth="0x1" edc:desc="Active Layer Select Internal 5"/>
            <edc:SFRFieldDef edc:cname="ALSI6" edc:nzwidth="0x1" edc:desc="Active Layer Select Internal 6"/>
            <edc:SFRFieldDef edc:cname="ALSI7" edc:nzwidth="0x1" edc:desc="Active Layer Select Internal 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x390" edc:_addr="0x40002470"/>
      <edc:SFRDef ltx:memberofperipheral="EIC" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="---n--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x13" edc:_addr="0x40002800">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EIC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CKSEL" edc:nzwidth="0x1" edc:desc="Clock Selection">
              <edc:SFRFieldSemantic edc:cname="CLK_GCLK" edc:desc="Clocked by GCLK" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="CLK_ULP32K" edc:desc="Clocked by ULP32K" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EIC" edc:cname="NMICTRL" edc:nzwidth="0x8" edc:access="---nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1F" edc:_addr="0x40002801">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EIC">
            <edc:SFRFieldDef edc:cname="NMISENSE" edc:nzwidth="0x3" edc:desc="Non-Maskable Interrupt Sense Configuration">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No detection" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Rising-edge detection" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Falling-edge detection" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Both-edges detection" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="High-level detection" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Low-level detection" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NMIFILTEN" edc:nzwidth="0x1" edc:desc="Non-Maskable Interrupt Filter Enable"/>
            <edc:SFRFieldDef edc:cname="NMIASYNCH" edc:nzwidth="0x1" edc:desc="Asynchronous Edge Detection Mode">
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Edge detection is clock synchronously operated" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Edge detection is clock asynchronously operated" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EIC" edc:cname="NMIFLAG" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x40002802">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EIC">
            <edc:SFRFieldDef edc:cname="NMI" edc:nzwidth="0x1" edc:desc="Non-Maskable Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x40002803"/>
      <edc:SFRDef ltx:memberofperipheral="EIC" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="------------------------------rr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3" edc:_addr="0x40002804">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EIC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy Status"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable Synchronization Busy Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EIC" edc:cname="EVCTRL" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF" edc:_addr="0x40002808">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EIC">
            <edc:SFRFieldDef edc:cname="EXTINTEO0" edc:nzwidth="0x1" edc:desc="External Interrupt 0 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINTEO1" edc:nzwidth="0x1" edc:desc="External Interrupt 1 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINTEO2" edc:nzwidth="0x1" edc:desc="External Interrupt 2 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINTEO3" edc:nzwidth="0x1" edc:desc="External Interrupt 3 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINTEO4" edc:nzwidth="0x1" edc:desc="External Interrupt 4 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINTEO5" edc:nzwidth="0x1" edc:desc="External Interrupt 5 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINTEO6" edc:nzwidth="0x1" edc:desc="External Interrupt 6 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINTEO7" edc:nzwidth="0x1" edc:desc="External Interrupt 7 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINTEO8" edc:nzwidth="0x1" edc:desc="External Interrupt 8 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINTEO9" edc:nzwidth="0x1" edc:desc="External Interrupt 9 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINTEO10" edc:nzwidth="0x1" edc:desc="External Interrupt 10 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINTEO11" edc:nzwidth="0x1" edc:desc="External Interrupt 11 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINTEO12" edc:nzwidth="0x1" edc:desc="External Interrupt 12 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINTEO13" edc:nzwidth="0x1" edc:desc="External Interrupt 13 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINTEO14" edc:nzwidth="0x1" edc:desc="External Interrupt 14 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINTEO15" edc:nzwidth="0x1" edc:desc="External Interrupt 15 Event Output Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EIC" edc:cname="INTENCLR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF" edc:_addr="0x4000280C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EIC">
            <edc:SFRFieldDef edc:cname="EXTINT0" edc:nzwidth="0x1" edc:desc="External Interrupt 0 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT1" edc:nzwidth="0x1" edc:desc="External Interrupt 1 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT2" edc:nzwidth="0x1" edc:desc="External Interrupt 2 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT3" edc:nzwidth="0x1" edc:desc="External Interrupt 3 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT4" edc:nzwidth="0x1" edc:desc="External Interrupt 4 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT5" edc:nzwidth="0x1" edc:desc="External Interrupt 5 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT6" edc:nzwidth="0x1" edc:desc="External Interrupt 6 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT7" edc:nzwidth="0x1" edc:desc="External Interrupt 7 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT8" edc:nzwidth="0x1" edc:desc="External Interrupt 8 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT9" edc:nzwidth="0x1" edc:desc="External Interrupt 9 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT10" edc:nzwidth="0x1" edc:desc="External Interrupt 10 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT11" edc:nzwidth="0x1" edc:desc="External Interrupt 11 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT12" edc:nzwidth="0x1" edc:desc="External Interrupt 12 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT13" edc:nzwidth="0x1" edc:desc="External Interrupt 13 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT14" edc:nzwidth="0x1" edc:desc="External Interrupt 14 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT15" edc:nzwidth="0x1" edc:desc="External Interrupt 15 Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EIC" edc:cname="INTENSET" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF" edc:_addr="0x40002810">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EIC">
            <edc:SFRFieldDef edc:cname="EXTINT0" edc:nzwidth="0x1" edc:desc="External Interrupt 0 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT1" edc:nzwidth="0x1" edc:desc="External Interrupt 1 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT2" edc:nzwidth="0x1" edc:desc="External Interrupt 2 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT3" edc:nzwidth="0x1" edc:desc="External Interrupt 3 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT4" edc:nzwidth="0x1" edc:desc="External Interrupt 4 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT5" edc:nzwidth="0x1" edc:desc="External Interrupt 5 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT6" edc:nzwidth="0x1" edc:desc="External Interrupt 6 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT7" edc:nzwidth="0x1" edc:desc="External Interrupt 7 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT8" edc:nzwidth="0x1" edc:desc="External Interrupt 8 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT9" edc:nzwidth="0x1" edc:desc="External Interrupt 9 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT10" edc:nzwidth="0x1" edc:desc="External Interrupt 10 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT11" edc:nzwidth="0x1" edc:desc="External Interrupt 11 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT12" edc:nzwidth="0x1" edc:desc="External Interrupt 12 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT13" edc:nzwidth="0x1" edc:desc="External Interrupt 13 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT14" edc:nzwidth="0x1" edc:desc="External Interrupt 14 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT15" edc:nzwidth="0x1" edc:desc="External Interrupt 15 Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EIC" edc:cname="INTFLAG" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF" edc:_addr="0x40002814">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EIC">
            <edc:SFRFieldDef edc:cname="EXTINT0" edc:nzwidth="0x1" edc:desc="External Interrupt 0"/>
            <edc:SFRFieldDef edc:cname="EXTINT1" edc:nzwidth="0x1" edc:desc="External Interrupt 1"/>
            <edc:SFRFieldDef edc:cname="EXTINT2" edc:nzwidth="0x1" edc:desc="External Interrupt 2"/>
            <edc:SFRFieldDef edc:cname="EXTINT3" edc:nzwidth="0x1" edc:desc="External Interrupt 3"/>
            <edc:SFRFieldDef edc:cname="EXTINT4" edc:nzwidth="0x1" edc:desc="External Interrupt 4"/>
            <edc:SFRFieldDef edc:cname="EXTINT5" edc:nzwidth="0x1" edc:desc="External Interrupt 5"/>
            <edc:SFRFieldDef edc:cname="EXTINT6" edc:nzwidth="0x1" edc:desc="External Interrupt 6"/>
            <edc:SFRFieldDef edc:cname="EXTINT7" edc:nzwidth="0x1" edc:desc="External Interrupt 7"/>
            <edc:SFRFieldDef edc:cname="EXTINT8" edc:nzwidth="0x1" edc:desc="External Interrupt 8"/>
            <edc:SFRFieldDef edc:cname="EXTINT9" edc:nzwidth="0x1" edc:desc="External Interrupt 9"/>
            <edc:SFRFieldDef edc:cname="EXTINT10" edc:nzwidth="0x1" edc:desc="External Interrupt 10"/>
            <edc:SFRFieldDef edc:cname="EXTINT11" edc:nzwidth="0x1" edc:desc="External Interrupt 11"/>
            <edc:SFRFieldDef edc:cname="EXTINT12" edc:nzwidth="0x1" edc:desc="External Interrupt 12"/>
            <edc:SFRFieldDef edc:cname="EXTINT13" edc:nzwidth="0x1" edc:desc="External Interrupt 13"/>
            <edc:SFRFieldDef edc:cname="EXTINT14" edc:nzwidth="0x1" edc:desc="External Interrupt 14"/>
            <edc:SFRFieldDef edc:cname="EXTINT15" edc:nzwidth="0x1" edc:desc="External Interrupt 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EIC" edc:cname="ASYNCH" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF" edc:_addr="0x40002818">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EIC">
            <edc:SFRFieldDef edc:cname="ASYNCH0" edc:nzwidth="0x1" edc:desc="Asynchronous Edge Detection Mode of EXTINT0">
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Edge detection is clock synchronously operated" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Edge detection is clock asynchronously operated" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASYNCH1" edc:nzwidth="0x1" edc:desc="Asynchronous Edge Detection Mode of EXTINT1">
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Edge detection is clock synchronously operated" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Edge detection is clock asynchronously operated" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASYNCH2" edc:nzwidth="0x1" edc:desc="Asynchronous Edge Detection Mode of EXTINT2">
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Edge detection is clock synchronously operated" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Edge detection is clock asynchronously operated" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASYNCH3" edc:nzwidth="0x1" edc:desc="Asynchronous Edge Detection Mode of EXTINT3">
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Edge detection is clock synchronously operated" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Edge detection is clock asynchronously operated" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASYNCH4" edc:nzwidth="0x1" edc:desc="Asynchronous Edge Detection Mode of EXTINT4">
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Edge detection is clock synchronously operated" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Edge detection is clock asynchronously operated" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASYNCH5" edc:nzwidth="0x1" edc:desc="Asynchronous Edge Detection Mode of EXTINT5">
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Edge detection is clock synchronously operated" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Edge detection is clock asynchronously operated" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASYNCH6" edc:nzwidth="0x1" edc:desc="Asynchronous Edge Detection Mode of EXTINT6">
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Edge detection is clock synchronously operated" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Edge detection is clock asynchronously operated" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASYNCH7" edc:nzwidth="0x1" edc:desc="Asynchronous Edge Detection Mode of EXTINT7">
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Edge detection is clock synchronously operated" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Edge detection is clock asynchronously operated" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASYNCH8" edc:nzwidth="0x1" edc:desc="Asynchronous Edge Detection Mode of EXTINT8">
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Edge detection is clock synchronously operated" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Edge detection is clock asynchronously operated" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASYNCH9" edc:nzwidth="0x1" edc:desc="Asynchronous Edge Detection Mode of EXTINT9">
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Edge detection is clock synchronously operated" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Edge detection is clock asynchronously operated" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASYNCH10" edc:nzwidth="0x1" edc:desc="Asynchronous Edge Detection Mode of EXTINT10">
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Edge detection is clock synchronously operated" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Edge detection is clock asynchronously operated" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASYNCH11" edc:nzwidth="0x1" edc:desc="Asynchronous Edge Detection Mode of EXTINT11">
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Edge detection is clock synchronously operated" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Edge detection is clock asynchronously operated" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASYNCH12" edc:nzwidth="0x1" edc:desc="Asynchronous Edge Detection Mode of EXTINT12">
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Edge detection is clock synchronously operated" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Edge detection is clock asynchronously operated" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASYNCH13" edc:nzwidth="0x1" edc:desc="Asynchronous Edge Detection Mode of EXTINT13">
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Edge detection is clock synchronously operated" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Edge detection is clock asynchronously operated" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASYNCH14" edc:nzwidth="0x1" edc:desc="Asynchronous Edge Detection Mode of EXTINT14">
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Edge detection is clock synchronously operated" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Edge detection is clock asynchronously operated" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASYNCH15" edc:nzwidth="0x1" edc:desc="Asynchronous Edge Detection Mode of EXTINT15">
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Edge detection is clock synchronously operated" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Edge detection is clock asynchronously operated" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EIC" edc:cname="CONFIG0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4000281C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EIC">
            <edc:SFRFieldDef edc:cname="SENSE0" edc:nzwidth="0x3" edc:desc="Input Sense Configuration 0">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No detection" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Rising edge detection" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Falling edge detection" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Both edges detection" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="High level detection" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Low level detection" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FILTEN0" edc:nzwidth="0x1" edc:desc="Filter Enable 0"/>
            <edc:SFRFieldDef edc:cname="SENSE1" edc:nzwidth="0x3" edc:desc="Input Sense Configuration 1">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No detection" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Rising edge detection" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Falling edge detection" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Both edges detection" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="High level detection" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Low level detection" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FILTEN1" edc:nzwidth="0x1" edc:desc="Filter Enable 1"/>
            <edc:SFRFieldDef edc:cname="SENSE2" edc:nzwidth="0x3" edc:desc="Input Sense Configuration 2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No detection" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Rising edge detection" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Falling edge detection" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Both edges detection" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="High level detection" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Low level detection" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FILTEN2" edc:nzwidth="0x1" edc:desc="Filter Enable 2"/>
            <edc:SFRFieldDef edc:cname="SENSE3" edc:nzwidth="0x3" edc:desc="Input Sense Configuration 3">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No detection" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Rising edge detection" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Falling edge detection" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Both edges detection" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="High level detection" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Low level detection" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FILTEN3" edc:nzwidth="0x1" edc:desc="Filter Enable 3"/>
            <edc:SFRFieldDef edc:cname="SENSE4" edc:nzwidth="0x3" edc:desc="Input Sense Configuration 4">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No detection" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Rising edge detection" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Falling edge detection" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Both edges detection" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="High level detection" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Low level detection" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FILTEN4" edc:nzwidth="0x1" edc:desc="Filter Enable 4"/>
            <edc:SFRFieldDef edc:cname="SENSE5" edc:nzwidth="0x3" edc:desc="Input Sense Configuration 5">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No detection" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Rising edge detection" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Falling edge detection" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Both edges detection" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="High level detection" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Low level detection" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FILTEN5" edc:nzwidth="0x1" edc:desc="Filter Enable 5"/>
            <edc:SFRFieldDef edc:cname="SENSE6" edc:nzwidth="0x3" edc:desc="Input Sense Configuration 6">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No detection" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Rising edge detection" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Falling edge detection" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Both edges detection" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="High level detection" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Low level detection" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FILTEN6" edc:nzwidth="0x1" edc:desc="Filter Enable 6"/>
            <edc:SFRFieldDef edc:cname="SENSE7" edc:nzwidth="0x3" edc:desc="Input Sense Configuration 7">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No detection" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Rising edge detection" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Falling edge detection" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Both edges detection" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="High level detection" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Low level detection" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FILTEN7" edc:nzwidth="0x1" edc:desc="Filter Enable 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EIC" edc:cname="CONFIG1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x40002820">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EIC">
            <edc:SFRFieldDef edc:cname="SENSE8" edc:nzwidth="0x3" edc:desc="Input Sense Configuration 8">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No detection" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Rising edge detection" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Falling edge detection" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Both edges detection" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="High level detection" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Low level detection" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FILTEN8" edc:nzwidth="0x1" edc:desc="Filter Enable 8"/>
            <edc:SFRFieldDef edc:cname="SENSE9" edc:nzwidth="0x3" edc:desc="Input Sense Configuration 9">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No detection" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Rising edge detection" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Falling edge detection" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Both edges detection" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="High level detection" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Low level detection" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FILTEN9" edc:nzwidth="0x1" edc:desc="Filter Enable 9"/>
            <edc:SFRFieldDef edc:cname="SENSE10" edc:nzwidth="0x3" edc:desc="Input Sense Configuration 10">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No detection" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Rising edge detection" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Falling edge detection" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Both edges detection" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="High level detection" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Low level detection" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FILTEN10" edc:nzwidth="0x1" edc:desc="Filter Enable 10"/>
            <edc:SFRFieldDef edc:cname="SENSE11" edc:nzwidth="0x3" edc:desc="Input Sense Configuration 11">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No detection" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Rising edge detection" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Falling edge detection" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Both edges detection" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="High level detection" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Low level detection" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FILTEN11" edc:nzwidth="0x1" edc:desc="Filter Enable 11"/>
            <edc:SFRFieldDef edc:cname="SENSE12" edc:nzwidth="0x3" edc:desc="Input Sense Configuration 12">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No detection" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Rising edge detection" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Falling edge detection" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Both edges detection" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="High level detection" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Low level detection" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FILTEN12" edc:nzwidth="0x1" edc:desc="Filter Enable 12"/>
            <edc:SFRFieldDef edc:cname="SENSE13" edc:nzwidth="0x3" edc:desc="Input Sense Configuration 13">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No detection" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Rising edge detection" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Falling edge detection" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Both edges detection" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="High level detection" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Low level detection" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FILTEN13" edc:nzwidth="0x1" edc:desc="Filter Enable 13"/>
            <edc:SFRFieldDef edc:cname="SENSE14" edc:nzwidth="0x3" edc:desc="Input Sense Configuration 14">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No detection" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Rising edge detection" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Falling edge detection" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Both edges detection" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="High level detection" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Low level detection" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FILTEN14" edc:nzwidth="0x1" edc:desc="Filter Enable 14"/>
            <edc:SFRFieldDef edc:cname="SENSE15" edc:nzwidth="0x3" edc:desc="Input Sense Configuration 15">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No detection" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Rising edge detection" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Falling edge detection" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Both edges detection" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="High level detection" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Low level detection" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FILTEN15" edc:nzwidth="0x1" edc:desc="Filter Enable 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x40002824"/>
      <edc:SFRDef ltx:memberofperipheral="EIC" edc:cname="DEBOUNCEN" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF" edc:_addr="0x40002830">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EIC">
            <edc:SFRFieldDef edc:cname="DEBOUNCEN0" edc:nzwidth="0x1" edc:desc="Debouncer Enable of EXTINT0"/>
            <edc:SFRFieldDef edc:cname="DEBOUNCEN1" edc:nzwidth="0x1" edc:desc="Debouncer Enable of EXTINT1"/>
            <edc:SFRFieldDef edc:cname="DEBOUNCEN2" edc:nzwidth="0x1" edc:desc="Debouncer Enable of EXTINT2"/>
            <edc:SFRFieldDef edc:cname="DEBOUNCEN3" edc:nzwidth="0x1" edc:desc="Debouncer Enable of EXTINT3"/>
            <edc:SFRFieldDef edc:cname="DEBOUNCEN4" edc:nzwidth="0x1" edc:desc="Debouncer Enable of EXTINT4"/>
            <edc:SFRFieldDef edc:cname="DEBOUNCEN5" edc:nzwidth="0x1" edc:desc="Debouncer Enable of EXTINT5"/>
            <edc:SFRFieldDef edc:cname="DEBOUNCEN6" edc:nzwidth="0x1" edc:desc="Debouncer Enable of EXTINT6"/>
            <edc:SFRFieldDef edc:cname="DEBOUNCEN7" edc:nzwidth="0x1" edc:desc="Debouncer Enable of EXTINT7"/>
            <edc:SFRFieldDef edc:cname="DEBOUNCEN8" edc:nzwidth="0x1" edc:desc="Debouncer Enable of EXTINT8"/>
            <edc:SFRFieldDef edc:cname="DEBOUNCEN9" edc:nzwidth="0x1" edc:desc="Debouncer Enable of EXTINT9"/>
            <edc:SFRFieldDef edc:cname="DEBOUNCEN10" edc:nzwidth="0x1" edc:desc="Debouncer Enable of EXTINT10"/>
            <edc:SFRFieldDef edc:cname="DEBOUNCEN11" edc:nzwidth="0x1" edc:desc="Debouncer Enable of EXTINT11"/>
            <edc:SFRFieldDef edc:cname="DEBOUNCEN12" edc:nzwidth="0x1" edc:desc="Debouncer Enable of EXTINT12"/>
            <edc:SFRFieldDef edc:cname="DEBOUNCEN13" edc:nzwidth="0x1" edc:desc="Debouncer Enable of EXTINT13"/>
            <edc:SFRFieldDef edc:cname="DEBOUNCEN14" edc:nzwidth="0x1" edc:desc="Debouncer Enable of EXTINT14"/>
            <edc:SFRFieldDef edc:cname="DEBOUNCEN15" edc:nzwidth="0x1" edc:desc="Debouncer Enable of EXTINT15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EIC" edc:cname="DPRESCALER" edc:nzwidth="0x20" edc:access="---------------n--------nnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x100FF" edc:_addr="0x40002834">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EIC">
            <edc:SFRFieldDef edc:cname="PRESCALER0" edc:nzwidth="0x3" edc:desc="Debouncer Prescaler">
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="EIC clock divided by 2" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="EIC clock divided by 4" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="EIC clock divided by 8" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="EIC clock divided by 16" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="EIC clock divided by 32" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="EIC clock divided by 64" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="EIC clock divided by 128" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="EIC clock divided by 256" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="STATES0" edc:nzwidth="0x1" edc:desc="Debouncer number of states">
              <edc:SFRFieldSemantic edc:cname="LFREQ3" edc:desc="3 low frequency samples" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="LFREQ7" edc:desc="7 low frequency samples" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PRESCALER1" edc:nzwidth="0x3" edc:desc="Debouncer Prescaler">
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="EIC clock divided by 2" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="EIC clock divided by 4" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="EIC clock divided by 8" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="EIC clock divided by 16" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="EIC clock divided by 32" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="EIC clock divided by 64" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="EIC clock divided by 128" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="EIC clock divided by 256" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="STATES1" edc:nzwidth="0x1" edc:desc="Debouncer number of states">
              <edc:SFRFieldSemantic edc:cname="LFREQ3" edc:desc="3 low frequency samples" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="LFREQ7" edc:desc="7 low frequency samples" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="TICKON" edc:nzwidth="0x1" edc:desc="Pin Sampler frequency selection">
              <edc:SFRFieldSemantic edc:cname="CLK_GCLK_EIC" edc:desc="Clocked by GCLK" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="CLK_LFREQ" edc:desc="Clocked by Low Frequency Clock" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EIC" edc:cname="PINSTATE" edc:nzwidth="0x20" edc:access="----------------rrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF" edc:_addr="0x40002838">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EIC">
            <edc:SFRFieldDef edc:cname="PINSTATE0" edc:nzwidth="0x1" edc:desc="Pin State of EXTINT0"/>
            <edc:SFRFieldDef edc:cname="PINSTATE1" edc:nzwidth="0x1" edc:desc="Pin State of EXTINT1"/>
            <edc:SFRFieldDef edc:cname="PINSTATE2" edc:nzwidth="0x1" edc:desc="Pin State of EXTINT2"/>
            <edc:SFRFieldDef edc:cname="PINSTATE3" edc:nzwidth="0x1" edc:desc="Pin State of EXTINT3"/>
            <edc:SFRFieldDef edc:cname="PINSTATE4" edc:nzwidth="0x1" edc:desc="Pin State of EXTINT4"/>
            <edc:SFRFieldDef edc:cname="PINSTATE5" edc:nzwidth="0x1" edc:desc="Pin State of EXTINT5"/>
            <edc:SFRFieldDef edc:cname="PINSTATE6" edc:nzwidth="0x1" edc:desc="Pin State of EXTINT6"/>
            <edc:SFRFieldDef edc:cname="PINSTATE7" edc:nzwidth="0x1" edc:desc="Pin State of EXTINT7"/>
            <edc:SFRFieldDef edc:cname="PINSTATE8" edc:nzwidth="0x1" edc:desc="Pin State of EXTINT8"/>
            <edc:SFRFieldDef edc:cname="PINSTATE9" edc:nzwidth="0x1" edc:desc="Pin State of EXTINT9"/>
            <edc:SFRFieldDef edc:cname="PINSTATE10" edc:nzwidth="0x1" edc:desc="Pin State of EXTINT10"/>
            <edc:SFRFieldDef edc:cname="PINSTATE11" edc:nzwidth="0x1" edc:desc="Pin State of EXTINT11"/>
            <edc:SFRFieldDef edc:cname="PINSTATE12" edc:nzwidth="0x1" edc:desc="Pin State of EXTINT12"/>
            <edc:SFRFieldDef edc:cname="PINSTATE13" edc:nzwidth="0x1" edc:desc="Pin State of EXTINT13"/>
            <edc:SFRFieldDef edc:cname="PINSTATE14" edc:nzwidth="0x1" edc:desc="Pin State of EXTINT14"/>
            <edc:SFRFieldDef edc:cname="PINSTATE15" edc:nzwidth="0x1" edc:desc="Pin State of EXTINT15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3C4" edc:_addr="0x4000283C"/>
      <edc:SFRDef ltx:memberofperipheral="FREQM" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x40002C00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FREQM">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FREQM" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="-------w" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x40002C01">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FREQM">
            <edc:SFRFieldDef edc:cname="START" edc:nzwidth="0x1" edc:desc="Start Measurement"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FREQM" edc:cname="CFGA" edc:nzwidth="0x10" edc:access="n-------nnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x80FF" edc:_addr="0x40002C02">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FREQM">
            <edc:SFRFieldDef edc:cname="REFNUM" edc:nzwidth="0x8" edc:desc="Number of Reference Clock Cycles"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DIVREF" edc:nzwidth="0x1" edc:desc="Divide Reference Clock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x40002C04"/>
      <edc:SFRDef ltx:memberofperipheral="FREQM" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x40002C08">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FREQM">
            <edc:SFRFieldDef edc:cname="DONE" edc:nzwidth="0x1" edc:desc="Measurement Done Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FREQM" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x40002C09">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FREQM">
            <edc:SFRFieldDef edc:cname="DONE" edc:nzwidth="0x1" edc:desc="Measurement Done Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FREQM" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x40002C0A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FREQM">
            <edc:SFRFieldDef edc:cname="DONE" edc:nzwidth="0x1" edc:desc="Measurement Done"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FREQM" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x40002C0B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FREQM">
            <edc:SFRFieldDef edc:cname="BUSY" edc:nzwidth="0x1" edc:desc="FREQM Status"/>
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Sticky Count Value Overflow"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FREQM" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="------------------------------rr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3" edc:_addr="0x40002C0C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FREQM">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FREQM" edc:cname="VALUE" edc:nzwidth="0x20" edc:access="--------rrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x40002C10">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FREQM">
            <edc:SFRFieldDef edc:cname="VALUE" edc:nzwidth="0x18" edc:desc="Measurement Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3EC" edc:_addr="0x40002C14"/>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0DIR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x40003000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x20" edc:desc="Port Data Direction"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0DIRCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x40003004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="DIRCLR" edc:nzwidth="0x20" edc:desc="Port Data Direction Clear"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0DIRSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x40003008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="DIRSET" edc:nzwidth="0x20" edc:desc="Port Data Direction Set"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0DIRTGL" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4000300C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="DIRTGL" edc:nzwidth="0x20" edc:desc="Port Data Direction Toggle"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0OUT" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x40003010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="OUT" edc:nzwidth="0x20" edc:desc="PORT Data Output Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0OUTCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x40003014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="OUTCLR" edc:nzwidth="0x20" edc:desc="PORT Data Output Value Clear"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0OUTSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x40003018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="OUTSET" edc:nzwidth="0x20" edc:desc="PORT Data Output Value Set"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0OUTTGL" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4000301C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="OUTTGL" edc:nzwidth="0x20" edc:desc="PORT Data Output Value Toggle"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0IN" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x40003020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="IN" edc:nzwidth="0x20" edc:desc="PORT Data Input Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0CTRL" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x40003024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="SAMPLING" edc:nzwidth="0x20" edc:desc="Input Sampling Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0WRCONFIG" edc:nzwidth="0x20" edc:access="ww-wwwww-w---wwwwwwwwwwwwwwwwwww" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xDF47FFFF" edc:_addr="0x40003028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PINMASK" edc:nzwidth="0x10" edc:desc="Pin Mask for Multiple Pin Configuration"/>
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PMUX" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing"/>
            <edc:SFRFieldDef edc:cname="WRPMUX" edc:nzwidth="0x1" edc:desc="Write PMUX"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="WRPINCFG" edc:nzwidth="0x1" edc:desc="Write PINCFG"/>
            <edc:SFRFieldDef edc:cname="HWSEL" edc:nzwidth="0x1" edc:desc="Half-Word Select"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0EVCTRL" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4000302C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PID0" edc:nzwidth="0x5" edc:desc="PORT Event Pin Identifier 0"/>
            <edc:SFRFieldDef edc:cname="EVACT0" edc:nzwidth="0x2" edc:desc="PORT Event Action 0">
              <edc:SFRFieldSemantic edc:cname="OUT" edc:desc="Event output to pin" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set output register of pin on event" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLR" edc:desc="Clear output register of pin on event" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TGL" edc:desc="Toggle output register of pin on event" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PORTEI0" edc:nzwidth="0x1" edc:desc="PORT Event Input Enable 0"/>
            <edc:SFRFieldDef edc:cname="PID1" edc:nzwidth="0x5" edc:desc="PORT Event Pin Identifier 1"/>
            <edc:SFRFieldDef edc:cname="EVACT1" edc:nzwidth="0x2" edc:desc="PORT Event Action 1"/>
            <edc:SFRFieldDef edc:cname="PORTEI1" edc:nzwidth="0x1" edc:desc="PORT Event Input Enable 1"/>
            <edc:SFRFieldDef edc:cname="PID2" edc:nzwidth="0x5" edc:desc="PORT Event Pin Identifier 2"/>
            <edc:SFRFieldDef edc:cname="EVACT2" edc:nzwidth="0x2" edc:desc="PORT Event Action 2"/>
            <edc:SFRFieldDef edc:cname="PORTEI2" edc:nzwidth="0x1" edc:desc="PORT Event Input Enable 2"/>
            <edc:SFRFieldDef edc:cname="PID3" edc:nzwidth="0x5" edc:desc="PORT Event Pin Identifier 3"/>
            <edc:SFRFieldDef edc:cname="EVACT3" edc:nzwidth="0x2" edc:desc="PORT Event Action 3"/>
            <edc:SFRFieldDef edc:cname="PORTEI3" edc:nzwidth="0x1" edc:desc="PORT Event Input Enable 3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PMUX0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x40003030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PMUX1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x40003031">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PMUX2" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x40003032">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PMUX3" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x40003033">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PMUX4" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x40003034">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PMUX5" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x40003035">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PMUX6" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x40003036">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PMUX7" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x40003037">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PMUX8" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x40003038">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PMUX9" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x40003039">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PMUX10" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x4000303A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PMUX11" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x4000303B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PMUX12" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x4000303C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PMUX13" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x4000303D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PMUX14" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x4000303E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PMUX15" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x4000303F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG0" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x40003040">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG1" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x40003041">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG2" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x40003042">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG3" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x40003043">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG4" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x40003044">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG5" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x40003045">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG6" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x40003046">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG7" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x40003047">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG8" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x40003048">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG9" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x40003049">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG10" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x4000304A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG11" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x4000304B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG12" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x4000304C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG13" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x4000304D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG14" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x4000304E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG15" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x4000304F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG16" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x40003050">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG17" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x40003051">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG18" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x40003052">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG19" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x40003053">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG20" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x40003054">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG21" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x40003055">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG22" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x40003056">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG23" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x40003057">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG24" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x40003058">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG25" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x40003059">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG26" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x4000305A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG27" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x4000305B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG28" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x4000305C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG29" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x4000305D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG30" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x4000305E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG31" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x4000305F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x20" edc:_addr="0x40003060"/>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1DIR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x40003080">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x20" edc:desc="Port Data Direction"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1DIRCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x40003084">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="DIRCLR" edc:nzwidth="0x20" edc:desc="Port Data Direction Clear"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1DIRSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x40003088">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="DIRSET" edc:nzwidth="0x20" edc:desc="Port Data Direction Set"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1DIRTGL" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4000308C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="DIRTGL" edc:nzwidth="0x20" edc:desc="Port Data Direction Toggle"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1OUT" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x40003090">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="OUT" edc:nzwidth="0x20" edc:desc="PORT Data Output Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1OUTCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x40003094">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="OUTCLR" edc:nzwidth="0x20" edc:desc="PORT Data Output Value Clear"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1OUTSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x40003098">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="OUTSET" edc:nzwidth="0x20" edc:desc="PORT Data Output Value Set"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1OUTTGL" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4000309C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="OUTTGL" edc:nzwidth="0x20" edc:desc="PORT Data Output Value Toggle"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1IN" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x400030A0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="IN" edc:nzwidth="0x20" edc:desc="PORT Data Input Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1CTRL" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x400030A4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="SAMPLING" edc:nzwidth="0x20" edc:desc="Input Sampling Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1WRCONFIG" edc:nzwidth="0x20" edc:access="ww-wwwww-w---wwwwwwwwwwwwwwwwwww" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xDF47FFFF" edc:_addr="0x400030A8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PINMASK" edc:nzwidth="0x10" edc:desc="Pin Mask for Multiple Pin Configuration"/>
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PMUX" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing"/>
            <edc:SFRFieldDef edc:cname="WRPMUX" edc:nzwidth="0x1" edc:desc="Write PMUX"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="WRPINCFG" edc:nzwidth="0x1" edc:desc="Write PINCFG"/>
            <edc:SFRFieldDef edc:cname="HWSEL" edc:nzwidth="0x1" edc:desc="Half-Word Select"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1EVCTRL" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x400030AC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PID0" edc:nzwidth="0x5" edc:desc="PORT Event Pin Identifier 0"/>
            <edc:SFRFieldDef edc:cname="EVACT0" edc:nzwidth="0x2" edc:desc="PORT Event Action 0">
              <edc:SFRFieldSemantic edc:cname="OUT" edc:desc="Event output to pin" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set output register of pin on event" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLR" edc:desc="Clear output register of pin on event" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TGL" edc:desc="Toggle output register of pin on event" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PORTEI0" edc:nzwidth="0x1" edc:desc="PORT Event Input Enable 0"/>
            <edc:SFRFieldDef edc:cname="PID1" edc:nzwidth="0x5" edc:desc="PORT Event Pin Identifier 1"/>
            <edc:SFRFieldDef edc:cname="EVACT1" edc:nzwidth="0x2" edc:desc="PORT Event Action 1"/>
            <edc:SFRFieldDef edc:cname="PORTEI1" edc:nzwidth="0x1" edc:desc="PORT Event Input Enable 1"/>
            <edc:SFRFieldDef edc:cname="PID2" edc:nzwidth="0x5" edc:desc="PORT Event Pin Identifier 2"/>
            <edc:SFRFieldDef edc:cname="EVACT2" edc:nzwidth="0x2" edc:desc="PORT Event Action 2"/>
            <edc:SFRFieldDef edc:cname="PORTEI2" edc:nzwidth="0x1" edc:desc="PORT Event Input Enable 2"/>
            <edc:SFRFieldDef edc:cname="PID3" edc:nzwidth="0x5" edc:desc="PORT Event Pin Identifier 3"/>
            <edc:SFRFieldDef edc:cname="EVACT3" edc:nzwidth="0x2" edc:desc="PORT Event Action 3"/>
            <edc:SFRFieldDef edc:cname="PORTEI3" edc:nzwidth="0x1" edc:desc="PORT Event Input Enable 3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1PMUX0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x400030B0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1PMUX1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x400030B1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1PMUX2" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x400030B2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1PMUX3" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x400030B3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1PMUX4" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x400030B4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1PMUX5" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x400030B5">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1PMUX6" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x400030B6">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1PMUX7" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x400030B7">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1PMUX8" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x400030B8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1PMUX9" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x400030B9">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1PMUX10" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x400030BA">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1PMUX11" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x400030BB">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1PMUX12" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x400030BC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1PMUX13" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x400030BD">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1PMUX14" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x400030BE">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1PMUX15" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x400030BF">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1PINCFG0" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x400030C0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1PINCFG1" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x400030C1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1PINCFG2" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x400030C2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1PINCFG3" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x400030C3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1PINCFG4" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x400030C4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1PINCFG5" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x400030C5">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1PINCFG6" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x400030C6">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1PINCFG7" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x400030C7">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1PINCFG8" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x400030C8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1PINCFG9" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x400030C9">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1PINCFG10" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x400030CA">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1PINCFG11" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x400030CB">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1PINCFG12" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x400030CC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1PINCFG13" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x400030CD">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1PINCFG14" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x400030CE">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1PINCFG15" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x400030CF">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1PINCFG16" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x400030D0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1PINCFG17" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x400030D1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1PINCFG18" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x400030D2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1PINCFG19" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x400030D3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1PINCFG20" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x400030D4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1PINCFG21" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x400030D5">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1PINCFG22" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x400030D6">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1PINCFG23" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x400030D7">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1PINCFG24" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x400030D8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1PINCFG25" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x400030D9">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1PINCFG26" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x400030DA">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1PINCFG27" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x400030DB">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1PINCFG28" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x400030DC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1PINCFG29" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x400030DD">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1PINCFG30" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x400030DE">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP1PINCFG31" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x400030DF">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x20" edc:_addr="0x400030E0"/>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2DIR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x40003100">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x20" edc:desc="Port Data Direction"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2DIRCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x40003104">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="DIRCLR" edc:nzwidth="0x20" edc:desc="Port Data Direction Clear"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2DIRSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x40003108">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="DIRSET" edc:nzwidth="0x20" edc:desc="Port Data Direction Set"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2DIRTGL" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4000310C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="DIRTGL" edc:nzwidth="0x20" edc:desc="Port Data Direction Toggle"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2OUT" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x40003110">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="OUT" edc:nzwidth="0x20" edc:desc="PORT Data Output Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2OUTCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x40003114">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="OUTCLR" edc:nzwidth="0x20" edc:desc="PORT Data Output Value Clear"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2OUTSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x40003118">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="OUTSET" edc:nzwidth="0x20" edc:desc="PORT Data Output Value Set"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2OUTTGL" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4000311C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="OUTTGL" edc:nzwidth="0x20" edc:desc="PORT Data Output Value Toggle"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2IN" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x40003120">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="IN" edc:nzwidth="0x20" edc:desc="PORT Data Input Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2CTRL" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x40003124">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="SAMPLING" edc:nzwidth="0x20" edc:desc="Input Sampling Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2WRCONFIG" edc:nzwidth="0x20" edc:access="ww-wwwww-w---wwwwwwwwwwwwwwwwwww" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xDF47FFFF" edc:_addr="0x40003128">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PINMASK" edc:nzwidth="0x10" edc:desc="Pin Mask for Multiple Pin Configuration"/>
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PMUX" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing"/>
            <edc:SFRFieldDef edc:cname="WRPMUX" edc:nzwidth="0x1" edc:desc="Write PMUX"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="WRPINCFG" edc:nzwidth="0x1" edc:desc="Write PINCFG"/>
            <edc:SFRFieldDef edc:cname="HWSEL" edc:nzwidth="0x1" edc:desc="Half-Word Select"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2EVCTRL" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4000312C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PID0" edc:nzwidth="0x5" edc:desc="PORT Event Pin Identifier 0"/>
            <edc:SFRFieldDef edc:cname="EVACT0" edc:nzwidth="0x2" edc:desc="PORT Event Action 0">
              <edc:SFRFieldSemantic edc:cname="OUT" edc:desc="Event output to pin" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set output register of pin on event" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLR" edc:desc="Clear output register of pin on event" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TGL" edc:desc="Toggle output register of pin on event" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PORTEI0" edc:nzwidth="0x1" edc:desc="PORT Event Input Enable 0"/>
            <edc:SFRFieldDef edc:cname="PID1" edc:nzwidth="0x5" edc:desc="PORT Event Pin Identifier 1"/>
            <edc:SFRFieldDef edc:cname="EVACT1" edc:nzwidth="0x2" edc:desc="PORT Event Action 1"/>
            <edc:SFRFieldDef edc:cname="PORTEI1" edc:nzwidth="0x1" edc:desc="PORT Event Input Enable 1"/>
            <edc:SFRFieldDef edc:cname="PID2" edc:nzwidth="0x5" edc:desc="PORT Event Pin Identifier 2"/>
            <edc:SFRFieldDef edc:cname="EVACT2" edc:nzwidth="0x2" edc:desc="PORT Event Action 2"/>
            <edc:SFRFieldDef edc:cname="PORTEI2" edc:nzwidth="0x1" edc:desc="PORT Event Input Enable 2"/>
            <edc:SFRFieldDef edc:cname="PID3" edc:nzwidth="0x5" edc:desc="PORT Event Pin Identifier 3"/>
            <edc:SFRFieldDef edc:cname="EVACT3" edc:nzwidth="0x2" edc:desc="PORT Event Action 3"/>
            <edc:SFRFieldDef edc:cname="PORTEI3" edc:nzwidth="0x1" edc:desc="PORT Event Input Enable 3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2PMUX0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x40003130">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2PMUX1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x40003131">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2PMUX2" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x40003132">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2PMUX3" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x40003133">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2PMUX4" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x40003134">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2PMUX5" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x40003135">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2PMUX6" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x40003136">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2PMUX7" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x40003137">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2PMUX8" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x40003138">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2PMUX9" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x40003139">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2PMUX10" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x4000313A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2PMUX11" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x4000313B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2PMUX12" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x4000313C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2PMUX13" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x4000313D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2PMUX14" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x4000313E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2PMUX15" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x4000313F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="K" edc:desc="Peripheral function K selected" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2PINCFG0" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x40003140">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2PINCFG1" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x40003141">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2PINCFG2" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x40003142">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2PINCFG3" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x40003143">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2PINCFG4" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x40003144">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2PINCFG5" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x40003145">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2PINCFG6" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x40003146">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2PINCFG7" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x40003147">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2PINCFG8" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x40003148">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2PINCFG9" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x40003149">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2PINCFG10" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x4000314A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2PINCFG11" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x4000314B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2PINCFG12" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x4000314C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2PINCFG13" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x4000314D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2PINCFG14" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x4000314E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2PINCFG15" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x4000314F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2PINCFG16" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x40003150">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2PINCFG17" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x40003151">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2PINCFG18" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x40003152">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2PINCFG19" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x40003153">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2PINCFG20" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x40003154">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2PINCFG21" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x40003155">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2PINCFG22" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x40003156">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2PINCFG23" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x40003157">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2PINCFG24" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x40003158">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2PINCFG25" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x40003159">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2PINCFG26" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x4000315A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2PINCFG27" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x4000315B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2PINCFG28" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x4000315C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2PINCFG29" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x4000315D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2PINCFG30" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x4000315E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP2PINCFG31" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x4000315F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2A0" edc:_addr="0x40003160"/>
      <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x40003400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x40003401">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
            <edc:SFRFieldDef edc:cname="START0" edc:nzwidth="0x1" edc:desc="Comparator 0 Start Comparison"/>
            <edc:SFRFieldDef edc:cname="START1" edc:nzwidth="0x1" edc:desc="Comparator 1 Start Comparison"/>
            <edc:SFRFieldDef edc:cname="START2" edc:nzwidth="0x1" edc:desc="Comparator 2 Start Comparison"/>
            <edc:SFRFieldDef edc:cname="START3" edc:nzwidth="0x1" edc:desc="Comparator 3 Start Comparison"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="EVCTRL" edc:nzwidth="0x10" edc:access="nnnnnnnn--nnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xFF3F" edc:_addr="0x40003402">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
            <edc:SFRFieldDef edc:cname="COMPEO0" edc:nzwidth="0x1" edc:desc="Comparator 0 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="COMPEO1" edc:nzwidth="0x1" edc:desc="Comparator 1 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="COMPEO2" edc:nzwidth="0x1" edc:desc="Comparator 2 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="COMPEO3" edc:nzwidth="0x1" edc:desc="Comparator 3 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="WINEO0" edc:nzwidth="0x1" edc:desc="Window 0 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="WINEO1" edc:nzwidth="0x1" edc:desc="Window 1 Event Output Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="COMPEI0" edc:nzwidth="0x1" edc:desc="Comparator 0 Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="COMPEI1" edc:nzwidth="0x1" edc:desc="Comparator 1 Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="COMPEI2" edc:nzwidth="0x1" edc:desc="Comparator 2 Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="COMPEI3" edc:nzwidth="0x1" edc:desc="Comparator 3 Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="INVEI0" edc:nzwidth="0x1" edc:desc="Comparator 0 Input Event Invert Enable"/>
            <edc:SFRFieldDef edc:cname="INVEI1" edc:nzwidth="0x1" edc:desc="Comparator 1 Input Event Invert Enable"/>
            <edc:SFRFieldDef edc:cname="INVEI2" edc:nzwidth="0x1" edc:desc="Comparator 2 Input Event Invert Enable"/>
            <edc:SFRFieldDef edc:cname="INVEI3" edc:nzwidth="0x1" edc:desc="Comparator 3 Input Event Invert Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:_addr="0x40003404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
            <edc:SFRFieldDef edc:cname="COMP0" edc:nzwidth="0x1" edc:desc="Comparator 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="COMP1" edc:nzwidth="0x1" edc:desc="Comparator 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="COMP2" edc:nzwidth="0x1" edc:desc="Comparator 2 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="COMP3" edc:nzwidth="0x1" edc:desc="Comparator 3 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="WIN0" edc:nzwidth="0x1" edc:desc="Window 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="WIN1" edc:nzwidth="0x1" edc:desc="Window 1 Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:_addr="0x40003405">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
            <edc:SFRFieldDef edc:cname="COMP0" edc:nzwidth="0x1" edc:desc="Comparator 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="COMP1" edc:nzwidth="0x1" edc:desc="Comparator 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="COMP2" edc:nzwidth="0x1" edc:desc="Comparator 2 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="COMP3" edc:nzwidth="0x1" edc:desc="Comparator 3 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="WIN0" edc:nzwidth="0x1" edc:desc="Window 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="WIN1" edc:nzwidth="0x1" edc:desc="Window 1 Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:_addr="0x40003406">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
            <edc:SFRFieldDef edc:cname="COMP0" edc:nzwidth="0x1" edc:desc="Comparator 0"/>
            <edc:SFRFieldDef edc:cname="COMP1" edc:nzwidth="0x1" edc:desc="Comparator 1"/>
            <edc:SFRFieldDef edc:cname="COMP2" edc:nzwidth="0x1" edc:desc="Comparator 2"/>
            <edc:SFRFieldDef edc:cname="COMP3" edc:nzwidth="0x1" edc:desc="Comparator 3"/>
            <edc:SFRFieldDef edc:cname="WIN0" edc:nzwidth="0x1" edc:desc="Window 0"/>
            <edc:SFRFieldDef edc:cname="WIN1" edc:nzwidth="0x1" edc:desc="Window 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="STATUSA" edc:nzwidth="0x8" edc:access="rrrrrrrr" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x40003407">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
            <edc:SFRFieldDef edc:cname="STATE0" edc:nzwidth="0x1" edc:desc="Comparator 0 Current State"/>
            <edc:SFRFieldDef edc:cname="STATE1" edc:nzwidth="0x1" edc:desc="Comparator 1 Current State"/>
            <edc:SFRFieldDef edc:cname="STATE2" edc:nzwidth="0x1" edc:desc="Comparator 2 Current State"/>
            <edc:SFRFieldDef edc:cname="STATE3" edc:nzwidth="0x1" edc:desc="Comparator 3 Current State"/>
            <edc:SFRFieldDef edc:cname="WSTATE0" edc:nzwidth="0x2" edc:desc="Window 0 Current State">
              <edc:SFRFieldSemantic edc:cname="ABOVE" edc:desc="Signal is above window" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="INSIDE" edc:desc="Signal is inside window" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="BELOW" edc:desc="Signal is below window" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WSTATE1" edc:nzwidth="0x2" edc:desc="Window 1 Current State">
              <edc:SFRFieldSemantic edc:cname="ABOVE" edc:desc="Signal is above window" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="INSIDE" edc:desc="Signal is inside window" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="BELOW" edc:desc="Signal is below window" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="STATUSB" edc:nzwidth="0x8" edc:access="----rrrr" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x40003408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
            <edc:SFRFieldDef edc:cname="READY0" edc:nzwidth="0x1" edc:desc="Comparator 0 Ready"/>
            <edc:SFRFieldDef edc:cname="READY1" edc:nzwidth="0x1" edc:desc="Comparator 1 Ready"/>
            <edc:SFRFieldDef edc:cname="READY2" edc:nzwidth="0x1" edc:desc="Comparator 2 Ready"/>
            <edc:SFRFieldDef edc:cname="READY3" edc:nzwidth="0x1" edc:desc="Comparator 3 Ready"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x40003409">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Run"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="WINCTRL" edc:nzwidth="0x8" edc:access="-nnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x77" edc:_addr="0x4000340A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
            <edc:SFRFieldDef edc:cname="WEN0" edc:nzwidth="0x1" edc:desc="Window 0 Mode Enable"/>
            <edc:SFRFieldDef edc:cname="WINTSEL0" edc:nzwidth="0x2" edc:desc="Window 0 Interrupt Selection">
              <edc:SFRFieldSemantic edc:cname="ABOVE" edc:desc="Interrupt on signal above window" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="INSIDE" edc:desc="Interrupt on signal inside window" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="BELOW" edc:desc="Interrupt on signal below window" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="OUTSIDE" edc:desc="Interrupt on signal outside window" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="WEN1" edc:nzwidth="0x1" edc:desc="Window 1 Mode Enable"/>
            <edc:SFRFieldDef edc:cname="WINTSEL1" edc:nzwidth="0x2" edc:desc="Window 1 Interrupt Selection">
              <edc:SFRFieldSemantic edc:cname="ABOVE" edc:desc="Interrupt on signal above window" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="INSIDE" edc:desc="Interrupt on signal inside window" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="BELOW" edc:desc="Interrupt on signal below window" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="OUTSIDE" edc:desc="Interrupt on signal outside window" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x4000340B"/>
      <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="SCALER0" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:_addr="0x4000340C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
            <edc:SFRFieldDef edc:cname="VALUE" edc:nzwidth="0x6" edc:desc="Scaler Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="SCALER1" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:_addr="0x4000340D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
            <edc:SFRFieldDef edc:cname="VALUE" edc:nzwidth="0x6" edc:desc="Scaler Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="SCALER2" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:_addr="0x4000340E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
            <edc:SFRFieldDef edc:cname="VALUE" edc:nzwidth="0x6" edc:desc="Scaler Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="SCALER3" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:_addr="0x4000340F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
            <edc:SFRFieldDef edc:cname="VALUE" edc:nzwidth="0x6" edc:desc="Scaler Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="COMPCTRL0" edc:nzwidth="0x20" edc:access="--nn-nnn--nnn-nnnnnn-nnn-n-nnnn-" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x373BF75E" edc:_addr="0x40003410">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="SINGLE" edc:nzwidth="0x1" edc:desc="Single-Shot Mode"/>
            <edc:SFRFieldDef edc:cname="INTSEL" edc:nzwidth="0x2" edc:desc="Interrupt Selection">
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Interrupt on comparator output toggle" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Interrupt on comparator output rising" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Interrupt on comparator output falling" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="EOC" edc:desc="Interrupt on end of comparison (single-shot mode only)" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MUXNEG" edc:nzwidth="0x3" edc:desc="Negative Input Mux Selection">
              <edc:SFRFieldSemantic edc:cname="AIN0" edc:desc="I/O pin 0 for COMPCTRL0/1" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AIN4" edc:desc="I/O pin 0 for COMPCTRL2/3" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AIN1" edc:desc="I/O pin 1 for COMPCTRL0/1" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="AIN5" edc:desc="I/O pin 1 for COMPCTRL2/3" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="AIN2" edc:desc="I/O pin 2 for COMPCTRL0/1" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="AIN6" edc:desc="I/O pin 2 for COMPCTRL2/3" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="AIN3" edc:desc="I/O pin 3 for COMPCTRL0/1" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="AIN7" edc:desc="I/O pin 3 for COMPCTRL2/3" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="AVSS" edc:desc="Ground" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="VSCALE" edc:desc="AVDD Scaler" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="BANDGAP" edc:desc="Internal Bandgap Voltage" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="DAC" edc:desc="DAC Voltage Output 0 for COMPCTRL0/2" edc:when="(field &amp; 0x7) == 7"/>
              <edc:SFRFieldSemantic edc:cname="OPAMP2" edc:desc="OPAMP2 Output for COMPCTRL1/3" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MUXPOS" edc:nzwidth="0x3" edc:desc="Positive Input Mux Selection">
              <edc:SFRFieldSemantic edc:cname="AIN0" edc:desc="I/O pin 0 for COMPCTRL0/1" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AIN4" edc:desc="I/O pin 0 for COMPCTRL2/3" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AIN1" edc:desc="I/O pin 1 for COMPCTRL0/1" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="AIN5" edc:desc="I/O pin 1 for COMPCTRL2/3" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="AIN2" edc:desc="I/O pin 2 for COMPCTRL0/1" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="AIN6" edc:desc="I/O pin 2 for COMPCTRL2/3" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="AIN3" edc:desc="I/O pin 3 for COMPCTRL0/1" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="AIN7" edc:desc="I/O pin 3 for COMPCTRL2/3" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="VSCALE" edc:desc="AVDD Scaler" edc:when="(field &amp; 0x7) == 4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SWAP" edc:nzwidth="0x1" edc:desc="Swap Inputs and Invert"/>
            <edc:SFRFieldDef edc:cname="SPEED" edc:nzwidth="0x2" edc:desc="Speed Selection">
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Low speed" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MEDLOW" edc:desc="Medium low speed" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="MEDHIGH" edc:desc="Medium high speed" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="High speed" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="HYSTEN" edc:nzwidth="0x1" edc:desc="Hysteresis Enable"/>
            <edc:SFRFieldDef edc:cname="HYST" edc:nzwidth="0x2" edc:desc="Hysteresis Level">
              <edc:SFRFieldSemantic edc:cname="HYST50" edc:desc="50mV" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HYST70" edc:desc="70mV" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="HYST90" edc:desc="90mV" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="HYST110" edc:desc="110mV" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FLEN" edc:nzwidth="0x3" edc:desc="Filter Length">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="No filtering" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MAJ3" edc:desc="3-bit majority function (2 of 3)" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="MAJ5" edc:desc="5-bit majority function (3 of 5)" edc:when="(field &amp; 0x7) == 2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="OUT" edc:nzwidth="0x2" edc:desc="Output">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="The output of COMPn is not routed to the COMPn I/O port" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="The asynchronous output of COMPn is routed to the COMPn I/O port" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="The synchronous output (including filtering) of COMPn is routed to the COMPn I/O port" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="COMPCTRL1" edc:nzwidth="0x20" edc:access="--nn-nnn--nnn-nnnnnn-nnn-n-nnnn-" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x373BF75E" edc:_addr="0x40003414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="SINGLE" edc:nzwidth="0x1" edc:desc="Single-Shot Mode"/>
            <edc:SFRFieldDef edc:cname="INTSEL" edc:nzwidth="0x2" edc:desc="Interrupt Selection">
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Interrupt on comparator output toggle" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Interrupt on comparator output rising" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Interrupt on comparator output falling" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="EOC" edc:desc="Interrupt on end of comparison (single-shot mode only)" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MUXNEG" edc:nzwidth="0x3" edc:desc="Negative Input Mux Selection">
              <edc:SFRFieldSemantic edc:cname="AIN0" edc:desc="I/O pin 0 for COMPCTRL0/1" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AIN4" edc:desc="I/O pin 0 for COMPCTRL2/3" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AIN1" edc:desc="I/O pin 1 for COMPCTRL0/1" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="AIN5" edc:desc="I/O pin 1 for COMPCTRL2/3" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="AIN2" edc:desc="I/O pin 2 for COMPCTRL0/1" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="AIN6" edc:desc="I/O pin 2 for COMPCTRL2/3" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="AIN3" edc:desc="I/O pin 3 for COMPCTRL0/1" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="AIN7" edc:desc="I/O pin 3 for COMPCTRL2/3" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="AVSS" edc:desc="Ground" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="VSCALE" edc:desc="AVDD Scaler" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="BANDGAP" edc:desc="Internal Bandgap Voltage" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="DAC" edc:desc="DAC Voltage Output 0 for COMPCTRL0/2" edc:when="(field &amp; 0x7) == 7"/>
              <edc:SFRFieldSemantic edc:cname="OPAMP2" edc:desc="OPAMP2 Output for COMPCTRL1/3" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MUXPOS" edc:nzwidth="0x3" edc:desc="Positive Input Mux Selection">
              <edc:SFRFieldSemantic edc:cname="AIN0" edc:desc="I/O pin 0 for COMPCTRL0/1" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AIN4" edc:desc="I/O pin 0 for COMPCTRL2/3" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AIN1" edc:desc="I/O pin 1 for COMPCTRL0/1" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="AIN5" edc:desc="I/O pin 1 for COMPCTRL2/3" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="AIN2" edc:desc="I/O pin 2 for COMPCTRL0/1" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="AIN6" edc:desc="I/O pin 2 for COMPCTRL2/3" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="AIN3" edc:desc="I/O pin 3 for COMPCTRL0/1" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="AIN7" edc:desc="I/O pin 3 for COMPCTRL2/3" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="VSCALE" edc:desc="AVDD Scaler" edc:when="(field &amp; 0x7) == 4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SWAP" edc:nzwidth="0x1" edc:desc="Swap Inputs and Invert"/>
            <edc:SFRFieldDef edc:cname="SPEED" edc:nzwidth="0x2" edc:desc="Speed Selection">
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Low speed" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MEDLOW" edc:desc="Medium low speed" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="MEDHIGH" edc:desc="Medium high speed" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="High speed" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="HYSTEN" edc:nzwidth="0x1" edc:desc="Hysteresis Enable"/>
            <edc:SFRFieldDef edc:cname="HYST" edc:nzwidth="0x2" edc:desc="Hysteresis Level">
              <edc:SFRFieldSemantic edc:cname="HYST50" edc:desc="50mV" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HYST70" edc:desc="70mV" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="HYST90" edc:desc="90mV" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="HYST110" edc:desc="110mV" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FLEN" edc:nzwidth="0x3" edc:desc="Filter Length">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="No filtering" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MAJ3" edc:desc="3-bit majority function (2 of 3)" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="MAJ5" edc:desc="5-bit majority function (3 of 5)" edc:when="(field &amp; 0x7) == 2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="OUT" edc:nzwidth="0x2" edc:desc="Output">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="The output of COMPn is not routed to the COMPn I/O port" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="The asynchronous output of COMPn is routed to the COMPn I/O port" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="The synchronous output (including filtering) of COMPn is routed to the COMPn I/O port" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="COMPCTRL2" edc:nzwidth="0x20" edc:access="--nn-nnn--nnn-nnnnnn-nnn-n-nnnn-" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x373BF75E" edc:_addr="0x40003418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="SINGLE" edc:nzwidth="0x1" edc:desc="Single-Shot Mode"/>
            <edc:SFRFieldDef edc:cname="INTSEL" edc:nzwidth="0x2" edc:desc="Interrupt Selection">
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Interrupt on comparator output toggle" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Interrupt on comparator output rising" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Interrupt on comparator output falling" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="EOC" edc:desc="Interrupt on end of comparison (single-shot mode only)" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MUXNEG" edc:nzwidth="0x3" edc:desc="Negative Input Mux Selection">
              <edc:SFRFieldSemantic edc:cname="AIN0" edc:desc="I/O pin 0 for COMPCTRL0/1" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AIN4" edc:desc="I/O pin 0 for COMPCTRL2/3" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AIN1" edc:desc="I/O pin 1 for COMPCTRL0/1" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="AIN5" edc:desc="I/O pin 1 for COMPCTRL2/3" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="AIN2" edc:desc="I/O pin 2 for COMPCTRL0/1" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="AIN6" edc:desc="I/O pin 2 for COMPCTRL2/3" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="AIN3" edc:desc="I/O pin 3 for COMPCTRL0/1" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="AIN7" edc:desc="I/O pin 3 for COMPCTRL2/3" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="AVSS" edc:desc="Ground" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="VSCALE" edc:desc="AVDD Scaler" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="BANDGAP" edc:desc="Internal Bandgap Voltage" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="DAC" edc:desc="DAC Voltage Output 0 for COMPCTRL0/2" edc:when="(field &amp; 0x7) == 7"/>
              <edc:SFRFieldSemantic edc:cname="OPAMP2" edc:desc="OPAMP2 Output for COMPCTRL1/3" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MUXPOS" edc:nzwidth="0x3" edc:desc="Positive Input Mux Selection">
              <edc:SFRFieldSemantic edc:cname="AIN0" edc:desc="I/O pin 0 for COMPCTRL0/1" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AIN4" edc:desc="I/O pin 0 for COMPCTRL2/3" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AIN1" edc:desc="I/O pin 1 for COMPCTRL0/1" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="AIN5" edc:desc="I/O pin 1 for COMPCTRL2/3" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="AIN2" edc:desc="I/O pin 2 for COMPCTRL0/1" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="AIN6" edc:desc="I/O pin 2 for COMPCTRL2/3" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="AIN3" edc:desc="I/O pin 3 for COMPCTRL0/1" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="AIN7" edc:desc="I/O pin 3 for COMPCTRL2/3" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="VSCALE" edc:desc="AVDD Scaler" edc:when="(field &amp; 0x7) == 4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SWAP" edc:nzwidth="0x1" edc:desc="Swap Inputs and Invert"/>
            <edc:SFRFieldDef edc:cname="SPEED" edc:nzwidth="0x2" edc:desc="Speed Selection">
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Low speed" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MEDLOW" edc:desc="Medium low speed" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="MEDHIGH" edc:desc="Medium high speed" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="High speed" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="HYSTEN" edc:nzwidth="0x1" edc:desc="Hysteresis Enable"/>
            <edc:SFRFieldDef edc:cname="HYST" edc:nzwidth="0x2" edc:desc="Hysteresis Level">
              <edc:SFRFieldSemantic edc:cname="HYST50" edc:desc="50mV" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HYST70" edc:desc="70mV" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="HYST90" edc:desc="90mV" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="HYST110" edc:desc="110mV" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FLEN" edc:nzwidth="0x3" edc:desc="Filter Length">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="No filtering" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MAJ3" edc:desc="3-bit majority function (2 of 3)" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="MAJ5" edc:desc="5-bit majority function (3 of 5)" edc:when="(field &amp; 0x7) == 2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="OUT" edc:nzwidth="0x2" edc:desc="Output">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="The output of COMPn is not routed to the COMPn I/O port" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="The asynchronous output of COMPn is routed to the COMPn I/O port" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="The synchronous output (including filtering) of COMPn is routed to the COMPn I/O port" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="COMPCTRL3" edc:nzwidth="0x20" edc:access="--nn-nnn--nnn-nnnnnn-nnn-n-nnnn-" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x373BF75E" edc:_addr="0x4000341C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="SINGLE" edc:nzwidth="0x1" edc:desc="Single-Shot Mode"/>
            <edc:SFRFieldDef edc:cname="INTSEL" edc:nzwidth="0x2" edc:desc="Interrupt Selection">
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Interrupt on comparator output toggle" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Interrupt on comparator output rising" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Interrupt on comparator output falling" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="EOC" edc:desc="Interrupt on end of comparison (single-shot mode only)" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MUXNEG" edc:nzwidth="0x3" edc:desc="Negative Input Mux Selection">
              <edc:SFRFieldSemantic edc:cname="AIN0" edc:desc="I/O pin 0 for COMPCTRL0/1" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AIN4" edc:desc="I/O pin 0 for COMPCTRL2/3" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AIN1" edc:desc="I/O pin 1 for COMPCTRL0/1" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="AIN5" edc:desc="I/O pin 1 for COMPCTRL2/3" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="AIN2" edc:desc="I/O pin 2 for COMPCTRL0/1" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="AIN6" edc:desc="I/O pin 2 for COMPCTRL2/3" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="AIN3" edc:desc="I/O pin 3 for COMPCTRL0/1" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="AIN7" edc:desc="I/O pin 3 for COMPCTRL2/3" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="AVSS" edc:desc="Ground" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="VSCALE" edc:desc="AVDD Scaler" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="BANDGAP" edc:desc="Internal Bandgap Voltage" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="DAC" edc:desc="DAC Voltage Output 0 for COMPCTRL0/2" edc:when="(field &amp; 0x7) == 7"/>
              <edc:SFRFieldSemantic edc:cname="OPAMP2" edc:desc="OPAMP2 Output for COMPCTRL1/3" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MUXPOS" edc:nzwidth="0x3" edc:desc="Positive Input Mux Selection">
              <edc:SFRFieldSemantic edc:cname="AIN0" edc:desc="I/O pin 0 for COMPCTRL0/1" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AIN4" edc:desc="I/O pin 0 for COMPCTRL2/3" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AIN1" edc:desc="I/O pin 1 for COMPCTRL0/1" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="AIN5" edc:desc="I/O pin 1 for COMPCTRL2/3" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="AIN2" edc:desc="I/O pin 2 for COMPCTRL0/1" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="AIN6" edc:desc="I/O pin 2 for COMPCTRL2/3" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="AIN3" edc:desc="I/O pin 3 for COMPCTRL0/1" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="AIN7" edc:desc="I/O pin 3 for COMPCTRL2/3" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="VSCALE" edc:desc="AVDD Scaler" edc:when="(field &amp; 0x7) == 4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SWAP" edc:nzwidth="0x1" edc:desc="Swap Inputs and Invert"/>
            <edc:SFRFieldDef edc:cname="SPEED" edc:nzwidth="0x2" edc:desc="Speed Selection">
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Low speed" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MEDLOW" edc:desc="Medium low speed" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="MEDHIGH" edc:desc="Medium high speed" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="High speed" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="HYSTEN" edc:nzwidth="0x1" edc:desc="Hysteresis Enable"/>
            <edc:SFRFieldDef edc:cname="HYST" edc:nzwidth="0x2" edc:desc="Hysteresis Level">
              <edc:SFRFieldSemantic edc:cname="HYST50" edc:desc="50mV" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HYST70" edc:desc="70mV" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="HYST90" edc:desc="90mV" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="HYST110" edc:desc="110mV" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FLEN" edc:nzwidth="0x3" edc:desc="Filter Length">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="No filtering" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MAJ3" edc:desc="3-bit majority function (2 of 3)" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="MAJ5" edc:desc="5-bit majority function (3 of 5)" edc:when="(field &amp; 0x7) == 2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="OUT" edc:nzwidth="0x2" edc:desc="Output">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="The output of COMPn is not routed to the COMPn I/O port" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="The asynchronous output of COMPn is routed to the COMPn I/O port" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="The synchronous output (including filtering) of COMPn is routed to the COMPn I/O port" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="-------------------------rrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7F" edc:_addr="0x40003420">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="WINCTRL" edc:nzwidth="0x1" edc:desc="WINCTRL Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="COMPCTRL0" edc:nzwidth="0x1" edc:desc="COMPCTRL 0 Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="COMPCTRL1" edc:nzwidth="0x1" edc:desc="COMPCTRL 1 Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="COMPCTRL2" edc:nzwidth="0x1" edc:desc="COMPCTRL 2 Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="COMPCTRL3" edc:nzwidth="0x1" edc:desc="COMPCTRL 3 Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:SFRDataSector>
    <edc:SFRDataSector edc:regionid="APBB" edc:beginaddr="0x41000000" edc:endaddr="0x4100A02C" edc:rw="rw">
      <edc:AdjustPoint edc:offset="0x2000" edc:_addr="0x41000000"/>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="CTRL" edc:nzwidth="0x8" edc:access="----ww-w" edc:por="00000000" edc:mclr="00000000" edc:impl="0xD" edc:_addr="0x41002000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CRC" edc:nzwidth="0x1" edc:desc="32-bit Cyclic Redundancy Code"/>
            <edc:SFRFieldDef edc:cname="MBIST" edc:nzwidth="0x1" edc:desc="Memory built-in self-test"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="STATUSA" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:_addr="0x41002001">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="DONE" edc:nzwidth="0x1" edc:desc="Done"/>
            <edc:SFRFieldDef edc:cname="CRSTEXT" edc:nzwidth="0x1" edc:desc="CPU Reset Phase Extension"/>
            <edc:SFRFieldDef edc:cname="BERR" edc:nzwidth="0x1" edc:desc="Bus Error"/>
            <edc:SFRFieldDef edc:cname="FAIL" edc:nzwidth="0x1" edc:desc="Failure"/>
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Protection Error"/>
            <edc:SFRFieldDef edc:cname="BREXT" edc:nzwidth="0x1" edc:desc="BootRom Phase Extension"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="STATUSB" edc:nzwidth="0x8" edc:access="rrrrrrrr" edc:_addr="0x41002002">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="DAL" edc:nzwidth="0x2" edc:desc="Debugger Access Level">
              <edc:SFRFieldSemantic edc:cname="SECURED" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FULL_DEBUG" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DBGPRES" edc:nzwidth="0x1" edc:desc="Debugger Present"/>
            <edc:SFRFieldDef edc:cname="HPE" edc:nzwidth="0x1" edc:desc="Hot-Plugging Enable"/>
            <edc:SFRFieldDef edc:cname="DCCD0" edc:nzwidth="0x1" edc:desc="Debug Communication Channel 0 Dirty"/>
            <edc:SFRFieldDef edc:cname="DCCD1" edc:nzwidth="0x1" edc:desc="Debug Communication Channel 1 Dirty"/>
            <edc:SFRFieldDef edc:cname="BCCD0" edc:nzwidth="0x1" edc:desc="Boot ROM Communication Channel 0 Dirty"/>
            <edc:SFRFieldDef edc:cname="BCCD1" edc:nzwidth="0x1" edc:desc="Boot ROM Communication Channel 1 Dirty"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x41002003"/>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41002004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="AMOD" edc:nzwidth="0x2" edc:desc="Access Mode"/>
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0x1E" edc:desc="Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="LENGTH" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnn--" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFFFC" edc:_addr="0x41002008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="LENGTH" edc:nzwidth="0x1E" edc:desc="Length"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4100200C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="DCC0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41002010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="DCC1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41002014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="DID" edc:nzwidth="0x20" edc:access="rrrrrrrrr-rrrrrrrrrrrrrrrrrrrrrr" edc:por="00100000100001010000000000000100" edc:mclr="00100000100001010000000000000100" edc:impl="0xFFBFFFFF" edc:_addr="0x41002018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="DEVSEL" edc:nzwidth="0x8" edc:desc="Device Select">
              <edc:SFRFieldSemantic edc:cname="512KB_64KB_100PIN" edc:desc="512 KB Flash / 64 KB SRAM / 100-pin" edc:when="(field &amp; 0xFF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="512KB_64KB_64PIN" edc:desc="512 KB Flash / 64 KB SRAM / 64-pin" edc:when="(field &amp; 0xFF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="512KB_64KB_48PIN" edc:desc="512 KB Flash / 64 KB SRAM / 48-pin" edc:when="(field &amp; 0xFF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="256KB_32KB_100PIN" edc:desc="256 KB Flash / 32 KB SRAM / 100-pin" edc:when="(field &amp; 0xFF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="256KB_32KB_64PIN" edc:desc="256 KB Flash / 32 KB SRAM / 64-pin" edc:when="(field &amp; 0xFF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="256KB_32KB_48PIN" edc:desc="256 KB Flash / 32 KB SRAM / 48-pin" edc:when="(field &amp; 0xFF) == 0x6"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="REVISION" edc:nzwidth="0x4" edc:desc="Revision Number"/>
            <edc:SFRFieldDef edc:cname="DIE" edc:nzwidth="0x4" edc:desc="Die Number"/>
            <edc:SFRFieldDef edc:cname="SERIES" edc:nzwidth="0x6" edc:desc="Series">
              <edc:SFRFieldSemantic edc:cname="LE00" edc:desc="Low Power" edc:when="(field &amp; 0x3F) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="LS00" edc:desc="Low Power and Security" edc:when="(field &amp; 0x3F) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="LS60" edc:desc="Low Power and Security with CryptoAuthentication Device" edc:when="(field &amp; 0x3F) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FAMILY" edc:nzwidth="0x5" edc:desc="Family">
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="PIC32CM Ultra-Low Power Entry Level Families" edc:when="(field &amp; 0x1F) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PROCESSOR" edc:nzwidth="0x4" edc:desc="Processor">
              <edc:SFRFieldSemantic edc:cname="CM23" edc:desc="Cortex-M23" edc:when="(field &amp; 0xF) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="CFG" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000010" edc:mclr="00000000000000000000000000000010" edc:impl="0xF" edc:_addr="0x4100201C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="LQOS" edc:nzwidth="0x2" edc:desc="Latency Quality Of Service"/>
            <edc:SFRFieldDef edc:cname="DCCDMALEVEL0" edc:nzwidth="0x1" edc:desc="DMA Trigger Level 0">
              <edc:SFRFieldSemantic edc:cname="READ" edc:desc="Signals to the DMA that a data is available for read" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="WRITE" edc:desc="Signals to the DMA that a data is available for write" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DCCDMALEVEL1" edc:nzwidth="0x1" edc:desc="DMA Trigger Level 1">
              <edc:SFRFieldSemantic edc:cname="READ" edc:desc="Signals to the DMA that a data is available for read" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="WRITE" edc:desc="Signals to the DMA that a data is available for write" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="BCC0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41002020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="BCC1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41002024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xD8" edc:_addr="0x41002028"/>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="CTRL" edc:nzwidth="0x8" edc:access="----ww-w" edc:por="00000000" edc:mclr="00000000" edc:impl="0xD" edc:_addr="0x41002100">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CRC" edc:nzwidth="0x1" edc:desc="32-bit Cyclic Redundancy Code"/>
            <edc:SFRFieldDef edc:cname="MBIST" edc:nzwidth="0x1" edc:desc="Memory built-in self-test"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="STATUSA" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:_addr="0x41002101">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="DONE" edc:nzwidth="0x1" edc:desc="Done"/>
            <edc:SFRFieldDef edc:cname="CRSTEXT" edc:nzwidth="0x1" edc:desc="CPU Reset Phase Extension"/>
            <edc:SFRFieldDef edc:cname="BERR" edc:nzwidth="0x1" edc:desc="Bus Error"/>
            <edc:SFRFieldDef edc:cname="FAIL" edc:nzwidth="0x1" edc:desc="Failure"/>
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Protection Error"/>
            <edc:SFRFieldDef edc:cname="BREXT" edc:nzwidth="0x1" edc:desc="BootRom Phase Extension"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="STATUSB" edc:nzwidth="0x8" edc:access="rrrrrrrr" edc:_addr="0x41002102">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="DAL" edc:nzwidth="0x2" edc:desc="Debugger Access Level">
              <edc:SFRFieldSemantic edc:cname="SECURED" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FULL_DEBUG" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DBGPRES" edc:nzwidth="0x1" edc:desc="Debugger Present"/>
            <edc:SFRFieldDef edc:cname="HPE" edc:nzwidth="0x1" edc:desc="Hot-Plugging Enable"/>
            <edc:SFRFieldDef edc:cname="DCCD0" edc:nzwidth="0x1" edc:desc="Debug Communication Channel 0 Dirty"/>
            <edc:SFRFieldDef edc:cname="DCCD1" edc:nzwidth="0x1" edc:desc="Debug Communication Channel 1 Dirty"/>
            <edc:SFRFieldDef edc:cname="BCCD0" edc:nzwidth="0x1" edc:desc="Boot ROM Communication Channel 0 Dirty"/>
            <edc:SFRFieldDef edc:cname="BCCD1" edc:nzwidth="0x1" edc:desc="Boot ROM Communication Channel 1 Dirty"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x41002103"/>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41002104">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="AMOD" edc:nzwidth="0x2" edc:desc="Access Mode"/>
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0x1E" edc:desc="Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="LENGTH" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnn--" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFFFC" edc:_addr="0x41002108">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="LENGTH" edc:nzwidth="0x1E" edc:desc="Length"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4100210C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="DCC0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41002110">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="DCC1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41002114">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="DID" edc:nzwidth="0x20" edc:access="rrrrrrrrr-rrrrrrrrrrrrrrrrrrrrrr" edc:por="00100000100001010000000000000100" edc:mclr="00100000100001010000000000000100" edc:impl="0xFFBFFFFF" edc:_addr="0x41002118">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="DEVSEL" edc:nzwidth="0x8" edc:desc="Device Select">
              <edc:SFRFieldSemantic edc:cname="512KB_64KB_100PIN" edc:desc="512 KB Flash / 64 KB SRAM / 100-pin" edc:when="(field &amp; 0xFF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="512KB_64KB_64PIN" edc:desc="512 KB Flash / 64 KB SRAM / 64-pin" edc:when="(field &amp; 0xFF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="512KB_64KB_48PIN" edc:desc="512 KB Flash / 64 KB SRAM / 48-pin" edc:when="(field &amp; 0xFF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="256KB_32KB_100PIN" edc:desc="256 KB Flash / 32 KB SRAM / 100-pin" edc:when="(field &amp; 0xFF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="256KB_32KB_64PIN" edc:desc="256 KB Flash / 32 KB SRAM / 64-pin" edc:when="(field &amp; 0xFF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="256KB_32KB_48PIN" edc:desc="256 KB Flash / 32 KB SRAM / 48-pin" edc:when="(field &amp; 0xFF) == 0x6"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="REVISION" edc:nzwidth="0x4" edc:desc="Revision Number"/>
            <edc:SFRFieldDef edc:cname="DIE" edc:nzwidth="0x4" edc:desc="Die Number"/>
            <edc:SFRFieldDef edc:cname="SERIES" edc:nzwidth="0x6" edc:desc="Series">
              <edc:SFRFieldSemantic edc:cname="LE00" edc:desc="Low Power" edc:when="(field &amp; 0x3F) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="LS00" edc:desc="Low Power and Security" edc:when="(field &amp; 0x3F) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="LS60" edc:desc="Low Power and Security with CryptoAuthentication Device" edc:when="(field &amp; 0x3F) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FAMILY" edc:nzwidth="0x5" edc:desc="Family">
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="PIC32CM Ultra-Low Power Entry Level Families" edc:when="(field &amp; 0x1F) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PROCESSOR" edc:nzwidth="0x4" edc:desc="Processor">
              <edc:SFRFieldSemantic edc:cname="CM23" edc:desc="Cortex-M23" edc:when="(field &amp; 0xF) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="CFG" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:por="00000000000000000000000000000010" edc:mclr="00000000000000000000000000000010" edc:impl="0xF" edc:_addr="0x4100211C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="LQOS" edc:nzwidth="0x2" edc:desc="Latency Quality Of Service"/>
            <edc:SFRFieldDef edc:cname="DCCDMALEVEL0" edc:nzwidth="0x1" edc:desc="DMA Trigger Level 0">
              <edc:SFRFieldSemantic edc:cname="READ" edc:desc="Signals to the DMA that a data is available for read" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="WRITE" edc:desc="Signals to the DMA that a data is available for write" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DCCDMALEVEL1" edc:nzwidth="0x1" edc:desc="DMA Trigger Level 1">
              <edc:SFRFieldSemantic edc:cname="READ" edc:desc="Signals to the DMA that a data is available for read" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="WRITE" edc:desc="Signals to the DMA that a data is available for write" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="BCC0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41002120">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="BCC1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41002124">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xED8" edc:_addr="0x41002128"/>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="ENTRY0" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrr----------rr" edc:por="10011111000011111100000000000010" edc:mclr="10011111000011111100000000000010" edc:impl="0xFFFFF003" edc:_addr="0x41003000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="EPRES" edc:nzwidth="0x1" edc:desc="Entry Present"/>
            <edc:SFRFieldDef edc:cname="FMT" edc:nzwidth="0x1" edc:desc="Format"/>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="ADDOFF" edc:nzwidth="0x14" edc:desc="Address Offset"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="ENTRY1" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41003004"/>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="END" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41003008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="END" edc:nzwidth="0x20" edc:desc="End Marker"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xF4" edc:_addr="0x4100300C"/>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="ENTRY0" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrr----------rr" edc:por="10011111000011111100000000000010" edc:mclr="10011111000011111100000000000010" edc:impl="0xFFFFF003" edc:_addr="0x41003100">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="EPRES" edc:nzwidth="0x1" edc:desc="Entry Present"/>
            <edc:SFRFieldDef edc:cname="FMT" edc:nzwidth="0x1" edc:desc="Format"/>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="ADDOFF" edc:nzwidth="0x14" edc:desc="Address Offset"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="ENTRY1" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41003104"/>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="END" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41003108">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="END" edc:nzwidth="0x20" edc:desc="End Marker"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xEC0" edc:_addr="0x4100310C"/>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="MEMTYPE" edc:nzwidth="0x20" edc:access="-------------------------------r" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1" edc:_addr="0x41003FCC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="SMEMP" edc:nzwidth="0x1" edc:desc="System Memory Present"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="PID4" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF" edc:_addr="0x41003FD0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="JEPCC" edc:nzwidth="0x4" edc:desc="JEP-106 Continuation Code"/>
            <edc:SFRFieldDef edc:cname="FKBC" edc:nzwidth="0x4" edc:desc="4KB count"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="PID5" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41003FD4"/>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="PID6" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41003FD8"/>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="PID7" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41003FDC"/>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="PID0" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000011010000" edc:mclr="00000000000000000000000011010000" edc:impl="0xFF" edc:_addr="0x41003FE0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="PARTNBL" edc:nzwidth="0x8" edc:desc="Part Number Low"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="PID1" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000011111100" edc:mclr="00000000000000000000000011111100" edc:impl="0xFF" edc:_addr="0x41003FE4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="PARTNBH" edc:nzwidth="0x4" edc:desc="Part Number High"/>
            <edc:SFRFieldDef edc:cname="JEPIDCL" edc:nzwidth="0x4" edc:desc="Low part of the JEP-106 Identity Code"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="PID2" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000000001001" edc:mclr="00000000000000000000000000001001" edc:impl="0xFF" edc:_addr="0x41003FE8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="JEPIDCH" edc:nzwidth="0x3" edc:desc="JEP-106 Identity Code High"/>
            <edc:SFRFieldDef edc:cname="JEPU" edc:nzwidth="0x1" edc:desc="JEP-106 Identity Code is used"/>
            <edc:SFRFieldDef edc:cname="REVISION" edc:nzwidth="0x4" edc:desc="Revision Number"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="PID3" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF" edc:_addr="0x41003FEC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="CUSMOD" edc:nzwidth="0x4" edc:desc="ARM CUSMOD"/>
            <edc:SFRFieldDef edc:cname="REVAND" edc:nzwidth="0x4" edc:desc="Revision Number"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="CID0" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000000001101" edc:mclr="00000000000000000000000000001101" edc:impl="0xFF" edc:_addr="0x41003FF0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="PREAMBLEB0" edc:nzwidth="0x8" edc:desc="Preamble Byte 0"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="CID1" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000000010000" edc:mclr="00000000000000000000000000010000" edc:impl="0xFF" edc:_addr="0x41003FF4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="PREAMBLE" edc:nzwidth="0x4" edc:desc="Preamble"/>
            <edc:SFRFieldDef edc:cname="CCLASS" edc:nzwidth="0x4" edc:desc="Component Class"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="CID2" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000000000101" edc:mclr="00000000000000000000000000000101" edc:impl="0xFF" edc:_addr="0x41003FF8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="PREAMBLEB2" edc:nzwidth="0x8" edc:desc="Preamble Byte 2"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="CID3" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000010110001" edc:mclr="00000000000000000000000010110001" edc:impl="0xFF" edc:_addr="0x41003FFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="PREAMBLEB3" edc:nzwidth="0x8" edc:desc="Preamble Byte 3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="CTRLA" edc:nzwidth="0x10" edc:access="wwwwwwww-wwwwwww" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xFF7F" edc:_addr="0x41004000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVMCTRL">
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x7" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="ER" edc:desc="Erase Row - Erases the row addressed by the ADDR register." edc:when="(field &amp; 0x7F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="WP" edc:desc="Write Page - Writes the contents of the page buffer to the page addressed by the ADDR register." edc:when="(field &amp; 0x7F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="SPRM" edc:desc="Sets the power reduction mode." edc:when="(field &amp; 0x7F) == 0x42"/>
              <edc:SFRFieldSemantic edc:cname="CPRM" edc:desc="Clears the power reduction mode." edc:when="(field &amp; 0x7F) == 0x43"/>
              <edc:SFRFieldSemantic edc:cname="PBC" edc:desc="Page Buffer Clear - Clears the page buffer." edc:when="(field &amp; 0x7F) == 0x44"/>
              <edc:SFRFieldSemantic edc:cname="INVALL" edc:desc="Invalidate all cache lines." edc:when="(field &amp; 0x7F) == 0x46"/>
              <edc:SFRFieldSemantic edc:cname="SDAL0" edc:desc="Set DAL=0" edc:when="(field &amp; 0x7F) == 0x4B"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CMDEX" edc:nzwidth="0x8" edc:desc="Command Execution">
              <edc:SFRFieldSemantic edc:cname="KEY" edc:desc="Execution Key" edc:when="(field &amp; 0xFF) == 0xA5"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x41004002"/>
      <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="-------------nnn----n-nn---nnnn-" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x70B1E" edc:_addr="0x41004004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVMCTRL">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RWS" edc:nzwidth="0x4" edc:desc="NVM Read Wait States"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SLEEPPRM" edc:nzwidth="0x2" edc:desc="Power Reduction Mode during Sleep">
              <edc:SFRFieldSemantic edc:cname="WAKEONACCESS" edc:desc="NVM block enters low-power mode when entering sleep.NVM block exits low-power mode upon first access." edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="WAKEUPINSTANT" edc:desc="NVM block enters low-power mode when entering sleep.NVM block exits low-power mode when exiting sleep." edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Auto power reduction disabled." edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FWUP" edc:nzwidth="0x1" edc:desc="fast wake-up"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="READMODE" edc:nzwidth="0x2" edc:desc="NVMCTRL Read Mode">
              <edc:SFRFieldSemantic edc:cname="NO_MISS_PENALTY" edc:desc="The NVM Controller (cache system) does not insert wait states on a cache miss. Gives the best system performance." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LOW_POWER" edc:desc="Reduces power consumption of the cache system, but inserts a wait state each time there is a cache miss. This mode may not be relevant if CPU performance is required, as the application will be stalled and may lead to increase run time." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="DETERMINISTIC" edc:desc="The cache system ensures that a cache hit or miss takes the same amount of time, determined by the number of programmed flash wait states. This mode can be used for real-time applications that require deterministic execution timings." edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CACHEDIS" edc:nzwidth="0x1" edc:desc="Cache Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="CTRLC" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000001" edc:mclr="00000001" edc:impl="0x1" edc:_addr="0x41004008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVMCTRL">
            <edc:SFRFieldDef edc:cname="MANW" edc:nzwidth="0x1" edc:desc="Manual Write"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x41004009"/>
      <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="EVCTRL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4100400A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVMCTRL">
            <edc:SFRFieldDef edc:cname="AUTOWEI" edc:nzwidth="0x1" edc:desc="Auto Write Event Enable"/>
            <edc:SFRFieldDef edc:cname="AUTOWINV" edc:nzwidth="0x1" edc:desc="Auto Write Event Polarity Inverted"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x4100400B"/>
      <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="---nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1F" edc:_addr="0x4100400C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVMCTRL">
            <edc:SFRFieldDef edc:cname="DONE" edc:nzwidth="0x1" edc:desc="NVM Done Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="PROGE" edc:nzwidth="0x1" edc:desc="Programming Error Status Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="LOCKE" edc:nzwidth="0x1" edc:desc="Lock Error Status Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="NVME" edc:nzwidth="0x1" edc:desc="NVM Error Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="KEYE" edc:nzwidth="0x1" edc:desc="Key Write Error Interrupt Clear"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x4100400D"/>
      <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="---nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1F" edc:_addr="0x41004010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVMCTRL">
            <edc:SFRFieldDef edc:cname="DONE" edc:nzwidth="0x1" edc:desc="NVM Done Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PROGE" edc:nzwidth="0x1" edc:desc="Programming Error Status Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LOCKE" edc:nzwidth="0x1" edc:desc="Lock Error Status Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="NVME" edc:nzwidth="0x1" edc:desc="NVM Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="KEYE" edc:nzwidth="0x1" edc:desc="Key Write Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x41004011"/>
      <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="---nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1F" edc:_addr="0x41004014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVMCTRL">
            <edc:SFRFieldDef edc:cname="DONE" edc:nzwidth="0x1" edc:desc="NVM Done"/>
            <edc:SFRFieldDef edc:cname="PROGE" edc:nzwidth="0x1" edc:desc="Programming Error Status"/>
            <edc:SFRFieldDef edc:cname="LOCKE" edc:nzwidth="0x1" edc:desc="Lock Error Status"/>
            <edc:SFRFieldDef edc:cname="NVME" edc:nzwidth="0x1" edc:desc="NVM Error"/>
            <edc:SFRFieldDef edc:cname="KEYE" edc:nzwidth="0x1" edc:desc="KEY Write Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x41004015"/>
      <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="-----------rrrrr" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1F" edc:_addr="0x41004018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVMCTRL">
            <edc:SFRFieldDef edc:cname="PRM" edc:nzwidth="0x1" edc:desc="Power Reduction Mode"/>
            <edc:SFRFieldDef edc:cname="LOAD" edc:nzwidth="0x1" edc:desc="NVM Page Buffer Active Loading"/>
            <edc:SFRFieldDef edc:cname="READY" edc:nzwidth="0x1" edc:desc="NVM Ready"/>
            <edc:SFRFieldDef edc:cname="DALFUSE" edc:nzwidth="0x2" edc:desc="Debug Access Level Fuse">
              <edc:SFRFieldSemantic edc:cname="DAL0" edc:desc="Access to very limited features" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DAL2" edc:desc="Access to all memory. Can debug secure and non-secure CPU code" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x4100401A"/>
      <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="--------nn------nnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC0FFFF" edc:_addr="0x4100401C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVMCTRL">
            <edc:SFRFieldDef edc:cname="AOFFSET" edc:nzwidth="0x10" edc:desc="NVM Address Offset In The Selected Array"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="ARRAY" edc:nzwidth="0x2" edc:desc="Array Select">
              <edc:SFRFieldSemantic edc:cname="FLASH" edc:desc="FLASH" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DATAFLASH" edc:desc="DATA FLASH" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="NVMROWS" edc:desc="NVM Configuration Rows" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="SULCK" edc:nzwidth="0x10" edc:access="nnnnnnnn-------n" edc:impl="0xFF01" edc:_addr="0x41004020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVMCTRL">
            <edc:SFRFieldDef edc:cname="BS" edc:nzwidth="0x1" edc:desc="Flash (BOOTPROT/BS Region)"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="SLKEY" edc:nzwidth="0x8" edc:desc="Write Key">
              <edc:SFRFieldSemantic edc:cname="KEY" edc:desc="Write Key" edc:when="(field &amp; 0xFF) == 0xA5"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="NSULCK" edc:nzwidth="0x10" edc:access="nnnnnnnn-----nn-" edc:impl="0xFF06" edc:_addr="0x41004022">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVMCTRL">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ANS" edc:nzwidth="0x1" edc:desc="Flash (ANS Region)"/>
            <edc:SFRFieldDef edc:cname="DNS" edc:nzwidth="0x1" edc:desc="Data Flash (DNS Region)"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="NSLKEY" edc:nzwidth="0x8" edc:desc="Write Key">
              <edc:SFRFieldSemantic edc:cname="KEY" edc:desc="Write Key" edc:when="(field &amp; 0xFF) == 0xA5"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="PARAM" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnn-nnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFF7FFFF" edc:_addr="0x41004024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVMCTRL">
            <edc:SFRFieldDef edc:cname="FLASHP" edc:nzwidth="0x10" edc:desc="FLASH Pages"/>
            <edc:SFRFieldDef edc:cname="PSZ" edc:nzwidth="0x3" edc:desc="Page Size">
              <edc:SFRFieldSemantic edc:cname="8" edc:desc="8 bytes" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="16" edc:desc="16 bytes" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="32" edc:desc="32 bytes" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="64" edc:desc="64 bytes" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="128" edc:desc="128 bytes" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="256" edc:desc="256 bytes" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="512" edc:desc="512 bytes" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="1024" edc:desc="1024 bytes" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DFLASHP" edc:nzwidth="0xC" edc:desc="DATAFLASH Pages"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x41004028"/>
      <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="SECCTRL" edc:nzwidth="0x20" edc:access="nnnnnnnn-------------nnn-----n-n" edc:por="00000000000000000000000000110000" edc:mclr="00000000000000000000000000110000" edc:impl="0xFF000705" edc:_addr="0x41004034">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVMCTRL">
            <edc:SFRFieldDef edc:cname="TAMPEEN" edc:nzwidth="0x1" edc:desc="Tamper Erase Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SILACC" edc:nzwidth="0x1" edc:desc="Silent Access"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="TEROW" edc:nzwidth="0x3" edc:desc="Tamper Rease Row"/>
            <edc:AdjustPoint edc:offset="0xD"/>
            <edc:SFRFieldDef edc:cname="KEY" edc:nzwidth="0x8" edc:desc="Write Key">
              <edc:SFRFieldSemantic edc:cname="KEY" edc:desc="Write Key" edc:when="(field &amp; 0xFF) == 0xA5"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="SCFGB" edc:nzwidth="0x20" edc:access="------------------------------nn" edc:por="00000000000000000000000000000011" edc:mclr="00000000000000000000000000000011" edc:impl="0x3" edc:_addr="0x41004038">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVMCTRL">
            <edc:SFRFieldDef edc:cname="BCREN" edc:nzwidth="0x1" edc:desc="Boot Configuration Row Read Enable"/>
            <edc:SFRFieldDef edc:cname="BCWEN" edc:nzwidth="0x1" edc:desc="Boot Configuration Row Write Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="SCFGAD" edc:nzwidth="0x20" edc:access="-------------------------------n" edc:por="00000000000000000000000000000001" edc:mclr="00000000000000000000000000000001" edc:impl="0x1" edc:_addr="0x4100403C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVMCTRL">
            <edc:SFRFieldDef edc:cname="URWEN" edc:nzwidth="0x1" edc:desc="User Row Write Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8C" edc:_addr="0x41004040"/>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="MEMTYPE" edc:nzwidth="0x20" edc:access="-------------------------------r" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1" edc:_addr="0x410040CC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="SMEMP" edc:nzwidth="0x1" edc:desc="System Memory Present"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="PID4" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF" edc:_addr="0x410040D0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="JEPCC" edc:nzwidth="0x4" edc:desc="JEP-106 Continuation Code"/>
            <edc:SFRFieldDef edc:cname="FKBC" edc:nzwidth="0x4" edc:desc="4KB count"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="PID5" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x410040D4"/>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="PID6" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x410040D8"/>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="PID7" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x410040DC"/>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="PID0" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000011010000" edc:mclr="00000000000000000000000011010000" edc:impl="0xFF" edc:_addr="0x410040E0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="PARTNBL" edc:nzwidth="0x8" edc:desc="Part Number Low"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="PID1" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000011111100" edc:mclr="00000000000000000000000011111100" edc:impl="0xFF" edc:_addr="0x410040E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="PARTNBH" edc:nzwidth="0x4" edc:desc="Part Number High"/>
            <edc:SFRFieldDef edc:cname="JEPIDCL" edc:nzwidth="0x4" edc:desc="Low part of the JEP-106 Identity Code"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="PID2" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000000001001" edc:mclr="00000000000000000000000000001001" edc:impl="0xFF" edc:_addr="0x410040E8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="JEPIDCH" edc:nzwidth="0x3" edc:desc="JEP-106 Identity Code High"/>
            <edc:SFRFieldDef edc:cname="JEPU" edc:nzwidth="0x1" edc:desc="JEP-106 Identity Code is used"/>
            <edc:SFRFieldDef edc:cname="REVISION" edc:nzwidth="0x4" edc:desc="Revision Number"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="PID3" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF" edc:_addr="0x410040EC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="CUSMOD" edc:nzwidth="0x4" edc:desc="ARM CUSMOD"/>
            <edc:SFRFieldDef edc:cname="REVAND" edc:nzwidth="0x4" edc:desc="Revision Number"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="CID0" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000000001101" edc:mclr="00000000000000000000000000001101" edc:impl="0xFF" edc:_addr="0x410040F0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="PREAMBLEB0" edc:nzwidth="0x8" edc:desc="Preamble Byte 0"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="CID1" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000000010000" edc:mclr="00000000000000000000000000010000" edc:impl="0xFF" edc:_addr="0x410040F4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="PREAMBLE" edc:nzwidth="0x4" edc:desc="Preamble"/>
            <edc:SFRFieldDef edc:cname="CCLASS" edc:nzwidth="0x4" edc:desc="Component Class"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="CID2" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000000000101" edc:mclr="00000000000000000000000000000101" edc:impl="0xFF" edc:_addr="0x410040F8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="PREAMBLEB2" edc:nzwidth="0x8" edc:desc="Preamble Byte 2"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="CID3" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000010110001" edc:mclr="00000000000000000000000010110001" edc:impl="0xFF" edc:_addr="0x410040FC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="PREAMBLEB3" edc:nzwidth="0x8" edc:desc="Preamble Byte 3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1F00" edc:_addr="0x41004100"/>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CTRL" edc:nzwidth="0x10" edc:access="----nnnn-----nnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xF07" edc:_addr="0x41006000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="DMAENABLE" edc:nzwidth="0x1" edc:desc="DMA Enable"/>
            <edc:SFRFieldDef edc:cname="CRCENABLE" edc:nzwidth="0x1" edc:desc="CRC Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="LVLEN0" edc:nzwidth="0x1" edc:desc="Priority Level 0 Enable"/>
            <edc:SFRFieldDef edc:cname="LVLEN1" edc:nzwidth="0x1" edc:desc="Priority Level 1 Enable"/>
            <edc:SFRFieldDef edc:cname="LVLEN2" edc:nzwidth="0x1" edc:desc="Priority Level 2 Enable"/>
            <edc:SFRFieldDef edc:cname="LVLEN3" edc:nzwidth="0x1" edc:desc="Priority Level 3 Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CRCCTRL" edc:nzwidth="0x10" edc:access="--nnnnnn----nnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x3F0F" edc:_addr="0x41006002">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="CRCBEATSIZE" edc:nzwidth="0x2" edc:desc="CRC Beat Size">
              <edc:SFRFieldSemantic edc:cname="BYTE" edc:desc="8-bit bus transfer" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HWORD" edc:desc="16-bit bus transfer" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="WORD" edc:desc="32-bit bus transfer" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CRCPOLY" edc:nzwidth="0x2" edc:desc="CRC Polynomial Type">
              <edc:SFRFieldSemantic edc:cname="CRC16" edc:desc="CRC-16 (CRC-CCITT)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CRC32" edc:desc="CRC32 (IEEE 802.3)" edc:when="(field &amp; 0x3) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CRCSRC" edc:nzwidth="0x6" edc:desc="CRC Input Source">
              <edc:SFRFieldSemantic edc:cname="NOACT" edc:desc="No action" edc:when="(field &amp; 0x3F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="IO" edc:desc="I/O interface" edc:when="(field &amp; 0x3F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CHN0" edc:desc="DMA Channel 0" edc:when="(field &amp; 0x3F) == 0x20"/>
              <edc:SFRFieldSemantic edc:cname="CHN1" edc:desc="DMA Channel 1" edc:when="(field &amp; 0x3F) == 0x21"/>
              <edc:SFRFieldSemantic edc:cname="CHN2" edc:desc="DMA Channel 2" edc:when="(field &amp; 0x3F) == 0x22"/>
              <edc:SFRFieldSemantic edc:cname="CHN3" edc:desc="DMA Channel 3" edc:when="(field &amp; 0x3F) == 0x23"/>
              <edc:SFRFieldSemantic edc:cname="CHN4" edc:desc="DMA Channel 4" edc:when="(field &amp; 0x3F) == 0x24"/>
              <edc:SFRFieldSemantic edc:cname="CHN5" edc:desc="DMA Channel 5" edc:when="(field &amp; 0x3F) == 0x25"/>
              <edc:SFRFieldSemantic edc:cname="CHN6" edc:desc="DMA Channel 6" edc:when="(field &amp; 0x3F) == 0x26"/>
              <edc:SFRFieldSemantic edc:cname="CHN7" edc:desc="DMA Channel 7" edc:when="(field &amp; 0x3F) == 0x27"/>
              <edc:SFRFieldSemantic edc:cname="CHN8" edc:desc="DMA Channel 8" edc:when="(field &amp; 0x3F) == 0x28"/>
              <edc:SFRFieldSemantic edc:cname="CHN9" edc:desc="DMA Channel 9" edc:when="(field &amp; 0x3F) == 0x29"/>
              <edc:SFRFieldSemantic edc:cname="CHN10" edc:desc="DMA Channel 10" edc:when="(field &amp; 0x3F) == 0x2A"/>
              <edc:SFRFieldSemantic edc:cname="CHN11" edc:desc="DMA Channel 11" edc:when="(field &amp; 0x3F) == 0x2B"/>
              <edc:SFRFieldSemantic edc:cname="CHN12" edc:desc="DMA Channel 12" edc:when="(field &amp; 0x3F) == 0x2C"/>
              <edc:SFRFieldSemantic edc:cname="CHN13" edc:desc="DMA Channel 13" edc:when="(field &amp; 0x3F) == 0x2D"/>
              <edc:SFRFieldSemantic edc:cname="CHN14" edc:desc="DMA Channel 14" edc:when="(field &amp; 0x3F) == 0x2E"/>
              <edc:SFRFieldSemantic edc:cname="CHN15" edc:desc="DMA Channel 15" edc:when="(field &amp; 0x3F) == 0x2F"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CRCDATAIN" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41006004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="CRCDATAIN" edc:nzwidth="0x20" edc:desc="CRC Data Input"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CRCCHKSUM" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41006008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="CRCCHKSUM" edc:nzwidth="0x20" edc:desc="CRC Checksum"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CRCSTATUS" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4100600C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="CRCBUSY" edc:nzwidth="0x1" edc:desc="CRC Module Busy"/>
            <edc:SFRFieldDef edc:cname="CRCZERO" edc:nzwidth="0x1" edc:desc="CRC Zero"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x4100600D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Run"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="QOSCTRL" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00101010" edc:mclr="00101010" edc:impl="0x3F" edc:_addr="0x4100600E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="WRBQOS" edc:nzwidth="0x2" edc:desc="Write-Back Quality of Service">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Background (no sensitive operation)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Sensitive Bandwidth" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="MEDIUM" edc:desc="Sensitive Latency" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="Critical Latency" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FQOS" edc:nzwidth="0x2" edc:desc="Fetch Quality of Service">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Background (no sensitive operation)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Sensitive Bandwidth" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="MEDIUM" edc:desc="Sensitive Latency" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="Critical Latency" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DQOS" edc:nzwidth="0x2" edc:desc="Data Transfer Quality of Service">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Background (no sensitive operation)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Sensitive Bandwidth" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="MEDIUM" edc:desc="Sensitive Latency" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="Critical Latency" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x4100600F"/>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="SWTRIGCTRL" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF" edc:_addr="0x41006010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="SWTRIG0" edc:nzwidth="0x1" edc:desc="Channel 0 Software Trigger"/>
            <edc:SFRFieldDef edc:cname="SWTRIG1" edc:nzwidth="0x1" edc:desc="Channel 1 Software Trigger"/>
            <edc:SFRFieldDef edc:cname="SWTRIG2" edc:nzwidth="0x1" edc:desc="Channel 2 Software Trigger"/>
            <edc:SFRFieldDef edc:cname="SWTRIG3" edc:nzwidth="0x1" edc:desc="Channel 3 Software Trigger"/>
            <edc:SFRFieldDef edc:cname="SWTRIG4" edc:nzwidth="0x1" edc:desc="Channel 4 Software Trigger"/>
            <edc:SFRFieldDef edc:cname="SWTRIG5" edc:nzwidth="0x1" edc:desc="Channel 5 Software Trigger"/>
            <edc:SFRFieldDef edc:cname="SWTRIG6" edc:nzwidth="0x1" edc:desc="Channel 6 Software Trigger"/>
            <edc:SFRFieldDef edc:cname="SWTRIG7" edc:nzwidth="0x1" edc:desc="Channel 7 Software Trigger"/>
            <edc:SFRFieldDef edc:cname="SWTRIG8" edc:nzwidth="0x1" edc:desc="Channel 8 Software Trigger"/>
            <edc:SFRFieldDef edc:cname="SWTRIG9" edc:nzwidth="0x1" edc:desc="Channel 9 Software Trigger"/>
            <edc:SFRFieldDef edc:cname="SWTRIG10" edc:nzwidth="0x1" edc:desc="Channel 10 Software Trigger"/>
            <edc:SFRFieldDef edc:cname="SWTRIG11" edc:nzwidth="0x1" edc:desc="Channel 11 Software Trigger"/>
            <edc:SFRFieldDef edc:cname="SWTRIG12" edc:nzwidth="0x1" edc:desc="Channel 12 Software Trigger"/>
            <edc:SFRFieldDef edc:cname="SWTRIG13" edc:nzwidth="0x1" edc:desc="Channel 13 Software Trigger"/>
            <edc:SFRFieldDef edc:cname="SWTRIG14" edc:nzwidth="0x1" edc:desc="Channel 14 Software Trigger"/>
            <edc:SFRFieldDef edc:cname="SWTRIG15" edc:nzwidth="0x1" edc:desc="Channel 15 Software Trigger"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="PRICTRL0" edc:nzwidth="0x20" edc:access="n---nnnnn---nnnnn---nnnnn---nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x8F8F8F8F" edc:_addr="0x41006014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="LVLPRI0" edc:nzwidth="0x4" edc:desc="Level 0 Channel Priority Number"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RRLVLEN0" edc:nzwidth="0x1" edc:desc="Level 0 Round-Robin Scheduling Enable">
              <edc:SFRFieldSemantic edc:cname="STATIC_LVL" edc:desc="Static arbitration scheme for channels with level 0 priority" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ROUND_ROBIN_LVL" edc:desc="Round-robin arbitration scheme for channels with level 0 priority" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LVLPRI1" edc:nzwidth="0x4" edc:desc="Level 1 Channel Priority Number"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RRLVLEN1" edc:nzwidth="0x1" edc:desc="Level 1 Round-Robin Scheduling Enable">
              <edc:SFRFieldSemantic edc:cname="STATIC_LVL" edc:desc="Static arbitration scheme for channels with level 1 priority" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ROUND_ROBIN_LVL" edc:desc="Round-robin arbitration scheme for channels with level 1 priority" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LVLPRI2" edc:nzwidth="0x4" edc:desc="Level 2 Channel Priority Number"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RRLVLEN2" edc:nzwidth="0x1" edc:desc="Level 2 Round-Robin Scheduling Enable">
              <edc:SFRFieldSemantic edc:cname="STATIC_LVL" edc:desc="Static arbitration scheme for channels with level 2 priority" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ROUND_ROBIN_LVL" edc:desc="Round-robin arbitration scheme for channels with level 2 priority" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LVLPRI3" edc:nzwidth="0x4" edc:desc="Level 3 Channel Priority Number"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RRLVLEN3" edc:nzwidth="0x1" edc:desc="Level 3 Round-Robin Scheduling Enable">
              <edc:SFRFieldSemantic edc:cname="STATIC_LVL" edc:desc="Static arbitration scheme for channels with level 3 priority" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ROUND_ROBIN_LVL" edc:desc="Round-robin arbitration scheme for channels with level 3 priority" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x41006018"/>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="INTPEND" edc:nzwidth="0x10" edc:access="nnn--nnn----nnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xE70F" edc:_addr="0x41006020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="ID" edc:nzwidth="0x4" edc:desc="Channel ID"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Transfer Error"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Transfer Complete"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Fetch Error"/>
            <edc:SFRFieldDef edc:cname="BUSY" edc:nzwidth="0x1" edc:desc="Busy"/>
            <edc:SFRFieldDef edc:cname="PEND" edc:nzwidth="0x1" edc:desc="Pending"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x41006022"/>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="INTSTATUS" edc:nzwidth="0x20" edc:access="----------------rrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF" edc:_addr="0x41006024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="CHINT0" edc:nzwidth="0x1" edc:desc="Channel 0 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT1" edc:nzwidth="0x1" edc:desc="Channel 1 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT2" edc:nzwidth="0x1" edc:desc="Channel 2 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT3" edc:nzwidth="0x1" edc:desc="Channel 3 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT4" edc:nzwidth="0x1" edc:desc="Channel 4 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT5" edc:nzwidth="0x1" edc:desc="Channel 5 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT6" edc:nzwidth="0x1" edc:desc="Channel 6 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT7" edc:nzwidth="0x1" edc:desc="Channel 7 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT8" edc:nzwidth="0x1" edc:desc="Channel 8 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT9" edc:nzwidth="0x1" edc:desc="Channel 9 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT10" edc:nzwidth="0x1" edc:desc="Channel 10 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT11" edc:nzwidth="0x1" edc:desc="Channel 11 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT12" edc:nzwidth="0x1" edc:desc="Channel 12 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT13" edc:nzwidth="0x1" edc:desc="Channel 13 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT14" edc:nzwidth="0x1" edc:desc="Channel 14 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT15" edc:nzwidth="0x1" edc:desc="Channel 15 Pending Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="BUSYCH" edc:nzwidth="0x20" edc:access="----------------rrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF" edc:_addr="0x41006028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="BUSYCH0" edc:nzwidth="0x1" edc:desc="Busy Channel 0"/>
            <edc:SFRFieldDef edc:cname="BUSYCH1" edc:nzwidth="0x1" edc:desc="Busy Channel 1"/>
            <edc:SFRFieldDef edc:cname="BUSYCH2" edc:nzwidth="0x1" edc:desc="Busy Channel 2"/>
            <edc:SFRFieldDef edc:cname="BUSYCH3" edc:nzwidth="0x1" edc:desc="Busy Channel 3"/>
            <edc:SFRFieldDef edc:cname="BUSYCH4" edc:nzwidth="0x1" edc:desc="Busy Channel 4"/>
            <edc:SFRFieldDef edc:cname="BUSYCH5" edc:nzwidth="0x1" edc:desc="Busy Channel 5"/>
            <edc:SFRFieldDef edc:cname="BUSYCH6" edc:nzwidth="0x1" edc:desc="Busy Channel 6"/>
            <edc:SFRFieldDef edc:cname="BUSYCH7" edc:nzwidth="0x1" edc:desc="Busy Channel 7"/>
            <edc:SFRFieldDef edc:cname="BUSYCH8" edc:nzwidth="0x1" edc:desc="Busy Channel 8"/>
            <edc:SFRFieldDef edc:cname="BUSYCH9" edc:nzwidth="0x1" edc:desc="Busy Channel 9"/>
            <edc:SFRFieldDef edc:cname="BUSYCH10" edc:nzwidth="0x1" edc:desc="Busy Channel 10"/>
            <edc:SFRFieldDef edc:cname="BUSYCH11" edc:nzwidth="0x1" edc:desc="Busy Channel 11"/>
            <edc:SFRFieldDef edc:cname="BUSYCH12" edc:nzwidth="0x1" edc:desc="Busy Channel 12"/>
            <edc:SFRFieldDef edc:cname="BUSYCH13" edc:nzwidth="0x1" edc:desc="Busy Channel 13"/>
            <edc:SFRFieldDef edc:cname="BUSYCH14" edc:nzwidth="0x1" edc:desc="Busy Channel 14"/>
            <edc:SFRFieldDef edc:cname="BUSYCH15" edc:nzwidth="0x1" edc:desc="Busy Channel 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="PENDCH" edc:nzwidth="0x20" edc:access="----------------rrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF" edc:_addr="0x4100602C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="PENDCH0" edc:nzwidth="0x1" edc:desc="Pending Channel 0"/>
            <edc:SFRFieldDef edc:cname="PENDCH1" edc:nzwidth="0x1" edc:desc="Pending Channel 1"/>
            <edc:SFRFieldDef edc:cname="PENDCH2" edc:nzwidth="0x1" edc:desc="Pending Channel 2"/>
            <edc:SFRFieldDef edc:cname="PENDCH3" edc:nzwidth="0x1" edc:desc="Pending Channel 3"/>
            <edc:SFRFieldDef edc:cname="PENDCH4" edc:nzwidth="0x1" edc:desc="Pending Channel 4"/>
            <edc:SFRFieldDef edc:cname="PENDCH5" edc:nzwidth="0x1" edc:desc="Pending Channel 5"/>
            <edc:SFRFieldDef edc:cname="PENDCH6" edc:nzwidth="0x1" edc:desc="Pending Channel 6"/>
            <edc:SFRFieldDef edc:cname="PENDCH7" edc:nzwidth="0x1" edc:desc="Pending Channel 7"/>
            <edc:SFRFieldDef edc:cname="PENDCH8" edc:nzwidth="0x1" edc:desc="Pending Channel 8"/>
            <edc:SFRFieldDef edc:cname="PENDCH9" edc:nzwidth="0x1" edc:desc="Pending Channel 9"/>
            <edc:SFRFieldDef edc:cname="PENDCH10" edc:nzwidth="0x1" edc:desc="Pending Channel 10"/>
            <edc:SFRFieldDef edc:cname="PENDCH11" edc:nzwidth="0x1" edc:desc="Pending Channel 11"/>
            <edc:SFRFieldDef edc:cname="PENDCH12" edc:nzwidth="0x1" edc:desc="Pending Channel 12"/>
            <edc:SFRFieldDef edc:cname="PENDCH13" edc:nzwidth="0x1" edc:desc="Pending Channel 13"/>
            <edc:SFRFieldDef edc:cname="PENDCH14" edc:nzwidth="0x1" edc:desc="Pending Channel 14"/>
            <edc:SFRFieldDef edc:cname="PENDCH15" edc:nzwidth="0x1" edc:desc="Pending Channel 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="ACTIVE" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrr--rrrrr----rrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF9F0F" edc:_addr="0x41006030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="LVLEX0" edc:nzwidth="0x1" edc:desc="Level 0 Channel Trigger Request Executing"/>
            <edc:SFRFieldDef edc:cname="LVLEX1" edc:nzwidth="0x1" edc:desc="Level 1 Channel Trigger Request Executing"/>
            <edc:SFRFieldDef edc:cname="LVLEX2" edc:nzwidth="0x1" edc:desc="Level 2 Channel Trigger Request Executing"/>
            <edc:SFRFieldDef edc:cname="LVLEX3" edc:nzwidth="0x1" edc:desc="Level 3 Channel Trigger Request Executing"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ID" edc:nzwidth="0x5" edc:desc="Active Channel ID"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ABUSY" edc:nzwidth="0x1" edc:desc="Active Channel Busy"/>
            <edc:SFRFieldDef edc:cname="BTCNT" edc:nzwidth="0x10" edc:desc="Active Channel Block Transfer Count"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="BASEADDR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41006034">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="BASEADDR" edc:nzwidth="0x20" edc:desc="Descriptor Memory Base Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="WRBADDR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41006038">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="WRBADDR" edc:nzwidth="0x20" edc:desc="Write-Back Memory Base Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x4100603C"/>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHID" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x4100603F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="ID" edc:nzwidth="0x4" edc:desc="Channel ID"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHCTRLA" edc:nzwidth="0x8" edc:access="-n----nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x43" edc:_addr="0x41006040">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Channel Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Channel run in standby"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x41006041"/>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHCTRLB" edc:nzwidth="0x20" edc:access="------nnnn--------nnnnnn-nnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3C03F7F" edc:_addr="0x41006044">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="EVACT" edc:nzwidth="0x3" edc:desc="Event Input Action">
              <edc:SFRFieldSemantic edc:cname="NOACT" edc:desc="No action" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TRIG" edc:desc="Transfer and periodic transfer trigger" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CTRIG" edc:desc="Conditional transfer trigger" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="CBLOCK" edc:desc="Conditional block transfer" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="SUSPEND" edc:desc="Channel suspend operation" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="RESUME" edc:desc="Channel resume operation" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="SSKIP" edc:desc="Skip next block suspend action" edc:when="(field &amp; 0x7) == 0x6"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EVIE" edc:nzwidth="0x1" edc:desc="Channel Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="EVOE" edc:nzwidth="0x1" edc:desc="Channel Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="LVL" edc:nzwidth="0x2" edc:desc="Channel Arbitration Level">
              <edc:SFRFieldSemantic edc:cname="LVL0" edc:desc="Channel Priority Level 0" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LVL1" edc:desc="Channel Priority Level 1" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LVL2" edc:desc="Channel Priority Level 2" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="LVL3" edc:desc="Channel Priority Level 3" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TRIGSRC" edc:nzwidth="0x6" edc:desc="Trigger Source">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Only software/event triggers" edc:when="(field &amp; 0x3F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RTC_TIMESTAMP" edc:desc="RTC Timestamp Trigger" edc:when="(field &amp; 0x3F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DSU_DCC0" edc:desc="ID for DCC0 register" edc:when="(field &amp; 0x3F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DSU_DCC1" edc:desc="ID for DCC1 register" edc:when="(field &amp; 0x3F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM0_RX" edc:desc="SERCOM0 RX Trigger" edc:when="(field &amp; 0x3F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM0_TX" edc:desc="SERCOM0 TX Trigger" edc:when="(field &amp; 0x3F) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM1_RX" edc:desc="SERCOM1 RX Trigger" edc:when="(field &amp; 0x3F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM1_TX" edc:desc="SERCOM1 TX Trigger" edc:when="(field &amp; 0x3F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM2_RX" edc:desc="SERCOM2 RX Trigger" edc:when="(field &amp; 0x3F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM2_TX" edc:desc="SERCOM2 TX Trigger" edc:when="(field &amp; 0x3F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM3_RX" edc:desc="SERCOM3 RX Trigger" edc:when="(field &amp; 0x3F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM3_TX" edc:desc="SERCOM3 TX Trigger" edc:when="(field &amp; 0x3F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM4_RX" edc:desc="SERCOM4 RX Trigger" edc:when="(field &amp; 0x3F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM4_TX" edc:desc="SERCOM4 TX Trigger" edc:when="(field &amp; 0x3F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM5_RX" edc:desc="SERCOM5 RX Trigger" edc:when="(field &amp; 0x3F) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM5_TX" edc:desc="SERCOM5 TX Trigger" edc:when="(field &amp; 0x3F) == 0x0F"/>
              <edc:SFRFieldSemantic edc:cname="TC0_OVF" edc:desc="TC0 Overflow Trigger" edc:when="(field &amp; 0x3F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="TC0_MC0" edc:desc="TC0 Match/Compare 0 Trigger" edc:when="(field &amp; 0x3F) == 0x11"/>
              <edc:SFRFieldSemantic edc:cname="TC0_MC1" edc:desc="TC0 Match/Compare 1 Trigger" edc:when="(field &amp; 0x3F) == 0x12"/>
              <edc:SFRFieldSemantic edc:cname="TC1_OVF" edc:desc="TC1 Overflow Trigger" edc:when="(field &amp; 0x3F) == 0x13"/>
              <edc:SFRFieldSemantic edc:cname="TC1_MC0" edc:desc="TC1 Match/Compare 0 Trigger" edc:when="(field &amp; 0x3F) == 0x14"/>
              <edc:SFRFieldSemantic edc:cname="TC1_MC1" edc:desc="TC1 Match/Compare 1 Trigger" edc:when="(field &amp; 0x3F) == 0x15"/>
              <edc:SFRFieldSemantic edc:cname="TC2_OVF" edc:desc="TC2 Overflow Trigger" edc:when="(field &amp; 0x3F) == 0x16"/>
              <edc:SFRFieldSemantic edc:cname="TC2_MC0" edc:desc="TC2 Match/Compare 0 Trigger" edc:when="(field &amp; 0x3F) == 0x17"/>
              <edc:SFRFieldSemantic edc:cname="TC2_MC1" edc:desc="TC2 Match/Compare 1 Trigger" edc:when="(field &amp; 0x3F) == 0x18"/>
              <edc:SFRFieldSemantic edc:cname="TCC0_OVF" edc:desc="TCC0 Overflow Trigger" edc:when="(field &amp; 0x3F) == 0x19"/>
              <edc:SFRFieldSemantic edc:cname="TCC0_MC0" edc:desc="TCC0 Match/Compare 0 Trigger" edc:when="(field &amp; 0x3F) == 0x1A"/>
              <edc:SFRFieldSemantic edc:cname="TCC0_MC1" edc:desc="TCC0 Match/Compare 1 Trigger" edc:when="(field &amp; 0x3F) == 0x1B"/>
              <edc:SFRFieldSemantic edc:cname="TCC0_MC2" edc:desc="TCC0 Match/Compare 2 Trigger" edc:when="(field &amp; 0x3F) == 0x1C"/>
              <edc:SFRFieldSemantic edc:cname="TCC0_MC3" edc:desc="TCC0 Match/Compare 3 Trigger" edc:when="(field &amp; 0x3F) == 0x1D"/>
              <edc:SFRFieldSemantic edc:cname="TCC1_OVF" edc:desc="TCC1 Overflow Trigger" edc:when="(field &amp; 0x3F) == 0x1E"/>
              <edc:SFRFieldSemantic edc:cname="TCC1_MC0" edc:desc="TCC1 Match/Compare 0 Trigger" edc:when="(field &amp; 0x3F) == 0x1F"/>
              <edc:SFRFieldSemantic edc:cname="TCC1_MC1" edc:desc="TCC1 Match/Compare 1 Trigger" edc:when="(field &amp; 0x3F) == 0x20"/>
              <edc:SFRFieldSemantic edc:cname="TCC2_OVF" edc:desc="TCC2 Overflow Trigger" edc:when="(field &amp; 0x3F) == 0x21"/>
              <edc:SFRFieldSemantic edc:cname="TCC2_MC0" edc:desc="TCC2 Match/Compare 0 Trigger" edc:when="(field &amp; 0x3F) == 0x22"/>
              <edc:SFRFieldSemantic edc:cname="TCC2_MC1" edc:desc="TCC2 Match/Compare 1 Trigger" edc:when="(field &amp; 0x3F) == 0x23"/>
              <edc:SFRFieldSemantic edc:cname="TCC3_OVF" edc:desc="TCC3 Overflow Trigger" edc:when="(field &amp; 0x3F) == 0x24"/>
              <edc:SFRFieldSemantic edc:cname="TCC3_MC0" edc:desc="TCC3 Match/Compare 0 Trigger" edc:when="(field &amp; 0x3F) == 0x25"/>
              <edc:SFRFieldSemantic edc:cname="TCC3_MC1" edc:desc="TCC3 Match/Compare 1 Trigger" edc:when="(field &amp; 0x3F) == 0x26"/>
              <edc:SFRFieldSemantic edc:cname="TCC3_MC2" edc:desc="TCC3 Match/Compare 2 Trigger" edc:when="(field &amp; 0x3F) == 0x27"/>
              <edc:SFRFieldSemantic edc:cname="TCC3_MC3" edc:desc="TCC3 Match/Compare 3 Trigger" edc:when="(field &amp; 0x3F) == 0x28"/>
              <edc:SFRFieldSemantic edc:cname="ADC_RESRDY" edc:desc="ADC Result Ready Trigger" edc:when="(field &amp; 0x3F) == 0x29"/>
              <edc:SFRFieldSemantic edc:cname="DAC_EMPTY0" edc:desc="DAC Empty 0 Trigger" edc:when="(field &amp; 0x3F) == 0x2A"/>
              <edc:SFRFieldSemantic edc:cname="DAC_EMPTY1" edc:desc="DAC Empty 1 Trigger" edc:when="(field &amp; 0x3F) == 0x2B"/>
              <edc:SFRFieldSemantic edc:cname="PTC_EOC" edc:desc="PTC End of Conversion Trigger" edc:when="(field &amp; 0x3F) == 0x2C"/>
              <edc:SFRFieldSemantic edc:cname="PTC_SEQ" edc:desc="PTC Sequence Trigger" edc:when="(field &amp; 0x3F) == 0x2D"/>
              <edc:SFRFieldSemantic edc:cname="PTC_WCOMP" edc:desc="PTC Window Compare Trigger" edc:when="(field &amp; 0x3F) == 0x2E"/>
              <edc:SFRFieldSemantic edc:cname="I2S_RX0" edc:desc="I2S RX0 Trigger" edc:when="(field &amp; 0x3F) == 0x2F"/>
              <edc:SFRFieldSemantic edc:cname="I2S_RX1" edc:desc="I2S RX1 Trigger" edc:when="(field &amp; 0x3F) == 0x30"/>
              <edc:SFRFieldSemantic edc:cname="I2S_TX0" edc:desc="I2S TX0 Trigger" edc:when="(field &amp; 0x3F) == 0x31"/>
              <edc:SFRFieldSemantic edc:cname="I2S_TX1" edc:desc="I2S TX1 Trigger" edc:when="(field &amp; 0x3F) == 0x32"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="TRIGACT" edc:nzwidth="0x2" edc:desc="Trigger Action">
              <edc:SFRFieldSemantic edc:cname="BLOCK" edc:desc="One trigger required for each block transfer" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="BEAT" edc:desc="One trigger required for each beat transfer" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TRANSACTION" edc:desc="One trigger required for each transaction" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Software Command">
              <edc:SFRFieldSemantic edc:cname="NOACT" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SUSPEND" edc:desc="Channel suspend operation" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RESUME" edc:desc="Channel resume operation" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x41006048"/>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHINTENCLR" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x4100604C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHINTENSET" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x4100604D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHINTFLAG" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x4100604E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHSTATUS" edc:nzwidth="0x8" edc:access="-----rrr" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x4100604F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="PEND" edc:nzwidth="0x1" edc:desc="Channel Pending"/>
            <edc:SFRFieldDef edc:cname="BUSY" edc:nzwidth="0x1" edc:desc="Channel Busy"/>
            <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Channel Fetch Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3FB0" edc:_addr="0x41006050"/>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="n----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x87" edc:_addr="0x4100A000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby Mode"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x1" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="DEVICE" edc:desc="Device Mode" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HOST" edc:desc="Host Mode" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x4100A001"/>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="SYNCBUSY" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4100A002">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="QOSCTRL" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00001111" edc:mclr="00001111" edc:impl="0xF" edc:_addr="0x4100A003">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="CQOS" edc:nzwidth="0x2" edc:desc="Configuration Quality of Service"/>
            <edc:SFRFieldDef edc:cname="DQOS" edc:nzwidth="0x2" edc:desc="Data Quality of Service"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x9" edc:_addr="0x4100A004"/>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="FSMSTATUS" edc:nzwidth="0x8" edc:access="-rrrrrrr" edc:por="00000001" edc:mclr="00000001" edc:impl="0x7F" edc:_addr="0x4100A00D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="FSMSTATE" edc:nzwidth="0x7" edc:desc="Fine State Machine Status">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="OFF (L3). It corresponds to the powered-off, disconnected, and disabled state" edc:when="(field &amp; 0x7F) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="ON" edc:desc="ON (L0). It corresponds to the Idle and Active states" edc:when="(field &amp; 0x7F) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SUSPEND" edc:desc="SUSPEND (L2)" edc:when="(field &amp; 0x7F) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="SLEEP" edc:desc="SLEEP (L1)" edc:when="(field &amp; 0x7F) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="DNRESUME" edc:desc="DNRESUME. Down Stream Resume." edc:when="(field &amp; 0x7F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="UPRESUME" edc:desc="UPRESUME. Up Stream Resume." edc:when="(field &amp; 0x7F) == 0x20"/>
              <edc:SFRFieldSemantic edc:cname="RESET" edc:desc="RESET. USB lines Reset." edc:when="(field &amp; 0x7F) == 0x40"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x16" edc:_addr="0x4100A00E"/>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="DESCADD" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4100A024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="DESCADD" edc:nzwidth="0x20" edc:desc="Descriptor Address Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PADCAL" edc:nzwidth="0x10" edc:access="-nnn-nnnnn-nnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x77DF" edc:_addr="0x4100A028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="TRANSP" edc:nzwidth="0x5" edc:desc="USB Pad Transp calibration"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TRANSN" edc:nzwidth="0x5" edc:desc="USB Pad Transn calibration"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TRIM" edc:nzwidth="0x3" edc:desc="USB Pad Trim calibration"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:SFRDataSector>
    <edc:SFRDataSector edc:regionid="APBC" edc:beginaddr="0x42000000" edc:endaddr="0x42005800" edc:rw="rw">
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="-------w" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x42000000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x42000001"/>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="SWEVT" edc:nzwidth="0x20" edc:access="--------------------wwwwwwwwwwww" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFF" edc:_addr="0x42000004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL0" edc:nzwidth="0x1" edc:desc="Channel 0 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL1" edc:nzwidth="0x1" edc:desc="Channel 1 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL2" edc:nzwidth="0x1" edc:desc="Channel 2 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL3" edc:nzwidth="0x1" edc:desc="Channel 3 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL4" edc:nzwidth="0x1" edc:desc="Channel 4 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL5" edc:nzwidth="0x1" edc:desc="Channel 5 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL6" edc:nzwidth="0x1" edc:desc="Channel 6 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL7" edc:nzwidth="0x1" edc:desc="Channel 7 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL8" edc:nzwidth="0x1" edc:desc="Channel 8 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL9" edc:nzwidth="0x1" edc:desc="Channel 9 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL10" edc:nzwidth="0x1" edc:desc="Channel 10 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL11" edc:nzwidth="0x1" edc:desc="Channel 11 Software Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="PRICTRL" edc:nzwidth="0x8" edc:access="n----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x87" edc:_addr="0x42000008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="PRI" edc:nzwidth="0x3" edc:desc="Channel Priority Number"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="RREN" edc:nzwidth="0x1" edc:desc="Round-Robin Scheduling Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x7" edc:_addr="0x42000009"/>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="INTPEND" edc:nzwidth="0x10" edc:access="nn----nn-----nnn" edc:por="0100000000000000" edc:mclr="0100000000000000" edc:impl="0xC307" edc:_addr="0x42000010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="ID" edc:nzwidth="0x3" edc:desc="Channel ID"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="READY" edc:nzwidth="0x1" edc:desc="Ready"/>
            <edc:SFRFieldDef edc:cname="BUSY" edc:nzwidth="0x1" edc:desc="Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x42000012"/>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="INTSTATUS" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF" edc:_addr="0x42000014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHINT0" edc:nzwidth="0x1" edc:desc="Channel 0 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT1" edc:nzwidth="0x1" edc:desc="Channel 1 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT2" edc:nzwidth="0x1" edc:desc="Channel 2 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT3" edc:nzwidth="0x1" edc:desc="Channel 3 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT4" edc:nzwidth="0x1" edc:desc="Channel 4 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT5" edc:nzwidth="0x1" edc:desc="Channel 5 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT6" edc:nzwidth="0x1" edc:desc="Channel 6 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT7" edc:nzwidth="0x1" edc:desc="Channel 7 Pending Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="BUSYCH" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF" edc:_addr="0x42000018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="BUSYCH0" edc:nzwidth="0x1" edc:desc="Busy Channel 0"/>
            <edc:SFRFieldDef edc:cname="BUSYCH1" edc:nzwidth="0x1" edc:desc="Busy Channel 1"/>
            <edc:SFRFieldDef edc:cname="BUSYCH2" edc:nzwidth="0x1" edc:desc="Busy Channel 2"/>
            <edc:SFRFieldDef edc:cname="BUSYCH3" edc:nzwidth="0x1" edc:desc="Busy Channel 3"/>
            <edc:SFRFieldDef edc:cname="BUSYCH4" edc:nzwidth="0x1" edc:desc="Busy Channel 4"/>
            <edc:SFRFieldDef edc:cname="BUSYCH5" edc:nzwidth="0x1" edc:desc="Busy Channel 5"/>
            <edc:SFRFieldDef edc:cname="BUSYCH6" edc:nzwidth="0x1" edc:desc="Busy Channel 6"/>
            <edc:SFRFieldDef edc:cname="BUSYCH7" edc:nzwidth="0x1" edc:desc="Busy Channel 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="READYUSR" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="11111111111111111111111111111111" edc:mclr="11111111111111111111111111111111" edc:impl="0xFF" edc:_addr="0x4200001C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="READYUSR0" edc:nzwidth="0x1" edc:desc="Ready User for Channel 0"/>
            <edc:SFRFieldDef edc:cname="READYUSR1" edc:nzwidth="0x1" edc:desc="Ready User for Channel 1"/>
            <edc:SFRFieldDef edc:cname="READYUSR2" edc:nzwidth="0x1" edc:desc="Ready User for Channel 2"/>
            <edc:SFRFieldDef edc:cname="READYUSR3" edc:nzwidth="0x1" edc:desc="Ready User for Channel 3"/>
            <edc:SFRFieldDef edc:cname="READYUSR4" edc:nzwidth="0x1" edc:desc="Ready User for Channel 4"/>
            <edc:SFRFieldDef edc:cname="READYUSR5" edc:nzwidth="0x1" edc:desc="Ready User for Channel 5"/>
            <edc:SFRFieldDef edc:cname="READYUSR6" edc:nzwidth="0x1" edc:desc="Ready User for Channel 6"/>
            <edc:SFRFieldDef edc:cname="READYUSR7" edc:nzwidth="0x1" edc:desc="Ready User for Channel 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL0CHANNEL" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x42000020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL0CHINTENCLR" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x42000024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL0CHINTENSET" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x42000025">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL0CHINTFLAG" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x42000026">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL0CHSTATUS" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3" edc:_addr="0x42000027">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="RDYUSR" edc:nzwidth="0x1" edc:desc="Ready User"/>
            <edc:SFRFieldDef edc:cname="BUSYCH" edc:nzwidth="0x1" edc:desc="Busy Channel"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL1CHANNEL" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x42000028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL1CHINTENCLR" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4200002C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL1CHINTENSET" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4200002D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL1CHINTFLAG" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4200002E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL1CHSTATUS" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3" edc:_addr="0x4200002F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="RDYUSR" edc:nzwidth="0x1" edc:desc="Ready User"/>
            <edc:SFRFieldDef edc:cname="BUSYCH" edc:nzwidth="0x1" edc:desc="Busy Channel"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL2CHANNEL" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x42000030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL2CHINTENCLR" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x42000034">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL2CHINTENSET" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x42000035">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL2CHINTFLAG" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x42000036">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL2CHSTATUS" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3" edc:_addr="0x42000037">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="RDYUSR" edc:nzwidth="0x1" edc:desc="Ready User"/>
            <edc:SFRFieldDef edc:cname="BUSYCH" edc:nzwidth="0x1" edc:desc="Busy Channel"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL3CHANNEL" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x42000038">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL3CHINTENCLR" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4200003C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL3CHINTENSET" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4200003D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL3CHINTFLAG" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4200003E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL3CHSTATUS" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3" edc:_addr="0x4200003F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="RDYUSR" edc:nzwidth="0x1" edc:desc="Ready User"/>
            <edc:SFRFieldDef edc:cname="BUSYCH" edc:nzwidth="0x1" edc:desc="Busy Channel"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL4CHANNEL" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x42000040">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL4CHINTENCLR" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x42000044">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL4CHINTENSET" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x42000045">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL4CHINTFLAG" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x42000046">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL4CHSTATUS" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3" edc:_addr="0x42000047">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="RDYUSR" edc:nzwidth="0x1" edc:desc="Ready User"/>
            <edc:SFRFieldDef edc:cname="BUSYCH" edc:nzwidth="0x1" edc:desc="Busy Channel"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL5CHANNEL" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x42000048">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL5CHINTENCLR" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4200004C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL5CHINTENSET" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4200004D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL5CHINTFLAG" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4200004E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL5CHSTATUS" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3" edc:_addr="0x4200004F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="RDYUSR" edc:nzwidth="0x1" edc:desc="Ready User"/>
            <edc:SFRFieldDef edc:cname="BUSYCH" edc:nzwidth="0x1" edc:desc="Busy Channel"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL6CHANNEL" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x42000050">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL6CHINTENCLR" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x42000054">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL6CHINTENSET" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x42000055">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL6CHINTFLAG" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x42000056">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL6CHSTATUS" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3" edc:_addr="0x42000057">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="RDYUSR" edc:nzwidth="0x1" edc:desc="Ready User"/>
            <edc:SFRFieldDef edc:cname="BUSYCH" edc:nzwidth="0x1" edc:desc="Busy Channel"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL7CHANNEL" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x42000058">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL7CHINTENCLR" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4200005C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL7CHINTENSET" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4200005D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL7CHINTFLAG" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4200005E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL7CHSTATUS" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3" edc:_addr="0x4200005F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="RDYUSR" edc:nzwidth="0x1" edc:desc="Ready User"/>
            <edc:SFRFieldDef edc:cname="BUSYCH" edc:nzwidth="0x1" edc:desc="Busy Channel"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL8CHANNEL" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x42000060">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL8CHINTENCLR" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x42000064">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL8CHINTENSET" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x42000065">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL8CHINTFLAG" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x42000066">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL8CHSTATUS" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3" edc:_addr="0x42000067">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="RDYUSR" edc:nzwidth="0x1" edc:desc="Ready User"/>
            <edc:SFRFieldDef edc:cname="BUSYCH" edc:nzwidth="0x1" edc:desc="Busy Channel"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL9CHANNEL" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x42000068">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL9CHINTENCLR" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4200006C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL9CHINTENSET" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4200006D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL9CHINTFLAG" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4200006E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL9CHSTATUS" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3" edc:_addr="0x4200006F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="RDYUSR" edc:nzwidth="0x1" edc:desc="Ready User"/>
            <edc:SFRFieldDef edc:cname="BUSYCH" edc:nzwidth="0x1" edc:desc="Busy Channel"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL10CHANNEL" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x42000070">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL10CHINTENCLR" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x42000074">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL10CHINTENSET" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x42000075">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL10CHINTFLAG" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x42000076">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL10CHSTATUS" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3" edc:_addr="0x42000077">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="RDYUSR" edc:nzwidth="0x1" edc:desc="Ready User"/>
            <edc:SFRFieldDef edc:cname="BUSYCH" edc:nzwidth="0x1" edc:desc="Busy Channel"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL11CHANNEL" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x42000078">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL11CHINTENCLR" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4200007C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL11CHINTENSET" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4200007D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL11CHINTFLAG" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4200007E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR" edc:nzwidth="0x1" edc:desc="Channel Overrun"/>
            <edc:SFRFieldDef edc:cname="EVD" edc:nzwidth="0x1" edc:desc="Channel Event Detected"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL11CHSTATUS" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3" edc:_addr="0x4200007F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="RDYUSR" edc:nzwidth="0x1" edc:desc="Ready User"/>
            <edc:SFRFieldDef edc:cname="BUSYCH" edc:nzwidth="0x1" edc:desc="Busy Channel"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xA0" edc:_addr="0x42000080"/>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER0" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x42000120">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x4" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER1" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x42000121">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x4" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER2" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x42000122">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x4" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER3" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x42000123">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x4" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER4" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x42000124">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x4" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER5" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x42000125">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x4" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER6" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x42000126">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x4" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER7" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x42000127">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x4" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER8" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x42000128">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x4" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER9" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x42000129">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x4" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER10" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x4200012A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x4" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER11" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x4200012B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x4" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER12" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x4200012C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x4" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER13" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x4200012D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x4" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER14" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x4200012E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x4" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER15" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x4200012F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x4" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER16" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x42000130">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x4" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER17" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x42000131">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x4" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER18" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x42000132">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x4" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER19" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x42000133">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x4" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER20" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x42000134">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x4" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER21" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x42000135">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x4" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER22" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x42000136">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x4" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER23" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x42000137">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x4" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER24" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x42000138">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x4" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER25" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x42000139">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x4" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER26" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x4200013A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x4" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER27" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x4200013B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x4" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER28" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x4200013C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x4" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER29" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x4200013D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x4" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER30" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x4200013E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x4" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER31" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x4200013F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x4" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER32" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x42000140">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x4" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER33" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x42000141">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x4" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER34" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x42000142">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x4" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER35" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x42000143">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x4" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER36" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x42000144">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x4" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER37" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x42000145">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x4" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER38" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x42000146">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x4" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER39" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x42000147">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x4" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER40" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x42000148">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x4" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER41" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x42000149">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x4" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER42" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x4200014A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x4" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER43" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x4200014B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x4" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER44" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x4200014C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x4" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER45" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x4200014D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x4" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER46" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x4200014E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x4" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER47" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x4200014F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x4" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER48" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x42000150">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x4" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER49" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x42000151">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x4" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER50" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x42000152">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x4" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER51" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x42000153">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x4" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1AAC" edc:_addr="0x42000154"/>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="---nn-nn--nn--nn----nnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1B330FFF" edc:_addr="0x42001C00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x2" edc:desc="Timer Counter Mode">
              <edc:SFRFieldSemantic edc:cname="COUNT16" edc:desc="Counter in 16-bit mode" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="COUNT8" edc:desc="Counter in 8-bit mode" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="COUNT32" edc:desc="Counter in 32-bit mode" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PRESCSYNC" edc:nzwidth="0x2" edc:desc="Prescaler and Counter Synchronization">
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="Reload or reset the counter on next generic clock" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PRESC" edc:desc="Reload or reset the counter on next prescaler clock" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="RESYNC" edc:desc="Reload or reset the counter on next generic clock and reset the prescaler counter" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Clock On Demand"/>
            <edc:SFRFieldDef edc:cname="PRESCALER" edc:nzwidth="0x3" edc:desc="Prescaler">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="Prescaler: GCLK_TC" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Prescaler: GCLK_TC/2" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="Prescaler: GCLK_TC/4" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="Prescaler: GCLK_TC/8" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="Prescaler: GCLK_TC/16" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="Prescaler: GCLK_TC/64" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="Prescaler: GCLK_TC/256" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="Prescaler: GCLK_TC/1024" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ALOCK" edc:nzwidth="0x1" edc:desc="Auto Lock"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CAPTEN0" edc:nzwidth="0x1" edc:desc="Capture Channel 0 Enable"/>
            <edc:SFRFieldDef edc:cname="CAPTEN1" edc:nzwidth="0x1" edc:desc="Capture Channel 1 Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="COPEN0" edc:nzwidth="0x1" edc:desc="Capture On Pin 0 Enable"/>
            <edc:SFRFieldDef edc:cname="COPEN1" edc:nzwidth="0x1" edc:desc="Capture On Pin 1 Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CAPTMODE0" edc:nzwidth="0x2" edc:desc="Capture Mode Channel 0">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Default capture" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMIN" edc:desc="Minimum capture" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMAX" edc:desc="Maximum capture" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CAPTMODE1" edc:nzwidth="0x2" edc:desc="Capture mode Channel 1">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Default capture" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMIN" edc:desc="Minimum capture" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMAX" edc:desc="Maximum capture" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="CTRLBCLR" edc:nzwidth="0x8" edc:access="nnn--nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xE7" edc:_addr="0x42001C04">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Counter Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:nzwidth="0x1" edc:desc="One-Shot on Counter"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Force a start, restart or retrigger" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Force a stop" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update of double-buffered register" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force a read synchronization of COUNT" edc:when="(field &amp; 0x7) == 4"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="CTRLBSET" edc:nzwidth="0x8" edc:access="nnn--nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xE7" edc:_addr="0x42001C05">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Counter Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:nzwidth="0x1" edc:desc="One-Shot on Counter"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Force a start, restart or retrigger" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Force a stop" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update of double-buffered register" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force a read synchronization of COUNT" edc:when="(field &amp; 0x7) == 4"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="EVCTRL" edc:nzwidth="0x10" edc:access="--nn---n--nn-nnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x3137" edc:_addr="0x42001C06">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="EVACT" edc:nzwidth="0x3" edc:desc="Event Action">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Event action disabled" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Start, restart or retrigger TC on event" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="COUNT" edc:desc="Count on event" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="Start TC on event" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="STAMP" edc:desc="Time stamp capture" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="PPW" edc:desc="Period catured in CC0, pulse width in CC1" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="PWP" edc:desc="Period catured in CC1, pulse width in CC0" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="PW" edc:desc="Pulse width capture" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TCINV" edc:nzwidth="0x1" edc:desc="TC Event Input Polarity"/>
            <edc:SFRFieldDef edc:cname="TCEI" edc:nzwidth="0x1" edc:desc="TC Event Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="OVFEO" edc:nzwidth="0x1" edc:desc="Event Output Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="MCEO0" edc:nzwidth="0x1" edc:desc="MC Event Output Enable 0"/>
            <edc:SFRFieldDef edc:cname="MCEO1" edc:nzwidth="0x1" edc:desc="MC Event Output Enable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="--nn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x33" edc:_addr="0x42001C08">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="OVF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="ERR Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="MC Interrupt Disable 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="MC Interrupt Disable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="--nn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x33" edc:_addr="0x42001C09">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="OVF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="ERR Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="MC Interrupt Enable 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="MC Interrupt Enable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="--nn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x33" edc:_addr="0x42001C0A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="OVF Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="ERR Interrupt Flag"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="MC Interrupt Flag 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="MC Interrupt Flag 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="--nnn-nn" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3B" edc:_addr="0x42001C0B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="STOP" edc:nzwidth="0x1" edc:desc="Stop Status Flag"/>
            <edc:SFRFieldDef edc:cname="SLAVE" edc:nzwidth="0x1" edc:desc="Slave Status Flag"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PERBUFV" edc:nzwidth="0x1" edc:desc="Synchronization Busy Status"/>
            <edc:SFRFieldDef edc:cname="CCBUFV0" edc:nzwidth="0x1" edc:desc="Compare channel buffer 0 valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV1" edc:nzwidth="0x1" edc:desc="Compare channel buffer 1 valid"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="WAVE" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x42001C0C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="WAVEGEN" edc:nzwidth="0x2" edc:desc="Waveform Generation Mode">
              <edc:SFRFieldSemantic edc:cname="NFRQ" edc:desc="Normal frequency" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MFRQ" edc:desc="Match frequency" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="NPWM" edc:desc="Normal PWM" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="MPWM" edc:desc="Match PWM" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="DRVCTRL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x42001C0D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="INVEN0" edc:nzwidth="0x1" edc:desc="Output Waveform Invert Enable 0"/>
            <edc:SFRFieldDef edc:cname="INVEN1" edc:nzwidth="0x1" edc:desc="Output Waveform Invert Enable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x42001C0E"/>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x42001C0F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Run During Debug"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF" edc:_addr="0x42001C10">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="swrst"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="enable"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB"/>
            <edc:SFRFieldDef edc:cname="STATUS" edc:nzwidth="0x1" edc:desc="STATUS"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x1" edc:desc="Counter"/>
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x1" edc:desc="Period"/>
            <edc:SFRFieldDef edc:cname="CC0" edc:nzwidth="0x1" edc:desc="Compare Channel 0"/>
            <edc:SFRFieldDef edc:cname="CC1" edc:nzwidth="0x1" edc:desc="Compare Channel 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3EC" edc:_addr="0x42001C14"/>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="---nn-nn--nn--nn----nnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1B330FFF" edc:_addr="0x42002000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x2" edc:desc="Timer Counter Mode">
              <edc:SFRFieldSemantic edc:cname="COUNT16" edc:desc="Counter in 16-bit mode" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="COUNT8" edc:desc="Counter in 8-bit mode" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="COUNT32" edc:desc="Counter in 32-bit mode" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PRESCSYNC" edc:nzwidth="0x2" edc:desc="Prescaler and Counter Synchronization">
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="Reload or reset the counter on next generic clock" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PRESC" edc:desc="Reload or reset the counter on next prescaler clock" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="RESYNC" edc:desc="Reload or reset the counter on next generic clock and reset the prescaler counter" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Clock On Demand"/>
            <edc:SFRFieldDef edc:cname="PRESCALER" edc:nzwidth="0x3" edc:desc="Prescaler">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="Prescaler: GCLK_TC" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Prescaler: GCLK_TC/2" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="Prescaler: GCLK_TC/4" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="Prescaler: GCLK_TC/8" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="Prescaler: GCLK_TC/16" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="Prescaler: GCLK_TC/64" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="Prescaler: GCLK_TC/256" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="Prescaler: GCLK_TC/1024" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ALOCK" edc:nzwidth="0x1" edc:desc="Auto Lock"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CAPTEN0" edc:nzwidth="0x1" edc:desc="Capture Channel 0 Enable"/>
            <edc:SFRFieldDef edc:cname="CAPTEN1" edc:nzwidth="0x1" edc:desc="Capture Channel 1 Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="COPEN0" edc:nzwidth="0x1" edc:desc="Capture On Pin 0 Enable"/>
            <edc:SFRFieldDef edc:cname="COPEN1" edc:nzwidth="0x1" edc:desc="Capture On Pin 1 Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CAPTMODE0" edc:nzwidth="0x2" edc:desc="Capture Mode Channel 0">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Default capture" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMIN" edc:desc="Minimum capture" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMAX" edc:desc="Maximum capture" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CAPTMODE1" edc:nzwidth="0x2" edc:desc="Capture mode Channel 1">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Default capture" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMIN" edc:desc="Minimum capture" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMAX" edc:desc="Maximum capture" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="CTRLBCLR" edc:nzwidth="0x8" edc:access="nnn--nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xE7" edc:_addr="0x42002004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Counter Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:nzwidth="0x1" edc:desc="One-Shot on Counter"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Force a start, restart or retrigger" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Force a stop" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update of double-buffered register" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force a read synchronization of COUNT" edc:when="(field &amp; 0x7) == 4"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="CTRLBSET" edc:nzwidth="0x8" edc:access="nnn--nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xE7" edc:_addr="0x42002005">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Counter Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:nzwidth="0x1" edc:desc="One-Shot on Counter"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Force a start, restart or retrigger" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Force a stop" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update of double-buffered register" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force a read synchronization of COUNT" edc:when="(field &amp; 0x7) == 4"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="EVCTRL" edc:nzwidth="0x10" edc:access="--nn---n--nn-nnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x3137" edc:_addr="0x42002006">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="EVACT" edc:nzwidth="0x3" edc:desc="Event Action">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Event action disabled" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Start, restart or retrigger TC on event" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="COUNT" edc:desc="Count on event" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="Start TC on event" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="STAMP" edc:desc="Time stamp capture" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="PPW" edc:desc="Period catured in CC0, pulse width in CC1" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="PWP" edc:desc="Period catured in CC1, pulse width in CC0" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="PW" edc:desc="Pulse width capture" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TCINV" edc:nzwidth="0x1" edc:desc="TC Event Input Polarity"/>
            <edc:SFRFieldDef edc:cname="TCEI" edc:nzwidth="0x1" edc:desc="TC Event Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="OVFEO" edc:nzwidth="0x1" edc:desc="Event Output Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="MCEO0" edc:nzwidth="0x1" edc:desc="MC Event Output Enable 0"/>
            <edc:SFRFieldDef edc:cname="MCEO1" edc:nzwidth="0x1" edc:desc="MC Event Output Enable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="--nn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x33" edc:_addr="0x42002008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="OVF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="ERR Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="MC Interrupt Disable 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="MC Interrupt Disable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="--nn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x33" edc:_addr="0x42002009">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="OVF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="ERR Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="MC Interrupt Enable 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="MC Interrupt Enable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="--nn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x33" edc:_addr="0x4200200A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="OVF Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="ERR Interrupt Flag"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="MC Interrupt Flag 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="MC Interrupt Flag 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="--nnn-nn" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3B" edc:_addr="0x4200200B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="STOP" edc:nzwidth="0x1" edc:desc="Stop Status Flag"/>
            <edc:SFRFieldDef edc:cname="SLAVE" edc:nzwidth="0x1" edc:desc="Slave Status Flag"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PERBUFV" edc:nzwidth="0x1" edc:desc="Synchronization Busy Status"/>
            <edc:SFRFieldDef edc:cname="CCBUFV0" edc:nzwidth="0x1" edc:desc="Compare channel buffer 0 valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV1" edc:nzwidth="0x1" edc:desc="Compare channel buffer 1 valid"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="WAVE" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4200200C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="WAVEGEN" edc:nzwidth="0x2" edc:desc="Waveform Generation Mode">
              <edc:SFRFieldSemantic edc:cname="NFRQ" edc:desc="Normal frequency" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MFRQ" edc:desc="Match frequency" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="NPWM" edc:desc="Normal PWM" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="MPWM" edc:desc="Match PWM" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="DRVCTRL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4200200D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="INVEN0" edc:nzwidth="0x1" edc:desc="Output Waveform Invert Enable 0"/>
            <edc:SFRFieldDef edc:cname="INVEN1" edc:nzwidth="0x1" edc:desc="Output Waveform Invert Enable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x4200200E"/>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x4200200F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Run During Debug"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF" edc:_addr="0x42002010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="swrst"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="enable"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB"/>
            <edc:SFRFieldDef edc:cname="STATUS" edc:nzwidth="0x1" edc:desc="STATUS"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x1" edc:desc="Counter"/>
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x1" edc:desc="Period"/>
            <edc:SFRFieldDef edc:cname="CC0" edc:nzwidth="0x1" edc:desc="Compare Channel 0"/>
            <edc:SFRFieldDef edc:cname="CC1" edc:nzwidth="0x1" edc:desc="Compare Channel 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3EC" edc:_addr="0x42002014"/>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="---nn-nn--nn--nn----nnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1B330FFF" edc:_addr="0x42002400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x2" edc:desc="Timer Counter Mode">
              <edc:SFRFieldSemantic edc:cname="COUNT16" edc:desc="Counter in 16-bit mode" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="COUNT8" edc:desc="Counter in 8-bit mode" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="COUNT32" edc:desc="Counter in 32-bit mode" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PRESCSYNC" edc:nzwidth="0x2" edc:desc="Prescaler and Counter Synchronization">
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="Reload or reset the counter on next generic clock" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PRESC" edc:desc="Reload or reset the counter on next prescaler clock" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="RESYNC" edc:desc="Reload or reset the counter on next generic clock and reset the prescaler counter" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Clock On Demand"/>
            <edc:SFRFieldDef edc:cname="PRESCALER" edc:nzwidth="0x3" edc:desc="Prescaler">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="Prescaler: GCLK_TC" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Prescaler: GCLK_TC/2" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="Prescaler: GCLK_TC/4" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="Prescaler: GCLK_TC/8" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="Prescaler: GCLK_TC/16" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="Prescaler: GCLK_TC/64" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="Prescaler: GCLK_TC/256" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="Prescaler: GCLK_TC/1024" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ALOCK" edc:nzwidth="0x1" edc:desc="Auto Lock"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CAPTEN0" edc:nzwidth="0x1" edc:desc="Capture Channel 0 Enable"/>
            <edc:SFRFieldDef edc:cname="CAPTEN1" edc:nzwidth="0x1" edc:desc="Capture Channel 1 Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="COPEN0" edc:nzwidth="0x1" edc:desc="Capture On Pin 0 Enable"/>
            <edc:SFRFieldDef edc:cname="COPEN1" edc:nzwidth="0x1" edc:desc="Capture On Pin 1 Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CAPTMODE0" edc:nzwidth="0x2" edc:desc="Capture Mode Channel 0">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Default capture" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMIN" edc:desc="Minimum capture" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMAX" edc:desc="Maximum capture" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CAPTMODE1" edc:nzwidth="0x2" edc:desc="Capture mode Channel 1">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Default capture" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMIN" edc:desc="Minimum capture" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMAX" edc:desc="Maximum capture" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="CTRLBCLR" edc:nzwidth="0x8" edc:access="nnn--nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xE7" edc:_addr="0x42002404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Counter Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:nzwidth="0x1" edc:desc="One-Shot on Counter"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Force a start, restart or retrigger" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Force a stop" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update of double-buffered register" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force a read synchronization of COUNT" edc:when="(field &amp; 0x7) == 4"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="CTRLBSET" edc:nzwidth="0x8" edc:access="nnn--nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xE7" edc:_addr="0x42002405">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Counter Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:nzwidth="0x1" edc:desc="One-Shot on Counter"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Force a start, restart or retrigger" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Force a stop" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update of double-buffered register" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force a read synchronization of COUNT" edc:when="(field &amp; 0x7) == 4"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="EVCTRL" edc:nzwidth="0x10" edc:access="--nn---n--nn-nnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x3137" edc:_addr="0x42002406">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="EVACT" edc:nzwidth="0x3" edc:desc="Event Action">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Event action disabled" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Start, restart or retrigger TC on event" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="COUNT" edc:desc="Count on event" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="Start TC on event" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="STAMP" edc:desc="Time stamp capture" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="PPW" edc:desc="Period catured in CC0, pulse width in CC1" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="PWP" edc:desc="Period catured in CC1, pulse width in CC0" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="PW" edc:desc="Pulse width capture" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TCINV" edc:nzwidth="0x1" edc:desc="TC Event Input Polarity"/>
            <edc:SFRFieldDef edc:cname="TCEI" edc:nzwidth="0x1" edc:desc="TC Event Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="OVFEO" edc:nzwidth="0x1" edc:desc="Event Output Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="MCEO0" edc:nzwidth="0x1" edc:desc="MC Event Output Enable 0"/>
            <edc:SFRFieldDef edc:cname="MCEO1" edc:nzwidth="0x1" edc:desc="MC Event Output Enable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="--nn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x33" edc:_addr="0x42002408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="OVF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="ERR Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="MC Interrupt Disable 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="MC Interrupt Disable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="--nn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x33" edc:_addr="0x42002409">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="OVF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="ERR Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="MC Interrupt Enable 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="MC Interrupt Enable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="--nn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x33" edc:_addr="0x4200240A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="OVF Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="ERR Interrupt Flag"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="MC Interrupt Flag 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="MC Interrupt Flag 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="--nnn-nn" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3B" edc:_addr="0x4200240B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="STOP" edc:nzwidth="0x1" edc:desc="Stop Status Flag"/>
            <edc:SFRFieldDef edc:cname="SLAVE" edc:nzwidth="0x1" edc:desc="Slave Status Flag"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PERBUFV" edc:nzwidth="0x1" edc:desc="Synchronization Busy Status"/>
            <edc:SFRFieldDef edc:cname="CCBUFV0" edc:nzwidth="0x1" edc:desc="Compare channel buffer 0 valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV1" edc:nzwidth="0x1" edc:desc="Compare channel buffer 1 valid"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="WAVE" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4200240C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="WAVEGEN" edc:nzwidth="0x2" edc:desc="Waveform Generation Mode">
              <edc:SFRFieldSemantic edc:cname="NFRQ" edc:desc="Normal frequency" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MFRQ" edc:desc="Match frequency" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="NPWM" edc:desc="Normal PWM" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="MPWM" edc:desc="Match PWM" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="DRVCTRL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4200240D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="INVEN0" edc:nzwidth="0x1" edc:desc="Output Waveform Invert Enable 0"/>
            <edc:SFRFieldDef edc:cname="INVEN1" edc:nzwidth="0x1" edc:desc="Output Waveform Invert Enable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x4200240E"/>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x4200240F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Run During Debug"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF" edc:_addr="0x42002410">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="swrst"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="enable"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB"/>
            <edc:SFRFieldDef edc:cname="STATUS" edc:nzwidth="0x1" edc:desc="STATUS"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x1" edc:desc="Counter"/>
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x1" edc:desc="Period"/>
            <edc:SFRFieldDef edc:cname="CC0" edc:nzwidth="0x1" edc:desc="Compare Channel 0"/>
            <edc:SFRFieldDef edc:cname="CC1" edc:nzwidth="0x1" edc:desc="Compare Channel 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3EC" edc:_addr="0x42002414"/>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="----nnnnn------nnnnnnnnn-nn---nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF81FF63" edc:_addr="0x42002800">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RESOLUTION" edc:nzwidth="0x2" edc:desc="Enhanced Resolution">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Dithering is disabled" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DITH4" edc:desc="Dithering is done every 16 PWM frames" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DITH5" edc:desc="Dithering is done every 32 PWM frames" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="DITH6" edc:desc="Dithering is done every 64 PWM frames" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PRESCALER" edc:nzwidth="0x3" edc:desc="Prescaler">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="No division" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Divide by 2" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="Divide by 4" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="Divide by 8" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="Divide by 16" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="Divide by 64" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="Divide by 256" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="Divide by 1024" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:SFRFieldDef edc:cname="PRESCSYNC" edc:nzwidth="0x2" edc:desc="Prescaler and Counter Synchronization Selection">
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="Reload or reset counter on next GCLK" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PRESC" edc:desc="Reload or reset counter on next prescaler clock" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="RESYNC" edc:desc="Reload or reset counter on next GCLK and reset prescaler counter" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ALOCK" edc:nzwidth="0x1" edc:desc="Auto Lock"/>
            <edc:SFRFieldDef edc:cname="MSYNC" edc:nzwidth="0x1" edc:desc="Master Synchronization (only for TCC Slave Instance)"/>
            <edc:SFRFieldDef edc:cname="FCYCLE" edc:nzwidth="0x1" edc:desc="Full Cycle"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="DMAOS" edc:nzwidth="0x1" edc:desc="DMA One-shot Trigger Mode"/>
            <edc:SFRFieldDef edc:cname="CPTEN0" edc:nzwidth="0x1" edc:desc="Capture Channel 0 Enable"/>
            <edc:SFRFieldDef edc:cname="CPTEN1" edc:nzwidth="0x1" edc:desc="Capture Channel 1 Enable"/>
            <edc:SFRFieldDef edc:cname="CPTEN2" edc:nzwidth="0x1" edc:desc="Capture Channel 2 Enable"/>
            <edc:SFRFieldDef edc:cname="CPTEN3" edc:nzwidth="0x1" edc:desc="Capture Channel 3 Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="CTRLBCLR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x42002804">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Counter Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:nzwidth="0x1" edc:desc="One-Shot"/>
            <edc:SFRFieldDef edc:cname="IDXCMD" edc:nzwidth="0x2" edc:desc="Ramp Index Command">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Command disabled: Index toggles between cycles A and B" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set index: cycle B will be forced in the next cycle" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear index: cycle A will be forced in the next cycle" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="HOLD" edc:desc="Hold index: the next cycle will be the same as the current cycle" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="TCC Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Clear start, restart or retrigger" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Force stop" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update or double buffered registers" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force COUNT read synchronization" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="DMAOS" edc:desc="One-shot DMA trigger" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="CTRLBSET" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x42002805">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Counter Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:nzwidth="0x1" edc:desc="One-Shot"/>
            <edc:SFRFieldDef edc:cname="IDXCMD" edc:nzwidth="0x2" edc:desc="Ramp Index Command">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Command disabled: Index toggles between cycles A and B" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set index: cycle B will be forced in the next cycle" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear index: cycle A will be forced in the next cycle" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="HOLD" edc:desc="Hold index: the next cycle will be the same as the current cycle" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="TCC Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Clear start, restart or retrigger" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Force stop" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update or double buffered registers" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force COUNT read synchronization" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="DMAOS" edc:desc="One-shot DMA trigger" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x42002806"/>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="--------------------rrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFF" edc:_addr="0x42002808">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Swrst Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="Ctrlb Busy"/>
            <edc:SFRFieldDef edc:cname="STATUS" edc:nzwidth="0x1" edc:desc="Status Busy"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x1" edc:desc="Count Busy"/>
            <edc:SFRFieldDef edc:cname="PATT" edc:nzwidth="0x1" edc:desc="Pattern Busy"/>
            <edc:SFRFieldDef edc:cname="WAVE" edc:nzwidth="0x1" edc:desc="Wave Busy"/>
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x1" edc:desc="Period Busy"/>
            <edc:SFRFieldDef edc:cname="CC0" edc:nzwidth="0x1" edc:desc="Compare Channel 0 Busy"/>
            <edc:SFRFieldDef edc:cname="CC1" edc:nzwidth="0x1" edc:desc="Compare Channel 1 Busy"/>
            <edc:SFRFieldDef edc:cname="CC2" edc:nzwidth="0x1" edc:desc="Compare Channel 2 Busy"/>
            <edc:SFRFieldDef edc:cname="CC3" edc:nzwidth="0x1" edc:desc="Compare Channel 3 Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="FCTRLA" edc:nzwidth="0x20" edc:access="----nnnnnnnnnnnnnnnnnnnnnnnnn-nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFFB" edc:_addr="0x4200280C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="SRC" edc:nzwidth="0x2" edc:desc="Fault A Source">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Fault input disabled" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="MCEx (x=0,1) event input" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="INVERT" edc:desc="Inverted MCEx (x=0,1) event input" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="ALTFAULT" edc:desc="Alternate fault (A or B) state at the end of the previous period" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="KEEP" edc:nzwidth="0x1" edc:desc="Fault A Keeper"/>
            <edc:SFRFieldDef edc:cname="QUAL" edc:nzwidth="0x1" edc:desc="Fault A Qualification"/>
            <edc:SFRFieldDef edc:cname="BLANK" edc:nzwidth="0x2" edc:desc="Fault A Blanking Mode">
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="Blanking applied from start of the ramp" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Blanking applied from rising edge of the output waveform" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Blanking applied from falling edge of the output waveform" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Blanking applied from each toggle of the output waveform" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RESTART" edc:nzwidth="0x1" edc:desc="Fault A Restart"/>
            <edc:SFRFieldDef edc:cname="HALT" edc:nzwidth="0x2" edc:desc="Fault A Halt Mode">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Halt action disabled" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HW" edc:desc="Hardware halt action" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="SW" edc:desc="Software halt action" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="NR" edc:desc="Non-recoverable fault" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CHSEL" edc:nzwidth="0x2" edc:desc="Fault A Capture Channel">
              <edc:SFRFieldSemantic edc:cname="CC0" edc:desc="Capture value stored in channel 0" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="CC1" edc:desc="Capture value stored in channel 1" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CC2" edc:desc="Capture value stored in channel 2" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="CC3" edc:desc="Capture value stored in channel 3" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CAPTURE" edc:nzwidth="0x3" edc:desc="Fault A Capture Action">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="No capture" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="CAPT" edc:desc="Capture on fault" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMIN" edc:desc="Minimum capture" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMAX" edc:desc="Maximum capture" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="LOCMIN" edc:desc="Minimum local detection" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="LOCMAX" edc:desc="Maximum local detection" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="DERIV0" edc:desc="Minimum and maximum local detection" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMARK" edc:desc="Capture with ramp index as MSB value" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BLANKPRESC" edc:nzwidth="0x1" edc:desc="Fault A Blanking Prescaler"/>
            <edc:SFRFieldDef edc:cname="BLANKVAL" edc:nzwidth="0x8" edc:desc="Fault A Blanking Time"/>
            <edc:SFRFieldDef edc:cname="FILTERVAL" edc:nzwidth="0x4" edc:desc="Fault A Filter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="FCTRLB" edc:nzwidth="0x20" edc:access="----nnnnnnnnnnnnnnnnnnnnnnnnn-nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFFB" edc:_addr="0x42002810">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="SRC" edc:nzwidth="0x2" edc:desc="Fault B Source">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Fault input disabled" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="MCEx (x=0,1) event input" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="INVERT" edc:desc="Inverted MCEx (x=0,1) event input" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="ALTFAULT" edc:desc="Alternate fault (A or B) state at the end of the previous period" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="KEEP" edc:nzwidth="0x1" edc:desc="Fault B Keeper"/>
            <edc:SFRFieldDef edc:cname="QUAL" edc:nzwidth="0x1" edc:desc="Fault B Qualification"/>
            <edc:SFRFieldDef edc:cname="BLANK" edc:nzwidth="0x2" edc:desc="Fault B Blanking Mode">
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="Blanking applied from start of the ramp" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Blanking applied from rising edge of the output waveform" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Blanking applied from falling edge of the output waveform" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Blanking applied from each toggle of the output waveform" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RESTART" edc:nzwidth="0x1" edc:desc="Fault B Restart"/>
            <edc:SFRFieldDef edc:cname="HALT" edc:nzwidth="0x2" edc:desc="Fault B Halt Mode">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Halt action disabled" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HW" edc:desc="Hardware halt action" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="SW" edc:desc="Software halt action" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="NR" edc:desc="Non-recoverable fault" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CHSEL" edc:nzwidth="0x2" edc:desc="Fault B Capture Channel">
              <edc:SFRFieldSemantic edc:cname="CC0" edc:desc="Capture value stored in channel 0" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="CC1" edc:desc="Capture value stored in channel 1" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CC2" edc:desc="Capture value stored in channel 2" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="CC3" edc:desc="Capture value stored in channel 3" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CAPTURE" edc:nzwidth="0x3" edc:desc="Fault B Capture Action">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="No capture" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="CAPT" edc:desc="Capture on fault" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMIN" edc:desc="Minimum capture" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMAX" edc:desc="Maximum capture" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="LOCMIN" edc:desc="Minimum local detection" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="LOCMAX" edc:desc="Maximum local detection" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="DERIV0" edc:desc="Minimum and maximum local detection" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMARK" edc:desc="Capture with ramp index as MSB value" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BLANKPRESC" edc:nzwidth="0x1" edc:desc="Fault B Blanking Prescaler"/>
            <edc:SFRFieldDef edc:cname="BLANKVAL" edc:nzwidth="0x8" edc:desc="Fault B Blanking Time"/>
            <edc:SFRFieldDef edc:cname="FILTERVAL" edc:nzwidth="0x4" edc:desc="Fault B Filter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="WEXCTRL" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnn----nnnn------nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF0F03" edc:_addr="0x42002814">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="OTMX" edc:nzwidth="0x2" edc:desc="Output Matrix"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="DTIEN0" edc:nzwidth="0x1" edc:desc="Dead-time Insertion Generator 0 Enable"/>
            <edc:SFRFieldDef edc:cname="DTIEN1" edc:nzwidth="0x1" edc:desc="Dead-time Insertion Generator 1 Enable"/>
            <edc:SFRFieldDef edc:cname="DTIEN2" edc:nzwidth="0x1" edc:desc="Dead-time Insertion Generator 2 Enable"/>
            <edc:SFRFieldDef edc:cname="DTIEN3" edc:nzwidth="0x1" edc:desc="Dead-time Insertion Generator 3 Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="DTLS" edc:nzwidth="0x8" edc:desc="Dead-time Low Side Outputs Value"/>
            <edc:SFRFieldDef edc:cname="DTHS" edc:nzwidth="0x8" edc:desc="Dead-time High Side Outputs Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="DRVCTRL" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42002818">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="NRE0" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 0 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE1" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 1 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE2" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 2 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE3" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 3 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE4" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 4 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE5" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 5 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE6" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 6 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE7" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 7 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRV0" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 0 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV1" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 1 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV2" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 2 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV3" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 3 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV4" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 4 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV5" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 5 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV6" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 6 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV7" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 7 Output Value"/>
            <edc:SFRFieldDef edc:cname="INVEN0" edc:nzwidth="0x1" edc:desc="Output Waveform 0 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN1" edc:nzwidth="0x1" edc:desc="Output Waveform 1 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN2" edc:nzwidth="0x1" edc:desc="Output Waveform 2 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN3" edc:nzwidth="0x1" edc:desc="Output Waveform 3 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN4" edc:nzwidth="0x1" edc:desc="Output Waveform 4 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN5" edc:nzwidth="0x1" edc:desc="Output Waveform 5 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN6" edc:nzwidth="0x1" edc:desc="Output Waveform 6 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN7" edc:nzwidth="0x1" edc:desc="Output Waveform 7 Inversion"/>
            <edc:SFRFieldDef edc:cname="FILTERVAL0" edc:nzwidth="0x4" edc:desc="Non-Recoverable Fault Input 0 Filter Value"/>
            <edc:SFRFieldDef edc:cname="FILTERVAL1" edc:nzwidth="0x4" edc:desc="Non-Recoverable Fault Input 1 Filter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x4200281C"/>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-----n-n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x5" edc:_addr="0x4200281E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Running Mode"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FDDBD" edc:nzwidth="0x1" edc:desc="Fault Detection on Debug Break Detection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x4200281F"/>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="EVCTRL" edc:nzwidth="0x20" edc:access="----nnnn----nnnnnnnn-nnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF0FF7FF" edc:_addr="0x42002820">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="EVACT0" edc:nzwidth="0x3" edc:desc="Timer/counter Input Event0 Action">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Event action disabled" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Start, restart or re-trigger counter on event" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="COUNTEV" edc:desc="Count on event" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="Start counter on event" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="INC" edc:desc="Increment counter on event" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="COUNT" edc:desc="Count on active state of asynchronous event" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="STAMP" edc:desc="Stamp capture" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FAULT" edc:desc="Non-recoverable fault" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EVACT1" edc:nzwidth="0x3" edc:desc="Timer/counter Input Event1 Action">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Event action disabled" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Re-trigger counter on event" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DIR" edc:desc="Direction control" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Stop counter on event" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="DEC" edc:desc="Decrement counter on event" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="PWP" edc:desc="Period capture value in CC1 register, pulse width capture value in CC0 register" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FAULT" edc:desc="Non-recoverable fault" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CNTSEL" edc:nzwidth="0x2" edc:desc="Timer/counter Output Event Mode">
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="An interrupt/event is generated when a new counter cycle starts" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="END" edc:desc="An interrupt/event is generated when a counter cycle ends" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="BOUNDARY" edc:desc="An interrupt/event is generated when a new counter cycle starts or a counter cycle ends" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="OVFEO" edc:nzwidth="0x1" edc:desc="Overflow/Underflow Output Event Enable"/>
            <edc:SFRFieldDef edc:cname="TRGEO" edc:nzwidth="0x1" edc:desc="Retrigger Output Event Enable"/>
            <edc:SFRFieldDef edc:cname="CNTEO" edc:nzwidth="0x1" edc:desc="Timer/counter Output Event Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TCINV0" edc:nzwidth="0x1" edc:desc="Inverted Event 0 Input Enable"/>
            <edc:SFRFieldDef edc:cname="TCINV1" edc:nzwidth="0x1" edc:desc="Inverted Event 1 Input Enable"/>
            <edc:SFRFieldDef edc:cname="TCEI0" edc:nzwidth="0x1" edc:desc="Timer/counter Event 0 Input Enable"/>
            <edc:SFRFieldDef edc:cname="TCEI1" edc:nzwidth="0x1" edc:desc="Timer/counter Event 1 Input Enable"/>
            <edc:SFRFieldDef edc:cname="MCEI0" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 0 Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="MCEI1" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 1 Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="MCEI2" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 2 Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="MCEI3" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 3 Event Input Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="MCEO0" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 0 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="MCEO1" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 1 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="MCEO2" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 2 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="MCEO3" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 3 Event Output Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="INTENCLR" edc:nzwidth="0x20" edc:access="------------nnnnnnnnnn------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFC0F" edc:_addr="0x42002824">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRG" edc:nzwidth="0x1" edc:desc="Retrigger Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CNT" edc:nzwidth="0x1" edc:desc="Counter Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Error Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="UFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Update Fault Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Debug Fault Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULTA" edc:nzwidth="0x1" edc:desc="Recoverable Fault A Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULTB" edc:nzwidth="0x1" edc:desc="Recoverable Fault B Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULT0" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULT1" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC2" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 2 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC3" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 3 Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="INTENSET" edc:nzwidth="0x20" edc:access="------------nnnnnnnnnn------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFC0F" edc:_addr="0x42002828">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRG" edc:nzwidth="0x1" edc:desc="Retrigger Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CNT" edc:nzwidth="0x1" edc:desc="Counter Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Error Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="UFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Update Fault Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Debug Fault Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULTA" edc:nzwidth="0x1" edc:desc="Recoverable Fault A Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULTB" edc:nzwidth="0x1" edc:desc="Recoverable Fault B Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULT0" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULT1" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC2" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 2 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC3" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 3 Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="INTFLAG" edc:nzwidth="0x20" edc:access="------------nnnnnnnnnn------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFC0F" edc:_addr="0x4200282C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow"/>
            <edc:SFRFieldDef edc:cname="TRG" edc:nzwidth="0x1" edc:desc="Retrigger"/>
            <edc:SFRFieldDef edc:cname="CNT" edc:nzwidth="0x1" edc:desc="Counter"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Error"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="UFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Update Fault"/>
            <edc:SFRFieldDef edc:cname="DFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Debug Fault"/>
            <edc:SFRFieldDef edc:cname="FAULTA" edc:nzwidth="0x1" edc:desc="Recoverable Fault A"/>
            <edc:SFRFieldDef edc:cname="FAULTB" edc:nzwidth="0x1" edc:desc="Recoverable Fault B"/>
            <edc:SFRFieldDef edc:cname="FAULT0" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 0"/>
            <edc:SFRFieldDef edc:cname="FAULT1" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 1"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="Match or Capture 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="Match or Capture 1"/>
            <edc:SFRFieldDef edc:cname="MC2" edc:nzwidth="0x1" edc:desc="Match or Capture 2"/>
            <edc:SFRFieldDef edc:cname="MC3" edc:nzwidth="0x1" edc:desc="Match or Capture 3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="STATUS" edc:nzwidth="0x20" edc:access="----nnnn----nnnnnnnnnnnnn-nnnnnn" edc:por="00000000000000000000000000000001" edc:mclr="00000000000000000000000000000001" edc:impl="0xF0FFFBF" edc:_addr="0x42002830">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="STOP" edc:nzwidth="0x1" edc:desc="Stop"/>
            <edc:SFRFieldDef edc:cname="IDX" edc:nzwidth="0x1" edc:desc="Ramp"/>
            <edc:SFRFieldDef edc:cname="UFS" edc:nzwidth="0x1" edc:desc="Non-recoverable Update Fault State"/>
            <edc:SFRFieldDef edc:cname="DFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Debug Fault State"/>
            <edc:SFRFieldDef edc:cname="SLAVE" edc:nzwidth="0x1" edc:desc="Slave"/>
            <edc:SFRFieldDef edc:cname="PATTBUFV" edc:nzwidth="0x1" edc:desc="Pattern Buffer Valid"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PERBUFV" edc:nzwidth="0x1" edc:desc="Period Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="FAULTAIN" edc:nzwidth="0x1" edc:desc="Recoverable Fault A Input"/>
            <edc:SFRFieldDef edc:cname="FAULTBIN" edc:nzwidth="0x1" edc:desc="Recoverable Fault B Input"/>
            <edc:SFRFieldDef edc:cname="FAULT0IN" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault0 Input"/>
            <edc:SFRFieldDef edc:cname="FAULT1IN" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault1 Input"/>
            <edc:SFRFieldDef edc:cname="FAULTA" edc:nzwidth="0x1" edc:desc="Recoverable Fault A State"/>
            <edc:SFRFieldDef edc:cname="FAULTB" edc:nzwidth="0x1" edc:desc="Recoverable Fault B State"/>
            <edc:SFRFieldDef edc:cname="FAULT0" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 0 State"/>
            <edc:SFRFieldDef edc:cname="FAULT1" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 1 State"/>
            <edc:SFRFieldDef edc:cname="CCBUFV0" edc:nzwidth="0x1" edc:desc="Compare Channel 0 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV1" edc:nzwidth="0x1" edc:desc="Compare Channel 1 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV2" edc:nzwidth="0x1" edc:desc="Compare Channel 2 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV3" edc:nzwidth="0x1" edc:desc="Compare Channel 3 Buffer Valid"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CMP0" edc:nzwidth="0x1" edc:desc="Compare Channel 0 Value"/>
            <edc:SFRFieldDef edc:cname="CMP1" edc:nzwidth="0x1" edc:desc="Compare Channel 1 Value"/>
            <edc:SFRFieldDef edc:cname="CMP2" edc:nzwidth="0x1" edc:desc="Compare Channel 2 Value"/>
            <edc:SFRFieldDef edc:cname="CMP3" edc:nzwidth="0x1" edc:desc="Compare Channel 3 Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="COUNT" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42002834">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x18" edc:desc="Counter Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x14" edc:desc="Counter Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x13" edc:desc="Counter Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x12" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="PATT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0x42002838">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="PGE0" edc:nzwidth="0x1" edc:desc="Pattern Generator 0 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE1" edc:nzwidth="0x1" edc:desc="Pattern Generator 1 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE2" edc:nzwidth="0x1" edc:desc="Pattern Generator 2 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE3" edc:nzwidth="0x1" edc:desc="Pattern Generator 3 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE4" edc:nzwidth="0x1" edc:desc="Pattern Generator 4 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE5" edc:nzwidth="0x1" edc:desc="Pattern Generator 5 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE6" edc:nzwidth="0x1" edc:desc="Pattern Generator 6 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE7" edc:nzwidth="0x1" edc:desc="Pattern Generator 7 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGV0" edc:nzwidth="0x1" edc:desc="Pattern Generator 0 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV1" edc:nzwidth="0x1" edc:desc="Pattern Generator 1 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV2" edc:nzwidth="0x1" edc:desc="Pattern Generator 2 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV3" edc:nzwidth="0x1" edc:desc="Pattern Generator 3 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV4" edc:nzwidth="0x1" edc:desc="Pattern Generator 4 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV5" edc:nzwidth="0x1" edc:desc="Pattern Generator 5 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV6" edc:nzwidth="0x1" edc:desc="Pattern Generator 6 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV7" edc:nzwidth="0x1" edc:desc="Pattern Generator 7 Output Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x4200283A"/>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="WAVE" edc:nzwidth="0x20" edc:access="----nnnn----nnnn----nnnnnnnn-nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF0F0FF7" edc:_addr="0x4200283C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="WAVEGEN" edc:nzwidth="0x3" edc:desc="Waveform Generation">
              <edc:SFRFieldSemantic edc:cname="NFRQ" edc:desc="Normal frequency" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MFRQ" edc:desc="Match frequency" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="NPWM" edc:desc="Normal PWM" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="DPWM" edc:desc="Dual compare PWM" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="DSCRITICAL" edc:desc="Dual-slope critical" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="DSBOTTOM" edc:desc="Dual-slope with interrupt/event condition when COUNT reaches ZERO" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="DSBOTH" edc:desc="Dual-slope with interrupt/event condition when COUNT reaches ZERO or TOP" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="DSTOP" edc:desc="Dual-slope with interrupt/event condition when COUNT reaches TOP" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RAMP" edc:nzwidth="0x3" edc:desc="Ramp Mode">
              <edc:SFRFieldSemantic edc:cname="RAMP1" edc:desc="RAMP1 operation" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RAMP2A" edc:desc="Alternative RAMP2 operation" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="RAMP2" edc:desc="RAMP2 operation" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="RAMP2C" edc:desc="Critical RAMP2 operation" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="RAMP2CS" edc:desc="Critical Swapped RAMP2 operation" edc:when="(field &amp; 0x7) == 4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CIPEREN" edc:nzwidth="0x1" edc:desc="Circular period Enable"/>
            <edc:SFRFieldDef edc:cname="CICCEN0" edc:nzwidth="0x1" edc:desc="Circular Channel 0 Enable"/>
            <edc:SFRFieldDef edc:cname="CICCEN1" edc:nzwidth="0x1" edc:desc="Circular Channel 1 Enable"/>
            <edc:SFRFieldDef edc:cname="CICCEN2" edc:nzwidth="0x1" edc:desc="Circular Channel 2 Enable"/>
            <edc:SFRFieldDef edc:cname="CICCEN3" edc:nzwidth="0x1" edc:desc="Circular Channel 3 Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="POL0" edc:nzwidth="0x1" edc:desc="Channel 0 Polarity">
              <edc:SFRFieldSemantic edc:cname="SINGLESLOPEPOL0" edc:desc="Single-slope PWM waveform generation Channel Polarity 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SINGLESLOPEPOL1" edc:desc="Single-slope PWM waveform generation Channel Polarity 1" edc:when="(field &amp; 0x1) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DUALSLOPEPOL0" edc:desc="Dual-slope PWM waveform generation Channel Polarity 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DUALSLOPEPOL1" edc:desc="Dual-slope PWM waveform generation Channel Polarity 1" edc:when="(field &amp; 0x1) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DUALCOMPAREPOL0" edc:desc="Dual Compare PWM waveform generation Channel Polarity 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DUALCOMPAREPOL1" edc:desc="Dual Compare PWM waveform generation Channel Polarity 1" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="POL1" edc:nzwidth="0x1" edc:desc="Channel 1 Polarity">
              <edc:SFRFieldSemantic edc:cname="SINGLESLOPEPOL0" edc:desc="Single-slope PWM waveform generation Channel Polarity 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SINGLESLOPEPOL1" edc:desc="Single-slope PWM waveform generation Channel Polarity 1" edc:when="(field &amp; 0x1) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DUALSLOPEPOL0" edc:desc="Dual-slope PWM waveform generation Channel Polarity 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DUALSLOPEPOL1" edc:desc="Dual-slope PWM waveform generation Channel Polarity 1" edc:when="(field &amp; 0x1) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DUALCOMPAREPOL0" edc:desc="Dual Compare PWM waveform generation Channel Polarity 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DUALCOMPAREPOL1" edc:desc="Dual Compare PWM waveform generation Channel Polarity 1" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="POL2" edc:nzwidth="0x1" edc:desc="Channel 2 Polarity">
              <edc:SFRFieldSemantic edc:cname="SINGLESLOPEPOL0" edc:desc="Single-slope PWM waveform generation Channel Polarity 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SINGLESLOPEPOL1" edc:desc="Single-slope PWM waveform generation Channel Polarity 1" edc:when="(field &amp; 0x1) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DUALSLOPEPOL0" edc:desc="Dual-slope PWM waveform generation Channel Polarity 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DUALSLOPEPOL1" edc:desc="Dual-slope PWM waveform generation Channel Polarity 1" edc:when="(field &amp; 0x1) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DUALCOMPAREPOL0" edc:desc="Dual Compare PWM waveform generation Channel Polarity 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DUALCOMPAREPOL1" edc:desc="Dual Compare PWM waveform generation Channel Polarity 1" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="POL3" edc:nzwidth="0x1" edc:desc="Channel 3 Polarity">
              <edc:SFRFieldSemantic edc:cname="SINGLESLOPEPOL0" edc:desc="Single-slope PWM waveform generation Channel Polarity 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SINGLESLOPEPOL1" edc:desc="Single-slope PWM waveform generation Channel Polarity 1" edc:when="(field &amp; 0x1) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DUALSLOPEPOL0" edc:desc="Dual-slope PWM waveform generation Channel Polarity 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DUALSLOPEPOL1" edc:desc="Dual-slope PWM waveform generation Channel Polarity 1" edc:when="(field &amp; 0x1) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DUALCOMPAREPOL0" edc:desc="Dual Compare PWM waveform generation Channel Polarity 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DUALCOMPAREPOL1" edc:desc="Dual Compare PWM waveform generation Channel Polarity 1" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="SWAP0" edc:nzwidth="0x1" edc:desc="Swap DTI Output Pair 0"/>
            <edc:SFRFieldDef edc:cname="SWAP1" edc:nzwidth="0x1" edc:desc="Swap DTI Output Pair 1"/>
            <edc:SFRFieldDef edc:cname="SWAP2" edc:nzwidth="0x1" edc:desc="Swap DTI Output Pair 2"/>
            <edc:SFRFieldDef edc:cname="SWAP3" edc:nzwidth="0x1" edc:desc="Swap DTI Output Pair 3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="PER" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="11111111111111111111111111111111" edc:mclr="11111111111111111111111111111111" edc:impl="0xFFFFFF" edc:_addr="0x42002840">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x18" edc:desc="Period Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x14" edc:desc="Period Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x13" edc:desc="Period Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x12" edc:desc="Period Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="CC0" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42002844">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="CC1" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42002848">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="CC2" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x4200284C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="CC3" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42002850">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x10" edc:_addr="0x42002854"/>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="PATTBUF" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0x42002864">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="PGEB0" edc:nzwidth="0x1" edc:desc="Pattern Generation 0 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB1" edc:nzwidth="0x1" edc:desc="Pattern Generation 1 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB2" edc:nzwidth="0x1" edc:desc="Pattern Generation 2 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB3" edc:nzwidth="0x1" edc:desc="Pattern Generation 3 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB4" edc:nzwidth="0x1" edc:desc="Pattern Generation 4 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB5" edc:nzwidth="0x1" edc:desc="Pattern Generation 5 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB6" edc:nzwidth="0x1" edc:desc="Pattern Generation 6 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB7" edc:nzwidth="0x1" edc:desc="Pattern Generation 7 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB0" edc:nzwidth="0x1" edc:desc="Pattern Generation 0 Output Value Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB1" edc:nzwidth="0x1" edc:desc="Pattern Generation 1 Output Value Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB2" edc:nzwidth="0x1" edc:desc="Pattern Generation 2 Output Value Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB3" edc:nzwidth="0x1" edc:desc="Pattern Generation 3 Output Value Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB4" edc:nzwidth="0x1" edc:desc="Pattern Generation 4 Output Value Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB5" edc:nzwidth="0x1" edc:desc="Pattern Generation 5 Output Value Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB6" edc:nzwidth="0x1" edc:desc="Pattern Generation 6 Output Value Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB7" edc:nzwidth="0x1" edc:desc="Pattern Generation 7 Output Value Buffer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x6" edc:_addr="0x42002866"/>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="PERBUF" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="11111111111111111111111111111111" edc:mclr="11111111111111111111111111111111" edc:impl="0xFFFFFF" edc:_addr="0x4200286C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x18" edc:desc="Period Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x14" edc:desc="Period Buffer Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x13" edc:desc="Period Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x12" edc:desc="Period Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="CCBUF0" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42002870">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="CCBUF1" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42002874">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="CCBUF2" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42002878">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="CCBUF3" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x4200287C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x380" edc:_addr="0x42002880"/>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="----nnnnn------nnnnnnnnn-nn---nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF81FF63" edc:_addr="0x42002C00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RESOLUTION" edc:nzwidth="0x2" edc:desc="Enhanced Resolution">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Dithering is disabled" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DITH4" edc:desc="Dithering is done every 16 PWM frames" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DITH5" edc:desc="Dithering is done every 32 PWM frames" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="DITH6" edc:desc="Dithering is done every 64 PWM frames" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PRESCALER" edc:nzwidth="0x3" edc:desc="Prescaler">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="No division" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Divide by 2" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="Divide by 4" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="Divide by 8" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="Divide by 16" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="Divide by 64" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="Divide by 256" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="Divide by 1024" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:SFRFieldDef edc:cname="PRESCSYNC" edc:nzwidth="0x2" edc:desc="Prescaler and Counter Synchronization Selection">
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="Reload or reset counter on next GCLK" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PRESC" edc:desc="Reload or reset counter on next prescaler clock" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="RESYNC" edc:desc="Reload or reset counter on next GCLK and reset prescaler counter" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ALOCK" edc:nzwidth="0x1" edc:desc="Auto Lock"/>
            <edc:SFRFieldDef edc:cname="MSYNC" edc:nzwidth="0x1" edc:desc="Master Synchronization (only for TCC Slave Instance)"/>
            <edc:SFRFieldDef edc:cname="FCYCLE" edc:nzwidth="0x1" edc:desc="Full Cycle"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="DMAOS" edc:nzwidth="0x1" edc:desc="DMA One-shot Trigger Mode"/>
            <edc:SFRFieldDef edc:cname="CPTEN0" edc:nzwidth="0x1" edc:desc="Capture Channel 0 Enable"/>
            <edc:SFRFieldDef edc:cname="CPTEN1" edc:nzwidth="0x1" edc:desc="Capture Channel 1 Enable"/>
            <edc:SFRFieldDef edc:cname="CPTEN2" edc:nzwidth="0x1" edc:desc="Capture Channel 2 Enable"/>
            <edc:SFRFieldDef edc:cname="CPTEN3" edc:nzwidth="0x1" edc:desc="Capture Channel 3 Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="CTRLBCLR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x42002C04">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Counter Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:nzwidth="0x1" edc:desc="One-Shot"/>
            <edc:SFRFieldDef edc:cname="IDXCMD" edc:nzwidth="0x2" edc:desc="Ramp Index Command">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Command disabled: Index toggles between cycles A and B" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set index: cycle B will be forced in the next cycle" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear index: cycle A will be forced in the next cycle" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="HOLD" edc:desc="Hold index: the next cycle will be the same as the current cycle" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="TCC Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Clear start, restart or retrigger" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Force stop" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update or double buffered registers" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force COUNT read synchronization" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="DMAOS" edc:desc="One-shot DMA trigger" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="CTRLBSET" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x42002C05">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Counter Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:nzwidth="0x1" edc:desc="One-Shot"/>
            <edc:SFRFieldDef edc:cname="IDXCMD" edc:nzwidth="0x2" edc:desc="Ramp Index Command">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Command disabled: Index toggles between cycles A and B" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set index: cycle B will be forced in the next cycle" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear index: cycle A will be forced in the next cycle" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="HOLD" edc:desc="Hold index: the next cycle will be the same as the current cycle" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="TCC Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Clear start, restart or retrigger" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Force stop" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update or double buffered registers" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force COUNT read synchronization" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="DMAOS" edc:desc="One-shot DMA trigger" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x42002C06"/>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="--------------------rrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFF" edc:_addr="0x42002C08">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Swrst Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="Ctrlb Busy"/>
            <edc:SFRFieldDef edc:cname="STATUS" edc:nzwidth="0x1" edc:desc="Status Busy"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x1" edc:desc="Count Busy"/>
            <edc:SFRFieldDef edc:cname="PATT" edc:nzwidth="0x1" edc:desc="Pattern Busy"/>
            <edc:SFRFieldDef edc:cname="WAVE" edc:nzwidth="0x1" edc:desc="Wave Busy"/>
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x1" edc:desc="Period Busy"/>
            <edc:SFRFieldDef edc:cname="CC0" edc:nzwidth="0x1" edc:desc="Compare Channel 0 Busy"/>
            <edc:SFRFieldDef edc:cname="CC1" edc:nzwidth="0x1" edc:desc="Compare Channel 1 Busy"/>
            <edc:SFRFieldDef edc:cname="CC2" edc:nzwidth="0x1" edc:desc="Compare Channel 2 Busy"/>
            <edc:SFRFieldDef edc:cname="CC3" edc:nzwidth="0x1" edc:desc="Compare Channel 3 Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="FCTRLA" edc:nzwidth="0x20" edc:access="----nnnnnnnnnnnnnnnnnnnnnnnnn-nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFFB" edc:_addr="0x42002C0C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="SRC" edc:nzwidth="0x2" edc:desc="Fault A Source">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Fault input disabled" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="MCEx (x=0,1) event input" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="INVERT" edc:desc="Inverted MCEx (x=0,1) event input" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="ALTFAULT" edc:desc="Alternate fault (A or B) state at the end of the previous period" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="KEEP" edc:nzwidth="0x1" edc:desc="Fault A Keeper"/>
            <edc:SFRFieldDef edc:cname="QUAL" edc:nzwidth="0x1" edc:desc="Fault A Qualification"/>
            <edc:SFRFieldDef edc:cname="BLANK" edc:nzwidth="0x2" edc:desc="Fault A Blanking Mode">
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="Blanking applied from start of the ramp" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Blanking applied from rising edge of the output waveform" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Blanking applied from falling edge of the output waveform" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Blanking applied from each toggle of the output waveform" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RESTART" edc:nzwidth="0x1" edc:desc="Fault A Restart"/>
            <edc:SFRFieldDef edc:cname="HALT" edc:nzwidth="0x2" edc:desc="Fault A Halt Mode">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Halt action disabled" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HW" edc:desc="Hardware halt action" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="SW" edc:desc="Software halt action" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="NR" edc:desc="Non-recoverable fault" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CHSEL" edc:nzwidth="0x2" edc:desc="Fault A Capture Channel">
              <edc:SFRFieldSemantic edc:cname="CC0" edc:desc="Capture value stored in channel 0" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="CC1" edc:desc="Capture value stored in channel 1" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CC2" edc:desc="Capture value stored in channel 2" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="CC3" edc:desc="Capture value stored in channel 3" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CAPTURE" edc:nzwidth="0x3" edc:desc="Fault A Capture Action">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="No capture" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="CAPT" edc:desc="Capture on fault" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMIN" edc:desc="Minimum capture" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMAX" edc:desc="Maximum capture" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="LOCMIN" edc:desc="Minimum local detection" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="LOCMAX" edc:desc="Maximum local detection" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="DERIV0" edc:desc="Minimum and maximum local detection" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMARK" edc:desc="Capture with ramp index as MSB value" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BLANKPRESC" edc:nzwidth="0x1" edc:desc="Fault A Blanking Prescaler"/>
            <edc:SFRFieldDef edc:cname="BLANKVAL" edc:nzwidth="0x8" edc:desc="Fault A Blanking Time"/>
            <edc:SFRFieldDef edc:cname="FILTERVAL" edc:nzwidth="0x4" edc:desc="Fault A Filter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="FCTRLB" edc:nzwidth="0x20" edc:access="----nnnnnnnnnnnnnnnnnnnnnnnnn-nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFFB" edc:_addr="0x42002C10">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="SRC" edc:nzwidth="0x2" edc:desc="Fault B Source">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Fault input disabled" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="MCEx (x=0,1) event input" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="INVERT" edc:desc="Inverted MCEx (x=0,1) event input" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="ALTFAULT" edc:desc="Alternate fault (A or B) state at the end of the previous period" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="KEEP" edc:nzwidth="0x1" edc:desc="Fault B Keeper"/>
            <edc:SFRFieldDef edc:cname="QUAL" edc:nzwidth="0x1" edc:desc="Fault B Qualification"/>
            <edc:SFRFieldDef edc:cname="BLANK" edc:nzwidth="0x2" edc:desc="Fault B Blanking Mode">
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="Blanking applied from start of the ramp" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Blanking applied from rising edge of the output waveform" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Blanking applied from falling edge of the output waveform" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Blanking applied from each toggle of the output waveform" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RESTART" edc:nzwidth="0x1" edc:desc="Fault B Restart"/>
            <edc:SFRFieldDef edc:cname="HALT" edc:nzwidth="0x2" edc:desc="Fault B Halt Mode">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Halt action disabled" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HW" edc:desc="Hardware halt action" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="SW" edc:desc="Software halt action" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="NR" edc:desc="Non-recoverable fault" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CHSEL" edc:nzwidth="0x2" edc:desc="Fault B Capture Channel">
              <edc:SFRFieldSemantic edc:cname="CC0" edc:desc="Capture value stored in channel 0" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="CC1" edc:desc="Capture value stored in channel 1" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CC2" edc:desc="Capture value stored in channel 2" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="CC3" edc:desc="Capture value stored in channel 3" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CAPTURE" edc:nzwidth="0x3" edc:desc="Fault B Capture Action">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="No capture" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="CAPT" edc:desc="Capture on fault" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMIN" edc:desc="Minimum capture" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMAX" edc:desc="Maximum capture" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="LOCMIN" edc:desc="Minimum local detection" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="LOCMAX" edc:desc="Maximum local detection" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="DERIV0" edc:desc="Minimum and maximum local detection" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMARK" edc:desc="Capture with ramp index as MSB value" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BLANKPRESC" edc:nzwidth="0x1" edc:desc="Fault B Blanking Prescaler"/>
            <edc:SFRFieldDef edc:cname="BLANKVAL" edc:nzwidth="0x8" edc:desc="Fault B Blanking Time"/>
            <edc:SFRFieldDef edc:cname="FILTERVAL" edc:nzwidth="0x4" edc:desc="Fault B Filter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="WEXCTRL" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnn----nnnn------nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF0F03" edc:_addr="0x42002C14">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="OTMX" edc:nzwidth="0x2" edc:desc="Output Matrix"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="DTIEN0" edc:nzwidth="0x1" edc:desc="Dead-time Insertion Generator 0 Enable"/>
            <edc:SFRFieldDef edc:cname="DTIEN1" edc:nzwidth="0x1" edc:desc="Dead-time Insertion Generator 1 Enable"/>
            <edc:SFRFieldDef edc:cname="DTIEN2" edc:nzwidth="0x1" edc:desc="Dead-time Insertion Generator 2 Enable"/>
            <edc:SFRFieldDef edc:cname="DTIEN3" edc:nzwidth="0x1" edc:desc="Dead-time Insertion Generator 3 Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="DTLS" edc:nzwidth="0x8" edc:desc="Dead-time Low Side Outputs Value"/>
            <edc:SFRFieldDef edc:cname="DTHS" edc:nzwidth="0x8" edc:desc="Dead-time High Side Outputs Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="DRVCTRL" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42002C18">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="NRE0" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 0 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE1" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 1 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE2" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 2 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE3" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 3 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE4" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 4 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE5" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 5 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE6" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 6 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE7" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 7 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRV0" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 0 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV1" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 1 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV2" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 2 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV3" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 3 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV4" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 4 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV5" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 5 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV6" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 6 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV7" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 7 Output Value"/>
            <edc:SFRFieldDef edc:cname="INVEN0" edc:nzwidth="0x1" edc:desc="Output Waveform 0 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN1" edc:nzwidth="0x1" edc:desc="Output Waveform 1 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN2" edc:nzwidth="0x1" edc:desc="Output Waveform 2 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN3" edc:nzwidth="0x1" edc:desc="Output Waveform 3 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN4" edc:nzwidth="0x1" edc:desc="Output Waveform 4 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN5" edc:nzwidth="0x1" edc:desc="Output Waveform 5 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN6" edc:nzwidth="0x1" edc:desc="Output Waveform 6 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN7" edc:nzwidth="0x1" edc:desc="Output Waveform 7 Inversion"/>
            <edc:SFRFieldDef edc:cname="FILTERVAL0" edc:nzwidth="0x4" edc:desc="Non-Recoverable Fault Input 0 Filter Value"/>
            <edc:SFRFieldDef edc:cname="FILTERVAL1" edc:nzwidth="0x4" edc:desc="Non-Recoverable Fault Input 1 Filter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x42002C1C"/>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-----n-n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x5" edc:_addr="0x42002C1E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Running Mode"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FDDBD" edc:nzwidth="0x1" edc:desc="Fault Detection on Debug Break Detection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x42002C1F"/>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="EVCTRL" edc:nzwidth="0x20" edc:access="----nnnn----nnnnnnnn-nnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF0FF7FF" edc:_addr="0x42002C20">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="EVACT0" edc:nzwidth="0x3" edc:desc="Timer/counter Input Event0 Action">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Event action disabled" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Start, restart or re-trigger counter on event" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="COUNTEV" edc:desc="Count on event" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="Start counter on event" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="INC" edc:desc="Increment counter on event" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="COUNT" edc:desc="Count on active state of asynchronous event" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="STAMP" edc:desc="Stamp capture" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FAULT" edc:desc="Non-recoverable fault" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EVACT1" edc:nzwidth="0x3" edc:desc="Timer/counter Input Event1 Action">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Event action disabled" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Re-trigger counter on event" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DIR" edc:desc="Direction control" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Stop counter on event" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="DEC" edc:desc="Decrement counter on event" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="PWP" edc:desc="Period capture value in CC1 register, pulse width capture value in CC0 register" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FAULT" edc:desc="Non-recoverable fault" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CNTSEL" edc:nzwidth="0x2" edc:desc="Timer/counter Output Event Mode">
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="An interrupt/event is generated when a new counter cycle starts" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="END" edc:desc="An interrupt/event is generated when a counter cycle ends" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="BOUNDARY" edc:desc="An interrupt/event is generated when a new counter cycle starts or a counter cycle ends" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="OVFEO" edc:nzwidth="0x1" edc:desc="Overflow/Underflow Output Event Enable"/>
            <edc:SFRFieldDef edc:cname="TRGEO" edc:nzwidth="0x1" edc:desc="Retrigger Output Event Enable"/>
            <edc:SFRFieldDef edc:cname="CNTEO" edc:nzwidth="0x1" edc:desc="Timer/counter Output Event Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TCINV0" edc:nzwidth="0x1" edc:desc="Inverted Event 0 Input Enable"/>
            <edc:SFRFieldDef edc:cname="TCINV1" edc:nzwidth="0x1" edc:desc="Inverted Event 1 Input Enable"/>
            <edc:SFRFieldDef edc:cname="TCEI0" edc:nzwidth="0x1" edc:desc="Timer/counter Event 0 Input Enable"/>
            <edc:SFRFieldDef edc:cname="TCEI1" edc:nzwidth="0x1" edc:desc="Timer/counter Event 1 Input Enable"/>
            <edc:SFRFieldDef edc:cname="MCEI0" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 0 Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="MCEI1" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 1 Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="MCEI2" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 2 Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="MCEI3" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 3 Event Input Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="MCEO0" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 0 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="MCEO1" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 1 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="MCEO2" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 2 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="MCEO3" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 3 Event Output Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="INTENCLR" edc:nzwidth="0x20" edc:access="------------nnnnnnnnnn------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFC0F" edc:_addr="0x42002C24">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRG" edc:nzwidth="0x1" edc:desc="Retrigger Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CNT" edc:nzwidth="0x1" edc:desc="Counter Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Error Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="UFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Update Fault Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Debug Fault Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULTA" edc:nzwidth="0x1" edc:desc="Recoverable Fault A Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULTB" edc:nzwidth="0x1" edc:desc="Recoverable Fault B Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULT0" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULT1" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC2" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 2 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC3" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 3 Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="INTENSET" edc:nzwidth="0x20" edc:access="------------nnnnnnnnnn------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFC0F" edc:_addr="0x42002C28">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRG" edc:nzwidth="0x1" edc:desc="Retrigger Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CNT" edc:nzwidth="0x1" edc:desc="Counter Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Error Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="UFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Update Fault Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Debug Fault Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULTA" edc:nzwidth="0x1" edc:desc="Recoverable Fault A Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULTB" edc:nzwidth="0x1" edc:desc="Recoverable Fault B Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULT0" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULT1" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC2" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 2 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC3" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 3 Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="INTFLAG" edc:nzwidth="0x20" edc:access="------------nnnnnnnnnn------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFC0F" edc:_addr="0x42002C2C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow"/>
            <edc:SFRFieldDef edc:cname="TRG" edc:nzwidth="0x1" edc:desc="Retrigger"/>
            <edc:SFRFieldDef edc:cname="CNT" edc:nzwidth="0x1" edc:desc="Counter"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Error"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="UFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Update Fault"/>
            <edc:SFRFieldDef edc:cname="DFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Debug Fault"/>
            <edc:SFRFieldDef edc:cname="FAULTA" edc:nzwidth="0x1" edc:desc="Recoverable Fault A"/>
            <edc:SFRFieldDef edc:cname="FAULTB" edc:nzwidth="0x1" edc:desc="Recoverable Fault B"/>
            <edc:SFRFieldDef edc:cname="FAULT0" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 0"/>
            <edc:SFRFieldDef edc:cname="FAULT1" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 1"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="Match or Capture 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="Match or Capture 1"/>
            <edc:SFRFieldDef edc:cname="MC2" edc:nzwidth="0x1" edc:desc="Match or Capture 2"/>
            <edc:SFRFieldDef edc:cname="MC3" edc:nzwidth="0x1" edc:desc="Match or Capture 3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="STATUS" edc:nzwidth="0x20" edc:access="----nnnn----nnnnnnnnnnnnn-nnnnnn" edc:por="00000000000000000000000000000001" edc:mclr="00000000000000000000000000000001" edc:impl="0xF0FFFBF" edc:_addr="0x42002C30">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="STOP" edc:nzwidth="0x1" edc:desc="Stop"/>
            <edc:SFRFieldDef edc:cname="IDX" edc:nzwidth="0x1" edc:desc="Ramp"/>
            <edc:SFRFieldDef edc:cname="UFS" edc:nzwidth="0x1" edc:desc="Non-recoverable Update Fault State"/>
            <edc:SFRFieldDef edc:cname="DFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Debug Fault State"/>
            <edc:SFRFieldDef edc:cname="SLAVE" edc:nzwidth="0x1" edc:desc="Slave"/>
            <edc:SFRFieldDef edc:cname="PATTBUFV" edc:nzwidth="0x1" edc:desc="Pattern Buffer Valid"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PERBUFV" edc:nzwidth="0x1" edc:desc="Period Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="FAULTAIN" edc:nzwidth="0x1" edc:desc="Recoverable Fault A Input"/>
            <edc:SFRFieldDef edc:cname="FAULTBIN" edc:nzwidth="0x1" edc:desc="Recoverable Fault B Input"/>
            <edc:SFRFieldDef edc:cname="FAULT0IN" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault0 Input"/>
            <edc:SFRFieldDef edc:cname="FAULT1IN" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault1 Input"/>
            <edc:SFRFieldDef edc:cname="FAULTA" edc:nzwidth="0x1" edc:desc="Recoverable Fault A State"/>
            <edc:SFRFieldDef edc:cname="FAULTB" edc:nzwidth="0x1" edc:desc="Recoverable Fault B State"/>
            <edc:SFRFieldDef edc:cname="FAULT0" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 0 State"/>
            <edc:SFRFieldDef edc:cname="FAULT1" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 1 State"/>
            <edc:SFRFieldDef edc:cname="CCBUFV0" edc:nzwidth="0x1" edc:desc="Compare Channel 0 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV1" edc:nzwidth="0x1" edc:desc="Compare Channel 1 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV2" edc:nzwidth="0x1" edc:desc="Compare Channel 2 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV3" edc:nzwidth="0x1" edc:desc="Compare Channel 3 Buffer Valid"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CMP0" edc:nzwidth="0x1" edc:desc="Compare Channel 0 Value"/>
            <edc:SFRFieldDef edc:cname="CMP1" edc:nzwidth="0x1" edc:desc="Compare Channel 1 Value"/>
            <edc:SFRFieldDef edc:cname="CMP2" edc:nzwidth="0x1" edc:desc="Compare Channel 2 Value"/>
            <edc:SFRFieldDef edc:cname="CMP3" edc:nzwidth="0x1" edc:desc="Compare Channel 3 Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="COUNT" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42002C34">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x18" edc:desc="Counter Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x14" edc:desc="Counter Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x13" edc:desc="Counter Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x12" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="PATT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0x42002C38">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="PGE0" edc:nzwidth="0x1" edc:desc="Pattern Generator 0 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE1" edc:nzwidth="0x1" edc:desc="Pattern Generator 1 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE2" edc:nzwidth="0x1" edc:desc="Pattern Generator 2 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE3" edc:nzwidth="0x1" edc:desc="Pattern Generator 3 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE4" edc:nzwidth="0x1" edc:desc="Pattern Generator 4 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE5" edc:nzwidth="0x1" edc:desc="Pattern Generator 5 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE6" edc:nzwidth="0x1" edc:desc="Pattern Generator 6 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE7" edc:nzwidth="0x1" edc:desc="Pattern Generator 7 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGV0" edc:nzwidth="0x1" edc:desc="Pattern Generator 0 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV1" edc:nzwidth="0x1" edc:desc="Pattern Generator 1 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV2" edc:nzwidth="0x1" edc:desc="Pattern Generator 2 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV3" edc:nzwidth="0x1" edc:desc="Pattern Generator 3 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV4" edc:nzwidth="0x1" edc:desc="Pattern Generator 4 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV5" edc:nzwidth="0x1" edc:desc="Pattern Generator 5 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV6" edc:nzwidth="0x1" edc:desc="Pattern Generator 6 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV7" edc:nzwidth="0x1" edc:desc="Pattern Generator 7 Output Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x42002C3A"/>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="WAVE" edc:nzwidth="0x20" edc:access="----nnnn----nnnn----nnnnnnnn-nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF0F0FF7" edc:_addr="0x42002C3C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="WAVEGEN" edc:nzwidth="0x3" edc:desc="Waveform Generation">
              <edc:SFRFieldSemantic edc:cname="NFRQ" edc:desc="Normal frequency" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MFRQ" edc:desc="Match frequency" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="NPWM" edc:desc="Normal PWM" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="DPWM" edc:desc="Dual compare PWM" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="DSCRITICAL" edc:desc="Dual-slope critical" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="DSBOTTOM" edc:desc="Dual-slope with interrupt/event condition when COUNT reaches ZERO" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="DSBOTH" edc:desc="Dual-slope with interrupt/event condition when COUNT reaches ZERO or TOP" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="DSTOP" edc:desc="Dual-slope with interrupt/event condition when COUNT reaches TOP" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RAMP" edc:nzwidth="0x3" edc:desc="Ramp Mode">
              <edc:SFRFieldSemantic edc:cname="RAMP1" edc:desc="RAMP1 operation" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RAMP2A" edc:desc="Alternative RAMP2 operation" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="RAMP2" edc:desc="RAMP2 operation" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="RAMP2C" edc:desc="Critical RAMP2 operation" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="RAMP2CS" edc:desc="Critical Swapped RAMP2 operation" edc:when="(field &amp; 0x7) == 4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CIPEREN" edc:nzwidth="0x1" edc:desc="Circular period Enable"/>
            <edc:SFRFieldDef edc:cname="CICCEN0" edc:nzwidth="0x1" edc:desc="Circular Channel 0 Enable"/>
            <edc:SFRFieldDef edc:cname="CICCEN1" edc:nzwidth="0x1" edc:desc="Circular Channel 1 Enable"/>
            <edc:SFRFieldDef edc:cname="CICCEN2" edc:nzwidth="0x1" edc:desc="Circular Channel 2 Enable"/>
            <edc:SFRFieldDef edc:cname="CICCEN3" edc:nzwidth="0x1" edc:desc="Circular Channel 3 Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="POL0" edc:nzwidth="0x1" edc:desc="Channel 0 Polarity">
              <edc:SFRFieldSemantic edc:cname="SINGLESLOPEPOL0" edc:desc="Single-slope PWM waveform generation Channel Polarity 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SINGLESLOPEPOL1" edc:desc="Single-slope PWM waveform generation Channel Polarity 1" edc:when="(field &amp; 0x1) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DUALSLOPEPOL0" edc:desc="Dual-slope PWM waveform generation Channel Polarity 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DUALSLOPEPOL1" edc:desc="Dual-slope PWM waveform generation Channel Polarity 1" edc:when="(field &amp; 0x1) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DUALCOMPAREPOL0" edc:desc="Dual Compare PWM waveform generation Channel Polarity 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DUALCOMPAREPOL1" edc:desc="Dual Compare PWM waveform generation Channel Polarity 1" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="POL1" edc:nzwidth="0x1" edc:desc="Channel 1 Polarity">
              <edc:SFRFieldSemantic edc:cname="SINGLESLOPEPOL0" edc:desc="Single-slope PWM waveform generation Channel Polarity 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SINGLESLOPEPOL1" edc:desc="Single-slope PWM waveform generation Channel Polarity 1" edc:when="(field &amp; 0x1) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DUALSLOPEPOL0" edc:desc="Dual-slope PWM waveform generation Channel Polarity 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DUALSLOPEPOL1" edc:desc="Dual-slope PWM waveform generation Channel Polarity 1" edc:when="(field &amp; 0x1) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DUALCOMPAREPOL0" edc:desc="Dual Compare PWM waveform generation Channel Polarity 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DUALCOMPAREPOL1" edc:desc="Dual Compare PWM waveform generation Channel Polarity 1" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="POL2" edc:nzwidth="0x1" edc:desc="Channel 2 Polarity">
              <edc:SFRFieldSemantic edc:cname="SINGLESLOPEPOL0" edc:desc="Single-slope PWM waveform generation Channel Polarity 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SINGLESLOPEPOL1" edc:desc="Single-slope PWM waveform generation Channel Polarity 1" edc:when="(field &amp; 0x1) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DUALSLOPEPOL0" edc:desc="Dual-slope PWM waveform generation Channel Polarity 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DUALSLOPEPOL1" edc:desc="Dual-slope PWM waveform generation Channel Polarity 1" edc:when="(field &amp; 0x1) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DUALCOMPAREPOL0" edc:desc="Dual Compare PWM waveform generation Channel Polarity 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DUALCOMPAREPOL1" edc:desc="Dual Compare PWM waveform generation Channel Polarity 1" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="POL3" edc:nzwidth="0x1" edc:desc="Channel 3 Polarity">
              <edc:SFRFieldSemantic edc:cname="SINGLESLOPEPOL0" edc:desc="Single-slope PWM waveform generation Channel Polarity 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SINGLESLOPEPOL1" edc:desc="Single-slope PWM waveform generation Channel Polarity 1" edc:when="(field &amp; 0x1) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DUALSLOPEPOL0" edc:desc="Dual-slope PWM waveform generation Channel Polarity 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DUALSLOPEPOL1" edc:desc="Dual-slope PWM waveform generation Channel Polarity 1" edc:when="(field &amp; 0x1) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DUALCOMPAREPOL0" edc:desc="Dual Compare PWM waveform generation Channel Polarity 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DUALCOMPAREPOL1" edc:desc="Dual Compare PWM waveform generation Channel Polarity 1" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="SWAP0" edc:nzwidth="0x1" edc:desc="Swap DTI Output Pair 0"/>
            <edc:SFRFieldDef edc:cname="SWAP1" edc:nzwidth="0x1" edc:desc="Swap DTI Output Pair 1"/>
            <edc:SFRFieldDef edc:cname="SWAP2" edc:nzwidth="0x1" edc:desc="Swap DTI Output Pair 2"/>
            <edc:SFRFieldDef edc:cname="SWAP3" edc:nzwidth="0x1" edc:desc="Swap DTI Output Pair 3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="PER" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="11111111111111111111111111111111" edc:mclr="11111111111111111111111111111111" edc:impl="0xFFFFFF" edc:_addr="0x42002C40">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x18" edc:desc="Period Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x14" edc:desc="Period Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x13" edc:desc="Period Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x12" edc:desc="Period Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="CC0" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42002C44">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="CC1" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42002C48">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="CC2" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42002C4C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="CC3" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42002C50">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x10" edc:_addr="0x42002C54"/>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="PATTBUF" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0x42002C64">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="PGEB0" edc:nzwidth="0x1" edc:desc="Pattern Generation 0 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB1" edc:nzwidth="0x1" edc:desc="Pattern Generation 1 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB2" edc:nzwidth="0x1" edc:desc="Pattern Generation 2 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB3" edc:nzwidth="0x1" edc:desc="Pattern Generation 3 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB4" edc:nzwidth="0x1" edc:desc="Pattern Generation 4 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB5" edc:nzwidth="0x1" edc:desc="Pattern Generation 5 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB6" edc:nzwidth="0x1" edc:desc="Pattern Generation 6 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB7" edc:nzwidth="0x1" edc:desc="Pattern Generation 7 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB0" edc:nzwidth="0x1" edc:desc="Pattern Generation 0 Output Value Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB1" edc:nzwidth="0x1" edc:desc="Pattern Generation 1 Output Value Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB2" edc:nzwidth="0x1" edc:desc="Pattern Generation 2 Output Value Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB3" edc:nzwidth="0x1" edc:desc="Pattern Generation 3 Output Value Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB4" edc:nzwidth="0x1" edc:desc="Pattern Generation 4 Output Value Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB5" edc:nzwidth="0x1" edc:desc="Pattern Generation 5 Output Value Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB6" edc:nzwidth="0x1" edc:desc="Pattern Generation 6 Output Value Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB7" edc:nzwidth="0x1" edc:desc="Pattern Generation 7 Output Value Buffer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x6" edc:_addr="0x42002C66"/>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="PERBUF" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="11111111111111111111111111111111" edc:mclr="11111111111111111111111111111111" edc:impl="0xFFFFFF" edc:_addr="0x42002C6C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x18" edc:desc="Period Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x14" edc:desc="Period Buffer Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x13" edc:desc="Period Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x12" edc:desc="Period Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="CCBUF0" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42002C70">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="CCBUF1" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42002C74">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="CCBUF2" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42002C78">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="CCBUF3" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42002C7C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x380" edc:_addr="0x42002C80"/>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="----nnnnn------nnnnnnnnn-nn---nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF81FF63" edc:_addr="0x42003000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RESOLUTION" edc:nzwidth="0x2" edc:desc="Enhanced Resolution">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Dithering is disabled" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DITH4" edc:desc="Dithering is done every 16 PWM frames" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DITH5" edc:desc="Dithering is done every 32 PWM frames" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="DITH6" edc:desc="Dithering is done every 64 PWM frames" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PRESCALER" edc:nzwidth="0x3" edc:desc="Prescaler">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="No division" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Divide by 2" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="Divide by 4" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="Divide by 8" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="Divide by 16" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="Divide by 64" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="Divide by 256" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="Divide by 1024" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:SFRFieldDef edc:cname="PRESCSYNC" edc:nzwidth="0x2" edc:desc="Prescaler and Counter Synchronization Selection">
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="Reload or reset counter on next GCLK" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PRESC" edc:desc="Reload or reset counter on next prescaler clock" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="RESYNC" edc:desc="Reload or reset counter on next GCLK and reset prescaler counter" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ALOCK" edc:nzwidth="0x1" edc:desc="Auto Lock"/>
            <edc:SFRFieldDef edc:cname="MSYNC" edc:nzwidth="0x1" edc:desc="Master Synchronization (only for TCC Slave Instance)"/>
            <edc:SFRFieldDef edc:cname="FCYCLE" edc:nzwidth="0x1" edc:desc="Full Cycle"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="DMAOS" edc:nzwidth="0x1" edc:desc="DMA One-shot Trigger Mode"/>
            <edc:SFRFieldDef edc:cname="CPTEN0" edc:nzwidth="0x1" edc:desc="Capture Channel 0 Enable"/>
            <edc:SFRFieldDef edc:cname="CPTEN1" edc:nzwidth="0x1" edc:desc="Capture Channel 1 Enable"/>
            <edc:SFRFieldDef edc:cname="CPTEN2" edc:nzwidth="0x1" edc:desc="Capture Channel 2 Enable"/>
            <edc:SFRFieldDef edc:cname="CPTEN3" edc:nzwidth="0x1" edc:desc="Capture Channel 3 Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="CTRLBCLR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x42003004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Counter Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:nzwidth="0x1" edc:desc="One-Shot"/>
            <edc:SFRFieldDef edc:cname="IDXCMD" edc:nzwidth="0x2" edc:desc="Ramp Index Command">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Command disabled: Index toggles between cycles A and B" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set index: cycle B will be forced in the next cycle" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear index: cycle A will be forced in the next cycle" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="HOLD" edc:desc="Hold index: the next cycle will be the same as the current cycle" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="TCC Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Clear start, restart or retrigger" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Force stop" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update or double buffered registers" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force COUNT read synchronization" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="DMAOS" edc:desc="One-shot DMA trigger" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="CTRLBSET" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x42003005">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Counter Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:nzwidth="0x1" edc:desc="One-Shot"/>
            <edc:SFRFieldDef edc:cname="IDXCMD" edc:nzwidth="0x2" edc:desc="Ramp Index Command">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Command disabled: Index toggles between cycles A and B" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set index: cycle B will be forced in the next cycle" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear index: cycle A will be forced in the next cycle" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="HOLD" edc:desc="Hold index: the next cycle will be the same as the current cycle" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="TCC Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Clear start, restart or retrigger" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Force stop" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update or double buffered registers" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force COUNT read synchronization" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="DMAOS" edc:desc="One-shot DMA trigger" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x42003006"/>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="--------------------rrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFF" edc:_addr="0x42003008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Swrst Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="Ctrlb Busy"/>
            <edc:SFRFieldDef edc:cname="STATUS" edc:nzwidth="0x1" edc:desc="Status Busy"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x1" edc:desc="Count Busy"/>
            <edc:SFRFieldDef edc:cname="PATT" edc:nzwidth="0x1" edc:desc="Pattern Busy"/>
            <edc:SFRFieldDef edc:cname="WAVE" edc:nzwidth="0x1" edc:desc="Wave Busy"/>
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x1" edc:desc="Period Busy"/>
            <edc:SFRFieldDef edc:cname="CC0" edc:nzwidth="0x1" edc:desc="Compare Channel 0 Busy"/>
            <edc:SFRFieldDef edc:cname="CC1" edc:nzwidth="0x1" edc:desc="Compare Channel 1 Busy"/>
            <edc:SFRFieldDef edc:cname="CC2" edc:nzwidth="0x1" edc:desc="Compare Channel 2 Busy"/>
            <edc:SFRFieldDef edc:cname="CC3" edc:nzwidth="0x1" edc:desc="Compare Channel 3 Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="FCTRLA" edc:nzwidth="0x20" edc:access="----nnnnnnnnnnnnnnnnnnnnnnnnn-nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFFB" edc:_addr="0x4200300C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="SRC" edc:nzwidth="0x2" edc:desc="Fault A Source">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Fault input disabled" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="MCEx (x=0,1) event input" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="INVERT" edc:desc="Inverted MCEx (x=0,1) event input" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="ALTFAULT" edc:desc="Alternate fault (A or B) state at the end of the previous period" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="KEEP" edc:nzwidth="0x1" edc:desc="Fault A Keeper"/>
            <edc:SFRFieldDef edc:cname="QUAL" edc:nzwidth="0x1" edc:desc="Fault A Qualification"/>
            <edc:SFRFieldDef edc:cname="BLANK" edc:nzwidth="0x2" edc:desc="Fault A Blanking Mode">
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="Blanking applied from start of the ramp" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Blanking applied from rising edge of the output waveform" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Blanking applied from falling edge of the output waveform" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Blanking applied from each toggle of the output waveform" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RESTART" edc:nzwidth="0x1" edc:desc="Fault A Restart"/>
            <edc:SFRFieldDef edc:cname="HALT" edc:nzwidth="0x2" edc:desc="Fault A Halt Mode">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Halt action disabled" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HW" edc:desc="Hardware halt action" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="SW" edc:desc="Software halt action" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="NR" edc:desc="Non-recoverable fault" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CHSEL" edc:nzwidth="0x2" edc:desc="Fault A Capture Channel">
              <edc:SFRFieldSemantic edc:cname="CC0" edc:desc="Capture value stored in channel 0" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="CC1" edc:desc="Capture value stored in channel 1" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CC2" edc:desc="Capture value stored in channel 2" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="CC3" edc:desc="Capture value stored in channel 3" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CAPTURE" edc:nzwidth="0x3" edc:desc="Fault A Capture Action">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="No capture" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="CAPT" edc:desc="Capture on fault" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMIN" edc:desc="Minimum capture" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMAX" edc:desc="Maximum capture" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="LOCMIN" edc:desc="Minimum local detection" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="LOCMAX" edc:desc="Maximum local detection" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="DERIV0" edc:desc="Minimum and maximum local detection" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMARK" edc:desc="Capture with ramp index as MSB value" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BLANKPRESC" edc:nzwidth="0x1" edc:desc="Fault A Blanking Prescaler"/>
            <edc:SFRFieldDef edc:cname="BLANKVAL" edc:nzwidth="0x8" edc:desc="Fault A Blanking Time"/>
            <edc:SFRFieldDef edc:cname="FILTERVAL" edc:nzwidth="0x4" edc:desc="Fault A Filter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="FCTRLB" edc:nzwidth="0x20" edc:access="----nnnnnnnnnnnnnnnnnnnnnnnnn-nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFFB" edc:_addr="0x42003010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="SRC" edc:nzwidth="0x2" edc:desc="Fault B Source">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Fault input disabled" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="MCEx (x=0,1) event input" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="INVERT" edc:desc="Inverted MCEx (x=0,1) event input" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="ALTFAULT" edc:desc="Alternate fault (A or B) state at the end of the previous period" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="KEEP" edc:nzwidth="0x1" edc:desc="Fault B Keeper"/>
            <edc:SFRFieldDef edc:cname="QUAL" edc:nzwidth="0x1" edc:desc="Fault B Qualification"/>
            <edc:SFRFieldDef edc:cname="BLANK" edc:nzwidth="0x2" edc:desc="Fault B Blanking Mode">
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="Blanking applied from start of the ramp" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Blanking applied from rising edge of the output waveform" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Blanking applied from falling edge of the output waveform" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Blanking applied from each toggle of the output waveform" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RESTART" edc:nzwidth="0x1" edc:desc="Fault B Restart"/>
            <edc:SFRFieldDef edc:cname="HALT" edc:nzwidth="0x2" edc:desc="Fault B Halt Mode">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Halt action disabled" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HW" edc:desc="Hardware halt action" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="SW" edc:desc="Software halt action" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="NR" edc:desc="Non-recoverable fault" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CHSEL" edc:nzwidth="0x2" edc:desc="Fault B Capture Channel">
              <edc:SFRFieldSemantic edc:cname="CC0" edc:desc="Capture value stored in channel 0" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="CC1" edc:desc="Capture value stored in channel 1" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CC2" edc:desc="Capture value stored in channel 2" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="CC3" edc:desc="Capture value stored in channel 3" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CAPTURE" edc:nzwidth="0x3" edc:desc="Fault B Capture Action">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="No capture" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="CAPT" edc:desc="Capture on fault" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMIN" edc:desc="Minimum capture" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMAX" edc:desc="Maximum capture" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="LOCMIN" edc:desc="Minimum local detection" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="LOCMAX" edc:desc="Maximum local detection" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="DERIV0" edc:desc="Minimum and maximum local detection" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMARK" edc:desc="Capture with ramp index as MSB value" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BLANKPRESC" edc:nzwidth="0x1" edc:desc="Fault B Blanking Prescaler"/>
            <edc:SFRFieldDef edc:cname="BLANKVAL" edc:nzwidth="0x8" edc:desc="Fault B Blanking Time"/>
            <edc:SFRFieldDef edc:cname="FILTERVAL" edc:nzwidth="0x4" edc:desc="Fault B Filter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="WEXCTRL" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnn----nnnn------nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF0F03" edc:_addr="0x42003014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="OTMX" edc:nzwidth="0x2" edc:desc="Output Matrix"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="DTIEN0" edc:nzwidth="0x1" edc:desc="Dead-time Insertion Generator 0 Enable"/>
            <edc:SFRFieldDef edc:cname="DTIEN1" edc:nzwidth="0x1" edc:desc="Dead-time Insertion Generator 1 Enable"/>
            <edc:SFRFieldDef edc:cname="DTIEN2" edc:nzwidth="0x1" edc:desc="Dead-time Insertion Generator 2 Enable"/>
            <edc:SFRFieldDef edc:cname="DTIEN3" edc:nzwidth="0x1" edc:desc="Dead-time Insertion Generator 3 Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="DTLS" edc:nzwidth="0x8" edc:desc="Dead-time Low Side Outputs Value"/>
            <edc:SFRFieldDef edc:cname="DTHS" edc:nzwidth="0x8" edc:desc="Dead-time High Side Outputs Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="DRVCTRL" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42003018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="NRE0" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 0 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE1" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 1 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE2" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 2 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE3" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 3 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE4" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 4 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE5" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 5 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE6" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 6 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE7" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 7 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRV0" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 0 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV1" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 1 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV2" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 2 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV3" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 3 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV4" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 4 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV5" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 5 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV6" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 6 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV7" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 7 Output Value"/>
            <edc:SFRFieldDef edc:cname="INVEN0" edc:nzwidth="0x1" edc:desc="Output Waveform 0 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN1" edc:nzwidth="0x1" edc:desc="Output Waveform 1 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN2" edc:nzwidth="0x1" edc:desc="Output Waveform 2 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN3" edc:nzwidth="0x1" edc:desc="Output Waveform 3 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN4" edc:nzwidth="0x1" edc:desc="Output Waveform 4 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN5" edc:nzwidth="0x1" edc:desc="Output Waveform 5 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN6" edc:nzwidth="0x1" edc:desc="Output Waveform 6 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN7" edc:nzwidth="0x1" edc:desc="Output Waveform 7 Inversion"/>
            <edc:SFRFieldDef edc:cname="FILTERVAL0" edc:nzwidth="0x4" edc:desc="Non-Recoverable Fault Input 0 Filter Value"/>
            <edc:SFRFieldDef edc:cname="FILTERVAL1" edc:nzwidth="0x4" edc:desc="Non-Recoverable Fault Input 1 Filter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x4200301C"/>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-----n-n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x5" edc:_addr="0x4200301E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Running Mode"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FDDBD" edc:nzwidth="0x1" edc:desc="Fault Detection on Debug Break Detection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x4200301F"/>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="EVCTRL" edc:nzwidth="0x20" edc:access="----nnnn----nnnnnnnn-nnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF0FF7FF" edc:_addr="0x42003020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="EVACT0" edc:nzwidth="0x3" edc:desc="Timer/counter Input Event0 Action">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Event action disabled" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Start, restart or re-trigger counter on event" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="COUNTEV" edc:desc="Count on event" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="Start counter on event" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="INC" edc:desc="Increment counter on event" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="COUNT" edc:desc="Count on active state of asynchronous event" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="STAMP" edc:desc="Stamp capture" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FAULT" edc:desc="Non-recoverable fault" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EVACT1" edc:nzwidth="0x3" edc:desc="Timer/counter Input Event1 Action">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Event action disabled" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Re-trigger counter on event" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DIR" edc:desc="Direction control" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Stop counter on event" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="DEC" edc:desc="Decrement counter on event" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="PWP" edc:desc="Period capture value in CC1 register, pulse width capture value in CC0 register" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FAULT" edc:desc="Non-recoverable fault" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CNTSEL" edc:nzwidth="0x2" edc:desc="Timer/counter Output Event Mode">
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="An interrupt/event is generated when a new counter cycle starts" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="END" edc:desc="An interrupt/event is generated when a counter cycle ends" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="BOUNDARY" edc:desc="An interrupt/event is generated when a new counter cycle starts or a counter cycle ends" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="OVFEO" edc:nzwidth="0x1" edc:desc="Overflow/Underflow Output Event Enable"/>
            <edc:SFRFieldDef edc:cname="TRGEO" edc:nzwidth="0x1" edc:desc="Retrigger Output Event Enable"/>
            <edc:SFRFieldDef edc:cname="CNTEO" edc:nzwidth="0x1" edc:desc="Timer/counter Output Event Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TCINV0" edc:nzwidth="0x1" edc:desc="Inverted Event 0 Input Enable"/>
            <edc:SFRFieldDef edc:cname="TCINV1" edc:nzwidth="0x1" edc:desc="Inverted Event 1 Input Enable"/>
            <edc:SFRFieldDef edc:cname="TCEI0" edc:nzwidth="0x1" edc:desc="Timer/counter Event 0 Input Enable"/>
            <edc:SFRFieldDef edc:cname="TCEI1" edc:nzwidth="0x1" edc:desc="Timer/counter Event 1 Input Enable"/>
            <edc:SFRFieldDef edc:cname="MCEI0" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 0 Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="MCEI1" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 1 Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="MCEI2" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 2 Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="MCEI3" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 3 Event Input Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="MCEO0" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 0 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="MCEO1" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 1 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="MCEO2" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 2 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="MCEO3" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 3 Event Output Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="INTENCLR" edc:nzwidth="0x20" edc:access="------------nnnnnnnnnn------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFC0F" edc:_addr="0x42003024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRG" edc:nzwidth="0x1" edc:desc="Retrigger Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CNT" edc:nzwidth="0x1" edc:desc="Counter Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Error Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="UFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Update Fault Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Debug Fault Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULTA" edc:nzwidth="0x1" edc:desc="Recoverable Fault A Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULTB" edc:nzwidth="0x1" edc:desc="Recoverable Fault B Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULT0" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULT1" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC2" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 2 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC3" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 3 Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="INTENSET" edc:nzwidth="0x20" edc:access="------------nnnnnnnnnn------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFC0F" edc:_addr="0x42003028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRG" edc:nzwidth="0x1" edc:desc="Retrigger Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CNT" edc:nzwidth="0x1" edc:desc="Counter Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Error Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="UFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Update Fault Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Debug Fault Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULTA" edc:nzwidth="0x1" edc:desc="Recoverable Fault A Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULTB" edc:nzwidth="0x1" edc:desc="Recoverable Fault B Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULT0" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULT1" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC2" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 2 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC3" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 3 Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="INTFLAG" edc:nzwidth="0x20" edc:access="------------nnnnnnnnnn------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFC0F" edc:_addr="0x4200302C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow"/>
            <edc:SFRFieldDef edc:cname="TRG" edc:nzwidth="0x1" edc:desc="Retrigger"/>
            <edc:SFRFieldDef edc:cname="CNT" edc:nzwidth="0x1" edc:desc="Counter"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Error"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="UFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Update Fault"/>
            <edc:SFRFieldDef edc:cname="DFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Debug Fault"/>
            <edc:SFRFieldDef edc:cname="FAULTA" edc:nzwidth="0x1" edc:desc="Recoverable Fault A"/>
            <edc:SFRFieldDef edc:cname="FAULTB" edc:nzwidth="0x1" edc:desc="Recoverable Fault B"/>
            <edc:SFRFieldDef edc:cname="FAULT0" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 0"/>
            <edc:SFRFieldDef edc:cname="FAULT1" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 1"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="Match or Capture 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="Match or Capture 1"/>
            <edc:SFRFieldDef edc:cname="MC2" edc:nzwidth="0x1" edc:desc="Match or Capture 2"/>
            <edc:SFRFieldDef edc:cname="MC3" edc:nzwidth="0x1" edc:desc="Match or Capture 3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="STATUS" edc:nzwidth="0x20" edc:access="----nnnn----nnnnnnnnnnnnn-nnnnnn" edc:por="00000000000000000000000000000001" edc:mclr="00000000000000000000000000000001" edc:impl="0xF0FFFBF" edc:_addr="0x42003030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="STOP" edc:nzwidth="0x1" edc:desc="Stop"/>
            <edc:SFRFieldDef edc:cname="IDX" edc:nzwidth="0x1" edc:desc="Ramp"/>
            <edc:SFRFieldDef edc:cname="UFS" edc:nzwidth="0x1" edc:desc="Non-recoverable Update Fault State"/>
            <edc:SFRFieldDef edc:cname="DFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Debug Fault State"/>
            <edc:SFRFieldDef edc:cname="SLAVE" edc:nzwidth="0x1" edc:desc="Slave"/>
            <edc:SFRFieldDef edc:cname="PATTBUFV" edc:nzwidth="0x1" edc:desc="Pattern Buffer Valid"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PERBUFV" edc:nzwidth="0x1" edc:desc="Period Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="FAULTAIN" edc:nzwidth="0x1" edc:desc="Recoverable Fault A Input"/>
            <edc:SFRFieldDef edc:cname="FAULTBIN" edc:nzwidth="0x1" edc:desc="Recoverable Fault B Input"/>
            <edc:SFRFieldDef edc:cname="FAULT0IN" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault0 Input"/>
            <edc:SFRFieldDef edc:cname="FAULT1IN" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault1 Input"/>
            <edc:SFRFieldDef edc:cname="FAULTA" edc:nzwidth="0x1" edc:desc="Recoverable Fault A State"/>
            <edc:SFRFieldDef edc:cname="FAULTB" edc:nzwidth="0x1" edc:desc="Recoverable Fault B State"/>
            <edc:SFRFieldDef edc:cname="FAULT0" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 0 State"/>
            <edc:SFRFieldDef edc:cname="FAULT1" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 1 State"/>
            <edc:SFRFieldDef edc:cname="CCBUFV0" edc:nzwidth="0x1" edc:desc="Compare Channel 0 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV1" edc:nzwidth="0x1" edc:desc="Compare Channel 1 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV2" edc:nzwidth="0x1" edc:desc="Compare Channel 2 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV3" edc:nzwidth="0x1" edc:desc="Compare Channel 3 Buffer Valid"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CMP0" edc:nzwidth="0x1" edc:desc="Compare Channel 0 Value"/>
            <edc:SFRFieldDef edc:cname="CMP1" edc:nzwidth="0x1" edc:desc="Compare Channel 1 Value"/>
            <edc:SFRFieldDef edc:cname="CMP2" edc:nzwidth="0x1" edc:desc="Compare Channel 2 Value"/>
            <edc:SFRFieldDef edc:cname="CMP3" edc:nzwidth="0x1" edc:desc="Compare Channel 3 Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="COUNT" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42003034">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x18" edc:desc="Counter Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x14" edc:desc="Counter Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x13" edc:desc="Counter Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x12" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="PATT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0x42003038">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="PGE0" edc:nzwidth="0x1" edc:desc="Pattern Generator 0 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE1" edc:nzwidth="0x1" edc:desc="Pattern Generator 1 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE2" edc:nzwidth="0x1" edc:desc="Pattern Generator 2 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE3" edc:nzwidth="0x1" edc:desc="Pattern Generator 3 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE4" edc:nzwidth="0x1" edc:desc="Pattern Generator 4 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE5" edc:nzwidth="0x1" edc:desc="Pattern Generator 5 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE6" edc:nzwidth="0x1" edc:desc="Pattern Generator 6 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE7" edc:nzwidth="0x1" edc:desc="Pattern Generator 7 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGV0" edc:nzwidth="0x1" edc:desc="Pattern Generator 0 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV1" edc:nzwidth="0x1" edc:desc="Pattern Generator 1 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV2" edc:nzwidth="0x1" edc:desc="Pattern Generator 2 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV3" edc:nzwidth="0x1" edc:desc="Pattern Generator 3 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV4" edc:nzwidth="0x1" edc:desc="Pattern Generator 4 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV5" edc:nzwidth="0x1" edc:desc="Pattern Generator 5 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV6" edc:nzwidth="0x1" edc:desc="Pattern Generator 6 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV7" edc:nzwidth="0x1" edc:desc="Pattern Generator 7 Output Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x4200303A"/>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="WAVE" edc:nzwidth="0x20" edc:access="----nnnn----nnnn----nnnnnnnn-nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF0F0FF7" edc:_addr="0x4200303C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="WAVEGEN" edc:nzwidth="0x3" edc:desc="Waveform Generation">
              <edc:SFRFieldSemantic edc:cname="NFRQ" edc:desc="Normal frequency" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MFRQ" edc:desc="Match frequency" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="NPWM" edc:desc="Normal PWM" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="DPWM" edc:desc="Dual compare PWM" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="DSCRITICAL" edc:desc="Dual-slope critical" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="DSBOTTOM" edc:desc="Dual-slope with interrupt/event condition when COUNT reaches ZERO" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="DSBOTH" edc:desc="Dual-slope with interrupt/event condition when COUNT reaches ZERO or TOP" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="DSTOP" edc:desc="Dual-slope with interrupt/event condition when COUNT reaches TOP" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RAMP" edc:nzwidth="0x3" edc:desc="Ramp Mode">
              <edc:SFRFieldSemantic edc:cname="RAMP1" edc:desc="RAMP1 operation" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RAMP2A" edc:desc="Alternative RAMP2 operation" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="RAMP2" edc:desc="RAMP2 operation" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="RAMP2C" edc:desc="Critical RAMP2 operation" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="RAMP2CS" edc:desc="Critical Swapped RAMP2 operation" edc:when="(field &amp; 0x7) == 4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CIPEREN" edc:nzwidth="0x1" edc:desc="Circular period Enable"/>
            <edc:SFRFieldDef edc:cname="CICCEN0" edc:nzwidth="0x1" edc:desc="Circular Channel 0 Enable"/>
            <edc:SFRFieldDef edc:cname="CICCEN1" edc:nzwidth="0x1" edc:desc="Circular Channel 1 Enable"/>
            <edc:SFRFieldDef edc:cname="CICCEN2" edc:nzwidth="0x1" edc:desc="Circular Channel 2 Enable"/>
            <edc:SFRFieldDef edc:cname="CICCEN3" edc:nzwidth="0x1" edc:desc="Circular Channel 3 Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="POL0" edc:nzwidth="0x1" edc:desc="Channel 0 Polarity">
              <edc:SFRFieldSemantic edc:cname="SINGLESLOPEPOL0" edc:desc="Single-slope PWM waveform generation Channel Polarity 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SINGLESLOPEPOL1" edc:desc="Single-slope PWM waveform generation Channel Polarity 1" edc:when="(field &amp; 0x1) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DUALSLOPEPOL0" edc:desc="Dual-slope PWM waveform generation Channel Polarity 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DUALSLOPEPOL1" edc:desc="Dual-slope PWM waveform generation Channel Polarity 1" edc:when="(field &amp; 0x1) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DUALCOMPAREPOL0" edc:desc="Dual Compare PWM waveform generation Channel Polarity 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DUALCOMPAREPOL1" edc:desc="Dual Compare PWM waveform generation Channel Polarity 1" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="POL1" edc:nzwidth="0x1" edc:desc="Channel 1 Polarity">
              <edc:SFRFieldSemantic edc:cname="SINGLESLOPEPOL0" edc:desc="Single-slope PWM waveform generation Channel Polarity 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SINGLESLOPEPOL1" edc:desc="Single-slope PWM waveform generation Channel Polarity 1" edc:when="(field &amp; 0x1) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DUALSLOPEPOL0" edc:desc="Dual-slope PWM waveform generation Channel Polarity 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DUALSLOPEPOL1" edc:desc="Dual-slope PWM waveform generation Channel Polarity 1" edc:when="(field &amp; 0x1) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DUALCOMPAREPOL0" edc:desc="Dual Compare PWM waveform generation Channel Polarity 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DUALCOMPAREPOL1" edc:desc="Dual Compare PWM waveform generation Channel Polarity 1" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="POL2" edc:nzwidth="0x1" edc:desc="Channel 2 Polarity">
              <edc:SFRFieldSemantic edc:cname="SINGLESLOPEPOL0" edc:desc="Single-slope PWM waveform generation Channel Polarity 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SINGLESLOPEPOL1" edc:desc="Single-slope PWM waveform generation Channel Polarity 1" edc:when="(field &amp; 0x1) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DUALSLOPEPOL0" edc:desc="Dual-slope PWM waveform generation Channel Polarity 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DUALSLOPEPOL1" edc:desc="Dual-slope PWM waveform generation Channel Polarity 1" edc:when="(field &amp; 0x1) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DUALCOMPAREPOL0" edc:desc="Dual Compare PWM waveform generation Channel Polarity 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DUALCOMPAREPOL1" edc:desc="Dual Compare PWM waveform generation Channel Polarity 1" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="POL3" edc:nzwidth="0x1" edc:desc="Channel 3 Polarity">
              <edc:SFRFieldSemantic edc:cname="SINGLESLOPEPOL0" edc:desc="Single-slope PWM waveform generation Channel Polarity 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SINGLESLOPEPOL1" edc:desc="Single-slope PWM waveform generation Channel Polarity 1" edc:when="(field &amp; 0x1) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DUALSLOPEPOL0" edc:desc="Dual-slope PWM waveform generation Channel Polarity 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DUALSLOPEPOL1" edc:desc="Dual-slope PWM waveform generation Channel Polarity 1" edc:when="(field &amp; 0x1) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DUALCOMPAREPOL0" edc:desc="Dual Compare PWM waveform generation Channel Polarity 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DUALCOMPAREPOL1" edc:desc="Dual Compare PWM waveform generation Channel Polarity 1" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="SWAP0" edc:nzwidth="0x1" edc:desc="Swap DTI Output Pair 0"/>
            <edc:SFRFieldDef edc:cname="SWAP1" edc:nzwidth="0x1" edc:desc="Swap DTI Output Pair 1"/>
            <edc:SFRFieldDef edc:cname="SWAP2" edc:nzwidth="0x1" edc:desc="Swap DTI Output Pair 2"/>
            <edc:SFRFieldDef edc:cname="SWAP3" edc:nzwidth="0x1" edc:desc="Swap DTI Output Pair 3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="PER" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="11111111111111111111111111111111" edc:mclr="11111111111111111111111111111111" edc:impl="0xFFFFFF" edc:_addr="0x42003040">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x18" edc:desc="Period Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x14" edc:desc="Period Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x13" edc:desc="Period Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x12" edc:desc="Period Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="CC0" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42003044">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="CC1" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42003048">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="CC2" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x4200304C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="CC3" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42003050">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x10" edc:_addr="0x42003054"/>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="PATTBUF" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0x42003064">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="PGEB0" edc:nzwidth="0x1" edc:desc="Pattern Generation 0 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB1" edc:nzwidth="0x1" edc:desc="Pattern Generation 1 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB2" edc:nzwidth="0x1" edc:desc="Pattern Generation 2 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB3" edc:nzwidth="0x1" edc:desc="Pattern Generation 3 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB4" edc:nzwidth="0x1" edc:desc="Pattern Generation 4 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB5" edc:nzwidth="0x1" edc:desc="Pattern Generation 5 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB6" edc:nzwidth="0x1" edc:desc="Pattern Generation 6 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB7" edc:nzwidth="0x1" edc:desc="Pattern Generation 7 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB0" edc:nzwidth="0x1" edc:desc="Pattern Generation 0 Output Value Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB1" edc:nzwidth="0x1" edc:desc="Pattern Generation 1 Output Value Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB2" edc:nzwidth="0x1" edc:desc="Pattern Generation 2 Output Value Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB3" edc:nzwidth="0x1" edc:desc="Pattern Generation 3 Output Value Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB4" edc:nzwidth="0x1" edc:desc="Pattern Generation 4 Output Value Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB5" edc:nzwidth="0x1" edc:desc="Pattern Generation 5 Output Value Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB6" edc:nzwidth="0x1" edc:desc="Pattern Generation 6 Output Value Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB7" edc:nzwidth="0x1" edc:desc="Pattern Generation 7 Output Value Buffer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x6" edc:_addr="0x42003066"/>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="PERBUF" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="11111111111111111111111111111111" edc:mclr="11111111111111111111111111111111" edc:impl="0xFFFFFF" edc:_addr="0x4200306C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x18" edc:desc="Period Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x14" edc:desc="Period Buffer Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x13" edc:desc="Period Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x12" edc:desc="Period Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="CCBUF0" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42003070">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="CCBUF1" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42003074">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="CCBUF2" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42003078">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="CCBUF3" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x4200307C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x380" edc:_addr="0x42003080"/>
      <edc:SFRDef ltx:memberofperipheral="TCC3" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="----nnnnn------nnnnnnnnn-nn---nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF81FF63" edc:_addr="0x42003400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC3">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RESOLUTION" edc:nzwidth="0x2" edc:desc="Enhanced Resolution">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Dithering is disabled" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DITH4" edc:desc="Dithering is done every 16 PWM frames" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DITH5" edc:desc="Dithering is done every 32 PWM frames" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="DITH6" edc:desc="Dithering is done every 64 PWM frames" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PRESCALER" edc:nzwidth="0x3" edc:desc="Prescaler">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="No division" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Divide by 2" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="Divide by 4" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="Divide by 8" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="Divide by 16" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="Divide by 64" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="Divide by 256" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="Divide by 1024" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:SFRFieldDef edc:cname="PRESCSYNC" edc:nzwidth="0x2" edc:desc="Prescaler and Counter Synchronization Selection">
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="Reload or reset counter on next GCLK" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PRESC" edc:desc="Reload or reset counter on next prescaler clock" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="RESYNC" edc:desc="Reload or reset counter on next GCLK and reset prescaler counter" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ALOCK" edc:nzwidth="0x1" edc:desc="Auto Lock"/>
            <edc:SFRFieldDef edc:cname="MSYNC" edc:nzwidth="0x1" edc:desc="Master Synchronization (only for TCC Slave Instance)"/>
            <edc:SFRFieldDef edc:cname="FCYCLE" edc:nzwidth="0x1" edc:desc="Full Cycle"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="DMAOS" edc:nzwidth="0x1" edc:desc="DMA One-shot Trigger Mode"/>
            <edc:SFRFieldDef edc:cname="CPTEN0" edc:nzwidth="0x1" edc:desc="Capture Channel 0 Enable"/>
            <edc:SFRFieldDef edc:cname="CPTEN1" edc:nzwidth="0x1" edc:desc="Capture Channel 1 Enable"/>
            <edc:SFRFieldDef edc:cname="CPTEN2" edc:nzwidth="0x1" edc:desc="Capture Channel 2 Enable"/>
            <edc:SFRFieldDef edc:cname="CPTEN3" edc:nzwidth="0x1" edc:desc="Capture Channel 3 Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC3" edc:cname="CTRLBCLR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x42003404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC3">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Counter Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:nzwidth="0x1" edc:desc="One-Shot"/>
            <edc:SFRFieldDef edc:cname="IDXCMD" edc:nzwidth="0x2" edc:desc="Ramp Index Command">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Command disabled: Index toggles between cycles A and B" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set index: cycle B will be forced in the next cycle" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear index: cycle A will be forced in the next cycle" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="HOLD" edc:desc="Hold index: the next cycle will be the same as the current cycle" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="TCC Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Clear start, restart or retrigger" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Force stop" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update or double buffered registers" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force COUNT read synchronization" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="DMAOS" edc:desc="One-shot DMA trigger" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC3" edc:cname="CTRLBSET" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x42003405">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC3">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Counter Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:nzwidth="0x1" edc:desc="One-Shot"/>
            <edc:SFRFieldDef edc:cname="IDXCMD" edc:nzwidth="0x2" edc:desc="Ramp Index Command">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Command disabled: Index toggles between cycles A and B" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set index: cycle B will be forced in the next cycle" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear index: cycle A will be forced in the next cycle" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="HOLD" edc:desc="Hold index: the next cycle will be the same as the current cycle" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="TCC Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Clear start, restart or retrigger" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Force stop" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update or double buffered registers" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force COUNT read synchronization" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="DMAOS" edc:desc="One-shot DMA trigger" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x42003406"/>
      <edc:SFRDef ltx:memberofperipheral="TCC3" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="--------------------rrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFF" edc:_addr="0x42003408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC3">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Swrst Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="Ctrlb Busy"/>
            <edc:SFRFieldDef edc:cname="STATUS" edc:nzwidth="0x1" edc:desc="Status Busy"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x1" edc:desc="Count Busy"/>
            <edc:SFRFieldDef edc:cname="PATT" edc:nzwidth="0x1" edc:desc="Pattern Busy"/>
            <edc:SFRFieldDef edc:cname="WAVE" edc:nzwidth="0x1" edc:desc="Wave Busy"/>
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x1" edc:desc="Period Busy"/>
            <edc:SFRFieldDef edc:cname="CC0" edc:nzwidth="0x1" edc:desc="Compare Channel 0 Busy"/>
            <edc:SFRFieldDef edc:cname="CC1" edc:nzwidth="0x1" edc:desc="Compare Channel 1 Busy"/>
            <edc:SFRFieldDef edc:cname="CC2" edc:nzwidth="0x1" edc:desc="Compare Channel 2 Busy"/>
            <edc:SFRFieldDef edc:cname="CC3" edc:nzwidth="0x1" edc:desc="Compare Channel 3 Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC3" edc:cname="FCTRLA" edc:nzwidth="0x20" edc:access="----nnnnnnnnnnnnnnnnnnnnnnnnn-nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFFB" edc:_addr="0x4200340C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC3">
            <edc:SFRFieldDef edc:cname="SRC" edc:nzwidth="0x2" edc:desc="Fault A Source">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Fault input disabled" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="MCEx (x=0,1) event input" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="INVERT" edc:desc="Inverted MCEx (x=0,1) event input" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="ALTFAULT" edc:desc="Alternate fault (A or B) state at the end of the previous period" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="KEEP" edc:nzwidth="0x1" edc:desc="Fault A Keeper"/>
            <edc:SFRFieldDef edc:cname="QUAL" edc:nzwidth="0x1" edc:desc="Fault A Qualification"/>
            <edc:SFRFieldDef edc:cname="BLANK" edc:nzwidth="0x2" edc:desc="Fault A Blanking Mode">
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="Blanking applied from start of the ramp" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Blanking applied from rising edge of the output waveform" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Blanking applied from falling edge of the output waveform" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Blanking applied from each toggle of the output waveform" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RESTART" edc:nzwidth="0x1" edc:desc="Fault A Restart"/>
            <edc:SFRFieldDef edc:cname="HALT" edc:nzwidth="0x2" edc:desc="Fault A Halt Mode">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Halt action disabled" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HW" edc:desc="Hardware halt action" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="SW" edc:desc="Software halt action" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="NR" edc:desc="Non-recoverable fault" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CHSEL" edc:nzwidth="0x2" edc:desc="Fault A Capture Channel">
              <edc:SFRFieldSemantic edc:cname="CC0" edc:desc="Capture value stored in channel 0" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="CC1" edc:desc="Capture value stored in channel 1" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CC2" edc:desc="Capture value stored in channel 2" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="CC3" edc:desc="Capture value stored in channel 3" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CAPTURE" edc:nzwidth="0x3" edc:desc="Fault A Capture Action">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="No capture" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="CAPT" edc:desc="Capture on fault" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMIN" edc:desc="Minimum capture" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMAX" edc:desc="Maximum capture" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="LOCMIN" edc:desc="Minimum local detection" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="LOCMAX" edc:desc="Maximum local detection" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="DERIV0" edc:desc="Minimum and maximum local detection" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMARK" edc:desc="Capture with ramp index as MSB value" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BLANKPRESC" edc:nzwidth="0x1" edc:desc="Fault A Blanking Prescaler"/>
            <edc:SFRFieldDef edc:cname="BLANKVAL" edc:nzwidth="0x8" edc:desc="Fault A Blanking Time"/>
            <edc:SFRFieldDef edc:cname="FILTERVAL" edc:nzwidth="0x4" edc:desc="Fault A Filter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC3" edc:cname="FCTRLB" edc:nzwidth="0x20" edc:access="----nnnnnnnnnnnnnnnnnnnnnnnnn-nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFFB" edc:_addr="0x42003410">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC3">
            <edc:SFRFieldDef edc:cname="SRC" edc:nzwidth="0x2" edc:desc="Fault B Source">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Fault input disabled" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="MCEx (x=0,1) event input" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="INVERT" edc:desc="Inverted MCEx (x=0,1) event input" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="ALTFAULT" edc:desc="Alternate fault (A or B) state at the end of the previous period" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="KEEP" edc:nzwidth="0x1" edc:desc="Fault B Keeper"/>
            <edc:SFRFieldDef edc:cname="QUAL" edc:nzwidth="0x1" edc:desc="Fault B Qualification"/>
            <edc:SFRFieldDef edc:cname="BLANK" edc:nzwidth="0x2" edc:desc="Fault B Blanking Mode">
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="Blanking applied from start of the ramp" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Blanking applied from rising edge of the output waveform" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Blanking applied from falling edge of the output waveform" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Blanking applied from each toggle of the output waveform" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RESTART" edc:nzwidth="0x1" edc:desc="Fault B Restart"/>
            <edc:SFRFieldDef edc:cname="HALT" edc:nzwidth="0x2" edc:desc="Fault B Halt Mode">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Halt action disabled" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HW" edc:desc="Hardware halt action" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="SW" edc:desc="Software halt action" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="NR" edc:desc="Non-recoverable fault" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CHSEL" edc:nzwidth="0x2" edc:desc="Fault B Capture Channel">
              <edc:SFRFieldSemantic edc:cname="CC0" edc:desc="Capture value stored in channel 0" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="CC1" edc:desc="Capture value stored in channel 1" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CC2" edc:desc="Capture value stored in channel 2" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="CC3" edc:desc="Capture value stored in channel 3" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CAPTURE" edc:nzwidth="0x3" edc:desc="Fault B Capture Action">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="No capture" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="CAPT" edc:desc="Capture on fault" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMIN" edc:desc="Minimum capture" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMAX" edc:desc="Maximum capture" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="LOCMIN" edc:desc="Minimum local detection" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="LOCMAX" edc:desc="Maximum local detection" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="DERIV0" edc:desc="Minimum and maximum local detection" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMARK" edc:desc="Capture with ramp index as MSB value" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BLANKPRESC" edc:nzwidth="0x1" edc:desc="Fault B Blanking Prescaler"/>
            <edc:SFRFieldDef edc:cname="BLANKVAL" edc:nzwidth="0x8" edc:desc="Fault B Blanking Time"/>
            <edc:SFRFieldDef edc:cname="FILTERVAL" edc:nzwidth="0x4" edc:desc="Fault B Filter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC3" edc:cname="WEXCTRL" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnn----nnnn------nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF0F03" edc:_addr="0x42003414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC3">
            <edc:SFRFieldDef edc:cname="OTMX" edc:nzwidth="0x2" edc:desc="Output Matrix"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="DTIEN0" edc:nzwidth="0x1" edc:desc="Dead-time Insertion Generator 0 Enable"/>
            <edc:SFRFieldDef edc:cname="DTIEN1" edc:nzwidth="0x1" edc:desc="Dead-time Insertion Generator 1 Enable"/>
            <edc:SFRFieldDef edc:cname="DTIEN2" edc:nzwidth="0x1" edc:desc="Dead-time Insertion Generator 2 Enable"/>
            <edc:SFRFieldDef edc:cname="DTIEN3" edc:nzwidth="0x1" edc:desc="Dead-time Insertion Generator 3 Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="DTLS" edc:nzwidth="0x8" edc:desc="Dead-time Low Side Outputs Value"/>
            <edc:SFRFieldDef edc:cname="DTHS" edc:nzwidth="0x8" edc:desc="Dead-time High Side Outputs Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC3" edc:cname="DRVCTRL" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42003418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC3">
            <edc:SFRFieldDef edc:cname="NRE0" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 0 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE1" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 1 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE2" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 2 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE3" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 3 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE4" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 4 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE5" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 5 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE6" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 6 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE7" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 7 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRV0" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 0 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV1" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 1 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV2" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 2 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV3" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 3 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV4" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 4 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV5" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 5 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV6" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 6 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV7" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 7 Output Value"/>
            <edc:SFRFieldDef edc:cname="INVEN0" edc:nzwidth="0x1" edc:desc="Output Waveform 0 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN1" edc:nzwidth="0x1" edc:desc="Output Waveform 1 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN2" edc:nzwidth="0x1" edc:desc="Output Waveform 2 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN3" edc:nzwidth="0x1" edc:desc="Output Waveform 3 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN4" edc:nzwidth="0x1" edc:desc="Output Waveform 4 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN5" edc:nzwidth="0x1" edc:desc="Output Waveform 5 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN6" edc:nzwidth="0x1" edc:desc="Output Waveform 6 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN7" edc:nzwidth="0x1" edc:desc="Output Waveform 7 Inversion"/>
            <edc:SFRFieldDef edc:cname="FILTERVAL0" edc:nzwidth="0x4" edc:desc="Non-Recoverable Fault Input 0 Filter Value"/>
            <edc:SFRFieldDef edc:cname="FILTERVAL1" edc:nzwidth="0x4" edc:desc="Non-Recoverable Fault Input 1 Filter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x4200341C"/>
      <edc:SFRDef ltx:memberofperipheral="TCC3" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-----n-n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x5" edc:_addr="0x4200341E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC3">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Running Mode"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FDDBD" edc:nzwidth="0x1" edc:desc="Fault Detection on Debug Break Detection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x4200341F"/>
      <edc:SFRDef ltx:memberofperipheral="TCC3" edc:cname="EVCTRL" edc:nzwidth="0x20" edc:access="----nnnn----nnnnnnnn-nnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF0FF7FF" edc:_addr="0x42003420">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC3">
            <edc:SFRFieldDef edc:cname="EVACT0" edc:nzwidth="0x3" edc:desc="Timer/counter Input Event0 Action">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Event action disabled" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Start, restart or re-trigger counter on event" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="COUNTEV" edc:desc="Count on event" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="Start counter on event" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="INC" edc:desc="Increment counter on event" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="COUNT" edc:desc="Count on active state of asynchronous event" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="STAMP" edc:desc="Stamp capture" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FAULT" edc:desc="Non-recoverable fault" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EVACT1" edc:nzwidth="0x3" edc:desc="Timer/counter Input Event1 Action">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Event action disabled" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Re-trigger counter on event" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DIR" edc:desc="Direction control" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Stop counter on event" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="DEC" edc:desc="Decrement counter on event" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="PWP" edc:desc="Period capture value in CC1 register, pulse width capture value in CC0 register" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FAULT" edc:desc="Non-recoverable fault" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CNTSEL" edc:nzwidth="0x2" edc:desc="Timer/counter Output Event Mode">
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="An interrupt/event is generated when a new counter cycle starts" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="END" edc:desc="An interrupt/event is generated when a counter cycle ends" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="BOUNDARY" edc:desc="An interrupt/event is generated when a new counter cycle starts or a counter cycle ends" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="OVFEO" edc:nzwidth="0x1" edc:desc="Overflow/Underflow Output Event Enable"/>
            <edc:SFRFieldDef edc:cname="TRGEO" edc:nzwidth="0x1" edc:desc="Retrigger Output Event Enable"/>
            <edc:SFRFieldDef edc:cname="CNTEO" edc:nzwidth="0x1" edc:desc="Timer/counter Output Event Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TCINV0" edc:nzwidth="0x1" edc:desc="Inverted Event 0 Input Enable"/>
            <edc:SFRFieldDef edc:cname="TCINV1" edc:nzwidth="0x1" edc:desc="Inverted Event 1 Input Enable"/>
            <edc:SFRFieldDef edc:cname="TCEI0" edc:nzwidth="0x1" edc:desc="Timer/counter Event 0 Input Enable"/>
            <edc:SFRFieldDef edc:cname="TCEI1" edc:nzwidth="0x1" edc:desc="Timer/counter Event 1 Input Enable"/>
            <edc:SFRFieldDef edc:cname="MCEI0" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 0 Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="MCEI1" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 1 Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="MCEI2" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 2 Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="MCEI3" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 3 Event Input Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="MCEO0" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 0 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="MCEO1" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 1 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="MCEO2" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 2 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="MCEO3" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 3 Event Output Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC3" edc:cname="INTENCLR" edc:nzwidth="0x20" edc:access="------------nnnnnnnnnn------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFC0F" edc:_addr="0x42003424">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC3">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRG" edc:nzwidth="0x1" edc:desc="Retrigger Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CNT" edc:nzwidth="0x1" edc:desc="Counter Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Error Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="UFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Update Fault Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Debug Fault Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULTA" edc:nzwidth="0x1" edc:desc="Recoverable Fault A Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULTB" edc:nzwidth="0x1" edc:desc="Recoverable Fault B Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULT0" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULT1" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC2" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 2 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC3" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 3 Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC3" edc:cname="INTENSET" edc:nzwidth="0x20" edc:access="------------nnnnnnnnnn------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFC0F" edc:_addr="0x42003428">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC3">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRG" edc:nzwidth="0x1" edc:desc="Retrigger Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CNT" edc:nzwidth="0x1" edc:desc="Counter Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Error Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="UFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Update Fault Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Debug Fault Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULTA" edc:nzwidth="0x1" edc:desc="Recoverable Fault A Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULTB" edc:nzwidth="0x1" edc:desc="Recoverable Fault B Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULT0" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULT1" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC2" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 2 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC3" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 3 Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC3" edc:cname="INTFLAG" edc:nzwidth="0x20" edc:access="------------nnnnnnnnnn------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFC0F" edc:_addr="0x4200342C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC3">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow"/>
            <edc:SFRFieldDef edc:cname="TRG" edc:nzwidth="0x1" edc:desc="Retrigger"/>
            <edc:SFRFieldDef edc:cname="CNT" edc:nzwidth="0x1" edc:desc="Counter"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Error"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="UFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Update Fault"/>
            <edc:SFRFieldDef edc:cname="DFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Debug Fault"/>
            <edc:SFRFieldDef edc:cname="FAULTA" edc:nzwidth="0x1" edc:desc="Recoverable Fault A"/>
            <edc:SFRFieldDef edc:cname="FAULTB" edc:nzwidth="0x1" edc:desc="Recoverable Fault B"/>
            <edc:SFRFieldDef edc:cname="FAULT0" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 0"/>
            <edc:SFRFieldDef edc:cname="FAULT1" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 1"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="Match or Capture 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="Match or Capture 1"/>
            <edc:SFRFieldDef edc:cname="MC2" edc:nzwidth="0x1" edc:desc="Match or Capture 2"/>
            <edc:SFRFieldDef edc:cname="MC3" edc:nzwidth="0x1" edc:desc="Match or Capture 3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC3" edc:cname="STATUS" edc:nzwidth="0x20" edc:access="----nnnn----nnnnnnnnnnnnn-nnnnnn" edc:por="00000000000000000000000000000001" edc:mclr="00000000000000000000000000000001" edc:impl="0xF0FFFBF" edc:_addr="0x42003430">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC3">
            <edc:SFRFieldDef edc:cname="STOP" edc:nzwidth="0x1" edc:desc="Stop"/>
            <edc:SFRFieldDef edc:cname="IDX" edc:nzwidth="0x1" edc:desc="Ramp"/>
            <edc:SFRFieldDef edc:cname="UFS" edc:nzwidth="0x1" edc:desc="Non-recoverable Update Fault State"/>
            <edc:SFRFieldDef edc:cname="DFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Debug Fault State"/>
            <edc:SFRFieldDef edc:cname="SLAVE" edc:nzwidth="0x1" edc:desc="Slave"/>
            <edc:SFRFieldDef edc:cname="PATTBUFV" edc:nzwidth="0x1" edc:desc="Pattern Buffer Valid"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PERBUFV" edc:nzwidth="0x1" edc:desc="Period Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="FAULTAIN" edc:nzwidth="0x1" edc:desc="Recoverable Fault A Input"/>
            <edc:SFRFieldDef edc:cname="FAULTBIN" edc:nzwidth="0x1" edc:desc="Recoverable Fault B Input"/>
            <edc:SFRFieldDef edc:cname="FAULT0IN" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault0 Input"/>
            <edc:SFRFieldDef edc:cname="FAULT1IN" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault1 Input"/>
            <edc:SFRFieldDef edc:cname="FAULTA" edc:nzwidth="0x1" edc:desc="Recoverable Fault A State"/>
            <edc:SFRFieldDef edc:cname="FAULTB" edc:nzwidth="0x1" edc:desc="Recoverable Fault B State"/>
            <edc:SFRFieldDef edc:cname="FAULT0" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 0 State"/>
            <edc:SFRFieldDef edc:cname="FAULT1" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 1 State"/>
            <edc:SFRFieldDef edc:cname="CCBUFV0" edc:nzwidth="0x1" edc:desc="Compare Channel 0 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV1" edc:nzwidth="0x1" edc:desc="Compare Channel 1 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV2" edc:nzwidth="0x1" edc:desc="Compare Channel 2 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV3" edc:nzwidth="0x1" edc:desc="Compare Channel 3 Buffer Valid"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CMP0" edc:nzwidth="0x1" edc:desc="Compare Channel 0 Value"/>
            <edc:SFRFieldDef edc:cname="CMP1" edc:nzwidth="0x1" edc:desc="Compare Channel 1 Value"/>
            <edc:SFRFieldDef edc:cname="CMP2" edc:nzwidth="0x1" edc:desc="Compare Channel 2 Value"/>
            <edc:SFRFieldDef edc:cname="CMP3" edc:nzwidth="0x1" edc:desc="Compare Channel 3 Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC3" edc:cname="COUNT" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42003434">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC3">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x18" edc:desc="Counter Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x14" edc:desc="Counter Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x13" edc:desc="Counter Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x12" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC3" edc:cname="PATT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0x42003438">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC3">
            <edc:SFRFieldDef edc:cname="PGE0" edc:nzwidth="0x1" edc:desc="Pattern Generator 0 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE1" edc:nzwidth="0x1" edc:desc="Pattern Generator 1 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE2" edc:nzwidth="0x1" edc:desc="Pattern Generator 2 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE3" edc:nzwidth="0x1" edc:desc="Pattern Generator 3 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE4" edc:nzwidth="0x1" edc:desc="Pattern Generator 4 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE5" edc:nzwidth="0x1" edc:desc="Pattern Generator 5 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE6" edc:nzwidth="0x1" edc:desc="Pattern Generator 6 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE7" edc:nzwidth="0x1" edc:desc="Pattern Generator 7 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGV0" edc:nzwidth="0x1" edc:desc="Pattern Generator 0 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV1" edc:nzwidth="0x1" edc:desc="Pattern Generator 1 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV2" edc:nzwidth="0x1" edc:desc="Pattern Generator 2 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV3" edc:nzwidth="0x1" edc:desc="Pattern Generator 3 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV4" edc:nzwidth="0x1" edc:desc="Pattern Generator 4 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV5" edc:nzwidth="0x1" edc:desc="Pattern Generator 5 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV6" edc:nzwidth="0x1" edc:desc="Pattern Generator 6 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV7" edc:nzwidth="0x1" edc:desc="Pattern Generator 7 Output Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x4200343A"/>
      <edc:SFRDef ltx:memberofperipheral="TCC3" edc:cname="WAVE" edc:nzwidth="0x20" edc:access="----nnnn----nnnn----nnnnnnnn-nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF0F0FF7" edc:_addr="0x4200343C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC3">
            <edc:SFRFieldDef edc:cname="WAVEGEN" edc:nzwidth="0x3" edc:desc="Waveform Generation">
              <edc:SFRFieldSemantic edc:cname="NFRQ" edc:desc="Normal frequency" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MFRQ" edc:desc="Match frequency" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="NPWM" edc:desc="Normal PWM" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="DPWM" edc:desc="Dual compare PWM" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="DSCRITICAL" edc:desc="Dual-slope critical" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="DSBOTTOM" edc:desc="Dual-slope with interrupt/event condition when COUNT reaches ZERO" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="DSBOTH" edc:desc="Dual-slope with interrupt/event condition when COUNT reaches ZERO or TOP" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="DSTOP" edc:desc="Dual-slope with interrupt/event condition when COUNT reaches TOP" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RAMP" edc:nzwidth="0x3" edc:desc="Ramp Mode">
              <edc:SFRFieldSemantic edc:cname="RAMP1" edc:desc="RAMP1 operation" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RAMP2A" edc:desc="Alternative RAMP2 operation" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="RAMP2" edc:desc="RAMP2 operation" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="RAMP2C" edc:desc="Critical RAMP2 operation" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="RAMP2CS" edc:desc="Critical Swapped RAMP2 operation" edc:when="(field &amp; 0x7) == 4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CIPEREN" edc:nzwidth="0x1" edc:desc="Circular period Enable"/>
            <edc:SFRFieldDef edc:cname="CICCEN0" edc:nzwidth="0x1" edc:desc="Circular Channel 0 Enable"/>
            <edc:SFRFieldDef edc:cname="CICCEN1" edc:nzwidth="0x1" edc:desc="Circular Channel 1 Enable"/>
            <edc:SFRFieldDef edc:cname="CICCEN2" edc:nzwidth="0x1" edc:desc="Circular Channel 2 Enable"/>
            <edc:SFRFieldDef edc:cname="CICCEN3" edc:nzwidth="0x1" edc:desc="Circular Channel 3 Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="POL0" edc:nzwidth="0x1" edc:desc="Channel 0 Polarity">
              <edc:SFRFieldSemantic edc:cname="SINGLESLOPEPOL0" edc:desc="Single-slope PWM waveform generation Channel Polarity 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SINGLESLOPEPOL1" edc:desc="Single-slope PWM waveform generation Channel Polarity 1" edc:when="(field &amp; 0x1) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DUALSLOPEPOL0" edc:desc="Dual-slope PWM waveform generation Channel Polarity 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DUALSLOPEPOL1" edc:desc="Dual-slope PWM waveform generation Channel Polarity 1" edc:when="(field &amp; 0x1) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DUALCOMPAREPOL0" edc:desc="Dual Compare PWM waveform generation Channel Polarity 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DUALCOMPAREPOL1" edc:desc="Dual Compare PWM waveform generation Channel Polarity 1" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="POL1" edc:nzwidth="0x1" edc:desc="Channel 1 Polarity">
              <edc:SFRFieldSemantic edc:cname="SINGLESLOPEPOL0" edc:desc="Single-slope PWM waveform generation Channel Polarity 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SINGLESLOPEPOL1" edc:desc="Single-slope PWM waveform generation Channel Polarity 1" edc:when="(field &amp; 0x1) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DUALSLOPEPOL0" edc:desc="Dual-slope PWM waveform generation Channel Polarity 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DUALSLOPEPOL1" edc:desc="Dual-slope PWM waveform generation Channel Polarity 1" edc:when="(field &amp; 0x1) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DUALCOMPAREPOL0" edc:desc="Dual Compare PWM waveform generation Channel Polarity 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DUALCOMPAREPOL1" edc:desc="Dual Compare PWM waveform generation Channel Polarity 1" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="POL2" edc:nzwidth="0x1" edc:desc="Channel 2 Polarity">
              <edc:SFRFieldSemantic edc:cname="SINGLESLOPEPOL0" edc:desc="Single-slope PWM waveform generation Channel Polarity 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SINGLESLOPEPOL1" edc:desc="Single-slope PWM waveform generation Channel Polarity 1" edc:when="(field &amp; 0x1) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DUALSLOPEPOL0" edc:desc="Dual-slope PWM waveform generation Channel Polarity 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DUALSLOPEPOL1" edc:desc="Dual-slope PWM waveform generation Channel Polarity 1" edc:when="(field &amp; 0x1) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DUALCOMPAREPOL0" edc:desc="Dual Compare PWM waveform generation Channel Polarity 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DUALCOMPAREPOL1" edc:desc="Dual Compare PWM waveform generation Channel Polarity 1" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="POL3" edc:nzwidth="0x1" edc:desc="Channel 3 Polarity">
              <edc:SFRFieldSemantic edc:cname="SINGLESLOPEPOL0" edc:desc="Single-slope PWM waveform generation Channel Polarity 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SINGLESLOPEPOL1" edc:desc="Single-slope PWM waveform generation Channel Polarity 1" edc:when="(field &amp; 0x1) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DUALSLOPEPOL0" edc:desc="Dual-slope PWM waveform generation Channel Polarity 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DUALSLOPEPOL1" edc:desc="Dual-slope PWM waveform generation Channel Polarity 1" edc:when="(field &amp; 0x1) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DUALCOMPAREPOL0" edc:desc="Dual Compare PWM waveform generation Channel Polarity 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DUALCOMPAREPOL1" edc:desc="Dual Compare PWM waveform generation Channel Polarity 1" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="SWAP0" edc:nzwidth="0x1" edc:desc="Swap DTI Output Pair 0"/>
            <edc:SFRFieldDef edc:cname="SWAP1" edc:nzwidth="0x1" edc:desc="Swap DTI Output Pair 1"/>
            <edc:SFRFieldDef edc:cname="SWAP2" edc:nzwidth="0x1" edc:desc="Swap DTI Output Pair 2"/>
            <edc:SFRFieldDef edc:cname="SWAP3" edc:nzwidth="0x1" edc:desc="Swap DTI Output Pair 3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC3" edc:cname="PER" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="11111111111111111111111111111111" edc:mclr="11111111111111111111111111111111" edc:impl="0xFFFFFF" edc:_addr="0x42003440">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC3">
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x18" edc:desc="Period Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x14" edc:desc="Period Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x13" edc:desc="Period Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x12" edc:desc="Period Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC3" edc:cname="CC0" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42003444">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC3">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC3" edc:cname="CC1" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42003448">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC3">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC3" edc:cname="CC2" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x4200344C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC3">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC3" edc:cname="CC3" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42003450">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC3">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x10" edc:_addr="0x42003454"/>
      <edc:SFRDef ltx:memberofperipheral="TCC3" edc:cname="PATTBUF" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0x42003464">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC3">
            <edc:SFRFieldDef edc:cname="PGEB0" edc:nzwidth="0x1" edc:desc="Pattern Generation 0 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB1" edc:nzwidth="0x1" edc:desc="Pattern Generation 1 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB2" edc:nzwidth="0x1" edc:desc="Pattern Generation 2 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB3" edc:nzwidth="0x1" edc:desc="Pattern Generation 3 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB4" edc:nzwidth="0x1" edc:desc="Pattern Generation 4 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB5" edc:nzwidth="0x1" edc:desc="Pattern Generation 5 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB6" edc:nzwidth="0x1" edc:desc="Pattern Generation 6 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB7" edc:nzwidth="0x1" edc:desc="Pattern Generation 7 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB0" edc:nzwidth="0x1" edc:desc="Pattern Generation 0 Output Value Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB1" edc:nzwidth="0x1" edc:desc="Pattern Generation 1 Output Value Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB2" edc:nzwidth="0x1" edc:desc="Pattern Generation 2 Output Value Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB3" edc:nzwidth="0x1" edc:desc="Pattern Generation 3 Output Value Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB4" edc:nzwidth="0x1" edc:desc="Pattern Generation 4 Output Value Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB5" edc:nzwidth="0x1" edc:desc="Pattern Generation 5 Output Value Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB6" edc:nzwidth="0x1" edc:desc="Pattern Generation 6 Output Value Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB7" edc:nzwidth="0x1" edc:desc="Pattern Generation 7 Output Value Buffer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x6" edc:_addr="0x42003466"/>
      <edc:SFRDef ltx:memberofperipheral="TCC3" edc:cname="PERBUF" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="11111111111111111111111111111111" edc:mclr="11111111111111111111111111111111" edc:impl="0xFFFFFF" edc:_addr="0x4200346C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC3">
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x18" edc:desc="Period Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x14" edc:desc="Period Buffer Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x13" edc:desc="Period Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x12" edc:desc="Period Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC3" edc:cname="CCBUF0" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42003470">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC3">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC3" edc:cname="CCBUF1" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42003474">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC3">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC3" edc:cname="CCBUF2" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42003478">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC3">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC3" edc:cname="CCBUF3" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x4200347C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC3">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x380" edc:_addr="0x42003480"/>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="nn----nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xC3" edc:_addr="0x42003800">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run During Standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="On Demand Control"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x42003801">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="PRESCALER" edc:nzwidth="0x3" edc:desc="Prescaler Configuration">
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Peripheral clock divided by 2" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="Peripheral clock divided by 4" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="Peripheral clock divided by 8" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="Peripheral clock divided by 16" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="Peripheral clock divided by 32" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="Peripheral clock divided by 64" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="Peripheral clock divided by 128" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="Peripheral clock divided by 256" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="REFCTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x42003802">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="REFSEL" edc:nzwidth="0x4" edc:desc="Reference Selection">
              <edc:SFRFieldSemantic edc:cname="INTREF" edc:desc="Internal Voltage Reference" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INTVCC0" edc:desc="1/1.6 AVDD" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="INTVCC1" edc:desc="1/2 AVDD" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="VREFA" edc:desc="External Voltage Reference A (shared with DAC)" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="VREFB" edc:desc="External Voltage Reference B" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="INTVCC2" edc:desc="AVDD" edc:when="(field &amp; 0xF) == 0x5"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="REFCOMP" edc:nzwidth="0x1" edc:desc="Reference Buffer Offset Compensation Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="EVCTRL" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:_addr="0x42003803">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="FLUSHEI" edc:nzwidth="0x1" edc:desc="Flush Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="STARTEI" edc:nzwidth="0x1" edc:desc="Start Conversion Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="FLUSHINV" edc:nzwidth="0x1" edc:desc="Flush Event Invert Enable"/>
            <edc:SFRFieldDef edc:cname="STARTINV" edc:nzwidth="0x1" edc:desc="Start Event Invert Enable"/>
            <edc:SFRFieldDef edc:cname="RESRDYEO" edc:nzwidth="0x1" edc:desc="Result Ready Event Out"/>
            <edc:SFRFieldDef edc:cname="WINMONEO" edc:nzwidth="0x1" edc:desc="Window Monitor Event Out"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x42003804">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="RESRDY" edc:nzwidth="0x1" edc:desc="Result Ready Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="OVERRUN" edc:nzwidth="0x1" edc:desc="Overrun Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="WINMON" edc:nzwidth="0x1" edc:desc="Window Monitor Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x42003805">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="RESRDY" edc:nzwidth="0x1" edc:desc="Result Ready Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVERRUN" edc:nzwidth="0x1" edc:desc="Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="WINMON" edc:nzwidth="0x1" edc:desc="Window Monitor Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x42003806">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="RESRDY" edc:nzwidth="0x1" edc:desc="Result Ready Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="OVERRUN" edc:nzwidth="0x1" edc:desc="Overrun Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="WINMON" edc:nzwidth="0x1" edc:desc="Window Monitor Interrupt Flag"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="SEQSTATUS" edc:nzwidth="0x8" edc:access="r--rrrrr" edc:por="00000000" edc:mclr="00000000" edc:impl="0x9F" edc:_addr="0x42003807">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="SEQSTATE" edc:nzwidth="0x5" edc:desc="Sequence State"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SEQBUSY" edc:nzwidth="0x1" edc:desc="Sequence Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="INPUTCTRL" edc:nzwidth="0x10" edc:access="---nnnnn---nnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1F1F" edc:_addr="0x42003808">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="MUXPOS" edc:nzwidth="0x5" edc:desc="Positive Mux Input Selection">
              <edc:SFRFieldSemantic edc:cname="AIN0" edc:desc="ADC AIN0 Pin" edc:when="(field &amp; 0x1F) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="AIN1" edc:desc="ADC AIN1 Pin" edc:when="(field &amp; 0x1F) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="AIN2" edc:desc="ADC AIN2 Pin" edc:when="(field &amp; 0x1F) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="AIN3" edc:desc="ADC AIN3 Pin" edc:when="(field &amp; 0x1F) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="AIN4" edc:desc="ADC AIN4 Pin" edc:when="(field &amp; 0x1F) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="AIN5" edc:desc="ADC AIN5 Pin" edc:when="(field &amp; 0x1F) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="AIN6" edc:desc="ADC AIN6 Pin" edc:when="(field &amp; 0x1F) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="AIN7" edc:desc="ADC AIN7 Pin" edc:when="(field &amp; 0x1F) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="AIN8" edc:desc="ADC AIN8 Pin" edc:when="(field &amp; 0x1F) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="AIN9" edc:desc="ADC AIN9 Pin" edc:when="(field &amp; 0x1F) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="AIN10" edc:desc="ADC AIN10 Pin" edc:when="(field &amp; 0x1F) == 0xA"/>
              <edc:SFRFieldSemantic edc:cname="AIN11" edc:desc="ADC AIN11 Pin" edc:when="(field &amp; 0x1F) == 0xB"/>
              <edc:SFRFieldSemantic edc:cname="AIN12" edc:desc="ADC AIN12 Pin" edc:when="(field &amp; 0x1F) == 0xC"/>
              <edc:SFRFieldSemantic edc:cname="AIN13" edc:desc="ADC AIN13 Pin" edc:when="(field &amp; 0x1F) == 0xD"/>
              <edc:SFRFieldSemantic edc:cname="AIN14" edc:desc="ADC AIN14 Pin" edc:when="(field &amp; 0x1F) == 0xE"/>
              <edc:SFRFieldSemantic edc:cname="AIN15" edc:desc="ADC AIN15 Pin" edc:when="(field &amp; 0x1F) == 0xF"/>
              <edc:SFRFieldSemantic edc:cname="AIN16" edc:desc="ADC AIN16 Pin" edc:when="(field &amp; 0x1F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="AIN17" edc:desc="ADC AIN17 Pin" edc:when="(field &amp; 0x1F) == 0x11"/>
              <edc:SFRFieldSemantic edc:cname="AIN18" edc:desc="ADC AIN18 Pin" edc:when="(field &amp; 0x1F) == 0x12"/>
              <edc:SFRFieldSemantic edc:cname="AIN19" edc:desc="ADC AIN19 Pin" edc:when="(field &amp; 0x1F) == 0x13"/>
              <edc:SFRFieldSemantic edc:cname="AIN20" edc:desc="ADC AIN20 Pin" edc:when="(field &amp; 0x1F) == 0x14"/>
              <edc:SFRFieldSemantic edc:cname="AIN21" edc:desc="ADC AIN21 Pin" edc:when="(field &amp; 0x1F) == 0x15"/>
              <edc:SFRFieldSemantic edc:cname="AIN22" edc:desc="ADC AIN22 Pin" edc:when="(field &amp; 0x1F) == 0x16"/>
              <edc:SFRFieldSemantic edc:cname="AIN23" edc:desc="ADC AIN23 Pin" edc:when="(field &amp; 0x1F) == 0x17"/>
              <edc:SFRFieldSemantic edc:cname="BANDGAP" edc:desc="Internal Bandgap Voltage" edc:when="(field &amp; 0x1F) == 0x19"/>
              <edc:SFRFieldSemantic edc:cname="SCALEDVDDCORE" edc:desc="1/4 Scaled VDDCORE Supply" edc:when="(field &amp; 0x1F) == 0x1A"/>
              <edc:SFRFieldSemantic edc:cname="SCALEDAVDD" edc:desc="1/4 Scaled AVDD Supply" edc:when="(field &amp; 0x1F) == 0x1B"/>
              <edc:SFRFieldSemantic edc:cname="DAC0" edc:desc="DAC0 Output" edc:when="(field &amp; 0x1F) == 0x1C"/>
              <edc:SFRFieldSemantic edc:cname="SCALEDVDD" edc:desc="1/4 Scaled VDD Supply" edc:when="(field &amp; 0x1F) == 0x1D"/>
              <edc:SFRFieldSemantic edc:cname="OPAMP01" edc:desc="OPAMP0 or OPAMP1 output" edc:when="(field &amp; 0x1F) == 0x1E"/>
              <edc:SFRFieldSemantic edc:cname="OPAMP2" edc:desc="OPAMP2 output" edc:when="(field &amp; 0x1F) == 0x1F"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="MUXNEG" edc:nzwidth="0x5" edc:desc="Negative Mux Input Selection">
              <edc:SFRFieldSemantic edc:cname="AIN0" edc:desc="ADC AIN0 Pin" edc:when="(field &amp; 0x1F) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="AIN1" edc:desc="ADC AIN1 Pin" edc:when="(field &amp; 0x1F) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="AIN2" edc:desc="ADC AIN2 Pin" edc:when="(field &amp; 0x1F) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="AIN3" edc:desc="ADC AIN3 Pin" edc:when="(field &amp; 0x1F) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="AIN4" edc:desc="ADC AIN4 Pin" edc:when="(field &amp; 0x1F) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="AIN5" edc:desc="ADC AIN5 Pin" edc:when="(field &amp; 0x1F) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="AIN6" edc:desc="ADC AIN6 Pin" edc:when="(field &amp; 0x1F) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="AIN7" edc:desc="ADC AIN7 Pin" edc:when="(field &amp; 0x1F) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="AVSS" edc:desc="Internal Ground" edc:when="(field &amp; 0x1F) == 0x18"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="CTRLC" edc:nzwidth="0x10" edc:access="-----nnn--nnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x73F" edc:_addr="0x4200380A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="DIFFMODE" edc:nzwidth="0x1" edc:desc="Differential Mode"/>
            <edc:SFRFieldDef edc:cname="LEFTADJ" edc:nzwidth="0x1" edc:desc="Left-Adjusted Result"/>
            <edc:SFRFieldDef edc:cname="FREERUN" edc:nzwidth="0x1" edc:desc="Free Running Mode"/>
            <edc:SFRFieldDef edc:cname="CORREN" edc:nzwidth="0x1" edc:desc="Digital Correction Logic Enable"/>
            <edc:SFRFieldDef edc:cname="RESSEL" edc:nzwidth="0x2" edc:desc="Conversion Result Resolution">
              <edc:SFRFieldSemantic edc:cname="12BIT" edc:desc="12-bit result" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="16BIT" edc:desc="Accumulation or Oversampling and Decimation modes" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="10BIT" edc:desc="10-bit result" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="8BIT" edc:desc="8-bit result" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="WINMODE" edc:nzwidth="0x3" edc:desc="Window Monitor Mode">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="No window mode (default)" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MODE1" edc:desc="RESULT &gt; WINLT" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="MODE2" edc:desc="RESULT &lt; WINUT" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="MODE3" edc:desc="WINLT &lt; RESULT &lt; WINUT" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="MODE4" edc:desc="!(WINLT &lt; RESULT &lt; WINUT)" edc:when="(field &amp; 0x7) == 4"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="AVGCTRL" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:_addr="0x4200380C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="SAMPLENUM" edc:nzwidth="0x4" edc:desc="Number of Samples to be Collected">
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="1 sample" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2" edc:desc="2 samples" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="4" edc:desc="4 samples" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="8" edc:desc="8 samples" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="16" edc:desc="16 samples" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="32" edc:desc="32 samples" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="64" edc:desc="64 samples" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="128" edc:desc="128 samples" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="256" edc:desc="256 samples" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="512" edc:desc="512 samples" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="1024" edc:desc="1024 samples" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ADJRES" edc:nzwidth="0x3" edc:desc="Adjusting Result / Division Coefficient"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="SAMPCTRL" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:_addr="0x4200380D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="SAMPLEN" edc:nzwidth="0x6" edc:desc="Sampling Time Length"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="OFFCOMP" edc:nzwidth="0x1" edc:desc="Comparator Offset Compensation Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="WINLT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0x4200380E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="WINLT" edc:nzwidth="0x10" edc:desc="Window Lower Threshold"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="WINUT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0x42003810">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="WINUT" edc:nzwidth="0x10" edc:desc="Window Upper Threshold"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="GAINCORR" edc:nzwidth="0x10" edc:access="----nnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xFFF" edc:_addr="0x42003812">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="GAINCORR" edc:nzwidth="0xC" edc:desc="Gain Correction Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="OFFSETCORR" edc:nzwidth="0x10" edc:access="----nnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xFFF" edc:_addr="0x42003814">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="OFFSETCORR" edc:nzwidth="0xC" edc:desc="Offset Correction Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x42003816"/>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="SWTRIG" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x42003818">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="FLUSH" edc:nzwidth="0x1" edc:desc="ADC Flush"/>
            <edc:SFRFieldDef edc:cname="START" edc:nzwidth="0x1" edc:desc="Start ADC Conversion"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x42003819"/>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x4200381C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Run"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x4200381D"/>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="SYNCBUSY" edc:nzwidth="0x10" edc:access="-----rrrrrrrrrrr" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x7FF" edc:_addr="0x42003820">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="SWRST Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="ENABLE Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="INPUTCTRL" edc:nzwidth="0x1" edc:desc="INPUTCTRL Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLC" edc:nzwidth="0x1" edc:desc="CTRLC Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="AVGCTRL" edc:nzwidth="0x1" edc:desc="AVGCTRL Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="SAMPCTRL" edc:nzwidth="0x1" edc:desc="SAMPCTRL Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="WINLT" edc:nzwidth="0x1" edc:desc="WINLT Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="WINUT" edc:nzwidth="0x1" edc:desc="WINUT Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="GAINCORR" edc:nzwidth="0x1" edc:desc="GAINCORR Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="OFFSETCORR" edc:nzwidth="0x1" edc:desc="OFFSETCTRL Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="SWTRIG" edc:nzwidth="0x1" edc:desc="SWTRG Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x42003822"/>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="RESULT" edc:nzwidth="0x10" edc:access="rrrrrrrrrrrrrrrr" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0x42003824">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="RESULT" edc:nzwidth="0x10" edc:desc="Result Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x42003826"/>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="SEQCTRL" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42003828">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="SEQEN" edc:nzwidth="0x20" edc:desc="Enable Positive Input in the Sequence"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="CALIB" edc:nzwidth="0x10" edc:access="-----nnn-----nnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x707" edc:_addr="0x4200382C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="BIASCOMP" edc:nzwidth="0x3" edc:desc="Bias Comparator Scaling"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="BIASREFBUF" edc:nzwidth="0x3" edc:desc="Bias Reference Buffer Scaling"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3D2" edc:_addr="0x4200382E"/>
      <edc:SFRDef ltx:memberofperipheral="DAC" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x42003C00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DAC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable DAC Controller"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DAC" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000010" edc:mclr="00000010" edc:impl="0x7" edc:_addr="0x42003C01">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DAC">
            <edc:SFRFieldDef edc:cname="DIFF" edc:nzwidth="0x1" edc:desc="Differential mode enable"/>
            <edc:SFRFieldDef edc:cname="REFSEL" edc:nzwidth="0x2" edc:desc="Reference Selection for DAC0/1">
              <edc:SFRFieldSemantic edc:cname="VREFAU" edc:desc="Unbuffered External Voltage Reference (not buffered in DAC, direct connection)" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AVDD" edc:desc="Analog Voltage Supply" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="VREFAB" edc:desc="Buffered External Voltage Reference (buffered in DAC)" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="INTREF" edc:desc="Internal Voltage Reference" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DAC" edc:cname="EVCTRL" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:_addr="0x42003C02">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DAC">
            <edc:SFRFieldDef edc:cname="STARTEI0" edc:nzwidth="0x1" edc:desc="Start Conversion Event Input DAC 0"/>
            <edc:SFRFieldDef edc:cname="STARTEI1" edc:nzwidth="0x1" edc:desc="Start Conversion Event Input DAC 1"/>
            <edc:SFRFieldDef edc:cname="EMPTYEO0" edc:nzwidth="0x1" edc:desc="Data Buffer Empty Event Output DAC 0"/>
            <edc:SFRFieldDef edc:cname="EMPTYEO1" edc:nzwidth="0x1" edc:desc="Data Buffer Empty Event Output DAC 1"/>
            <edc:SFRFieldDef edc:cname="INVEI0" edc:nzwidth="0x1" edc:desc="Enable Invertion of DAC 0 input event"/>
            <edc:SFRFieldDef edc:cname="INVEI1" edc:nzwidth="0x1" edc:desc="Enable Invertion of DAC 1 input event"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x42003C03"/>
      <edc:SFRDef ltx:memberofperipheral="DAC" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x42003C04">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DAC">
            <edc:SFRFieldDef edc:cname="UNDERRUN0" edc:nzwidth="0x1" edc:desc="Underrun Interrupt Enable for DAC 0"/>
            <edc:SFRFieldDef edc:cname="UNDERRUN1" edc:nzwidth="0x1" edc:desc="Underrun Interrupt Enable for DAC 1"/>
            <edc:SFRFieldDef edc:cname="EMPTY0" edc:nzwidth="0x1" edc:desc="Data Buffer 0 Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EMPTY1" edc:nzwidth="0x1" edc:desc="Data Buffer 1 Empty Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DAC" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x42003C05">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DAC">
            <edc:SFRFieldDef edc:cname="UNDERRUN0" edc:nzwidth="0x1" edc:desc="Underrun Interrupt Enable for DAC 0"/>
            <edc:SFRFieldDef edc:cname="UNDERRUN1" edc:nzwidth="0x1" edc:desc="Underrun Interrupt Enable for DAC 1"/>
            <edc:SFRFieldDef edc:cname="EMPTY0" edc:nzwidth="0x1" edc:desc="Data Buffer 0 Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EMPTY1" edc:nzwidth="0x1" edc:desc="Data Buffer 1 Empty Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DAC" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x42003C06">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DAC">
            <edc:SFRFieldDef edc:cname="UNDERRUN0" edc:nzwidth="0x1" edc:desc="DAC 0 Underrun"/>
            <edc:SFRFieldDef edc:cname="UNDERRUN1" edc:nzwidth="0x1" edc:desc="DAC 1 Underrun"/>
            <edc:SFRFieldDef edc:cname="EMPTY0" edc:nzwidth="0x1" edc:desc="Data Buffer 0 Empty"/>
            <edc:SFRFieldDef edc:cname="EMPTY1" edc:nzwidth="0x1" edc:desc="Data Buffer 1 Empty"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DAC" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="----rrrr" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x42003C07">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DAC">
            <edc:SFRFieldDef edc:cname="READY0" edc:nzwidth="0x1" edc:desc="DAC 0 Startup Ready"/>
            <edc:SFRFieldDef edc:cname="READY1" edc:nzwidth="0x1" edc:desc="DAC 1 Startup Ready"/>
            <edc:SFRFieldDef edc:cname="EOC0" edc:nzwidth="0x1" edc:desc="DAC 0 End of Conversion"/>
            <edc:SFRFieldDef edc:cname="EOC1" edc:nzwidth="0x1" edc:desc="DAC 1 End of Conversion"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DAC" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="--------------------------rrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x42003C08">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DAC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="DAC Enable Status"/>
            <edc:SFRFieldDef edc:cname="DATA0" edc:nzwidth="0x1" edc:desc="Data DAC 0"/>
            <edc:SFRFieldDef edc:cname="DATA1" edc:nzwidth="0x1" edc:desc="Data DAC 1"/>
            <edc:SFRFieldDef edc:cname="DATABUF0" edc:nzwidth="0x1" edc:desc="Data Buffer DAC 0"/>
            <edc:SFRFieldDef edc:cname="DATABUF1" edc:nzwidth="0x1" edc:desc="Data Buffer DAC 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DAC" edc:cname="DACCTRL0" edc:nzwidth="0x10" edc:access="----nnnnnn--nnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xFCF" edc:_addr="0x42003C0C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DAC">
            <edc:SFRFieldDef edc:cname="LEFTADJ" edc:nzwidth="0x1" edc:desc="Left Adjusted Data"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable DAC0"/>
            <edc:SFRFieldDef edc:cname="CCTRL" edc:nzwidth="0x2" edc:desc="Current Control">
              <edc:SFRFieldSemantic edc:cname="CC100K" edc:desc="GCLK_DAC &lt;= 1.2MHz (100kSPS)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CC1M" edc:desc="1.2MHz &lt; GCLK_DAC &lt;= 6MHz (500kSPS)" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CC12M" edc:desc="6MHz &lt; GCLK_DAC &lt;= 12MHz (1MSPS)" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:SFRFieldDef edc:cname="DITHER" edc:nzwidth="0x1" edc:desc="Dithering Mode"/>
            <edc:SFRFieldDef edc:cname="REFRESH" edc:nzwidth="0x4" edc:desc="Refresh period">
              <edc:SFRFieldSemantic edc:cname="REFRESH_0" edc:desc="Do not Refresh" edc:when="(field &amp; 0xF) == 0"/>
              <edc:SFRFieldSemantic edc:cname="REFRESH_2" edc:desc="Refresh every 60US" edc:when="(field &amp; 0xF) == 2"/>
              <edc:SFRFieldSemantic edc:cname="REFRESH_3" edc:desc="Refresh every 90US" edc:when="(field &amp; 0xF) == 3"/>
              <edc:SFRFieldSemantic edc:cname="REFRESH_4" edc:desc="Refresh every 120US" edc:when="(field &amp; 0xF) == 4"/>
              <edc:SFRFieldSemantic edc:cname="REFRESH_5" edc:desc="Refresh every 150US" edc:when="(field &amp; 0xF) == 5"/>
              <edc:SFRFieldSemantic edc:cname="REFRESH_6" edc:desc="Refresh every 180US" edc:when="(field &amp; 0xF) == 6"/>
              <edc:SFRFieldSemantic edc:cname="REFRESH_7" edc:desc="Refresh every 210US" edc:when="(field &amp; 0xF) == 7"/>
              <edc:SFRFieldSemantic edc:cname="REFRESH_8" edc:desc="Refresh every 240US" edc:when="(field &amp; 0xF) == 8"/>
              <edc:SFRFieldSemantic edc:cname="REFRESH_9" edc:desc="Refresh every 270US" edc:when="(field &amp; 0xF) == 9"/>
              <edc:SFRFieldSemantic edc:cname="REFRESH_10" edc:desc="Refresh every 300US" edc:when="(field &amp; 0xF) == 10"/>
              <edc:SFRFieldSemantic edc:cname="REFRESH_11" edc:desc="Refresh every 330US" edc:when="(field &amp; 0xF) == 11"/>
              <edc:SFRFieldSemantic edc:cname="REFRESH_12" edc:desc="Refresh every 360US" edc:when="(field &amp; 0xF) == 12"/>
              <edc:SFRFieldSemantic edc:cname="REFRESH_13" edc:desc="Refresh every 390US" edc:when="(field &amp; 0xF) == 13"/>
              <edc:SFRFieldSemantic edc:cname="REFRESH_14" edc:desc="Refresh every 420US" edc:when="(field &amp; 0xF) == 14"/>
              <edc:SFRFieldSemantic edc:cname="REFRESH_15" edc:desc="Refresh every 450US" edc:when="(field &amp; 0xF) == 15"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DAC" edc:cname="DACCTRL1" edc:nzwidth="0x10" edc:access="----nnnnnn--nnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xFCF" edc:_addr="0x42003C0E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DAC">
            <edc:SFRFieldDef edc:cname="LEFTADJ" edc:nzwidth="0x1" edc:desc="Left Adjusted Data"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable DAC0"/>
            <edc:SFRFieldDef edc:cname="CCTRL" edc:nzwidth="0x2" edc:desc="Current Control">
              <edc:SFRFieldSemantic edc:cname="CC100K" edc:desc="GCLK_DAC &lt;= 1.2MHz (100kSPS)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CC1M" edc:desc="1.2MHz &lt; GCLK_DAC &lt;= 6MHz (500kSPS)" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CC12M" edc:desc="6MHz &lt; GCLK_DAC &lt;= 12MHz (1MSPS)" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:SFRFieldDef edc:cname="DITHER" edc:nzwidth="0x1" edc:desc="Dithering Mode"/>
            <edc:SFRFieldDef edc:cname="REFRESH" edc:nzwidth="0x4" edc:desc="Refresh period">
              <edc:SFRFieldSemantic edc:cname="REFRESH_0" edc:desc="Do not Refresh" edc:when="(field &amp; 0xF) == 0"/>
              <edc:SFRFieldSemantic edc:cname="REFRESH_2" edc:desc="Refresh every 60US" edc:when="(field &amp; 0xF) == 2"/>
              <edc:SFRFieldSemantic edc:cname="REFRESH_3" edc:desc="Refresh every 90US" edc:when="(field &amp; 0xF) == 3"/>
              <edc:SFRFieldSemantic edc:cname="REFRESH_4" edc:desc="Refresh every 120US" edc:when="(field &amp; 0xF) == 4"/>
              <edc:SFRFieldSemantic edc:cname="REFRESH_5" edc:desc="Refresh every 150US" edc:when="(field &amp; 0xF) == 5"/>
              <edc:SFRFieldSemantic edc:cname="REFRESH_6" edc:desc="Refresh every 180US" edc:when="(field &amp; 0xF) == 6"/>
              <edc:SFRFieldSemantic edc:cname="REFRESH_7" edc:desc="Refresh every 210US" edc:when="(field &amp; 0xF) == 7"/>
              <edc:SFRFieldSemantic edc:cname="REFRESH_8" edc:desc="Refresh every 240US" edc:when="(field &amp; 0xF) == 8"/>
              <edc:SFRFieldSemantic edc:cname="REFRESH_9" edc:desc="Refresh every 270US" edc:when="(field &amp; 0xF) == 9"/>
              <edc:SFRFieldSemantic edc:cname="REFRESH_10" edc:desc="Refresh every 300US" edc:when="(field &amp; 0xF) == 10"/>
              <edc:SFRFieldSemantic edc:cname="REFRESH_11" edc:desc="Refresh every 330US" edc:when="(field &amp; 0xF) == 11"/>
              <edc:SFRFieldSemantic edc:cname="REFRESH_12" edc:desc="Refresh every 360US" edc:when="(field &amp; 0xF) == 12"/>
              <edc:SFRFieldSemantic edc:cname="REFRESH_13" edc:desc="Refresh every 390US" edc:when="(field &amp; 0xF) == 13"/>
              <edc:SFRFieldSemantic edc:cname="REFRESH_14" edc:desc="Refresh every 420US" edc:when="(field &amp; 0xF) == 14"/>
              <edc:SFRFieldSemantic edc:cname="REFRESH_15" edc:desc="Refresh every 450US" edc:when="(field &amp; 0xF) == 15"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DAC" edc:cname="DATA0" edc:nzwidth="0x10" edc:access="wwwwwwwwwwwwwwww" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0x42003C10">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DAC">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x10" edc:desc="DAC0 Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DAC" edc:cname="DATA1" edc:nzwidth="0x10" edc:access="wwwwwwwwwwwwwwww" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0x42003C12">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DAC">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x10" edc:desc="DAC0 Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DAC" edc:cname="DATABUF0" edc:nzwidth="0x10" edc:access="wwwwwwwwwwwwwwww" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0x42003C14">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DAC">
            <edc:SFRFieldDef edc:cname="DATABUF" edc:nzwidth="0x10" edc:desc="DAC0 Data Buffer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DAC" edc:cname="DATABUF1" edc:nzwidth="0x10" edc:access="wwwwwwwwwwwwwwww" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0x42003C16">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DAC">
            <edc:SFRFieldDef edc:cname="DATABUF" edc:nzwidth="0x10" edc:desc="DAC0 Data Buffer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DAC" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x42003C18">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DAC">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Run"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x7E7" edc:_addr="0x42003C19"/>
      <edc:SFRDef ltx:memberofperipheral="TRNG" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="-n----n-" edc:por="00000000" edc:mclr="00000000" edc:impl="0x42" edc:_addr="0x42004400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRNG">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x42004401"/>
      <edc:SFRDef ltx:memberofperipheral="TRNG" edc:cname="EVCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x42004404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRNG">
            <edc:SFRFieldDef edc:cname="DATARDYEO" edc:nzwidth="0x1" edc:desc="Data Ready Event Output"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x42004405"/>
      <edc:SFRDef ltx:memberofperipheral="TRNG" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x42004408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRNG">
            <edc:SFRFieldDef edc:cname="DATARDY" edc:nzwidth="0x1" edc:desc="Data Ready Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRNG" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x42004409">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRNG">
            <edc:SFRFieldDef edc:cname="DATARDY" edc:nzwidth="0x1" edc:desc="Data Ready Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRNG" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x4200440A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRNG">
            <edc:SFRFieldDef edc:cname="DATARDY" edc:nzwidth="0x1" edc:desc="Data Ready Interrupt Flag"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x15" edc:_addr="0x4200440B"/>
      <edc:SFRDef ltx:memberofperipheral="TRNG" edc:cname="DATA" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x42004420">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRNG">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Output Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3DC" edc:_addr="0x42004424"/>
      <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="CTRL" edc:nzwidth="0x8" edc:access="-n----nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x43" edc:_addr="0x42004800">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="The peripheral is not reset" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="The peripheral is reset" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="The peripheral is disabled" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="The peripheral is enabled" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Generic clock is not required in standby sleep mode" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="Generic clock is  required in standby sleep mode" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x42004801"/>
      <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="SEQCTRL0" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x42004804">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
            <edc:SFRFieldDef edc:cname="SEQSEL" edc:nzwidth="0x4" edc:desc="Sequential Selection">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Sequential logic is disabled" edc:when="(field &amp; 0xF) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DFF" edc:desc="D flip flop" edc:when="(field &amp; 0xF) == 1"/>
              <edc:SFRFieldSemantic edc:cname="JK" edc:desc="JK flip flop" edc:when="(field &amp; 0xF) == 2"/>
              <edc:SFRFieldSemantic edc:cname="LATCH" edc:desc="D latch" edc:when="(field &amp; 0xF) == 3"/>
              <edc:SFRFieldSemantic edc:cname="RS" edc:desc="RS latch" edc:when="(field &amp; 0xF) == 4"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="SEQCTRL1" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x42004805">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
            <edc:SFRFieldDef edc:cname="SEQSEL" edc:nzwidth="0x4" edc:desc="Sequential Selection">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Sequential logic is disabled" edc:when="(field &amp; 0xF) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DFF" edc:desc="D flip flop" edc:when="(field &amp; 0xF) == 1"/>
              <edc:SFRFieldSemantic edc:cname="JK" edc:desc="JK flip flop" edc:when="(field &amp; 0xF) == 2"/>
              <edc:SFRFieldSemantic edc:cname="LATCH" edc:desc="D latch" edc:when="(field &amp; 0xF) == 3"/>
              <edc:SFRFieldSemantic edc:cname="RS" edc:desc="RS latch" edc:when="(field &amp; 0xF) == 4"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x42004806"/>
      <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUTCTRL0" edc:nzwidth="0x20" edc:access="nnnnnnnn-nnnnnnnnnnnnnnnn-nn--n-" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF7FFFB2" edc:_addr="0x42004808">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="LUT Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="LUT block is disabled" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="LUT block is enabled" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FILTSEL" edc:nzwidth="0x2" edc:desc="Filter Selection">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Filter disabled" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SYNCH" edc:desc="Synchronizer enabled" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FILTER" edc:desc="Filter enabled" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="EDGESEL" edc:nzwidth="0x1" edc:desc="Edge Selection">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Edge detector is disabled" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="Edge detector is enabled" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="INSEL0" edc:nzwidth="0x4" edc:desc="Input Selection 0">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="EVENT" edc:desc="Event input source" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="IO" edc:desc="I/O pin input source" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="AC" edc:desc="AC input source" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="TC" edc:desc="TC input source" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="ALTTC" edc:desc="Alternate TC input source" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="TCC" edc:desc="TCC input source" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM" edc:desc="SERCOM input source" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCEVENT" edc:desc="Asynchronous event input source" edc:when="(field &amp; 0xF) == 0xB"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="INSEL1" edc:nzwidth="0x4" edc:desc="Input Selection 1">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="EVENT" edc:desc="Event input source" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="IO" edc:desc="I/O pin input source" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="AC" edc:desc="AC input source" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="TC" edc:desc="TC input source" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="ALTTC" edc:desc="Alternate TC input source" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="TCC" edc:desc="TCC input source" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM" edc:desc="SERCOM input source" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCEVENT" edc:desc="Asynchronous event input source" edc:when="(field &amp; 0xF) == 0xB"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="INSEL2" edc:nzwidth="0x4" edc:desc="Input Selection 2">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="EVENT" edc:desc="Event input source" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="IO" edc:desc="I/O pin input source" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="AC" edc:desc="AC input source" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="TC" edc:desc="TC input source" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="ALTTC" edc:desc="Alternate TC input source" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="TCC" edc:desc="TCC input source" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM" edc:desc="SERCOM input source" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCEVENT" edc:desc="Asynchronous event input source" edc:when="(field &amp; 0xF) == 0xB"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="INVEI" edc:nzwidth="0x1" edc:desc="Inverted Event Input Enable">
              <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Incoming event is not inverted" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="INVERTED" edc:desc="Incoming event is inverted" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LUTEI" edc:nzwidth="0x1" edc:desc="LUT Event Input Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="LUT incoming event is disabled" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="LUT incoming event is enabled" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LUTEO" edc:nzwidth="0x1" edc:desc="LUT Event Output Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="LUT event output is disabled" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="LUT event output is enabled" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TRUTH" edc:nzwidth="0x8" edc:desc="Truth Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUTCTRL1" edc:nzwidth="0x20" edc:access="nnnnnnnn-nnnnnnnnnnnnnnnn-nn--n-" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF7FFFB2" edc:_addr="0x4200480C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="LUT Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="LUT block is disabled" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="LUT block is enabled" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FILTSEL" edc:nzwidth="0x2" edc:desc="Filter Selection">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Filter disabled" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SYNCH" edc:desc="Synchronizer enabled" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FILTER" edc:desc="Filter enabled" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="EDGESEL" edc:nzwidth="0x1" edc:desc="Edge Selection">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Edge detector is disabled" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="Edge detector is enabled" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="INSEL0" edc:nzwidth="0x4" edc:desc="Input Selection 0">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="EVENT" edc:desc="Event input source" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="IO" edc:desc="I/O pin input source" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="AC" edc:desc="AC input source" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="TC" edc:desc="TC input source" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="ALTTC" edc:desc="Alternate TC input source" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="TCC" edc:desc="TCC input source" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM" edc:desc="SERCOM input source" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCEVENT" edc:desc="Asynchronous event input source" edc:when="(field &amp; 0xF) == 0xB"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="INSEL1" edc:nzwidth="0x4" edc:desc="Input Selection 1">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="EVENT" edc:desc="Event input source" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="IO" edc:desc="I/O pin input source" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="AC" edc:desc="AC input source" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="TC" edc:desc="TC input source" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="ALTTC" edc:desc="Alternate TC input source" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="TCC" edc:desc="TCC input source" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM" edc:desc="SERCOM input source" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCEVENT" edc:desc="Asynchronous event input source" edc:when="(field &amp; 0xF) == 0xB"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="INSEL2" edc:nzwidth="0x4" edc:desc="Input Selection 2">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="EVENT" edc:desc="Event input source" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="IO" edc:desc="I/O pin input source" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="AC" edc:desc="AC input source" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="TC" edc:desc="TC input source" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="ALTTC" edc:desc="Alternate TC input source" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="TCC" edc:desc="TCC input source" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM" edc:desc="SERCOM input source" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCEVENT" edc:desc="Asynchronous event input source" edc:when="(field &amp; 0xF) == 0xB"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="INVEI" edc:nzwidth="0x1" edc:desc="Inverted Event Input Enable">
              <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Incoming event is not inverted" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="INVERTED" edc:desc="Incoming event is inverted" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LUTEI" edc:nzwidth="0x1" edc:desc="LUT Event Input Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="LUT incoming event is disabled" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="LUT incoming event is enabled" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LUTEO" edc:nzwidth="0x1" edc:desc="LUT Event Output Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="LUT event output is disabled" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="LUT event output is enabled" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TRUTH" edc:nzwidth="0x8" edc:desc="Truth Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUTCTRL2" edc:nzwidth="0x20" edc:access="nnnnnnnn-nnnnnnnnnnnnnnnn-nn--n-" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF7FFFB2" edc:_addr="0x42004810">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="LUT Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="LUT block is disabled" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="LUT block is enabled" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FILTSEL" edc:nzwidth="0x2" edc:desc="Filter Selection">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Filter disabled" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SYNCH" edc:desc="Synchronizer enabled" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FILTER" edc:desc="Filter enabled" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="EDGESEL" edc:nzwidth="0x1" edc:desc="Edge Selection">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Edge detector is disabled" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="Edge detector is enabled" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="INSEL0" edc:nzwidth="0x4" edc:desc="Input Selection 0">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="EVENT" edc:desc="Event input source" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="IO" edc:desc="I/O pin input source" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="AC" edc:desc="AC input source" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="TC" edc:desc="TC input source" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="ALTTC" edc:desc="Alternate TC input source" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="TCC" edc:desc="TCC input source" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM" edc:desc="SERCOM input source" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCEVENT" edc:desc="Asynchronous event input source" edc:when="(field &amp; 0xF) == 0xB"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="INSEL1" edc:nzwidth="0x4" edc:desc="Input Selection 1">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="EVENT" edc:desc="Event input source" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="IO" edc:desc="I/O pin input source" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="AC" edc:desc="AC input source" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="TC" edc:desc="TC input source" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="ALTTC" edc:desc="Alternate TC input source" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="TCC" edc:desc="TCC input source" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM" edc:desc="SERCOM input source" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCEVENT" edc:desc="Asynchronous event input source" edc:when="(field &amp; 0xF) == 0xB"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="INSEL2" edc:nzwidth="0x4" edc:desc="Input Selection 2">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="EVENT" edc:desc="Event input source" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="IO" edc:desc="I/O pin input source" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="AC" edc:desc="AC input source" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="TC" edc:desc="TC input source" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="ALTTC" edc:desc="Alternate TC input source" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="TCC" edc:desc="TCC input source" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM" edc:desc="SERCOM input source" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCEVENT" edc:desc="Asynchronous event input source" edc:when="(field &amp; 0xF) == 0xB"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="INVEI" edc:nzwidth="0x1" edc:desc="Inverted Event Input Enable">
              <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Incoming event is not inverted" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="INVERTED" edc:desc="Incoming event is inverted" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LUTEI" edc:nzwidth="0x1" edc:desc="LUT Event Input Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="LUT incoming event is disabled" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="LUT incoming event is enabled" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LUTEO" edc:nzwidth="0x1" edc:desc="LUT Event Output Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="LUT event output is disabled" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="LUT event output is enabled" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TRUTH" edc:nzwidth="0x8" edc:desc="Truth Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUTCTRL3" edc:nzwidth="0x20" edc:access="nnnnnnnn-nnnnnnnnnnnnnnnn-nn--n-" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF7FFFB2" edc:_addr="0x42004814">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="LUT Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="LUT block is disabled" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="LUT block is enabled" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FILTSEL" edc:nzwidth="0x2" edc:desc="Filter Selection">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Filter disabled" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SYNCH" edc:desc="Synchronizer enabled" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FILTER" edc:desc="Filter enabled" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="EDGESEL" edc:nzwidth="0x1" edc:desc="Edge Selection">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Edge detector is disabled" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="Edge detector is enabled" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="INSEL0" edc:nzwidth="0x4" edc:desc="Input Selection 0">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="EVENT" edc:desc="Event input source" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="IO" edc:desc="I/O pin input source" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="AC" edc:desc="AC input source" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="TC" edc:desc="TC input source" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="ALTTC" edc:desc="Alternate TC input source" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="TCC" edc:desc="TCC input source" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM" edc:desc="SERCOM input source" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCEVENT" edc:desc="Asynchronous event input source" edc:when="(field &amp; 0xF) == 0xB"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="INSEL1" edc:nzwidth="0x4" edc:desc="Input Selection 1">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="EVENT" edc:desc="Event input source" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="IO" edc:desc="I/O pin input source" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="AC" edc:desc="AC input source" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="TC" edc:desc="TC input source" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="ALTTC" edc:desc="Alternate TC input source" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="TCC" edc:desc="TCC input source" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM" edc:desc="SERCOM input source" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCEVENT" edc:desc="Asynchronous event input source" edc:when="(field &amp; 0xF) == 0xB"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="INSEL2" edc:nzwidth="0x4" edc:desc="Input Selection 2">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="EVENT" edc:desc="Event input source" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="IO" edc:desc="I/O pin input source" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="AC" edc:desc="AC input source" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="TC" edc:desc="TC input source" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="ALTTC" edc:desc="Alternate TC input source" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="TCC" edc:desc="TCC input source" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM" edc:desc="SERCOM input source" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCEVENT" edc:desc="Asynchronous event input source" edc:when="(field &amp; 0xF) == 0xB"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="INVEI" edc:nzwidth="0x1" edc:desc="Inverted Event Input Enable">
              <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Incoming event is not inverted" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="INVERTED" edc:desc="Incoming event is inverted" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LUTEI" edc:nzwidth="0x1" edc:desc="LUT Event Input Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="LUT incoming event is disabled" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="LUT incoming event is enabled" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LUTEO" edc:nzwidth="0x1" edc:desc="LUT Event Output Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="LUT event output is disabled" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="LUT event output is enabled" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TRUTH" edc:nzwidth="0x8" edc:desc="Truth Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3E8" edc:_addr="0x42004818"/>
      <edc:SFRDef ltx:memberofperipheral="I2S" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:_addr="0x42004C00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="I2S">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="CKEN0" edc:nzwidth="0x1" edc:desc="Clock Unit 0 Enable"/>
            <edc:SFRFieldDef edc:cname="CKEN1" edc:nzwidth="0x1" edc:desc="Clock Unit 1 Enable"/>
            <edc:SFRFieldDef edc:cname="TXEN" edc:nzwidth="0x1" edc:desc="Tx Serializer Enable"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Rx Serializer Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x42004C01"/>
      <edc:SFRDef ltx:memberofperipheral="I2S" edc:cname="CLKCTRL0" edc:nzwidth="0x20" edc:access="--nnnnnn--nnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F3FFFFF" edc:_addr="0x42004C04">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="I2S">
            <edc:SFRFieldDef edc:cname="SLOTSIZE" edc:nzwidth="0x2" edc:desc="Slot Size">
              <edc:SFRFieldSemantic edc:cname="8" edc:desc="8-bit Slot for Clock Unit n" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="16" edc:desc="16-bit Slot for Clock Unit n" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="24" edc:desc="24-bit Slot for Clock Unit n" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="32" edc:desc="32-bit Slot for Clock Unit n" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NBSLOTS" edc:nzwidth="0x3" edc:desc="Number of Slots in Frame"/>
            <edc:SFRFieldDef edc:cname="FSWIDTH" edc:nzwidth="0x2" edc:desc="Frame Sync Width">
              <edc:SFRFieldSemantic edc:cname="SLOT" edc:desc="Frame Sync Pulse is 1 Slot wide (default for I2S protocol)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Frame Sync Pulse is half a Frame wide" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="BIT" edc:desc="Frame Sync Pulse is 1 Bit wide" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="BURST" edc:desc="Clock Unit n operates in Burst mode, with a 1-bit wide Frame Sync pulse per Data sample, only when Data transfer is requested" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BITDELAY" edc:nzwidth="0x1" edc:desc="Data Delay from Frame Sync">
              <edc:SFRFieldSemantic edc:cname="LJ" edc:desc="Left Justified (0 Bit Delay)" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="I2S" edc:desc="I2S (1 Bit Delay)" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FSSEL" edc:nzwidth="0x1" edc:desc="Frame Sync Select">
              <edc:SFRFieldSemantic edc:cname="SCKDIV" edc:desc="Divided Serial Clock n is used as Frame Sync n source" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FSPIN" edc:desc="FSn input pin is used as Frame Sync n source" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FSINV" edc:nzwidth="0x1" edc:desc="Frame Sync Invert"/>
            <edc:SFRFieldDef edc:cname="FSOUTINV" edc:nzwidth="0x1" edc:desc="Frame Sync Output Invert"/>
            <edc:SFRFieldDef edc:cname="SCKSEL" edc:nzwidth="0x1" edc:desc="Serial Clock Select">
              <edc:SFRFieldSemantic edc:cname="MCKDIV" edc:desc="Divided Master Clock n is used as Serial Clock n source" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SCKPIN" edc:desc="SCKn input pin is used as Serial Clock n source" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCKOUTINV" edc:nzwidth="0x1" edc:desc="Serial Clock Output Invert"/>
            <edc:SFRFieldDef edc:cname="MCKSEL" edc:nzwidth="0x1" edc:desc="Master Clock Select">
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="GCLK_I2S_n is used as Master Clock n source" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="MCKPIN" edc:desc="MCKn input pin is used as Master Clock n source" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MCKEN" edc:nzwidth="0x1" edc:desc="Master Clock Enable"/>
            <edc:SFRFieldDef edc:cname="MCKOUTINV" edc:nzwidth="0x1" edc:desc="Master Clock Output Invert"/>
            <edc:SFRFieldDef edc:cname="MCKDIV" edc:nzwidth="0x6" edc:desc="Master Clock Division Factor"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MCKOUTDIV" edc:nzwidth="0x6" edc:desc="Master Clock Output Division Factor"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="I2S" edc:cname="CLKCTRL1" edc:nzwidth="0x20" edc:access="--nnnnnn--nnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F3FFFFF" edc:_addr="0x42004C08">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="I2S">
            <edc:SFRFieldDef edc:cname="SLOTSIZE" edc:nzwidth="0x2" edc:desc="Slot Size">
              <edc:SFRFieldSemantic edc:cname="8" edc:desc="8-bit Slot for Clock Unit n" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="16" edc:desc="16-bit Slot for Clock Unit n" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="24" edc:desc="24-bit Slot for Clock Unit n" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="32" edc:desc="32-bit Slot for Clock Unit n" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NBSLOTS" edc:nzwidth="0x3" edc:desc="Number of Slots in Frame"/>
            <edc:SFRFieldDef edc:cname="FSWIDTH" edc:nzwidth="0x2" edc:desc="Frame Sync Width">
              <edc:SFRFieldSemantic edc:cname="SLOT" edc:desc="Frame Sync Pulse is 1 Slot wide (default for I2S protocol)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Frame Sync Pulse is half a Frame wide" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="BIT" edc:desc="Frame Sync Pulse is 1 Bit wide" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="BURST" edc:desc="Clock Unit n operates in Burst mode, with a 1-bit wide Frame Sync pulse per Data sample, only when Data transfer is requested" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BITDELAY" edc:nzwidth="0x1" edc:desc="Data Delay from Frame Sync">
              <edc:SFRFieldSemantic edc:cname="LJ" edc:desc="Left Justified (0 Bit Delay)" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="I2S" edc:desc="I2S (1 Bit Delay)" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FSSEL" edc:nzwidth="0x1" edc:desc="Frame Sync Select">
              <edc:SFRFieldSemantic edc:cname="SCKDIV" edc:desc="Divided Serial Clock n is used as Frame Sync n source" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FSPIN" edc:desc="FSn input pin is used as Frame Sync n source" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FSINV" edc:nzwidth="0x1" edc:desc="Frame Sync Invert"/>
            <edc:SFRFieldDef edc:cname="FSOUTINV" edc:nzwidth="0x1" edc:desc="Frame Sync Output Invert"/>
            <edc:SFRFieldDef edc:cname="SCKSEL" edc:nzwidth="0x1" edc:desc="Serial Clock Select">
              <edc:SFRFieldSemantic edc:cname="MCKDIV" edc:desc="Divided Master Clock n is used as Serial Clock n source" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SCKPIN" edc:desc="SCKn input pin is used as Serial Clock n source" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCKOUTINV" edc:nzwidth="0x1" edc:desc="Serial Clock Output Invert"/>
            <edc:SFRFieldDef edc:cname="MCKSEL" edc:nzwidth="0x1" edc:desc="Master Clock Select">
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="GCLK_I2S_n is used as Master Clock n source" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="MCKPIN" edc:desc="MCKn input pin is used as Master Clock n source" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MCKEN" edc:nzwidth="0x1" edc:desc="Master Clock Enable"/>
            <edc:SFRFieldDef edc:cname="MCKOUTINV" edc:nzwidth="0x1" edc:desc="Master Clock Output Invert"/>
            <edc:SFRFieldDef edc:cname="MCKDIV" edc:nzwidth="0x6" edc:desc="Master Clock Division Factor"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MCKOUTDIV" edc:nzwidth="0x6" edc:desc="Master Clock Output Division Factor"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="I2S" edc:cname="INTENCLR" edc:nzwidth="0x10" edc:access="--nn--nn--nn--nn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x3333" edc:_addr="0x42004C0C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="I2S">
            <edc:SFRFieldDef edc:cname="RXRDY0" edc:nzwidth="0x1" edc:desc="Receive Ready 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXRDY1" edc:nzwidth="0x1" edc:desc="Receive Ready 1 Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXOR0" edc:nzwidth="0x1" edc:desc="Receive Overrun 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXOR1" edc:nzwidth="0x1" edc:desc="Receive Overrun 1 Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TXRDY0" edc:nzwidth="0x1" edc:desc="Transmit Ready 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXRDY1" edc:nzwidth="0x1" edc:desc="Transmit Ready 1 Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TXUR0" edc:nzwidth="0x1" edc:desc="Transmit Underrun 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXUR1" edc:nzwidth="0x1" edc:desc="Transmit Underrun 1 Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x42004C0E"/>
      <edc:SFRDef ltx:memberofperipheral="I2S" edc:cname="INTENSET" edc:nzwidth="0x10" edc:access="--nn--nn--nn--nn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x3333" edc:_addr="0x42004C10">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="I2S">
            <edc:SFRFieldDef edc:cname="RXRDY0" edc:nzwidth="0x1" edc:desc="Receive Ready 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXRDY1" edc:nzwidth="0x1" edc:desc="Receive Ready 1 Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXOR0" edc:nzwidth="0x1" edc:desc="Receive Overrun 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXOR1" edc:nzwidth="0x1" edc:desc="Receive Overrun 1 Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TXRDY0" edc:nzwidth="0x1" edc:desc="Transmit Ready 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXRDY1" edc:nzwidth="0x1" edc:desc="Transmit Ready 1 Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TXUR0" edc:nzwidth="0x1" edc:desc="Transmit Underrun 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXUR1" edc:nzwidth="0x1" edc:desc="Transmit Underrun 1 Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x42004C12"/>
      <edc:SFRDef ltx:memberofperipheral="I2S" edc:cname="INTFLAG" edc:nzwidth="0x10" edc:access="--nn--nn--nn--nn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x3333" edc:_addr="0x42004C14">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="I2S">
            <edc:SFRFieldDef edc:cname="RXRDY0" edc:nzwidth="0x1" edc:desc="Receive Ready 0"/>
            <edc:SFRFieldDef edc:cname="RXRDY1" edc:nzwidth="0x1" edc:desc="Receive Ready 1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXOR0" edc:nzwidth="0x1" edc:desc="Receive Overrun 0"/>
            <edc:SFRFieldDef edc:cname="RXOR1" edc:nzwidth="0x1" edc:desc="Receive Overrun 1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TXRDY0" edc:nzwidth="0x1" edc:desc="Transmit Ready 0"/>
            <edc:SFRFieldDef edc:cname="TXRDY1" edc:nzwidth="0x1" edc:desc="Transmit Ready 1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TXUR0" edc:nzwidth="0x1" edc:desc="Transmit Underrun 0"/>
            <edc:SFRFieldDef edc:cname="TXUR1" edc:nzwidth="0x1" edc:desc="Transmit Underrun 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x42004C16"/>
      <edc:SFRDef ltx:memberofperipheral="I2S" edc:cname="SYNCBUSY" edc:nzwidth="0x10" edc:access="------rr--rrrrrr" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x33F" edc:_addr="0x42004C18">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="I2S">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Status"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable Synchronization Status"/>
            <edc:SFRFieldDef edc:cname="CKEN0" edc:nzwidth="0x1" edc:desc="Clock Unit 0 Enable Synchronization Status"/>
            <edc:SFRFieldDef edc:cname="CKEN1" edc:nzwidth="0x1" edc:desc="Clock Unit 1 Enable Synchronization Status"/>
            <edc:SFRFieldDef edc:cname="TXEN" edc:nzwidth="0x1" edc:desc="Tx Serializer Enable Synchronization Status"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Rx Serializer Enable Synchronization Status"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TXDATA" edc:nzwidth="0x1" edc:desc="Tx Data Synchronization Status"/>
            <edc:SFRFieldDef edc:cname="RXDATA" edc:nzwidth="0x1" edc:desc="Rx Data Synchronization Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x6" edc:_addr="0x42004C1A"/>
      <edc:SFRDef ltx:memberofperipheral="I2S" edc:cname="TXCTRL" edc:nzwidth="0x20" edc:access="------nnnnnnnnnnnnnn-nnnn--nnn--" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3FFF79C" edc:_addr="0x42004C20">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="I2S">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TXDEFAULT" edc:nzwidth="0x2" edc:desc="Line Default Line when Slot Disabled">
              <edc:SFRFieldSemantic edc:cname="ZERO" edc:desc="Output Default Value is 0" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ONE" edc:desc="Output Default Value is 1" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="HIZ" edc:desc="Output Default Value is high impedance" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXSAME" edc:nzwidth="0x1" edc:desc="Transmit Data when Underrun">
              <edc:SFRFieldSemantic edc:cname="ZERO" edc:desc="Zero data transmitted in case of underrun" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SAME" edc:desc="Last data transmitted in case of underrun" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SLOTADJ" edc:nzwidth="0x1" edc:desc="Data Slot Formatting Adjust">
              <edc:SFRFieldSemantic edc:cname="RIGHT" edc:desc="Data is right adjusted in slot" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LEFT" edc:desc="Data is left adjusted in slot" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DATASIZE" edc:nzwidth="0x3" edc:desc="Data Word Size">
              <edc:SFRFieldSemantic edc:cname="32" edc:desc="32 bits" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="24" edc:desc="24 bits" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="20" edc:desc="20 bits" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="18" edc:desc="18 bits" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="16" edc:desc="16 bits" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="16C" edc:desc="16 bits compact stereo" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="8" edc:desc="8 bits" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="8C" edc:desc="8 bits compact stereo" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="WORDADJ" edc:nzwidth="0x1" edc:desc="Data Word Formatting Adjust">
              <edc:SFRFieldSemantic edc:cname="RIGHT" edc:desc="Data is right adjusted in word" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LEFT" edc:desc="Data is left adjusted in word" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EXTEND" edc:nzwidth="0x2" edc:desc="Data Formatting Bit Extension">
              <edc:SFRFieldSemantic edc:cname="ZERO" edc:desc="Extend with zeroes" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ONE" edc:desc="Extend with ones" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="MSBIT" edc:desc="Extend with Most Significant Bit" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="LSBIT" edc:desc="Extend with Least Significant Bit" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BITREV" edc:nzwidth="0x1" edc:desc="Data Formatting Bit Reverse">
              <edc:SFRFieldSemantic edc:cname="MSBIT" edc:desc="Transfer Data Most Significant Bit (MSB) first (default for I2S protocol)" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LSBIT" edc:desc="Transfer Data Least Significant Bit (LSB) first" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SLOTDIS0" edc:nzwidth="0x1" edc:desc="Slot 0 Disabled for this Serializer"/>
            <edc:SFRFieldDef edc:cname="SLOTDIS1" edc:nzwidth="0x1" edc:desc="Slot 1 Disabled for this Serializer"/>
            <edc:SFRFieldDef edc:cname="SLOTDIS2" edc:nzwidth="0x1" edc:desc="Slot 2 Disabled for this Serializer"/>
            <edc:SFRFieldDef edc:cname="SLOTDIS3" edc:nzwidth="0x1" edc:desc="Slot 3 Disabled for this Serializer"/>
            <edc:SFRFieldDef edc:cname="SLOTDIS4" edc:nzwidth="0x1" edc:desc="Slot 4 Disabled for this Serializer"/>
            <edc:SFRFieldDef edc:cname="SLOTDIS5" edc:nzwidth="0x1" edc:desc="Slot 5 Disabled for this Serializer"/>
            <edc:SFRFieldDef edc:cname="SLOTDIS6" edc:nzwidth="0x1" edc:desc="Slot 6 Disabled for this Serializer"/>
            <edc:SFRFieldDef edc:cname="SLOTDIS7" edc:nzwidth="0x1" edc:desc="Slot 7 Disabled for this Serializer"/>
            <edc:SFRFieldDef edc:cname="MONO" edc:nzwidth="0x1" edc:desc="Mono Mode">
              <edc:SFRFieldSemantic edc:cname="STEREO" edc:desc="Normal mode" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="MONO" edc:desc="Left channel data is duplicated to right channel" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DMA" edc:nzwidth="0x1" edc:desc="Single or Multiple DMA Channels">
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single DMA channel" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="MULTIPLE" edc:desc="One DMA channel per data channel" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="I2S" edc:cname="RXCTRL" edc:nzwidth="0x20" edc:access="-----nnnnnnnnnnnnnnn-nnnn-n---nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FFF7A3" edc:_addr="0x42004C24">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="I2S">
            <edc:SFRFieldDef edc:cname="SERMODE" edc:nzwidth="0x2" edc:desc="Serializer Mode">
              <edc:SFRFieldSemantic edc:cname="RX" edc:desc="Receive" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PDM2" edc:desc="Receive one PDM data on each serial clock edge" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CLKSEL" edc:nzwidth="0x1" edc:desc="Clock Unit Selection">
              <edc:SFRFieldSemantic edc:cname="CLK0" edc:desc="Use Clock Unit 0" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CLK1" edc:desc="Use Clock Unit 1" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SLOTADJ" edc:nzwidth="0x1" edc:desc="Data Slot Formatting Adjust">
              <edc:SFRFieldSemantic edc:cname="RIGHT" edc:desc="Data is right adjusted in slot" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LEFT" edc:desc="Data is left adjusted in slot" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DATASIZE" edc:nzwidth="0x3" edc:desc="Data Word Size">
              <edc:SFRFieldSemantic edc:cname="32" edc:desc="32 bits" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="24" edc:desc="24 bits" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="20" edc:desc="20 bits" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="18" edc:desc="18 bits" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="16" edc:desc="16 bits" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="16C" edc:desc="16 bits compact stereo" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="8" edc:desc="8 bits" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="8C" edc:desc="8 bits compact stereo" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="WORDADJ" edc:nzwidth="0x1" edc:desc="Data Word Formatting Adjust">
              <edc:SFRFieldSemantic edc:cname="RIGHT" edc:desc="Data is right adjusted in word" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LEFT" edc:desc="Data is left adjusted in word" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EXTEND" edc:nzwidth="0x2" edc:desc="Data Formatting Bit Extension">
              <edc:SFRFieldSemantic edc:cname="ZERO" edc:desc="Extend with zeroes" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ONE" edc:desc="Extend with ones" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="MSBIT" edc:desc="Extend with Most Significant Bit" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="LSBIT" edc:desc="Extend with Least Significant Bit" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BITREV" edc:nzwidth="0x1" edc:desc="Data Formatting Bit Reverse">
              <edc:SFRFieldSemantic edc:cname="MSBIT" edc:desc="Transfer Data Most Significant Bit (MSB) first (default for I2S protocol)" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LSBIT" edc:desc="Transfer Data Least Significant Bit (LSB) first" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SLOTDIS0" edc:nzwidth="0x1" edc:desc="Slot 0 Disabled for this Serializer"/>
            <edc:SFRFieldDef edc:cname="SLOTDIS1" edc:nzwidth="0x1" edc:desc="Slot 1 Disabled for this Serializer"/>
            <edc:SFRFieldDef edc:cname="SLOTDIS2" edc:nzwidth="0x1" edc:desc="Slot 2 Disabled for this Serializer"/>
            <edc:SFRFieldDef edc:cname="SLOTDIS3" edc:nzwidth="0x1" edc:desc="Slot 3 Disabled for this Serializer"/>
            <edc:SFRFieldDef edc:cname="SLOTDIS4" edc:nzwidth="0x1" edc:desc="Slot 4 Disabled for this Serializer"/>
            <edc:SFRFieldDef edc:cname="SLOTDIS5" edc:nzwidth="0x1" edc:desc="Slot 5 Disabled for this Serializer"/>
            <edc:SFRFieldDef edc:cname="SLOTDIS6" edc:nzwidth="0x1" edc:desc="Slot 6 Disabled for this Serializer"/>
            <edc:SFRFieldDef edc:cname="SLOTDIS7" edc:nzwidth="0x1" edc:desc="Slot 7 Disabled for this Serializer"/>
            <edc:SFRFieldDef edc:cname="MONO" edc:nzwidth="0x1" edc:desc="Mono Mode">
              <edc:SFRFieldSemantic edc:cname="STEREO" edc:desc="Normal mode" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="MONO" edc:desc="Left channel data is duplicated to right channel" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DMA" edc:nzwidth="0x1" edc:desc="Single or Multiple DMA Channels">
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single DMA channel" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="MULTIPLE" edc:desc="One DMA channel per data channel" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RXLOOP" edc:nzwidth="0x1" edc:desc="Loop-back Test Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x42004C28"/>
      <edc:SFRDef ltx:memberofperipheral="I2S" edc:cname="TXDATA" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42004C30">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="I2S">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Sample Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="I2S" edc:cname="RXDATA" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42004C34">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="I2S">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Sample Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3C8" edc:_addr="0x42004C38"/>
      <edc:SFRDef ltx:memberofperipheral="OPAMP" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="n-----nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x83" edc:_addr="0x42005000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OPAMP">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="LPMUX" edc:nzwidth="0x1" edc:desc="Low-Power Mux"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x42005001"/>
      <edc:SFRDef ltx:memberofperipheral="OPAMP" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="-----rrr" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x42005002">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OPAMP">
            <edc:SFRFieldDef edc:cname="READY0" edc:nzwidth="0x1" edc:desc="OPAMP 0 Ready"/>
            <edc:SFRFieldDef edc:cname="READY1" edc:nzwidth="0x1" edc:desc="OPAMP 1 Ready"/>
            <edc:SFRFieldDef edc:cname="READY2" edc:nzwidth="0x1" edc:desc="OPAMP 2 Ready"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x42005003"/>
      <edc:SFRDef ltx:memberofperipheral="OPAMP" edc:cname="OPAMPCTRL0" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnn-" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFE" edc:_addr="0x42005004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OPAMP">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Operational Amplifier Enable"/>
            <edc:SFRFieldDef edc:cname="ANAOUT" edc:nzwidth="0x1" edc:desc="Analog Output"/>
            <edc:SFRFieldDef edc:cname="BIAS" edc:nzwidth="0x2" edc:desc="Bias Selection">
              <edc:SFRFieldSemantic edc:cname="MODE0" edc:desc="Minimum current consumption, but the slowest mode" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="MODE1" edc:desc="Low current consumption, slow speed" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="MODE2" edc:desc="High current consumption, fast speed" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="MODE3" edc:desc="Maximum current consumption, but the fastest mode" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RES2VCC" edc:nzwidth="0x1" edc:desc="Resistor ladder To VCC"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="On Demand Control"/>
            <edc:SFRFieldDef edc:cname="RES2OUT" edc:nzwidth="0x1" edc:desc="Resistor ladder To Output"/>
            <edc:SFRFieldDef edc:cname="RES1EN" edc:nzwidth="0x1" edc:desc="Resistor 1 Enable"/>
            <edc:SFRFieldDef edc:cname="RES1MUX" edc:nzwidth="0x3" edc:desc="Resistor 1 Mux">
              <edc:SFRFieldSemantic edc:cname="OA0POS" edc:desc="OPAMP0 Positive Input" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="OA0NEG" edc:desc="OPAMP0 Negative Input" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="DAC_REFBUF" edc:desc="DAC VOUT0 or OPAMP Reference Output Voltage (REFBUF)" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="AVSS" edc:desc="Ground" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="RG_CONN" edc:desc="RG_CONN" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="POTMUX" edc:nzwidth="0x3" edc:desc="Potentiometer Selection">
              <edc:SFRFieldSemantic edc:cname="14R_2R" edc:desc="R1 = 14R, R2 = 2R" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="12R_4R" edc:desc="R1 = 12R, R2 = 4R" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="8R_8R" edc:desc="R1 = 8R, R2 = 8R" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="6R_10R" edc:desc="R1 = 6R, R2 = 10R" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="4R_12R" edc:desc="R1 = 4R, R2 = 12R" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="3R_13R" edc:desc="R1 = 3R, R2 = 13R" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="2R_14R" edc:desc="R1 = 2R, R2 = 14R" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="R_15R" edc:desc="R1 = 1R, R2 = 15R" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MUXPOS" edc:nzwidth="0x4" edc:desc="Positive Input Mux Selection">
              <edc:SFRFieldSemantic edc:cname="OA0POS" edc:desc="OPAMP0 Positive Input" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="OA0TAP" edc:desc="OPAMP0 Resistor ladder taps" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="DAC_REFBUF" edc:desc="REFERENCE or DAC VOUT0 Output" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="AVSS" edc:desc="Ground" edc:when="(field &amp; 0xF) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MUXNEG" edc:nzwidth="0x4" edc:desc="Negative Input Mux Selection">
              <edc:SFRFieldSemantic edc:cname="OA0NEG" edc:desc="OPAMP0 Negative Input" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="OA0TAP" edc:desc="OPAMP0 Resistor ladder taps" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="DAC_REFBUF" edc:desc="DAC VOUT0 or OPAMP Reference Output Voltage (REFBUF)" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="OA0OUT" edc:desc="OPAMP0 Output" edc:when="(field &amp; 0xF) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="OPAMP" edc:cname="OPAMPCTRL1" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnn-" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFE" edc:_addr="0x42005008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OPAMP">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Operational Amplifier Enable"/>
            <edc:SFRFieldDef edc:cname="ANAOUT" edc:nzwidth="0x1" edc:desc="Analog Output"/>
            <edc:SFRFieldDef edc:cname="BIAS" edc:nzwidth="0x2" edc:desc="Bias Selection">
              <edc:SFRFieldSemantic edc:cname="MODE0" edc:desc="Minimum current consumption, but the slowest mode" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="MODE1" edc:desc="Low current consumption, slow speed" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="MODE2" edc:desc="High current consumption, fast speed" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="MODE3" edc:desc="Maximum current consumption, but the fastest mode" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RES2VCC" edc:nzwidth="0x1" edc:desc="Resistor ladder To VCC"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="On Demand Control"/>
            <edc:SFRFieldDef edc:cname="RES2OUT" edc:nzwidth="0x1" edc:desc="Resistor ladder To Output"/>
            <edc:SFRFieldDef edc:cname="RES1EN" edc:nzwidth="0x1" edc:desc="Resistor 1 Enable"/>
            <edc:SFRFieldDef edc:cname="RES1MUX" edc:nzwidth="0x3" edc:desc="Resistor 1 Mux">
              <edc:SFRFieldSemantic edc:cname="OA1POS" edc:desc="OPAMP1 Positive Input" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="OA1NEG" edc:desc="OPAMP1 Negative Input" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="OA0OUT" edc:desc="OPAMP0 Output" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="AVSS" edc:desc="Ground" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="RG_CONN" edc:desc="RG_CONN" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="POTMUX" edc:nzwidth="0x3" edc:desc="Potentiometer Selection">
              <edc:SFRFieldSemantic edc:cname="14R_2R" edc:desc="R1 = 14R, R2 = 2R" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="12R_4R" edc:desc="R1 = 12R, R2 = 4R" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="8R_8R" edc:desc="R1 = 8R, R2 = 8R" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="6R_10R" edc:desc="R1 = 6R, R2 = 10R" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="4R_12R" edc:desc="R1 = 4R, R2 = 12R" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="3R_13R" edc:desc="R1 = 3R, R2 = 13R" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="2R_14R" edc:desc="R1 = 2R, R2 = 14R" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="R_15R" edc:desc="R1 = 1R, R2 = 15R" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MUXPOS" edc:nzwidth="0x4" edc:desc="Positive Input Mux Selection">
              <edc:SFRFieldSemantic edc:cname="OA1POS" edc:desc="OPAMP1 Positive Input" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="OA1TAP" edc:desc="OPAMP1 Resistor ladder taps" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="DAC_REFBUF" edc:desc="REFERENCE or DAC VOUT0 Output" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="AVSS" edc:desc="Ground" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="OA0OUT" edc:desc="OPAMP0 output" edc:when="(field &amp; 0xF) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MUXNEG" edc:nzwidth="0x4" edc:desc="Negative Input Mux Selection">
              <edc:SFRFieldSemantic edc:cname="OA0NEG" edc:desc="OPAMP0 Negative Input" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="OA0TAP" edc:desc="OPAMP0 Resistor ladder taps" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="DAC_REFBUF" edc:desc="DAC VOUT0 or OPAMP Reference Output Voltage (REFBUF)" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="OA0OUT" edc:desc="OPAMP0 Output" edc:when="(field &amp; 0xF) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="OPAMP" edc:cname="OPAMPCTRL2" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnn-" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFE" edc:_addr="0x4200500C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OPAMP">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Operational Amplifier Enable"/>
            <edc:SFRFieldDef edc:cname="ANAOUT" edc:nzwidth="0x1" edc:desc="Analog Output"/>
            <edc:SFRFieldDef edc:cname="BIAS" edc:nzwidth="0x2" edc:desc="Bias Selection">
              <edc:SFRFieldSemantic edc:cname="MODE0" edc:desc="Minimum current consumption, but the slowest mode" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="MODE1" edc:desc="Low current consumption, slow speed" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="MODE2" edc:desc="High current consumption, fast speed" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="MODE3" edc:desc="Maximum current consumption, but the fastest mode" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RES2VCC" edc:nzwidth="0x1" edc:desc="Resistor ladder To VCC"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="On Demand Control"/>
            <edc:SFRFieldDef edc:cname="RES2OUT" edc:nzwidth="0x1" edc:desc="Resistor ladder To Output"/>
            <edc:SFRFieldDef edc:cname="RES1EN" edc:nzwidth="0x1" edc:desc="Resistor 1 Enable"/>
            <edc:SFRFieldDef edc:cname="RES1MUX" edc:nzwidth="0x3" edc:desc="Resistor 1 Mux">
              <edc:SFRFieldSemantic edc:cname="OA2POS" edc:desc="OPAMP2 Positive Input" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="OA2NEG" edc:desc="OPAMP2 Negative Input" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="OA1OUT" edc:desc="OPAMP1 Output" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="AVSS" edc:desc="Ground" edc:when="(field &amp; 0x7) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="POTMUX" edc:nzwidth="0x3" edc:desc="Potentiometer Selection">
              <edc:SFRFieldSemantic edc:cname="14R_2R" edc:desc="R1 = 14R, R2 = 2R" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="12R_4R" edc:desc="R1 = 12R, R2 = 4R" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="8R_8R" edc:desc="R1 = 8R, R2 = 8R" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="6R_10R" edc:desc="R1 = 6R, R2 = 10R" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="4R_12R" edc:desc="R1 = 4R, R2 = 12R" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="3R_13R" edc:desc="R1 = 3R, R2 = 13R" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="2R_14R" edc:desc="R1 = 2R, R2 = 14R" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="R_15R" edc:desc="R1 = 1R, R2 = 15R" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MUXPOS" edc:nzwidth="0x4" edc:desc="Positive Input Mux Selection">
              <edc:SFRFieldSemantic edc:cname="OA2POS" edc:desc="OPAMP2 Positive Input" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="OA2TAP" edc:desc="OPAMP2 Resistor ladder taps" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="DAC_REFBUF" edc:desc="REFERENCE or DAC VOUT0 Output" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="AVSS" edc:desc="Ground" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="OA1OUT" edc:desc="OPAMP1 Output" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="OA0POS" edc:desc="OPAMP0 Positive Input" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="OA1POS" edc:desc="OPAMP1 Positive Input" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="OA0TAP" edc:desc="OPAMP0 Resistor Ladder Taps" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="RES3TAP" edc:desc="RES3TAP Potentiometer" edc:when="(field &amp; 0xF) == 0x8"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MUXNEG" edc:nzwidth="0x4" edc:desc="Negative Input Mux Selection">
              <edc:SFRFieldSemantic edc:cname="OA0NEG" edc:desc="OPAMP0 Negative Input" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="OA0TAP" edc:desc="OPAMP0 Resistor ladder taps" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="DAC_REFBUF" edc:desc="DAC VOUT0 or OPAMP Reference Output Voltage (REFBUF)" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="OA0OUT" edc:desc="OPAMP0 Output" edc:when="(field &amp; 0xF) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="OPAMP" edc:cname="RESCTRL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x42005010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OPAMP">
            <edc:SFRFieldDef edc:cname="RES2OUT" edc:nzwidth="0x1" edc:desc="Resistor ladder To Output"/>
            <edc:SFRFieldDef edc:cname="RES1EN" edc:nzwidth="0x1" edc:desc="Resistor 1 Enable"/>
            <edc:SFRFieldDef edc:cname="RES1MUX" edc:nzwidth="0x1" edc:desc="Resistor 1 Mux">
              <edc:SFRFieldSemantic edc:cname="DAC" edc:desc="DAC VOUT0 Output" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="REFBUF" edc:desc="OPAMP Reference Buffer Output" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="POTMUX" edc:nzwidth="0x3" edc:desc="Potentiometer Selection">
              <edc:SFRFieldSemantic edc:cname="14R_2R" edc:desc="Gain = 0.14" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="12R_4R" edc:desc="Gain = 0.33" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="8R_8R" edc:desc="Gain = 1" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="6R_10R" edc:desc="Gain = 1.67" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="4R_12R" edc:desc="Gain = 3" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="3R_13R" edc:desc="Gain = 4.33" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="2R_14R" edc:desc="Gain = 7" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="R_15R" edc:desc="Gain = 15" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="REFBUFLEVEL" edc:nzwidth="0x2" edc:desc="Reference output voltage level select">
              <edc:SFRFieldSemantic edc:cname="1_1V" edc:desc="1.1V" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="1_25V" edc:desc="1.25V" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="1_6V" edc:desc="1.6V" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3EF" edc:_addr="0x42005011"/>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="nn-n--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xD3" edc:_addr="0x42005400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TAMPERS" edc:nzwidth="0x1" edc:desc="Tamper Erase"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DRP" edc:nzwidth="0x1" edc:desc="Data Remanence Prevention"/>
            <edc:SFRFieldDef edc:cname="SILACC" edc:nzwidth="0x1" edc:desc="Silent Access"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x42005401"/>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x42005404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="TrustRAM Readout Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DRP" edc:nzwidth="0x1" edc:desc="Data Remanence Prevention Ended Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x42005405">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="TrustRAM Readout Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DRP" edc:nzwidth="0x1" edc:desc="Data Remanence Prevention Ended Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x42005406">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="TrustRAM Readout Error"/>
            <edc:SFRFieldDef edc:cname="DRP" edc:nzwidth="0x1" edc:desc="Data Remanence Prevention Ended"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x42005407">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="RAMINV" edc:nzwidth="0x1" edc:desc="RAM Inversion Bit"/>
            <edc:SFRFieldDef edc:cname="DRP" edc:nzwidth="0x1" edc:desc="Data Remanence Prevention Ongoing"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="------------------------------rr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3" edc:_addr="0x42005408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="DSCC" edc:nzwidth="0x20" edc:access="w-wwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xBFFFFFFF" edc:_addr="0x4200540C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DSCKEY" edc:nzwidth="0x1E" edc:desc="Data Scramble Key"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DSCEN" edc:nzwidth="0x1" edc:desc="Data Scramble Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1F0" edc:_addr="0x42005410"/>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005600">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005604">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM2" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005608">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM3" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4200560C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM4" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005610">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM5" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005614">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM6" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005618">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM7" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4200561C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM8" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005620">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM9" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005624">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM10" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005628">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM11" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4200562C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM12" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005630">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM13" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005634">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM14" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005638">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM15" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4200563C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM16" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005640">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM17" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005644">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM18" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005648">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM19" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4200564C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM20" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005650">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM21" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005654">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM22" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005658">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM23" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4200565C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM24" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005660">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM25" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005664">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM26" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005668">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM27" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4200566C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM28" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005670">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM29" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005674">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM30" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005678">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM31" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4200567C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM32" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005680">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM33" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005684">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM34" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005688">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM35" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4200568C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM36" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005690">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM37" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005694">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM38" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005698">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM39" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4200569C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM40" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420056A0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM41" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420056A4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM42" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420056A8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM43" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420056AC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM44" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420056B0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM45" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420056B4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM46" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420056B8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM47" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420056BC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM48" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420056C0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM49" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420056C4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM50" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420056C8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM51" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420056CC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM52" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420056D0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM53" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420056D4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM54" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420056D8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM55" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420056DC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM56" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420056E0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM57" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420056E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM58" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420056E8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM59" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420056EC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM60" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420056F0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM61" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420056F4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM62" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420056F8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM63" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420056FC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM64" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005700">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM65" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005704">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM66" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005708">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM67" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4200570C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM68" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005710">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM69" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005714">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM70" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005718">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM71" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4200571C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM72" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005720">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM73" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005724">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM74" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005728">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM75" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4200572C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM76" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005730">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM77" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005734">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM78" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005738">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM79" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4200573C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM80" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005740">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM81" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005744">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM82" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005748">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM83" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4200574C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM84" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005750">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM85" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005754">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM86" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005758">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM87" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4200575C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM88" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005760">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM89" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005764">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM90" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005768">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM91" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4200576C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM92" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005770">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM93" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005774">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM94" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005778">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM95" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4200577C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM96" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005780">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM97" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005784">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM98" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005788">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM99" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4200578C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM100" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005790">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM101" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005794">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM102" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42005798">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM103" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4200579C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM104" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420057A0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM105" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420057A4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM106" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420057A8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM107" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420057AC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM108" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420057B0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM109" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420057B4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM110" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420057B8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM111" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420057BC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM112" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420057C0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM113" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420057C4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM114" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420057C8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM115" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420057CC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM116" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420057D0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM117" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420057D4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM118" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420057D8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM119" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420057DC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM120" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420057E0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM121" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420057E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM122" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420057E8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM123" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420057EC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM124" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420057F0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM125" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420057F4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM126" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420057F8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TRAM" edc:cname="RAM127" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x420057FC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRAM">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Trust RAM Data"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
            <edc:SFRFieldDef edc:cname="HWORD1" edc:nzwidth="0x10" edc:desc="Trust RAM Halfword Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:nzwidth="0x8" edc:desc="Trust RAM Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:SFRDataSector>
    <edc:SFRDataSector edc:regionid="PPB" edc:beginaddr="0xE0000000" edc:endaddr="0xE000F000" edc:rw="rw">
      <edc:AdjustPoint edc:offset="0x1000" edc:_addr="0xE0000000"/>
      <edc:SFRDef ltx:memberofperipheral="DWT" edc:cname="DWT_CTRL" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnn---nnnnnnnnnnnnn" edc:por="00001011000000000000000000000000" edc:mclr="00001011000000000000000000000000" edc:impl="0xFFFF1FFF" edc:_addr="0xE0001000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWT">
            <edc:SFRFieldDef edc:cname="CYCCNTENA" edc:nzwidth="0x1" edc:desc="CYCCNT enable"/>
            <edc:SFRFieldDef edc:cname="POSTPRESET" edc:nzwidth="0x4" edc:desc="POSTCNT preset"/>
            <edc:SFRFieldDef edc:cname="POSTINIT" edc:nzwidth="0x4" edc:desc="POSTCNT initial"/>
            <edc:SFRFieldDef edc:cname="CYCTAP" edc:nzwidth="0x1" edc:desc="Cycle count tap"/>
            <edc:SFRFieldDef edc:cname="SYNCTAP" edc:nzwidth="0x2" edc:desc="Synchronization tap"/>
            <edc:SFRFieldDef edc:cname="PCSAMPLENA" edc:nzwidth="0x1" edc:desc="PC sample enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="EXCTRCENA" edc:nzwidth="0x1" edc:desc="Exception trace enable"/>
            <edc:SFRFieldDef edc:cname="CPIEVTENA" edc:nzwidth="0x1" edc:desc="CPI event enable"/>
            <edc:SFRFieldDef edc:cname="EXCEVTENA" edc:nzwidth="0x1" edc:desc="Exception event enable"/>
            <edc:SFRFieldDef edc:cname="SLEEPEVTENA" edc:nzwidth="0x1" edc:desc="Sleep event enable"/>
            <edc:SFRFieldDef edc:cname="LSUEVTENA" edc:nzwidth="0x1" edc:desc="LSU event enable"/>
            <edc:SFRFieldDef edc:cname="FOLDEVTENA" edc:nzwidth="0x1" edc:desc="Fold event enable"/>
            <edc:SFRFieldDef edc:cname="CYCEVTENA" edc:nzwidth="0x1" edc:desc="Cycle event enable"/>
            <edc:SFRFieldDef edc:cname="CYCDISS" edc:nzwidth="0x1" edc:desc="Cycle counter disabled secure"/>
            <edc:SFRFieldDef edc:cname="NOPRFCNT" edc:nzwidth="0x1" edc:desc="No profile counters"/>
            <edc:SFRFieldDef edc:cname="NOCYCCNT" edc:nzwidth="0x1" edc:desc="No cycle count"/>
            <edc:SFRFieldDef edc:cname="NOEXTTRIG" edc:nzwidth="0x1" edc:desc="No external triggers"/>
            <edc:SFRFieldDef edc:cname="NOTRCPKT" edc:nzwidth="0x1" edc:desc="No trace packets"/>
            <edc:SFRFieldDef edc:cname="NUMCOMP" edc:nzwidth="0x4" edc:desc="Number of comparators"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x18" edc:_addr="0xE0001004"/>
      <edc:SFRDef ltx:memberofperipheral="DWT" edc:cname="DWT_PCSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0xE000101C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWT">
            <edc:SFRFieldDef edc:cname="EIASAMPLE" edc:nzwidth="0x20" edc:desc="Executed instruction address sample"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DWT" edc:cname="COMPARATOR0DWT_COMP" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE0001020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWT">
            <edc:SFRFieldDef edc:cname="VALUE" edc:nzwidth="0x20" edc:desc="Cycle/PC/data value or data address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0xE0001024"/>
      <edc:SFRDef ltx:memberofperipheral="DWT" edc:cname="COMPARATOR0DWT_FUNCTION" edc:nzwidth="0x20" edc:access="nnnnn--n------------nn----nnnnnn" edc:impl="0xF9000C3F" edc:_addr="0xE0001028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWT">
            <edc:SFRFieldDef edc:cname="MATCH" edc:nzwidth="0x4" edc:desc="Match type"/>
            <edc:SFRFieldDef edc:cname="ACTION" edc:nzwidth="0x2" edc:desc="Action on match"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="DATAVSIZE" edc:nzwidth="0x2" edc:desc="Data value size"/>
            <edc:AdjustPoint edc:offset="0xC"/>
            <edc:SFRFieldDef edc:cname="MATCHED" edc:nzwidth="0x1" edc:desc="Comparator matched"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ID" edc:nzwidth="0x5" edc:desc="Identify capability"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0xE000102C"/>
      <edc:SFRDef ltx:memberofperipheral="DWT" edc:cname="COMPARATOR1DWT_COMP" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE0001030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWT">
            <edc:SFRFieldDef edc:cname="VALUE" edc:nzwidth="0x20" edc:desc="Cycle/PC/data value or data address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0xE0001034"/>
      <edc:SFRDef ltx:memberofperipheral="DWT" edc:cname="COMPARATOR1DWT_FUNCTION" edc:nzwidth="0x20" edc:access="nnnnn--n------------nn----nnnnnn" edc:impl="0xF9000C3F" edc:_addr="0xE0001038">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWT">
            <edc:SFRFieldDef edc:cname="MATCH" edc:nzwidth="0x4" edc:desc="Match type"/>
            <edc:SFRFieldDef edc:cname="ACTION" edc:nzwidth="0x2" edc:desc="Action on match"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="DATAVSIZE" edc:nzwidth="0x2" edc:desc="Data value size"/>
            <edc:AdjustPoint edc:offset="0xC"/>
            <edc:SFRFieldDef edc:cname="MATCHED" edc:nzwidth="0x1" edc:desc="Comparator matched"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ID" edc:nzwidth="0x5" edc:desc="Identify capability"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xF74" edc:_addr="0xE000103C"/>
      <edc:SFRDef ltx:memberofperipheral="DWT" edc:cname="DWT_LAR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0xE0001FB0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWT">
            <edc:SFRFieldDef edc:cname="KEY" edc:nzwidth="0x20" edc:desc="Lock access control">
              <edc:SFRFieldSemantic edc:cname="UNLOCK" edc:desc="Unlock key value" edc:when="(field &amp; 0xFFFFFFFF) == 0xC5ACCE55"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DWT" edc:cname="DWT_LSR" edc:nzwidth="0x20" edc:access="-----------------------------rrr" edc:impl="0x7" edc:_addr="0xE0001FB4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWT">
            <edc:SFRFieldDef edc:cname="SLI" edc:nzwidth="0x1" edc:desc="Software Lock implemented"/>
            <edc:SFRFieldDef edc:cname="SLK" edc:nzwidth="0x1" edc:desc="Software Lock status"/>
            <edc:SFRFieldDef edc:cname="nTT" edc:nzwidth="0x1" edc:desc="Not thirty-two bit"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0xE0001FB8"/>
      <edc:SFRDef ltx:memberofperipheral="DWT" edc:cname="DWT_DEVARCH" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="01000111011100000001101000000010" edc:mclr="01000111011100000001101000000010" edc:_addr="0xE0001FBC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWT">
            <edc:SFRFieldDef edc:cname="ARCHPART" edc:nzwidth="0xC" edc:desc="Architecture Part"/>
            <edc:SFRFieldDef edc:cname="ARCHVER" edc:nzwidth="0x4" edc:desc="Architecture Version"/>
            <edc:SFRFieldDef edc:cname="REVISION" edc:nzwidth="0x4" edc:desc="Revision"/>
            <edc:SFRFieldDef edc:cname="PRESENT" edc:nzwidth="0x1" edc:desc="DEVARCH Present"/>
            <edc:SFRFieldDef edc:cname="ARCHITECT" edc:nzwidth="0xB" edc:desc="Architect"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0xE0001FC0"/>
      <edc:SFRDef ltx:memberofperipheral="DWT" edc:cname="DWT_DEVTYPE" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF" edc:_addr="0xE0001FCC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWT">
            <edc:SFRFieldDef edc:cname="MAJOR" edc:nzwidth="0x4" edc:desc="Major type"/>
            <edc:SFRFieldDef edc:cname="SUB" edc:nzwidth="0x4" edc:desc="Sub-type"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DWT" edc:cname="DWT_PIDR4" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:impl="0xFF" edc:_addr="0xE0001FD0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWT">
            <edc:SFRFieldDef edc:cname="DES_2" edc:nzwidth="0x4" edc:desc="JEP106 continuation code"/>
            <edc:SFRFieldDef edc:cname="SIZE" edc:nzwidth="0x4" edc:desc="4KB count"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DWT" edc:cname="DWT_PIDR5" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0xE0001FD4"/>
      <edc:SFRDef ltx:memberofperipheral="DWT" edc:cname="DWT_PIDR6" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0xE0001FD8"/>
      <edc:SFRDef ltx:memberofperipheral="DWT" edc:cname="DWT_PIDR7" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0xE0001FDC"/>
      <edc:SFRDef ltx:memberofperipheral="DWT" edc:cname="DWT_PIDR0" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:impl="0xFF" edc:_addr="0xE0001FE0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWT">
            <edc:SFRFieldDef edc:cname="PART_0" edc:nzwidth="0x8" edc:desc="Part number bits[7:0]"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DWT" edc:cname="DWT_PIDR1" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:impl="0xFF" edc:_addr="0xE0001FE4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWT">
            <edc:SFRFieldDef edc:cname="PART_1" edc:nzwidth="0x4" edc:desc="Part number bits[11:8]"/>
            <edc:SFRFieldDef edc:cname="DES_0" edc:nzwidth="0x4" edc:desc="JEP106 identification code bits [3:0]"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DWT" edc:cname="DWT_PIDR2" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:impl="0xFF" edc:_addr="0xE0001FE8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWT">
            <edc:SFRFieldDef edc:cname="DES_1" edc:nzwidth="0x3" edc:desc="JEP106 identification code bits[6:4]"/>
            <edc:SFRFieldDef edc:cname="JEDEC" edc:nzwidth="0x1" edc:desc="JEDEC assignee value is used"/>
            <edc:SFRFieldDef edc:cname="REVISION" edc:nzwidth="0x4" edc:desc="Component revision"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DWT" edc:cname="DWT_PIDR3" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:impl="0xFF" edc:_addr="0xE0001FEC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWT">
            <edc:SFRFieldDef edc:cname="CMOD" edc:nzwidth="0x4" edc:desc="Customer Modified"/>
            <edc:SFRFieldDef edc:cname="REVAND" edc:nzwidth="0x4" edc:desc="RevAnd"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DWT" edc:cname="DWT_CIDR0" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000000001101" edc:mclr="00000000000000000000000000001101" edc:impl="0xFF" edc:_addr="0xE0001FF0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWT">
            <edc:SFRFieldDef edc:cname="PRMBL_0" edc:nzwidth="0x8" edc:desc="CoreSight component identification preamble"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DWT" edc:cname="DWT_CIDR1" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000010010000" edc:mclr="00000000000000000000000010010000" edc:impl="0xFF" edc:_addr="0xE0001FF4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWT">
            <edc:SFRFieldDef edc:cname="PRMBL_1" edc:nzwidth="0x4" edc:desc="CoreSight component identification preamble"/>
            <edc:SFRFieldDef edc:cname="CLASS" edc:nzwidth="0x4" edc:desc="CoreSight component class"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DWT" edc:cname="DWT_CIDR2" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000000000101" edc:mclr="00000000000000000000000000000101" edc:impl="0xFF" edc:_addr="0xE0001FF8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWT">
            <edc:SFRFieldDef edc:cname="PRMBL_2" edc:nzwidth="0x8" edc:desc="CoreSight component identification preamble"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DWT" edc:cname="DWT_CIDR3" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000010110001" edc:mclr="00000000000000000000000010110001" edc:impl="0xFF" edc:_addr="0xE0001FFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWT">
            <edc:SFRFieldDef edc:cname="PRMBL_3" edc:nzwidth="0x8" edc:desc="CoreSight component identification preamble"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FPB" edc:cname="FP_CTRL" edc:nzwidth="0x20" edc:access="nnnn-------------nnnnnnnnnnn--nn" edc:impl="0xF0007FF3" edc:_addr="0xE0002000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FPB">
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Flash Patch global enable"/>
            <edc:SFRFieldDef edc:cname="KEY" edc:nzwidth="0x1" edc:desc="FP_CTRL write-enable key"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="NUM_CODE" edc:nzwidth="0x4" edc:desc="Number of implemented code comparators bits [3:0]"/>
            <edc:SFRFieldDef edc:cname="NUM_LIT" edc:nzwidth="0x4" edc:desc="Number of literal comparators"/>
            <edc:SFRFieldDef edc:cname="NUM_CODE_1" edc:nzwidth="0x3" edc:desc="Number of implemented code comparators bits [6:4]"/>
            <edc:AdjustPoint edc:offset="0xD"/>
            <edc:SFRFieldDef edc:cname="REV" edc:nzwidth="0x4" edc:desc="Revision"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FPB" edc:cname="FP_REMAP" edc:nzwidth="0x20" edc:access="--rrrrrrrrrrrrrrrrrrrrrrrrr-----" edc:impl="0x3FFFFFE0" edc:_addr="0xE0002004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FPB">
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="REMAP" edc:nzwidth="0x18" edc:desc="Remap address"/>
            <edc:SFRFieldDef edc:cname="RMPSPT" edc:nzwidth="0x1" edc:desc="Remap supported"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FPB" edc:cname="FP_COMP0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE0002008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FPB">
            <edc:SFRFieldDef edc:cname="BE" edc:nzwidth="0x1" edc:desc="Breakpoint enable"/>
            <edc:SFRFieldDef edc:cname="BPADDR" edc:nzwidth="0x1F" edc:desc="Breakpoint address"/>
            <edc:AdjustPoint edc:offset="-30"/>
            <edc:SFRFieldDef edc:cname="FPADDR" edc:nzwidth="0x1B" edc:desc="Flash Patch address"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FE" edc:nzwidth="0x1" edc:desc="Flash Patch enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FPB" edc:cname="FP_COMP1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE000200C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FPB">
            <edc:SFRFieldDef edc:cname="BE" edc:nzwidth="0x1" edc:desc="Breakpoint enable"/>
            <edc:SFRFieldDef edc:cname="BPADDR" edc:nzwidth="0x1F" edc:desc="Breakpoint address"/>
            <edc:AdjustPoint edc:offset="-30"/>
            <edc:SFRFieldDef edc:cname="FPADDR" edc:nzwidth="0x1B" edc:desc="Flash Patch address"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FE" edc:nzwidth="0x1" edc:desc="Flash Patch enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FPB" edc:cname="FP_COMP2" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE0002010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FPB">
            <edc:SFRFieldDef edc:cname="BE" edc:nzwidth="0x1" edc:desc="Breakpoint enable"/>
            <edc:SFRFieldDef edc:cname="BPADDR" edc:nzwidth="0x1F" edc:desc="Breakpoint address"/>
            <edc:AdjustPoint edc:offset="-30"/>
            <edc:SFRFieldDef edc:cname="FPADDR" edc:nzwidth="0x1B" edc:desc="Flash Patch address"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FE" edc:nzwidth="0x1" edc:desc="Flash Patch enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FPB" edc:cname="FP_COMP3" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE0002014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FPB">
            <edc:SFRFieldDef edc:cname="BE" edc:nzwidth="0x1" edc:desc="Breakpoint enable"/>
            <edc:SFRFieldDef edc:cname="BPADDR" edc:nzwidth="0x1F" edc:desc="Breakpoint address"/>
            <edc:AdjustPoint edc:offset="-30"/>
            <edc:SFRFieldDef edc:cname="FPADDR" edc:nzwidth="0x1B" edc:desc="Flash Patch address"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FE" edc:nzwidth="0x1" edc:desc="Flash Patch enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xF98" edc:_addr="0xE0002018"/>
      <edc:SFRDef ltx:memberofperipheral="FPB" edc:cname="FP_LAR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0xE0002FB0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FPB">
            <edc:SFRFieldDef edc:cname="KEY" edc:nzwidth="0x20" edc:desc="Lock access control">
              <edc:SFRFieldSemantic edc:cname="UNLOCK" edc:desc="Unlock key value" edc:when="(field &amp; 0xFFFFFFFF) == 0xC5ACCE55"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FPB" edc:cname="FP_LSR" edc:nzwidth="0x20" edc:access="-----------------------------rrr" edc:impl="0x7" edc:_addr="0xE0002FB4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FPB">
            <edc:SFRFieldDef edc:cname="SLI" edc:nzwidth="0x1" edc:desc="Software Lock implemented"/>
            <edc:SFRFieldDef edc:cname="SLK" edc:nzwidth="0x1" edc:desc="Software Lock status"/>
            <edc:SFRFieldDef edc:cname="nTT" edc:nzwidth="0x1" edc:desc="Not thirty-two bit"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0xE0002FB8"/>
      <edc:SFRDef ltx:memberofperipheral="FPB" edc:cname="FP_DEVARCH" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="01000111011100000001101000000011" edc:mclr="01000111011100000001101000000011" edc:_addr="0xE0002FBC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FPB">
            <edc:SFRFieldDef edc:cname="ARCHPART" edc:nzwidth="0xC" edc:desc="Architecture Part"/>
            <edc:SFRFieldDef edc:cname="ARCHVER" edc:nzwidth="0x4" edc:desc="Architecture Version"/>
            <edc:SFRFieldDef edc:cname="REVISION" edc:nzwidth="0x4" edc:desc="Revision"/>
            <edc:SFRFieldDef edc:cname="PRESENT" edc:nzwidth="0x1" edc:desc="DEVARCH Present"/>
            <edc:SFRFieldDef edc:cname="ARCHITECT" edc:nzwidth="0xB" edc:desc="Architect"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0xE0002FC0"/>
      <edc:SFRDef ltx:memberofperipheral="FPB" edc:cname="FP_DEVTYPE" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF" edc:_addr="0xE0002FCC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FPB">
            <edc:SFRFieldDef edc:cname="MAJOR" edc:nzwidth="0x4" edc:desc="Major type"/>
            <edc:SFRFieldDef edc:cname="SUB" edc:nzwidth="0x4" edc:desc="Sub-type"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FPB" edc:cname="FP_PIDR4" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:impl="0xFF" edc:_addr="0xE0002FD0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FPB">
            <edc:SFRFieldDef edc:cname="DES_2" edc:nzwidth="0x4" edc:desc="JEP106 continuation code"/>
            <edc:SFRFieldDef edc:cname="SIZE" edc:nzwidth="0x4" edc:desc="4KB count"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FPB" edc:cname="FP_PIDR5" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0xE0002FD4"/>
      <edc:SFRDef ltx:memberofperipheral="FPB" edc:cname="FP_PIDR6" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0xE0002FD8"/>
      <edc:SFRDef ltx:memberofperipheral="FPB" edc:cname="FP_PIDR7" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0xE0002FDC"/>
      <edc:SFRDef ltx:memberofperipheral="FPB" edc:cname="FP_PIDR0" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:impl="0xFF" edc:_addr="0xE0002FE0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FPB">
            <edc:SFRFieldDef edc:cname="PART_0" edc:nzwidth="0x8" edc:desc="Part number bits[7:0]"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FPB" edc:cname="FP_PIDR1" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:impl="0xFF" edc:_addr="0xE0002FE4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FPB">
            <edc:SFRFieldDef edc:cname="PART_1" edc:nzwidth="0x4" edc:desc="Part number bits[11:8]"/>
            <edc:SFRFieldDef edc:cname="DES_0" edc:nzwidth="0x4" edc:desc="JEP106 identification code bits [3:0]"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FPB" edc:cname="FP_PIDR2" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:impl="0xFF" edc:_addr="0xE0002FE8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FPB">
            <edc:SFRFieldDef edc:cname="DES_1" edc:nzwidth="0x3" edc:desc="JEP106 identification code bits[6:4]"/>
            <edc:SFRFieldDef edc:cname="JEDEC" edc:nzwidth="0x1" edc:desc="JEDEC assignee value is used"/>
            <edc:SFRFieldDef edc:cname="REVISION" edc:nzwidth="0x4" edc:desc="Component revision"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FPB" edc:cname="FP_PIDR3" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:impl="0xFF" edc:_addr="0xE0002FEC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FPB">
            <edc:SFRFieldDef edc:cname="CMOD" edc:nzwidth="0x4" edc:desc="Customer Modified"/>
            <edc:SFRFieldDef edc:cname="REVAND" edc:nzwidth="0x4" edc:desc="RevAnd"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FPB" edc:cname="FP_CIDR0" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000000001101" edc:mclr="00000000000000000000000000001101" edc:impl="0xFF" edc:_addr="0xE0002FF0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FPB">
            <edc:SFRFieldDef edc:cname="PRMBL_0" edc:nzwidth="0x8" edc:desc="CoreSight component identification preamble"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FPB" edc:cname="FP_CIDR1" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000010010000" edc:mclr="00000000000000000000000010010000" edc:impl="0xFF" edc:_addr="0xE0002FF4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FPB">
            <edc:SFRFieldDef edc:cname="PRMBL_1" edc:nzwidth="0x4" edc:desc="CoreSight component identification preamble"/>
            <edc:SFRFieldDef edc:cname="CLASS" edc:nzwidth="0x4" edc:desc="CoreSight component class"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FPB" edc:cname="FP_CIDR2" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000000000101" edc:mclr="00000000000000000000000000000101" edc:impl="0xFF" edc:_addr="0xE0002FF8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FPB">
            <edc:SFRFieldDef edc:cname="PRMBL_2" edc:nzwidth="0x8" edc:desc="CoreSight component identification preamble"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FPB" edc:cname="FP_CIDR3" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000010110001" edc:mclr="00000000000000000000000010110001" edc:impl="0xFF" edc:_addr="0xE0002FFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FPB">
            <edc:SFRFieldDef edc:cname="PRMBL_3" edc:nzwidth="0x8" edc:desc="CoreSight component identification preamble"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xB004" edc:_addr="0xE0003000"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="ICTR" edc:impl="0xF" edc:access="----------------------------rrrr" edc:por="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="Interrupt Controller Type Register" edc:_addr="0xE000E004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0">
            <edc:SFRFieldDef edc:nzwidth="0x4" edc:cname="INTLINESNUM" edc:desc="Number of interrupt lines supported by NVIC in granularities of 32."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ICB" edc:cname="ACTLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE000E008"/>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0xE000E00C"/>
      <edc:SFRDef ltx:memberofperipheral="SysTick" edc:cname="CSR" edc:nzwidth="0x20" edc:access="---------------n-------------nnn" edc:impl="0x10007" edc:_addr="0xE000E010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SysTick">
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SysTick enable"/>
            <edc:SFRFieldDef edc:cname="TICKINT" edc:nzwidth="0x1" edc:desc="Tick interrupt"/>
            <edc:SFRFieldDef edc:cname="CLKSOURCE" edc:nzwidth="0x1" edc:desc="Clock source"/>
            <edc:AdjustPoint edc:offset="0xD"/>
            <edc:SFRFieldDef edc:cname="COUNTFLAG" edc:nzwidth="0x1" edc:desc="Count flag"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SysTick" edc:cname="RVR" edc:nzwidth="0x20" edc:access="-------n------------------------" edc:impl="0x1000000" edc:_addr="0xE000E014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SysTick">
            <edc:AdjustPoint edc:offset="0x18"/>
            <edc:SFRFieldDef edc:cname="RELOAD" edc:nzwidth="0x1" edc:desc="Counter reload value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SysTick" edc:cname="CVR" edc:nzwidth="0x20" edc:access="-------n------------------------" edc:impl="0x1000000" edc:_addr="0xE000E018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SysTick">
            <edc:AdjustPoint edc:offset="0x18"/>
            <edc:SFRFieldDef edc:cname="CURRENT" edc:nzwidth="0x1" edc:desc="Current counter value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SysTick" edc:cname="CALIB" edc:nzwidth="0x20" edc:access="rr------rrrrrrrrrrrrrrrrrrrrrrrr" edc:impl="0xC0FFFFFF" edc:_addr="0xE000E01C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SysTick">
            <edc:SFRFieldDef edc:cname="TENMS" edc:nzwidth="0x18" edc:desc="Ten milliseconds"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="SKEW" edc:nzwidth="0x1" edc:desc="Skew"/>
            <edc:SFRFieldDef edc:cname="NOREF" edc:nzwidth="0x1" edc:desc="No reference"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xE0" edc:_addr="0xE000E020"/>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="NVIC_ISER0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE000E100">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="SETENA" edc:nzwidth="0x20" edc:desc="Set enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="NVIC_ISER1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE000E104">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="SETENA" edc:nzwidth="0x20" edc:desc="Set enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="NVIC_ISER2" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE000E108">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="SETENA" edc:nzwidth="0x20" edc:desc="Set enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x74" edc:_addr="0xE000E10C"/>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="NVIC_ICER0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE000E180">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="CLRENA" edc:nzwidth="0x20" edc:desc="Clear enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="NVIC_ICER1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE000E184">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="CLRENA" edc:nzwidth="0x20" edc:desc="Clear enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="NVIC_ICER2" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE000E188">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="CLRENA" edc:nzwidth="0x20" edc:desc="Clear enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x74" edc:_addr="0xE000E18C"/>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="NVIC_ISPR0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE000E200">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="SETPEND" edc:nzwidth="0x20" edc:desc="Set pending"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="NVIC_ISPR1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE000E204">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="SETPEND" edc:nzwidth="0x20" edc:desc="Set pending"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="NVIC_ISPR2" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE000E208">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="SETPEND" edc:nzwidth="0x20" edc:desc="Set pending"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x74" edc:_addr="0xE000E20C"/>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="NVIC_ICPR0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE000E280">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="CLRPEND" edc:nzwidth="0x20" edc:desc="Clear pending"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="NVIC_ICPR1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE000E284">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="CLRPEND" edc:nzwidth="0x20" edc:desc="Clear pending"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="NVIC_ICPR2" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE000E288">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="CLRPEND" edc:nzwidth="0x20" edc:desc="Clear pending"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x74" edc:_addr="0xE000E28C"/>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="NVIC_IABR0" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0xE000E300">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="ACTIVE" edc:nzwidth="0x20" edc:desc="Active state"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="NVIC_IABR1" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0xE000E304">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="ACTIVE" edc:nzwidth="0x20" edc:desc="Active state"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="NVIC_IABR2" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0xE000E308">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="ACTIVE" edc:nzwidth="0x20" edc:desc="Active state"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x74" edc:_addr="0xE000E30C"/>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="NVIC_ITNS0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE000E380">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="ITNS" edc:nzwidth="0x20" edc:desc="Interrupt Targets Non-secure"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="NVIC_ITNS1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE000E384">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="ITNS" edc:nzwidth="0x20" edc:desc="Interrupt Targets Non-secure"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="NVIC_ITNS2" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE000E388">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="ITNS" edc:nzwidth="0x20" edc:desc="Interrupt Targets Non-secure"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x74" edc:_addr="0xE000E38C"/>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="NVIC_IPR0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE000E400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI_N0" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+0"/>
            <edc:SFRFieldDef edc:cname="PRI_N1" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+1"/>
            <edc:SFRFieldDef edc:cname="PRI_N2" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+2"/>
            <edc:SFRFieldDef edc:cname="PRI_N3" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="NVIC_IPR1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE000E404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI_N0" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+0"/>
            <edc:SFRFieldDef edc:cname="PRI_N1" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+1"/>
            <edc:SFRFieldDef edc:cname="PRI_N2" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+2"/>
            <edc:SFRFieldDef edc:cname="PRI_N3" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="NVIC_IPR2" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE000E408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI_N0" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+0"/>
            <edc:SFRFieldDef edc:cname="PRI_N1" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+1"/>
            <edc:SFRFieldDef edc:cname="PRI_N2" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+2"/>
            <edc:SFRFieldDef edc:cname="PRI_N3" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="NVIC_IPR3" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE000E40C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI_N0" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+0"/>
            <edc:SFRFieldDef edc:cname="PRI_N1" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+1"/>
            <edc:SFRFieldDef edc:cname="PRI_N2" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+2"/>
            <edc:SFRFieldDef edc:cname="PRI_N3" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="NVIC_IPR4" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE000E410">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI_N0" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+0"/>
            <edc:SFRFieldDef edc:cname="PRI_N1" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+1"/>
            <edc:SFRFieldDef edc:cname="PRI_N2" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+2"/>
            <edc:SFRFieldDef edc:cname="PRI_N3" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="NVIC_IPR5" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE000E414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI_N0" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+0"/>
            <edc:SFRFieldDef edc:cname="PRI_N1" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+1"/>
            <edc:SFRFieldDef edc:cname="PRI_N2" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+2"/>
            <edc:SFRFieldDef edc:cname="PRI_N3" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="NVIC_IPR6" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE000E418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI_N0" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+0"/>
            <edc:SFRFieldDef edc:cname="PRI_N1" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+1"/>
            <edc:SFRFieldDef edc:cname="PRI_N2" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+2"/>
            <edc:SFRFieldDef edc:cname="PRI_N3" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="NVIC_IPR7" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE000E41C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI_N0" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+0"/>
            <edc:SFRFieldDef edc:cname="PRI_N1" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+1"/>
            <edc:SFRFieldDef edc:cname="PRI_N2" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+2"/>
            <edc:SFRFieldDef edc:cname="PRI_N3" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="NVIC_IPR8" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE000E420">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI_N0" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+0"/>
            <edc:SFRFieldDef edc:cname="PRI_N1" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+1"/>
            <edc:SFRFieldDef edc:cname="PRI_N2" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+2"/>
            <edc:SFRFieldDef edc:cname="PRI_N3" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="NVIC_IPR9" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE000E424">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI_N0" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+0"/>
            <edc:SFRFieldDef edc:cname="PRI_N1" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+1"/>
            <edc:SFRFieldDef edc:cname="PRI_N2" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+2"/>
            <edc:SFRFieldDef edc:cname="PRI_N3" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="NVIC_IPR10" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE000E428">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI_N0" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+0"/>
            <edc:SFRFieldDef edc:cname="PRI_N1" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+1"/>
            <edc:SFRFieldDef edc:cname="PRI_N2" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+2"/>
            <edc:SFRFieldDef edc:cname="PRI_N3" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="NVIC_IPR11" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE000E42C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI_N0" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+0"/>
            <edc:SFRFieldDef edc:cname="PRI_N1" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+1"/>
            <edc:SFRFieldDef edc:cname="PRI_N2" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+2"/>
            <edc:SFRFieldDef edc:cname="PRI_N3" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="NVIC_IPR12" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE000E430">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI_N0" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+0"/>
            <edc:SFRFieldDef edc:cname="PRI_N1" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+1"/>
            <edc:SFRFieldDef edc:cname="PRI_N2" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+2"/>
            <edc:SFRFieldDef edc:cname="PRI_N3" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="NVIC_IPR13" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE000E434">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI_N0" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+0"/>
            <edc:SFRFieldDef edc:cname="PRI_N1" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+1"/>
            <edc:SFRFieldDef edc:cname="PRI_N2" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+2"/>
            <edc:SFRFieldDef edc:cname="PRI_N3" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="NVIC_IPR14" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE000E438">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI_N0" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+0"/>
            <edc:SFRFieldDef edc:cname="PRI_N1" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+1"/>
            <edc:SFRFieldDef edc:cname="PRI_N2" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+2"/>
            <edc:SFRFieldDef edc:cname="PRI_N3" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="NVIC_IPR15" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE000E43C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI_N0" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+0"/>
            <edc:SFRFieldDef edc:cname="PRI_N1" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+1"/>
            <edc:SFRFieldDef edc:cname="PRI_N2" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+2"/>
            <edc:SFRFieldDef edc:cname="PRI_N3" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="NVIC_IPR16" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE000E440">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI_N0" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+0"/>
            <edc:SFRFieldDef edc:cname="PRI_N1" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+1"/>
            <edc:SFRFieldDef edc:cname="PRI_N2" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+2"/>
            <edc:SFRFieldDef edc:cname="PRI_N3" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="NVIC_IPR17" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE000E444">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI_N0" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+0"/>
            <edc:SFRFieldDef edc:cname="PRI_N1" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+1"/>
            <edc:SFRFieldDef edc:cname="PRI_N2" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+2"/>
            <edc:SFRFieldDef edc:cname="PRI_N3" edc:nzwidth="0x8" edc:desc="Priority of interrupt number 4n+3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8B8" edc:_addr="0xE000E448"/>
      <edc:SFRDef ltx:memberofperipheral="SCB" edc:cname="CPUID" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0xE000ED00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SCB">
            <edc:SFRFieldDef edc:cname="Revision" edc:nzwidth="0x4" edc:desc="Revision number"/>
            <edc:SFRFieldDef edc:cname="PartNo" edc:nzwidth="0xC" edc:desc="Part number, 0xD20=Cortex-M23"/>
            <edc:SFRFieldDef edc:cname="Architecture" edc:nzwidth="0x4" edc:desc="Architecture version, 0xC=ARMv8-M Base Line, 0xF=ARMv8-M Main Line"/>
            <edc:SFRFieldDef edc:cname="Variant" edc:nzwidth="0x4" edc:desc="Variant number"/>
            <edc:SFRFieldDef edc:cname="Implementer" edc:nzwidth="0x8" edc:desc="Implementer code, ARM=0x41"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SCB" edc:cname="ICSR" edc:nzwidth="0x20" edc:access="nn-nnnn-nn-nnnnnnnnnn--nnnnnnnnn" edc:impl="0xDEDFF9FF" edc:_addr="0xE000ED04">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SCB">
            <edc:SFRFieldDef edc:cname="VECTACTIVE" edc:nzwidth="0x9" edc:desc="Vector active"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RETTOBASE" edc:nzwidth="0x1" edc:desc="Return to base"/>
            <edc:SFRFieldDef edc:cname="VECTPENDING" edc:nzwidth="0x9" edc:desc="Vector pending"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ISRPENDING" edc:nzwidth="0x1" edc:desc="Interrupt pending"/>
            <edc:SFRFieldDef edc:cname="ISRPREEMPT" edc:nzwidth="0x1" edc:desc="Interrupt preempt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PENDSTCLR" edc:nzwidth="0x1" edc:desc="Pend SysTick clear">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="No effect" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Removes the pending state from the SysTick exception" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PENDSTSET" edc:nzwidth="0x1" edc:desc="Pend SysTick set">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="Write: no effect; read: SysTick exception is not pending" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Write: changes SysTick exception state to pending; read: SysTick exception is pending" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PENDSVCLR" edc:nzwidth="0x1" edc:desc="Pend PendSV clear">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="No effect" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Removes the pending state from the PendSV exception" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PENDSVSET" edc:nzwidth="0x1" edc:desc="Pend PendSV set">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="Write: no effect; read: PendSV exception is not pending" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Write: changes PendSV exception state to pending; read: PendSV exception is pending" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PENDNMICLR" edc:nzwidth="0x1" edc:desc="Pend NMI clear"/>
            <edc:SFRFieldDef edc:cname="PENDNMISET" edc:nzwidth="0x1" edc:desc="Pend NMI set">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="Write: no effect; read: NMI exception is not pending" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Write: changes NMI exception state to pending; read: NMI exception is pending" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SCB" edc:cname="VTOR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnn-------" edc:impl="0xFFFFFF80" edc:_addr="0xE000ED08">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SCB">
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="TBLOFF" edc:nzwidth="0x19" edc:desc="Vector table base offset"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SCB" edc:cname="AIRCR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnn---------nnn-" edc:impl="0xFFFFE00E" edc:_addr="0xE000ED0C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SCB">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="VECTCLRACTIVE" edc:nzwidth="0x1" edc:desc="Debug: Clear Active State">
              <edc:SFRFieldSemantic edc:cname="NO" edc:desc="Do not clear active state" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="YES" edc:desc="Clear active state" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SYSRESETREQ" edc:nzwidth="0x1" edc:desc="System Reset Request">
              <edc:SFRFieldSemantic edc:cname="NO" edc:desc="Do not request a system reset" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="YES" edc:desc="Request a system reset" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SYSRESETREQS" edc:nzwidth="0x1" edc:desc="System Reset Request Secure only">
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="SYSRESETREQ functionality is available to both Security states" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SECURE" edc:desc="SYSRESETREQ functionality is only available to Secure state" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="BFHFNMINS" edc:nzwidth="0x1" edc:desc="BusFault, HardFault and NMI Non-secure enable">
              <edc:SFRFieldSemantic edc:cname="SECURE" edc:desc="BusFault, HardFault, and NMI are Secure" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="NON_SECURE" edc:desc="BusFault and NMI are Non-secure and exceptions can target Non-secure HardFault" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PRIS" edc:nzwidth="0x1" edc:desc="Prioritize Secure Exceptions">
              <edc:SFRFieldSemantic edc:cname="SAME" edc:desc="Priority ranges of Secure and Non-secure exceptions are identical" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="NS_DEPRIO" edc:desc="Non-secure exceptions are de-prioritized" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ENDIANNESS" edc:nzwidth="0x1" edc:desc="Data Endianness, 0=little, 1=big">
              <edc:SFRFieldSemantic edc:cname="LITTLE" edc:desc="Little-endian" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="BIG" edc:desc="Big-endian" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="VECTKEY" edc:nzwidth="0x10" edc:desc="Register Key (0x05FA)"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SCB" edc:cname="SCR" edc:nzwidth="0x20" edc:access="---------------------------nnnn-" edc:impl="0x1E" edc:_addr="0xE000ED10">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SCB">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SLEEPONEXIT" edc:nzwidth="0x1" edc:desc="Sleep on exit">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="O not sleep when returning to Thread mode" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Enter sleep, or deep sleep, on return from an ISR" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SLEEPDEEP" edc:nzwidth="0x1" edc:desc="Sleep deep">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="Sleep" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Deep sleep" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SLEEPDEEPS" edc:nzwidth="0x1" edc:desc="Sleep deep secure"/>
            <edc:SFRFieldDef edc:cname="SEVONPEND" edc:nzwidth="0x1" edc:desc="Send Event on Pending bit">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="Only enabled interrupts or events can wakeup the processor, disabled interrupts are excluded" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Enabled events and all interrupts, including disabled interrupts, can wakeup the processor" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SCB" edc:cname="CCR" edc:nzwidth="0x20" edc:access="-------------nnn-----n-n---nn-n-" edc:impl="0x7051A" edc:_addr="0xE000ED14">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SCB">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="USERSETMPEND" edc:nzwidth="0x1" edc:desc="User set main pending"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="UNALIGN_TRP" edc:nzwidth="0x1" edc:desc="Unaligned trap">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="Do not trap unaligned halfword and word accesses" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Trap unaligned halfword and word accesses" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIV_0_TRP" edc:nzwidth="0x1" edc:desc="Divide by zero trap"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="BFHFNMIGN" edc:nzwidth="0x1" edc:desc="BusFault in HardFault or NMI ignore"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="STKOFHFNMIGN" edc:nzwidth="0x1" edc:desc="Stack overflow in HardFault and NMI ignore"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="DC" edc:nzwidth="0x1" edc:desc="Data cache enable"/>
            <edc:SFRFieldDef edc:cname="IC" edc:nzwidth="0x1" edc:desc="Instruction cache enable"/>
            <edc:SFRFieldDef edc:cname="BP" edc:nzwidth="0x1" edc:desc="Branch prediction enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0xE000ED18"/>
      <edc:SFRDef ltx:memberofperipheral="SCB" edc:cname="SHPR2" edc:nzwidth="0x20" edc:access="nnnnnnnn------------------------" edc:impl="0xFF000000" edc:_addr="0xE000ED1C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SCB">
            <edc:AdjustPoint edc:offset="0x18"/>
            <edc:SFRFieldDef edc:cname="PRI_11" edc:nzwidth="0x8" edc:desc="Priority of system handler 11, SVCall"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SCB" edc:cname="SHPR3" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnn--------nnnnnnnn" edc:impl="0xFFFF00FF" edc:_addr="0xE000ED20">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SCB">
            <edc:SFRFieldDef edc:cname="PRI_12" edc:nzwidth="0x8" edc:desc="Priority of system handler 12, DebugMonitor"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="PRI_14" edc:nzwidth="0x8" edc:desc="Priority of system handler 14, PendSV"/>
            <edc:SFRFieldDef edc:cname="PRI_15" edc:nzwidth="0x8" edc:desc="Priority of system handler 15, SysTick"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SCB" edc:cname="SHCSR" edc:nzwidth="0x20" edc:access="----------n-----n---nn--n-n--n--" edc:impl="0x208CA4" edc:_addr="0xE000ED24">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SCB">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="HARDFAULTACT" edc:nzwidth="0x1" edc:desc="HardFault exception active state"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="NMIACT" edc:nzwidth="0x1" edc:desc="NMI exception active state"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SVCALLACT" edc:nzwidth="0x1" edc:desc="SVCall exception active state"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PENDSVACT" edc:nzwidth="0x1" edc:desc="PendSV exception active state"/>
            <edc:SFRFieldDef edc:cname="SYSTICKACT" edc:nzwidth="0x1" edc:desc="SysTick exception active state"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SVCALLPENDED" edc:nzwidth="0x1" edc:desc="SVCall exception pended state"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="HARDFAULTPENDED" edc:nzwidth="0x1" edc:desc="HardFault exception pended state"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0xE000ED28"/>
      <edc:SFRDef ltx:memberofperipheral="SCB" edc:cname="DFSR" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:impl="0x1F" edc:_addr="0xE000ED30">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SCB">
            <edc:SFRFieldDef edc:cname="HALTED" edc:nzwidth="0x1" edc:desc="Halt or step event"/>
            <edc:SFRFieldDef edc:cname="BKPT" edc:nzwidth="0x1" edc:desc="Breakpoint event"/>
            <edc:SFRFieldDef edc:cname="DWTTRAP" edc:nzwidth="0x1" edc:desc="Watchpoint event"/>
            <edc:SFRFieldDef edc:cname="VCATCH" edc:nzwidth="0x1" edc:desc="Vector Catch event"/>
            <edc:SFRFieldDef edc:cname="EXTERNAL" edc:nzwidth="0x1" edc:desc="External event"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0xE000ED34"/>
      <edc:SFRDef ltx:memberofperipheral="SCB" edc:cname="AFSR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE000ED3C"/>
      <edc:AdjustPoint edc:offset="0x38" edc:_addr="0xE000ED40"/>
      <edc:SFRDef ltx:memberofperipheral="SCB" edc:cname="CLIDR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0xE000ED78">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SCB">
            <edc:SFRFieldDef edc:cname="Ctype1" edc:nzwidth="0x3" edc:desc="Cache type at level 1">
              <edc:SFRFieldSemantic edc:cname="NO" edc:desc="No cache" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IC" edc:desc="Instruction cache only" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DC" edc:desc="Data cache only" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="SEPARATE" edc:desc="Separate instruction and data caches" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="UNIFIED" edc:desc="Unified cache" edc:when="(field &amp; 0x7) == 4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="Ctype2" edc:nzwidth="0x3" edc:desc="Cache type at level 2">
              <edc:SFRFieldSemantic edc:cname="NO" edc:desc="No cache" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IC" edc:desc="Instruction cache only" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DC" edc:desc="Data cache only" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="SEPARATE" edc:desc="Separate instruction and data caches" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="UNIFIED" edc:desc="Unified cache" edc:when="(field &amp; 0x7) == 4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="Ctype3" edc:nzwidth="0x3" edc:desc="Cache type at level 3">
              <edc:SFRFieldSemantic edc:cname="NO" edc:desc="No cache" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IC" edc:desc="Instruction cache only" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DC" edc:desc="Data cache only" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="SEPARATE" edc:desc="Separate instruction and data caches" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="UNIFIED" edc:desc="Unified cache" edc:when="(field &amp; 0x7) == 4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="Ctype4" edc:nzwidth="0x3" edc:desc="Cache type at level 4">
              <edc:SFRFieldSemantic edc:cname="NO" edc:desc="No cache" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IC" edc:desc="Instruction cache only" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DC" edc:desc="Data cache only" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="SEPARATE" edc:desc="Separate instruction and data caches" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="UNIFIED" edc:desc="Unified cache" edc:when="(field &amp; 0x7) == 4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="Ctype5" edc:nzwidth="0x3" edc:desc="Cache type at level 5">
              <edc:SFRFieldSemantic edc:cname="NO" edc:desc="No cache" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IC" edc:desc="Instruction cache only" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DC" edc:desc="Data cache only" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="SEPARATE" edc:desc="Separate instruction and data caches" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="UNIFIED" edc:desc="Unified cache" edc:when="(field &amp; 0x7) == 4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="Ctype6" edc:nzwidth="0x3" edc:desc="Cache type at level 6">
              <edc:SFRFieldSemantic edc:cname="NO" edc:desc="No cache" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IC" edc:desc="Instruction cache only" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DC" edc:desc="Data cache only" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="SEPARATE" edc:desc="Separate instruction and data caches" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="UNIFIED" edc:desc="Unified cache" edc:when="(field &amp; 0x7) == 4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="Ctype7" edc:nzwidth="0x3" edc:desc="Cache type at level 7">
              <edc:SFRFieldSemantic edc:cname="NO" edc:desc="No cache" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IC" edc:desc="Instruction cache only" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DC" edc:desc="Data cache only" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="SEPARATE" edc:desc="Separate instruction and data caches" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="UNIFIED" edc:desc="Unified cache" edc:when="(field &amp; 0x7) == 4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LoUIS" edc:nzwidth="0x3" edc:desc="Level of Unification Inner Shareable"/>
            <edc:SFRFieldDef edc:cname="LoC" edc:nzwidth="0x3" edc:desc="Level of Coherence"/>
            <edc:SFRFieldDef edc:cname="LoUU" edc:nzwidth="0x3" edc:desc="Level of Unification Uniprocessor"/>
            <edc:SFRFieldDef edc:cname="ICB" edc:nzwidth="0x2" edc:desc="Inner cache boundary">
              <edc:SFRFieldSemantic edc:cname="NO" edc:desc="Not disclosed in this mechanism" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="L1" edc:desc="L1 cache is the highest inner level" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="L2" edc:desc="L2 cache is the highest inner level" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="L3" edc:desc="L3 cache is the highest inner level" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SCB" edc:cname="CTR" edc:nzwidth="0x20" edc:access="rrr-rrrrrrrrrrrr------------rrrr" edc:impl="0xEFFF000F" edc:_addr="0xE000ED7C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SCB">
            <edc:SFRFieldDef edc:cname="IminLine" edc:nzwidth="0x4" edc:desc="Instruction cache minimum line length"/>
            <edc:AdjustPoint edc:offset="0xC"/>
            <edc:SFRFieldDef edc:cname="DminLine" edc:nzwidth="0x4" edc:desc="Data cache minimum line length"/>
            <edc:SFRFieldDef edc:cname="ERG" edc:nzwidth="0x4" edc:desc="Exclusives Reservation Granule"/>
            <edc:SFRFieldDef edc:cname="CWG" edc:nzwidth="0x4" edc:desc="Cache Write-back Granule"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="Format" edc:nzwidth="0x3" edc:desc="Cache Type Register format">
              <edc:SFRFieldSemantic edc:cname="NO" edc:desc="No cache type information provided" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="YES" edc:desc="Cache type information is provided" edc:when="(field &amp; 0x7) == 4"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SCB" edc:cname="CCSIDR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0xE000ED80">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SCB">
            <edc:SFRFieldDef edc:cname="LineSize" edc:nzwidth="0x3" edc:desc="log2(number of words per line) - 2"/>
            <edc:SFRFieldDef edc:cname="Associativity" edc:nzwidth="0xA" edc:desc="Associativity - 1"/>
            <edc:SFRFieldDef edc:cname="NumSets" edc:nzwidth="0xF" edc:desc="Number of sets - 1"/>
            <edc:SFRFieldDef edc:cname="WA" edc:nzwidth="0x1" edc:desc="Write-Allocate"/>
            <edc:SFRFieldDef edc:cname="RA" edc:nzwidth="0x1" edc:desc="Read-Allocate"/>
            <edc:SFRFieldDef edc:cname="WB" edc:nzwidth="0x1" edc:desc="Write-Back"/>
            <edc:SFRFieldDef edc:cname="WT" edc:nzwidth="0x1" edc:desc="Write-Through"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SCB" edc:cname="CSSELR" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:impl="0xF" edc:_addr="0xE000ED84">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SCB">
            <edc:SFRFieldDef edc:cname="InD" edc:nzwidth="0x1" edc:desc="Instruction not Data"/>
            <edc:SFRFieldDef edc:cname="Level" edc:nzwidth="0x3" edc:desc="Cache level - 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0xE000ED88"/>
      <edc:SFRDef ltx:memberofperipheral="MPU" edc:cname="MPU_TYPE" edc:nzwidth="0x20" edc:access="----------------rrrrrrrr-------r" edc:impl="0xFF01" edc:_addr="0xE000ED90">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MPU">
            <edc:SFRFieldDef edc:cname="SEPARATE" edc:nzwidth="0x1" edc:desc="Separate instructions and data address regions"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DREGION" edc:nzwidth="0x8" edc:desc="Number of MPU data regions"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MPU" edc:cname="MPU_CTRL" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0xE000ED94">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MPU">
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="MPU enable"/>
            <edc:SFRFieldDef edc:cname="HFNMIENA" edc:nzwidth="0x1" edc:desc="HardFault, NMI enable"/>
            <edc:SFRFieldDef edc:cname="PRIVDEFENA" edc:nzwidth="0x1" edc:desc="Privileged default enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MPU" edc:cname="MPU_RNR" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:impl="0xFF" edc:_addr="0xE000ED98">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MPU">
            <edc:SFRFieldDef edc:cname="REGION" edc:nzwidth="0x8" edc:desc="Selected region number"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MPU" edc:cname="MPU_RBAR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE000ED9C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MPU">
            <edc:SFRFieldDef edc:cname="XN" edc:nzwidth="0x1" edc:desc="Execute Never"/>
            <edc:SFRFieldDef edc:cname="AP" edc:nzwidth="0x2" edc:desc="Access permissions">
              <edc:SFRFieldSemantic edc:cname="RWPRIV" edc:desc="Read/write by privileged code only" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RWANY" edc:desc="Read/write by any privilege level" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="RPRIV" edc:desc="Read-only by privileged code only" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="RANY" edc:desc="Read-only by any privilege level" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SH" edc:nzwidth="0x2" edc:desc="Shareability">
              <edc:SFRFieldSemantic edc:cname="NO" edc:desc="Non-shareable" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="OUTER" edc:desc="Outer shareable" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="INNER" edc:desc="Inner shareable" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BASE" edc:nzwidth="0x1B" edc:desc="Base address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MPU" edc:cname="MPU_RLAR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnn-nnnn" edc:impl="0xFFFFFFEF" edc:_addr="0xE000EDA0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MPU">
            <edc:SFRFieldDef edc:cname="EN" edc:nzwidth="0x1" edc:desc="Region enable"/>
            <edc:SFRFieldDef edc:cname="AttrInd" edc:nzwidth="0x3" edc:desc="Attribute Index"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LIMIT" edc:nzwidth="0x1B" edc:desc="Limit address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1C" edc:_addr="0xE000EDA4"/>
      <edc:SFRDef ltx:memberofperipheral="MPU" edc:cname="MPU_MAIR0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE000EDC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MPU">
            <edc:SFRFieldDef edc:cname="Attr0" edc:nzwidth="0x8" edc:desc="Attribute of MPU region 0"/>
            <edc:SFRFieldDef edc:cname="Attr1" edc:nzwidth="0x8" edc:desc="Attribute of MPU region 1"/>
            <edc:SFRFieldDef edc:cname="Attr2" edc:nzwidth="0x8" edc:desc="Attribute of MPU region 2"/>
            <edc:SFRFieldDef edc:cname="Attr3" edc:nzwidth="0x8" edc:desc="Attribute of MPU region 3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MPU" edc:cname="MPU_MAIR1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE000EDC4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MPU">
            <edc:SFRFieldDef edc:cname="Attr4" edc:nzwidth="0x8" edc:desc="Attribute of MPU region 4"/>
            <edc:SFRFieldDef edc:cname="Attr5" edc:nzwidth="0x8" edc:desc="Attribute of MPU region 5"/>
            <edc:SFRFieldDef edc:cname="Attr6" edc:nzwidth="0x8" edc:desc="Attribute of MPU region 6"/>
            <edc:SFRFieldDef edc:cname="Attr7" edc:nzwidth="0x8" edc:desc="Attribute of MPU region 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x28" edc:_addr="0xE000EDC8"/>
      <edc:SFRDef ltx:memberofperipheral="CoreDebug" edc:cname="DHCSR" edc:nzwidth="0x20" edc:access="-----nnn---nnnnn----------n-nnnn" edc:impl="0x71F002F" edc:_addr="0xE000EDF0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CoreDebug">
            <edc:SFRFieldDef edc:cname="C_DEBUGEN" edc:nzwidth="0x1" edc:desc="Enable Halting debug"/>
            <edc:SFRFieldDef edc:cname="C_HALT" edc:nzwidth="0x1" edc:desc="Halt processor"/>
            <edc:SFRFieldDef edc:cname="C_STEP" edc:nzwidth="0x1" edc:desc="Enable single step"/>
            <edc:SFRFieldDef edc:cname="C_MASKINTS" edc:nzwidth="0x1" edc:desc="Mask PendSV, SysTick and external configurable interrupts"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="S_SNAPSTALL" edc:nzwidth="0x1" edc:desc="Snap stall control"/>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="S_REGRDY" edc:nzwidth="0x1" edc:desc="Register ready status"/>
            <edc:SFRFieldDef edc:cname="S_HALT" edc:nzwidth="0x1" edc:desc="Halted status"/>
            <edc:SFRFieldDef edc:cname="S_SLEEP" edc:nzwidth="0x1" edc:desc="Sleeping status"/>
            <edc:SFRFieldDef edc:cname="S_LOCKUP" edc:nzwidth="0x1" edc:desc="Lockup status"/>
            <edc:SFRFieldDef edc:cname="S_SDE" edc:nzwidth="0x1" edc:desc="Secure debug enabled"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="S_RETIRE_ST" edc:nzwidth="0x1" edc:desc="Retire sticky status"/>
            <edc:SFRFieldDef edc:cname="S_RESET_ST" edc:nzwidth="0x1" edc:desc="Reset sticky status"/>
            <edc:SFRFieldDef edc:cname="S_RESTART_ST" edc:nzwidth="0x1" edc:desc="Restart sticky status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CoreDebug" edc:cname="DCRSR" edc:nzwidth="0x20" edc:access="---------------w---------wwwwwww" edc:impl="0x1007F" edc:_addr="0xE000EDF4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CoreDebug">
            <edc:SFRFieldDef edc:cname="REGSEL" edc:nzwidth="0x7" edc:desc="Register selector"/>
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="REGWnR" edc:nzwidth="0x1" edc:desc="Register write/not-read access"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0xE000EDF8"/>
      <edc:SFRDef ltx:memberofperipheral="CoreDebug" edc:cname="DEMCR" edc:nzwidth="0x20" edc:access="-------n---nnnnn----nnnnnnnn---n" edc:impl="0x11F0FF1" edc:_addr="0xE000EDFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CoreDebug">
            <edc:SFRFieldDef edc:cname="VC_CORERESET" edc:nzwidth="0x1" edc:desc="Core reset Halting debug vector catch enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="VC_MMERR" edc:nzwidth="0x1" edc:desc="MemManage exception Halting debug vector catch enable"/>
            <edc:SFRFieldDef edc:cname="VC_NOCPERR" edc:nzwidth="0x1" edc:desc="UsageFault exception coprocessor access Halting debug vector catch enable"/>
            <edc:SFRFieldDef edc:cname="VC_CHKERR" edc:nzwidth="0x1" edc:desc="UsageFault exception checking error Halting debug vector catch enable"/>
            <edc:SFRFieldDef edc:cname="VC_STATERR" edc:nzwidth="0x1" edc:desc="UsageFault exception state information error Halting debug vector catch enable"/>
            <edc:SFRFieldDef edc:cname="VC_BUSERR" edc:nzwidth="0x1" edc:desc="BusFault exception Halting debug vector catch enable"/>
            <edc:SFRFieldDef edc:cname="VC_INTERR" edc:nzwidth="0x1" edc:desc="Excception entry and return faults Halting debug vector catch enable"/>
            <edc:SFRFieldDef edc:cname="VC_HARDERR" edc:nzwidth="0x1" edc:desc="HardFault exception Halting debug vector catch enable"/>
            <edc:SFRFieldDef edc:cname="VC_SFERR" edc:nzwidth="0x1" edc:desc="SecureFault exception Halting debug vector catch enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="MON_EN" edc:nzwidth="0x1" edc:desc="DebugMonitor enable"/>
            <edc:SFRFieldDef edc:cname="MON_PEND" edc:nzwidth="0x1" edc:desc="DebugMonitor pending state"/>
            <edc:SFRFieldDef edc:cname="MON_STEP" edc:nzwidth="0x1" edc:desc="Enable DebugMonitor stepping"/>
            <edc:SFRFieldDef edc:cname="MON_REQ" edc:nzwidth="0x1" edc:desc="DebugMonitor semaphore bit"/>
            <edc:SFRFieldDef edc:cname="SDME" edc:nzwidth="0x1" edc:desc="Secure DebugMonitor enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="TRCENA" edc:nzwidth="0x1" edc:desc="Global DWT and ITM features enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0xE000EE00"/>
      <edc:SFRDef ltx:memberofperipheral="CoreDebug" edc:cname="DSCSR" edc:nzwidth="0x20" edc:access="--------------nn--------------nn" edc:impl="0x30003" edc:_addr="0xE000EE08">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CoreDebug">
            <edc:SFRFieldDef edc:cname="SBRSELEN" edc:nzwidth="0x1" edc:desc="Secure Banked register select enable"/>
            <edc:SFRFieldDef edc:cname="SBRSEL" edc:nzwidth="0x1" edc:desc="Secure Banked register select"/>
            <edc:AdjustPoint edc:offset="0xE"/>
            <edc:SFRFieldDef edc:cname="CDS" edc:nzwidth="0x1" edc:desc="Current domain Secure"/>
            <edc:SFRFieldDef edc:cname="CDSKEY" edc:nzwidth="0x1" edc:desc="CDS field write-enable key"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1A4" edc:_addr="0xE000EE0C"/>
      <edc:SFRDef ltx:memberofperipheral="DIB" edc:cname="DLAR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0xE000EFB0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DIB">
            <edc:SFRFieldDef edc:cname="KEY" edc:nzwidth="0x20" edc:desc="Lock access control">
              <edc:SFRFieldSemantic edc:cname="UNLOCK" edc:desc="Unlock key value" edc:when="(field &amp; 0xFFFFFFFF) == 0xC5ACCE55"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DIB" edc:cname="DLSR" edc:nzwidth="0x20" edc:access="-----------------------------rrr" edc:impl="0x7" edc:_addr="0xE000EFB4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DIB">
            <edc:SFRFieldDef edc:cname="SLI" edc:nzwidth="0x1" edc:desc="Software Lock implemented"/>
            <edc:SFRFieldDef edc:cname="SLK" edc:nzwidth="0x1" edc:desc="Software Lock status"/>
            <edc:SFRFieldDef edc:cname="nTT" edc:nzwidth="0x1" edc:desc="Not thirty-two bit"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DIB" edc:cname="DAUTHSTATUS" edc:nzwidth="0x20" edc:access="------------------------rrrr----" edc:impl="0xF0" edc:_addr="0xE000EFB8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DIB">
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="SID" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NOSEC" edc:desc="Security Extension not implemented" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="NO" edc:desc="Secure invasive debug prohibited" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="YES" edc:desc="Secure invasive debug allowed" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SNID" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NOSEC" edc:desc="Security Extension not implemented" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="NO" edc:desc="Secure non-invasive debug prohibited" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="YES" edc:desc="Secure non-invasive debug allowed" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DIB" edc:cname="DDEVARCH" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="01000111011100000010101000000100" edc:mclr="01000111011100000010101000000100" edc:_addr="0xE000EFBC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DIB">
            <edc:SFRFieldDef edc:cname="ARCHPART" edc:nzwidth="0xC" edc:desc="Architecture Part"/>
            <edc:SFRFieldDef edc:cname="ARCHVER" edc:nzwidth="0x4" edc:desc="Architecture Version"/>
            <edc:SFRFieldDef edc:cname="REVISION" edc:nzwidth="0x4" edc:desc="Revision"/>
            <edc:SFRFieldDef edc:cname="PRESENT" edc:nzwidth="0x1" edc:desc="DEVARCH Present"/>
            <edc:SFRFieldDef edc:cname="ARCHITECT" edc:nzwidth="0xB" edc:desc="Architect"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0xE000EFC0"/>
      <edc:SFRDef ltx:memberofperipheral="DIB" edc:cname="DDEVTYPE" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF" edc:_addr="0xE000EFCC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DIB">
            <edc:SFRFieldDef edc:cname="MAJOR" edc:nzwidth="0x4" edc:desc="Major type"/>
            <edc:SFRFieldDef edc:cname="SUB" edc:nzwidth="0x4" edc:desc="Sub-type"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DIB" edc:cname="DPIDR4" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:impl="0xFF" edc:_addr="0xE000EFD0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DIB">
            <edc:SFRFieldDef edc:cname="DES_2" edc:nzwidth="0x4" edc:desc="JEP106 continuation code"/>
            <edc:SFRFieldDef edc:cname="SIZE" edc:nzwidth="0x4" edc:desc="4KB count"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DIB" edc:cname="DPIDR5" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0xE000EFD4"/>
      <edc:SFRDef ltx:memberofperipheral="DIB" edc:cname="DPIDR6" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0xE000EFD8"/>
      <edc:SFRDef ltx:memberofperipheral="DIB" edc:cname="DPIDR7" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0xE000EFDC"/>
      <edc:SFRDef ltx:memberofperipheral="DIB" edc:cname="DPIDR0" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:impl="0xFF" edc:_addr="0xE000EFE0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DIB">
            <edc:SFRFieldDef edc:cname="PART_0" edc:nzwidth="0x8" edc:desc="Part number bits[7:0]"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DIB" edc:cname="DPIDR1" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:impl="0xFF" edc:_addr="0xE000EFE4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DIB">
            <edc:SFRFieldDef edc:cname="PART_1" edc:nzwidth="0x4" edc:desc="Part number bits[11:8]"/>
            <edc:SFRFieldDef edc:cname="DES_0" edc:nzwidth="0x4" edc:desc="JEP106 identification code bits [3:0]"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DIB" edc:cname="DPIDR2" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:impl="0xFF" edc:_addr="0xE000EFE8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DIB">
            <edc:SFRFieldDef edc:cname="DES_1" edc:nzwidth="0x3" edc:desc="JEP106 identification code bits[6:4]"/>
            <edc:SFRFieldDef edc:cname="JEDEC" edc:nzwidth="0x1" edc:desc="JEDEC assignee value is used"/>
            <edc:SFRFieldDef edc:cname="REVISION" edc:nzwidth="0x4" edc:desc="Component revision"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DIB" edc:cname="DPIDR3" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:impl="0xFF" edc:_addr="0xE000EFEC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DIB">
            <edc:SFRFieldDef edc:cname="CMOD" edc:nzwidth="0x4" edc:desc="Customer Modified"/>
            <edc:SFRFieldDef edc:cname="REVAND" edc:nzwidth="0x4" edc:desc="RevAnd"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DIB" edc:cname="DCIDR0" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000000001101" edc:mclr="00000000000000000000000000001101" edc:impl="0xFF" edc:_addr="0xE000EFF0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DIB">
            <edc:SFRFieldDef edc:cname="PRMBL_0" edc:nzwidth="0x8" edc:desc="CoreSight component identification preamble"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DIB" edc:cname="DCIDR1" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000010010000" edc:mclr="00000000000000000000000010010000" edc:impl="0xFF" edc:_addr="0xE000EFF4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DIB">
            <edc:SFRFieldDef edc:cname="PRMBL_1" edc:nzwidth="0x4" edc:desc="CoreSight component identification preamble"/>
            <edc:SFRFieldDef edc:cname="CLASS" edc:nzwidth="0x4" edc:desc="CoreSight component class"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DIB" edc:cname="DCIDR2" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000000000101" edc:mclr="00000000000000000000000000000101" edc:impl="0xFF" edc:_addr="0xE000EFF8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DIB">
            <edc:SFRFieldDef edc:cname="PRMBL_2" edc:nzwidth="0x8" edc:desc="CoreSight component identification preamble"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DIB" edc:cname="DCIDR3" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000010110001" edc:mclr="00000000000000000000000010110001" edc:impl="0xFF" edc:_addr="0xE000EFFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DIB">
            <edc:SFRFieldDef edc:cname="PRMBL_3" edc:nzwidth="0x8" edc:desc="CoreSight component identification preamble"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:SFRDataSector>
    <edc:DeviceIDSector edc:regionid="devid" edc:beginaddr="0x41002018" edc:endaddr="0x4100201C" edc:value="0x20850004" edc:mask="0xFFFFF0FF"/>
    <edc:RegisterMap edc:id="RTC/MODE0">
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="CTRLA" edc:nzwidth="0x10" edc:access="nn--nnnnn---nnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xCF8F" edc:addr="0x40002400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x2" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="COUNT32" edc:desc="Mode 0: 32-bit Counter" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="COUNT16" edc:desc="Mode 1: 16-bit Counter" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLOCK" edc:desc="Mode 2: Clock/Calendar" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="MATCHCLR" edc:nzwidth="0x1" edc:desc="Clear on Match"/>
            <edc:SFRFieldDef edc:cname="PRESCALER" edc:nzwidth="0x4" edc:desc="Prescaler">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="CLK_RTC_CNT = GCLK_RTC/1" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="CLK_RTC_CNT = GCLK_RTC/1" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="CLK_RTC_CNT = GCLK_RTC/2" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="CLK_RTC_CNT = GCLK_RTC/4" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="CLK_RTC_CNT = GCLK_RTC/8" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="CLK_RTC_CNT = GCLK_RTC/16" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="CLK_RTC_CNT = GCLK_RTC/32" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="CLK_RTC_CNT = GCLK_RTC/64" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="CLK_RTC_CNT = GCLK_RTC/128" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="CLK_RTC_CNT = GCLK_RTC/256" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="DIV512" edc:desc="CLK_RTC_CNT = GCLK_RTC/512" edc:when="(field &amp; 0xF) == 0xA"/>
              <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="CLK_RTC_CNT = GCLK_RTC/1024" edc:when="(field &amp; 0xF) == 0xB"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="GPTRST" edc:nzwidth="0x1" edc:desc="GP Registers Reset On Tamper Enable"/>
            <edc:SFRFieldDef edc:cname="COUNTSYNC" edc:nzwidth="0x1" edc:desc="Count Read Synchronization Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="CTRLB" edc:nzwidth="0x10" edc:access="nnnn-nnnnnnn---n" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xF7F1" edc:addr="0x40002402">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="GP0EN" edc:nzwidth="0x1" edc:desc="General Purpose 0 Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DEBMAJ" edc:nzwidth="0x1" edc:desc="Debouncer Majority Enable"/>
            <edc:SFRFieldDef edc:cname="DEBASYNC" edc:nzwidth="0x1" edc:desc="Debouncer Asynchronous Enable"/>
            <edc:SFRFieldDef edc:cname="RTCOUT" edc:nzwidth="0x1" edc:desc="RTC Output Enable"/>
            <edc:SFRFieldDef edc:cname="DMAEN" edc:nzwidth="0x1" edc:desc="DMA Enable"/>
            <edc:SFRFieldDef edc:cname="DEBF" edc:nzwidth="0x3" edc:desc="Debounce Frequency">
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="CLK_RTC_DEB = CLK_RTC/2" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="CLK_RTC_DEB = CLK_RTC/4" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="CLK_RTC_DEB = CLK_RTC/8" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="CLK_RTC_DEB = CLK_RTC/16" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="CLK_RTC_DEB = CLK_RTC/32" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="CLK_RTC_DEB = CLK_RTC/64" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="CLK_RTC_DEB = CLK_RTC/128" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="CLK_RTC_DEB = CLK_RTC/256" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ACTF" edc:nzwidth="0x3" edc:desc="Active Layer Frequency">
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="CLK_RTC_OUT = CLK_RTC/2" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="CLK_RTC_OUT = CLK_RTC/4" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="CLK_RTC_OUT = CLK_RTC/8" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="CLK_RTC_OUT = CLK_RTC/16" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="CLK_RTC_OUT = CLK_RTC/32" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="CLK_RTC_OUT = CLK_RTC/64" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="CLK_RTC_OUT = CLK_RTC/128" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="CLK_RTC_OUT = CLK_RTC/256" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SEPTO" edc:nzwidth="0x1" edc:desc="Separate Tamper Outputs"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="EVCTRL" edc:nzwidth="0x20" edc:access="-------n-------nnn-----nnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x101C1FF" edc:addr="0x40002404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="PEREO0" edc:nzwidth="0x1" edc:desc="Periodic Interval 0 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO1" edc:nzwidth="0x1" edc:desc="Periodic Interval 1 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO2" edc:nzwidth="0x1" edc:desc="Periodic Interval 2 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO3" edc:nzwidth="0x1" edc:desc="Periodic Interval 3 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO4" edc:nzwidth="0x1" edc:desc="Periodic Interval 4 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO5" edc:nzwidth="0x1" edc:desc="Periodic Interval 5 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO6" edc:nzwidth="0x1" edc:desc="Periodic Interval 6 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO7" edc:nzwidth="0x1" edc:desc="Periodic Interval 7 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="CMPEO0" edc:nzwidth="0x1" edc:desc="Compare 0 Event Output Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="TAMPEREO" edc:nzwidth="0x1" edc:desc="Tamper Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="OVFEO" edc:nzwidth="0x1" edc:desc="Overflow Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="TAMPEVEI" edc:nzwidth="0x1" edc:desc="Tamper Event Input Enable"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="PERDEO" edc:nzwidth="0x1" edc:desc="Periodic Interval Daily Event Output Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="INTENCLR" edc:nzwidth="0x10" edc:access="nn-----nnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xC1FF" edc:addr="0x40002408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="PER0" edc:nzwidth="0x1" edc:desc="Periodic Interval 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER1" edc:nzwidth="0x1" edc:desc="Periodic Interval 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER2" edc:nzwidth="0x1" edc:desc="Periodic Interval 2 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER3" edc:nzwidth="0x1" edc:desc="Periodic Interval 3 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER4" edc:nzwidth="0x1" edc:desc="Periodic Interval 4 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER5" edc:nzwidth="0x1" edc:desc="Periodic Interval 5 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER6" edc:nzwidth="0x1" edc:desc="Periodic Interval 6 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER7" edc:nzwidth="0x1" edc:desc="Periodic Interval 7 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CMP0" edc:nzwidth="0x1" edc:desc="Compare 0 Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="TAMPER" edc:nzwidth="0x1" edc:desc="Tamper Enable"/>
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="INTENSET" edc:nzwidth="0x10" edc:access="nn-----nnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xC1FF" edc:addr="0x4000240A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="PER0" edc:nzwidth="0x1" edc:desc="Periodic Interval 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER1" edc:nzwidth="0x1" edc:desc="Periodic Interval 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER2" edc:nzwidth="0x1" edc:desc="Periodic Interval 2 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER3" edc:nzwidth="0x1" edc:desc="Periodic Interval 3 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER4" edc:nzwidth="0x1" edc:desc="Periodic Interval 4 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER5" edc:nzwidth="0x1" edc:desc="Periodic Interval 5 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER6" edc:nzwidth="0x1" edc:desc="Periodic Interval 6 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER7" edc:nzwidth="0x1" edc:desc="Periodic Interval 7 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CMP0" edc:nzwidth="0x1" edc:desc="Compare 0 Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="TAMPER" edc:nzwidth="0x1" edc:desc="Tamper Enable"/>
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="INTFLAG" edc:nzwidth="0x10" edc:access="nn-----nnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xC1FF" edc:addr="0x4000240C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="PER0" edc:nzwidth="0x1" edc:desc="Periodic Interval 0"/>
            <edc:SFRFieldDef edc:cname="PER1" edc:nzwidth="0x1" edc:desc="Periodic Interval 1"/>
            <edc:SFRFieldDef edc:cname="PER2" edc:nzwidth="0x1" edc:desc="Periodic Interval 2"/>
            <edc:SFRFieldDef edc:cname="PER3" edc:nzwidth="0x1" edc:desc="Periodic Interval 3"/>
            <edc:SFRFieldDef edc:cname="PER4" edc:nzwidth="0x1" edc:desc="Periodic Interval 4"/>
            <edc:SFRFieldDef edc:cname="PER5" edc:nzwidth="0x1" edc:desc="Periodic Interval 5"/>
            <edc:SFRFieldDef edc:cname="PER6" edc:nzwidth="0x1" edc:desc="Periodic Interval 6"/>
            <edc:SFRFieldDef edc:cname="PER7" edc:nzwidth="0x1" edc:desc="Periodic Interval 7"/>
            <edc:SFRFieldDef edc:cname="CMP0" edc:nzwidth="0x1" edc:desc="Compare 0"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="TAMPER" edc:nzwidth="0x1" edc:desc="Tamper"/>
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="--------------rrr---------r-rrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3802F" edc:addr="0x40002410">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable Bit Busy"/>
            <edc:SFRFieldDef edc:cname="FREQCORR" edc:nzwidth="0x1" edc:desc="FREQCORR Register Busy"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x1" edc:desc="COUNT Register Busy"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="COMP0" edc:nzwidth="0x1" edc:desc="COMP 0 Register Busy"/>
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="COUNTSYNC" edc:nzwidth="0x1" edc:desc="Count Synchronization Enable Bit Busy"/>
            <edc:SFRFieldDef edc:cname="GP0" edc:nzwidth="0x1" edc:desc="General Purpose 0 Register Busy"/>
            <edc:SFRFieldDef edc:cname="GP1" edc:nzwidth="0x1" edc:desc="General Purpose 1 Register Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="COUNT" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40002418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x20" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="COMP0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40002420">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="COMP" edc:nzwidth="0x20" edc:desc="Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="TIMESTAMP" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40002464">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x20" edc:desc="Count Timestamp Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="RTC/MODE1">
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="CTRLA" edc:nzwidth="0x10" edc:access="nn--nnnn----nnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xCF0F" edc:addr="0x40002400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x2" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="COUNT32" edc:desc="Mode 0: 32-bit Counter" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="COUNT16" edc:desc="Mode 1: 16-bit Counter" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CLOCK" edc:desc="Mode 2: Clock/Calendar" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="PRESCALER" edc:nzwidth="0x4" edc:desc="Prescaler">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="CLK_RTC_CNT = GCLK_RTC/1" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="CLK_RTC_CNT = GCLK_RTC/1" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="CLK_RTC_CNT = GCLK_RTC/2" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="CLK_RTC_CNT = GCLK_RTC/4" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="CLK_RTC_CNT = GCLK_RTC/8" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="CLK_RTC_CNT = GCLK_RTC/16" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="CLK_RTC_CNT = GCLK_RTC/32" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="CLK_RTC_CNT = GCLK_RTC/64" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="CLK_RTC_CNT = GCLK_RTC/128" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="CLK_RTC_CNT = GCLK_RTC/256" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="DIV512" edc:desc="CLK_RTC_CNT = GCLK_RTC/512" edc:when="(field &amp; 0xF) == 0xA"/>
              <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="CLK_RTC_CNT = GCLK_RTC/1024" edc:when="(field &amp; 0xF) == 0xB"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="GPTRST" edc:nzwidth="0x1" edc:desc="GP Registers Reset On Tamper Enable"/>
            <edc:SFRFieldDef edc:cname="COUNTSYNC" edc:nzwidth="0x1" edc:desc="Count Read Synchronization Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="CTRLB" edc:nzwidth="0x10" edc:access="nnnn-nnnnnnn---n" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xF7F1" edc:addr="0x40002402">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="GP0EN" edc:nzwidth="0x1" edc:desc="General Purpose 0 Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DEBMAJ" edc:nzwidth="0x1" edc:desc="Debouncer Majority Enable"/>
            <edc:SFRFieldDef edc:cname="DEBASYNC" edc:nzwidth="0x1" edc:desc="Debouncer Asynchronous Enable"/>
            <edc:SFRFieldDef edc:cname="RTCOUT" edc:nzwidth="0x1" edc:desc="RTC Output Enable"/>
            <edc:SFRFieldDef edc:cname="DMAEN" edc:nzwidth="0x1" edc:desc="DMA Enable"/>
            <edc:SFRFieldDef edc:cname="DEBF" edc:nzwidth="0x3" edc:desc="Debounce Frequency">
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="CLK_RTC_DEB = CLK_RTC/2" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="CLK_RTC_DEB = CLK_RTC/4" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="CLK_RTC_DEB = CLK_RTC/8" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="CLK_RTC_DEB = CLK_RTC/16" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="CLK_RTC_DEB = CLK_RTC/32" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="CLK_RTC_DEB = CLK_RTC/64" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="CLK_RTC_DEB = CLK_RTC/128" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="CLK_RTC_DEB = CLK_RTC/256" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ACTF" edc:nzwidth="0x3" edc:desc="Active Layer Frequency">
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="CLK_RTC_OUT = CLK_RTC/2" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="CLK_RTC_OUT = CLK_RTC/4" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="CLK_RTC_OUT = CLK_RTC/8" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="CLK_RTC_OUT = CLK_RTC/16" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="CLK_RTC_OUT = CLK_RTC/32" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="CLK_RTC_OUT = CLK_RTC/64" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="CLK_RTC_OUT = CLK_RTC/128" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="CLK_RTC_OUT = CLK_RTC/256" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SEPTO" edc:nzwidth="0x1" edc:desc="Separate Tamper Outputs"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="EVCTRL" edc:nzwidth="0x20" edc:access="-------n-------nnn----nnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x101C3FF" edc:addr="0x40002404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="PEREO0" edc:nzwidth="0x1" edc:desc="Periodic Interval 0 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO1" edc:nzwidth="0x1" edc:desc="Periodic Interval 1 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO2" edc:nzwidth="0x1" edc:desc="Periodic Interval 2 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO3" edc:nzwidth="0x1" edc:desc="Periodic Interval 3 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO4" edc:nzwidth="0x1" edc:desc="Periodic Interval 4 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO5" edc:nzwidth="0x1" edc:desc="Periodic Interval 5 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO6" edc:nzwidth="0x1" edc:desc="Periodic Interval 6 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO7" edc:nzwidth="0x1" edc:desc="Periodic Interval 7 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="CMPEO0" edc:nzwidth="0x1" edc:desc="Compare 0 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="CMPEO1" edc:nzwidth="0x1" edc:desc="Compare 1 Event Output Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TAMPEREO" edc:nzwidth="0x1" edc:desc="Tamper Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="OVFEO" edc:nzwidth="0x1" edc:desc="Overflow Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="TAMPEVEI" edc:nzwidth="0x1" edc:desc="Tamper Event Input Enable"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="PERDEO" edc:nzwidth="0x1" edc:desc="Periodic Interval Daily Event Output Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="INTENCLR" edc:nzwidth="0x10" edc:access="nn----nnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xC3FF" edc:addr="0x40002408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="PER0" edc:nzwidth="0x1" edc:desc="Periodic Interval 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER1" edc:nzwidth="0x1" edc:desc="Periodic Interval 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER2" edc:nzwidth="0x1" edc:desc="Periodic Interval 2 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER3" edc:nzwidth="0x1" edc:desc="Periodic Interval 3 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER4" edc:nzwidth="0x1" edc:desc="Periodic Interval 4 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER5" edc:nzwidth="0x1" edc:desc="Periodic Interval 5 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER6" edc:nzwidth="0x1" edc:desc="Periodic Interval 6 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER7" edc:nzwidth="0x1" edc:desc="Periodic Interval 7 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CMP0" edc:nzwidth="0x1" edc:desc="Compare 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CMP1" edc:nzwidth="0x1" edc:desc="Compare 1 Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TAMPER" edc:nzwidth="0x1" edc:desc="Tamper Enable"/>
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="INTENSET" edc:nzwidth="0x10" edc:access="nn----nnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xC3FF" edc:addr="0x4000240A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="PER0" edc:nzwidth="0x1" edc:desc="Periodic Interval 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER1" edc:nzwidth="0x1" edc:desc="Periodic Interval 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER2" edc:nzwidth="0x1" edc:desc="Periodic Interval 2 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER3" edc:nzwidth="0x1" edc:desc="Periodic Interval 3 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER4" edc:nzwidth="0x1" edc:desc="Periodic Interval 4 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER5" edc:nzwidth="0x1" edc:desc="Periodic Interval 5 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER6" edc:nzwidth="0x1" edc:desc="Periodic Interval 6 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER7" edc:nzwidth="0x1" edc:desc="Periodic Interval 7 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CMP0" edc:nzwidth="0x1" edc:desc="Compare 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CMP1" edc:nzwidth="0x1" edc:desc="Compare 1 Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TAMPER" edc:nzwidth="0x1" edc:desc="Tamper Enable"/>
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="INTFLAG" edc:nzwidth="0x10" edc:access="nn----nnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xC3FF" edc:addr="0x4000240C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="PER0" edc:nzwidth="0x1" edc:desc="Periodic Interval 0"/>
            <edc:SFRFieldDef edc:cname="PER1" edc:nzwidth="0x1" edc:desc="Periodic Interval 1"/>
            <edc:SFRFieldDef edc:cname="PER2" edc:nzwidth="0x1" edc:desc="Periodic Interval 2"/>
            <edc:SFRFieldDef edc:cname="PER3" edc:nzwidth="0x1" edc:desc="Periodic Interval 3"/>
            <edc:SFRFieldDef edc:cname="PER4" edc:nzwidth="0x1" edc:desc="Periodic Interval 4"/>
            <edc:SFRFieldDef edc:cname="PER5" edc:nzwidth="0x1" edc:desc="Periodic Interval 5"/>
            <edc:SFRFieldDef edc:cname="PER6" edc:nzwidth="0x1" edc:desc="Periodic Interval 6"/>
            <edc:SFRFieldDef edc:cname="PER7" edc:nzwidth="0x1" edc:desc="Periodic Interval 7"/>
            <edc:SFRFieldDef edc:cname="CMP0" edc:nzwidth="0x1" edc:desc="Compare 0"/>
            <edc:SFRFieldDef edc:cname="CMP1" edc:nzwidth="0x1" edc:desc="Compare 1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TAMPER" edc:nzwidth="0x1" edc:desc="Tamper"/>
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="--------------rrr--------rrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3807F" edc:addr="0x40002410">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Bit Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable Bit Busy"/>
            <edc:SFRFieldDef edc:cname="FREQCORR" edc:nzwidth="0x1" edc:desc="FREQCORR Register Busy"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x1" edc:desc="COUNT Register Busy"/>
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x1" edc:desc="PER Register Busy"/>
            <edc:SFRFieldDef edc:cname="COMP0" edc:nzwidth="0x1" edc:desc="COMP 0 Register Busy"/>
            <edc:SFRFieldDef edc:cname="COMP1" edc:nzwidth="0x1" edc:desc="COMP 1 Register Busy"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="COUNTSYNC" edc:nzwidth="0x1" edc:desc="Count Synchronization Enable Bit Busy"/>
            <edc:SFRFieldDef edc:cname="GP0" edc:nzwidth="0x1" edc:desc="General Purpose 0 Register Busy"/>
            <edc:SFRFieldDef edc:cname="GP1" edc:nzwidth="0x1" edc:desc="General Purpose 1 Register Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="COUNT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x40002418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x10" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="PER" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x4000241C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x10" edc:desc="Counter Period"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="COMP0" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x40002420">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="COMP" edc:nzwidth="0x10" edc:desc="Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="COMP1" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x40002422">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="COMP" edc:nzwidth="0x10" edc:desc="Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="TIMESTAMP" edc:nzwidth="0x20" edc:access="----------------rrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF" edc:addr="0x40002464">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x10" edc:desc="Count Timestamp Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="RTC/MODE2">
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="CTRLA" edc:nzwidth="0x10" edc:access="nn--nnnnnn--nnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xCFCF" edc:addr="0x40002400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x2" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="COUNT32" edc:desc="Mode 0: 32-bit Counter" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="COUNT16" edc:desc="Mode 1: 16-bit Counter" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CLOCK" edc:desc="Mode 2: Clock/Calendar" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CLKREP" edc:nzwidth="0x1" edc:desc="Clock Representation"/>
            <edc:SFRFieldDef edc:cname="MATCHCLR" edc:nzwidth="0x1" edc:desc="Clear on Match"/>
            <edc:SFRFieldDef edc:cname="PRESCALER" edc:nzwidth="0x4" edc:desc="Prescaler">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="CLK_RTC_CNT = GCLK_RTC/1" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="CLK_RTC_CNT = GCLK_RTC/1" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="CLK_RTC_CNT = GCLK_RTC/2" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="CLK_RTC_CNT = GCLK_RTC/4" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="CLK_RTC_CNT = GCLK_RTC/8" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="CLK_RTC_CNT = GCLK_RTC/16" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="CLK_RTC_CNT = GCLK_RTC/32" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="CLK_RTC_CNT = GCLK_RTC/64" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="CLK_RTC_CNT = GCLK_RTC/128" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="CLK_RTC_CNT = GCLK_RTC/256" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="DIV512" edc:desc="CLK_RTC_CNT = GCLK_RTC/512" edc:when="(field &amp; 0xF) == 0xA"/>
              <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="CLK_RTC_CNT = GCLK_RTC/1024" edc:when="(field &amp; 0xF) == 0xB"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="GPTRST" edc:nzwidth="0x1" edc:desc="GP Registers Reset On Tamper Enable"/>
            <edc:SFRFieldDef edc:cname="CLOCKSYNC" edc:nzwidth="0x1" edc:desc="Clock Read Synchronization Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="CTRLB" edc:nzwidth="0x10" edc:access="nnnn-nnnnnnn---n" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xF7F1" edc:addr="0x40002402">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="GP0EN" edc:nzwidth="0x1" edc:desc="General Purpose 0 Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DEBMAJ" edc:nzwidth="0x1" edc:desc="Debouncer Majority Enable"/>
            <edc:SFRFieldDef edc:cname="DEBASYNC" edc:nzwidth="0x1" edc:desc="Debouncer Asynchronous Enable"/>
            <edc:SFRFieldDef edc:cname="RTCOUT" edc:nzwidth="0x1" edc:desc="RTC Output Enable"/>
            <edc:SFRFieldDef edc:cname="DMAEN" edc:nzwidth="0x1" edc:desc="DMA Enable"/>
            <edc:SFRFieldDef edc:cname="DEBF" edc:nzwidth="0x3" edc:desc="Debounce Frequency">
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="CLK_RTC_DEB = CLK_RTC/2" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="CLK_RTC_DEB = CLK_RTC/4" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="CLK_RTC_DEB = CLK_RTC/8" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="CLK_RTC_DEB = CLK_RTC/16" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="CLK_RTC_DEB = CLK_RTC/32" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="CLK_RTC_DEB = CLK_RTC/64" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="CLK_RTC_DEB = CLK_RTC/128" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="CLK_RTC_DEB = CLK_RTC/256" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ACTF" edc:nzwidth="0x3" edc:desc="Active Layer Frequency">
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="CLK_RTC_OUT = CLK_RTC/2" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="CLK_RTC_OUT = CLK_RTC/4" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="CLK_RTC_OUT = CLK_RTC/8" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="CLK_RTC_OUT = CLK_RTC/16" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="CLK_RTC_OUT = CLK_RTC/32" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="CLK_RTC_OUT = CLK_RTC/64" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="CLK_RTC_OUT = CLK_RTC/128" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="CLK_RTC_OUT = CLK_RTC/256" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SEPTO" edc:nzwidth="0x1" edc:desc="Separate Tamper Outputs"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="EVCTRL" edc:nzwidth="0x20" edc:access="-------n-------nnn-----nnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x101C1FF" edc:addr="0x40002404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="PEREO0" edc:nzwidth="0x1" edc:desc="Periodic Interval 0 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO1" edc:nzwidth="0x1" edc:desc="Periodic Interval 1 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO2" edc:nzwidth="0x1" edc:desc="Periodic Interval 2 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO3" edc:nzwidth="0x1" edc:desc="Periodic Interval 3 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO4" edc:nzwidth="0x1" edc:desc="Periodic Interval 4 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO5" edc:nzwidth="0x1" edc:desc="Periodic Interval 5 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO6" edc:nzwidth="0x1" edc:desc="Periodic Interval 6 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO7" edc:nzwidth="0x1" edc:desc="Periodic Interval 7 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="ALARMEO0" edc:nzwidth="0x1" edc:desc="Alarm 0 Event Output Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="TAMPEREO" edc:nzwidth="0x1" edc:desc="Tamper Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="OVFEO" edc:nzwidth="0x1" edc:desc="Overflow Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="TAMPEVEI" edc:nzwidth="0x1" edc:desc="Tamper Event Input Enable"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="PERDEO" edc:nzwidth="0x1" edc:desc="Periodic Interval Daily Event Output Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="INTENCLR" edc:nzwidth="0x10" edc:access="nn-----nnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xC1FF" edc:addr="0x40002408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="PER0" edc:nzwidth="0x1" edc:desc="Periodic Interval 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER1" edc:nzwidth="0x1" edc:desc="Periodic Interval 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER2" edc:nzwidth="0x1" edc:desc="Periodic Interval 2 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER3" edc:nzwidth="0x1" edc:desc="Periodic Interval 3 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER4" edc:nzwidth="0x1" edc:desc="Periodic Interval 4 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER5" edc:nzwidth="0x1" edc:desc="Periodic Interval 5 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER6" edc:nzwidth="0x1" edc:desc="Periodic Interval 6 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER7" edc:nzwidth="0x1" edc:desc="Periodic Interval 7 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ALARM0" edc:nzwidth="0x1" edc:desc="Alarm 0 Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="TAMPER" edc:nzwidth="0x1" edc:desc="Tamper Enable"/>
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="INTENSET" edc:nzwidth="0x10" edc:access="nn-----nnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xC1FF" edc:addr="0x4000240A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="PER0" edc:nzwidth="0x1" edc:desc="Periodic Interval 0 Enable"/>
            <edc:SFRFieldDef edc:cname="PER1" edc:nzwidth="0x1" edc:desc="Periodic Interval 1 Enable"/>
            <edc:SFRFieldDef edc:cname="PER2" edc:nzwidth="0x1" edc:desc="Periodic Interval 2 Enable"/>
            <edc:SFRFieldDef edc:cname="PER3" edc:nzwidth="0x1" edc:desc="Periodic Interval 3 Enable"/>
            <edc:SFRFieldDef edc:cname="PER4" edc:nzwidth="0x1" edc:desc="Periodic Interval 4 Enable"/>
            <edc:SFRFieldDef edc:cname="PER5" edc:nzwidth="0x1" edc:desc="Periodic Interval 5 Enable"/>
            <edc:SFRFieldDef edc:cname="PER6" edc:nzwidth="0x1" edc:desc="Periodic Interval 6 Enable"/>
            <edc:SFRFieldDef edc:cname="PER7" edc:nzwidth="0x1" edc:desc="Periodic Interval 7 Enable"/>
            <edc:SFRFieldDef edc:cname="ALARM0" edc:nzwidth="0x1" edc:desc="Alarm 0 Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="TAMPER" edc:nzwidth="0x1" edc:desc="Tamper Enable"/>
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="INTFLAG" edc:nzwidth="0x10" edc:access="nn-----nnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xC1FF" edc:addr="0x4000240C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="PER0" edc:nzwidth="0x1" edc:desc="Periodic Interval 0"/>
            <edc:SFRFieldDef edc:cname="PER1" edc:nzwidth="0x1" edc:desc="Periodic Interval 1"/>
            <edc:SFRFieldDef edc:cname="PER2" edc:nzwidth="0x1" edc:desc="Periodic Interval 2"/>
            <edc:SFRFieldDef edc:cname="PER3" edc:nzwidth="0x1" edc:desc="Periodic Interval 3"/>
            <edc:SFRFieldDef edc:cname="PER4" edc:nzwidth="0x1" edc:desc="Periodic Interval 4"/>
            <edc:SFRFieldDef edc:cname="PER5" edc:nzwidth="0x1" edc:desc="Periodic Interval 5"/>
            <edc:SFRFieldDef edc:cname="PER6" edc:nzwidth="0x1" edc:desc="Periodic Interval 6"/>
            <edc:SFRFieldDef edc:cname="PER7" edc:nzwidth="0x1" edc:desc="Periodic Interval 7"/>
            <edc:SFRFieldDef edc:cname="ALARM0" edc:nzwidth="0x1" edc:desc="Alarm 0"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="TAMPER" edc:nzwidth="0x1" edc:desc="Tamper"/>
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="--------------rrr---r-----r-rrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3882F" edc:addr="0x40002410">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Bit Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable Bit Busy"/>
            <edc:SFRFieldDef edc:cname="FREQCORR" edc:nzwidth="0x1" edc:desc="FREQCORR Register Busy"/>
            <edc:SFRFieldDef edc:cname="CLOCK" edc:nzwidth="0x1" edc:desc="CLOCK Register Busy"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ALARM0" edc:nzwidth="0x1" edc:desc="ALARM Register Busy"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="MASK0" edc:nzwidth="0x1" edc:desc="MASK Register Busy"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CLOCKSYNC" edc:nzwidth="0x1" edc:desc="Clock Synchronization Enable Bit Busy"/>
            <edc:SFRFieldDef edc:cname="GP0" edc:nzwidth="0x1" edc:desc="General Purpose 0 Register Busy"/>
            <edc:SFRFieldDef edc:cname="GP1" edc:nzwidth="0x1" edc:desc="General Purpose 1 Register Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="CLOCK" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40002418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="SECOND" edc:nzwidth="0x6" edc:desc="Second"/>
            <edc:SFRFieldDef edc:cname="MINUTE" edc:nzwidth="0x6" edc:desc="Minute"/>
            <edc:SFRFieldDef edc:cname="HOUR" edc:nzwidth="0x5" edc:desc="Hour">
              <edc:SFRFieldSemantic edc:cname="AM" edc:desc="AM when CTRLA.CLKREP in 12-hour (AM/PM) mode" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PM" edc:desc="PM when CTRLA.CLKREP in 12-hour (AM/PM) mode" edc:when="(field &amp; 0x1F) == 0x10"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DAY" edc:nzwidth="0x5" edc:desc="Day"/>
            <edc:SFRFieldDef edc:cname="MONTH" edc:nzwidth="0x4" edc:desc="Month"/>
            <edc:SFRFieldDef edc:cname="YEAR" edc:nzwidth="0x6" edc:desc="Year"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="ALARM0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40002420">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="SECOND" edc:nzwidth="0x6" edc:desc="Second"/>
            <edc:SFRFieldDef edc:cname="MINUTE" edc:nzwidth="0x6" edc:desc="Minute"/>
            <edc:SFRFieldDef edc:cname="HOUR" edc:nzwidth="0x5" edc:desc="Hour">
              <edc:SFRFieldSemantic edc:cname="AM" edc:desc="AM when CTRLA.CLKREP in 12-hour (AM/PM) mode" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PM" edc:desc="PM when CTRLA.CLKREP in 12-hour (AM/PM) mode" edc:when="(field &amp; 0x1F) == 0x10"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DAY" edc:nzwidth="0x5" edc:desc="Day"/>
            <edc:SFRFieldDef edc:cname="MONTH" edc:nzwidth="0x4" edc:desc="Month"/>
            <edc:SFRFieldDef edc:cname="YEAR" edc:nzwidth="0x6" edc:desc="Year"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="MASK0" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:addr="0x40002424">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="SEL" edc:nzwidth="0x3" edc:desc="Alarm Mask Selection">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Alarm Disabled" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SS" edc:desc="Match seconds only" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="MMSS" edc:desc="Match seconds and minutes only" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="HHMMSS" edc:desc="Match seconds, minutes, and hours only" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="DDHHMMSS" edc:desc="Match seconds, minutes, hours, and days only" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="MMDDHHMMSS" edc:desc="Match seconds, minutes, hours, days, and months only" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="YYMMDDHHMMSS" edc:desc="Match seconds, minutes, hours, days, months, and years" edc:when="(field &amp; 0x7) == 0x6"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="TIMESTAMP" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40002464">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="SECOND" edc:nzwidth="0x6" edc:desc="Second Timestamp Value"/>
            <edc:SFRFieldDef edc:cname="MINUTE" edc:nzwidth="0x6" edc:desc="Minute Timestamp Value"/>
            <edc:SFRFieldDef edc:cname="HOUR" edc:nzwidth="0x5" edc:desc="Hour Timestamp Value"/>
            <edc:SFRFieldDef edc:cname="DAY" edc:nzwidth="0x5" edc:desc="Day Timestamp Value"/>
            <edc:SFRFieldDef edc:cname="MONTH" edc:nzwidth="0x4" edc:desc="Month Timestamp Value"/>
            <edc:SFRFieldDef edc:cname="YEAR" edc:nzwidth="0x6" edc:desc="Year Timestamp Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM0/I2CM">
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnn-nnnnnn---n--------n--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7BF1009F" edc:addr="0x42000400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="I2C_MASTER" edc:desc="I2C master operation" edc:when="(field &amp; 0x7) == 0x5"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="PINOUT" edc:nzwidth="0x1" edc:desc="Pin Usage"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SDAHOLD" edc:nzwidth="0x2" edc:desc="SDA Hold Time">
              <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disabled" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="75NS" edc:desc="50-100ns hold time" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="450NS" edc:desc="300-600ns hold time" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="600NS" edc:desc="400-800ns hold time" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MEXTTOEN" edc:nzwidth="0x1" edc:desc="Master SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="SEXTTOEN" edc:nzwidth="0x1" edc:desc="Slave SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="SPEED" edc:nzwidth="0x2" edc:desc="Transfer Speed">
              <edc:SFRFieldSemantic edc:cname="SM" edc:desc="Standard-Mode (SM) and Fast-Mode (FM)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FMP" edc:desc="Fast-Mode Plus (FM+)" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="HS" edc:desc="High-Speed Mode" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SCLSM" edc:nzwidth="0x1" edc:desc="SCL Clock Stretch Mode"/>
            <edc:SFRFieldDef edc:cname="INACTOUT" edc:nzwidth="0x2" edc:desc="Inactive Time-Out">
              <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disable" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="55US" edc:desc="5-6 SCL cycle time-out" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="105US" edc:desc="10-11 SCL cycle time-out" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="205US" edc:desc="20-21 SCL cycle time-out" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LOWTOUTEN" edc:nzwidth="0x1" edc:desc="SCL Low Timeout Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="--------nn---nnn------nn--------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC70300" edc:addr="0x42000404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="SMEN" edc:nzwidth="0x1" edc:desc="Smart Mode Enable"/>
            <edc:SFRFieldDef edc:cname="QCEN" edc:nzwidth="0x1" edc:desc="Quick Command Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Command"/>
            <edc:SFRFieldDef edc:cname="ACKACT" edc:nzwidth="0x1" edc:desc="Acknowledge Action"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="FIFOCLR" edc:nzwidth="0x2" edc:desc="FIFO Clear">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TXFIFO" edc:desc="Clear TX FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RXFIFO" edc:desc="Clear RX FIFO" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Clear both TX and RF FIFOs" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="nnnnn--n------------------------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF9000000" edc:addr="0x42000408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:AdjustPoint edc:offset="0x18"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x1" edc:desc="Data 32 Bit"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="RXTRHOLD" edc:nzwidth="0x2" edc:desc="Receive FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated when DATA is present in the FIFO" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when FIFO is half-full" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FULL" edc:desc="Interrupt and DMA triggers are generated when FIFO is full" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXTRHOLD" edc:nzwidth="0x2" edc:desc="Transmit FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is not full" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when half FIFO space is free" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EMPTY" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is not full" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="BAUD" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x4200040C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x8" edc:desc="Baud Rate Value"/>
            <edc:SFRFieldDef edc:cname="BAUDLOW" edc:nzwidth="0x8" edc:desc="Baud Rate Value Low"/>
            <edc:SFRFieldDef edc:cname="HSBAUD" edc:nzwidth="0x8" edc:desc="High Speed Baud Rate Value"/>
            <edc:SFRFieldDef edc:cname="HSBAUDLOW" edc:nzwidth="0x8" edc:desc="High Speed Baud Rate Value Low"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n--nn-nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x9B" edc:addr="0x42000414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="MB" edc:nzwidth="0x1" edc:desc="Master On Bus Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SB" edc:nzwidth="0x1" edc:desc="Slave On Bus Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFE" edc:nzwidth="0x1" edc:desc="Tx FIFO Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFF" edc:nzwidth="0x1" edc:desc="Rx FIFO Full Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n--nn-nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x9B" edc:addr="0x42000416">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="MB" edc:nzwidth="0x1" edc:desc="Master On Bus Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SB" edc:nzwidth="0x1" edc:desc="Slave On Bus Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFE" edc:nzwidth="0x1" edc:desc="Tx FIFO Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFF" edc:nzwidth="0x1" edc:desc="Rx FIFO Full Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n--nn-nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x9B" edc:addr="0x42000418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="MB" edc:nzwidth="0x1" edc:desc="Master On Bus Interrupt"/>
            <edc:SFRFieldDef edc:cname="SB" edc:nzwidth="0x1" edc:desc="Slave On Bus Interrupt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFE" edc:nzwidth="0x1" edc:desc="Tx FIFO Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXFF" edc:nzwidth="0x1" edc:desc="Rx FIFO Full Interrupt"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="-----nnnnnnn-nnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x7F7" edc:addr="0x4200041A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="BUSERR" edc:nzwidth="0x1" edc:desc="Bus Error"/>
            <edc:SFRFieldDef edc:cname="ARBLOST" edc:nzwidth="0x1" edc:desc="Arbitration Lost"/>
            <edc:SFRFieldDef edc:cname="RXNACK" edc:nzwidth="0x1" edc:desc="Received Not Acknowledge"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BUSSTATE" edc:nzwidth="0x2" edc:desc="Bus State">
              <edc:SFRFieldSemantic edc:cname="UNKNOWN" edc:desc="Wait for stop or idle" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IDLE" edc:desc="Wait for transaction initialization" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="OWNER" edc:desc="I2C master is the current owner of the bus" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="BUSY" edc:desc="Some other I2C master owns the bus" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LOWTOUT" edc:nzwidth="0x1" edc:desc="SCL Low Timeout"/>
            <edc:SFRFieldDef edc:cname="CLKHOLD" edc:nzwidth="0x1" edc:desc="Clock Hold"/>
            <edc:SFRFieldDef edc:cname="MEXTTOUT" edc:nzwidth="0x1" edc:desc="Master SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="SEXTTOUT" edc:nzwidth="0x1" edc:desc="Slave SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="LENERR" edc:nzwidth="0x1" edc:desc="Length Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="-----------------------------rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7" edc:addr="0x4200041C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="SYSOP" edc:nzwidth="0x1" edc:desc="System Operation Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnn--nnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFE7FF" edc:addr="0x42000424">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0xB" edc:desc="Address Value"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x1" edc:desc="Length Enable"/>
            <edc:SFRFieldDef edc:cname="HS" edc:nzwidth="0x1" edc:desc="High Speed Mode"/>
            <edc:SFRFieldDef edc:cname="TENBITEN" edc:nzwidth="0x1" edc:desc="Ten Bit Addressing Enable"/>
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Length"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42000428">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x42000430">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="FIFOSPACE" edc:nzwidth="0x10" edc:access="---rrrrr---rrrrr" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1F1F" edc:addr="0x42000434">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="TXSPACE" edc:nzwidth="0x5" edc:desc="Tx FIFO Empty Space"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RXSPACE" edc:nzwidth="0x5" edc:desc="Rx FIFO Filled Space"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="FIFOPTR" edc:nzwidth="0x10" edc:access="----nnnn----nnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xF0F" edc:addr="0x42000436">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="CPUWRPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Write Pointer"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CPURDPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Read Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM0/I2CS">
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-n--n-nnn-nn---n--------n--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x4BB1009F" edc:addr="0x42000400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="I2C_SLAVE" edc:desc="I2C slave operation" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="PINOUT" edc:nzwidth="0x1" edc:desc="Pin Usage"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SDAHOLD" edc:nzwidth="0x2" edc:desc="SDA Hold Time">
              <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disabled" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="75NS" edc:desc="50-100ns hold time" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="450NS" edc:desc="300-600ns hold time" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="600NS" edc:desc="400-800ns hold time" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SEXTTOEN" edc:nzwidth="0x1" edc:desc="Slave SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="SPEED" edc:nzwidth="0x2" edc:desc="Transfer Speed">
              <edc:SFRFieldSemantic edc:cname="SM" edc:desc="Standard-Mode (SM) and Fast-Mode (FM)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FMP" edc:desc="Fast-Mode Plus (FM+)" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="HS" edc:desc="High-Speed Mode" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SCLSM" edc:nzwidth="0x1" edc:desc="SCL Clock Stretch Mode"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="LOWTOUTEN" edc:nzwidth="0x1" edc:desc="SCL Low Timeout Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="--------nn---nnnnn---nnn--------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC7C700" edc:addr="0x42000404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="SMEN" edc:nzwidth="0x1" edc:desc="Smart Mode Enable"/>
            <edc:SFRFieldDef edc:cname="GCMD" edc:nzwidth="0x1" edc:desc="PMBus Group Command"/>
            <edc:SFRFieldDef edc:cname="AACKEN" edc:nzwidth="0x1" edc:desc="Automatic Address Acknowledge"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="AMODE" edc:nzwidth="0x2" edc:desc="Address Mode">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="The slave responds to the address written in ADDR.ADDR masked by the value in ADDR.ADDRMASK" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2ADDRS" edc:desc="The slave responds to the two unique addresses in ADDR and ADDRMASK" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RANGE" edc:desc="The slave responds to the range of addresses between and including ADDR and ADDRMASK. ADDR is the upper limit" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Command"/>
            <edc:SFRFieldDef edc:cname="ACKACT" edc:nzwidth="0x1" edc:desc="Acknowledge Action"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="FIFOCLR" edc:nzwidth="0x2" edc:desc="FIFO Clear">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TXFIFO" edc:desc="Clear TX FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RXFIFO" edc:desc="Clear RX FIFO" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Clear both TX and RF FIFOs" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="nnnnn--n--------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF900000F" edc:addr="0x42000408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="SDASETUP" edc:nzwidth="0x4" edc:desc="SDA Setup Time"/>
            <edc:AdjustPoint edc:offset="0x14"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x1" edc:desc="Data 32 Bit"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="RXTRHOLD" edc:nzwidth="0x2" edc:desc="Receive FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated when DATA is present in the FIFO" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when FIFO is half-full" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FULL" edc:desc="Interrupt and DMA triggers are generated when FIFO is full" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXTRHOLD" edc:nzwidth="0x2" edc:desc="Transmit FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is not full" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when half FIFO space is free" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EMPTY" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is not full" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n--nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x9F" edc:addr="0x42000414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="PREC" edc:nzwidth="0x1" edc:desc="Stop Received Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="AMATCH" edc:nzwidth="0x1" edc:desc="Address Match Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="DRDY" edc:nzwidth="0x1" edc:desc="Data Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFE" edc:nzwidth="0x1" edc:desc="Tx FIFO Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFF" edc:nzwidth="0x1" edc:desc="Rx FIFO Full Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n--nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x9F" edc:addr="0x42000416">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="PREC" edc:nzwidth="0x1" edc:desc="Stop Received Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="AMATCH" edc:nzwidth="0x1" edc:desc="Address Match Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DRDY" edc:nzwidth="0x1" edc:desc="Data Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFE" edc:nzwidth="0x1" edc:desc="Tx FIFO Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFF" edc:nzwidth="0x1" edc:desc="Rx FIFO Full Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n--nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x9F" edc:addr="0x42000418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="PREC" edc:nzwidth="0x1" edc:desc="Stop Received Interrupt"/>
            <edc:SFRFieldDef edc:cname="AMATCH" edc:nzwidth="0x1" edc:desc="Address Match Interrupt"/>
            <edc:SFRFieldDef edc:cname="DRDY" edc:nzwidth="0x1" edc:desc="Data Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXFE" edc:nzwidth="0x1" edc:desc="Tx FIFO Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXFF" edc:nzwidth="0x1" edc:desc="Rx FIFO Full Interrupt"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="----nnn-nn-nnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xEDF" edc:addr="0x4200041A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="BUSERR" edc:nzwidth="0x1" edc:desc="Bus Error"/>
            <edc:SFRFieldDef edc:cname="COLL" edc:nzwidth="0x1" edc:desc="Transmit Collision"/>
            <edc:SFRFieldDef edc:cname="RXNACK" edc:nzwidth="0x1" edc:desc="Received Not Acknowledge"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Read/Write Direction"/>
            <edc:SFRFieldDef edc:cname="SR" edc:nzwidth="0x1" edc:desc="Repeated Start"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LOWTOUT" edc:nzwidth="0x1" edc:desc="SCL Low Timeout"/>
            <edc:SFRFieldDef edc:cname="CLKHOLD" edc:nzwidth="0x1" edc:desc="Clock Hold"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SEXTTOUT" edc:nzwidth="0x1" edc:desc="Slave SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="HS" edc:nzwidth="0x1" edc:desc="High Speed"/>
            <edc:SFRFieldDef edc:cname="LENERR" edc:nzwidth="0x1" edc:desc="Transaction Length Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="---------------------------r-rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x17" edc:addr="0x4200041C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="SYSOP" edc:nzwidth="0x1" edc:desc="System Operation Synchronization Busy"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LENGTH" edc:nzwidth="0x1" edc:desc="Length Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="LENGTH" edc:nzwidth="0x10" edc:access="-------nnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1FF" edc:addr="0x42000422">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x1" edc:desc="Data Length Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="-----nnnnnnnnnn-n----nnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FE87FF" edc:addr="0x42000424">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="GENCEN" edc:nzwidth="0x1" edc:desc="General Call Address Enable"/>
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0xA" edc:desc="Address Value"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TENBITEN" edc:nzwidth="0x1" edc:desc="Ten Bit Addressing Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ADDRMASK" edc:nzwidth="0xA" edc:desc="Address Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42000428">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="FIFOSPACE" edc:nzwidth="0x10" edc:access="---rrrrr---rrrrr" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1F1F" edc:addr="0x42000434">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="TXSPACE" edc:nzwidth="0x5" edc:desc="Tx FIFO Empty Space"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RXSPACE" edc:nzwidth="0x5" edc:desc="Rx FIFO Filled Space"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="FIFOPTR" edc:nzwidth="0x10" edc:access="----nnnn----nnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xF0F" edc:addr="0x42000436">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="CPUWRPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Write Pointer"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CPURDPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Read Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM0/SPIM">
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnnnnn--nn--nn-------nn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7F33019F" edc:addr="0x42000400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="SPI_MASTER" edc:desc="SPI in master operation" edc:when="(field &amp; 0x7) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="IBON" edc:nzwidth="0x1" edc:desc="Immediate Buffer Overflow Notification">
              <edc:SFRFieldSemantic edc:cname="0x0" edc:desc="STATUS.BUFOVF is set when it occurs in the data stream" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="0x1" edc:desc="STATUS.BUFOVF is set immediately upon buffer overflow" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DOPO" edc:nzwidth="0x2" edc:desc="Data Out Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="DO on PAD[0], SCK on PAD[1] and SS on PAD[2]" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="DO on PAD[3], SCK on PAD[1] and SS on PAD[2]" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DIPO" edc:nzwidth="0x2" edc:desc="Data In Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="SERCOM PAD[0] is used as data input" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="SERCOM PAD[1] is used as data input" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="SERCOM PAD[2] is used as data input" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="SERCOM PAD[3] is used as data input" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FORM" edc:nzwidth="0x4" edc:desc="Frame Format">
              <edc:SFRFieldSemantic edc:cname="SPI_FRAME" edc:desc="SPI Frame" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SPI_FRAME_WITH_ADDR" edc:desc="SPI Frame with Addr" edc:when="(field &amp; 0xF) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPHA" edc:nzwidth="0x1" edc:desc="Clock Phase">
              <edc:SFRFieldSemantic edc:cname="LEADING_EDGE" edc:desc="The data is sampled on a leading SCK edge and changed on a trailing SCK edge" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TRAILING_EDGE" edc:desc="The data is sampled on a trailing SCK edge and changed on a leading SCK edge" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity">
              <edc:SFRFieldSemantic edc:cname="IDLE_LOW" edc:desc="SCK is low when idle" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IDLE_HIGH" edc:desc="SCK is high when idle" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order">
              <edc:SFRFieldSemantic edc:cname="MSB" edc:desc="MSB is transmitted first" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LSB" edc:desc="LSB is transmitted first" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="--------nn----n-nnn---n--n---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC2E247" edc:addr="0x42000404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits" edc:when="(field &amp; 0x7) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PLOADEN" edc:nzwidth="0x1" edc:desc="Data Preload Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SSDE" edc:nzwidth="0x1" edc:desc="Slave Select Low Detect Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="SS low detector is disabled" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="SS low detector is enabled" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="MSSEN" edc:nzwidth="0x1" edc:desc="Master Slave Select Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Hardware SS control is disabled" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="Hardware SS control is enabled" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AMODE" edc:nzwidth="0x2" edc:desc="Address Mode">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="ADDRMASK is used as a mask to the AADR register" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2ADDRS" edc:desc="The slave responds to the two unique addresses in ADDR and ADDRMASK" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RANGE" edc:desc="The slave responds to the range of addresses between and including ADDR and ADDRMASK. ADDR is the upper limit" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="FIFOCLR" edc:nzwidth="0x2" edc:desc="FIFO Clear">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TXFIFO" edc:desc="Clear TX FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RXFIFO" edc:desc="Clear RX FIFO" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Clear both TX and RF FIFOs" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="nnnnn--n------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF900003F" edc:addr="0x42000408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="ICSPACE" edc:nzwidth="0x6" edc:desc="Inter-Character Spacing"/>
            <edc:AdjustPoint edc:offset="0x12"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x1" edc:desc="Data 32 Bit"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="RXTRHOLD" edc:nzwidth="0x2" edc:desc="Receive FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated when DATA is present in the FIFO" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when FIFO is half-full" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FULL" edc:desc="Interrupt and DMA triggers are generated when FIFO is full" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXTRHOLD" edc:nzwidth="0x2" edc:desc="Transmit FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is not full" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when half FIFO space is free" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EMPTY" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is empty" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="BAUD" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4200040C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x8" edc:desc="Baud Rate Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42000414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42000416">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42000418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Flag"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="----n--------n--" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x804" edc:addr="0x4200041A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="LENERR" edc:nzwidth="0x1" edc:desc="Transaction Length Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="---------------------------r-rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x17" edc:addr="0x4200041C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB Synchronization Busy"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LENGTH" edc:nzwidth="0x1" edc:desc="LENGTH Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="LENGTH" edc:nzwidth="0x10" edc:access="-------nnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1FF" edc:addr="0x42000422">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x1" edc:desc="Data Length Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="--------nnnnnnnn--------nnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF00FF" edc:addr="0x42000424">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0x8" edc:desc="Address Value"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="ADDRMASK" edc:nzwidth="0x8" edc:desc="Address Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42000428">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x42000430">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="FIFOSPACE" edc:nzwidth="0x10" edc:access="---rrrrr---rrrrr" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1F1F" edc:addr="0x42000434">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="TXSPACE" edc:nzwidth="0x5" edc:desc="Tx FIFO Empty Space"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RXSPACE" edc:nzwidth="0x5" edc:desc="Rx FIFO Filled Space"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="FIFOPTR" edc:nzwidth="0x10" edc:access="----nnnn----nnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xF0F" edc:addr="0x42000436">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="CPUWRPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Write Pointer"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CPURDPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Read Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM0/SPIS">
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnnnnn--nn--nn-------nn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7F33019F" edc:addr="0x42000400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="SPI_SLAVE" edc:desc="SPI in slave operation" edc:when="(field &amp; 0x7) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="IBON" edc:nzwidth="0x1" edc:desc="Immediate Buffer Overflow Notification">
              <edc:SFRFieldSemantic edc:cname="0x0" edc:desc="STATUS.BUFOVF is set when it occurs in the data stream" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="0x1" edc:desc="STATUS.BUFOVF is set immediately upon buffer overflow" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DOPO" edc:nzwidth="0x2" edc:desc="Data Out Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="DO on PAD[0], SCK on PAD[1] and SS on PAD[2]" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="DO on PAD[3], SCK on PAD[1] and SS on PAD[2]" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DIPO" edc:nzwidth="0x2" edc:desc="Data In Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="SERCOM PAD[0] is used as data input" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="SERCOM PAD[1] is used as data input" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="SERCOM PAD[2] is used as data input" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="SERCOM PAD[3] is used as data input" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FORM" edc:nzwidth="0x4" edc:desc="Frame Format">
              <edc:SFRFieldSemantic edc:cname="SPI_FRAME" edc:desc="SPI Frame" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SPI_FRAME_WITH_ADDR" edc:desc="SPI Frame with Addr" edc:when="(field &amp; 0xF) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPHA" edc:nzwidth="0x1" edc:desc="Clock Phase">
              <edc:SFRFieldSemantic edc:cname="LEADING_EDGE" edc:desc="The data is sampled on a leading SCK edge and changed on a trailing SCK edge" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TRAILING_EDGE" edc:desc="The data is sampled on a trailing SCK edge and changed on a leading SCK edge" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity">
              <edc:SFRFieldSemantic edc:cname="IDLE_LOW" edc:desc="SCK is low when idle" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IDLE_HIGH" edc:desc="SCK is high when idle" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order">
              <edc:SFRFieldSemantic edc:cname="MSB" edc:desc="MSB is transmitted first" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LSB" edc:desc="LSB is transmitted first" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="--------nn----n-nnn---n--n---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC2E247" edc:addr="0x42000404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits" edc:when="(field &amp; 0x7) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PLOADEN" edc:nzwidth="0x1" edc:desc="Data Preload Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SSDE" edc:nzwidth="0x1" edc:desc="Slave Select Low Detect Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="SS low detector is disabled" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="SS low detector is enabled" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="MSSEN" edc:nzwidth="0x1" edc:desc="Master Slave Select Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Hardware SS control is disabled" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="Hardware SS control is enabled" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AMODE" edc:nzwidth="0x2" edc:desc="Address Mode">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="ADDRMASK is used as a mask to the AADR register" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2ADDRS" edc:desc="The slave responds to the two unique addresses in ADDR and ADDRMASK" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RANGE" edc:desc="The slave responds to the range of addresses between and including ADDR and ADDRMASK. ADDR is the upper limit" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="FIFOCLR" edc:nzwidth="0x2" edc:desc="FIFO Clear">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TXFIFO" edc:desc="Clear TX FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RXFIFO" edc:desc="Clear RX FIFO" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Clear both TX and RF FIFOs" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="nnnnn--n------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF900003F" edc:addr="0x42000408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="ICSPACE" edc:nzwidth="0x6" edc:desc="Inter-Character Spacing"/>
            <edc:AdjustPoint edc:offset="0x12"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x1" edc:desc="Data 32 Bit"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="RXTRHOLD" edc:nzwidth="0x2" edc:desc="Receive FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated when DATA is present in the FIFO" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when FIFO is half-full" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FULL" edc:desc="Interrupt and DMA triggers are generated when FIFO is full" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXTRHOLD" edc:nzwidth="0x2" edc:desc="Transmit FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is not full" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when half FIFO space is free" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EMPTY" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is empty" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="BAUD" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4200040C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x8" edc:desc="Baud Rate Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42000414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42000416">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42000418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Flag"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="----n--------n--" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x804" edc:addr="0x4200041A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="LENERR" edc:nzwidth="0x1" edc:desc="Transaction Length Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="---------------------------r-rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x17" edc:addr="0x4200041C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB Synchronization Busy"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LENGTH" edc:nzwidth="0x1" edc:desc="LENGTH Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="LENGTH" edc:nzwidth="0x10" edc:access="-------nnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1FF" edc:addr="0x42000422">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x1" edc:desc="Data Length Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="--------nnnnnnnn--------nnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF00FF" edc:addr="0x42000424">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0x8" edc:desc="Address Value"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="ADDRMASK" edc:nzwidth="0x8" edc:desc="Address Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42000428">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x42000430">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="FIFOSPACE" edc:nzwidth="0x10" edc:access="---rrrrr---rrrrr" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1F1F" edc:addr="0x42000434">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="TXSPACE" edc:nzwidth="0x5" edc:desc="Tx FIFO Empty Space"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RXSPACE" edc:nzwidth="0x5" edc:desc="Rx FIFO Filled Space"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="FIFOPTR" edc:nzwidth="0x10" edc:access="----nnnn----nnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xF0F" edc:addr="0x42000436">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="CPUWRPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Write Pointer"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CPURDPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Read Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM0/USART_EXT">
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnnnnnnnnn--nnnnn--nnnn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FF3E79F" edc:addr="0x42000400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="USART_EXT_CLK" edc:desc="USART with external clock" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="USART_INT_CLK" edc:desc="USART with internal clock" edc:when="(field &amp; 0x7) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="IBON" edc:nzwidth="0x1" edc:desc="Immediate Buffer Overflow Notification"/>
            <edc:SFRFieldDef edc:cname="TXINV" edc:nzwidth="0x1" edc:desc="Transmit Data Invert">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="TxD is not inverted" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INV" edc:desc="TxD is inverted" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RXINV" edc:nzwidth="0x1" edc:desc="Receive Data Invert">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="RxD is not inverted" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INV" edc:desc="RxD is inverted" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SAMPR" edc:nzwidth="0x3" edc:desc="Sample">
              <edc:SFRFieldSemantic edc:cname="16X_ARITHMETIC" edc:desc="16x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="16X_FRACTIONAL" edc:desc="16x over-sampling using fractional baudrate generation" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="8X_ARITHMETIC" edc:desc="8x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="8X_FRACTIONAL" edc:desc="8x over-sampling using fractional baudrate generation" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="3X_ARITHMETIC" edc:desc="3x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXPO" edc:nzwidth="0x2" edc:desc="Transmit Data Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="PAD[0] = TxD; PAD[1] = XCK" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="PAD[0] = TxD; PAD[2] = RTS; PAD[3] = CTS" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="PAD[0] = TxD; PAD[1] = XCK; PAD[2] = TE" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXPO" edc:nzwidth="0x2" edc:desc="Receive Data Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="SERCOM PAD[0] is used for data reception" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="SERCOM PAD[1] is used for data reception" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="SERCOM PAD[2] is used for data reception" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="SERCOM PAD[3] is used for data reception" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SAMPA" edc:nzwidth="0x2" edc:desc="Sample Adjustment">
              <edc:SFRFieldSemantic edc:cname="ADJ0" edc:desc="16x Over-sampling = 7-8-9; 8x Over-sampling = 3-4-5" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ADJ1" edc:desc="16x Over-sampling = 9-10-11; 8x Over-sampling = 4-5-6" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="ADJ2" edc:desc="16x Over-sampling = 11-12-13; 8x Over-sampling = 5-6-7" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="ADJ3" edc:desc="16x Over-sampling = 13-14-15; 8x Over-sampling = 6-7-8" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FORM" edc:nzwidth="0x4" edc:desc="Frame Format">
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_NO_PARITY" edc:desc="USART frame" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_WITH_PARITY" edc:desc="USART frame with parity" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_LINBRKGEN" edc:desc="LIN Master Break and Sync generation" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_AUTO_BAUD_NO_PARITY" edc:desc="Auto-baud (LIN Slave) - break detection and auto-baud" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_AUTO_BAUD_WITH_PARITY" edc:desc="Auto-baud - break detection and auto-baud with parity" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_ISO_7816" edc:desc="ISO 7816" edc:when="(field &amp; 0xF) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMODE" edc:nzwidth="0x1" edc:desc="Communication Mode">
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Asynchronous communication." edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Synchronous communication." edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity">
              <edc:SFRFieldSemantic edc:cname="IDLE_LOW" edc:desc="TxD Change:- Rising XCK edge, RxD Sample:- Falling XCK edge" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IDLE_HIGH" edc:desc="TxD Change:- Falling XCK edge, RxD Sample:- Rising XCK edge" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order">
              <edc:SFRFieldSemantic edc:cname="MSB" edc:desc="MSB is transmitted first." edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LSB" edc:desc="LSB is transmitted first." edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="------nnnn----nn--n--nnn-n---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3C32747" edc:addr="0x42000404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 Bits" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 Bits" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="5_BIT" edc:desc="5 Bits" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="6_BIT" edc:desc="6 Bits" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="7_BIT" edc:desc="7 Bits" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SBMODE" edc:nzwidth="0x1" edc:desc="Stop Bit Mode">
              <edc:SFRFieldSemantic edc:cname="1_BIT" edc:desc="One Stop Bit" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2_BIT" edc:desc="Two Stop Bits" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="COLDEN" edc:nzwidth="0x1" edc:desc="Collision Detection Enable"/>
            <edc:SFRFieldDef edc:cname="SFDE" edc:nzwidth="0x1" edc:desc="Start of Frame Detection Enable"/>
            <edc:SFRFieldDef edc:cname="ENC" edc:nzwidth="0x1" edc:desc="Encoding Format">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Data is not encoded" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IRDA" edc:desc="Data is IrDA encoded" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PMODE" edc:nzwidth="0x1" edc:desc="Parity Mode">
              <edc:SFRFieldSemantic edc:cname="EVEN" edc:desc="Even Parity" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ODD" edc:desc="Odd Parity" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TXEN" edc:nzwidth="0x1" edc:desc="Transmitter Enable"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="FIFOCLR" edc:nzwidth="0x2" edc:desc="FIFO Clear">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TXFIFO" edc:desc="Clear TX FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RXFIFO" edc:desc="Clear RX FIFO" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Clear both TX and RF FIFOs" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LINCMD" edc:nzwidth="0x2" edc:desc="LIN Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Normal USART transmission" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SOFTWARE_CONTROL_TRANSMIT_CMD" edc:desc="Break field is transmitted when DATA is written" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="AUTO_TRANSMIT_CMD" edc:desc="Break, sync and identifier are automatically transmitted when DATA is written with the identifier" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="nnnnn-nn-nnn--nn----nnnn-----nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFB730F07" edc:addr="0x42000408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="GTIME" edc:nzwidth="0x3" edc:desc="Guard Time"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="BRKLEN" edc:nzwidth="0x2" edc:desc="LIN Master Break Length">
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="Break field transmission is 13 bit times" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="17_BIT" edc:desc="Break field transmission is 17 bit times" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="21_BIT" edc:desc="Break field transmission is 21 bit times" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="26_BIT" edc:desc="Break field transmission is 26 bit times" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="HDRDLY" edc:nzwidth="0x2" edc:desc="LIN Master Header Delay">
              <edc:SFRFieldSemantic edc:cname="DELAY0" edc:desc="Delay between break and sync transmission is 1 bit time; Delay between sync and ID transmission is 1 bit time" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DELAY1" edc:desc="Delay between break and sync transmission is 4 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="DELAY2" edc:desc="Delay between break and sync transmission is 8 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="DELAY3" edc:desc="Delay between break and sync transmission is 14 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="INACK" edc:nzwidth="0x1" edc:desc="Inhibit Not Acknowledge"/>
            <edc:SFRFieldDef edc:cname="DSNACK" edc:nzwidth="0x1" edc:desc="Disable Successive NACK"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MAXITER" edc:nzwidth="0x3" edc:desc="Maximum Iterations"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x2" edc:desc="Data 32 Bit">
              <edc:SFRFieldSemantic edc:cname="0x0" edc:desc="Reads and writes with CHSIZE" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="0x1" edc:desc="Reads with CHSIZE, writes with 32-bit extension" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="0x2" edc:desc="Reads with 32-bit extension, writes with CHSIZE" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="0x3" edc:desc="Reads and writes with 32-bit extension" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="RXTRHOLD" edc:nzwidth="0x2" edc:desc="Receive FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated when DATA is present in the FIFO" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when FIFO is half-full" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FULL" edc:desc="Interrupt and DMA triggers are generated when FIFO is full" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXTRHOLD" edc:nzwidth="0x2" edc:desc="Transmit FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is not full" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when half FIFO space is free" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EMPTY" edc:desc="Interrupt and DMA triggers are generated when the FIFO is empty" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="BAUD" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x4200040C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x10" edc:desc="Baud Rate Value"/>
            <edc:AdjustPoint edc:offset="-3"/>
            <edc:SFRFieldDef edc:cname="FP" edc:nzwidth="0x3" edc:desc="Fractional Part"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="RXPL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4200040E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="RXPL" edc:nzwidth="0x8" edc:desc="Receive Pulse Length"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42000414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42000416">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42000418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="--------nnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xFF" edc:addr="0x4200041A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Parity Error"/>
            <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Frame Error"/>
            <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
            <edc:SFRFieldDef edc:cname="CTS" edc:nzwidth="0x1" edc:desc="Clear To Send"/>
            <edc:SFRFieldDef edc:cname="ISF" edc:nzwidth="0x1" edc:desc="Inconsistent Sync Field"/>
            <edc:SFRFieldDef edc:cname="COLL" edc:nzwidth="0x1" edc:desc="Collision Detected"/>
            <edc:SFRFieldDef edc:cname="TXE" edc:nzwidth="0x1" edc:desc="Transmitter Empty"/>
            <edc:SFRFieldDef edc:cname="ITER" edc:nzwidth="0x1" edc:desc="Maximum Number of Repetitions Reached"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="---------------------------rrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:addr="0x4200041C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="RXERRCNT" edc:nzwidth="0x1" edc:desc="RXERRCNT Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="LENGTH" edc:nzwidth="0x1" edc:desc="LENGTH Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="RXERRCNT" edc:nzwidth="0x8" edc:access="rrrrrrrr" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42000420">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="RXERRCNT" edc:nzwidth="0x8" edc:desc="Receive Error Count"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="LENGTH" edc:nzwidth="0x10" edc:access="------nnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x3FF" edc:addr="0x42000422">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x2" edc:desc="Data Length Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Length counter is disabled" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TX" edc:desc="Length counter is enabled for transmit" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RX" edc:desc="Length counter is enabled for receive" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42000428">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x42000430">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="FIFOSPACE" edc:nzwidth="0x10" edc:access="---rrrrr---rrrrr" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1F1F" edc:addr="0x42000434">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="TXSPACE" edc:nzwidth="0x5" edc:desc="Tx FIFO Empty Space"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RXSPACE" edc:nzwidth="0x5" edc:desc="Rx FIFO Filled Space"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="FIFOPTR" edc:nzwidth="0x10" edc:access="----nnnn----nnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xF0F" edc:addr="0x42000436">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="CPUWRPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Write Pointer"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CPURDPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Read Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM0/USART_INT">
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnnnnnnnnn--nnnnn--nnnn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FF3E79F" edc:addr="0x42000400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="USART_EXT_CLK" edc:desc="USART with external clock" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="USART_INT_CLK" edc:desc="USART with internal clock" edc:when="(field &amp; 0x7) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="IBON" edc:nzwidth="0x1" edc:desc="Immediate Buffer Overflow Notification"/>
            <edc:SFRFieldDef edc:cname="TXINV" edc:nzwidth="0x1" edc:desc="Transmit Data Invert">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="TxD is not inverted" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INV" edc:desc="TxD is inverted" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RXINV" edc:nzwidth="0x1" edc:desc="Receive Data Invert">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="RxD is not inverted" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INV" edc:desc="RxD is inverted" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SAMPR" edc:nzwidth="0x3" edc:desc="Sample">
              <edc:SFRFieldSemantic edc:cname="16X_ARITHMETIC" edc:desc="16x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="16X_FRACTIONAL" edc:desc="16x over-sampling using fractional baudrate generation" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="8X_ARITHMETIC" edc:desc="8x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="8X_FRACTIONAL" edc:desc="8x over-sampling using fractional baudrate generation" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="3X_ARITHMETIC" edc:desc="3x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXPO" edc:nzwidth="0x2" edc:desc="Transmit Data Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="PAD[0] = TxD; PAD[1] = XCK" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="PAD[0] = TxD; PAD[2] = RTS; PAD[3] = CTS" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="PAD[0] = TxD; PAD[1] = XCK; PAD[2] = TE" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXPO" edc:nzwidth="0x2" edc:desc="Receive Data Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="SERCOM PAD[0] is used for data reception" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="SERCOM PAD[1] is used for data reception" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="SERCOM PAD[2] is used for data reception" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="SERCOM PAD[3] is used for data reception" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SAMPA" edc:nzwidth="0x2" edc:desc="Sample Adjustment">
              <edc:SFRFieldSemantic edc:cname="ADJ0" edc:desc="16x Over-sampling = 7-8-9; 8x Over-sampling = 3-4-5" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ADJ1" edc:desc="16x Over-sampling = 9-10-11; 8x Over-sampling = 4-5-6" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="ADJ2" edc:desc="16x Over-sampling = 11-12-13; 8x Over-sampling = 5-6-7" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="ADJ3" edc:desc="16x Over-sampling = 13-14-15; 8x Over-sampling = 6-7-8" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FORM" edc:nzwidth="0x4" edc:desc="Frame Format">
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_NO_PARITY" edc:desc="USART frame" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_WITH_PARITY" edc:desc="USART frame with parity" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_LINBRKGEN" edc:desc="LIN Master Break and Sync generation" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_AUTO_BAUD_NO_PARITY" edc:desc="Auto-baud (LIN Slave) - break detection and auto-baud" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_AUTO_BAUD_WITH_PARITY" edc:desc="Auto-baud - break detection and auto-baud with parity" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_ISO_7816" edc:desc="ISO 7816" edc:when="(field &amp; 0xF) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMODE" edc:nzwidth="0x1" edc:desc="Communication Mode">
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Asynchronous communication." edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Synchronous communication." edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity">
              <edc:SFRFieldSemantic edc:cname="IDLE_LOW" edc:desc="TxD Change:- Rising XCK edge, RxD Sample:- Falling XCK edge" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IDLE_HIGH" edc:desc="TxD Change:- Falling XCK edge, RxD Sample:- Rising XCK edge" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order">
              <edc:SFRFieldSemantic edc:cname="MSB" edc:desc="MSB is transmitted first." edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LSB" edc:desc="LSB is transmitted first." edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="------nnnn----nn--n--nnn-n---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3C32747" edc:addr="0x42000404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 Bits" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 Bits" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="5_BIT" edc:desc="5 Bits" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="6_BIT" edc:desc="6 Bits" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="7_BIT" edc:desc="7 Bits" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SBMODE" edc:nzwidth="0x1" edc:desc="Stop Bit Mode">
              <edc:SFRFieldSemantic edc:cname="1_BIT" edc:desc="One Stop Bit" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2_BIT" edc:desc="Two Stop Bits" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="COLDEN" edc:nzwidth="0x1" edc:desc="Collision Detection Enable"/>
            <edc:SFRFieldDef edc:cname="SFDE" edc:nzwidth="0x1" edc:desc="Start of Frame Detection Enable"/>
            <edc:SFRFieldDef edc:cname="ENC" edc:nzwidth="0x1" edc:desc="Encoding Format">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Data is not encoded" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IRDA" edc:desc="Data is IrDA encoded" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PMODE" edc:nzwidth="0x1" edc:desc="Parity Mode">
              <edc:SFRFieldSemantic edc:cname="EVEN" edc:desc="Even Parity" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ODD" edc:desc="Odd Parity" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TXEN" edc:nzwidth="0x1" edc:desc="Transmitter Enable"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="FIFOCLR" edc:nzwidth="0x2" edc:desc="FIFO Clear">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TXFIFO" edc:desc="Clear TX FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RXFIFO" edc:desc="Clear RX FIFO" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Clear both TX and RF FIFOs" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LINCMD" edc:nzwidth="0x2" edc:desc="LIN Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Normal USART transmission" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SOFTWARE_CONTROL_TRANSMIT_CMD" edc:desc="Break field is transmitted when DATA is written" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="AUTO_TRANSMIT_CMD" edc:desc="Break, sync and identifier are automatically transmitted when DATA is written with the identifier" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="nnnnn-nn-nnn--nn----nnnn-----nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFB730F07" edc:addr="0x42000408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="GTIME" edc:nzwidth="0x3" edc:desc="Guard Time"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="BRKLEN" edc:nzwidth="0x2" edc:desc="LIN Master Break Length">
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="Break field transmission is 13 bit times" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="17_BIT" edc:desc="Break field transmission is 17 bit times" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="21_BIT" edc:desc="Break field transmission is 21 bit times" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="26_BIT" edc:desc="Break field transmission is 26 bit times" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="HDRDLY" edc:nzwidth="0x2" edc:desc="LIN Master Header Delay">
              <edc:SFRFieldSemantic edc:cname="DELAY0" edc:desc="Delay between break and sync transmission is 1 bit time; Delay between sync and ID transmission is 1 bit time" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DELAY1" edc:desc="Delay between break and sync transmission is 4 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="DELAY2" edc:desc="Delay between break and sync transmission is 8 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="DELAY3" edc:desc="Delay between break and sync transmission is 14 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="INACK" edc:nzwidth="0x1" edc:desc="Inhibit Not Acknowledge"/>
            <edc:SFRFieldDef edc:cname="DSNACK" edc:nzwidth="0x1" edc:desc="Disable Successive NACK"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MAXITER" edc:nzwidth="0x3" edc:desc="Maximum Iterations"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x2" edc:desc="Data 32 Bit">
              <edc:SFRFieldSemantic edc:cname="0x0" edc:desc="Reads and writes with CHSIZE" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="0x1" edc:desc="Reads with CHSIZE, writes with 32-bit extension" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="0x2" edc:desc="Reads with 32-bit extension, writes with CHSIZE" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="0x3" edc:desc="Reads and writes with 32-bit extension" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="RXTRHOLD" edc:nzwidth="0x2" edc:desc="Receive FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated when DATA is present in the FIFO" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when FIFO is half-full" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FULL" edc:desc="Interrupt and DMA triggers are generated when FIFO is full" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXTRHOLD" edc:nzwidth="0x2" edc:desc="Transmit FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is not full" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when half FIFO space is free" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EMPTY" edc:desc="Interrupt and DMA triggers are generated when the FIFO is empty" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="BAUD" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x4200040C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x10" edc:desc="Baud Rate Value"/>
            <edc:AdjustPoint edc:offset="-3"/>
            <edc:SFRFieldDef edc:cname="FP" edc:nzwidth="0x3" edc:desc="Fractional Part"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="RXPL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4200040E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="RXPL" edc:nzwidth="0x8" edc:desc="Receive Pulse Length"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42000414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42000416">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42000418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="--------nnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xFF" edc:addr="0x4200041A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Parity Error"/>
            <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Frame Error"/>
            <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
            <edc:SFRFieldDef edc:cname="CTS" edc:nzwidth="0x1" edc:desc="Clear To Send"/>
            <edc:SFRFieldDef edc:cname="ISF" edc:nzwidth="0x1" edc:desc="Inconsistent Sync Field"/>
            <edc:SFRFieldDef edc:cname="COLL" edc:nzwidth="0x1" edc:desc="Collision Detected"/>
            <edc:SFRFieldDef edc:cname="TXE" edc:nzwidth="0x1" edc:desc="Transmitter Empty"/>
            <edc:SFRFieldDef edc:cname="ITER" edc:nzwidth="0x1" edc:desc="Maximum Number of Repetitions Reached"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="---------------------------rrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:addr="0x4200041C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="RXERRCNT" edc:nzwidth="0x1" edc:desc="RXERRCNT Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="LENGTH" edc:nzwidth="0x1" edc:desc="LENGTH Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="RXERRCNT" edc:nzwidth="0x8" edc:access="rrrrrrrr" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42000420">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="RXERRCNT" edc:nzwidth="0x8" edc:desc="Receive Error Count"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="LENGTH" edc:nzwidth="0x10" edc:access="------nnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x3FF" edc:addr="0x42000422">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x2" edc:desc="Data Length Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Length counter is disabled" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TX" edc:desc="Length counter is enabled for transmit" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RX" edc:desc="Length counter is enabled for receive" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42000428">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x42000430">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="FIFOSPACE" edc:nzwidth="0x10" edc:access="---rrrrr---rrrrr" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1F1F" edc:addr="0x42000434">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="TXSPACE" edc:nzwidth="0x5" edc:desc="Tx FIFO Empty Space"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RXSPACE" edc:nzwidth="0x5" edc:desc="Rx FIFO Filled Space"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="FIFOPTR" edc:nzwidth="0x10" edc:access="----nnnn----nnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xF0F" edc:addr="0x42000436">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="CPUWRPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Write Pointer"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CPURDPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Read Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM1/I2CM">
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnn-nnnnnn---n--------n--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7BF1009F" edc:addr="0x42000800">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="I2C_MASTER" edc:desc="I2C master operation" edc:when="(field &amp; 0x7) == 0x5"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="PINOUT" edc:nzwidth="0x1" edc:desc="Pin Usage"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SDAHOLD" edc:nzwidth="0x2" edc:desc="SDA Hold Time">
              <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disabled" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="75NS" edc:desc="50-100ns hold time" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="450NS" edc:desc="300-600ns hold time" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="600NS" edc:desc="400-800ns hold time" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MEXTTOEN" edc:nzwidth="0x1" edc:desc="Master SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="SEXTTOEN" edc:nzwidth="0x1" edc:desc="Slave SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="SPEED" edc:nzwidth="0x2" edc:desc="Transfer Speed">
              <edc:SFRFieldSemantic edc:cname="SM" edc:desc="Standard-Mode (SM) and Fast-Mode (FM)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FMP" edc:desc="Fast-Mode Plus (FM+)" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="HS" edc:desc="High-Speed Mode" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SCLSM" edc:nzwidth="0x1" edc:desc="SCL Clock Stretch Mode"/>
            <edc:SFRFieldDef edc:cname="INACTOUT" edc:nzwidth="0x2" edc:desc="Inactive Time-Out">
              <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disable" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="55US" edc:desc="5-6 SCL cycle time-out" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="105US" edc:desc="10-11 SCL cycle time-out" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="205US" edc:desc="20-21 SCL cycle time-out" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LOWTOUTEN" edc:nzwidth="0x1" edc:desc="SCL Low Timeout Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="--------nn---nnn------nn--------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC70300" edc:addr="0x42000804">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="SMEN" edc:nzwidth="0x1" edc:desc="Smart Mode Enable"/>
            <edc:SFRFieldDef edc:cname="QCEN" edc:nzwidth="0x1" edc:desc="Quick Command Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Command"/>
            <edc:SFRFieldDef edc:cname="ACKACT" edc:nzwidth="0x1" edc:desc="Acknowledge Action"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="FIFOCLR" edc:nzwidth="0x2" edc:desc="FIFO Clear">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TXFIFO" edc:desc="Clear TX FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RXFIFO" edc:desc="Clear RX FIFO" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Clear both TX and RF FIFOs" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="nnnnn--n------------------------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF9000000" edc:addr="0x42000808">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:AdjustPoint edc:offset="0x18"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x1" edc:desc="Data 32 Bit"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="RXTRHOLD" edc:nzwidth="0x2" edc:desc="Receive FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated when DATA is present in the FIFO" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when FIFO is half-full" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FULL" edc:desc="Interrupt and DMA triggers are generated when FIFO is full" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXTRHOLD" edc:nzwidth="0x2" edc:desc="Transmit FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is not full" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when half FIFO space is free" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EMPTY" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is not full" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="BAUD" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x4200080C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x8" edc:desc="Baud Rate Value"/>
            <edc:SFRFieldDef edc:cname="BAUDLOW" edc:nzwidth="0x8" edc:desc="Baud Rate Value Low"/>
            <edc:SFRFieldDef edc:cname="HSBAUD" edc:nzwidth="0x8" edc:desc="High Speed Baud Rate Value"/>
            <edc:SFRFieldDef edc:cname="HSBAUDLOW" edc:nzwidth="0x8" edc:desc="High Speed Baud Rate Value Low"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n--nn-nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x9B" edc:addr="0x42000814">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="MB" edc:nzwidth="0x1" edc:desc="Master On Bus Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SB" edc:nzwidth="0x1" edc:desc="Slave On Bus Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFE" edc:nzwidth="0x1" edc:desc="Tx FIFO Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFF" edc:nzwidth="0x1" edc:desc="Rx FIFO Full Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n--nn-nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x9B" edc:addr="0x42000816">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="MB" edc:nzwidth="0x1" edc:desc="Master On Bus Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SB" edc:nzwidth="0x1" edc:desc="Slave On Bus Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFE" edc:nzwidth="0x1" edc:desc="Tx FIFO Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFF" edc:nzwidth="0x1" edc:desc="Rx FIFO Full Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n--nn-nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x9B" edc:addr="0x42000818">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="MB" edc:nzwidth="0x1" edc:desc="Master On Bus Interrupt"/>
            <edc:SFRFieldDef edc:cname="SB" edc:nzwidth="0x1" edc:desc="Slave On Bus Interrupt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFE" edc:nzwidth="0x1" edc:desc="Tx FIFO Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXFF" edc:nzwidth="0x1" edc:desc="Rx FIFO Full Interrupt"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="-----nnnnnnn-nnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x7F7" edc:addr="0x4200081A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="BUSERR" edc:nzwidth="0x1" edc:desc="Bus Error"/>
            <edc:SFRFieldDef edc:cname="ARBLOST" edc:nzwidth="0x1" edc:desc="Arbitration Lost"/>
            <edc:SFRFieldDef edc:cname="RXNACK" edc:nzwidth="0x1" edc:desc="Received Not Acknowledge"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BUSSTATE" edc:nzwidth="0x2" edc:desc="Bus State">
              <edc:SFRFieldSemantic edc:cname="UNKNOWN" edc:desc="Wait for stop or idle" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IDLE" edc:desc="Wait for transaction initialization" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="OWNER" edc:desc="I2C master is the current owner of the bus" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="BUSY" edc:desc="Some other I2C master owns the bus" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LOWTOUT" edc:nzwidth="0x1" edc:desc="SCL Low Timeout"/>
            <edc:SFRFieldDef edc:cname="CLKHOLD" edc:nzwidth="0x1" edc:desc="Clock Hold"/>
            <edc:SFRFieldDef edc:cname="MEXTTOUT" edc:nzwidth="0x1" edc:desc="Master SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="SEXTTOUT" edc:nzwidth="0x1" edc:desc="Slave SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="LENERR" edc:nzwidth="0x1" edc:desc="Length Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="-----------------------------rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7" edc:addr="0x4200081C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="SYSOP" edc:nzwidth="0x1" edc:desc="System Operation Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnn--nnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFE7FF" edc:addr="0x42000824">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0xB" edc:desc="Address Value"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x1" edc:desc="Length Enable"/>
            <edc:SFRFieldDef edc:cname="HS" edc:nzwidth="0x1" edc:desc="High Speed Mode"/>
            <edc:SFRFieldDef edc:cname="TENBITEN" edc:nzwidth="0x1" edc:desc="Ten Bit Addressing Enable"/>
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Length"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42000828">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x42000830">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="FIFOSPACE" edc:nzwidth="0x10" edc:access="---rrrrr---rrrrr" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1F1F" edc:addr="0x42000834">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="TXSPACE" edc:nzwidth="0x5" edc:desc="Tx FIFO Empty Space"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RXSPACE" edc:nzwidth="0x5" edc:desc="Rx FIFO Filled Space"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="FIFOPTR" edc:nzwidth="0x10" edc:access="----nnnn----nnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xF0F" edc:addr="0x42000836">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="CPUWRPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Write Pointer"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CPURDPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Read Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM1/I2CS">
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-n--n-nnn-nn---n--------n--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x4BB1009F" edc:addr="0x42000800">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="I2C_SLAVE" edc:desc="I2C slave operation" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="PINOUT" edc:nzwidth="0x1" edc:desc="Pin Usage"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SDAHOLD" edc:nzwidth="0x2" edc:desc="SDA Hold Time">
              <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disabled" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="75NS" edc:desc="50-100ns hold time" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="450NS" edc:desc="300-600ns hold time" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="600NS" edc:desc="400-800ns hold time" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SEXTTOEN" edc:nzwidth="0x1" edc:desc="Slave SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="SPEED" edc:nzwidth="0x2" edc:desc="Transfer Speed">
              <edc:SFRFieldSemantic edc:cname="SM" edc:desc="Standard-Mode (SM) and Fast-Mode (FM)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FMP" edc:desc="Fast-Mode Plus (FM+)" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="HS" edc:desc="High-Speed Mode" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SCLSM" edc:nzwidth="0x1" edc:desc="SCL Clock Stretch Mode"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="LOWTOUTEN" edc:nzwidth="0x1" edc:desc="SCL Low Timeout Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="--------nn---nnnnn---nnn--------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC7C700" edc:addr="0x42000804">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="SMEN" edc:nzwidth="0x1" edc:desc="Smart Mode Enable"/>
            <edc:SFRFieldDef edc:cname="GCMD" edc:nzwidth="0x1" edc:desc="PMBus Group Command"/>
            <edc:SFRFieldDef edc:cname="AACKEN" edc:nzwidth="0x1" edc:desc="Automatic Address Acknowledge"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="AMODE" edc:nzwidth="0x2" edc:desc="Address Mode">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="The slave responds to the address written in ADDR.ADDR masked by the value in ADDR.ADDRMASK" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2ADDRS" edc:desc="The slave responds to the two unique addresses in ADDR and ADDRMASK" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RANGE" edc:desc="The slave responds to the range of addresses between and including ADDR and ADDRMASK. ADDR is the upper limit" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Command"/>
            <edc:SFRFieldDef edc:cname="ACKACT" edc:nzwidth="0x1" edc:desc="Acknowledge Action"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="FIFOCLR" edc:nzwidth="0x2" edc:desc="FIFO Clear">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TXFIFO" edc:desc="Clear TX FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RXFIFO" edc:desc="Clear RX FIFO" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Clear both TX and RF FIFOs" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="nnnnn--n--------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF900000F" edc:addr="0x42000808">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="SDASETUP" edc:nzwidth="0x4" edc:desc="SDA Setup Time"/>
            <edc:AdjustPoint edc:offset="0x14"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x1" edc:desc="Data 32 Bit"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="RXTRHOLD" edc:nzwidth="0x2" edc:desc="Receive FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated when DATA is present in the FIFO" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when FIFO is half-full" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FULL" edc:desc="Interrupt and DMA triggers are generated when FIFO is full" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXTRHOLD" edc:nzwidth="0x2" edc:desc="Transmit FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is not full" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when half FIFO space is free" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EMPTY" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is not full" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n--nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x9F" edc:addr="0x42000814">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="PREC" edc:nzwidth="0x1" edc:desc="Stop Received Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="AMATCH" edc:nzwidth="0x1" edc:desc="Address Match Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="DRDY" edc:nzwidth="0x1" edc:desc="Data Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFE" edc:nzwidth="0x1" edc:desc="Tx FIFO Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFF" edc:nzwidth="0x1" edc:desc="Rx FIFO Full Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n--nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x9F" edc:addr="0x42000816">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="PREC" edc:nzwidth="0x1" edc:desc="Stop Received Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="AMATCH" edc:nzwidth="0x1" edc:desc="Address Match Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DRDY" edc:nzwidth="0x1" edc:desc="Data Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFE" edc:nzwidth="0x1" edc:desc="Tx FIFO Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFF" edc:nzwidth="0x1" edc:desc="Rx FIFO Full Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n--nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x9F" edc:addr="0x42000818">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="PREC" edc:nzwidth="0x1" edc:desc="Stop Received Interrupt"/>
            <edc:SFRFieldDef edc:cname="AMATCH" edc:nzwidth="0x1" edc:desc="Address Match Interrupt"/>
            <edc:SFRFieldDef edc:cname="DRDY" edc:nzwidth="0x1" edc:desc="Data Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXFE" edc:nzwidth="0x1" edc:desc="Tx FIFO Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXFF" edc:nzwidth="0x1" edc:desc="Rx FIFO Full Interrupt"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="----nnn-nn-nnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xEDF" edc:addr="0x4200081A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="BUSERR" edc:nzwidth="0x1" edc:desc="Bus Error"/>
            <edc:SFRFieldDef edc:cname="COLL" edc:nzwidth="0x1" edc:desc="Transmit Collision"/>
            <edc:SFRFieldDef edc:cname="RXNACK" edc:nzwidth="0x1" edc:desc="Received Not Acknowledge"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Read/Write Direction"/>
            <edc:SFRFieldDef edc:cname="SR" edc:nzwidth="0x1" edc:desc="Repeated Start"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LOWTOUT" edc:nzwidth="0x1" edc:desc="SCL Low Timeout"/>
            <edc:SFRFieldDef edc:cname="CLKHOLD" edc:nzwidth="0x1" edc:desc="Clock Hold"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SEXTTOUT" edc:nzwidth="0x1" edc:desc="Slave SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="HS" edc:nzwidth="0x1" edc:desc="High Speed"/>
            <edc:SFRFieldDef edc:cname="LENERR" edc:nzwidth="0x1" edc:desc="Transaction Length Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="---------------------------r-rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x17" edc:addr="0x4200081C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="SYSOP" edc:nzwidth="0x1" edc:desc="System Operation Synchronization Busy"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LENGTH" edc:nzwidth="0x1" edc:desc="Length Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="LENGTH" edc:nzwidth="0x10" edc:access="-------nnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1FF" edc:addr="0x42000822">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x1" edc:desc="Data Length Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="-----nnnnnnnnnn-n----nnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FE87FF" edc:addr="0x42000824">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="GENCEN" edc:nzwidth="0x1" edc:desc="General Call Address Enable"/>
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0xA" edc:desc="Address Value"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TENBITEN" edc:nzwidth="0x1" edc:desc="Ten Bit Addressing Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ADDRMASK" edc:nzwidth="0xA" edc:desc="Address Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42000828">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="FIFOSPACE" edc:nzwidth="0x10" edc:access="---rrrrr---rrrrr" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1F1F" edc:addr="0x42000834">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="TXSPACE" edc:nzwidth="0x5" edc:desc="Tx FIFO Empty Space"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RXSPACE" edc:nzwidth="0x5" edc:desc="Rx FIFO Filled Space"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="FIFOPTR" edc:nzwidth="0x10" edc:access="----nnnn----nnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xF0F" edc:addr="0x42000836">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="CPUWRPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Write Pointer"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CPURDPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Read Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM1/SPIM">
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnnnnn--nn--nn-------nn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7F33019F" edc:addr="0x42000800">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="SPI_MASTER" edc:desc="SPI in master operation" edc:when="(field &amp; 0x7) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="IBON" edc:nzwidth="0x1" edc:desc="Immediate Buffer Overflow Notification">
              <edc:SFRFieldSemantic edc:cname="0x0" edc:desc="STATUS.BUFOVF is set when it occurs in the data stream" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="0x1" edc:desc="STATUS.BUFOVF is set immediately upon buffer overflow" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DOPO" edc:nzwidth="0x2" edc:desc="Data Out Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="DO on PAD[0], SCK on PAD[1] and SS on PAD[2]" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="DO on PAD[3], SCK on PAD[1] and SS on PAD[2]" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DIPO" edc:nzwidth="0x2" edc:desc="Data In Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="SERCOM PAD[0] is used as data input" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="SERCOM PAD[1] is used as data input" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="SERCOM PAD[2] is used as data input" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="SERCOM PAD[3] is used as data input" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FORM" edc:nzwidth="0x4" edc:desc="Frame Format">
              <edc:SFRFieldSemantic edc:cname="SPI_FRAME" edc:desc="SPI Frame" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SPI_FRAME_WITH_ADDR" edc:desc="SPI Frame with Addr" edc:when="(field &amp; 0xF) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPHA" edc:nzwidth="0x1" edc:desc="Clock Phase">
              <edc:SFRFieldSemantic edc:cname="LEADING_EDGE" edc:desc="The data is sampled on a leading SCK edge and changed on a trailing SCK edge" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TRAILING_EDGE" edc:desc="The data is sampled on a trailing SCK edge and changed on a leading SCK edge" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity">
              <edc:SFRFieldSemantic edc:cname="IDLE_LOW" edc:desc="SCK is low when idle" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IDLE_HIGH" edc:desc="SCK is high when idle" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order">
              <edc:SFRFieldSemantic edc:cname="MSB" edc:desc="MSB is transmitted first" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LSB" edc:desc="LSB is transmitted first" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="--------nn----n-nnn---n--n---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC2E247" edc:addr="0x42000804">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits" edc:when="(field &amp; 0x7) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PLOADEN" edc:nzwidth="0x1" edc:desc="Data Preload Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SSDE" edc:nzwidth="0x1" edc:desc="Slave Select Low Detect Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="SS low detector is disabled" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="SS low detector is enabled" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="MSSEN" edc:nzwidth="0x1" edc:desc="Master Slave Select Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Hardware SS control is disabled" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="Hardware SS control is enabled" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AMODE" edc:nzwidth="0x2" edc:desc="Address Mode">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="ADDRMASK is used as a mask to the AADR register" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2ADDRS" edc:desc="The slave responds to the two unique addresses in ADDR and ADDRMASK" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RANGE" edc:desc="The slave responds to the range of addresses between and including ADDR and ADDRMASK. ADDR is the upper limit" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="FIFOCLR" edc:nzwidth="0x2" edc:desc="FIFO Clear">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TXFIFO" edc:desc="Clear TX FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RXFIFO" edc:desc="Clear RX FIFO" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Clear both TX and RF FIFOs" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="nnnnn--n------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF900003F" edc:addr="0x42000808">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="ICSPACE" edc:nzwidth="0x6" edc:desc="Inter-Character Spacing"/>
            <edc:AdjustPoint edc:offset="0x12"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x1" edc:desc="Data 32 Bit"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="RXTRHOLD" edc:nzwidth="0x2" edc:desc="Receive FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated when DATA is present in the FIFO" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when FIFO is half-full" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FULL" edc:desc="Interrupt and DMA triggers are generated when FIFO is full" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXTRHOLD" edc:nzwidth="0x2" edc:desc="Transmit FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is not full" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when half FIFO space is free" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EMPTY" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is empty" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="BAUD" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4200080C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x8" edc:desc="Baud Rate Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42000814">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42000816">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42000818">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Flag"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="----n--------n--" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x804" edc:addr="0x4200081A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="LENERR" edc:nzwidth="0x1" edc:desc="Transaction Length Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="---------------------------r-rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x17" edc:addr="0x4200081C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB Synchronization Busy"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LENGTH" edc:nzwidth="0x1" edc:desc="LENGTH Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="LENGTH" edc:nzwidth="0x10" edc:access="-------nnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1FF" edc:addr="0x42000822">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x1" edc:desc="Data Length Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="--------nnnnnnnn--------nnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF00FF" edc:addr="0x42000824">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0x8" edc:desc="Address Value"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="ADDRMASK" edc:nzwidth="0x8" edc:desc="Address Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42000828">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x42000830">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="FIFOSPACE" edc:nzwidth="0x10" edc:access="---rrrrr---rrrrr" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1F1F" edc:addr="0x42000834">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="TXSPACE" edc:nzwidth="0x5" edc:desc="Tx FIFO Empty Space"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RXSPACE" edc:nzwidth="0x5" edc:desc="Rx FIFO Filled Space"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="FIFOPTR" edc:nzwidth="0x10" edc:access="----nnnn----nnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xF0F" edc:addr="0x42000836">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="CPUWRPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Write Pointer"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CPURDPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Read Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM1/SPIS">
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnnnnn--nn--nn-------nn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7F33019F" edc:addr="0x42000800">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="SPI_SLAVE" edc:desc="SPI in slave operation" edc:when="(field &amp; 0x7) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="IBON" edc:nzwidth="0x1" edc:desc="Immediate Buffer Overflow Notification">
              <edc:SFRFieldSemantic edc:cname="0x0" edc:desc="STATUS.BUFOVF is set when it occurs in the data stream" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="0x1" edc:desc="STATUS.BUFOVF is set immediately upon buffer overflow" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DOPO" edc:nzwidth="0x2" edc:desc="Data Out Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="DO on PAD[0], SCK on PAD[1] and SS on PAD[2]" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="DO on PAD[3], SCK on PAD[1] and SS on PAD[2]" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DIPO" edc:nzwidth="0x2" edc:desc="Data In Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="SERCOM PAD[0] is used as data input" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="SERCOM PAD[1] is used as data input" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="SERCOM PAD[2] is used as data input" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="SERCOM PAD[3] is used as data input" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FORM" edc:nzwidth="0x4" edc:desc="Frame Format">
              <edc:SFRFieldSemantic edc:cname="SPI_FRAME" edc:desc="SPI Frame" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SPI_FRAME_WITH_ADDR" edc:desc="SPI Frame with Addr" edc:when="(field &amp; 0xF) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPHA" edc:nzwidth="0x1" edc:desc="Clock Phase">
              <edc:SFRFieldSemantic edc:cname="LEADING_EDGE" edc:desc="The data is sampled on a leading SCK edge and changed on a trailing SCK edge" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TRAILING_EDGE" edc:desc="The data is sampled on a trailing SCK edge and changed on a leading SCK edge" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity">
              <edc:SFRFieldSemantic edc:cname="IDLE_LOW" edc:desc="SCK is low when idle" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IDLE_HIGH" edc:desc="SCK is high when idle" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order">
              <edc:SFRFieldSemantic edc:cname="MSB" edc:desc="MSB is transmitted first" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LSB" edc:desc="LSB is transmitted first" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="--------nn----n-nnn---n--n---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC2E247" edc:addr="0x42000804">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits" edc:when="(field &amp; 0x7) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PLOADEN" edc:nzwidth="0x1" edc:desc="Data Preload Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SSDE" edc:nzwidth="0x1" edc:desc="Slave Select Low Detect Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="SS low detector is disabled" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="SS low detector is enabled" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="MSSEN" edc:nzwidth="0x1" edc:desc="Master Slave Select Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Hardware SS control is disabled" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="Hardware SS control is enabled" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AMODE" edc:nzwidth="0x2" edc:desc="Address Mode">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="ADDRMASK is used as a mask to the AADR register" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2ADDRS" edc:desc="The slave responds to the two unique addresses in ADDR and ADDRMASK" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RANGE" edc:desc="The slave responds to the range of addresses between and including ADDR and ADDRMASK. ADDR is the upper limit" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="FIFOCLR" edc:nzwidth="0x2" edc:desc="FIFO Clear">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TXFIFO" edc:desc="Clear TX FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RXFIFO" edc:desc="Clear RX FIFO" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Clear both TX and RF FIFOs" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="nnnnn--n------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF900003F" edc:addr="0x42000808">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="ICSPACE" edc:nzwidth="0x6" edc:desc="Inter-Character Spacing"/>
            <edc:AdjustPoint edc:offset="0x12"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x1" edc:desc="Data 32 Bit"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="RXTRHOLD" edc:nzwidth="0x2" edc:desc="Receive FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated when DATA is present in the FIFO" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when FIFO is half-full" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FULL" edc:desc="Interrupt and DMA triggers are generated when FIFO is full" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXTRHOLD" edc:nzwidth="0x2" edc:desc="Transmit FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is not full" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when half FIFO space is free" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EMPTY" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is empty" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="BAUD" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4200080C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x8" edc:desc="Baud Rate Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42000814">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42000816">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42000818">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Flag"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="----n--------n--" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x804" edc:addr="0x4200081A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="LENERR" edc:nzwidth="0x1" edc:desc="Transaction Length Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="---------------------------r-rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x17" edc:addr="0x4200081C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB Synchronization Busy"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LENGTH" edc:nzwidth="0x1" edc:desc="LENGTH Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="LENGTH" edc:nzwidth="0x10" edc:access="-------nnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1FF" edc:addr="0x42000822">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x1" edc:desc="Data Length Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="--------nnnnnnnn--------nnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF00FF" edc:addr="0x42000824">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0x8" edc:desc="Address Value"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="ADDRMASK" edc:nzwidth="0x8" edc:desc="Address Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42000828">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x42000830">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="FIFOSPACE" edc:nzwidth="0x10" edc:access="---rrrrr---rrrrr" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1F1F" edc:addr="0x42000834">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="TXSPACE" edc:nzwidth="0x5" edc:desc="Tx FIFO Empty Space"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RXSPACE" edc:nzwidth="0x5" edc:desc="Rx FIFO Filled Space"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="FIFOPTR" edc:nzwidth="0x10" edc:access="----nnnn----nnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xF0F" edc:addr="0x42000836">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="CPUWRPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Write Pointer"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CPURDPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Read Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM1/USART_EXT">
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnnnnnnnnn--nnnnn--nnnn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FF3E79F" edc:addr="0x42000800">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="USART_EXT_CLK" edc:desc="USART with external clock" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="USART_INT_CLK" edc:desc="USART with internal clock" edc:when="(field &amp; 0x7) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="IBON" edc:nzwidth="0x1" edc:desc="Immediate Buffer Overflow Notification"/>
            <edc:SFRFieldDef edc:cname="TXINV" edc:nzwidth="0x1" edc:desc="Transmit Data Invert">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="TxD is not inverted" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INV" edc:desc="TxD is inverted" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RXINV" edc:nzwidth="0x1" edc:desc="Receive Data Invert">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="RxD is not inverted" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INV" edc:desc="RxD is inverted" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SAMPR" edc:nzwidth="0x3" edc:desc="Sample">
              <edc:SFRFieldSemantic edc:cname="16X_ARITHMETIC" edc:desc="16x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="16X_FRACTIONAL" edc:desc="16x over-sampling using fractional baudrate generation" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="8X_ARITHMETIC" edc:desc="8x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="8X_FRACTIONAL" edc:desc="8x over-sampling using fractional baudrate generation" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="3X_ARITHMETIC" edc:desc="3x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXPO" edc:nzwidth="0x2" edc:desc="Transmit Data Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="PAD[0] = TxD; PAD[1] = XCK" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="PAD[0] = TxD; PAD[2] = RTS; PAD[3] = CTS" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="PAD[0] = TxD; PAD[1] = XCK; PAD[2] = TE" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXPO" edc:nzwidth="0x2" edc:desc="Receive Data Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="SERCOM PAD[0] is used for data reception" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="SERCOM PAD[1] is used for data reception" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="SERCOM PAD[2] is used for data reception" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="SERCOM PAD[3] is used for data reception" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SAMPA" edc:nzwidth="0x2" edc:desc="Sample Adjustment">
              <edc:SFRFieldSemantic edc:cname="ADJ0" edc:desc="16x Over-sampling = 7-8-9; 8x Over-sampling = 3-4-5" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ADJ1" edc:desc="16x Over-sampling = 9-10-11; 8x Over-sampling = 4-5-6" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="ADJ2" edc:desc="16x Over-sampling = 11-12-13; 8x Over-sampling = 5-6-7" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="ADJ3" edc:desc="16x Over-sampling = 13-14-15; 8x Over-sampling = 6-7-8" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FORM" edc:nzwidth="0x4" edc:desc="Frame Format">
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_NO_PARITY" edc:desc="USART frame" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_WITH_PARITY" edc:desc="USART frame with parity" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_LINBRKGEN" edc:desc="LIN Master Break and Sync generation" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_AUTO_BAUD_NO_PARITY" edc:desc="Auto-baud (LIN Slave) - break detection and auto-baud" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_AUTO_BAUD_WITH_PARITY" edc:desc="Auto-baud - break detection and auto-baud with parity" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_ISO_7816" edc:desc="ISO 7816" edc:when="(field &amp; 0xF) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMODE" edc:nzwidth="0x1" edc:desc="Communication Mode">
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Asynchronous communication." edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Synchronous communication." edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity">
              <edc:SFRFieldSemantic edc:cname="IDLE_LOW" edc:desc="TxD Change:- Rising XCK edge, RxD Sample:- Falling XCK edge" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IDLE_HIGH" edc:desc="TxD Change:- Falling XCK edge, RxD Sample:- Rising XCK edge" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order">
              <edc:SFRFieldSemantic edc:cname="MSB" edc:desc="MSB is transmitted first." edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LSB" edc:desc="LSB is transmitted first." edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="------nnnn----nn--n--nnn-n---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3C32747" edc:addr="0x42000804">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 Bits" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 Bits" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="5_BIT" edc:desc="5 Bits" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="6_BIT" edc:desc="6 Bits" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="7_BIT" edc:desc="7 Bits" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SBMODE" edc:nzwidth="0x1" edc:desc="Stop Bit Mode">
              <edc:SFRFieldSemantic edc:cname="1_BIT" edc:desc="One Stop Bit" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2_BIT" edc:desc="Two Stop Bits" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="COLDEN" edc:nzwidth="0x1" edc:desc="Collision Detection Enable"/>
            <edc:SFRFieldDef edc:cname="SFDE" edc:nzwidth="0x1" edc:desc="Start of Frame Detection Enable"/>
            <edc:SFRFieldDef edc:cname="ENC" edc:nzwidth="0x1" edc:desc="Encoding Format">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Data is not encoded" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IRDA" edc:desc="Data is IrDA encoded" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PMODE" edc:nzwidth="0x1" edc:desc="Parity Mode">
              <edc:SFRFieldSemantic edc:cname="EVEN" edc:desc="Even Parity" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ODD" edc:desc="Odd Parity" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TXEN" edc:nzwidth="0x1" edc:desc="Transmitter Enable"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="FIFOCLR" edc:nzwidth="0x2" edc:desc="FIFO Clear">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TXFIFO" edc:desc="Clear TX FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RXFIFO" edc:desc="Clear RX FIFO" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Clear both TX and RF FIFOs" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LINCMD" edc:nzwidth="0x2" edc:desc="LIN Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Normal USART transmission" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SOFTWARE_CONTROL_TRANSMIT_CMD" edc:desc="Break field is transmitted when DATA is written" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="AUTO_TRANSMIT_CMD" edc:desc="Break, sync and identifier are automatically transmitted when DATA is written with the identifier" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="nnnnn-nn-nnn--nn----nnnn-----nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFB730F07" edc:addr="0x42000808">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="GTIME" edc:nzwidth="0x3" edc:desc="Guard Time"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="BRKLEN" edc:nzwidth="0x2" edc:desc="LIN Master Break Length">
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="Break field transmission is 13 bit times" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="17_BIT" edc:desc="Break field transmission is 17 bit times" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="21_BIT" edc:desc="Break field transmission is 21 bit times" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="26_BIT" edc:desc="Break field transmission is 26 bit times" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="HDRDLY" edc:nzwidth="0x2" edc:desc="LIN Master Header Delay">
              <edc:SFRFieldSemantic edc:cname="DELAY0" edc:desc="Delay between break and sync transmission is 1 bit time; Delay between sync and ID transmission is 1 bit time" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DELAY1" edc:desc="Delay between break and sync transmission is 4 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="DELAY2" edc:desc="Delay between break and sync transmission is 8 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="DELAY3" edc:desc="Delay between break and sync transmission is 14 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="INACK" edc:nzwidth="0x1" edc:desc="Inhibit Not Acknowledge"/>
            <edc:SFRFieldDef edc:cname="DSNACK" edc:nzwidth="0x1" edc:desc="Disable Successive NACK"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MAXITER" edc:nzwidth="0x3" edc:desc="Maximum Iterations"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x2" edc:desc="Data 32 Bit">
              <edc:SFRFieldSemantic edc:cname="0x0" edc:desc="Reads and writes with CHSIZE" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="0x1" edc:desc="Reads with CHSIZE, writes with 32-bit extension" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="0x2" edc:desc="Reads with 32-bit extension, writes with CHSIZE" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="0x3" edc:desc="Reads and writes with 32-bit extension" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="RXTRHOLD" edc:nzwidth="0x2" edc:desc="Receive FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated when DATA is present in the FIFO" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when FIFO is half-full" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FULL" edc:desc="Interrupt and DMA triggers are generated when FIFO is full" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXTRHOLD" edc:nzwidth="0x2" edc:desc="Transmit FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is not full" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when half FIFO space is free" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EMPTY" edc:desc="Interrupt and DMA triggers are generated when the FIFO is empty" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="BAUD" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x4200080C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x10" edc:desc="Baud Rate Value"/>
            <edc:AdjustPoint edc:offset="-3"/>
            <edc:SFRFieldDef edc:cname="FP" edc:nzwidth="0x3" edc:desc="Fractional Part"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="RXPL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4200080E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="RXPL" edc:nzwidth="0x8" edc:desc="Receive Pulse Length"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42000814">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42000816">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42000818">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="--------nnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xFF" edc:addr="0x4200081A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Parity Error"/>
            <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Frame Error"/>
            <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
            <edc:SFRFieldDef edc:cname="CTS" edc:nzwidth="0x1" edc:desc="Clear To Send"/>
            <edc:SFRFieldDef edc:cname="ISF" edc:nzwidth="0x1" edc:desc="Inconsistent Sync Field"/>
            <edc:SFRFieldDef edc:cname="COLL" edc:nzwidth="0x1" edc:desc="Collision Detected"/>
            <edc:SFRFieldDef edc:cname="TXE" edc:nzwidth="0x1" edc:desc="Transmitter Empty"/>
            <edc:SFRFieldDef edc:cname="ITER" edc:nzwidth="0x1" edc:desc="Maximum Number of Repetitions Reached"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="---------------------------rrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:addr="0x4200081C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="RXERRCNT" edc:nzwidth="0x1" edc:desc="RXERRCNT Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="LENGTH" edc:nzwidth="0x1" edc:desc="LENGTH Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="RXERRCNT" edc:nzwidth="0x8" edc:access="rrrrrrrr" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42000820">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="RXERRCNT" edc:nzwidth="0x8" edc:desc="Receive Error Count"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="LENGTH" edc:nzwidth="0x10" edc:access="------nnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x3FF" edc:addr="0x42000822">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x2" edc:desc="Data Length Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Length counter is disabled" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TX" edc:desc="Length counter is enabled for transmit" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RX" edc:desc="Length counter is enabled for receive" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42000828">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x42000830">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="FIFOSPACE" edc:nzwidth="0x10" edc:access="---rrrrr---rrrrr" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1F1F" edc:addr="0x42000834">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="TXSPACE" edc:nzwidth="0x5" edc:desc="Tx FIFO Empty Space"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RXSPACE" edc:nzwidth="0x5" edc:desc="Rx FIFO Filled Space"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="FIFOPTR" edc:nzwidth="0x10" edc:access="----nnnn----nnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xF0F" edc:addr="0x42000836">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="CPUWRPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Write Pointer"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CPURDPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Read Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM1/USART_INT">
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnnnnnnnnn--nnnnn--nnnn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FF3E79F" edc:addr="0x42000800">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="USART_EXT_CLK" edc:desc="USART with external clock" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="USART_INT_CLK" edc:desc="USART with internal clock" edc:when="(field &amp; 0x7) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="IBON" edc:nzwidth="0x1" edc:desc="Immediate Buffer Overflow Notification"/>
            <edc:SFRFieldDef edc:cname="TXINV" edc:nzwidth="0x1" edc:desc="Transmit Data Invert">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="TxD is not inverted" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INV" edc:desc="TxD is inverted" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RXINV" edc:nzwidth="0x1" edc:desc="Receive Data Invert">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="RxD is not inverted" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INV" edc:desc="RxD is inverted" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SAMPR" edc:nzwidth="0x3" edc:desc="Sample">
              <edc:SFRFieldSemantic edc:cname="16X_ARITHMETIC" edc:desc="16x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="16X_FRACTIONAL" edc:desc="16x over-sampling using fractional baudrate generation" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="8X_ARITHMETIC" edc:desc="8x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="8X_FRACTIONAL" edc:desc="8x over-sampling using fractional baudrate generation" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="3X_ARITHMETIC" edc:desc="3x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXPO" edc:nzwidth="0x2" edc:desc="Transmit Data Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="PAD[0] = TxD; PAD[1] = XCK" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="PAD[0] = TxD; PAD[2] = RTS; PAD[3] = CTS" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="PAD[0] = TxD; PAD[1] = XCK; PAD[2] = TE" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXPO" edc:nzwidth="0x2" edc:desc="Receive Data Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="SERCOM PAD[0] is used for data reception" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="SERCOM PAD[1] is used for data reception" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="SERCOM PAD[2] is used for data reception" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="SERCOM PAD[3] is used for data reception" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SAMPA" edc:nzwidth="0x2" edc:desc="Sample Adjustment">
              <edc:SFRFieldSemantic edc:cname="ADJ0" edc:desc="16x Over-sampling = 7-8-9; 8x Over-sampling = 3-4-5" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ADJ1" edc:desc="16x Over-sampling = 9-10-11; 8x Over-sampling = 4-5-6" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="ADJ2" edc:desc="16x Over-sampling = 11-12-13; 8x Over-sampling = 5-6-7" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="ADJ3" edc:desc="16x Over-sampling = 13-14-15; 8x Over-sampling = 6-7-8" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FORM" edc:nzwidth="0x4" edc:desc="Frame Format">
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_NO_PARITY" edc:desc="USART frame" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_WITH_PARITY" edc:desc="USART frame with parity" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_LINBRKGEN" edc:desc="LIN Master Break and Sync generation" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_AUTO_BAUD_NO_PARITY" edc:desc="Auto-baud (LIN Slave) - break detection and auto-baud" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_AUTO_BAUD_WITH_PARITY" edc:desc="Auto-baud - break detection and auto-baud with parity" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_ISO_7816" edc:desc="ISO 7816" edc:when="(field &amp; 0xF) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMODE" edc:nzwidth="0x1" edc:desc="Communication Mode">
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Asynchronous communication." edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Synchronous communication." edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity">
              <edc:SFRFieldSemantic edc:cname="IDLE_LOW" edc:desc="TxD Change:- Rising XCK edge, RxD Sample:- Falling XCK edge" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IDLE_HIGH" edc:desc="TxD Change:- Falling XCK edge, RxD Sample:- Rising XCK edge" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order">
              <edc:SFRFieldSemantic edc:cname="MSB" edc:desc="MSB is transmitted first." edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LSB" edc:desc="LSB is transmitted first." edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="------nnnn----nn--n--nnn-n---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3C32747" edc:addr="0x42000804">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 Bits" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 Bits" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="5_BIT" edc:desc="5 Bits" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="6_BIT" edc:desc="6 Bits" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="7_BIT" edc:desc="7 Bits" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SBMODE" edc:nzwidth="0x1" edc:desc="Stop Bit Mode">
              <edc:SFRFieldSemantic edc:cname="1_BIT" edc:desc="One Stop Bit" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2_BIT" edc:desc="Two Stop Bits" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="COLDEN" edc:nzwidth="0x1" edc:desc="Collision Detection Enable"/>
            <edc:SFRFieldDef edc:cname="SFDE" edc:nzwidth="0x1" edc:desc="Start of Frame Detection Enable"/>
            <edc:SFRFieldDef edc:cname="ENC" edc:nzwidth="0x1" edc:desc="Encoding Format">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Data is not encoded" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IRDA" edc:desc="Data is IrDA encoded" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PMODE" edc:nzwidth="0x1" edc:desc="Parity Mode">
              <edc:SFRFieldSemantic edc:cname="EVEN" edc:desc="Even Parity" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ODD" edc:desc="Odd Parity" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TXEN" edc:nzwidth="0x1" edc:desc="Transmitter Enable"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="FIFOCLR" edc:nzwidth="0x2" edc:desc="FIFO Clear">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TXFIFO" edc:desc="Clear TX FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RXFIFO" edc:desc="Clear RX FIFO" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Clear both TX and RF FIFOs" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LINCMD" edc:nzwidth="0x2" edc:desc="LIN Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Normal USART transmission" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SOFTWARE_CONTROL_TRANSMIT_CMD" edc:desc="Break field is transmitted when DATA is written" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="AUTO_TRANSMIT_CMD" edc:desc="Break, sync and identifier are automatically transmitted when DATA is written with the identifier" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="nnnnn-nn-nnn--nn----nnnn-----nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFB730F07" edc:addr="0x42000808">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="GTIME" edc:nzwidth="0x3" edc:desc="Guard Time"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="BRKLEN" edc:nzwidth="0x2" edc:desc="LIN Master Break Length">
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="Break field transmission is 13 bit times" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="17_BIT" edc:desc="Break field transmission is 17 bit times" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="21_BIT" edc:desc="Break field transmission is 21 bit times" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="26_BIT" edc:desc="Break field transmission is 26 bit times" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="HDRDLY" edc:nzwidth="0x2" edc:desc="LIN Master Header Delay">
              <edc:SFRFieldSemantic edc:cname="DELAY0" edc:desc="Delay between break and sync transmission is 1 bit time; Delay between sync and ID transmission is 1 bit time" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DELAY1" edc:desc="Delay between break and sync transmission is 4 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="DELAY2" edc:desc="Delay between break and sync transmission is 8 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="DELAY3" edc:desc="Delay between break and sync transmission is 14 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="INACK" edc:nzwidth="0x1" edc:desc="Inhibit Not Acknowledge"/>
            <edc:SFRFieldDef edc:cname="DSNACK" edc:nzwidth="0x1" edc:desc="Disable Successive NACK"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MAXITER" edc:nzwidth="0x3" edc:desc="Maximum Iterations"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x2" edc:desc="Data 32 Bit">
              <edc:SFRFieldSemantic edc:cname="0x0" edc:desc="Reads and writes with CHSIZE" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="0x1" edc:desc="Reads with CHSIZE, writes with 32-bit extension" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="0x2" edc:desc="Reads with 32-bit extension, writes with CHSIZE" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="0x3" edc:desc="Reads and writes with 32-bit extension" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="RXTRHOLD" edc:nzwidth="0x2" edc:desc="Receive FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated when DATA is present in the FIFO" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when FIFO is half-full" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FULL" edc:desc="Interrupt and DMA triggers are generated when FIFO is full" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXTRHOLD" edc:nzwidth="0x2" edc:desc="Transmit FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is not full" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when half FIFO space is free" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EMPTY" edc:desc="Interrupt and DMA triggers are generated when the FIFO is empty" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="BAUD" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x4200080C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x10" edc:desc="Baud Rate Value"/>
            <edc:AdjustPoint edc:offset="-3"/>
            <edc:SFRFieldDef edc:cname="FP" edc:nzwidth="0x3" edc:desc="Fractional Part"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="RXPL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4200080E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="RXPL" edc:nzwidth="0x8" edc:desc="Receive Pulse Length"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42000814">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42000816">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42000818">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="--------nnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xFF" edc:addr="0x4200081A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Parity Error"/>
            <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Frame Error"/>
            <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
            <edc:SFRFieldDef edc:cname="CTS" edc:nzwidth="0x1" edc:desc="Clear To Send"/>
            <edc:SFRFieldDef edc:cname="ISF" edc:nzwidth="0x1" edc:desc="Inconsistent Sync Field"/>
            <edc:SFRFieldDef edc:cname="COLL" edc:nzwidth="0x1" edc:desc="Collision Detected"/>
            <edc:SFRFieldDef edc:cname="TXE" edc:nzwidth="0x1" edc:desc="Transmitter Empty"/>
            <edc:SFRFieldDef edc:cname="ITER" edc:nzwidth="0x1" edc:desc="Maximum Number of Repetitions Reached"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="---------------------------rrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:addr="0x4200081C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="RXERRCNT" edc:nzwidth="0x1" edc:desc="RXERRCNT Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="LENGTH" edc:nzwidth="0x1" edc:desc="LENGTH Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="RXERRCNT" edc:nzwidth="0x8" edc:access="rrrrrrrr" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42000820">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="RXERRCNT" edc:nzwidth="0x8" edc:desc="Receive Error Count"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="LENGTH" edc:nzwidth="0x10" edc:access="------nnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x3FF" edc:addr="0x42000822">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x2" edc:desc="Data Length Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Length counter is disabled" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TX" edc:desc="Length counter is enabled for transmit" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RX" edc:desc="Length counter is enabled for receive" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42000828">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x42000830">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="FIFOSPACE" edc:nzwidth="0x10" edc:access="---rrrrr---rrrrr" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1F1F" edc:addr="0x42000834">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="TXSPACE" edc:nzwidth="0x5" edc:desc="Tx FIFO Empty Space"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RXSPACE" edc:nzwidth="0x5" edc:desc="Rx FIFO Filled Space"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="FIFOPTR" edc:nzwidth="0x10" edc:access="----nnnn----nnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xF0F" edc:addr="0x42000836">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="CPUWRPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Write Pointer"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CPURDPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Read Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM2/I2CM">
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnn-nnnnnn---n--------n--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7BF1009F" edc:addr="0x42000C00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="I2C_MASTER" edc:desc="I2C master operation" edc:when="(field &amp; 0x7) == 0x5"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="PINOUT" edc:nzwidth="0x1" edc:desc="Pin Usage"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SDAHOLD" edc:nzwidth="0x2" edc:desc="SDA Hold Time">
              <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disabled" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="75NS" edc:desc="50-100ns hold time" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="450NS" edc:desc="300-600ns hold time" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="600NS" edc:desc="400-800ns hold time" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MEXTTOEN" edc:nzwidth="0x1" edc:desc="Master SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="SEXTTOEN" edc:nzwidth="0x1" edc:desc="Slave SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="SPEED" edc:nzwidth="0x2" edc:desc="Transfer Speed">
              <edc:SFRFieldSemantic edc:cname="SM" edc:desc="Standard-Mode (SM) and Fast-Mode (FM)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FMP" edc:desc="Fast-Mode Plus (FM+)" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="HS" edc:desc="High-Speed Mode" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SCLSM" edc:nzwidth="0x1" edc:desc="SCL Clock Stretch Mode"/>
            <edc:SFRFieldDef edc:cname="INACTOUT" edc:nzwidth="0x2" edc:desc="Inactive Time-Out">
              <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disable" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="55US" edc:desc="5-6 SCL cycle time-out" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="105US" edc:desc="10-11 SCL cycle time-out" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="205US" edc:desc="20-21 SCL cycle time-out" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LOWTOUTEN" edc:nzwidth="0x1" edc:desc="SCL Low Timeout Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="--------nn---nnn------nn--------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC70300" edc:addr="0x42000C04">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="SMEN" edc:nzwidth="0x1" edc:desc="Smart Mode Enable"/>
            <edc:SFRFieldDef edc:cname="QCEN" edc:nzwidth="0x1" edc:desc="Quick Command Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Command"/>
            <edc:SFRFieldDef edc:cname="ACKACT" edc:nzwidth="0x1" edc:desc="Acknowledge Action"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="FIFOCLR" edc:nzwidth="0x2" edc:desc="FIFO Clear">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TXFIFO" edc:desc="Clear TX FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RXFIFO" edc:desc="Clear RX FIFO" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Clear both TX and RF FIFOs" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="nnnnn--n------------------------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF9000000" edc:addr="0x42000C08">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:AdjustPoint edc:offset="0x18"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x1" edc:desc="Data 32 Bit"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="RXTRHOLD" edc:nzwidth="0x2" edc:desc="Receive FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated when DATA is present in the FIFO" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when FIFO is half-full" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FULL" edc:desc="Interrupt and DMA triggers are generated when FIFO is full" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXTRHOLD" edc:nzwidth="0x2" edc:desc="Transmit FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is not full" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when half FIFO space is free" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EMPTY" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is not full" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="BAUD" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42000C0C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x8" edc:desc="Baud Rate Value"/>
            <edc:SFRFieldDef edc:cname="BAUDLOW" edc:nzwidth="0x8" edc:desc="Baud Rate Value Low"/>
            <edc:SFRFieldDef edc:cname="HSBAUD" edc:nzwidth="0x8" edc:desc="High Speed Baud Rate Value"/>
            <edc:SFRFieldDef edc:cname="HSBAUDLOW" edc:nzwidth="0x8" edc:desc="High Speed Baud Rate Value Low"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n--nn-nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x9B" edc:addr="0x42000C14">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="MB" edc:nzwidth="0x1" edc:desc="Master On Bus Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SB" edc:nzwidth="0x1" edc:desc="Slave On Bus Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFE" edc:nzwidth="0x1" edc:desc="Tx FIFO Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFF" edc:nzwidth="0x1" edc:desc="Rx FIFO Full Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n--nn-nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x9B" edc:addr="0x42000C16">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="MB" edc:nzwidth="0x1" edc:desc="Master On Bus Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SB" edc:nzwidth="0x1" edc:desc="Slave On Bus Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFE" edc:nzwidth="0x1" edc:desc="Tx FIFO Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFF" edc:nzwidth="0x1" edc:desc="Rx FIFO Full Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n--nn-nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x9B" edc:addr="0x42000C18">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="MB" edc:nzwidth="0x1" edc:desc="Master On Bus Interrupt"/>
            <edc:SFRFieldDef edc:cname="SB" edc:nzwidth="0x1" edc:desc="Slave On Bus Interrupt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFE" edc:nzwidth="0x1" edc:desc="Tx FIFO Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXFF" edc:nzwidth="0x1" edc:desc="Rx FIFO Full Interrupt"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="-----nnnnnnn-nnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x7F7" edc:addr="0x42000C1A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="BUSERR" edc:nzwidth="0x1" edc:desc="Bus Error"/>
            <edc:SFRFieldDef edc:cname="ARBLOST" edc:nzwidth="0x1" edc:desc="Arbitration Lost"/>
            <edc:SFRFieldDef edc:cname="RXNACK" edc:nzwidth="0x1" edc:desc="Received Not Acknowledge"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BUSSTATE" edc:nzwidth="0x2" edc:desc="Bus State">
              <edc:SFRFieldSemantic edc:cname="UNKNOWN" edc:desc="Wait for stop or idle" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IDLE" edc:desc="Wait for transaction initialization" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="OWNER" edc:desc="I2C master is the current owner of the bus" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="BUSY" edc:desc="Some other I2C master owns the bus" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LOWTOUT" edc:nzwidth="0x1" edc:desc="SCL Low Timeout"/>
            <edc:SFRFieldDef edc:cname="CLKHOLD" edc:nzwidth="0x1" edc:desc="Clock Hold"/>
            <edc:SFRFieldDef edc:cname="MEXTTOUT" edc:nzwidth="0x1" edc:desc="Master SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="SEXTTOUT" edc:nzwidth="0x1" edc:desc="Slave SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="LENERR" edc:nzwidth="0x1" edc:desc="Length Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="-----------------------------rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7" edc:addr="0x42000C1C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="SYSOP" edc:nzwidth="0x1" edc:desc="System Operation Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnn--nnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFE7FF" edc:addr="0x42000C24">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0xB" edc:desc="Address Value"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x1" edc:desc="Length Enable"/>
            <edc:SFRFieldDef edc:cname="HS" edc:nzwidth="0x1" edc:desc="High Speed Mode"/>
            <edc:SFRFieldDef edc:cname="TENBITEN" edc:nzwidth="0x1" edc:desc="Ten Bit Addressing Enable"/>
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Length"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42000C28">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x42000C30">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="FIFOSPACE" edc:nzwidth="0x10" edc:access="---rrrrr---rrrrr" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1F1F" edc:addr="0x42000C34">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="TXSPACE" edc:nzwidth="0x5" edc:desc="Tx FIFO Empty Space"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RXSPACE" edc:nzwidth="0x5" edc:desc="Rx FIFO Filled Space"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="FIFOPTR" edc:nzwidth="0x10" edc:access="----nnnn----nnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xF0F" edc:addr="0x42000C36">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="CPUWRPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Write Pointer"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CPURDPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Read Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM2/I2CS">
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-n--n-nnn-nn---n--------n--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x4BB1009F" edc:addr="0x42000C00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="I2C_SLAVE" edc:desc="I2C slave operation" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="PINOUT" edc:nzwidth="0x1" edc:desc="Pin Usage"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SDAHOLD" edc:nzwidth="0x2" edc:desc="SDA Hold Time">
              <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disabled" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="75NS" edc:desc="50-100ns hold time" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="450NS" edc:desc="300-600ns hold time" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="600NS" edc:desc="400-800ns hold time" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SEXTTOEN" edc:nzwidth="0x1" edc:desc="Slave SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="SPEED" edc:nzwidth="0x2" edc:desc="Transfer Speed">
              <edc:SFRFieldSemantic edc:cname="SM" edc:desc="Standard-Mode (SM) and Fast-Mode (FM)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FMP" edc:desc="Fast-Mode Plus (FM+)" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="HS" edc:desc="High-Speed Mode" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SCLSM" edc:nzwidth="0x1" edc:desc="SCL Clock Stretch Mode"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="LOWTOUTEN" edc:nzwidth="0x1" edc:desc="SCL Low Timeout Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="--------nn---nnnnn---nnn--------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC7C700" edc:addr="0x42000C04">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="SMEN" edc:nzwidth="0x1" edc:desc="Smart Mode Enable"/>
            <edc:SFRFieldDef edc:cname="GCMD" edc:nzwidth="0x1" edc:desc="PMBus Group Command"/>
            <edc:SFRFieldDef edc:cname="AACKEN" edc:nzwidth="0x1" edc:desc="Automatic Address Acknowledge"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="AMODE" edc:nzwidth="0x2" edc:desc="Address Mode">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="The slave responds to the address written in ADDR.ADDR masked by the value in ADDR.ADDRMASK" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2ADDRS" edc:desc="The slave responds to the two unique addresses in ADDR and ADDRMASK" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RANGE" edc:desc="The slave responds to the range of addresses between and including ADDR and ADDRMASK. ADDR is the upper limit" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Command"/>
            <edc:SFRFieldDef edc:cname="ACKACT" edc:nzwidth="0x1" edc:desc="Acknowledge Action"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="FIFOCLR" edc:nzwidth="0x2" edc:desc="FIFO Clear">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TXFIFO" edc:desc="Clear TX FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RXFIFO" edc:desc="Clear RX FIFO" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Clear both TX and RF FIFOs" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="nnnnn--n--------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF900000F" edc:addr="0x42000C08">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="SDASETUP" edc:nzwidth="0x4" edc:desc="SDA Setup Time"/>
            <edc:AdjustPoint edc:offset="0x14"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x1" edc:desc="Data 32 Bit"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="RXTRHOLD" edc:nzwidth="0x2" edc:desc="Receive FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated when DATA is present in the FIFO" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when FIFO is half-full" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FULL" edc:desc="Interrupt and DMA triggers are generated when FIFO is full" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXTRHOLD" edc:nzwidth="0x2" edc:desc="Transmit FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is not full" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when half FIFO space is free" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EMPTY" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is not full" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n--nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x9F" edc:addr="0x42000C14">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="PREC" edc:nzwidth="0x1" edc:desc="Stop Received Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="AMATCH" edc:nzwidth="0x1" edc:desc="Address Match Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="DRDY" edc:nzwidth="0x1" edc:desc="Data Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFE" edc:nzwidth="0x1" edc:desc="Tx FIFO Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFF" edc:nzwidth="0x1" edc:desc="Rx FIFO Full Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n--nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x9F" edc:addr="0x42000C16">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="PREC" edc:nzwidth="0x1" edc:desc="Stop Received Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="AMATCH" edc:nzwidth="0x1" edc:desc="Address Match Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DRDY" edc:nzwidth="0x1" edc:desc="Data Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFE" edc:nzwidth="0x1" edc:desc="Tx FIFO Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFF" edc:nzwidth="0x1" edc:desc="Rx FIFO Full Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n--nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x9F" edc:addr="0x42000C18">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="PREC" edc:nzwidth="0x1" edc:desc="Stop Received Interrupt"/>
            <edc:SFRFieldDef edc:cname="AMATCH" edc:nzwidth="0x1" edc:desc="Address Match Interrupt"/>
            <edc:SFRFieldDef edc:cname="DRDY" edc:nzwidth="0x1" edc:desc="Data Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXFE" edc:nzwidth="0x1" edc:desc="Tx FIFO Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXFF" edc:nzwidth="0x1" edc:desc="Rx FIFO Full Interrupt"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="----nnn-nn-nnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xEDF" edc:addr="0x42000C1A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="BUSERR" edc:nzwidth="0x1" edc:desc="Bus Error"/>
            <edc:SFRFieldDef edc:cname="COLL" edc:nzwidth="0x1" edc:desc="Transmit Collision"/>
            <edc:SFRFieldDef edc:cname="RXNACK" edc:nzwidth="0x1" edc:desc="Received Not Acknowledge"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Read/Write Direction"/>
            <edc:SFRFieldDef edc:cname="SR" edc:nzwidth="0x1" edc:desc="Repeated Start"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LOWTOUT" edc:nzwidth="0x1" edc:desc="SCL Low Timeout"/>
            <edc:SFRFieldDef edc:cname="CLKHOLD" edc:nzwidth="0x1" edc:desc="Clock Hold"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SEXTTOUT" edc:nzwidth="0x1" edc:desc="Slave SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="HS" edc:nzwidth="0x1" edc:desc="High Speed"/>
            <edc:SFRFieldDef edc:cname="LENERR" edc:nzwidth="0x1" edc:desc="Transaction Length Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="---------------------------r-rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x17" edc:addr="0x42000C1C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="SYSOP" edc:nzwidth="0x1" edc:desc="System Operation Synchronization Busy"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LENGTH" edc:nzwidth="0x1" edc:desc="Length Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="LENGTH" edc:nzwidth="0x10" edc:access="-------nnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1FF" edc:addr="0x42000C22">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x1" edc:desc="Data Length Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="-----nnnnnnnnnn-n----nnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FE87FF" edc:addr="0x42000C24">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="GENCEN" edc:nzwidth="0x1" edc:desc="General Call Address Enable"/>
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0xA" edc:desc="Address Value"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TENBITEN" edc:nzwidth="0x1" edc:desc="Ten Bit Addressing Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ADDRMASK" edc:nzwidth="0xA" edc:desc="Address Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42000C28">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="FIFOSPACE" edc:nzwidth="0x10" edc:access="---rrrrr---rrrrr" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1F1F" edc:addr="0x42000C34">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="TXSPACE" edc:nzwidth="0x5" edc:desc="Tx FIFO Empty Space"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RXSPACE" edc:nzwidth="0x5" edc:desc="Rx FIFO Filled Space"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="FIFOPTR" edc:nzwidth="0x10" edc:access="----nnnn----nnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xF0F" edc:addr="0x42000C36">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="CPUWRPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Write Pointer"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CPURDPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Read Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM2/SPIM">
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnnnnn--nn--nn-------nn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7F33019F" edc:addr="0x42000C00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="SPI_MASTER" edc:desc="SPI in master operation" edc:when="(field &amp; 0x7) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="IBON" edc:nzwidth="0x1" edc:desc="Immediate Buffer Overflow Notification">
              <edc:SFRFieldSemantic edc:cname="0x0" edc:desc="STATUS.BUFOVF is set when it occurs in the data stream" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="0x1" edc:desc="STATUS.BUFOVF is set immediately upon buffer overflow" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DOPO" edc:nzwidth="0x2" edc:desc="Data Out Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="DO on PAD[0], SCK on PAD[1] and SS on PAD[2]" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="DO on PAD[3], SCK on PAD[1] and SS on PAD[2]" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DIPO" edc:nzwidth="0x2" edc:desc="Data In Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="SERCOM PAD[0] is used as data input" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="SERCOM PAD[1] is used as data input" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="SERCOM PAD[2] is used as data input" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="SERCOM PAD[3] is used as data input" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FORM" edc:nzwidth="0x4" edc:desc="Frame Format">
              <edc:SFRFieldSemantic edc:cname="SPI_FRAME" edc:desc="SPI Frame" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SPI_FRAME_WITH_ADDR" edc:desc="SPI Frame with Addr" edc:when="(field &amp; 0xF) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPHA" edc:nzwidth="0x1" edc:desc="Clock Phase">
              <edc:SFRFieldSemantic edc:cname="LEADING_EDGE" edc:desc="The data is sampled on a leading SCK edge and changed on a trailing SCK edge" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TRAILING_EDGE" edc:desc="The data is sampled on a trailing SCK edge and changed on a leading SCK edge" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity">
              <edc:SFRFieldSemantic edc:cname="IDLE_LOW" edc:desc="SCK is low when idle" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IDLE_HIGH" edc:desc="SCK is high when idle" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order">
              <edc:SFRFieldSemantic edc:cname="MSB" edc:desc="MSB is transmitted first" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LSB" edc:desc="LSB is transmitted first" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="--------nn----n-nnn---n--n---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC2E247" edc:addr="0x42000C04">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits" edc:when="(field &amp; 0x7) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PLOADEN" edc:nzwidth="0x1" edc:desc="Data Preload Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SSDE" edc:nzwidth="0x1" edc:desc="Slave Select Low Detect Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="SS low detector is disabled" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="SS low detector is enabled" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="MSSEN" edc:nzwidth="0x1" edc:desc="Master Slave Select Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Hardware SS control is disabled" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="Hardware SS control is enabled" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AMODE" edc:nzwidth="0x2" edc:desc="Address Mode">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="ADDRMASK is used as a mask to the AADR register" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2ADDRS" edc:desc="The slave responds to the two unique addresses in ADDR and ADDRMASK" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RANGE" edc:desc="The slave responds to the range of addresses between and including ADDR and ADDRMASK. ADDR is the upper limit" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="FIFOCLR" edc:nzwidth="0x2" edc:desc="FIFO Clear">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TXFIFO" edc:desc="Clear TX FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RXFIFO" edc:desc="Clear RX FIFO" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Clear both TX and RF FIFOs" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="nnnnn--n------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF900003F" edc:addr="0x42000C08">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="ICSPACE" edc:nzwidth="0x6" edc:desc="Inter-Character Spacing"/>
            <edc:AdjustPoint edc:offset="0x12"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x1" edc:desc="Data 32 Bit"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="RXTRHOLD" edc:nzwidth="0x2" edc:desc="Receive FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated when DATA is present in the FIFO" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when FIFO is half-full" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FULL" edc:desc="Interrupt and DMA triggers are generated when FIFO is full" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXTRHOLD" edc:nzwidth="0x2" edc:desc="Transmit FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is not full" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when half FIFO space is free" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EMPTY" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is empty" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="BAUD" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42000C0C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x8" edc:desc="Baud Rate Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42000C14">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42000C16">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42000C18">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Flag"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="----n--------n--" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x804" edc:addr="0x42000C1A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="LENERR" edc:nzwidth="0x1" edc:desc="Transaction Length Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="---------------------------r-rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x17" edc:addr="0x42000C1C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB Synchronization Busy"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LENGTH" edc:nzwidth="0x1" edc:desc="LENGTH Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="LENGTH" edc:nzwidth="0x10" edc:access="-------nnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1FF" edc:addr="0x42000C22">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x1" edc:desc="Data Length Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="--------nnnnnnnn--------nnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF00FF" edc:addr="0x42000C24">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0x8" edc:desc="Address Value"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="ADDRMASK" edc:nzwidth="0x8" edc:desc="Address Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42000C28">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x42000C30">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="FIFOSPACE" edc:nzwidth="0x10" edc:access="---rrrrr---rrrrr" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1F1F" edc:addr="0x42000C34">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="TXSPACE" edc:nzwidth="0x5" edc:desc="Tx FIFO Empty Space"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RXSPACE" edc:nzwidth="0x5" edc:desc="Rx FIFO Filled Space"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="FIFOPTR" edc:nzwidth="0x10" edc:access="----nnnn----nnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xF0F" edc:addr="0x42000C36">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="CPUWRPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Write Pointer"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CPURDPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Read Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM2/SPIS">
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnnnnn--nn--nn-------nn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7F33019F" edc:addr="0x42000C00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="SPI_SLAVE" edc:desc="SPI in slave operation" edc:when="(field &amp; 0x7) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="IBON" edc:nzwidth="0x1" edc:desc="Immediate Buffer Overflow Notification">
              <edc:SFRFieldSemantic edc:cname="0x0" edc:desc="STATUS.BUFOVF is set when it occurs in the data stream" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="0x1" edc:desc="STATUS.BUFOVF is set immediately upon buffer overflow" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DOPO" edc:nzwidth="0x2" edc:desc="Data Out Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="DO on PAD[0], SCK on PAD[1] and SS on PAD[2]" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="DO on PAD[3], SCK on PAD[1] and SS on PAD[2]" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DIPO" edc:nzwidth="0x2" edc:desc="Data In Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="SERCOM PAD[0] is used as data input" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="SERCOM PAD[1] is used as data input" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="SERCOM PAD[2] is used as data input" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="SERCOM PAD[3] is used as data input" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FORM" edc:nzwidth="0x4" edc:desc="Frame Format">
              <edc:SFRFieldSemantic edc:cname="SPI_FRAME" edc:desc="SPI Frame" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SPI_FRAME_WITH_ADDR" edc:desc="SPI Frame with Addr" edc:when="(field &amp; 0xF) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPHA" edc:nzwidth="0x1" edc:desc="Clock Phase">
              <edc:SFRFieldSemantic edc:cname="LEADING_EDGE" edc:desc="The data is sampled on a leading SCK edge and changed on a trailing SCK edge" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TRAILING_EDGE" edc:desc="The data is sampled on a trailing SCK edge and changed on a leading SCK edge" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity">
              <edc:SFRFieldSemantic edc:cname="IDLE_LOW" edc:desc="SCK is low when idle" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IDLE_HIGH" edc:desc="SCK is high when idle" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order">
              <edc:SFRFieldSemantic edc:cname="MSB" edc:desc="MSB is transmitted first" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LSB" edc:desc="LSB is transmitted first" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="--------nn----n-nnn---n--n---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC2E247" edc:addr="0x42000C04">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits" edc:when="(field &amp; 0x7) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PLOADEN" edc:nzwidth="0x1" edc:desc="Data Preload Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SSDE" edc:nzwidth="0x1" edc:desc="Slave Select Low Detect Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="SS low detector is disabled" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="SS low detector is enabled" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="MSSEN" edc:nzwidth="0x1" edc:desc="Master Slave Select Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Hardware SS control is disabled" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="Hardware SS control is enabled" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AMODE" edc:nzwidth="0x2" edc:desc="Address Mode">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="ADDRMASK is used as a mask to the AADR register" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2ADDRS" edc:desc="The slave responds to the two unique addresses in ADDR and ADDRMASK" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RANGE" edc:desc="The slave responds to the range of addresses between and including ADDR and ADDRMASK. ADDR is the upper limit" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="FIFOCLR" edc:nzwidth="0x2" edc:desc="FIFO Clear">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TXFIFO" edc:desc="Clear TX FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RXFIFO" edc:desc="Clear RX FIFO" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Clear both TX and RF FIFOs" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="nnnnn--n------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF900003F" edc:addr="0x42000C08">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="ICSPACE" edc:nzwidth="0x6" edc:desc="Inter-Character Spacing"/>
            <edc:AdjustPoint edc:offset="0x12"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x1" edc:desc="Data 32 Bit"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="RXTRHOLD" edc:nzwidth="0x2" edc:desc="Receive FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated when DATA is present in the FIFO" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when FIFO is half-full" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FULL" edc:desc="Interrupt and DMA triggers are generated when FIFO is full" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXTRHOLD" edc:nzwidth="0x2" edc:desc="Transmit FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is not full" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when half FIFO space is free" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EMPTY" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is empty" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="BAUD" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42000C0C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x8" edc:desc="Baud Rate Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42000C14">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42000C16">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42000C18">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Flag"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="----n--------n--" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x804" edc:addr="0x42000C1A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="LENERR" edc:nzwidth="0x1" edc:desc="Transaction Length Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="---------------------------r-rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x17" edc:addr="0x42000C1C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB Synchronization Busy"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LENGTH" edc:nzwidth="0x1" edc:desc="LENGTH Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="LENGTH" edc:nzwidth="0x10" edc:access="-------nnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1FF" edc:addr="0x42000C22">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x1" edc:desc="Data Length Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="--------nnnnnnnn--------nnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF00FF" edc:addr="0x42000C24">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0x8" edc:desc="Address Value"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="ADDRMASK" edc:nzwidth="0x8" edc:desc="Address Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42000C28">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x42000C30">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="FIFOSPACE" edc:nzwidth="0x10" edc:access="---rrrrr---rrrrr" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1F1F" edc:addr="0x42000C34">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="TXSPACE" edc:nzwidth="0x5" edc:desc="Tx FIFO Empty Space"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RXSPACE" edc:nzwidth="0x5" edc:desc="Rx FIFO Filled Space"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="FIFOPTR" edc:nzwidth="0x10" edc:access="----nnnn----nnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xF0F" edc:addr="0x42000C36">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="CPUWRPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Write Pointer"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CPURDPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Read Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM2/USART_EXT">
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnnnnnnnnn--nnnnn--nnnn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FF3E79F" edc:addr="0x42000C00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="USART_EXT_CLK" edc:desc="USART with external clock" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="USART_INT_CLK" edc:desc="USART with internal clock" edc:when="(field &amp; 0x7) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="IBON" edc:nzwidth="0x1" edc:desc="Immediate Buffer Overflow Notification"/>
            <edc:SFRFieldDef edc:cname="TXINV" edc:nzwidth="0x1" edc:desc="Transmit Data Invert">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="TxD is not inverted" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INV" edc:desc="TxD is inverted" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RXINV" edc:nzwidth="0x1" edc:desc="Receive Data Invert">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="RxD is not inverted" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INV" edc:desc="RxD is inverted" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SAMPR" edc:nzwidth="0x3" edc:desc="Sample">
              <edc:SFRFieldSemantic edc:cname="16X_ARITHMETIC" edc:desc="16x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="16X_FRACTIONAL" edc:desc="16x over-sampling using fractional baudrate generation" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="8X_ARITHMETIC" edc:desc="8x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="8X_FRACTIONAL" edc:desc="8x over-sampling using fractional baudrate generation" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="3X_ARITHMETIC" edc:desc="3x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXPO" edc:nzwidth="0x2" edc:desc="Transmit Data Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="PAD[0] = TxD; PAD[1] = XCK" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="PAD[0] = TxD; PAD[2] = RTS; PAD[3] = CTS" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="PAD[0] = TxD; PAD[1] = XCK; PAD[2] = TE" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXPO" edc:nzwidth="0x2" edc:desc="Receive Data Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="SERCOM PAD[0] is used for data reception" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="SERCOM PAD[1] is used for data reception" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="SERCOM PAD[2] is used for data reception" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="SERCOM PAD[3] is used for data reception" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SAMPA" edc:nzwidth="0x2" edc:desc="Sample Adjustment">
              <edc:SFRFieldSemantic edc:cname="ADJ0" edc:desc="16x Over-sampling = 7-8-9; 8x Over-sampling = 3-4-5" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ADJ1" edc:desc="16x Over-sampling = 9-10-11; 8x Over-sampling = 4-5-6" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="ADJ2" edc:desc="16x Over-sampling = 11-12-13; 8x Over-sampling = 5-6-7" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="ADJ3" edc:desc="16x Over-sampling = 13-14-15; 8x Over-sampling = 6-7-8" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FORM" edc:nzwidth="0x4" edc:desc="Frame Format">
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_NO_PARITY" edc:desc="USART frame" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_WITH_PARITY" edc:desc="USART frame with parity" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_LINBRKGEN" edc:desc="LIN Master Break and Sync generation" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_AUTO_BAUD_NO_PARITY" edc:desc="Auto-baud (LIN Slave) - break detection and auto-baud" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_AUTO_BAUD_WITH_PARITY" edc:desc="Auto-baud - break detection and auto-baud with parity" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_ISO_7816" edc:desc="ISO 7816" edc:when="(field &amp; 0xF) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMODE" edc:nzwidth="0x1" edc:desc="Communication Mode">
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Asynchronous communication." edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Synchronous communication." edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity">
              <edc:SFRFieldSemantic edc:cname="IDLE_LOW" edc:desc="TxD Change:- Rising XCK edge, RxD Sample:- Falling XCK edge" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IDLE_HIGH" edc:desc="TxD Change:- Falling XCK edge, RxD Sample:- Rising XCK edge" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order">
              <edc:SFRFieldSemantic edc:cname="MSB" edc:desc="MSB is transmitted first." edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LSB" edc:desc="LSB is transmitted first." edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="------nnnn----nn--n--nnn-n---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3C32747" edc:addr="0x42000C04">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 Bits" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 Bits" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="5_BIT" edc:desc="5 Bits" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="6_BIT" edc:desc="6 Bits" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="7_BIT" edc:desc="7 Bits" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SBMODE" edc:nzwidth="0x1" edc:desc="Stop Bit Mode">
              <edc:SFRFieldSemantic edc:cname="1_BIT" edc:desc="One Stop Bit" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2_BIT" edc:desc="Two Stop Bits" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="COLDEN" edc:nzwidth="0x1" edc:desc="Collision Detection Enable"/>
            <edc:SFRFieldDef edc:cname="SFDE" edc:nzwidth="0x1" edc:desc="Start of Frame Detection Enable"/>
            <edc:SFRFieldDef edc:cname="ENC" edc:nzwidth="0x1" edc:desc="Encoding Format">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Data is not encoded" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IRDA" edc:desc="Data is IrDA encoded" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PMODE" edc:nzwidth="0x1" edc:desc="Parity Mode">
              <edc:SFRFieldSemantic edc:cname="EVEN" edc:desc="Even Parity" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ODD" edc:desc="Odd Parity" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TXEN" edc:nzwidth="0x1" edc:desc="Transmitter Enable"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="FIFOCLR" edc:nzwidth="0x2" edc:desc="FIFO Clear">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TXFIFO" edc:desc="Clear TX FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RXFIFO" edc:desc="Clear RX FIFO" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Clear both TX and RF FIFOs" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LINCMD" edc:nzwidth="0x2" edc:desc="LIN Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Normal USART transmission" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SOFTWARE_CONTROL_TRANSMIT_CMD" edc:desc="Break field is transmitted when DATA is written" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="AUTO_TRANSMIT_CMD" edc:desc="Break, sync and identifier are automatically transmitted when DATA is written with the identifier" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="nnnnn-nn-nnn--nn----nnnn-----nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFB730F07" edc:addr="0x42000C08">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="GTIME" edc:nzwidth="0x3" edc:desc="Guard Time"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="BRKLEN" edc:nzwidth="0x2" edc:desc="LIN Master Break Length">
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="Break field transmission is 13 bit times" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="17_BIT" edc:desc="Break field transmission is 17 bit times" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="21_BIT" edc:desc="Break field transmission is 21 bit times" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="26_BIT" edc:desc="Break field transmission is 26 bit times" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="HDRDLY" edc:nzwidth="0x2" edc:desc="LIN Master Header Delay">
              <edc:SFRFieldSemantic edc:cname="DELAY0" edc:desc="Delay between break and sync transmission is 1 bit time; Delay between sync and ID transmission is 1 bit time" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DELAY1" edc:desc="Delay between break and sync transmission is 4 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="DELAY2" edc:desc="Delay between break and sync transmission is 8 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="DELAY3" edc:desc="Delay between break and sync transmission is 14 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="INACK" edc:nzwidth="0x1" edc:desc="Inhibit Not Acknowledge"/>
            <edc:SFRFieldDef edc:cname="DSNACK" edc:nzwidth="0x1" edc:desc="Disable Successive NACK"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MAXITER" edc:nzwidth="0x3" edc:desc="Maximum Iterations"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x2" edc:desc="Data 32 Bit">
              <edc:SFRFieldSemantic edc:cname="0x0" edc:desc="Reads and writes with CHSIZE" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="0x1" edc:desc="Reads with CHSIZE, writes with 32-bit extension" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="0x2" edc:desc="Reads with 32-bit extension, writes with CHSIZE" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="0x3" edc:desc="Reads and writes with 32-bit extension" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="RXTRHOLD" edc:nzwidth="0x2" edc:desc="Receive FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated when DATA is present in the FIFO" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when FIFO is half-full" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FULL" edc:desc="Interrupt and DMA triggers are generated when FIFO is full" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXTRHOLD" edc:nzwidth="0x2" edc:desc="Transmit FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is not full" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when half FIFO space is free" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EMPTY" edc:desc="Interrupt and DMA triggers are generated when the FIFO is empty" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="BAUD" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x42000C0C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x10" edc:desc="Baud Rate Value"/>
            <edc:AdjustPoint edc:offset="-3"/>
            <edc:SFRFieldDef edc:cname="FP" edc:nzwidth="0x3" edc:desc="Fractional Part"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="RXPL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42000C0E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="RXPL" edc:nzwidth="0x8" edc:desc="Receive Pulse Length"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42000C14">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42000C16">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42000C18">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="--------nnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xFF" edc:addr="0x42000C1A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Parity Error"/>
            <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Frame Error"/>
            <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
            <edc:SFRFieldDef edc:cname="CTS" edc:nzwidth="0x1" edc:desc="Clear To Send"/>
            <edc:SFRFieldDef edc:cname="ISF" edc:nzwidth="0x1" edc:desc="Inconsistent Sync Field"/>
            <edc:SFRFieldDef edc:cname="COLL" edc:nzwidth="0x1" edc:desc="Collision Detected"/>
            <edc:SFRFieldDef edc:cname="TXE" edc:nzwidth="0x1" edc:desc="Transmitter Empty"/>
            <edc:SFRFieldDef edc:cname="ITER" edc:nzwidth="0x1" edc:desc="Maximum Number of Repetitions Reached"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="---------------------------rrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:addr="0x42000C1C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="RXERRCNT" edc:nzwidth="0x1" edc:desc="RXERRCNT Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="LENGTH" edc:nzwidth="0x1" edc:desc="LENGTH Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="RXERRCNT" edc:nzwidth="0x8" edc:access="rrrrrrrr" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42000C20">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="RXERRCNT" edc:nzwidth="0x8" edc:desc="Receive Error Count"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="LENGTH" edc:nzwidth="0x10" edc:access="------nnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x3FF" edc:addr="0x42000C22">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x2" edc:desc="Data Length Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Length counter is disabled" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TX" edc:desc="Length counter is enabled for transmit" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RX" edc:desc="Length counter is enabled for receive" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42000C28">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x42000C30">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="FIFOSPACE" edc:nzwidth="0x10" edc:access="---rrrrr---rrrrr" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1F1F" edc:addr="0x42000C34">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="TXSPACE" edc:nzwidth="0x5" edc:desc="Tx FIFO Empty Space"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RXSPACE" edc:nzwidth="0x5" edc:desc="Rx FIFO Filled Space"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="FIFOPTR" edc:nzwidth="0x10" edc:access="----nnnn----nnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xF0F" edc:addr="0x42000C36">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="CPUWRPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Write Pointer"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CPURDPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Read Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM2/USART_INT">
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnnnnnnnnn--nnnnn--nnnn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FF3E79F" edc:addr="0x42000C00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="USART_EXT_CLK" edc:desc="USART with external clock" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="USART_INT_CLK" edc:desc="USART with internal clock" edc:when="(field &amp; 0x7) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="IBON" edc:nzwidth="0x1" edc:desc="Immediate Buffer Overflow Notification"/>
            <edc:SFRFieldDef edc:cname="TXINV" edc:nzwidth="0x1" edc:desc="Transmit Data Invert">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="TxD is not inverted" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INV" edc:desc="TxD is inverted" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RXINV" edc:nzwidth="0x1" edc:desc="Receive Data Invert">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="RxD is not inverted" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INV" edc:desc="RxD is inverted" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SAMPR" edc:nzwidth="0x3" edc:desc="Sample">
              <edc:SFRFieldSemantic edc:cname="16X_ARITHMETIC" edc:desc="16x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="16X_FRACTIONAL" edc:desc="16x over-sampling using fractional baudrate generation" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="8X_ARITHMETIC" edc:desc="8x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="8X_FRACTIONAL" edc:desc="8x over-sampling using fractional baudrate generation" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="3X_ARITHMETIC" edc:desc="3x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXPO" edc:nzwidth="0x2" edc:desc="Transmit Data Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="PAD[0] = TxD; PAD[1] = XCK" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="PAD[0] = TxD; PAD[2] = RTS; PAD[3] = CTS" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="PAD[0] = TxD; PAD[1] = XCK; PAD[2] = TE" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXPO" edc:nzwidth="0x2" edc:desc="Receive Data Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="SERCOM PAD[0] is used for data reception" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="SERCOM PAD[1] is used for data reception" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="SERCOM PAD[2] is used for data reception" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="SERCOM PAD[3] is used for data reception" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SAMPA" edc:nzwidth="0x2" edc:desc="Sample Adjustment">
              <edc:SFRFieldSemantic edc:cname="ADJ0" edc:desc="16x Over-sampling = 7-8-9; 8x Over-sampling = 3-4-5" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ADJ1" edc:desc="16x Over-sampling = 9-10-11; 8x Over-sampling = 4-5-6" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="ADJ2" edc:desc="16x Over-sampling = 11-12-13; 8x Over-sampling = 5-6-7" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="ADJ3" edc:desc="16x Over-sampling = 13-14-15; 8x Over-sampling = 6-7-8" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FORM" edc:nzwidth="0x4" edc:desc="Frame Format">
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_NO_PARITY" edc:desc="USART frame" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_WITH_PARITY" edc:desc="USART frame with parity" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_LINBRKGEN" edc:desc="LIN Master Break and Sync generation" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_AUTO_BAUD_NO_PARITY" edc:desc="Auto-baud (LIN Slave) - break detection and auto-baud" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_AUTO_BAUD_WITH_PARITY" edc:desc="Auto-baud - break detection and auto-baud with parity" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_ISO_7816" edc:desc="ISO 7816" edc:when="(field &amp; 0xF) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMODE" edc:nzwidth="0x1" edc:desc="Communication Mode">
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Asynchronous communication." edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Synchronous communication." edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity">
              <edc:SFRFieldSemantic edc:cname="IDLE_LOW" edc:desc="TxD Change:- Rising XCK edge, RxD Sample:- Falling XCK edge" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IDLE_HIGH" edc:desc="TxD Change:- Falling XCK edge, RxD Sample:- Rising XCK edge" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order">
              <edc:SFRFieldSemantic edc:cname="MSB" edc:desc="MSB is transmitted first." edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LSB" edc:desc="LSB is transmitted first." edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="------nnnn----nn--n--nnn-n---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3C32747" edc:addr="0x42000C04">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 Bits" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 Bits" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="5_BIT" edc:desc="5 Bits" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="6_BIT" edc:desc="6 Bits" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="7_BIT" edc:desc="7 Bits" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SBMODE" edc:nzwidth="0x1" edc:desc="Stop Bit Mode">
              <edc:SFRFieldSemantic edc:cname="1_BIT" edc:desc="One Stop Bit" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2_BIT" edc:desc="Two Stop Bits" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="COLDEN" edc:nzwidth="0x1" edc:desc="Collision Detection Enable"/>
            <edc:SFRFieldDef edc:cname="SFDE" edc:nzwidth="0x1" edc:desc="Start of Frame Detection Enable"/>
            <edc:SFRFieldDef edc:cname="ENC" edc:nzwidth="0x1" edc:desc="Encoding Format">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Data is not encoded" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IRDA" edc:desc="Data is IrDA encoded" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PMODE" edc:nzwidth="0x1" edc:desc="Parity Mode">
              <edc:SFRFieldSemantic edc:cname="EVEN" edc:desc="Even Parity" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ODD" edc:desc="Odd Parity" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TXEN" edc:nzwidth="0x1" edc:desc="Transmitter Enable"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="FIFOCLR" edc:nzwidth="0x2" edc:desc="FIFO Clear">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TXFIFO" edc:desc="Clear TX FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RXFIFO" edc:desc="Clear RX FIFO" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Clear both TX and RF FIFOs" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LINCMD" edc:nzwidth="0x2" edc:desc="LIN Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Normal USART transmission" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SOFTWARE_CONTROL_TRANSMIT_CMD" edc:desc="Break field is transmitted when DATA is written" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="AUTO_TRANSMIT_CMD" edc:desc="Break, sync and identifier are automatically transmitted when DATA is written with the identifier" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="nnnnn-nn-nnn--nn----nnnn-----nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFB730F07" edc:addr="0x42000C08">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="GTIME" edc:nzwidth="0x3" edc:desc="Guard Time"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="BRKLEN" edc:nzwidth="0x2" edc:desc="LIN Master Break Length">
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="Break field transmission is 13 bit times" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="17_BIT" edc:desc="Break field transmission is 17 bit times" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="21_BIT" edc:desc="Break field transmission is 21 bit times" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="26_BIT" edc:desc="Break field transmission is 26 bit times" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="HDRDLY" edc:nzwidth="0x2" edc:desc="LIN Master Header Delay">
              <edc:SFRFieldSemantic edc:cname="DELAY0" edc:desc="Delay between break and sync transmission is 1 bit time; Delay between sync and ID transmission is 1 bit time" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DELAY1" edc:desc="Delay between break and sync transmission is 4 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="DELAY2" edc:desc="Delay between break and sync transmission is 8 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="DELAY3" edc:desc="Delay between break and sync transmission is 14 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="INACK" edc:nzwidth="0x1" edc:desc="Inhibit Not Acknowledge"/>
            <edc:SFRFieldDef edc:cname="DSNACK" edc:nzwidth="0x1" edc:desc="Disable Successive NACK"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MAXITER" edc:nzwidth="0x3" edc:desc="Maximum Iterations"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x2" edc:desc="Data 32 Bit">
              <edc:SFRFieldSemantic edc:cname="0x0" edc:desc="Reads and writes with CHSIZE" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="0x1" edc:desc="Reads with CHSIZE, writes with 32-bit extension" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="0x2" edc:desc="Reads with 32-bit extension, writes with CHSIZE" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="0x3" edc:desc="Reads and writes with 32-bit extension" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="RXTRHOLD" edc:nzwidth="0x2" edc:desc="Receive FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated when DATA is present in the FIFO" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when FIFO is half-full" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FULL" edc:desc="Interrupt and DMA triggers are generated when FIFO is full" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXTRHOLD" edc:nzwidth="0x2" edc:desc="Transmit FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is not full" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when half FIFO space is free" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EMPTY" edc:desc="Interrupt and DMA triggers are generated when the FIFO is empty" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="BAUD" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x42000C0C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x10" edc:desc="Baud Rate Value"/>
            <edc:AdjustPoint edc:offset="-3"/>
            <edc:SFRFieldDef edc:cname="FP" edc:nzwidth="0x3" edc:desc="Fractional Part"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="RXPL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42000C0E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="RXPL" edc:nzwidth="0x8" edc:desc="Receive Pulse Length"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42000C14">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42000C16">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42000C18">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="--------nnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xFF" edc:addr="0x42000C1A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Parity Error"/>
            <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Frame Error"/>
            <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
            <edc:SFRFieldDef edc:cname="CTS" edc:nzwidth="0x1" edc:desc="Clear To Send"/>
            <edc:SFRFieldDef edc:cname="ISF" edc:nzwidth="0x1" edc:desc="Inconsistent Sync Field"/>
            <edc:SFRFieldDef edc:cname="COLL" edc:nzwidth="0x1" edc:desc="Collision Detected"/>
            <edc:SFRFieldDef edc:cname="TXE" edc:nzwidth="0x1" edc:desc="Transmitter Empty"/>
            <edc:SFRFieldDef edc:cname="ITER" edc:nzwidth="0x1" edc:desc="Maximum Number of Repetitions Reached"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="---------------------------rrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:addr="0x42000C1C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="RXERRCNT" edc:nzwidth="0x1" edc:desc="RXERRCNT Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="LENGTH" edc:nzwidth="0x1" edc:desc="LENGTH Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="RXERRCNT" edc:nzwidth="0x8" edc:access="rrrrrrrr" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42000C20">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="RXERRCNT" edc:nzwidth="0x8" edc:desc="Receive Error Count"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="LENGTH" edc:nzwidth="0x10" edc:access="------nnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x3FF" edc:addr="0x42000C22">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x2" edc:desc="Data Length Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Length counter is disabled" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TX" edc:desc="Length counter is enabled for transmit" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RX" edc:desc="Length counter is enabled for receive" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42000C28">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x42000C30">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="FIFOSPACE" edc:nzwidth="0x10" edc:access="---rrrrr---rrrrr" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1F1F" edc:addr="0x42000C34">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="TXSPACE" edc:nzwidth="0x5" edc:desc="Tx FIFO Empty Space"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RXSPACE" edc:nzwidth="0x5" edc:desc="Rx FIFO Filled Space"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="FIFOPTR" edc:nzwidth="0x10" edc:access="----nnnn----nnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xF0F" edc:addr="0x42000C36">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="CPUWRPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Write Pointer"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CPURDPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Read Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM3/I2CM">
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnn-nnnnnn---n--------n--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7BF1009F" edc:addr="0x42001000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="I2C_MASTER" edc:desc="I2C master operation" edc:when="(field &amp; 0x7) == 0x5"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="PINOUT" edc:nzwidth="0x1" edc:desc="Pin Usage"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SDAHOLD" edc:nzwidth="0x2" edc:desc="SDA Hold Time">
              <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disabled" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="75NS" edc:desc="50-100ns hold time" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="450NS" edc:desc="300-600ns hold time" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="600NS" edc:desc="400-800ns hold time" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MEXTTOEN" edc:nzwidth="0x1" edc:desc="Master SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="SEXTTOEN" edc:nzwidth="0x1" edc:desc="Slave SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="SPEED" edc:nzwidth="0x2" edc:desc="Transfer Speed">
              <edc:SFRFieldSemantic edc:cname="SM" edc:desc="Standard-Mode (SM) and Fast-Mode (FM)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FMP" edc:desc="Fast-Mode Plus (FM+)" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="HS" edc:desc="High-Speed Mode" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SCLSM" edc:nzwidth="0x1" edc:desc="SCL Clock Stretch Mode"/>
            <edc:SFRFieldDef edc:cname="INACTOUT" edc:nzwidth="0x2" edc:desc="Inactive Time-Out">
              <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disable" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="55US" edc:desc="5-6 SCL cycle time-out" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="105US" edc:desc="10-11 SCL cycle time-out" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="205US" edc:desc="20-21 SCL cycle time-out" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LOWTOUTEN" edc:nzwidth="0x1" edc:desc="SCL Low Timeout Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="--------nn---nnn------nn--------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC70300" edc:addr="0x42001004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="SMEN" edc:nzwidth="0x1" edc:desc="Smart Mode Enable"/>
            <edc:SFRFieldDef edc:cname="QCEN" edc:nzwidth="0x1" edc:desc="Quick Command Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Command"/>
            <edc:SFRFieldDef edc:cname="ACKACT" edc:nzwidth="0x1" edc:desc="Acknowledge Action"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="FIFOCLR" edc:nzwidth="0x2" edc:desc="FIFO Clear">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TXFIFO" edc:desc="Clear TX FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RXFIFO" edc:desc="Clear RX FIFO" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Clear both TX and RF FIFOs" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="nnnnn--n------------------------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF9000000" edc:addr="0x42001008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:AdjustPoint edc:offset="0x18"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x1" edc:desc="Data 32 Bit"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="RXTRHOLD" edc:nzwidth="0x2" edc:desc="Receive FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated when DATA is present in the FIFO" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when FIFO is half-full" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FULL" edc:desc="Interrupt and DMA triggers are generated when FIFO is full" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXTRHOLD" edc:nzwidth="0x2" edc:desc="Transmit FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is not full" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when half FIFO space is free" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EMPTY" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is not full" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="BAUD" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x4200100C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x8" edc:desc="Baud Rate Value"/>
            <edc:SFRFieldDef edc:cname="BAUDLOW" edc:nzwidth="0x8" edc:desc="Baud Rate Value Low"/>
            <edc:SFRFieldDef edc:cname="HSBAUD" edc:nzwidth="0x8" edc:desc="High Speed Baud Rate Value"/>
            <edc:SFRFieldDef edc:cname="HSBAUDLOW" edc:nzwidth="0x8" edc:desc="High Speed Baud Rate Value Low"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n--nn-nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x9B" edc:addr="0x42001014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="MB" edc:nzwidth="0x1" edc:desc="Master On Bus Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SB" edc:nzwidth="0x1" edc:desc="Slave On Bus Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFE" edc:nzwidth="0x1" edc:desc="Tx FIFO Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFF" edc:nzwidth="0x1" edc:desc="Rx FIFO Full Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n--nn-nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x9B" edc:addr="0x42001016">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="MB" edc:nzwidth="0x1" edc:desc="Master On Bus Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SB" edc:nzwidth="0x1" edc:desc="Slave On Bus Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFE" edc:nzwidth="0x1" edc:desc="Tx FIFO Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFF" edc:nzwidth="0x1" edc:desc="Rx FIFO Full Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n--nn-nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x9B" edc:addr="0x42001018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="MB" edc:nzwidth="0x1" edc:desc="Master On Bus Interrupt"/>
            <edc:SFRFieldDef edc:cname="SB" edc:nzwidth="0x1" edc:desc="Slave On Bus Interrupt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFE" edc:nzwidth="0x1" edc:desc="Tx FIFO Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXFF" edc:nzwidth="0x1" edc:desc="Rx FIFO Full Interrupt"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="-----nnnnnnn-nnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x7F7" edc:addr="0x4200101A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="BUSERR" edc:nzwidth="0x1" edc:desc="Bus Error"/>
            <edc:SFRFieldDef edc:cname="ARBLOST" edc:nzwidth="0x1" edc:desc="Arbitration Lost"/>
            <edc:SFRFieldDef edc:cname="RXNACK" edc:nzwidth="0x1" edc:desc="Received Not Acknowledge"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BUSSTATE" edc:nzwidth="0x2" edc:desc="Bus State">
              <edc:SFRFieldSemantic edc:cname="UNKNOWN" edc:desc="Wait for stop or idle" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IDLE" edc:desc="Wait for transaction initialization" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="OWNER" edc:desc="I2C master is the current owner of the bus" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="BUSY" edc:desc="Some other I2C master owns the bus" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LOWTOUT" edc:nzwidth="0x1" edc:desc="SCL Low Timeout"/>
            <edc:SFRFieldDef edc:cname="CLKHOLD" edc:nzwidth="0x1" edc:desc="Clock Hold"/>
            <edc:SFRFieldDef edc:cname="MEXTTOUT" edc:nzwidth="0x1" edc:desc="Master SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="SEXTTOUT" edc:nzwidth="0x1" edc:desc="Slave SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="LENERR" edc:nzwidth="0x1" edc:desc="Length Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="-----------------------------rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7" edc:addr="0x4200101C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="SYSOP" edc:nzwidth="0x1" edc:desc="System Operation Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnn--nnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFE7FF" edc:addr="0x42001024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0xB" edc:desc="Address Value"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x1" edc:desc="Length Enable"/>
            <edc:SFRFieldDef edc:cname="HS" edc:nzwidth="0x1" edc:desc="High Speed Mode"/>
            <edc:SFRFieldDef edc:cname="TENBITEN" edc:nzwidth="0x1" edc:desc="Ten Bit Addressing Enable"/>
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Length"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42001028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x42001030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="FIFOSPACE" edc:nzwidth="0x10" edc:access="---rrrrr---rrrrr" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1F1F" edc:addr="0x42001034">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="TXSPACE" edc:nzwidth="0x5" edc:desc="Tx FIFO Empty Space"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RXSPACE" edc:nzwidth="0x5" edc:desc="Rx FIFO Filled Space"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="FIFOPTR" edc:nzwidth="0x10" edc:access="----nnnn----nnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xF0F" edc:addr="0x42001036">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="CPUWRPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Write Pointer"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CPURDPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Read Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM3/I2CS">
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-n--n-nnn-nn---n--------n--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x4BB1009F" edc:addr="0x42001000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="I2C_SLAVE" edc:desc="I2C slave operation" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="PINOUT" edc:nzwidth="0x1" edc:desc="Pin Usage"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SDAHOLD" edc:nzwidth="0x2" edc:desc="SDA Hold Time">
              <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disabled" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="75NS" edc:desc="50-100ns hold time" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="450NS" edc:desc="300-600ns hold time" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="600NS" edc:desc="400-800ns hold time" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SEXTTOEN" edc:nzwidth="0x1" edc:desc="Slave SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="SPEED" edc:nzwidth="0x2" edc:desc="Transfer Speed">
              <edc:SFRFieldSemantic edc:cname="SM" edc:desc="Standard-Mode (SM) and Fast-Mode (FM)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FMP" edc:desc="Fast-Mode Plus (FM+)" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="HS" edc:desc="High-Speed Mode" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SCLSM" edc:nzwidth="0x1" edc:desc="SCL Clock Stretch Mode"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="LOWTOUTEN" edc:nzwidth="0x1" edc:desc="SCL Low Timeout Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="--------nn---nnnnn---nnn--------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC7C700" edc:addr="0x42001004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="SMEN" edc:nzwidth="0x1" edc:desc="Smart Mode Enable"/>
            <edc:SFRFieldDef edc:cname="GCMD" edc:nzwidth="0x1" edc:desc="PMBus Group Command"/>
            <edc:SFRFieldDef edc:cname="AACKEN" edc:nzwidth="0x1" edc:desc="Automatic Address Acknowledge"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="AMODE" edc:nzwidth="0x2" edc:desc="Address Mode">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="The slave responds to the address written in ADDR.ADDR masked by the value in ADDR.ADDRMASK" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2ADDRS" edc:desc="The slave responds to the two unique addresses in ADDR and ADDRMASK" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RANGE" edc:desc="The slave responds to the range of addresses between and including ADDR and ADDRMASK. ADDR is the upper limit" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Command"/>
            <edc:SFRFieldDef edc:cname="ACKACT" edc:nzwidth="0x1" edc:desc="Acknowledge Action"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="FIFOCLR" edc:nzwidth="0x2" edc:desc="FIFO Clear">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TXFIFO" edc:desc="Clear TX FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RXFIFO" edc:desc="Clear RX FIFO" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Clear both TX and RF FIFOs" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="nnnnn--n--------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF900000F" edc:addr="0x42001008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="SDASETUP" edc:nzwidth="0x4" edc:desc="SDA Setup Time"/>
            <edc:AdjustPoint edc:offset="0x14"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x1" edc:desc="Data 32 Bit"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="RXTRHOLD" edc:nzwidth="0x2" edc:desc="Receive FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated when DATA is present in the FIFO" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when FIFO is half-full" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FULL" edc:desc="Interrupt and DMA triggers are generated when FIFO is full" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXTRHOLD" edc:nzwidth="0x2" edc:desc="Transmit FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is not full" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when half FIFO space is free" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EMPTY" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is not full" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n--nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x9F" edc:addr="0x42001014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="PREC" edc:nzwidth="0x1" edc:desc="Stop Received Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="AMATCH" edc:nzwidth="0x1" edc:desc="Address Match Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="DRDY" edc:nzwidth="0x1" edc:desc="Data Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFE" edc:nzwidth="0x1" edc:desc="Tx FIFO Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFF" edc:nzwidth="0x1" edc:desc="Rx FIFO Full Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n--nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x9F" edc:addr="0x42001016">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="PREC" edc:nzwidth="0x1" edc:desc="Stop Received Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="AMATCH" edc:nzwidth="0x1" edc:desc="Address Match Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DRDY" edc:nzwidth="0x1" edc:desc="Data Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFE" edc:nzwidth="0x1" edc:desc="Tx FIFO Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFF" edc:nzwidth="0x1" edc:desc="Rx FIFO Full Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n--nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x9F" edc:addr="0x42001018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="PREC" edc:nzwidth="0x1" edc:desc="Stop Received Interrupt"/>
            <edc:SFRFieldDef edc:cname="AMATCH" edc:nzwidth="0x1" edc:desc="Address Match Interrupt"/>
            <edc:SFRFieldDef edc:cname="DRDY" edc:nzwidth="0x1" edc:desc="Data Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXFE" edc:nzwidth="0x1" edc:desc="Tx FIFO Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXFF" edc:nzwidth="0x1" edc:desc="Rx FIFO Full Interrupt"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="----nnn-nn-nnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xEDF" edc:addr="0x4200101A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="BUSERR" edc:nzwidth="0x1" edc:desc="Bus Error"/>
            <edc:SFRFieldDef edc:cname="COLL" edc:nzwidth="0x1" edc:desc="Transmit Collision"/>
            <edc:SFRFieldDef edc:cname="RXNACK" edc:nzwidth="0x1" edc:desc="Received Not Acknowledge"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Read/Write Direction"/>
            <edc:SFRFieldDef edc:cname="SR" edc:nzwidth="0x1" edc:desc="Repeated Start"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LOWTOUT" edc:nzwidth="0x1" edc:desc="SCL Low Timeout"/>
            <edc:SFRFieldDef edc:cname="CLKHOLD" edc:nzwidth="0x1" edc:desc="Clock Hold"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SEXTTOUT" edc:nzwidth="0x1" edc:desc="Slave SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="HS" edc:nzwidth="0x1" edc:desc="High Speed"/>
            <edc:SFRFieldDef edc:cname="LENERR" edc:nzwidth="0x1" edc:desc="Transaction Length Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="---------------------------r-rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x17" edc:addr="0x4200101C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="SYSOP" edc:nzwidth="0x1" edc:desc="System Operation Synchronization Busy"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LENGTH" edc:nzwidth="0x1" edc:desc="Length Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="LENGTH" edc:nzwidth="0x10" edc:access="-------nnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1FF" edc:addr="0x42001022">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x1" edc:desc="Data Length Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="-----nnnnnnnnnn-n----nnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FE87FF" edc:addr="0x42001024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="GENCEN" edc:nzwidth="0x1" edc:desc="General Call Address Enable"/>
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0xA" edc:desc="Address Value"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TENBITEN" edc:nzwidth="0x1" edc:desc="Ten Bit Addressing Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ADDRMASK" edc:nzwidth="0xA" edc:desc="Address Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42001028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="FIFOSPACE" edc:nzwidth="0x10" edc:access="---rrrrr---rrrrr" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1F1F" edc:addr="0x42001034">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="TXSPACE" edc:nzwidth="0x5" edc:desc="Tx FIFO Empty Space"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RXSPACE" edc:nzwidth="0x5" edc:desc="Rx FIFO Filled Space"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="FIFOPTR" edc:nzwidth="0x10" edc:access="----nnnn----nnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xF0F" edc:addr="0x42001036">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="CPUWRPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Write Pointer"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CPURDPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Read Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM3/SPIM">
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnnnnn--nn--nn-------nn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7F33019F" edc:addr="0x42001000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="SPI_MASTER" edc:desc="SPI in master operation" edc:when="(field &amp; 0x7) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="IBON" edc:nzwidth="0x1" edc:desc="Immediate Buffer Overflow Notification">
              <edc:SFRFieldSemantic edc:cname="0x0" edc:desc="STATUS.BUFOVF is set when it occurs in the data stream" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="0x1" edc:desc="STATUS.BUFOVF is set immediately upon buffer overflow" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DOPO" edc:nzwidth="0x2" edc:desc="Data Out Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="DO on PAD[0], SCK on PAD[1] and SS on PAD[2]" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="DO on PAD[3], SCK on PAD[1] and SS on PAD[2]" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DIPO" edc:nzwidth="0x2" edc:desc="Data In Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="SERCOM PAD[0] is used as data input" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="SERCOM PAD[1] is used as data input" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="SERCOM PAD[2] is used as data input" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="SERCOM PAD[3] is used as data input" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FORM" edc:nzwidth="0x4" edc:desc="Frame Format">
              <edc:SFRFieldSemantic edc:cname="SPI_FRAME" edc:desc="SPI Frame" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SPI_FRAME_WITH_ADDR" edc:desc="SPI Frame with Addr" edc:when="(field &amp; 0xF) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPHA" edc:nzwidth="0x1" edc:desc="Clock Phase">
              <edc:SFRFieldSemantic edc:cname="LEADING_EDGE" edc:desc="The data is sampled on a leading SCK edge and changed on a trailing SCK edge" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TRAILING_EDGE" edc:desc="The data is sampled on a trailing SCK edge and changed on a leading SCK edge" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity">
              <edc:SFRFieldSemantic edc:cname="IDLE_LOW" edc:desc="SCK is low when idle" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IDLE_HIGH" edc:desc="SCK is high when idle" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order">
              <edc:SFRFieldSemantic edc:cname="MSB" edc:desc="MSB is transmitted first" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LSB" edc:desc="LSB is transmitted first" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="--------nn----n-nnn---n--n---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC2E247" edc:addr="0x42001004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits" edc:when="(field &amp; 0x7) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PLOADEN" edc:nzwidth="0x1" edc:desc="Data Preload Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SSDE" edc:nzwidth="0x1" edc:desc="Slave Select Low Detect Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="SS low detector is disabled" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="SS low detector is enabled" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="MSSEN" edc:nzwidth="0x1" edc:desc="Master Slave Select Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Hardware SS control is disabled" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="Hardware SS control is enabled" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AMODE" edc:nzwidth="0x2" edc:desc="Address Mode">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="ADDRMASK is used as a mask to the AADR register" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2ADDRS" edc:desc="The slave responds to the two unique addresses in ADDR and ADDRMASK" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RANGE" edc:desc="The slave responds to the range of addresses between and including ADDR and ADDRMASK. ADDR is the upper limit" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="FIFOCLR" edc:nzwidth="0x2" edc:desc="FIFO Clear">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TXFIFO" edc:desc="Clear TX FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RXFIFO" edc:desc="Clear RX FIFO" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Clear both TX and RF FIFOs" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="nnnnn--n------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF900003F" edc:addr="0x42001008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="ICSPACE" edc:nzwidth="0x6" edc:desc="Inter-Character Spacing"/>
            <edc:AdjustPoint edc:offset="0x12"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x1" edc:desc="Data 32 Bit"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="RXTRHOLD" edc:nzwidth="0x2" edc:desc="Receive FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated when DATA is present in the FIFO" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when FIFO is half-full" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FULL" edc:desc="Interrupt and DMA triggers are generated when FIFO is full" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXTRHOLD" edc:nzwidth="0x2" edc:desc="Transmit FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is not full" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when half FIFO space is free" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EMPTY" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is empty" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="BAUD" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4200100C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x8" edc:desc="Baud Rate Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42001014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42001016">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42001018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Flag"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="----n--------n--" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x804" edc:addr="0x4200101A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="LENERR" edc:nzwidth="0x1" edc:desc="Transaction Length Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="---------------------------r-rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x17" edc:addr="0x4200101C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB Synchronization Busy"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LENGTH" edc:nzwidth="0x1" edc:desc="LENGTH Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="LENGTH" edc:nzwidth="0x10" edc:access="-------nnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1FF" edc:addr="0x42001022">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x1" edc:desc="Data Length Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="--------nnnnnnnn--------nnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF00FF" edc:addr="0x42001024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0x8" edc:desc="Address Value"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="ADDRMASK" edc:nzwidth="0x8" edc:desc="Address Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42001028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x42001030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="FIFOSPACE" edc:nzwidth="0x10" edc:access="---rrrrr---rrrrr" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1F1F" edc:addr="0x42001034">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="TXSPACE" edc:nzwidth="0x5" edc:desc="Tx FIFO Empty Space"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RXSPACE" edc:nzwidth="0x5" edc:desc="Rx FIFO Filled Space"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="FIFOPTR" edc:nzwidth="0x10" edc:access="----nnnn----nnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xF0F" edc:addr="0x42001036">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="CPUWRPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Write Pointer"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CPURDPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Read Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM3/SPIS">
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnnnnn--nn--nn-------nn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7F33019F" edc:addr="0x42001000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="SPI_SLAVE" edc:desc="SPI in slave operation" edc:when="(field &amp; 0x7) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="IBON" edc:nzwidth="0x1" edc:desc="Immediate Buffer Overflow Notification">
              <edc:SFRFieldSemantic edc:cname="0x0" edc:desc="STATUS.BUFOVF is set when it occurs in the data stream" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="0x1" edc:desc="STATUS.BUFOVF is set immediately upon buffer overflow" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DOPO" edc:nzwidth="0x2" edc:desc="Data Out Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="DO on PAD[0], SCK on PAD[1] and SS on PAD[2]" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="DO on PAD[3], SCK on PAD[1] and SS on PAD[2]" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DIPO" edc:nzwidth="0x2" edc:desc="Data In Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="SERCOM PAD[0] is used as data input" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="SERCOM PAD[1] is used as data input" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="SERCOM PAD[2] is used as data input" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="SERCOM PAD[3] is used as data input" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FORM" edc:nzwidth="0x4" edc:desc="Frame Format">
              <edc:SFRFieldSemantic edc:cname="SPI_FRAME" edc:desc="SPI Frame" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SPI_FRAME_WITH_ADDR" edc:desc="SPI Frame with Addr" edc:when="(field &amp; 0xF) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPHA" edc:nzwidth="0x1" edc:desc="Clock Phase">
              <edc:SFRFieldSemantic edc:cname="LEADING_EDGE" edc:desc="The data is sampled on a leading SCK edge and changed on a trailing SCK edge" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TRAILING_EDGE" edc:desc="The data is sampled on a trailing SCK edge and changed on a leading SCK edge" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity">
              <edc:SFRFieldSemantic edc:cname="IDLE_LOW" edc:desc="SCK is low when idle" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IDLE_HIGH" edc:desc="SCK is high when idle" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order">
              <edc:SFRFieldSemantic edc:cname="MSB" edc:desc="MSB is transmitted first" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LSB" edc:desc="LSB is transmitted first" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="--------nn----n-nnn---n--n---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC2E247" edc:addr="0x42001004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits" edc:when="(field &amp; 0x7) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PLOADEN" edc:nzwidth="0x1" edc:desc="Data Preload Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SSDE" edc:nzwidth="0x1" edc:desc="Slave Select Low Detect Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="SS low detector is disabled" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="SS low detector is enabled" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="MSSEN" edc:nzwidth="0x1" edc:desc="Master Slave Select Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Hardware SS control is disabled" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="Hardware SS control is enabled" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AMODE" edc:nzwidth="0x2" edc:desc="Address Mode">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="ADDRMASK is used as a mask to the AADR register" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2ADDRS" edc:desc="The slave responds to the two unique addresses in ADDR and ADDRMASK" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RANGE" edc:desc="The slave responds to the range of addresses between and including ADDR and ADDRMASK. ADDR is the upper limit" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="FIFOCLR" edc:nzwidth="0x2" edc:desc="FIFO Clear">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TXFIFO" edc:desc="Clear TX FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RXFIFO" edc:desc="Clear RX FIFO" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Clear both TX and RF FIFOs" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="nnnnn--n------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF900003F" edc:addr="0x42001008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="ICSPACE" edc:nzwidth="0x6" edc:desc="Inter-Character Spacing"/>
            <edc:AdjustPoint edc:offset="0x12"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x1" edc:desc="Data 32 Bit"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="RXTRHOLD" edc:nzwidth="0x2" edc:desc="Receive FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated when DATA is present in the FIFO" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when FIFO is half-full" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FULL" edc:desc="Interrupt and DMA triggers are generated when FIFO is full" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXTRHOLD" edc:nzwidth="0x2" edc:desc="Transmit FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is not full" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when half FIFO space is free" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EMPTY" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is empty" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="BAUD" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4200100C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x8" edc:desc="Baud Rate Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42001014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42001016">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42001018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Flag"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="----n--------n--" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x804" edc:addr="0x4200101A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="LENERR" edc:nzwidth="0x1" edc:desc="Transaction Length Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="---------------------------r-rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x17" edc:addr="0x4200101C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB Synchronization Busy"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LENGTH" edc:nzwidth="0x1" edc:desc="LENGTH Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="LENGTH" edc:nzwidth="0x10" edc:access="-------nnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1FF" edc:addr="0x42001022">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x1" edc:desc="Data Length Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="--------nnnnnnnn--------nnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF00FF" edc:addr="0x42001024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0x8" edc:desc="Address Value"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="ADDRMASK" edc:nzwidth="0x8" edc:desc="Address Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42001028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x42001030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="FIFOSPACE" edc:nzwidth="0x10" edc:access="---rrrrr---rrrrr" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1F1F" edc:addr="0x42001034">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="TXSPACE" edc:nzwidth="0x5" edc:desc="Tx FIFO Empty Space"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RXSPACE" edc:nzwidth="0x5" edc:desc="Rx FIFO Filled Space"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="FIFOPTR" edc:nzwidth="0x10" edc:access="----nnnn----nnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xF0F" edc:addr="0x42001036">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="CPUWRPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Write Pointer"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CPURDPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Read Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM3/USART_EXT">
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnnnnnnnnn--nnnnn--nnnn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FF3E79F" edc:addr="0x42001000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="USART_EXT_CLK" edc:desc="USART with external clock" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="USART_INT_CLK" edc:desc="USART with internal clock" edc:when="(field &amp; 0x7) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="IBON" edc:nzwidth="0x1" edc:desc="Immediate Buffer Overflow Notification"/>
            <edc:SFRFieldDef edc:cname="TXINV" edc:nzwidth="0x1" edc:desc="Transmit Data Invert">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="TxD is not inverted" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INV" edc:desc="TxD is inverted" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RXINV" edc:nzwidth="0x1" edc:desc="Receive Data Invert">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="RxD is not inverted" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INV" edc:desc="RxD is inverted" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SAMPR" edc:nzwidth="0x3" edc:desc="Sample">
              <edc:SFRFieldSemantic edc:cname="16X_ARITHMETIC" edc:desc="16x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="16X_FRACTIONAL" edc:desc="16x over-sampling using fractional baudrate generation" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="8X_ARITHMETIC" edc:desc="8x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="8X_FRACTIONAL" edc:desc="8x over-sampling using fractional baudrate generation" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="3X_ARITHMETIC" edc:desc="3x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXPO" edc:nzwidth="0x2" edc:desc="Transmit Data Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="PAD[0] = TxD; PAD[1] = XCK" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="PAD[0] = TxD; PAD[2] = RTS; PAD[3] = CTS" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="PAD[0] = TxD; PAD[1] = XCK; PAD[2] = TE" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXPO" edc:nzwidth="0x2" edc:desc="Receive Data Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="SERCOM PAD[0] is used for data reception" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="SERCOM PAD[1] is used for data reception" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="SERCOM PAD[2] is used for data reception" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="SERCOM PAD[3] is used for data reception" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SAMPA" edc:nzwidth="0x2" edc:desc="Sample Adjustment">
              <edc:SFRFieldSemantic edc:cname="ADJ0" edc:desc="16x Over-sampling = 7-8-9; 8x Over-sampling = 3-4-5" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ADJ1" edc:desc="16x Over-sampling = 9-10-11; 8x Over-sampling = 4-5-6" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="ADJ2" edc:desc="16x Over-sampling = 11-12-13; 8x Over-sampling = 5-6-7" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="ADJ3" edc:desc="16x Over-sampling = 13-14-15; 8x Over-sampling = 6-7-8" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FORM" edc:nzwidth="0x4" edc:desc="Frame Format">
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_NO_PARITY" edc:desc="USART frame" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_WITH_PARITY" edc:desc="USART frame with parity" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_LINBRKGEN" edc:desc="LIN Master Break and Sync generation" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_AUTO_BAUD_NO_PARITY" edc:desc="Auto-baud (LIN Slave) - break detection and auto-baud" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_AUTO_BAUD_WITH_PARITY" edc:desc="Auto-baud - break detection and auto-baud with parity" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_ISO_7816" edc:desc="ISO 7816" edc:when="(field &amp; 0xF) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMODE" edc:nzwidth="0x1" edc:desc="Communication Mode">
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Asynchronous communication." edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Synchronous communication." edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity">
              <edc:SFRFieldSemantic edc:cname="IDLE_LOW" edc:desc="TxD Change:- Rising XCK edge, RxD Sample:- Falling XCK edge" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IDLE_HIGH" edc:desc="TxD Change:- Falling XCK edge, RxD Sample:- Rising XCK edge" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order">
              <edc:SFRFieldSemantic edc:cname="MSB" edc:desc="MSB is transmitted first." edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LSB" edc:desc="LSB is transmitted first." edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="------nnnn----nn--n--nnn-n---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3C32747" edc:addr="0x42001004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 Bits" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 Bits" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="5_BIT" edc:desc="5 Bits" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="6_BIT" edc:desc="6 Bits" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="7_BIT" edc:desc="7 Bits" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SBMODE" edc:nzwidth="0x1" edc:desc="Stop Bit Mode">
              <edc:SFRFieldSemantic edc:cname="1_BIT" edc:desc="One Stop Bit" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2_BIT" edc:desc="Two Stop Bits" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="COLDEN" edc:nzwidth="0x1" edc:desc="Collision Detection Enable"/>
            <edc:SFRFieldDef edc:cname="SFDE" edc:nzwidth="0x1" edc:desc="Start of Frame Detection Enable"/>
            <edc:SFRFieldDef edc:cname="ENC" edc:nzwidth="0x1" edc:desc="Encoding Format">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Data is not encoded" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IRDA" edc:desc="Data is IrDA encoded" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PMODE" edc:nzwidth="0x1" edc:desc="Parity Mode">
              <edc:SFRFieldSemantic edc:cname="EVEN" edc:desc="Even Parity" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ODD" edc:desc="Odd Parity" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TXEN" edc:nzwidth="0x1" edc:desc="Transmitter Enable"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="FIFOCLR" edc:nzwidth="0x2" edc:desc="FIFO Clear">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TXFIFO" edc:desc="Clear TX FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RXFIFO" edc:desc="Clear RX FIFO" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Clear both TX and RF FIFOs" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LINCMD" edc:nzwidth="0x2" edc:desc="LIN Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Normal USART transmission" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SOFTWARE_CONTROL_TRANSMIT_CMD" edc:desc="Break field is transmitted when DATA is written" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="AUTO_TRANSMIT_CMD" edc:desc="Break, sync and identifier are automatically transmitted when DATA is written with the identifier" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="nnnnn-nn-nnn--nn----nnnn-----nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFB730F07" edc:addr="0x42001008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="GTIME" edc:nzwidth="0x3" edc:desc="Guard Time"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="BRKLEN" edc:nzwidth="0x2" edc:desc="LIN Master Break Length">
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="Break field transmission is 13 bit times" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="17_BIT" edc:desc="Break field transmission is 17 bit times" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="21_BIT" edc:desc="Break field transmission is 21 bit times" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="26_BIT" edc:desc="Break field transmission is 26 bit times" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="HDRDLY" edc:nzwidth="0x2" edc:desc="LIN Master Header Delay">
              <edc:SFRFieldSemantic edc:cname="DELAY0" edc:desc="Delay between break and sync transmission is 1 bit time; Delay between sync and ID transmission is 1 bit time" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DELAY1" edc:desc="Delay between break and sync transmission is 4 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="DELAY2" edc:desc="Delay between break and sync transmission is 8 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="DELAY3" edc:desc="Delay between break and sync transmission is 14 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="INACK" edc:nzwidth="0x1" edc:desc="Inhibit Not Acknowledge"/>
            <edc:SFRFieldDef edc:cname="DSNACK" edc:nzwidth="0x1" edc:desc="Disable Successive NACK"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MAXITER" edc:nzwidth="0x3" edc:desc="Maximum Iterations"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x2" edc:desc="Data 32 Bit">
              <edc:SFRFieldSemantic edc:cname="0x0" edc:desc="Reads and writes with CHSIZE" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="0x1" edc:desc="Reads with CHSIZE, writes with 32-bit extension" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="0x2" edc:desc="Reads with 32-bit extension, writes with CHSIZE" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="0x3" edc:desc="Reads and writes with 32-bit extension" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="RXTRHOLD" edc:nzwidth="0x2" edc:desc="Receive FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated when DATA is present in the FIFO" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when FIFO is half-full" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FULL" edc:desc="Interrupt and DMA triggers are generated when FIFO is full" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXTRHOLD" edc:nzwidth="0x2" edc:desc="Transmit FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is not full" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when half FIFO space is free" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EMPTY" edc:desc="Interrupt and DMA triggers are generated when the FIFO is empty" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="BAUD" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x4200100C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x10" edc:desc="Baud Rate Value"/>
            <edc:AdjustPoint edc:offset="-3"/>
            <edc:SFRFieldDef edc:cname="FP" edc:nzwidth="0x3" edc:desc="Fractional Part"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="RXPL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4200100E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="RXPL" edc:nzwidth="0x8" edc:desc="Receive Pulse Length"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42001014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42001016">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42001018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="--------nnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xFF" edc:addr="0x4200101A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Parity Error"/>
            <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Frame Error"/>
            <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
            <edc:SFRFieldDef edc:cname="CTS" edc:nzwidth="0x1" edc:desc="Clear To Send"/>
            <edc:SFRFieldDef edc:cname="ISF" edc:nzwidth="0x1" edc:desc="Inconsistent Sync Field"/>
            <edc:SFRFieldDef edc:cname="COLL" edc:nzwidth="0x1" edc:desc="Collision Detected"/>
            <edc:SFRFieldDef edc:cname="TXE" edc:nzwidth="0x1" edc:desc="Transmitter Empty"/>
            <edc:SFRFieldDef edc:cname="ITER" edc:nzwidth="0x1" edc:desc="Maximum Number of Repetitions Reached"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="---------------------------rrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:addr="0x4200101C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="RXERRCNT" edc:nzwidth="0x1" edc:desc="RXERRCNT Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="LENGTH" edc:nzwidth="0x1" edc:desc="LENGTH Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="RXERRCNT" edc:nzwidth="0x8" edc:access="rrrrrrrr" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42001020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="RXERRCNT" edc:nzwidth="0x8" edc:desc="Receive Error Count"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="LENGTH" edc:nzwidth="0x10" edc:access="------nnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x3FF" edc:addr="0x42001022">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x2" edc:desc="Data Length Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Length counter is disabled" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TX" edc:desc="Length counter is enabled for transmit" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RX" edc:desc="Length counter is enabled for receive" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42001028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x42001030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="FIFOSPACE" edc:nzwidth="0x10" edc:access="---rrrrr---rrrrr" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1F1F" edc:addr="0x42001034">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="TXSPACE" edc:nzwidth="0x5" edc:desc="Tx FIFO Empty Space"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RXSPACE" edc:nzwidth="0x5" edc:desc="Rx FIFO Filled Space"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="FIFOPTR" edc:nzwidth="0x10" edc:access="----nnnn----nnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xF0F" edc:addr="0x42001036">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="CPUWRPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Write Pointer"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CPURDPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Read Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM3/USART_INT">
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnnnnnnnnn--nnnnn--nnnn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FF3E79F" edc:addr="0x42001000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="USART_EXT_CLK" edc:desc="USART with external clock" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="USART_INT_CLK" edc:desc="USART with internal clock" edc:when="(field &amp; 0x7) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="IBON" edc:nzwidth="0x1" edc:desc="Immediate Buffer Overflow Notification"/>
            <edc:SFRFieldDef edc:cname="TXINV" edc:nzwidth="0x1" edc:desc="Transmit Data Invert">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="TxD is not inverted" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INV" edc:desc="TxD is inverted" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RXINV" edc:nzwidth="0x1" edc:desc="Receive Data Invert">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="RxD is not inverted" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INV" edc:desc="RxD is inverted" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SAMPR" edc:nzwidth="0x3" edc:desc="Sample">
              <edc:SFRFieldSemantic edc:cname="16X_ARITHMETIC" edc:desc="16x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="16X_FRACTIONAL" edc:desc="16x over-sampling using fractional baudrate generation" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="8X_ARITHMETIC" edc:desc="8x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="8X_FRACTIONAL" edc:desc="8x over-sampling using fractional baudrate generation" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="3X_ARITHMETIC" edc:desc="3x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXPO" edc:nzwidth="0x2" edc:desc="Transmit Data Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="PAD[0] = TxD; PAD[1] = XCK" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="PAD[0] = TxD; PAD[2] = RTS; PAD[3] = CTS" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="PAD[0] = TxD; PAD[1] = XCK; PAD[2] = TE" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXPO" edc:nzwidth="0x2" edc:desc="Receive Data Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="SERCOM PAD[0] is used for data reception" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="SERCOM PAD[1] is used for data reception" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="SERCOM PAD[2] is used for data reception" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="SERCOM PAD[3] is used for data reception" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SAMPA" edc:nzwidth="0x2" edc:desc="Sample Adjustment">
              <edc:SFRFieldSemantic edc:cname="ADJ0" edc:desc="16x Over-sampling = 7-8-9; 8x Over-sampling = 3-4-5" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ADJ1" edc:desc="16x Over-sampling = 9-10-11; 8x Over-sampling = 4-5-6" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="ADJ2" edc:desc="16x Over-sampling = 11-12-13; 8x Over-sampling = 5-6-7" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="ADJ3" edc:desc="16x Over-sampling = 13-14-15; 8x Over-sampling = 6-7-8" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FORM" edc:nzwidth="0x4" edc:desc="Frame Format">
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_NO_PARITY" edc:desc="USART frame" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_WITH_PARITY" edc:desc="USART frame with parity" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_LINBRKGEN" edc:desc="LIN Master Break and Sync generation" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_AUTO_BAUD_NO_PARITY" edc:desc="Auto-baud (LIN Slave) - break detection and auto-baud" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_AUTO_BAUD_WITH_PARITY" edc:desc="Auto-baud - break detection and auto-baud with parity" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_ISO_7816" edc:desc="ISO 7816" edc:when="(field &amp; 0xF) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMODE" edc:nzwidth="0x1" edc:desc="Communication Mode">
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Asynchronous communication." edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Synchronous communication." edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity">
              <edc:SFRFieldSemantic edc:cname="IDLE_LOW" edc:desc="TxD Change:- Rising XCK edge, RxD Sample:- Falling XCK edge" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IDLE_HIGH" edc:desc="TxD Change:- Falling XCK edge, RxD Sample:- Rising XCK edge" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order">
              <edc:SFRFieldSemantic edc:cname="MSB" edc:desc="MSB is transmitted first." edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LSB" edc:desc="LSB is transmitted first." edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="------nnnn----nn--n--nnn-n---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3C32747" edc:addr="0x42001004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 Bits" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 Bits" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="5_BIT" edc:desc="5 Bits" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="6_BIT" edc:desc="6 Bits" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="7_BIT" edc:desc="7 Bits" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SBMODE" edc:nzwidth="0x1" edc:desc="Stop Bit Mode">
              <edc:SFRFieldSemantic edc:cname="1_BIT" edc:desc="One Stop Bit" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2_BIT" edc:desc="Two Stop Bits" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="COLDEN" edc:nzwidth="0x1" edc:desc="Collision Detection Enable"/>
            <edc:SFRFieldDef edc:cname="SFDE" edc:nzwidth="0x1" edc:desc="Start of Frame Detection Enable"/>
            <edc:SFRFieldDef edc:cname="ENC" edc:nzwidth="0x1" edc:desc="Encoding Format">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Data is not encoded" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IRDA" edc:desc="Data is IrDA encoded" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PMODE" edc:nzwidth="0x1" edc:desc="Parity Mode">
              <edc:SFRFieldSemantic edc:cname="EVEN" edc:desc="Even Parity" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ODD" edc:desc="Odd Parity" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TXEN" edc:nzwidth="0x1" edc:desc="Transmitter Enable"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="FIFOCLR" edc:nzwidth="0x2" edc:desc="FIFO Clear">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TXFIFO" edc:desc="Clear TX FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RXFIFO" edc:desc="Clear RX FIFO" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Clear both TX and RF FIFOs" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LINCMD" edc:nzwidth="0x2" edc:desc="LIN Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Normal USART transmission" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SOFTWARE_CONTROL_TRANSMIT_CMD" edc:desc="Break field is transmitted when DATA is written" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="AUTO_TRANSMIT_CMD" edc:desc="Break, sync and identifier are automatically transmitted when DATA is written with the identifier" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="nnnnn-nn-nnn--nn----nnnn-----nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFB730F07" edc:addr="0x42001008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="GTIME" edc:nzwidth="0x3" edc:desc="Guard Time"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="BRKLEN" edc:nzwidth="0x2" edc:desc="LIN Master Break Length">
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="Break field transmission is 13 bit times" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="17_BIT" edc:desc="Break field transmission is 17 bit times" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="21_BIT" edc:desc="Break field transmission is 21 bit times" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="26_BIT" edc:desc="Break field transmission is 26 bit times" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="HDRDLY" edc:nzwidth="0x2" edc:desc="LIN Master Header Delay">
              <edc:SFRFieldSemantic edc:cname="DELAY0" edc:desc="Delay between break and sync transmission is 1 bit time; Delay between sync and ID transmission is 1 bit time" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DELAY1" edc:desc="Delay between break and sync transmission is 4 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="DELAY2" edc:desc="Delay between break and sync transmission is 8 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="DELAY3" edc:desc="Delay between break and sync transmission is 14 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="INACK" edc:nzwidth="0x1" edc:desc="Inhibit Not Acknowledge"/>
            <edc:SFRFieldDef edc:cname="DSNACK" edc:nzwidth="0x1" edc:desc="Disable Successive NACK"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MAXITER" edc:nzwidth="0x3" edc:desc="Maximum Iterations"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x2" edc:desc="Data 32 Bit">
              <edc:SFRFieldSemantic edc:cname="0x0" edc:desc="Reads and writes with CHSIZE" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="0x1" edc:desc="Reads with CHSIZE, writes with 32-bit extension" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="0x2" edc:desc="Reads with 32-bit extension, writes with CHSIZE" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="0x3" edc:desc="Reads and writes with 32-bit extension" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="RXTRHOLD" edc:nzwidth="0x2" edc:desc="Receive FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated when DATA is present in the FIFO" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when FIFO is half-full" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FULL" edc:desc="Interrupt and DMA triggers are generated when FIFO is full" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXTRHOLD" edc:nzwidth="0x2" edc:desc="Transmit FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is not full" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when half FIFO space is free" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EMPTY" edc:desc="Interrupt and DMA triggers are generated when the FIFO is empty" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="BAUD" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x4200100C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x10" edc:desc="Baud Rate Value"/>
            <edc:AdjustPoint edc:offset="-3"/>
            <edc:SFRFieldDef edc:cname="FP" edc:nzwidth="0x3" edc:desc="Fractional Part"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="RXPL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4200100E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="RXPL" edc:nzwidth="0x8" edc:desc="Receive Pulse Length"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42001014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42001016">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42001018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="--------nnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xFF" edc:addr="0x4200101A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Parity Error"/>
            <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Frame Error"/>
            <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
            <edc:SFRFieldDef edc:cname="CTS" edc:nzwidth="0x1" edc:desc="Clear To Send"/>
            <edc:SFRFieldDef edc:cname="ISF" edc:nzwidth="0x1" edc:desc="Inconsistent Sync Field"/>
            <edc:SFRFieldDef edc:cname="COLL" edc:nzwidth="0x1" edc:desc="Collision Detected"/>
            <edc:SFRFieldDef edc:cname="TXE" edc:nzwidth="0x1" edc:desc="Transmitter Empty"/>
            <edc:SFRFieldDef edc:cname="ITER" edc:nzwidth="0x1" edc:desc="Maximum Number of Repetitions Reached"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="---------------------------rrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:addr="0x4200101C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="RXERRCNT" edc:nzwidth="0x1" edc:desc="RXERRCNT Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="LENGTH" edc:nzwidth="0x1" edc:desc="LENGTH Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="RXERRCNT" edc:nzwidth="0x8" edc:access="rrrrrrrr" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42001020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="RXERRCNT" edc:nzwidth="0x8" edc:desc="Receive Error Count"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="LENGTH" edc:nzwidth="0x10" edc:access="------nnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x3FF" edc:addr="0x42001022">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x2" edc:desc="Data Length Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Length counter is disabled" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TX" edc:desc="Length counter is enabled for transmit" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RX" edc:desc="Length counter is enabled for receive" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42001028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x42001030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="FIFOSPACE" edc:nzwidth="0x10" edc:access="---rrrrr---rrrrr" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1F1F" edc:addr="0x42001034">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="TXSPACE" edc:nzwidth="0x5" edc:desc="Tx FIFO Empty Space"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RXSPACE" edc:nzwidth="0x5" edc:desc="Rx FIFO Filled Space"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="FIFOPTR" edc:nzwidth="0x10" edc:access="----nnnn----nnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xF0F" edc:addr="0x42001036">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="CPUWRPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Write Pointer"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CPURDPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Read Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM4/I2CM">
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnn-nnnnnn---n--------n--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7BF1009F" edc:addr="0x42001400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="I2C_MASTER" edc:desc="I2C master operation" edc:when="(field &amp; 0x7) == 0x5"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="PINOUT" edc:nzwidth="0x1" edc:desc="Pin Usage"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SDAHOLD" edc:nzwidth="0x2" edc:desc="SDA Hold Time">
              <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disabled" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="75NS" edc:desc="50-100ns hold time" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="450NS" edc:desc="300-600ns hold time" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="600NS" edc:desc="400-800ns hold time" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MEXTTOEN" edc:nzwidth="0x1" edc:desc="Master SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="SEXTTOEN" edc:nzwidth="0x1" edc:desc="Slave SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="SPEED" edc:nzwidth="0x2" edc:desc="Transfer Speed">
              <edc:SFRFieldSemantic edc:cname="SM" edc:desc="Standard-Mode (SM) and Fast-Mode (FM)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FMP" edc:desc="Fast-Mode Plus (FM+)" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="HS" edc:desc="High-Speed Mode" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SCLSM" edc:nzwidth="0x1" edc:desc="SCL Clock Stretch Mode"/>
            <edc:SFRFieldDef edc:cname="INACTOUT" edc:nzwidth="0x2" edc:desc="Inactive Time-Out">
              <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disable" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="55US" edc:desc="5-6 SCL cycle time-out" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="105US" edc:desc="10-11 SCL cycle time-out" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="205US" edc:desc="20-21 SCL cycle time-out" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LOWTOUTEN" edc:nzwidth="0x1" edc:desc="SCL Low Timeout Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="--------nn---nnn------nn--------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC70300" edc:addr="0x42001404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="SMEN" edc:nzwidth="0x1" edc:desc="Smart Mode Enable"/>
            <edc:SFRFieldDef edc:cname="QCEN" edc:nzwidth="0x1" edc:desc="Quick Command Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Command"/>
            <edc:SFRFieldDef edc:cname="ACKACT" edc:nzwidth="0x1" edc:desc="Acknowledge Action"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="FIFOCLR" edc:nzwidth="0x2" edc:desc="FIFO Clear">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TXFIFO" edc:desc="Clear TX FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RXFIFO" edc:desc="Clear RX FIFO" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Clear both TX and RF FIFOs" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="nnnnn--n------------------------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF9000000" edc:addr="0x42001408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:AdjustPoint edc:offset="0x18"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x1" edc:desc="Data 32 Bit"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="RXTRHOLD" edc:nzwidth="0x2" edc:desc="Receive FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated when DATA is present in the FIFO" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when FIFO is half-full" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FULL" edc:desc="Interrupt and DMA triggers are generated when FIFO is full" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXTRHOLD" edc:nzwidth="0x2" edc:desc="Transmit FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is not full" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when half FIFO space is free" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EMPTY" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is not full" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="BAUD" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x4200140C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x8" edc:desc="Baud Rate Value"/>
            <edc:SFRFieldDef edc:cname="BAUDLOW" edc:nzwidth="0x8" edc:desc="Baud Rate Value Low"/>
            <edc:SFRFieldDef edc:cname="HSBAUD" edc:nzwidth="0x8" edc:desc="High Speed Baud Rate Value"/>
            <edc:SFRFieldDef edc:cname="HSBAUDLOW" edc:nzwidth="0x8" edc:desc="High Speed Baud Rate Value Low"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n--nn-nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x9B" edc:addr="0x42001414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="MB" edc:nzwidth="0x1" edc:desc="Master On Bus Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SB" edc:nzwidth="0x1" edc:desc="Slave On Bus Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFE" edc:nzwidth="0x1" edc:desc="Tx FIFO Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFF" edc:nzwidth="0x1" edc:desc="Rx FIFO Full Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n--nn-nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x9B" edc:addr="0x42001416">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="MB" edc:nzwidth="0x1" edc:desc="Master On Bus Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SB" edc:nzwidth="0x1" edc:desc="Slave On Bus Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFE" edc:nzwidth="0x1" edc:desc="Tx FIFO Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFF" edc:nzwidth="0x1" edc:desc="Rx FIFO Full Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n--nn-nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x9B" edc:addr="0x42001418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="MB" edc:nzwidth="0x1" edc:desc="Master On Bus Interrupt"/>
            <edc:SFRFieldDef edc:cname="SB" edc:nzwidth="0x1" edc:desc="Slave On Bus Interrupt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFE" edc:nzwidth="0x1" edc:desc="Tx FIFO Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXFF" edc:nzwidth="0x1" edc:desc="Rx FIFO Full Interrupt"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="-----nnnnnnn-nnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x7F7" edc:addr="0x4200141A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="BUSERR" edc:nzwidth="0x1" edc:desc="Bus Error"/>
            <edc:SFRFieldDef edc:cname="ARBLOST" edc:nzwidth="0x1" edc:desc="Arbitration Lost"/>
            <edc:SFRFieldDef edc:cname="RXNACK" edc:nzwidth="0x1" edc:desc="Received Not Acknowledge"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BUSSTATE" edc:nzwidth="0x2" edc:desc="Bus State">
              <edc:SFRFieldSemantic edc:cname="UNKNOWN" edc:desc="Wait for stop or idle" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IDLE" edc:desc="Wait for transaction initialization" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="OWNER" edc:desc="I2C master is the current owner of the bus" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="BUSY" edc:desc="Some other I2C master owns the bus" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LOWTOUT" edc:nzwidth="0x1" edc:desc="SCL Low Timeout"/>
            <edc:SFRFieldDef edc:cname="CLKHOLD" edc:nzwidth="0x1" edc:desc="Clock Hold"/>
            <edc:SFRFieldDef edc:cname="MEXTTOUT" edc:nzwidth="0x1" edc:desc="Master SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="SEXTTOUT" edc:nzwidth="0x1" edc:desc="Slave SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="LENERR" edc:nzwidth="0x1" edc:desc="Length Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="-----------------------------rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7" edc:addr="0x4200141C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="SYSOP" edc:nzwidth="0x1" edc:desc="System Operation Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnn--nnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFE7FF" edc:addr="0x42001424">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0xB" edc:desc="Address Value"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x1" edc:desc="Length Enable"/>
            <edc:SFRFieldDef edc:cname="HS" edc:nzwidth="0x1" edc:desc="High Speed Mode"/>
            <edc:SFRFieldDef edc:cname="TENBITEN" edc:nzwidth="0x1" edc:desc="Ten Bit Addressing Enable"/>
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Length"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42001428">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x42001430">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="FIFOSPACE" edc:nzwidth="0x10" edc:access="---rrrrr---rrrrr" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1F1F" edc:addr="0x42001434">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="TXSPACE" edc:nzwidth="0x5" edc:desc="Tx FIFO Empty Space"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RXSPACE" edc:nzwidth="0x5" edc:desc="Rx FIFO Filled Space"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="FIFOPTR" edc:nzwidth="0x10" edc:access="----nnnn----nnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xF0F" edc:addr="0x42001436">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="CPUWRPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Write Pointer"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CPURDPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Read Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM4/I2CS">
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-n--n-nnn-nn---n--------n--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x4BB1009F" edc:addr="0x42001400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="I2C_SLAVE" edc:desc="I2C slave operation" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="PINOUT" edc:nzwidth="0x1" edc:desc="Pin Usage"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SDAHOLD" edc:nzwidth="0x2" edc:desc="SDA Hold Time">
              <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disabled" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="75NS" edc:desc="50-100ns hold time" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="450NS" edc:desc="300-600ns hold time" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="600NS" edc:desc="400-800ns hold time" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SEXTTOEN" edc:nzwidth="0x1" edc:desc="Slave SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="SPEED" edc:nzwidth="0x2" edc:desc="Transfer Speed">
              <edc:SFRFieldSemantic edc:cname="SM" edc:desc="Standard-Mode (SM) and Fast-Mode (FM)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FMP" edc:desc="Fast-Mode Plus (FM+)" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="HS" edc:desc="High-Speed Mode" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SCLSM" edc:nzwidth="0x1" edc:desc="SCL Clock Stretch Mode"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="LOWTOUTEN" edc:nzwidth="0x1" edc:desc="SCL Low Timeout Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="--------nn---nnnnn---nnn--------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC7C700" edc:addr="0x42001404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="SMEN" edc:nzwidth="0x1" edc:desc="Smart Mode Enable"/>
            <edc:SFRFieldDef edc:cname="GCMD" edc:nzwidth="0x1" edc:desc="PMBus Group Command"/>
            <edc:SFRFieldDef edc:cname="AACKEN" edc:nzwidth="0x1" edc:desc="Automatic Address Acknowledge"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="AMODE" edc:nzwidth="0x2" edc:desc="Address Mode">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="The slave responds to the address written in ADDR.ADDR masked by the value in ADDR.ADDRMASK" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2ADDRS" edc:desc="The slave responds to the two unique addresses in ADDR and ADDRMASK" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RANGE" edc:desc="The slave responds to the range of addresses between and including ADDR and ADDRMASK. ADDR is the upper limit" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Command"/>
            <edc:SFRFieldDef edc:cname="ACKACT" edc:nzwidth="0x1" edc:desc="Acknowledge Action"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="FIFOCLR" edc:nzwidth="0x2" edc:desc="FIFO Clear">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TXFIFO" edc:desc="Clear TX FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RXFIFO" edc:desc="Clear RX FIFO" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Clear both TX and RF FIFOs" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="nnnnn--n--------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF900000F" edc:addr="0x42001408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="SDASETUP" edc:nzwidth="0x4" edc:desc="SDA Setup Time"/>
            <edc:AdjustPoint edc:offset="0x14"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x1" edc:desc="Data 32 Bit"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="RXTRHOLD" edc:nzwidth="0x2" edc:desc="Receive FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated when DATA is present in the FIFO" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when FIFO is half-full" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FULL" edc:desc="Interrupt and DMA triggers are generated when FIFO is full" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXTRHOLD" edc:nzwidth="0x2" edc:desc="Transmit FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is not full" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when half FIFO space is free" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EMPTY" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is not full" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n--nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x9F" edc:addr="0x42001414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="PREC" edc:nzwidth="0x1" edc:desc="Stop Received Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="AMATCH" edc:nzwidth="0x1" edc:desc="Address Match Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="DRDY" edc:nzwidth="0x1" edc:desc="Data Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFE" edc:nzwidth="0x1" edc:desc="Tx FIFO Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFF" edc:nzwidth="0x1" edc:desc="Rx FIFO Full Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n--nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x9F" edc:addr="0x42001416">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="PREC" edc:nzwidth="0x1" edc:desc="Stop Received Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="AMATCH" edc:nzwidth="0x1" edc:desc="Address Match Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DRDY" edc:nzwidth="0x1" edc:desc="Data Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFE" edc:nzwidth="0x1" edc:desc="Tx FIFO Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFF" edc:nzwidth="0x1" edc:desc="Rx FIFO Full Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n--nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x9F" edc:addr="0x42001418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="PREC" edc:nzwidth="0x1" edc:desc="Stop Received Interrupt"/>
            <edc:SFRFieldDef edc:cname="AMATCH" edc:nzwidth="0x1" edc:desc="Address Match Interrupt"/>
            <edc:SFRFieldDef edc:cname="DRDY" edc:nzwidth="0x1" edc:desc="Data Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXFE" edc:nzwidth="0x1" edc:desc="Tx FIFO Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXFF" edc:nzwidth="0x1" edc:desc="Rx FIFO Full Interrupt"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="----nnn-nn-nnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xEDF" edc:addr="0x4200141A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="BUSERR" edc:nzwidth="0x1" edc:desc="Bus Error"/>
            <edc:SFRFieldDef edc:cname="COLL" edc:nzwidth="0x1" edc:desc="Transmit Collision"/>
            <edc:SFRFieldDef edc:cname="RXNACK" edc:nzwidth="0x1" edc:desc="Received Not Acknowledge"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Read/Write Direction"/>
            <edc:SFRFieldDef edc:cname="SR" edc:nzwidth="0x1" edc:desc="Repeated Start"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LOWTOUT" edc:nzwidth="0x1" edc:desc="SCL Low Timeout"/>
            <edc:SFRFieldDef edc:cname="CLKHOLD" edc:nzwidth="0x1" edc:desc="Clock Hold"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SEXTTOUT" edc:nzwidth="0x1" edc:desc="Slave SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="HS" edc:nzwidth="0x1" edc:desc="High Speed"/>
            <edc:SFRFieldDef edc:cname="LENERR" edc:nzwidth="0x1" edc:desc="Transaction Length Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="---------------------------r-rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x17" edc:addr="0x4200141C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="SYSOP" edc:nzwidth="0x1" edc:desc="System Operation Synchronization Busy"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LENGTH" edc:nzwidth="0x1" edc:desc="Length Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="LENGTH" edc:nzwidth="0x10" edc:access="-------nnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1FF" edc:addr="0x42001422">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x1" edc:desc="Data Length Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="-----nnnnnnnnnn-n----nnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FE87FF" edc:addr="0x42001424">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="GENCEN" edc:nzwidth="0x1" edc:desc="General Call Address Enable"/>
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0xA" edc:desc="Address Value"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TENBITEN" edc:nzwidth="0x1" edc:desc="Ten Bit Addressing Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ADDRMASK" edc:nzwidth="0xA" edc:desc="Address Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42001428">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="FIFOSPACE" edc:nzwidth="0x10" edc:access="---rrrrr---rrrrr" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1F1F" edc:addr="0x42001434">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="TXSPACE" edc:nzwidth="0x5" edc:desc="Tx FIFO Empty Space"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RXSPACE" edc:nzwidth="0x5" edc:desc="Rx FIFO Filled Space"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="FIFOPTR" edc:nzwidth="0x10" edc:access="----nnnn----nnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xF0F" edc:addr="0x42001436">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="CPUWRPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Write Pointer"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CPURDPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Read Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM4/SPIM">
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnnnnn--nn--nn-------nn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7F33019F" edc:addr="0x42001400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="SPI_MASTER" edc:desc="SPI in master operation" edc:when="(field &amp; 0x7) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="IBON" edc:nzwidth="0x1" edc:desc="Immediate Buffer Overflow Notification">
              <edc:SFRFieldSemantic edc:cname="0x0" edc:desc="STATUS.BUFOVF is set when it occurs in the data stream" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="0x1" edc:desc="STATUS.BUFOVF is set immediately upon buffer overflow" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DOPO" edc:nzwidth="0x2" edc:desc="Data Out Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="DO on PAD[0], SCK on PAD[1] and SS on PAD[2]" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="DO on PAD[3], SCK on PAD[1] and SS on PAD[2]" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DIPO" edc:nzwidth="0x2" edc:desc="Data In Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="SERCOM PAD[0] is used as data input" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="SERCOM PAD[1] is used as data input" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="SERCOM PAD[2] is used as data input" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="SERCOM PAD[3] is used as data input" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FORM" edc:nzwidth="0x4" edc:desc="Frame Format">
              <edc:SFRFieldSemantic edc:cname="SPI_FRAME" edc:desc="SPI Frame" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SPI_FRAME_WITH_ADDR" edc:desc="SPI Frame with Addr" edc:when="(field &amp; 0xF) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPHA" edc:nzwidth="0x1" edc:desc="Clock Phase">
              <edc:SFRFieldSemantic edc:cname="LEADING_EDGE" edc:desc="The data is sampled on a leading SCK edge and changed on a trailing SCK edge" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TRAILING_EDGE" edc:desc="The data is sampled on a trailing SCK edge and changed on a leading SCK edge" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity">
              <edc:SFRFieldSemantic edc:cname="IDLE_LOW" edc:desc="SCK is low when idle" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IDLE_HIGH" edc:desc="SCK is high when idle" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order">
              <edc:SFRFieldSemantic edc:cname="MSB" edc:desc="MSB is transmitted first" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LSB" edc:desc="LSB is transmitted first" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="--------nn----n-nnn---n--n---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC2E247" edc:addr="0x42001404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits" edc:when="(field &amp; 0x7) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PLOADEN" edc:nzwidth="0x1" edc:desc="Data Preload Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SSDE" edc:nzwidth="0x1" edc:desc="Slave Select Low Detect Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="SS low detector is disabled" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="SS low detector is enabled" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="MSSEN" edc:nzwidth="0x1" edc:desc="Master Slave Select Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Hardware SS control is disabled" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="Hardware SS control is enabled" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AMODE" edc:nzwidth="0x2" edc:desc="Address Mode">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="ADDRMASK is used as a mask to the AADR register" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2ADDRS" edc:desc="The slave responds to the two unique addresses in ADDR and ADDRMASK" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RANGE" edc:desc="The slave responds to the range of addresses between and including ADDR and ADDRMASK. ADDR is the upper limit" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="FIFOCLR" edc:nzwidth="0x2" edc:desc="FIFO Clear">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TXFIFO" edc:desc="Clear TX FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RXFIFO" edc:desc="Clear RX FIFO" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Clear both TX and RF FIFOs" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="nnnnn--n------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF900003F" edc:addr="0x42001408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="ICSPACE" edc:nzwidth="0x6" edc:desc="Inter-Character Spacing"/>
            <edc:AdjustPoint edc:offset="0x12"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x1" edc:desc="Data 32 Bit"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="RXTRHOLD" edc:nzwidth="0x2" edc:desc="Receive FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated when DATA is present in the FIFO" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when FIFO is half-full" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FULL" edc:desc="Interrupt and DMA triggers are generated when FIFO is full" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXTRHOLD" edc:nzwidth="0x2" edc:desc="Transmit FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is not full" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when half FIFO space is free" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EMPTY" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is empty" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="BAUD" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4200140C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x8" edc:desc="Baud Rate Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42001414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42001416">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42001418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Flag"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="----n--------n--" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x804" edc:addr="0x4200141A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="LENERR" edc:nzwidth="0x1" edc:desc="Transaction Length Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="---------------------------r-rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x17" edc:addr="0x4200141C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB Synchronization Busy"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LENGTH" edc:nzwidth="0x1" edc:desc="LENGTH Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="LENGTH" edc:nzwidth="0x10" edc:access="-------nnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1FF" edc:addr="0x42001422">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x1" edc:desc="Data Length Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="--------nnnnnnnn--------nnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF00FF" edc:addr="0x42001424">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0x8" edc:desc="Address Value"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="ADDRMASK" edc:nzwidth="0x8" edc:desc="Address Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42001428">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x42001430">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="FIFOSPACE" edc:nzwidth="0x10" edc:access="---rrrrr---rrrrr" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1F1F" edc:addr="0x42001434">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="TXSPACE" edc:nzwidth="0x5" edc:desc="Tx FIFO Empty Space"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RXSPACE" edc:nzwidth="0x5" edc:desc="Rx FIFO Filled Space"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="FIFOPTR" edc:nzwidth="0x10" edc:access="----nnnn----nnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xF0F" edc:addr="0x42001436">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="CPUWRPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Write Pointer"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CPURDPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Read Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM4/SPIS">
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnnnnn--nn--nn-------nn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7F33019F" edc:addr="0x42001400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="SPI_SLAVE" edc:desc="SPI in slave operation" edc:when="(field &amp; 0x7) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="IBON" edc:nzwidth="0x1" edc:desc="Immediate Buffer Overflow Notification">
              <edc:SFRFieldSemantic edc:cname="0x0" edc:desc="STATUS.BUFOVF is set when it occurs in the data stream" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="0x1" edc:desc="STATUS.BUFOVF is set immediately upon buffer overflow" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DOPO" edc:nzwidth="0x2" edc:desc="Data Out Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="DO on PAD[0], SCK on PAD[1] and SS on PAD[2]" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="DO on PAD[3], SCK on PAD[1] and SS on PAD[2]" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DIPO" edc:nzwidth="0x2" edc:desc="Data In Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="SERCOM PAD[0] is used as data input" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="SERCOM PAD[1] is used as data input" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="SERCOM PAD[2] is used as data input" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="SERCOM PAD[3] is used as data input" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FORM" edc:nzwidth="0x4" edc:desc="Frame Format">
              <edc:SFRFieldSemantic edc:cname="SPI_FRAME" edc:desc="SPI Frame" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SPI_FRAME_WITH_ADDR" edc:desc="SPI Frame with Addr" edc:when="(field &amp; 0xF) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPHA" edc:nzwidth="0x1" edc:desc="Clock Phase">
              <edc:SFRFieldSemantic edc:cname="LEADING_EDGE" edc:desc="The data is sampled on a leading SCK edge and changed on a trailing SCK edge" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TRAILING_EDGE" edc:desc="The data is sampled on a trailing SCK edge and changed on a leading SCK edge" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity">
              <edc:SFRFieldSemantic edc:cname="IDLE_LOW" edc:desc="SCK is low when idle" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IDLE_HIGH" edc:desc="SCK is high when idle" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order">
              <edc:SFRFieldSemantic edc:cname="MSB" edc:desc="MSB is transmitted first" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LSB" edc:desc="LSB is transmitted first" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="--------nn----n-nnn---n--n---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC2E247" edc:addr="0x42001404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits" edc:when="(field &amp; 0x7) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PLOADEN" edc:nzwidth="0x1" edc:desc="Data Preload Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SSDE" edc:nzwidth="0x1" edc:desc="Slave Select Low Detect Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="SS low detector is disabled" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="SS low detector is enabled" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="MSSEN" edc:nzwidth="0x1" edc:desc="Master Slave Select Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Hardware SS control is disabled" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="Hardware SS control is enabled" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AMODE" edc:nzwidth="0x2" edc:desc="Address Mode">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="ADDRMASK is used as a mask to the AADR register" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2ADDRS" edc:desc="The slave responds to the two unique addresses in ADDR and ADDRMASK" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RANGE" edc:desc="The slave responds to the range of addresses between and including ADDR and ADDRMASK. ADDR is the upper limit" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="FIFOCLR" edc:nzwidth="0x2" edc:desc="FIFO Clear">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TXFIFO" edc:desc="Clear TX FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RXFIFO" edc:desc="Clear RX FIFO" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Clear both TX and RF FIFOs" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="nnnnn--n------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF900003F" edc:addr="0x42001408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="ICSPACE" edc:nzwidth="0x6" edc:desc="Inter-Character Spacing"/>
            <edc:AdjustPoint edc:offset="0x12"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x1" edc:desc="Data 32 Bit"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="RXTRHOLD" edc:nzwidth="0x2" edc:desc="Receive FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated when DATA is present in the FIFO" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when FIFO is half-full" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FULL" edc:desc="Interrupt and DMA triggers are generated when FIFO is full" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXTRHOLD" edc:nzwidth="0x2" edc:desc="Transmit FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is not full" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when half FIFO space is free" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EMPTY" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is empty" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="BAUD" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4200140C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x8" edc:desc="Baud Rate Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42001414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42001416">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42001418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Flag"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="----n--------n--" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x804" edc:addr="0x4200141A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="LENERR" edc:nzwidth="0x1" edc:desc="Transaction Length Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="---------------------------r-rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x17" edc:addr="0x4200141C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB Synchronization Busy"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LENGTH" edc:nzwidth="0x1" edc:desc="LENGTH Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="LENGTH" edc:nzwidth="0x10" edc:access="-------nnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1FF" edc:addr="0x42001422">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x1" edc:desc="Data Length Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="--------nnnnnnnn--------nnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF00FF" edc:addr="0x42001424">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0x8" edc:desc="Address Value"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="ADDRMASK" edc:nzwidth="0x8" edc:desc="Address Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42001428">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x42001430">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="FIFOSPACE" edc:nzwidth="0x10" edc:access="---rrrrr---rrrrr" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1F1F" edc:addr="0x42001434">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="TXSPACE" edc:nzwidth="0x5" edc:desc="Tx FIFO Empty Space"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RXSPACE" edc:nzwidth="0x5" edc:desc="Rx FIFO Filled Space"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="FIFOPTR" edc:nzwidth="0x10" edc:access="----nnnn----nnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xF0F" edc:addr="0x42001436">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="CPUWRPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Write Pointer"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CPURDPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Read Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM4/USART_EXT">
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnnnnnnnnn--nnnnn--nnnn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FF3E79F" edc:addr="0x42001400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="USART_EXT_CLK" edc:desc="USART with external clock" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="USART_INT_CLK" edc:desc="USART with internal clock" edc:when="(field &amp; 0x7) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="IBON" edc:nzwidth="0x1" edc:desc="Immediate Buffer Overflow Notification"/>
            <edc:SFRFieldDef edc:cname="TXINV" edc:nzwidth="0x1" edc:desc="Transmit Data Invert">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="TxD is not inverted" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INV" edc:desc="TxD is inverted" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RXINV" edc:nzwidth="0x1" edc:desc="Receive Data Invert">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="RxD is not inverted" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INV" edc:desc="RxD is inverted" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SAMPR" edc:nzwidth="0x3" edc:desc="Sample">
              <edc:SFRFieldSemantic edc:cname="16X_ARITHMETIC" edc:desc="16x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="16X_FRACTIONAL" edc:desc="16x over-sampling using fractional baudrate generation" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="8X_ARITHMETIC" edc:desc="8x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="8X_FRACTIONAL" edc:desc="8x over-sampling using fractional baudrate generation" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="3X_ARITHMETIC" edc:desc="3x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXPO" edc:nzwidth="0x2" edc:desc="Transmit Data Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="PAD[0] = TxD; PAD[1] = XCK" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="PAD[0] = TxD; PAD[2] = RTS; PAD[3] = CTS" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="PAD[0] = TxD; PAD[1] = XCK; PAD[2] = TE" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXPO" edc:nzwidth="0x2" edc:desc="Receive Data Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="SERCOM PAD[0] is used for data reception" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="SERCOM PAD[1] is used for data reception" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="SERCOM PAD[2] is used for data reception" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="SERCOM PAD[3] is used for data reception" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SAMPA" edc:nzwidth="0x2" edc:desc="Sample Adjustment">
              <edc:SFRFieldSemantic edc:cname="ADJ0" edc:desc="16x Over-sampling = 7-8-9; 8x Over-sampling = 3-4-5" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ADJ1" edc:desc="16x Over-sampling = 9-10-11; 8x Over-sampling = 4-5-6" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="ADJ2" edc:desc="16x Over-sampling = 11-12-13; 8x Over-sampling = 5-6-7" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="ADJ3" edc:desc="16x Over-sampling = 13-14-15; 8x Over-sampling = 6-7-8" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FORM" edc:nzwidth="0x4" edc:desc="Frame Format">
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_NO_PARITY" edc:desc="USART frame" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_WITH_PARITY" edc:desc="USART frame with parity" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_LINBRKGEN" edc:desc="LIN Master Break and Sync generation" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_AUTO_BAUD_NO_PARITY" edc:desc="Auto-baud (LIN Slave) - break detection and auto-baud" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_AUTO_BAUD_WITH_PARITY" edc:desc="Auto-baud - break detection and auto-baud with parity" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_ISO_7816" edc:desc="ISO 7816" edc:when="(field &amp; 0xF) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMODE" edc:nzwidth="0x1" edc:desc="Communication Mode">
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Asynchronous communication." edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Synchronous communication." edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity">
              <edc:SFRFieldSemantic edc:cname="IDLE_LOW" edc:desc="TxD Change:- Rising XCK edge, RxD Sample:- Falling XCK edge" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IDLE_HIGH" edc:desc="TxD Change:- Falling XCK edge, RxD Sample:- Rising XCK edge" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order">
              <edc:SFRFieldSemantic edc:cname="MSB" edc:desc="MSB is transmitted first." edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LSB" edc:desc="LSB is transmitted first." edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="------nnnn----nn--n--nnn-n---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3C32747" edc:addr="0x42001404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 Bits" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 Bits" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="5_BIT" edc:desc="5 Bits" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="6_BIT" edc:desc="6 Bits" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="7_BIT" edc:desc="7 Bits" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SBMODE" edc:nzwidth="0x1" edc:desc="Stop Bit Mode">
              <edc:SFRFieldSemantic edc:cname="1_BIT" edc:desc="One Stop Bit" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2_BIT" edc:desc="Two Stop Bits" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="COLDEN" edc:nzwidth="0x1" edc:desc="Collision Detection Enable"/>
            <edc:SFRFieldDef edc:cname="SFDE" edc:nzwidth="0x1" edc:desc="Start of Frame Detection Enable"/>
            <edc:SFRFieldDef edc:cname="ENC" edc:nzwidth="0x1" edc:desc="Encoding Format">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Data is not encoded" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IRDA" edc:desc="Data is IrDA encoded" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PMODE" edc:nzwidth="0x1" edc:desc="Parity Mode">
              <edc:SFRFieldSemantic edc:cname="EVEN" edc:desc="Even Parity" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ODD" edc:desc="Odd Parity" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TXEN" edc:nzwidth="0x1" edc:desc="Transmitter Enable"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="FIFOCLR" edc:nzwidth="0x2" edc:desc="FIFO Clear">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TXFIFO" edc:desc="Clear TX FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RXFIFO" edc:desc="Clear RX FIFO" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Clear both TX and RF FIFOs" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LINCMD" edc:nzwidth="0x2" edc:desc="LIN Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Normal USART transmission" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SOFTWARE_CONTROL_TRANSMIT_CMD" edc:desc="Break field is transmitted when DATA is written" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="AUTO_TRANSMIT_CMD" edc:desc="Break, sync and identifier are automatically transmitted when DATA is written with the identifier" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="nnnnn-nn-nnn--nn----nnnn-----nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFB730F07" edc:addr="0x42001408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="GTIME" edc:nzwidth="0x3" edc:desc="Guard Time"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="BRKLEN" edc:nzwidth="0x2" edc:desc="LIN Master Break Length">
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="Break field transmission is 13 bit times" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="17_BIT" edc:desc="Break field transmission is 17 bit times" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="21_BIT" edc:desc="Break field transmission is 21 bit times" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="26_BIT" edc:desc="Break field transmission is 26 bit times" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="HDRDLY" edc:nzwidth="0x2" edc:desc="LIN Master Header Delay">
              <edc:SFRFieldSemantic edc:cname="DELAY0" edc:desc="Delay between break and sync transmission is 1 bit time; Delay between sync and ID transmission is 1 bit time" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DELAY1" edc:desc="Delay between break and sync transmission is 4 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="DELAY2" edc:desc="Delay between break and sync transmission is 8 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="DELAY3" edc:desc="Delay between break and sync transmission is 14 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="INACK" edc:nzwidth="0x1" edc:desc="Inhibit Not Acknowledge"/>
            <edc:SFRFieldDef edc:cname="DSNACK" edc:nzwidth="0x1" edc:desc="Disable Successive NACK"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MAXITER" edc:nzwidth="0x3" edc:desc="Maximum Iterations"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x2" edc:desc="Data 32 Bit">
              <edc:SFRFieldSemantic edc:cname="0x0" edc:desc="Reads and writes with CHSIZE" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="0x1" edc:desc="Reads with CHSIZE, writes with 32-bit extension" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="0x2" edc:desc="Reads with 32-bit extension, writes with CHSIZE" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="0x3" edc:desc="Reads and writes with 32-bit extension" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="RXTRHOLD" edc:nzwidth="0x2" edc:desc="Receive FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated when DATA is present in the FIFO" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when FIFO is half-full" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FULL" edc:desc="Interrupt and DMA triggers are generated when FIFO is full" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXTRHOLD" edc:nzwidth="0x2" edc:desc="Transmit FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is not full" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when half FIFO space is free" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EMPTY" edc:desc="Interrupt and DMA triggers are generated when the FIFO is empty" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="BAUD" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x4200140C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x10" edc:desc="Baud Rate Value"/>
            <edc:AdjustPoint edc:offset="-3"/>
            <edc:SFRFieldDef edc:cname="FP" edc:nzwidth="0x3" edc:desc="Fractional Part"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="RXPL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4200140E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="RXPL" edc:nzwidth="0x8" edc:desc="Receive Pulse Length"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42001414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42001416">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42001418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="--------nnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xFF" edc:addr="0x4200141A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Parity Error"/>
            <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Frame Error"/>
            <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
            <edc:SFRFieldDef edc:cname="CTS" edc:nzwidth="0x1" edc:desc="Clear To Send"/>
            <edc:SFRFieldDef edc:cname="ISF" edc:nzwidth="0x1" edc:desc="Inconsistent Sync Field"/>
            <edc:SFRFieldDef edc:cname="COLL" edc:nzwidth="0x1" edc:desc="Collision Detected"/>
            <edc:SFRFieldDef edc:cname="TXE" edc:nzwidth="0x1" edc:desc="Transmitter Empty"/>
            <edc:SFRFieldDef edc:cname="ITER" edc:nzwidth="0x1" edc:desc="Maximum Number of Repetitions Reached"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="---------------------------rrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:addr="0x4200141C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="RXERRCNT" edc:nzwidth="0x1" edc:desc="RXERRCNT Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="LENGTH" edc:nzwidth="0x1" edc:desc="LENGTH Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="RXERRCNT" edc:nzwidth="0x8" edc:access="rrrrrrrr" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42001420">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="RXERRCNT" edc:nzwidth="0x8" edc:desc="Receive Error Count"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="LENGTH" edc:nzwidth="0x10" edc:access="------nnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x3FF" edc:addr="0x42001422">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x2" edc:desc="Data Length Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Length counter is disabled" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TX" edc:desc="Length counter is enabled for transmit" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RX" edc:desc="Length counter is enabled for receive" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42001428">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x42001430">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="FIFOSPACE" edc:nzwidth="0x10" edc:access="---rrrrr---rrrrr" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1F1F" edc:addr="0x42001434">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="TXSPACE" edc:nzwidth="0x5" edc:desc="Tx FIFO Empty Space"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RXSPACE" edc:nzwidth="0x5" edc:desc="Rx FIFO Filled Space"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="FIFOPTR" edc:nzwidth="0x10" edc:access="----nnnn----nnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xF0F" edc:addr="0x42001436">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="CPUWRPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Write Pointer"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CPURDPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Read Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM4/USART_INT">
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnnnnnnnnn--nnnnn--nnnn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FF3E79F" edc:addr="0x42001400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="USART_EXT_CLK" edc:desc="USART with external clock" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="USART_INT_CLK" edc:desc="USART with internal clock" edc:when="(field &amp; 0x7) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="IBON" edc:nzwidth="0x1" edc:desc="Immediate Buffer Overflow Notification"/>
            <edc:SFRFieldDef edc:cname="TXINV" edc:nzwidth="0x1" edc:desc="Transmit Data Invert">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="TxD is not inverted" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INV" edc:desc="TxD is inverted" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RXINV" edc:nzwidth="0x1" edc:desc="Receive Data Invert">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="RxD is not inverted" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INV" edc:desc="RxD is inverted" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SAMPR" edc:nzwidth="0x3" edc:desc="Sample">
              <edc:SFRFieldSemantic edc:cname="16X_ARITHMETIC" edc:desc="16x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="16X_FRACTIONAL" edc:desc="16x over-sampling using fractional baudrate generation" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="8X_ARITHMETIC" edc:desc="8x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="8X_FRACTIONAL" edc:desc="8x over-sampling using fractional baudrate generation" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="3X_ARITHMETIC" edc:desc="3x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXPO" edc:nzwidth="0x2" edc:desc="Transmit Data Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="PAD[0] = TxD; PAD[1] = XCK" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="PAD[0] = TxD; PAD[2] = RTS; PAD[3] = CTS" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="PAD[0] = TxD; PAD[1] = XCK; PAD[2] = TE" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXPO" edc:nzwidth="0x2" edc:desc="Receive Data Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="SERCOM PAD[0] is used for data reception" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="SERCOM PAD[1] is used for data reception" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="SERCOM PAD[2] is used for data reception" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="SERCOM PAD[3] is used for data reception" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SAMPA" edc:nzwidth="0x2" edc:desc="Sample Adjustment">
              <edc:SFRFieldSemantic edc:cname="ADJ0" edc:desc="16x Over-sampling = 7-8-9; 8x Over-sampling = 3-4-5" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ADJ1" edc:desc="16x Over-sampling = 9-10-11; 8x Over-sampling = 4-5-6" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="ADJ2" edc:desc="16x Over-sampling = 11-12-13; 8x Over-sampling = 5-6-7" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="ADJ3" edc:desc="16x Over-sampling = 13-14-15; 8x Over-sampling = 6-7-8" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FORM" edc:nzwidth="0x4" edc:desc="Frame Format">
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_NO_PARITY" edc:desc="USART frame" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_WITH_PARITY" edc:desc="USART frame with parity" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_LINBRKGEN" edc:desc="LIN Master Break and Sync generation" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_AUTO_BAUD_NO_PARITY" edc:desc="Auto-baud (LIN Slave) - break detection and auto-baud" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_AUTO_BAUD_WITH_PARITY" edc:desc="Auto-baud - break detection and auto-baud with parity" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_ISO_7816" edc:desc="ISO 7816" edc:when="(field &amp; 0xF) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMODE" edc:nzwidth="0x1" edc:desc="Communication Mode">
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Asynchronous communication." edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Synchronous communication." edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity">
              <edc:SFRFieldSemantic edc:cname="IDLE_LOW" edc:desc="TxD Change:- Rising XCK edge, RxD Sample:- Falling XCK edge" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IDLE_HIGH" edc:desc="TxD Change:- Falling XCK edge, RxD Sample:- Rising XCK edge" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order">
              <edc:SFRFieldSemantic edc:cname="MSB" edc:desc="MSB is transmitted first." edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LSB" edc:desc="LSB is transmitted first." edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="------nnnn----nn--n--nnn-n---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3C32747" edc:addr="0x42001404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 Bits" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 Bits" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="5_BIT" edc:desc="5 Bits" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="6_BIT" edc:desc="6 Bits" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="7_BIT" edc:desc="7 Bits" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SBMODE" edc:nzwidth="0x1" edc:desc="Stop Bit Mode">
              <edc:SFRFieldSemantic edc:cname="1_BIT" edc:desc="One Stop Bit" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2_BIT" edc:desc="Two Stop Bits" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="COLDEN" edc:nzwidth="0x1" edc:desc="Collision Detection Enable"/>
            <edc:SFRFieldDef edc:cname="SFDE" edc:nzwidth="0x1" edc:desc="Start of Frame Detection Enable"/>
            <edc:SFRFieldDef edc:cname="ENC" edc:nzwidth="0x1" edc:desc="Encoding Format">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Data is not encoded" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IRDA" edc:desc="Data is IrDA encoded" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PMODE" edc:nzwidth="0x1" edc:desc="Parity Mode">
              <edc:SFRFieldSemantic edc:cname="EVEN" edc:desc="Even Parity" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ODD" edc:desc="Odd Parity" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TXEN" edc:nzwidth="0x1" edc:desc="Transmitter Enable"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="FIFOCLR" edc:nzwidth="0x2" edc:desc="FIFO Clear">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TXFIFO" edc:desc="Clear TX FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RXFIFO" edc:desc="Clear RX FIFO" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Clear both TX and RF FIFOs" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LINCMD" edc:nzwidth="0x2" edc:desc="LIN Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Normal USART transmission" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SOFTWARE_CONTROL_TRANSMIT_CMD" edc:desc="Break field is transmitted when DATA is written" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="AUTO_TRANSMIT_CMD" edc:desc="Break, sync and identifier are automatically transmitted when DATA is written with the identifier" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="nnnnn-nn-nnn--nn----nnnn-----nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFB730F07" edc:addr="0x42001408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="GTIME" edc:nzwidth="0x3" edc:desc="Guard Time"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="BRKLEN" edc:nzwidth="0x2" edc:desc="LIN Master Break Length">
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="Break field transmission is 13 bit times" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="17_BIT" edc:desc="Break field transmission is 17 bit times" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="21_BIT" edc:desc="Break field transmission is 21 bit times" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="26_BIT" edc:desc="Break field transmission is 26 bit times" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="HDRDLY" edc:nzwidth="0x2" edc:desc="LIN Master Header Delay">
              <edc:SFRFieldSemantic edc:cname="DELAY0" edc:desc="Delay between break and sync transmission is 1 bit time; Delay between sync and ID transmission is 1 bit time" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DELAY1" edc:desc="Delay between break and sync transmission is 4 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="DELAY2" edc:desc="Delay between break and sync transmission is 8 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="DELAY3" edc:desc="Delay between break and sync transmission is 14 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="INACK" edc:nzwidth="0x1" edc:desc="Inhibit Not Acknowledge"/>
            <edc:SFRFieldDef edc:cname="DSNACK" edc:nzwidth="0x1" edc:desc="Disable Successive NACK"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MAXITER" edc:nzwidth="0x3" edc:desc="Maximum Iterations"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x2" edc:desc="Data 32 Bit">
              <edc:SFRFieldSemantic edc:cname="0x0" edc:desc="Reads and writes with CHSIZE" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="0x1" edc:desc="Reads with CHSIZE, writes with 32-bit extension" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="0x2" edc:desc="Reads with 32-bit extension, writes with CHSIZE" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="0x3" edc:desc="Reads and writes with 32-bit extension" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="RXTRHOLD" edc:nzwidth="0x2" edc:desc="Receive FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated when DATA is present in the FIFO" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when FIFO is half-full" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FULL" edc:desc="Interrupt and DMA triggers are generated when FIFO is full" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXTRHOLD" edc:nzwidth="0x2" edc:desc="Transmit FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is not full" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when half FIFO space is free" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EMPTY" edc:desc="Interrupt and DMA triggers are generated when the FIFO is empty" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="BAUD" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x4200140C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x10" edc:desc="Baud Rate Value"/>
            <edc:AdjustPoint edc:offset="-3"/>
            <edc:SFRFieldDef edc:cname="FP" edc:nzwidth="0x3" edc:desc="Fractional Part"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="RXPL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4200140E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="RXPL" edc:nzwidth="0x8" edc:desc="Receive Pulse Length"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42001414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42001416">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42001418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="--------nnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xFF" edc:addr="0x4200141A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Parity Error"/>
            <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Frame Error"/>
            <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
            <edc:SFRFieldDef edc:cname="CTS" edc:nzwidth="0x1" edc:desc="Clear To Send"/>
            <edc:SFRFieldDef edc:cname="ISF" edc:nzwidth="0x1" edc:desc="Inconsistent Sync Field"/>
            <edc:SFRFieldDef edc:cname="COLL" edc:nzwidth="0x1" edc:desc="Collision Detected"/>
            <edc:SFRFieldDef edc:cname="TXE" edc:nzwidth="0x1" edc:desc="Transmitter Empty"/>
            <edc:SFRFieldDef edc:cname="ITER" edc:nzwidth="0x1" edc:desc="Maximum Number of Repetitions Reached"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="---------------------------rrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:addr="0x4200141C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="RXERRCNT" edc:nzwidth="0x1" edc:desc="RXERRCNT Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="LENGTH" edc:nzwidth="0x1" edc:desc="LENGTH Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="RXERRCNT" edc:nzwidth="0x8" edc:access="rrrrrrrr" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42001420">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="RXERRCNT" edc:nzwidth="0x8" edc:desc="Receive Error Count"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="LENGTH" edc:nzwidth="0x10" edc:access="------nnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x3FF" edc:addr="0x42001422">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x2" edc:desc="Data Length Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Length counter is disabled" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TX" edc:desc="Length counter is enabled for transmit" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RX" edc:desc="Length counter is enabled for receive" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42001428">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x42001430">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="FIFOSPACE" edc:nzwidth="0x10" edc:access="---rrrrr---rrrrr" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1F1F" edc:addr="0x42001434">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="TXSPACE" edc:nzwidth="0x5" edc:desc="Tx FIFO Empty Space"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RXSPACE" edc:nzwidth="0x5" edc:desc="Rx FIFO Filled Space"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM4" edc:cname="FIFOPTR" edc:nzwidth="0x10" edc:access="----nnnn----nnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xF0F" edc:addr="0x42001436">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM4">
            <edc:SFRFieldDef edc:cname="CPUWRPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Write Pointer"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CPURDPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Read Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM5/I2CM">
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnn-nnnnnn---n--------n--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7BF1009F" edc:addr="0x42001800">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="I2C_MASTER" edc:desc="I2C master operation" edc:when="(field &amp; 0x7) == 0x5"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="PINOUT" edc:nzwidth="0x1" edc:desc="Pin Usage"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SDAHOLD" edc:nzwidth="0x2" edc:desc="SDA Hold Time">
              <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disabled" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="75NS" edc:desc="50-100ns hold time" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="450NS" edc:desc="300-600ns hold time" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="600NS" edc:desc="400-800ns hold time" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MEXTTOEN" edc:nzwidth="0x1" edc:desc="Master SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="SEXTTOEN" edc:nzwidth="0x1" edc:desc="Slave SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="SPEED" edc:nzwidth="0x2" edc:desc="Transfer Speed">
              <edc:SFRFieldSemantic edc:cname="SM" edc:desc="Standard-Mode (SM) and Fast-Mode (FM)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FMP" edc:desc="Fast-Mode Plus (FM+)" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="HS" edc:desc="High-Speed Mode" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SCLSM" edc:nzwidth="0x1" edc:desc="SCL Clock Stretch Mode"/>
            <edc:SFRFieldDef edc:cname="INACTOUT" edc:nzwidth="0x2" edc:desc="Inactive Time-Out">
              <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disable" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="55US" edc:desc="5-6 SCL cycle time-out" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="105US" edc:desc="10-11 SCL cycle time-out" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="205US" edc:desc="20-21 SCL cycle time-out" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LOWTOUTEN" edc:nzwidth="0x1" edc:desc="SCL Low Timeout Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="--------nn---nnn------nn--------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC70300" edc:addr="0x42001804">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="SMEN" edc:nzwidth="0x1" edc:desc="Smart Mode Enable"/>
            <edc:SFRFieldDef edc:cname="QCEN" edc:nzwidth="0x1" edc:desc="Quick Command Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Command"/>
            <edc:SFRFieldDef edc:cname="ACKACT" edc:nzwidth="0x1" edc:desc="Acknowledge Action"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="FIFOCLR" edc:nzwidth="0x2" edc:desc="FIFO Clear">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TXFIFO" edc:desc="Clear TX FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RXFIFO" edc:desc="Clear RX FIFO" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Clear both TX and RF FIFOs" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="nnnnn--n------------------------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF9000000" edc:addr="0x42001808">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:AdjustPoint edc:offset="0x18"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x1" edc:desc="Data 32 Bit"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="RXTRHOLD" edc:nzwidth="0x2" edc:desc="Receive FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated when DATA is present in the FIFO" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when FIFO is half-full" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FULL" edc:desc="Interrupt and DMA triggers are generated when FIFO is full" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXTRHOLD" edc:nzwidth="0x2" edc:desc="Transmit FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is not full" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when half FIFO space is free" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EMPTY" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is not full" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="BAUD" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x4200180C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x8" edc:desc="Baud Rate Value"/>
            <edc:SFRFieldDef edc:cname="BAUDLOW" edc:nzwidth="0x8" edc:desc="Baud Rate Value Low"/>
            <edc:SFRFieldDef edc:cname="HSBAUD" edc:nzwidth="0x8" edc:desc="High Speed Baud Rate Value"/>
            <edc:SFRFieldDef edc:cname="HSBAUDLOW" edc:nzwidth="0x8" edc:desc="High Speed Baud Rate Value Low"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n--nn-nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x9B" edc:addr="0x42001814">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="MB" edc:nzwidth="0x1" edc:desc="Master On Bus Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SB" edc:nzwidth="0x1" edc:desc="Slave On Bus Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFE" edc:nzwidth="0x1" edc:desc="Tx FIFO Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFF" edc:nzwidth="0x1" edc:desc="Rx FIFO Full Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n--nn-nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x9B" edc:addr="0x42001816">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="MB" edc:nzwidth="0x1" edc:desc="Master On Bus Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SB" edc:nzwidth="0x1" edc:desc="Slave On Bus Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFE" edc:nzwidth="0x1" edc:desc="Tx FIFO Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFF" edc:nzwidth="0x1" edc:desc="Rx FIFO Full Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n--nn-nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x9B" edc:addr="0x42001818">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="MB" edc:nzwidth="0x1" edc:desc="Master On Bus Interrupt"/>
            <edc:SFRFieldDef edc:cname="SB" edc:nzwidth="0x1" edc:desc="Slave On Bus Interrupt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFE" edc:nzwidth="0x1" edc:desc="Tx FIFO Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXFF" edc:nzwidth="0x1" edc:desc="Rx FIFO Full Interrupt"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="-----nnnnnnn-nnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x7F7" edc:addr="0x4200181A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="BUSERR" edc:nzwidth="0x1" edc:desc="Bus Error"/>
            <edc:SFRFieldDef edc:cname="ARBLOST" edc:nzwidth="0x1" edc:desc="Arbitration Lost"/>
            <edc:SFRFieldDef edc:cname="RXNACK" edc:nzwidth="0x1" edc:desc="Received Not Acknowledge"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BUSSTATE" edc:nzwidth="0x2" edc:desc="Bus State">
              <edc:SFRFieldSemantic edc:cname="UNKNOWN" edc:desc="Wait for stop or idle" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IDLE" edc:desc="Wait for transaction initialization" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="OWNER" edc:desc="I2C master is the current owner of the bus" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="BUSY" edc:desc="Some other I2C master owns the bus" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LOWTOUT" edc:nzwidth="0x1" edc:desc="SCL Low Timeout"/>
            <edc:SFRFieldDef edc:cname="CLKHOLD" edc:nzwidth="0x1" edc:desc="Clock Hold"/>
            <edc:SFRFieldDef edc:cname="MEXTTOUT" edc:nzwidth="0x1" edc:desc="Master SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="SEXTTOUT" edc:nzwidth="0x1" edc:desc="Slave SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="LENERR" edc:nzwidth="0x1" edc:desc="Length Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="-----------------------------rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7" edc:addr="0x4200181C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="SYSOP" edc:nzwidth="0x1" edc:desc="System Operation Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnn--nnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFE7FF" edc:addr="0x42001824">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0xB" edc:desc="Address Value"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x1" edc:desc="Length Enable"/>
            <edc:SFRFieldDef edc:cname="HS" edc:nzwidth="0x1" edc:desc="High Speed Mode"/>
            <edc:SFRFieldDef edc:cname="TENBITEN" edc:nzwidth="0x1" edc:desc="Ten Bit Addressing Enable"/>
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Length"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42001828">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x42001830">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="FIFOSPACE" edc:nzwidth="0x10" edc:access="---rrrrr---rrrrr" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1F1F" edc:addr="0x42001834">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="TXSPACE" edc:nzwidth="0x5" edc:desc="Tx FIFO Empty Space"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RXSPACE" edc:nzwidth="0x5" edc:desc="Rx FIFO Filled Space"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="FIFOPTR" edc:nzwidth="0x10" edc:access="----nnnn----nnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xF0F" edc:addr="0x42001836">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="CPUWRPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Write Pointer"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CPURDPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Read Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM5/I2CS">
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-n--n-nnn-nn---n--------n--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x4BB1009F" edc:addr="0x42001800">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="I2C_SLAVE" edc:desc="I2C slave operation" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="PINOUT" edc:nzwidth="0x1" edc:desc="Pin Usage"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SDAHOLD" edc:nzwidth="0x2" edc:desc="SDA Hold Time">
              <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disabled" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="75NS" edc:desc="50-100ns hold time" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="450NS" edc:desc="300-600ns hold time" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="600NS" edc:desc="400-800ns hold time" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SEXTTOEN" edc:nzwidth="0x1" edc:desc="Slave SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="SPEED" edc:nzwidth="0x2" edc:desc="Transfer Speed">
              <edc:SFRFieldSemantic edc:cname="SM" edc:desc="Standard-Mode (SM) and Fast-Mode (FM)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FMP" edc:desc="Fast-Mode Plus (FM+)" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="HS" edc:desc="High-Speed Mode" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SCLSM" edc:nzwidth="0x1" edc:desc="SCL Clock Stretch Mode"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="LOWTOUTEN" edc:nzwidth="0x1" edc:desc="SCL Low Timeout Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="--------nn---nnnnn---nnn--------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC7C700" edc:addr="0x42001804">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="SMEN" edc:nzwidth="0x1" edc:desc="Smart Mode Enable"/>
            <edc:SFRFieldDef edc:cname="GCMD" edc:nzwidth="0x1" edc:desc="PMBus Group Command"/>
            <edc:SFRFieldDef edc:cname="AACKEN" edc:nzwidth="0x1" edc:desc="Automatic Address Acknowledge"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="AMODE" edc:nzwidth="0x2" edc:desc="Address Mode">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="The slave responds to the address written in ADDR.ADDR masked by the value in ADDR.ADDRMASK" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2ADDRS" edc:desc="The slave responds to the two unique addresses in ADDR and ADDRMASK" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RANGE" edc:desc="The slave responds to the range of addresses between and including ADDR and ADDRMASK. ADDR is the upper limit" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Command"/>
            <edc:SFRFieldDef edc:cname="ACKACT" edc:nzwidth="0x1" edc:desc="Acknowledge Action"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="FIFOCLR" edc:nzwidth="0x2" edc:desc="FIFO Clear">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TXFIFO" edc:desc="Clear TX FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RXFIFO" edc:desc="Clear RX FIFO" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Clear both TX and RF FIFOs" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="nnnnn--n--------------------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF900000F" edc:addr="0x42001808">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="SDASETUP" edc:nzwidth="0x4" edc:desc="SDA Setup Time"/>
            <edc:AdjustPoint edc:offset="0x14"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x1" edc:desc="Data 32 Bit"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="RXTRHOLD" edc:nzwidth="0x2" edc:desc="Receive FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated when DATA is present in the FIFO" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when FIFO is half-full" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FULL" edc:desc="Interrupt and DMA triggers are generated when FIFO is full" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXTRHOLD" edc:nzwidth="0x2" edc:desc="Transmit FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is not full" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when half FIFO space is free" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EMPTY" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is not full" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n--nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x9F" edc:addr="0x42001814">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="PREC" edc:nzwidth="0x1" edc:desc="Stop Received Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="AMATCH" edc:nzwidth="0x1" edc:desc="Address Match Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="DRDY" edc:nzwidth="0x1" edc:desc="Data Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFE" edc:nzwidth="0x1" edc:desc="Tx FIFO Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFF" edc:nzwidth="0x1" edc:desc="Rx FIFO Full Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n--nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x9F" edc:addr="0x42001816">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="PREC" edc:nzwidth="0x1" edc:desc="Stop Received Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="AMATCH" edc:nzwidth="0x1" edc:desc="Address Match Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DRDY" edc:nzwidth="0x1" edc:desc="Data Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFE" edc:nzwidth="0x1" edc:desc="Tx FIFO Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFF" edc:nzwidth="0x1" edc:desc="Rx FIFO Full Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n--nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x9F" edc:addr="0x42001818">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="PREC" edc:nzwidth="0x1" edc:desc="Stop Received Interrupt"/>
            <edc:SFRFieldDef edc:cname="AMATCH" edc:nzwidth="0x1" edc:desc="Address Match Interrupt"/>
            <edc:SFRFieldDef edc:cname="DRDY" edc:nzwidth="0x1" edc:desc="Data Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXFE" edc:nzwidth="0x1" edc:desc="Tx FIFO Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXFF" edc:nzwidth="0x1" edc:desc="Rx FIFO Full Interrupt"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="----nnn-nn-nnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xEDF" edc:addr="0x4200181A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="BUSERR" edc:nzwidth="0x1" edc:desc="Bus Error"/>
            <edc:SFRFieldDef edc:cname="COLL" edc:nzwidth="0x1" edc:desc="Transmit Collision"/>
            <edc:SFRFieldDef edc:cname="RXNACK" edc:nzwidth="0x1" edc:desc="Received Not Acknowledge"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Read/Write Direction"/>
            <edc:SFRFieldDef edc:cname="SR" edc:nzwidth="0x1" edc:desc="Repeated Start"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LOWTOUT" edc:nzwidth="0x1" edc:desc="SCL Low Timeout"/>
            <edc:SFRFieldDef edc:cname="CLKHOLD" edc:nzwidth="0x1" edc:desc="Clock Hold"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SEXTTOUT" edc:nzwidth="0x1" edc:desc="Slave SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="HS" edc:nzwidth="0x1" edc:desc="High Speed"/>
            <edc:SFRFieldDef edc:cname="LENERR" edc:nzwidth="0x1" edc:desc="Transaction Length Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="---------------------------r-rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x17" edc:addr="0x4200181C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="SYSOP" edc:nzwidth="0x1" edc:desc="System Operation Synchronization Busy"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LENGTH" edc:nzwidth="0x1" edc:desc="Length Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="LENGTH" edc:nzwidth="0x10" edc:access="-------nnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1FF" edc:addr="0x42001822">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x1" edc:desc="Data Length Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="-----nnnnnnnnnn-n----nnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FE87FF" edc:addr="0x42001824">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="GENCEN" edc:nzwidth="0x1" edc:desc="General Call Address Enable"/>
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0xA" edc:desc="Address Value"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TENBITEN" edc:nzwidth="0x1" edc:desc="Ten Bit Addressing Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ADDRMASK" edc:nzwidth="0xA" edc:desc="Address Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42001828">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="FIFOSPACE" edc:nzwidth="0x10" edc:access="---rrrrr---rrrrr" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1F1F" edc:addr="0x42001834">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="TXSPACE" edc:nzwidth="0x5" edc:desc="Tx FIFO Empty Space"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RXSPACE" edc:nzwidth="0x5" edc:desc="Rx FIFO Filled Space"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="FIFOPTR" edc:nzwidth="0x10" edc:access="----nnnn----nnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xF0F" edc:addr="0x42001836">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="CPUWRPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Write Pointer"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CPURDPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Read Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM5/SPIM">
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnnnnn--nn--nn-------nn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7F33019F" edc:addr="0x42001800">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="SPI_MASTER" edc:desc="SPI in master operation" edc:when="(field &amp; 0x7) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="IBON" edc:nzwidth="0x1" edc:desc="Immediate Buffer Overflow Notification">
              <edc:SFRFieldSemantic edc:cname="0x0" edc:desc="STATUS.BUFOVF is set when it occurs in the data stream" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="0x1" edc:desc="STATUS.BUFOVF is set immediately upon buffer overflow" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DOPO" edc:nzwidth="0x2" edc:desc="Data Out Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="DO on PAD[0], SCK on PAD[1] and SS on PAD[2]" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="DO on PAD[3], SCK on PAD[1] and SS on PAD[2]" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DIPO" edc:nzwidth="0x2" edc:desc="Data In Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="SERCOM PAD[0] is used as data input" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="SERCOM PAD[1] is used as data input" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="SERCOM PAD[2] is used as data input" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="SERCOM PAD[3] is used as data input" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FORM" edc:nzwidth="0x4" edc:desc="Frame Format">
              <edc:SFRFieldSemantic edc:cname="SPI_FRAME" edc:desc="SPI Frame" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SPI_FRAME_WITH_ADDR" edc:desc="SPI Frame with Addr" edc:when="(field &amp; 0xF) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPHA" edc:nzwidth="0x1" edc:desc="Clock Phase">
              <edc:SFRFieldSemantic edc:cname="LEADING_EDGE" edc:desc="The data is sampled on a leading SCK edge and changed on a trailing SCK edge" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TRAILING_EDGE" edc:desc="The data is sampled on a trailing SCK edge and changed on a leading SCK edge" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity">
              <edc:SFRFieldSemantic edc:cname="IDLE_LOW" edc:desc="SCK is low when idle" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IDLE_HIGH" edc:desc="SCK is high when idle" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order">
              <edc:SFRFieldSemantic edc:cname="MSB" edc:desc="MSB is transmitted first" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LSB" edc:desc="LSB is transmitted first" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="--------nn----n-nnn---n--n---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC2E247" edc:addr="0x42001804">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits" edc:when="(field &amp; 0x7) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PLOADEN" edc:nzwidth="0x1" edc:desc="Data Preload Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SSDE" edc:nzwidth="0x1" edc:desc="Slave Select Low Detect Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="SS low detector is disabled" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="SS low detector is enabled" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="MSSEN" edc:nzwidth="0x1" edc:desc="Master Slave Select Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Hardware SS control is disabled" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="Hardware SS control is enabled" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AMODE" edc:nzwidth="0x2" edc:desc="Address Mode">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="ADDRMASK is used as a mask to the AADR register" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2ADDRS" edc:desc="The slave responds to the two unique addresses in ADDR and ADDRMASK" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RANGE" edc:desc="The slave responds to the range of addresses between and including ADDR and ADDRMASK. ADDR is the upper limit" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="FIFOCLR" edc:nzwidth="0x2" edc:desc="FIFO Clear">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TXFIFO" edc:desc="Clear TX FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RXFIFO" edc:desc="Clear RX FIFO" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Clear both TX and RF FIFOs" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="nnnnn--n------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF900003F" edc:addr="0x42001808">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="ICSPACE" edc:nzwidth="0x6" edc:desc="Inter-Character Spacing"/>
            <edc:AdjustPoint edc:offset="0x12"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x1" edc:desc="Data 32 Bit"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="RXTRHOLD" edc:nzwidth="0x2" edc:desc="Receive FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated when DATA is present in the FIFO" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when FIFO is half-full" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FULL" edc:desc="Interrupt and DMA triggers are generated when FIFO is full" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXTRHOLD" edc:nzwidth="0x2" edc:desc="Transmit FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is not full" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when half FIFO space is free" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EMPTY" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is empty" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="BAUD" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4200180C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x8" edc:desc="Baud Rate Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42001814">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42001816">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42001818">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Flag"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="----n--------n--" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x804" edc:addr="0x4200181A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="LENERR" edc:nzwidth="0x1" edc:desc="Transaction Length Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="---------------------------r-rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x17" edc:addr="0x4200181C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB Synchronization Busy"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LENGTH" edc:nzwidth="0x1" edc:desc="LENGTH Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="LENGTH" edc:nzwidth="0x10" edc:access="-------nnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1FF" edc:addr="0x42001822">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x1" edc:desc="Data Length Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="--------nnnnnnnn--------nnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF00FF" edc:addr="0x42001824">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0x8" edc:desc="Address Value"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="ADDRMASK" edc:nzwidth="0x8" edc:desc="Address Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42001828">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x42001830">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="FIFOSPACE" edc:nzwidth="0x10" edc:access="---rrrrr---rrrrr" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1F1F" edc:addr="0x42001834">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="TXSPACE" edc:nzwidth="0x5" edc:desc="Tx FIFO Empty Space"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RXSPACE" edc:nzwidth="0x5" edc:desc="Rx FIFO Filled Space"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="FIFOPTR" edc:nzwidth="0x10" edc:access="----nnnn----nnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xF0F" edc:addr="0x42001836">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="CPUWRPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Write Pointer"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CPURDPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Read Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM5/SPIS">
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnnnnn--nn--nn-------nn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7F33019F" edc:addr="0x42001800">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="SPI_SLAVE" edc:desc="SPI in slave operation" edc:when="(field &amp; 0x7) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="IBON" edc:nzwidth="0x1" edc:desc="Immediate Buffer Overflow Notification">
              <edc:SFRFieldSemantic edc:cname="0x0" edc:desc="STATUS.BUFOVF is set when it occurs in the data stream" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="0x1" edc:desc="STATUS.BUFOVF is set immediately upon buffer overflow" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DOPO" edc:nzwidth="0x2" edc:desc="Data Out Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="DO on PAD[0], SCK on PAD[1] and SS on PAD[2]" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="DO on PAD[3], SCK on PAD[1] and SS on PAD[2]" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DIPO" edc:nzwidth="0x2" edc:desc="Data In Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="SERCOM PAD[0] is used as data input" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="SERCOM PAD[1] is used as data input" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="SERCOM PAD[2] is used as data input" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="SERCOM PAD[3] is used as data input" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FORM" edc:nzwidth="0x4" edc:desc="Frame Format">
              <edc:SFRFieldSemantic edc:cname="SPI_FRAME" edc:desc="SPI Frame" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SPI_FRAME_WITH_ADDR" edc:desc="SPI Frame with Addr" edc:when="(field &amp; 0xF) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPHA" edc:nzwidth="0x1" edc:desc="Clock Phase">
              <edc:SFRFieldSemantic edc:cname="LEADING_EDGE" edc:desc="The data is sampled on a leading SCK edge and changed on a trailing SCK edge" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TRAILING_EDGE" edc:desc="The data is sampled on a trailing SCK edge and changed on a leading SCK edge" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity">
              <edc:SFRFieldSemantic edc:cname="IDLE_LOW" edc:desc="SCK is low when idle" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IDLE_HIGH" edc:desc="SCK is high when idle" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order">
              <edc:SFRFieldSemantic edc:cname="MSB" edc:desc="MSB is transmitted first" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LSB" edc:desc="LSB is transmitted first" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="--------nn----n-nnn---n--n---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC2E247" edc:addr="0x42001804">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits" edc:when="(field &amp; 0x7) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PLOADEN" edc:nzwidth="0x1" edc:desc="Data Preload Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SSDE" edc:nzwidth="0x1" edc:desc="Slave Select Low Detect Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="SS low detector is disabled" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="SS low detector is enabled" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="MSSEN" edc:nzwidth="0x1" edc:desc="Master Slave Select Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Hardware SS control is disabled" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="Hardware SS control is enabled" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AMODE" edc:nzwidth="0x2" edc:desc="Address Mode">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="ADDRMASK is used as a mask to the AADR register" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2ADDRS" edc:desc="The slave responds to the two unique addresses in ADDR and ADDRMASK" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RANGE" edc:desc="The slave responds to the range of addresses between and including ADDR and ADDRMASK. ADDR is the upper limit" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="FIFOCLR" edc:nzwidth="0x2" edc:desc="FIFO Clear">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TXFIFO" edc:desc="Clear TX FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RXFIFO" edc:desc="Clear RX FIFO" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Clear both TX and RF FIFOs" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="nnnnn--n------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF900003F" edc:addr="0x42001808">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="ICSPACE" edc:nzwidth="0x6" edc:desc="Inter-Character Spacing"/>
            <edc:AdjustPoint edc:offset="0x12"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x1" edc:desc="Data 32 Bit"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="RXTRHOLD" edc:nzwidth="0x2" edc:desc="Receive FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated when DATA is present in the FIFO" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when FIFO is half-full" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FULL" edc:desc="Interrupt and DMA triggers are generated when FIFO is full" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXTRHOLD" edc:nzwidth="0x2" edc:desc="Transmit FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is not full" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when half FIFO space is free" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EMPTY" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is empty" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="BAUD" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4200180C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x8" edc:desc="Baud Rate Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42001814">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42001816">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42001818">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Flag"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="----n--------n--" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x804" edc:addr="0x4200181A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="LENERR" edc:nzwidth="0x1" edc:desc="Transaction Length Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="---------------------------r-rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x17" edc:addr="0x4200181C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB Synchronization Busy"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LENGTH" edc:nzwidth="0x1" edc:desc="LENGTH Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="LENGTH" edc:nzwidth="0x10" edc:access="-------nnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1FF" edc:addr="0x42001822">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x1" edc:desc="Data Length Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="--------nnnnnnnn--------nnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF00FF" edc:addr="0x42001824">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0x8" edc:desc="Address Value"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="ADDRMASK" edc:nzwidth="0x8" edc:desc="Address Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42001828">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x42001830">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="FIFOSPACE" edc:nzwidth="0x10" edc:access="---rrrrr---rrrrr" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1F1F" edc:addr="0x42001834">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="TXSPACE" edc:nzwidth="0x5" edc:desc="Tx FIFO Empty Space"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RXSPACE" edc:nzwidth="0x5" edc:desc="Rx FIFO Filled Space"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="FIFOPTR" edc:nzwidth="0x10" edc:access="----nnnn----nnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xF0F" edc:addr="0x42001836">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="CPUWRPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Write Pointer"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CPURDPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Read Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM5/USART_EXT">
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnnnnnnnnn--nnnnn--nnnn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FF3E79F" edc:addr="0x42001800">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="USART_EXT_CLK" edc:desc="USART with external clock" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="USART_INT_CLK" edc:desc="USART with internal clock" edc:when="(field &amp; 0x7) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="IBON" edc:nzwidth="0x1" edc:desc="Immediate Buffer Overflow Notification"/>
            <edc:SFRFieldDef edc:cname="TXINV" edc:nzwidth="0x1" edc:desc="Transmit Data Invert">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="TxD is not inverted" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INV" edc:desc="TxD is inverted" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RXINV" edc:nzwidth="0x1" edc:desc="Receive Data Invert">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="RxD is not inverted" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INV" edc:desc="RxD is inverted" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SAMPR" edc:nzwidth="0x3" edc:desc="Sample">
              <edc:SFRFieldSemantic edc:cname="16X_ARITHMETIC" edc:desc="16x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="16X_FRACTIONAL" edc:desc="16x over-sampling using fractional baudrate generation" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="8X_ARITHMETIC" edc:desc="8x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="8X_FRACTIONAL" edc:desc="8x over-sampling using fractional baudrate generation" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="3X_ARITHMETIC" edc:desc="3x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXPO" edc:nzwidth="0x2" edc:desc="Transmit Data Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="PAD[0] = TxD; PAD[1] = XCK" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="PAD[0] = TxD; PAD[2] = RTS; PAD[3] = CTS" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="PAD[0] = TxD; PAD[1] = XCK; PAD[2] = TE" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXPO" edc:nzwidth="0x2" edc:desc="Receive Data Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="SERCOM PAD[0] is used for data reception" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="SERCOM PAD[1] is used for data reception" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="SERCOM PAD[2] is used for data reception" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="SERCOM PAD[3] is used for data reception" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SAMPA" edc:nzwidth="0x2" edc:desc="Sample Adjustment">
              <edc:SFRFieldSemantic edc:cname="ADJ0" edc:desc="16x Over-sampling = 7-8-9; 8x Over-sampling = 3-4-5" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ADJ1" edc:desc="16x Over-sampling = 9-10-11; 8x Over-sampling = 4-5-6" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="ADJ2" edc:desc="16x Over-sampling = 11-12-13; 8x Over-sampling = 5-6-7" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="ADJ3" edc:desc="16x Over-sampling = 13-14-15; 8x Over-sampling = 6-7-8" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FORM" edc:nzwidth="0x4" edc:desc="Frame Format">
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_NO_PARITY" edc:desc="USART frame" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_WITH_PARITY" edc:desc="USART frame with parity" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_LINBRKGEN" edc:desc="LIN Master Break and Sync generation" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_AUTO_BAUD_NO_PARITY" edc:desc="Auto-baud (LIN Slave) - break detection and auto-baud" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_AUTO_BAUD_WITH_PARITY" edc:desc="Auto-baud - break detection and auto-baud with parity" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_ISO_7816" edc:desc="ISO 7816" edc:when="(field &amp; 0xF) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMODE" edc:nzwidth="0x1" edc:desc="Communication Mode">
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Asynchronous communication." edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Synchronous communication." edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity">
              <edc:SFRFieldSemantic edc:cname="IDLE_LOW" edc:desc="TxD Change:- Rising XCK edge, RxD Sample:- Falling XCK edge" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IDLE_HIGH" edc:desc="TxD Change:- Falling XCK edge, RxD Sample:- Rising XCK edge" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order">
              <edc:SFRFieldSemantic edc:cname="MSB" edc:desc="MSB is transmitted first." edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LSB" edc:desc="LSB is transmitted first." edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="------nnnn----nn--n--nnn-n---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3C32747" edc:addr="0x42001804">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 Bits" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 Bits" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="5_BIT" edc:desc="5 Bits" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="6_BIT" edc:desc="6 Bits" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="7_BIT" edc:desc="7 Bits" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SBMODE" edc:nzwidth="0x1" edc:desc="Stop Bit Mode">
              <edc:SFRFieldSemantic edc:cname="1_BIT" edc:desc="One Stop Bit" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2_BIT" edc:desc="Two Stop Bits" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="COLDEN" edc:nzwidth="0x1" edc:desc="Collision Detection Enable"/>
            <edc:SFRFieldDef edc:cname="SFDE" edc:nzwidth="0x1" edc:desc="Start of Frame Detection Enable"/>
            <edc:SFRFieldDef edc:cname="ENC" edc:nzwidth="0x1" edc:desc="Encoding Format">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Data is not encoded" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IRDA" edc:desc="Data is IrDA encoded" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PMODE" edc:nzwidth="0x1" edc:desc="Parity Mode">
              <edc:SFRFieldSemantic edc:cname="EVEN" edc:desc="Even Parity" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ODD" edc:desc="Odd Parity" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TXEN" edc:nzwidth="0x1" edc:desc="Transmitter Enable"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="FIFOCLR" edc:nzwidth="0x2" edc:desc="FIFO Clear">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TXFIFO" edc:desc="Clear TX FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RXFIFO" edc:desc="Clear RX FIFO" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Clear both TX and RF FIFOs" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LINCMD" edc:nzwidth="0x2" edc:desc="LIN Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Normal USART transmission" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SOFTWARE_CONTROL_TRANSMIT_CMD" edc:desc="Break field is transmitted when DATA is written" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="AUTO_TRANSMIT_CMD" edc:desc="Break, sync and identifier are automatically transmitted when DATA is written with the identifier" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="nnnnn-nn-nnn--nn----nnnn-----nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFB730F07" edc:addr="0x42001808">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="GTIME" edc:nzwidth="0x3" edc:desc="Guard Time"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="BRKLEN" edc:nzwidth="0x2" edc:desc="LIN Master Break Length">
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="Break field transmission is 13 bit times" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="17_BIT" edc:desc="Break field transmission is 17 bit times" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="21_BIT" edc:desc="Break field transmission is 21 bit times" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="26_BIT" edc:desc="Break field transmission is 26 bit times" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="HDRDLY" edc:nzwidth="0x2" edc:desc="LIN Master Header Delay">
              <edc:SFRFieldSemantic edc:cname="DELAY0" edc:desc="Delay between break and sync transmission is 1 bit time; Delay between sync and ID transmission is 1 bit time" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DELAY1" edc:desc="Delay between break and sync transmission is 4 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="DELAY2" edc:desc="Delay between break and sync transmission is 8 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="DELAY3" edc:desc="Delay between break and sync transmission is 14 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="INACK" edc:nzwidth="0x1" edc:desc="Inhibit Not Acknowledge"/>
            <edc:SFRFieldDef edc:cname="DSNACK" edc:nzwidth="0x1" edc:desc="Disable Successive NACK"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MAXITER" edc:nzwidth="0x3" edc:desc="Maximum Iterations"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x2" edc:desc="Data 32 Bit">
              <edc:SFRFieldSemantic edc:cname="0x0" edc:desc="Reads and writes with CHSIZE" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="0x1" edc:desc="Reads with CHSIZE, writes with 32-bit extension" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="0x2" edc:desc="Reads with 32-bit extension, writes with CHSIZE" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="0x3" edc:desc="Reads and writes with 32-bit extension" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="RXTRHOLD" edc:nzwidth="0x2" edc:desc="Receive FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated when DATA is present in the FIFO" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when FIFO is half-full" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FULL" edc:desc="Interrupt and DMA triggers are generated when FIFO is full" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXTRHOLD" edc:nzwidth="0x2" edc:desc="Transmit FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is not full" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when half FIFO space is free" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EMPTY" edc:desc="Interrupt and DMA triggers are generated when the FIFO is empty" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="BAUD" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x4200180C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x10" edc:desc="Baud Rate Value"/>
            <edc:AdjustPoint edc:offset="-3"/>
            <edc:SFRFieldDef edc:cname="FP" edc:nzwidth="0x3" edc:desc="Fractional Part"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="RXPL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4200180E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="RXPL" edc:nzwidth="0x8" edc:desc="Receive Pulse Length"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42001814">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42001816">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42001818">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="--------nnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xFF" edc:addr="0x4200181A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Parity Error"/>
            <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Frame Error"/>
            <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
            <edc:SFRFieldDef edc:cname="CTS" edc:nzwidth="0x1" edc:desc="Clear To Send"/>
            <edc:SFRFieldDef edc:cname="ISF" edc:nzwidth="0x1" edc:desc="Inconsistent Sync Field"/>
            <edc:SFRFieldDef edc:cname="COLL" edc:nzwidth="0x1" edc:desc="Collision Detected"/>
            <edc:SFRFieldDef edc:cname="TXE" edc:nzwidth="0x1" edc:desc="Transmitter Empty"/>
            <edc:SFRFieldDef edc:cname="ITER" edc:nzwidth="0x1" edc:desc="Maximum Number of Repetitions Reached"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="---------------------------rrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:addr="0x4200181C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="RXERRCNT" edc:nzwidth="0x1" edc:desc="RXERRCNT Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="LENGTH" edc:nzwidth="0x1" edc:desc="LENGTH Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="RXERRCNT" edc:nzwidth="0x8" edc:access="rrrrrrrr" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42001820">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="RXERRCNT" edc:nzwidth="0x8" edc:desc="Receive Error Count"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="LENGTH" edc:nzwidth="0x10" edc:access="------nnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x3FF" edc:addr="0x42001822">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x2" edc:desc="Data Length Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Length counter is disabled" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TX" edc:desc="Length counter is enabled for transmit" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RX" edc:desc="Length counter is enabled for receive" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42001828">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x42001830">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="FIFOSPACE" edc:nzwidth="0x10" edc:access="---rrrrr---rrrrr" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1F1F" edc:addr="0x42001834">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="TXSPACE" edc:nzwidth="0x5" edc:desc="Tx FIFO Empty Space"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RXSPACE" edc:nzwidth="0x5" edc:desc="Rx FIFO Filled Space"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="FIFOPTR" edc:nzwidth="0x10" edc:access="----nnnn----nnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xF0F" edc:addr="0x42001836">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="CPUWRPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Write Pointer"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CPURDPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Read Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM5/USART_INT">
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnnnnnnnnn--nnnnn--nnnn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FF3E79F" edc:addr="0x42001800">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="USART_EXT_CLK" edc:desc="USART with external clock" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="USART_INT_CLK" edc:desc="USART with internal clock" edc:when="(field &amp; 0x7) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="IBON" edc:nzwidth="0x1" edc:desc="Immediate Buffer Overflow Notification"/>
            <edc:SFRFieldDef edc:cname="TXINV" edc:nzwidth="0x1" edc:desc="Transmit Data Invert">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="TxD is not inverted" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INV" edc:desc="TxD is inverted" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RXINV" edc:nzwidth="0x1" edc:desc="Receive Data Invert">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="RxD is not inverted" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INV" edc:desc="RxD is inverted" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SAMPR" edc:nzwidth="0x3" edc:desc="Sample">
              <edc:SFRFieldSemantic edc:cname="16X_ARITHMETIC" edc:desc="16x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="16X_FRACTIONAL" edc:desc="16x over-sampling using fractional baudrate generation" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="8X_ARITHMETIC" edc:desc="8x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="8X_FRACTIONAL" edc:desc="8x over-sampling using fractional baudrate generation" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="3X_ARITHMETIC" edc:desc="3x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXPO" edc:nzwidth="0x2" edc:desc="Transmit Data Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="PAD[0] = TxD; PAD[1] = XCK" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="PAD[0] = TxD; PAD[2] = RTS; PAD[3] = CTS" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="PAD[0] = TxD; PAD[1] = XCK; PAD[2] = TE" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXPO" edc:nzwidth="0x2" edc:desc="Receive Data Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="SERCOM PAD[0] is used for data reception" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="SERCOM PAD[1] is used for data reception" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="SERCOM PAD[2] is used for data reception" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="SERCOM PAD[3] is used for data reception" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SAMPA" edc:nzwidth="0x2" edc:desc="Sample Adjustment">
              <edc:SFRFieldSemantic edc:cname="ADJ0" edc:desc="16x Over-sampling = 7-8-9; 8x Over-sampling = 3-4-5" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ADJ1" edc:desc="16x Over-sampling = 9-10-11; 8x Over-sampling = 4-5-6" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="ADJ2" edc:desc="16x Over-sampling = 11-12-13; 8x Over-sampling = 5-6-7" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="ADJ3" edc:desc="16x Over-sampling = 13-14-15; 8x Over-sampling = 6-7-8" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FORM" edc:nzwidth="0x4" edc:desc="Frame Format">
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_NO_PARITY" edc:desc="USART frame" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_WITH_PARITY" edc:desc="USART frame with parity" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_LINBRKGEN" edc:desc="LIN Master Break and Sync generation" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_AUTO_BAUD_NO_PARITY" edc:desc="Auto-baud (LIN Slave) - break detection and auto-baud" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_AUTO_BAUD_WITH_PARITY" edc:desc="Auto-baud - break detection and auto-baud with parity" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_ISO_7816" edc:desc="ISO 7816" edc:when="(field &amp; 0xF) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMODE" edc:nzwidth="0x1" edc:desc="Communication Mode">
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Asynchronous communication." edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Synchronous communication." edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity">
              <edc:SFRFieldSemantic edc:cname="IDLE_LOW" edc:desc="TxD Change:- Rising XCK edge, RxD Sample:- Falling XCK edge" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IDLE_HIGH" edc:desc="TxD Change:- Falling XCK edge, RxD Sample:- Rising XCK edge" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order">
              <edc:SFRFieldSemantic edc:cname="MSB" edc:desc="MSB is transmitted first." edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LSB" edc:desc="LSB is transmitted first." edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="------nnnn----nn--n--nnn-n---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3C32747" edc:addr="0x42001804">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 Bits" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 Bits" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="5_BIT" edc:desc="5 Bits" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="6_BIT" edc:desc="6 Bits" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="7_BIT" edc:desc="7 Bits" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SBMODE" edc:nzwidth="0x1" edc:desc="Stop Bit Mode">
              <edc:SFRFieldSemantic edc:cname="1_BIT" edc:desc="One Stop Bit" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2_BIT" edc:desc="Two Stop Bits" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="COLDEN" edc:nzwidth="0x1" edc:desc="Collision Detection Enable"/>
            <edc:SFRFieldDef edc:cname="SFDE" edc:nzwidth="0x1" edc:desc="Start of Frame Detection Enable"/>
            <edc:SFRFieldDef edc:cname="ENC" edc:nzwidth="0x1" edc:desc="Encoding Format">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Data is not encoded" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IRDA" edc:desc="Data is IrDA encoded" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PMODE" edc:nzwidth="0x1" edc:desc="Parity Mode">
              <edc:SFRFieldSemantic edc:cname="EVEN" edc:desc="Even Parity" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ODD" edc:desc="Odd Parity" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TXEN" edc:nzwidth="0x1" edc:desc="Transmitter Enable"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="FIFOCLR" edc:nzwidth="0x2" edc:desc="FIFO Clear">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TXFIFO" edc:desc="Clear TX FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RXFIFO" edc:desc="Clear RX FIFO" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Clear both TX and RF FIFOs" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LINCMD" edc:nzwidth="0x2" edc:desc="LIN Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Normal USART transmission" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SOFTWARE_CONTROL_TRANSMIT_CMD" edc:desc="Break field is transmitted when DATA is written" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="AUTO_TRANSMIT_CMD" edc:desc="Break, sync and identifier are automatically transmitted when DATA is written with the identifier" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="nnnnn-nn-nnn--nn----nnnn-----nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFB730F07" edc:addr="0x42001808">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="GTIME" edc:nzwidth="0x3" edc:desc="Guard Time"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="BRKLEN" edc:nzwidth="0x2" edc:desc="LIN Master Break Length">
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="Break field transmission is 13 bit times" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="17_BIT" edc:desc="Break field transmission is 17 bit times" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="21_BIT" edc:desc="Break field transmission is 21 bit times" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="26_BIT" edc:desc="Break field transmission is 26 bit times" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="HDRDLY" edc:nzwidth="0x2" edc:desc="LIN Master Header Delay">
              <edc:SFRFieldSemantic edc:cname="DELAY0" edc:desc="Delay between break and sync transmission is 1 bit time; Delay between sync and ID transmission is 1 bit time" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DELAY1" edc:desc="Delay between break and sync transmission is 4 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="DELAY2" edc:desc="Delay between break and sync transmission is 8 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="DELAY3" edc:desc="Delay between break and sync transmission is 14 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="INACK" edc:nzwidth="0x1" edc:desc="Inhibit Not Acknowledge"/>
            <edc:SFRFieldDef edc:cname="DSNACK" edc:nzwidth="0x1" edc:desc="Disable Successive NACK"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MAXITER" edc:nzwidth="0x3" edc:desc="Maximum Iterations"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DATA32B" edc:nzwidth="0x2" edc:desc="Data 32 Bit">
              <edc:SFRFieldSemantic edc:cname="0x0" edc:desc="Reads and writes with CHSIZE" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="0x1" edc:desc="Reads with CHSIZE, writes with 32-bit extension" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="0x2" edc:desc="Reads with 32-bit extension, writes with CHSIZE" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="0x3" edc:desc="Reads and writes with 32-bit extension" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="RXTRHOLD" edc:nzwidth="0x2" edc:desc="Receive FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated when DATA is present in the FIFO" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when FIFO is half-full" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FULL" edc:desc="Interrupt and DMA triggers are generated when FIFO is full" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXTRHOLD" edc:nzwidth="0x2" edc:desc="Transmit FIFO Threshold">
              <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Interrupt and DMA triggers are generated as long as the FIFO is not full" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Interrupt and DMA triggers are generated when half FIFO space is free" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EMPTY" edc:desc="Interrupt and DMA triggers are generated when the FIFO is empty" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="BAUD" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x4200180C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x10" edc:desc="Baud Rate Value"/>
            <edc:AdjustPoint edc:offset="-3"/>
            <edc:SFRFieldDef edc:cname="FP" edc:nzwidth="0x3" edc:desc="Fractional Part"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="RXPL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4200180E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="RXPL" edc:nzwidth="0x8" edc:desc="Receive Pulse Length"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42001814">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42001816">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42001818">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="--------nnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xFF" edc:addr="0x4200181A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Parity Error"/>
            <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Frame Error"/>
            <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
            <edc:SFRFieldDef edc:cname="CTS" edc:nzwidth="0x1" edc:desc="Clear To Send"/>
            <edc:SFRFieldDef edc:cname="ISF" edc:nzwidth="0x1" edc:desc="Inconsistent Sync Field"/>
            <edc:SFRFieldDef edc:cname="COLL" edc:nzwidth="0x1" edc:desc="Collision Detected"/>
            <edc:SFRFieldDef edc:cname="TXE" edc:nzwidth="0x1" edc:desc="Transmitter Empty"/>
            <edc:SFRFieldDef edc:cname="ITER" edc:nzwidth="0x1" edc:desc="Maximum Number of Repetitions Reached"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="---------------------------rrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:addr="0x4200181C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="RXERRCNT" edc:nzwidth="0x1" edc:desc="RXERRCNT Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="LENGTH" edc:nzwidth="0x1" edc:desc="LENGTH Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="RXERRCNT" edc:nzwidth="0x8" edc:access="rrrrrrrr" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42001820">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="RXERRCNT" edc:nzwidth="0x8" edc:desc="Receive Error Count"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="LENGTH" edc:nzwidth="0x10" edc:access="------nnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x3FF" edc:addr="0x42001822">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x2" edc:desc="Data Length Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Length counter is disabled" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TX" edc:desc="Length counter is enabled for transmit" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RX" edc:desc="Length counter is enabled for receive" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42001828">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x42001830">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="FIFOSPACE" edc:nzwidth="0x10" edc:access="---rrrrr---rrrrr" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1F1F" edc:addr="0x42001834">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="TXSPACE" edc:nzwidth="0x5" edc:desc="Tx FIFO Empty Space"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RXSPACE" edc:nzwidth="0x5" edc:desc="Rx FIFO Filled Space"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM5" edc:cname="FIFOPTR" edc:nzwidth="0x10" edc:access="----nnnn----nnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xF0F" edc:addr="0x42001836">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM5">
            <edc:SFRFieldDef edc:cname="CPUWRPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Write Pointer"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CPURDPTR" edc:nzwidth="0x4" edc:desc="CPU FIFO Read Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TC0/COUNT8">
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="COUNT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42001C14">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x8" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="PER" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="11111111" edc:mclr="11111111" edc:addr="0x42001C1B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x8" edc:desc="Period Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="CC0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42001C1C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x8" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="CC1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42001C1D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x8" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="PERBUF" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="11111111" edc:mclr="11111111" edc:addr="0x42001C2F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x8" edc:desc="Period Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="CCBUF0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42001C30">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x8" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="CCBUF1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42001C31">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x8" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TC0/COUNT16">
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="COUNT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x42001C14">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x10" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="PER" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="1111111111111111" edc:mclr="1111111111111111" edc:addr="0x42001C1A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x10" edc:desc="Period Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="CC0" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x42001C1C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x10" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="CC1" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x42001C1E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x10" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="PERBUF" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="1111111111111111" edc:mclr="1111111111111111" edc:addr="0x42001C2E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x10" edc:desc="Period Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="CCBUF0" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x42001C30">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x10" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="CCBUF1" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x42001C32">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x10" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TC0/COUNT32">
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="COUNT" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42001C14">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x20" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="PER" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="11111111111111111111111111111111" edc:mclr="11111111111111111111111111111111" edc:addr="0x42001C18">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x20" edc:desc="Period Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="CC0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42001C1C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x20" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="CC1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42001C20">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x20" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="PERBUF" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="11111111111111111111111111111111" edc:mclr="11111111111111111111111111111111" edc:addr="0x42001C2C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x20" edc:desc="Period Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="CCBUF0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42001C30">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x20" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="CCBUF1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42001C34">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x20" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TC1/COUNT8">
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="COUNT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42002014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x8" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="PER" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="11111111" edc:mclr="11111111" edc:addr="0x4200201B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x8" edc:desc="Period Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="CC0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4200201C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x8" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="CC1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4200201D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x8" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="PERBUF" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="11111111" edc:mclr="11111111" edc:addr="0x4200202F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x8" edc:desc="Period Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="CCBUF0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42002030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x8" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="CCBUF1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42002031">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x8" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TC1/COUNT16">
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="COUNT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x42002014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x10" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="PER" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="1111111111111111" edc:mclr="1111111111111111" edc:addr="0x4200201A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x10" edc:desc="Period Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="CC0" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x4200201C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x10" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="CC1" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x4200201E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x10" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="PERBUF" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="1111111111111111" edc:mclr="1111111111111111" edc:addr="0x4200202E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x10" edc:desc="Period Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="CCBUF0" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x42002030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x10" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="CCBUF1" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x42002032">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x10" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TC1/COUNT32">
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="COUNT" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42002014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x20" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="PER" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="11111111111111111111111111111111" edc:mclr="11111111111111111111111111111111" edc:addr="0x42002018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x20" edc:desc="Period Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="CC0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x4200201C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x20" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="CC1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42002020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x20" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="PERBUF" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="11111111111111111111111111111111" edc:mclr="11111111111111111111111111111111" edc:addr="0x4200202C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x20" edc:desc="Period Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="CCBUF0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42002030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x20" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="CCBUF1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42002034">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x20" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TC2/COUNT8">
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="COUNT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42002414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x8" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="PER" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="11111111" edc:mclr="11111111" edc:addr="0x4200241B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x8" edc:desc="Period Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="CC0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4200241C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x8" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="CC1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4200241D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x8" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="PERBUF" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="11111111" edc:mclr="11111111" edc:addr="0x4200242F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x8" edc:desc="Period Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="CCBUF0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42002430">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x8" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="CCBUF1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42002431">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x8" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TC2/COUNT16">
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="COUNT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x42002414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x10" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="PER" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="1111111111111111" edc:mclr="1111111111111111" edc:addr="0x4200241A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x10" edc:desc="Period Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="CC0" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x4200241C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x10" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="CC1" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x4200241E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x10" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="PERBUF" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="1111111111111111" edc:mclr="1111111111111111" edc:addr="0x4200242E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x10" edc:desc="Period Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="CCBUF0" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x42002430">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x10" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="CCBUF1" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x42002432">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x10" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TC2/COUNT32">
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="COUNT" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42002414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x20" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="PER" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="11111111111111111111111111111111" edc:mclr="11111111111111111111111111111111" edc:addr="0x42002418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x20" edc:desc="Period Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="CC0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x4200241C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x20" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="CC1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42002420">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x20" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="PERBUF" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="11111111111111111111111111111111" edc:mclr="11111111111111111111111111111111" edc:addr="0x4200242C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x20" edc:desc="Period Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="CCBUF0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42002430">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x20" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="CCBUF1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42002434">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x20" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="USB/DEVICE">
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="CTRLB" edc:nzwidth="0x10" edc:access="----nnn----nnnnn" edc:por="0000000000000001" edc:mclr="0000000000000001" edc:impl="0xE1F" edc:addr="0x4100A008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="DETACH" edc:nzwidth="0x1" edc:desc="Detach"/>
            <edc:SFRFieldDef edc:cname="UPRSM" edc:nzwidth="0x1" edc:desc="Upstream Resume"/>
            <edc:SFRFieldDef edc:cname="SPDCONF" edc:nzwidth="0x2" edc:desc="Speed Configuration">
              <edc:SFRFieldSemantic edc:cname="FS" edc:desc="FS : Full Speed" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LS" edc:desc="LS : Low Speed" edc:when="(field &amp; 0x3) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NREPLY" edc:nzwidth="0x1" edc:desc="No Reply"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="GNAK" edc:nzwidth="0x1" edc:desc="Global NAK"/>
            <edc:SFRFieldDef edc:cname="LPMHDSK" edc:nzwidth="0x2" edc:desc="Link Power Management Handshake">
              <edc:SFRFieldSemantic edc:cname="NO" edc:desc="No handshake. LPM is not supported" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ACK" edc:desc="ACK" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="NYET" edc:desc="NYET" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="DADD" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4100A00A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="DADD" edc:nzwidth="0x7" edc:desc="Device Address"/>
            <edc:SFRFieldDef edc:cname="ADDEN" edc:nzwidth="0x1" edc:desc="Device Address Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="rr--rr--" edc:por="01000000" edc:mclr="01000000" edc:impl="0xCC" edc:addr="0x4100A00C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SPEED" edc:nzwidth="0x2" edc:desc="Speed Status">
              <edc:SFRFieldSemantic edc:cname="FS" edc:desc="Full-speed mode" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LS" edc:desc="Low-speed mode" edc:when="(field &amp; 0x3) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="LINESTATE" edc:nzwidth="0x2" edc:desc="USB Line State Status">
              <edc:SFRFieldSemantic edc:cname="0" edc:desc="SE0/RESET" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="FS-J or LS-K State" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="2" edc:desc="FS-K or LS-J State" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="FNUM" edc:nzwidth="0x10" edc:access="n-nnnnnnnnnnn---" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xBFF8" edc:addr="0x4100A010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="FNUM" edc:nzwidth="0xB" edc:desc="Frame Number"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FNCERR" edc:nzwidth="0x1" edc:desc="Frame Number CRC Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="INTENCLR" edc:nzwidth="0x10" edc:access="------nnnnnnnn-n" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x3FD" edc:addr="0x4100A014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="SUSPEND" edc:nzwidth="0x1" edc:desc="Suspend Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SOF" edc:nzwidth="0x1" edc:desc="Start Of Frame Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EORST" edc:nzwidth="0x1" edc:desc="End of Reset Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="WAKEUP" edc:nzwidth="0x1" edc:desc="Wake Up Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EORSM" edc:nzwidth="0x1" edc:desc="End Of Resume Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="UPRSM" edc:nzwidth="0x1" edc:desc="Upstream Resume Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RAMACER" edc:nzwidth="0x1" edc:desc="Ram Access Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LPMNYET" edc:nzwidth="0x1" edc:desc="Link Power Management Not Yet Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LPMSUSP" edc:nzwidth="0x1" edc:desc="Link Power Management Suspend Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="INTENSET" edc:nzwidth="0x10" edc:access="------nnnnnnnn-n" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x3FD" edc:addr="0x4100A018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="SUSPEND" edc:nzwidth="0x1" edc:desc="Suspend Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SOF" edc:nzwidth="0x1" edc:desc="Start Of Frame Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EORST" edc:nzwidth="0x1" edc:desc="End of Reset Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="WAKEUP" edc:nzwidth="0x1" edc:desc="Wake Up Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EORSM" edc:nzwidth="0x1" edc:desc="End Of Resume Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="UPRSM" edc:nzwidth="0x1" edc:desc="Upstream Resume Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RAMACER" edc:nzwidth="0x1" edc:desc="Ram Access Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LPMNYET" edc:nzwidth="0x1" edc:desc="Link Power Management Not Yet Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LPMSUSP" edc:nzwidth="0x1" edc:desc="Link Power Management Suspend Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="INTFLAG" edc:nzwidth="0x10" edc:access="------nnnnnnnn-n" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x3FD" edc:addr="0x4100A01C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="SUSPEND" edc:nzwidth="0x1" edc:desc="Suspend"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SOF" edc:nzwidth="0x1" edc:desc="Start Of Frame"/>
            <edc:SFRFieldDef edc:cname="EORST" edc:nzwidth="0x1" edc:desc="End of Reset"/>
            <edc:SFRFieldDef edc:cname="WAKEUP" edc:nzwidth="0x1" edc:desc="Wake Up"/>
            <edc:SFRFieldDef edc:cname="EORSM" edc:nzwidth="0x1" edc:desc="End Of Resume"/>
            <edc:SFRFieldDef edc:cname="UPRSM" edc:nzwidth="0x1" edc:desc="Upstream Resume"/>
            <edc:SFRFieldDef edc:cname="RAMACER" edc:nzwidth="0x1" edc:desc="Ram Access"/>
            <edc:SFRFieldDef edc:cname="LPMNYET" edc:nzwidth="0x1" edc:desc="Link Power Management Not Yet"/>
            <edc:SFRFieldDef edc:cname="LPMSUSP" edc:nzwidth="0x1" edc:desc="Link Power Management Suspend"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPINTSMRY" edc:nzwidth="0x10" edc:access="--------rrrrrrrr" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xFF" edc:addr="0x4100A020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="EPINT0" edc:nzwidth="0x1" edc:desc="End Point 0 Interrupt"/>
            <edc:SFRFieldDef edc:cname="EPINT1" edc:nzwidth="0x1" edc:desc="End Point 1 Interrupt"/>
            <edc:SFRFieldDef edc:cname="EPINT2" edc:nzwidth="0x1" edc:desc="End Point 2 Interrupt"/>
            <edc:SFRFieldDef edc:cname="EPINT3" edc:nzwidth="0x1" edc:desc="End Point 3 Interrupt"/>
            <edc:SFRFieldDef edc:cname="EPINT4" edc:nzwidth="0x1" edc:desc="End Point 4 Interrupt"/>
            <edc:SFRFieldDef edc:cname="EPINT5" edc:nzwidth="0x1" edc:desc="End Point 5 Interrupt"/>
            <edc:SFRFieldDef edc:cname="EPINT6" edc:nzwidth="0x1" edc:desc="End Point 6 Interrupt"/>
            <edc:SFRFieldDef edc:cname="EPINT7" edc:nzwidth="0x1" edc:desc="End Point 7 Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPCFG0" edc:nzwidth="0x8" edc:access="-nnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x77" edc:addr="0x4100A100">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="EPTYPE0" edc:nzwidth="0x3" edc:desc="End Point Type0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="EPTYPE1" edc:nzwidth="0x3" edc:desc="End Point Type1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPSTATUSCLR0" edc:nzwidth="0x8" edc:access="wwww-www" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF7" edc:addr="0x4100A104">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="DTGLOUT" edc:nzwidth="0x1" edc:desc="Data Toggle OUT Clear"/>
            <edc:SFRFieldDef edc:cname="DTGLIN" edc:nzwidth="0x1" edc:desc="Data Toggle IN Clear"/>
            <edc:SFRFieldDef edc:cname="CURBK" edc:nzwidth="0x1" edc:desc="Current Bank Clear"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="STALLRQ0" edc:nzwidth="0x1" edc:desc="Stall 0 Request Clear"/>
            <edc:SFRFieldDef edc:cname="STALLRQ1" edc:nzwidth="0x1" edc:desc="Stall 1 Request Clear"/>
            <edc:SFRFieldDef edc:cname="BK0RDY" edc:nzwidth="0x1" edc:desc="Bank 0 Ready Clear"/>
            <edc:SFRFieldDef edc:cname="BK1RDY" edc:nzwidth="0x1" edc:desc="Bank 1 Ready Clear"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPSTATUSSET0" edc:nzwidth="0x8" edc:access="wwww-www" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF7" edc:addr="0x4100A105">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="DTGLOUT" edc:nzwidth="0x1" edc:desc="Data Toggle OUT Set"/>
            <edc:SFRFieldDef edc:cname="DTGLIN" edc:nzwidth="0x1" edc:desc="Data Toggle IN Set"/>
            <edc:SFRFieldDef edc:cname="CURBK" edc:nzwidth="0x1" edc:desc="Current Bank Set"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="STALLRQ0" edc:nzwidth="0x1" edc:desc="Stall 0 Request Set"/>
            <edc:SFRFieldDef edc:cname="STALLRQ1" edc:nzwidth="0x1" edc:desc="Stall 1 Request Set"/>
            <edc:SFRFieldDef edc:cname="BK0RDY" edc:nzwidth="0x1" edc:desc="Bank 0 Ready Set"/>
            <edc:SFRFieldDef edc:cname="BK1RDY" edc:nzwidth="0x1" edc:desc="Bank 1 Ready Set"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPSTATUS0" edc:nzwidth="0x8" edc:access="rrrr-rrr" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF7" edc:addr="0x4100A106">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="DTGLOUT" edc:nzwidth="0x1" edc:desc="Data Toggle Out"/>
            <edc:SFRFieldDef edc:cname="DTGLIN" edc:nzwidth="0x1" edc:desc="Data Toggle In"/>
            <edc:SFRFieldDef edc:cname="CURBK" edc:nzwidth="0x1" edc:desc="Current Bank"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="STALLRQ0" edc:nzwidth="0x1" edc:desc="Stall 0 Request"/>
            <edc:SFRFieldDef edc:cname="STALLRQ1" edc:nzwidth="0x1" edc:desc="Stall 1 Request"/>
            <edc:SFRFieldDef edc:cname="BK0RDY" edc:nzwidth="0x1" edc:desc="Bank 0 ready"/>
            <edc:SFRFieldDef edc:cname="BK1RDY" edc:nzwidth="0x1" edc:desc="Bank 1 ready"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPINTFLAG0" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:addr="0x4100A107">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="TRCPT0" edc:nzwidth="0x1" edc:desc="Transfer Complete 0"/>
            <edc:SFRFieldDef edc:cname="TRCPT1" edc:nzwidth="0x1" edc:desc="Transfer Complete 1"/>
            <edc:SFRFieldDef edc:cname="TRFAIL0" edc:nzwidth="0x1" edc:desc="Error Flow 0"/>
            <edc:SFRFieldDef edc:cname="TRFAIL1" edc:nzwidth="0x1" edc:desc="Error Flow 1"/>
            <edc:SFRFieldDef edc:cname="RXSTP" edc:nzwidth="0x1" edc:desc="Received Setup"/>
            <edc:SFRFieldDef edc:cname="STALL0" edc:nzwidth="0x1" edc:desc="Stall 0 In/out"/>
            <edc:SFRFieldDef edc:cname="STALL1" edc:nzwidth="0x1" edc:desc="Stall 1 In/out"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPINTENCLR0" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:addr="0x4100A108">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="TRCPT0" edc:nzwidth="0x1" edc:desc="Transfer Complete 0 Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TRCPT1" edc:nzwidth="0x1" edc:desc="Transfer Complete 1 Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TRFAIL0" edc:nzwidth="0x1" edc:desc="Error Flow 0 Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TRFAIL1" edc:nzwidth="0x1" edc:desc="Error Flow 1 Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXSTP" edc:nzwidth="0x1" edc:desc="Received Setup Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="STALL0" edc:nzwidth="0x1" edc:desc="Stall 0 In/Out Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="STALL1" edc:nzwidth="0x1" edc:desc="Stall 1 In/Out Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPINTENSET0" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:addr="0x4100A109">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="TRCPT0" edc:nzwidth="0x1" edc:desc="Transfer Complete 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRCPT1" edc:nzwidth="0x1" edc:desc="Transfer Complete 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRFAIL0" edc:nzwidth="0x1" edc:desc="Error Flow 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRFAIL1" edc:nzwidth="0x1" edc:desc="Error Flow 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXSTP" edc:nzwidth="0x1" edc:desc="Received Setup Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="STALL0" edc:nzwidth="0x1" edc:desc="Stall 0 In/out Interrupt enable"/>
            <edc:SFRFieldDef edc:cname="STALL1" edc:nzwidth="0x1" edc:desc="Stall 1 In/out Interrupt enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPCFG1" edc:nzwidth="0x8" edc:access="-nnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x77" edc:addr="0x4100A120">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="EPTYPE0" edc:nzwidth="0x3" edc:desc="End Point Type0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="EPTYPE1" edc:nzwidth="0x3" edc:desc="End Point Type1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPSTATUSCLR1" edc:nzwidth="0x8" edc:access="wwww-www" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF7" edc:addr="0x4100A124">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="DTGLOUT" edc:nzwidth="0x1" edc:desc="Data Toggle OUT Clear"/>
            <edc:SFRFieldDef edc:cname="DTGLIN" edc:nzwidth="0x1" edc:desc="Data Toggle IN Clear"/>
            <edc:SFRFieldDef edc:cname="CURBK" edc:nzwidth="0x1" edc:desc="Current Bank Clear"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="STALLRQ0" edc:nzwidth="0x1" edc:desc="Stall 0 Request Clear"/>
            <edc:SFRFieldDef edc:cname="STALLRQ1" edc:nzwidth="0x1" edc:desc="Stall 1 Request Clear"/>
            <edc:SFRFieldDef edc:cname="BK0RDY" edc:nzwidth="0x1" edc:desc="Bank 0 Ready Clear"/>
            <edc:SFRFieldDef edc:cname="BK1RDY" edc:nzwidth="0x1" edc:desc="Bank 1 Ready Clear"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPSTATUSSET1" edc:nzwidth="0x8" edc:access="wwww-www" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF7" edc:addr="0x4100A125">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="DTGLOUT" edc:nzwidth="0x1" edc:desc="Data Toggle OUT Set"/>
            <edc:SFRFieldDef edc:cname="DTGLIN" edc:nzwidth="0x1" edc:desc="Data Toggle IN Set"/>
            <edc:SFRFieldDef edc:cname="CURBK" edc:nzwidth="0x1" edc:desc="Current Bank Set"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="STALLRQ0" edc:nzwidth="0x1" edc:desc="Stall 0 Request Set"/>
            <edc:SFRFieldDef edc:cname="STALLRQ1" edc:nzwidth="0x1" edc:desc="Stall 1 Request Set"/>
            <edc:SFRFieldDef edc:cname="BK0RDY" edc:nzwidth="0x1" edc:desc="Bank 0 Ready Set"/>
            <edc:SFRFieldDef edc:cname="BK1RDY" edc:nzwidth="0x1" edc:desc="Bank 1 Ready Set"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPSTATUS1" edc:nzwidth="0x8" edc:access="rrrr-rrr" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF7" edc:addr="0x4100A126">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="DTGLOUT" edc:nzwidth="0x1" edc:desc="Data Toggle Out"/>
            <edc:SFRFieldDef edc:cname="DTGLIN" edc:nzwidth="0x1" edc:desc="Data Toggle In"/>
            <edc:SFRFieldDef edc:cname="CURBK" edc:nzwidth="0x1" edc:desc="Current Bank"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="STALLRQ0" edc:nzwidth="0x1" edc:desc="Stall 0 Request"/>
            <edc:SFRFieldDef edc:cname="STALLRQ1" edc:nzwidth="0x1" edc:desc="Stall 1 Request"/>
            <edc:SFRFieldDef edc:cname="BK0RDY" edc:nzwidth="0x1" edc:desc="Bank 0 ready"/>
            <edc:SFRFieldDef edc:cname="BK1RDY" edc:nzwidth="0x1" edc:desc="Bank 1 ready"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPINTFLAG1" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:addr="0x4100A127">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="TRCPT0" edc:nzwidth="0x1" edc:desc="Transfer Complete 0"/>
            <edc:SFRFieldDef edc:cname="TRCPT1" edc:nzwidth="0x1" edc:desc="Transfer Complete 1"/>
            <edc:SFRFieldDef edc:cname="TRFAIL0" edc:nzwidth="0x1" edc:desc="Error Flow 0"/>
            <edc:SFRFieldDef edc:cname="TRFAIL1" edc:nzwidth="0x1" edc:desc="Error Flow 1"/>
            <edc:SFRFieldDef edc:cname="RXSTP" edc:nzwidth="0x1" edc:desc="Received Setup"/>
            <edc:SFRFieldDef edc:cname="STALL0" edc:nzwidth="0x1" edc:desc="Stall 0 In/out"/>
            <edc:SFRFieldDef edc:cname="STALL1" edc:nzwidth="0x1" edc:desc="Stall 1 In/out"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPINTENCLR1" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:addr="0x4100A128">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="TRCPT0" edc:nzwidth="0x1" edc:desc="Transfer Complete 0 Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TRCPT1" edc:nzwidth="0x1" edc:desc="Transfer Complete 1 Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TRFAIL0" edc:nzwidth="0x1" edc:desc="Error Flow 0 Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TRFAIL1" edc:nzwidth="0x1" edc:desc="Error Flow 1 Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXSTP" edc:nzwidth="0x1" edc:desc="Received Setup Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="STALL0" edc:nzwidth="0x1" edc:desc="Stall 0 In/Out Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="STALL1" edc:nzwidth="0x1" edc:desc="Stall 1 In/Out Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPINTENSET1" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:addr="0x4100A129">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="TRCPT0" edc:nzwidth="0x1" edc:desc="Transfer Complete 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRCPT1" edc:nzwidth="0x1" edc:desc="Transfer Complete 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRFAIL0" edc:nzwidth="0x1" edc:desc="Error Flow 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRFAIL1" edc:nzwidth="0x1" edc:desc="Error Flow 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXSTP" edc:nzwidth="0x1" edc:desc="Received Setup Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="STALL0" edc:nzwidth="0x1" edc:desc="Stall 0 In/out Interrupt enable"/>
            <edc:SFRFieldDef edc:cname="STALL1" edc:nzwidth="0x1" edc:desc="Stall 1 In/out Interrupt enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPCFG2" edc:nzwidth="0x8" edc:access="-nnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x77" edc:addr="0x4100A140">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="EPTYPE0" edc:nzwidth="0x3" edc:desc="End Point Type0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="EPTYPE1" edc:nzwidth="0x3" edc:desc="End Point Type1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPSTATUSCLR2" edc:nzwidth="0x8" edc:access="wwww-www" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF7" edc:addr="0x4100A144">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="DTGLOUT" edc:nzwidth="0x1" edc:desc="Data Toggle OUT Clear"/>
            <edc:SFRFieldDef edc:cname="DTGLIN" edc:nzwidth="0x1" edc:desc="Data Toggle IN Clear"/>
            <edc:SFRFieldDef edc:cname="CURBK" edc:nzwidth="0x1" edc:desc="Current Bank Clear"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="STALLRQ0" edc:nzwidth="0x1" edc:desc="Stall 0 Request Clear"/>
            <edc:SFRFieldDef edc:cname="STALLRQ1" edc:nzwidth="0x1" edc:desc="Stall 1 Request Clear"/>
            <edc:SFRFieldDef edc:cname="BK0RDY" edc:nzwidth="0x1" edc:desc="Bank 0 Ready Clear"/>
            <edc:SFRFieldDef edc:cname="BK1RDY" edc:nzwidth="0x1" edc:desc="Bank 1 Ready Clear"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPSTATUSSET2" edc:nzwidth="0x8" edc:access="wwww-www" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF7" edc:addr="0x4100A145">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="DTGLOUT" edc:nzwidth="0x1" edc:desc="Data Toggle OUT Set"/>
            <edc:SFRFieldDef edc:cname="DTGLIN" edc:nzwidth="0x1" edc:desc="Data Toggle IN Set"/>
            <edc:SFRFieldDef edc:cname="CURBK" edc:nzwidth="0x1" edc:desc="Current Bank Set"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="STALLRQ0" edc:nzwidth="0x1" edc:desc="Stall 0 Request Set"/>
            <edc:SFRFieldDef edc:cname="STALLRQ1" edc:nzwidth="0x1" edc:desc="Stall 1 Request Set"/>
            <edc:SFRFieldDef edc:cname="BK0RDY" edc:nzwidth="0x1" edc:desc="Bank 0 Ready Set"/>
            <edc:SFRFieldDef edc:cname="BK1RDY" edc:nzwidth="0x1" edc:desc="Bank 1 Ready Set"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPSTATUS2" edc:nzwidth="0x8" edc:access="rrrr-rrr" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF7" edc:addr="0x4100A146">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="DTGLOUT" edc:nzwidth="0x1" edc:desc="Data Toggle Out"/>
            <edc:SFRFieldDef edc:cname="DTGLIN" edc:nzwidth="0x1" edc:desc="Data Toggle In"/>
            <edc:SFRFieldDef edc:cname="CURBK" edc:nzwidth="0x1" edc:desc="Current Bank"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="STALLRQ0" edc:nzwidth="0x1" edc:desc="Stall 0 Request"/>
            <edc:SFRFieldDef edc:cname="STALLRQ1" edc:nzwidth="0x1" edc:desc="Stall 1 Request"/>
            <edc:SFRFieldDef edc:cname="BK0RDY" edc:nzwidth="0x1" edc:desc="Bank 0 ready"/>
            <edc:SFRFieldDef edc:cname="BK1RDY" edc:nzwidth="0x1" edc:desc="Bank 1 ready"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPINTFLAG2" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:addr="0x4100A147">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="TRCPT0" edc:nzwidth="0x1" edc:desc="Transfer Complete 0"/>
            <edc:SFRFieldDef edc:cname="TRCPT1" edc:nzwidth="0x1" edc:desc="Transfer Complete 1"/>
            <edc:SFRFieldDef edc:cname="TRFAIL0" edc:nzwidth="0x1" edc:desc="Error Flow 0"/>
            <edc:SFRFieldDef edc:cname="TRFAIL1" edc:nzwidth="0x1" edc:desc="Error Flow 1"/>
            <edc:SFRFieldDef edc:cname="RXSTP" edc:nzwidth="0x1" edc:desc="Received Setup"/>
            <edc:SFRFieldDef edc:cname="STALL0" edc:nzwidth="0x1" edc:desc="Stall 0 In/out"/>
            <edc:SFRFieldDef edc:cname="STALL1" edc:nzwidth="0x1" edc:desc="Stall 1 In/out"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPINTENCLR2" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:addr="0x4100A148">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="TRCPT0" edc:nzwidth="0x1" edc:desc="Transfer Complete 0 Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TRCPT1" edc:nzwidth="0x1" edc:desc="Transfer Complete 1 Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TRFAIL0" edc:nzwidth="0x1" edc:desc="Error Flow 0 Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TRFAIL1" edc:nzwidth="0x1" edc:desc="Error Flow 1 Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXSTP" edc:nzwidth="0x1" edc:desc="Received Setup Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="STALL0" edc:nzwidth="0x1" edc:desc="Stall 0 In/Out Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="STALL1" edc:nzwidth="0x1" edc:desc="Stall 1 In/Out Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPINTENSET2" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:addr="0x4100A149">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="TRCPT0" edc:nzwidth="0x1" edc:desc="Transfer Complete 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRCPT1" edc:nzwidth="0x1" edc:desc="Transfer Complete 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRFAIL0" edc:nzwidth="0x1" edc:desc="Error Flow 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRFAIL1" edc:nzwidth="0x1" edc:desc="Error Flow 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXSTP" edc:nzwidth="0x1" edc:desc="Received Setup Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="STALL0" edc:nzwidth="0x1" edc:desc="Stall 0 In/out Interrupt enable"/>
            <edc:SFRFieldDef edc:cname="STALL1" edc:nzwidth="0x1" edc:desc="Stall 1 In/out Interrupt enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPCFG3" edc:nzwidth="0x8" edc:access="-nnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x77" edc:addr="0x4100A160">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="EPTYPE0" edc:nzwidth="0x3" edc:desc="End Point Type0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="EPTYPE1" edc:nzwidth="0x3" edc:desc="End Point Type1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPSTATUSCLR3" edc:nzwidth="0x8" edc:access="wwww-www" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF7" edc:addr="0x4100A164">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="DTGLOUT" edc:nzwidth="0x1" edc:desc="Data Toggle OUT Clear"/>
            <edc:SFRFieldDef edc:cname="DTGLIN" edc:nzwidth="0x1" edc:desc="Data Toggle IN Clear"/>
            <edc:SFRFieldDef edc:cname="CURBK" edc:nzwidth="0x1" edc:desc="Current Bank Clear"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="STALLRQ0" edc:nzwidth="0x1" edc:desc="Stall 0 Request Clear"/>
            <edc:SFRFieldDef edc:cname="STALLRQ1" edc:nzwidth="0x1" edc:desc="Stall 1 Request Clear"/>
            <edc:SFRFieldDef edc:cname="BK0RDY" edc:nzwidth="0x1" edc:desc="Bank 0 Ready Clear"/>
            <edc:SFRFieldDef edc:cname="BK1RDY" edc:nzwidth="0x1" edc:desc="Bank 1 Ready Clear"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPSTATUSSET3" edc:nzwidth="0x8" edc:access="wwww-www" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF7" edc:addr="0x4100A165">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="DTGLOUT" edc:nzwidth="0x1" edc:desc="Data Toggle OUT Set"/>
            <edc:SFRFieldDef edc:cname="DTGLIN" edc:nzwidth="0x1" edc:desc="Data Toggle IN Set"/>
            <edc:SFRFieldDef edc:cname="CURBK" edc:nzwidth="0x1" edc:desc="Current Bank Set"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="STALLRQ0" edc:nzwidth="0x1" edc:desc="Stall 0 Request Set"/>
            <edc:SFRFieldDef edc:cname="STALLRQ1" edc:nzwidth="0x1" edc:desc="Stall 1 Request Set"/>
            <edc:SFRFieldDef edc:cname="BK0RDY" edc:nzwidth="0x1" edc:desc="Bank 0 Ready Set"/>
            <edc:SFRFieldDef edc:cname="BK1RDY" edc:nzwidth="0x1" edc:desc="Bank 1 Ready Set"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPSTATUS3" edc:nzwidth="0x8" edc:access="rrrr-rrr" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF7" edc:addr="0x4100A166">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="DTGLOUT" edc:nzwidth="0x1" edc:desc="Data Toggle Out"/>
            <edc:SFRFieldDef edc:cname="DTGLIN" edc:nzwidth="0x1" edc:desc="Data Toggle In"/>
            <edc:SFRFieldDef edc:cname="CURBK" edc:nzwidth="0x1" edc:desc="Current Bank"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="STALLRQ0" edc:nzwidth="0x1" edc:desc="Stall 0 Request"/>
            <edc:SFRFieldDef edc:cname="STALLRQ1" edc:nzwidth="0x1" edc:desc="Stall 1 Request"/>
            <edc:SFRFieldDef edc:cname="BK0RDY" edc:nzwidth="0x1" edc:desc="Bank 0 ready"/>
            <edc:SFRFieldDef edc:cname="BK1RDY" edc:nzwidth="0x1" edc:desc="Bank 1 ready"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPINTFLAG3" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:addr="0x4100A167">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="TRCPT0" edc:nzwidth="0x1" edc:desc="Transfer Complete 0"/>
            <edc:SFRFieldDef edc:cname="TRCPT1" edc:nzwidth="0x1" edc:desc="Transfer Complete 1"/>
            <edc:SFRFieldDef edc:cname="TRFAIL0" edc:nzwidth="0x1" edc:desc="Error Flow 0"/>
            <edc:SFRFieldDef edc:cname="TRFAIL1" edc:nzwidth="0x1" edc:desc="Error Flow 1"/>
            <edc:SFRFieldDef edc:cname="RXSTP" edc:nzwidth="0x1" edc:desc="Received Setup"/>
            <edc:SFRFieldDef edc:cname="STALL0" edc:nzwidth="0x1" edc:desc="Stall 0 In/out"/>
            <edc:SFRFieldDef edc:cname="STALL1" edc:nzwidth="0x1" edc:desc="Stall 1 In/out"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPINTENCLR3" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:addr="0x4100A168">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="TRCPT0" edc:nzwidth="0x1" edc:desc="Transfer Complete 0 Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TRCPT1" edc:nzwidth="0x1" edc:desc="Transfer Complete 1 Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TRFAIL0" edc:nzwidth="0x1" edc:desc="Error Flow 0 Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TRFAIL1" edc:nzwidth="0x1" edc:desc="Error Flow 1 Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXSTP" edc:nzwidth="0x1" edc:desc="Received Setup Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="STALL0" edc:nzwidth="0x1" edc:desc="Stall 0 In/Out Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="STALL1" edc:nzwidth="0x1" edc:desc="Stall 1 In/Out Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPINTENSET3" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:addr="0x4100A169">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="TRCPT0" edc:nzwidth="0x1" edc:desc="Transfer Complete 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRCPT1" edc:nzwidth="0x1" edc:desc="Transfer Complete 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRFAIL0" edc:nzwidth="0x1" edc:desc="Error Flow 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRFAIL1" edc:nzwidth="0x1" edc:desc="Error Flow 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXSTP" edc:nzwidth="0x1" edc:desc="Received Setup Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="STALL0" edc:nzwidth="0x1" edc:desc="Stall 0 In/out Interrupt enable"/>
            <edc:SFRFieldDef edc:cname="STALL1" edc:nzwidth="0x1" edc:desc="Stall 1 In/out Interrupt enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPCFG4" edc:nzwidth="0x8" edc:access="-nnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x77" edc:addr="0x4100A180">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="EPTYPE0" edc:nzwidth="0x3" edc:desc="End Point Type0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="EPTYPE1" edc:nzwidth="0x3" edc:desc="End Point Type1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPSTATUSCLR4" edc:nzwidth="0x8" edc:access="wwww-www" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF7" edc:addr="0x4100A184">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="DTGLOUT" edc:nzwidth="0x1" edc:desc="Data Toggle OUT Clear"/>
            <edc:SFRFieldDef edc:cname="DTGLIN" edc:nzwidth="0x1" edc:desc="Data Toggle IN Clear"/>
            <edc:SFRFieldDef edc:cname="CURBK" edc:nzwidth="0x1" edc:desc="Current Bank Clear"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="STALLRQ0" edc:nzwidth="0x1" edc:desc="Stall 0 Request Clear"/>
            <edc:SFRFieldDef edc:cname="STALLRQ1" edc:nzwidth="0x1" edc:desc="Stall 1 Request Clear"/>
            <edc:SFRFieldDef edc:cname="BK0RDY" edc:nzwidth="0x1" edc:desc="Bank 0 Ready Clear"/>
            <edc:SFRFieldDef edc:cname="BK1RDY" edc:nzwidth="0x1" edc:desc="Bank 1 Ready Clear"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPSTATUSSET4" edc:nzwidth="0x8" edc:access="wwww-www" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF7" edc:addr="0x4100A185">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="DTGLOUT" edc:nzwidth="0x1" edc:desc="Data Toggle OUT Set"/>
            <edc:SFRFieldDef edc:cname="DTGLIN" edc:nzwidth="0x1" edc:desc="Data Toggle IN Set"/>
            <edc:SFRFieldDef edc:cname="CURBK" edc:nzwidth="0x1" edc:desc="Current Bank Set"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="STALLRQ0" edc:nzwidth="0x1" edc:desc="Stall 0 Request Set"/>
            <edc:SFRFieldDef edc:cname="STALLRQ1" edc:nzwidth="0x1" edc:desc="Stall 1 Request Set"/>
            <edc:SFRFieldDef edc:cname="BK0RDY" edc:nzwidth="0x1" edc:desc="Bank 0 Ready Set"/>
            <edc:SFRFieldDef edc:cname="BK1RDY" edc:nzwidth="0x1" edc:desc="Bank 1 Ready Set"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPSTATUS4" edc:nzwidth="0x8" edc:access="rrrr-rrr" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF7" edc:addr="0x4100A186">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="DTGLOUT" edc:nzwidth="0x1" edc:desc="Data Toggle Out"/>
            <edc:SFRFieldDef edc:cname="DTGLIN" edc:nzwidth="0x1" edc:desc="Data Toggle In"/>
            <edc:SFRFieldDef edc:cname="CURBK" edc:nzwidth="0x1" edc:desc="Current Bank"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="STALLRQ0" edc:nzwidth="0x1" edc:desc="Stall 0 Request"/>
            <edc:SFRFieldDef edc:cname="STALLRQ1" edc:nzwidth="0x1" edc:desc="Stall 1 Request"/>
            <edc:SFRFieldDef edc:cname="BK0RDY" edc:nzwidth="0x1" edc:desc="Bank 0 ready"/>
            <edc:SFRFieldDef edc:cname="BK1RDY" edc:nzwidth="0x1" edc:desc="Bank 1 ready"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPINTFLAG4" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:addr="0x4100A187">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="TRCPT0" edc:nzwidth="0x1" edc:desc="Transfer Complete 0"/>
            <edc:SFRFieldDef edc:cname="TRCPT1" edc:nzwidth="0x1" edc:desc="Transfer Complete 1"/>
            <edc:SFRFieldDef edc:cname="TRFAIL0" edc:nzwidth="0x1" edc:desc="Error Flow 0"/>
            <edc:SFRFieldDef edc:cname="TRFAIL1" edc:nzwidth="0x1" edc:desc="Error Flow 1"/>
            <edc:SFRFieldDef edc:cname="RXSTP" edc:nzwidth="0x1" edc:desc="Received Setup"/>
            <edc:SFRFieldDef edc:cname="STALL0" edc:nzwidth="0x1" edc:desc="Stall 0 In/out"/>
            <edc:SFRFieldDef edc:cname="STALL1" edc:nzwidth="0x1" edc:desc="Stall 1 In/out"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPINTENCLR4" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:addr="0x4100A188">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="TRCPT0" edc:nzwidth="0x1" edc:desc="Transfer Complete 0 Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TRCPT1" edc:nzwidth="0x1" edc:desc="Transfer Complete 1 Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TRFAIL0" edc:nzwidth="0x1" edc:desc="Error Flow 0 Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TRFAIL1" edc:nzwidth="0x1" edc:desc="Error Flow 1 Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXSTP" edc:nzwidth="0x1" edc:desc="Received Setup Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="STALL0" edc:nzwidth="0x1" edc:desc="Stall 0 In/Out Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="STALL1" edc:nzwidth="0x1" edc:desc="Stall 1 In/Out Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPINTENSET4" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:addr="0x4100A189">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="TRCPT0" edc:nzwidth="0x1" edc:desc="Transfer Complete 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRCPT1" edc:nzwidth="0x1" edc:desc="Transfer Complete 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRFAIL0" edc:nzwidth="0x1" edc:desc="Error Flow 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRFAIL1" edc:nzwidth="0x1" edc:desc="Error Flow 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXSTP" edc:nzwidth="0x1" edc:desc="Received Setup Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="STALL0" edc:nzwidth="0x1" edc:desc="Stall 0 In/out Interrupt enable"/>
            <edc:SFRFieldDef edc:cname="STALL1" edc:nzwidth="0x1" edc:desc="Stall 1 In/out Interrupt enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPCFG5" edc:nzwidth="0x8" edc:access="-nnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x77" edc:addr="0x4100A1A0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="EPTYPE0" edc:nzwidth="0x3" edc:desc="End Point Type0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="EPTYPE1" edc:nzwidth="0x3" edc:desc="End Point Type1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPSTATUSCLR5" edc:nzwidth="0x8" edc:access="wwww-www" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF7" edc:addr="0x4100A1A4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="DTGLOUT" edc:nzwidth="0x1" edc:desc="Data Toggle OUT Clear"/>
            <edc:SFRFieldDef edc:cname="DTGLIN" edc:nzwidth="0x1" edc:desc="Data Toggle IN Clear"/>
            <edc:SFRFieldDef edc:cname="CURBK" edc:nzwidth="0x1" edc:desc="Current Bank Clear"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="STALLRQ0" edc:nzwidth="0x1" edc:desc="Stall 0 Request Clear"/>
            <edc:SFRFieldDef edc:cname="STALLRQ1" edc:nzwidth="0x1" edc:desc="Stall 1 Request Clear"/>
            <edc:SFRFieldDef edc:cname="BK0RDY" edc:nzwidth="0x1" edc:desc="Bank 0 Ready Clear"/>
            <edc:SFRFieldDef edc:cname="BK1RDY" edc:nzwidth="0x1" edc:desc="Bank 1 Ready Clear"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPSTATUSSET5" edc:nzwidth="0x8" edc:access="wwww-www" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF7" edc:addr="0x4100A1A5">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="DTGLOUT" edc:nzwidth="0x1" edc:desc="Data Toggle OUT Set"/>
            <edc:SFRFieldDef edc:cname="DTGLIN" edc:nzwidth="0x1" edc:desc="Data Toggle IN Set"/>
            <edc:SFRFieldDef edc:cname="CURBK" edc:nzwidth="0x1" edc:desc="Current Bank Set"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="STALLRQ0" edc:nzwidth="0x1" edc:desc="Stall 0 Request Set"/>
            <edc:SFRFieldDef edc:cname="STALLRQ1" edc:nzwidth="0x1" edc:desc="Stall 1 Request Set"/>
            <edc:SFRFieldDef edc:cname="BK0RDY" edc:nzwidth="0x1" edc:desc="Bank 0 Ready Set"/>
            <edc:SFRFieldDef edc:cname="BK1RDY" edc:nzwidth="0x1" edc:desc="Bank 1 Ready Set"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPSTATUS5" edc:nzwidth="0x8" edc:access="rrrr-rrr" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF7" edc:addr="0x4100A1A6">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="DTGLOUT" edc:nzwidth="0x1" edc:desc="Data Toggle Out"/>
            <edc:SFRFieldDef edc:cname="DTGLIN" edc:nzwidth="0x1" edc:desc="Data Toggle In"/>
            <edc:SFRFieldDef edc:cname="CURBK" edc:nzwidth="0x1" edc:desc="Current Bank"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="STALLRQ0" edc:nzwidth="0x1" edc:desc="Stall 0 Request"/>
            <edc:SFRFieldDef edc:cname="STALLRQ1" edc:nzwidth="0x1" edc:desc="Stall 1 Request"/>
            <edc:SFRFieldDef edc:cname="BK0RDY" edc:nzwidth="0x1" edc:desc="Bank 0 ready"/>
            <edc:SFRFieldDef edc:cname="BK1RDY" edc:nzwidth="0x1" edc:desc="Bank 1 ready"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPINTFLAG5" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:addr="0x4100A1A7">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="TRCPT0" edc:nzwidth="0x1" edc:desc="Transfer Complete 0"/>
            <edc:SFRFieldDef edc:cname="TRCPT1" edc:nzwidth="0x1" edc:desc="Transfer Complete 1"/>
            <edc:SFRFieldDef edc:cname="TRFAIL0" edc:nzwidth="0x1" edc:desc="Error Flow 0"/>
            <edc:SFRFieldDef edc:cname="TRFAIL1" edc:nzwidth="0x1" edc:desc="Error Flow 1"/>
            <edc:SFRFieldDef edc:cname="RXSTP" edc:nzwidth="0x1" edc:desc="Received Setup"/>
            <edc:SFRFieldDef edc:cname="STALL0" edc:nzwidth="0x1" edc:desc="Stall 0 In/out"/>
            <edc:SFRFieldDef edc:cname="STALL1" edc:nzwidth="0x1" edc:desc="Stall 1 In/out"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPINTENCLR5" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:addr="0x4100A1A8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="TRCPT0" edc:nzwidth="0x1" edc:desc="Transfer Complete 0 Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TRCPT1" edc:nzwidth="0x1" edc:desc="Transfer Complete 1 Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TRFAIL0" edc:nzwidth="0x1" edc:desc="Error Flow 0 Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TRFAIL1" edc:nzwidth="0x1" edc:desc="Error Flow 1 Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXSTP" edc:nzwidth="0x1" edc:desc="Received Setup Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="STALL0" edc:nzwidth="0x1" edc:desc="Stall 0 In/Out Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="STALL1" edc:nzwidth="0x1" edc:desc="Stall 1 In/Out Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPINTENSET5" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:addr="0x4100A1A9">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="TRCPT0" edc:nzwidth="0x1" edc:desc="Transfer Complete 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRCPT1" edc:nzwidth="0x1" edc:desc="Transfer Complete 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRFAIL0" edc:nzwidth="0x1" edc:desc="Error Flow 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRFAIL1" edc:nzwidth="0x1" edc:desc="Error Flow 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXSTP" edc:nzwidth="0x1" edc:desc="Received Setup Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="STALL0" edc:nzwidth="0x1" edc:desc="Stall 0 In/out Interrupt enable"/>
            <edc:SFRFieldDef edc:cname="STALL1" edc:nzwidth="0x1" edc:desc="Stall 1 In/out Interrupt enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPCFG6" edc:nzwidth="0x8" edc:access="-nnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x77" edc:addr="0x4100A1C0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="EPTYPE0" edc:nzwidth="0x3" edc:desc="End Point Type0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="EPTYPE1" edc:nzwidth="0x3" edc:desc="End Point Type1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPSTATUSCLR6" edc:nzwidth="0x8" edc:access="wwww-www" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF7" edc:addr="0x4100A1C4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="DTGLOUT" edc:nzwidth="0x1" edc:desc="Data Toggle OUT Clear"/>
            <edc:SFRFieldDef edc:cname="DTGLIN" edc:nzwidth="0x1" edc:desc="Data Toggle IN Clear"/>
            <edc:SFRFieldDef edc:cname="CURBK" edc:nzwidth="0x1" edc:desc="Current Bank Clear"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="STALLRQ0" edc:nzwidth="0x1" edc:desc="Stall 0 Request Clear"/>
            <edc:SFRFieldDef edc:cname="STALLRQ1" edc:nzwidth="0x1" edc:desc="Stall 1 Request Clear"/>
            <edc:SFRFieldDef edc:cname="BK0RDY" edc:nzwidth="0x1" edc:desc="Bank 0 Ready Clear"/>
            <edc:SFRFieldDef edc:cname="BK1RDY" edc:nzwidth="0x1" edc:desc="Bank 1 Ready Clear"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPSTATUSSET6" edc:nzwidth="0x8" edc:access="wwww-www" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF7" edc:addr="0x4100A1C5">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="DTGLOUT" edc:nzwidth="0x1" edc:desc="Data Toggle OUT Set"/>
            <edc:SFRFieldDef edc:cname="DTGLIN" edc:nzwidth="0x1" edc:desc="Data Toggle IN Set"/>
            <edc:SFRFieldDef edc:cname="CURBK" edc:nzwidth="0x1" edc:desc="Current Bank Set"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="STALLRQ0" edc:nzwidth="0x1" edc:desc="Stall 0 Request Set"/>
            <edc:SFRFieldDef edc:cname="STALLRQ1" edc:nzwidth="0x1" edc:desc="Stall 1 Request Set"/>
            <edc:SFRFieldDef edc:cname="BK0RDY" edc:nzwidth="0x1" edc:desc="Bank 0 Ready Set"/>
            <edc:SFRFieldDef edc:cname="BK1RDY" edc:nzwidth="0x1" edc:desc="Bank 1 Ready Set"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPSTATUS6" edc:nzwidth="0x8" edc:access="rrrr-rrr" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF7" edc:addr="0x4100A1C6">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="DTGLOUT" edc:nzwidth="0x1" edc:desc="Data Toggle Out"/>
            <edc:SFRFieldDef edc:cname="DTGLIN" edc:nzwidth="0x1" edc:desc="Data Toggle In"/>
            <edc:SFRFieldDef edc:cname="CURBK" edc:nzwidth="0x1" edc:desc="Current Bank"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="STALLRQ0" edc:nzwidth="0x1" edc:desc="Stall 0 Request"/>
            <edc:SFRFieldDef edc:cname="STALLRQ1" edc:nzwidth="0x1" edc:desc="Stall 1 Request"/>
            <edc:SFRFieldDef edc:cname="BK0RDY" edc:nzwidth="0x1" edc:desc="Bank 0 ready"/>
            <edc:SFRFieldDef edc:cname="BK1RDY" edc:nzwidth="0x1" edc:desc="Bank 1 ready"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPINTFLAG6" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:addr="0x4100A1C7">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="TRCPT0" edc:nzwidth="0x1" edc:desc="Transfer Complete 0"/>
            <edc:SFRFieldDef edc:cname="TRCPT1" edc:nzwidth="0x1" edc:desc="Transfer Complete 1"/>
            <edc:SFRFieldDef edc:cname="TRFAIL0" edc:nzwidth="0x1" edc:desc="Error Flow 0"/>
            <edc:SFRFieldDef edc:cname="TRFAIL1" edc:nzwidth="0x1" edc:desc="Error Flow 1"/>
            <edc:SFRFieldDef edc:cname="RXSTP" edc:nzwidth="0x1" edc:desc="Received Setup"/>
            <edc:SFRFieldDef edc:cname="STALL0" edc:nzwidth="0x1" edc:desc="Stall 0 In/out"/>
            <edc:SFRFieldDef edc:cname="STALL1" edc:nzwidth="0x1" edc:desc="Stall 1 In/out"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPINTENCLR6" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:addr="0x4100A1C8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="TRCPT0" edc:nzwidth="0x1" edc:desc="Transfer Complete 0 Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TRCPT1" edc:nzwidth="0x1" edc:desc="Transfer Complete 1 Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TRFAIL0" edc:nzwidth="0x1" edc:desc="Error Flow 0 Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TRFAIL1" edc:nzwidth="0x1" edc:desc="Error Flow 1 Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXSTP" edc:nzwidth="0x1" edc:desc="Received Setup Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="STALL0" edc:nzwidth="0x1" edc:desc="Stall 0 In/Out Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="STALL1" edc:nzwidth="0x1" edc:desc="Stall 1 In/Out Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPINTENSET6" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:addr="0x4100A1C9">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="TRCPT0" edc:nzwidth="0x1" edc:desc="Transfer Complete 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRCPT1" edc:nzwidth="0x1" edc:desc="Transfer Complete 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRFAIL0" edc:nzwidth="0x1" edc:desc="Error Flow 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRFAIL1" edc:nzwidth="0x1" edc:desc="Error Flow 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXSTP" edc:nzwidth="0x1" edc:desc="Received Setup Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="STALL0" edc:nzwidth="0x1" edc:desc="Stall 0 In/out Interrupt enable"/>
            <edc:SFRFieldDef edc:cname="STALL1" edc:nzwidth="0x1" edc:desc="Stall 1 In/out Interrupt enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPCFG7" edc:nzwidth="0x8" edc:access="-nnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x77" edc:addr="0x4100A1E0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="EPTYPE0" edc:nzwidth="0x3" edc:desc="End Point Type0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="EPTYPE1" edc:nzwidth="0x3" edc:desc="End Point Type1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPSTATUSCLR7" edc:nzwidth="0x8" edc:access="wwww-www" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF7" edc:addr="0x4100A1E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="DTGLOUT" edc:nzwidth="0x1" edc:desc="Data Toggle OUT Clear"/>
            <edc:SFRFieldDef edc:cname="DTGLIN" edc:nzwidth="0x1" edc:desc="Data Toggle IN Clear"/>
            <edc:SFRFieldDef edc:cname="CURBK" edc:nzwidth="0x1" edc:desc="Current Bank Clear"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="STALLRQ0" edc:nzwidth="0x1" edc:desc="Stall 0 Request Clear"/>
            <edc:SFRFieldDef edc:cname="STALLRQ1" edc:nzwidth="0x1" edc:desc="Stall 1 Request Clear"/>
            <edc:SFRFieldDef edc:cname="BK0RDY" edc:nzwidth="0x1" edc:desc="Bank 0 Ready Clear"/>
            <edc:SFRFieldDef edc:cname="BK1RDY" edc:nzwidth="0x1" edc:desc="Bank 1 Ready Clear"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPSTATUSSET7" edc:nzwidth="0x8" edc:access="wwww-www" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF7" edc:addr="0x4100A1E5">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="DTGLOUT" edc:nzwidth="0x1" edc:desc="Data Toggle OUT Set"/>
            <edc:SFRFieldDef edc:cname="DTGLIN" edc:nzwidth="0x1" edc:desc="Data Toggle IN Set"/>
            <edc:SFRFieldDef edc:cname="CURBK" edc:nzwidth="0x1" edc:desc="Current Bank Set"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="STALLRQ0" edc:nzwidth="0x1" edc:desc="Stall 0 Request Set"/>
            <edc:SFRFieldDef edc:cname="STALLRQ1" edc:nzwidth="0x1" edc:desc="Stall 1 Request Set"/>
            <edc:SFRFieldDef edc:cname="BK0RDY" edc:nzwidth="0x1" edc:desc="Bank 0 Ready Set"/>
            <edc:SFRFieldDef edc:cname="BK1RDY" edc:nzwidth="0x1" edc:desc="Bank 1 Ready Set"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPSTATUS7" edc:nzwidth="0x8" edc:access="rrrr-rrr" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF7" edc:addr="0x4100A1E6">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="DTGLOUT" edc:nzwidth="0x1" edc:desc="Data Toggle Out"/>
            <edc:SFRFieldDef edc:cname="DTGLIN" edc:nzwidth="0x1" edc:desc="Data Toggle In"/>
            <edc:SFRFieldDef edc:cname="CURBK" edc:nzwidth="0x1" edc:desc="Current Bank"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="STALLRQ0" edc:nzwidth="0x1" edc:desc="Stall 0 Request"/>
            <edc:SFRFieldDef edc:cname="STALLRQ1" edc:nzwidth="0x1" edc:desc="Stall 1 Request"/>
            <edc:SFRFieldDef edc:cname="BK0RDY" edc:nzwidth="0x1" edc:desc="Bank 0 ready"/>
            <edc:SFRFieldDef edc:cname="BK1RDY" edc:nzwidth="0x1" edc:desc="Bank 1 ready"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPINTFLAG7" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:addr="0x4100A1E7">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="TRCPT0" edc:nzwidth="0x1" edc:desc="Transfer Complete 0"/>
            <edc:SFRFieldDef edc:cname="TRCPT1" edc:nzwidth="0x1" edc:desc="Transfer Complete 1"/>
            <edc:SFRFieldDef edc:cname="TRFAIL0" edc:nzwidth="0x1" edc:desc="Error Flow 0"/>
            <edc:SFRFieldDef edc:cname="TRFAIL1" edc:nzwidth="0x1" edc:desc="Error Flow 1"/>
            <edc:SFRFieldDef edc:cname="RXSTP" edc:nzwidth="0x1" edc:desc="Received Setup"/>
            <edc:SFRFieldDef edc:cname="STALL0" edc:nzwidth="0x1" edc:desc="Stall 0 In/out"/>
            <edc:SFRFieldDef edc:cname="STALL1" edc:nzwidth="0x1" edc:desc="Stall 1 In/out"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPINTENCLR7" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:addr="0x4100A1E8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="TRCPT0" edc:nzwidth="0x1" edc:desc="Transfer Complete 0 Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TRCPT1" edc:nzwidth="0x1" edc:desc="Transfer Complete 1 Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TRFAIL0" edc:nzwidth="0x1" edc:desc="Error Flow 0 Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TRFAIL1" edc:nzwidth="0x1" edc:desc="Error Flow 1 Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXSTP" edc:nzwidth="0x1" edc:desc="Received Setup Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="STALL0" edc:nzwidth="0x1" edc:desc="Stall 0 In/Out Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="STALL1" edc:nzwidth="0x1" edc:desc="Stall 1 In/Out Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="EPINTENSET7" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:addr="0x4100A1E9">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="TRCPT0" edc:nzwidth="0x1" edc:desc="Transfer Complete 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRCPT1" edc:nzwidth="0x1" edc:desc="Transfer Complete 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRFAIL0" edc:nzwidth="0x1" edc:desc="Error Flow 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRFAIL1" edc:nzwidth="0x1" edc:desc="Error Flow 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXSTP" edc:nzwidth="0x1" edc:desc="Received Setup Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="STALL0" edc:nzwidth="0x1" edc:desc="Stall 0 In/out Interrupt enable"/>
            <edc:SFRFieldDef edc:cname="STALL1" edc:nzwidth="0x1" edc:desc="Stall 1 In/out Interrupt enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="USB/HOST">
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="CTRLB" edc:nzwidth="0x10" edc:access="----nnnn---nnnn-" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xF1E" edc:addr="0x4100A008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RESUME" edc:nzwidth="0x1" edc:desc="Send USB Resume"/>
            <edc:SFRFieldDef edc:cname="SPDCONF" edc:nzwidth="0x2" edc:desc="Speed Configuration for Host">
              <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Normal mode: Low and Full speed capable" edc:when="(field &amp; 0x3) == 0x0"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AUTORESUME" edc:nzwidth="0x1" edc:desc="Auto Resume Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SOFE" edc:nzwidth="0x1" edc:desc="Start of Frame Generation Enable"/>
            <edc:SFRFieldDef edc:cname="BUSRESET" edc:nzwidth="0x1" edc:desc="Send USB Reset"/>
            <edc:SFRFieldDef edc:cname="VBUSOK" edc:nzwidth="0x1" edc:desc="VBUS is OK"/>
            <edc:SFRFieldDef edc:cname="L1RESUME" edc:nzwidth="0x1" edc:desc="Send L1 Resume"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="HSOFC" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x4100A00A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="FLENC" edc:nzwidth="0x4" edc:desc="Frame Length Control"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="FLENCE" edc:nzwidth="0x1" edc:desc="Frame Length Control Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="rr--rr--" edc:por="00000000" edc:mclr="00000000" edc:impl="0xCC" edc:addr="0x4100A00C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SPEED" edc:nzwidth="0x2" edc:desc="Speed Status">
              <edc:SFRFieldSemantic edc:cname="FS" edc:desc="Full-speed mode" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LS" edc:desc="Low-speed mode" edc:when="(field &amp; 0x3) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="LINESTATE" edc:nzwidth="0x2" edc:desc="USB Line State Status">
              <edc:SFRFieldSemantic edc:cname="0" edc:desc="SE0/RESET" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="FS-J or LS-K State" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="2" edc:desc="FS-K or LS-J State" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="FNUM" edc:nzwidth="0x10" edc:access="--nnnnnnnnnnn---" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x3FF8" edc:addr="0x4100A010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="FNUM" edc:nzwidth="0xB" edc:desc="Frame Number"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="FLENHIGH" edc:nzwidth="0x8" edc:access="rrrrrrrr" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4100A012">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="FLENHIGH" edc:nzwidth="0x8" edc:desc="Frame Length"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="INTENCLR" edc:nzwidth="0x10" edc:access="------nnnnnnnn--" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x3FC" edc:addr="0x4100A014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="HSOF" edc:nzwidth="0x1" edc:desc="Host Start Of Frame Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RST" edc:nzwidth="0x1" edc:desc="BUS Reset Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="WAKEUP" edc:nzwidth="0x1" edc:desc="Wake Up Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="DNRSM" edc:nzwidth="0x1" edc:desc="DownStream to Device Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="UPRSM" edc:nzwidth="0x1" edc:desc="Upstream Resume from Device Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RAMACER" edc:nzwidth="0x1" edc:desc="Ram Access Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="DCONN" edc:nzwidth="0x1" edc:desc="Device Connection Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="DDISC" edc:nzwidth="0x1" edc:desc="Device Disconnection Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="INTENSET" edc:nzwidth="0x10" edc:access="------nnnnnnnn--" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x3FC" edc:addr="0x4100A018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="HSOF" edc:nzwidth="0x1" edc:desc="Host Start Of Frame Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RST" edc:nzwidth="0x1" edc:desc="Bus Reset Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="WAKEUP" edc:nzwidth="0x1" edc:desc="Wake Up Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DNRSM" edc:nzwidth="0x1" edc:desc="DownStream to the Device Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="UPRSM" edc:nzwidth="0x1" edc:desc="Upstream Resume fromthe device Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RAMACER" edc:nzwidth="0x1" edc:desc="Ram Access Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DCONN" edc:nzwidth="0x1" edc:desc="Link Power Management Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DDISC" edc:nzwidth="0x1" edc:desc="Device Disconnection Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="INTFLAG" edc:nzwidth="0x10" edc:access="------nnnnnnnn--" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x3FC" edc:addr="0x4100A01C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="HSOF" edc:nzwidth="0x1" edc:desc="Host Start Of Frame"/>
            <edc:SFRFieldDef edc:cname="RST" edc:nzwidth="0x1" edc:desc="Bus Reset"/>
            <edc:SFRFieldDef edc:cname="WAKEUP" edc:nzwidth="0x1" edc:desc="Wake Up"/>
            <edc:SFRFieldDef edc:cname="DNRSM" edc:nzwidth="0x1" edc:desc="Downstream"/>
            <edc:SFRFieldDef edc:cname="UPRSM" edc:nzwidth="0x1" edc:desc="Upstream Resume from the Device"/>
            <edc:SFRFieldDef edc:cname="RAMACER" edc:nzwidth="0x1" edc:desc="Ram Access"/>
            <edc:SFRFieldDef edc:cname="DCONN" edc:nzwidth="0x1" edc:desc="Device Connection"/>
            <edc:SFRFieldDef edc:cname="DDISC" edc:nzwidth="0x1" edc:desc="Device Disconnection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PINTSMRY" edc:nzwidth="0x10" edc:access="--------rrrrrrrr" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xFF" edc:addr="0x4100A020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="PINT0" edc:nzwidth="0x1" edc:desc="Pipe 0 Interrupt"/>
            <edc:SFRFieldDef edc:cname="PINT1" edc:nzwidth="0x1" edc:desc="Pipe 1 Interrupt"/>
            <edc:SFRFieldDef edc:cname="PINT2" edc:nzwidth="0x1" edc:desc="Pipe 2 Interrupt"/>
            <edc:SFRFieldDef edc:cname="PINT3" edc:nzwidth="0x1" edc:desc="Pipe 3 Interrupt"/>
            <edc:SFRFieldDef edc:cname="PINT4" edc:nzwidth="0x1" edc:desc="Pipe 4 Interrupt"/>
            <edc:SFRFieldDef edc:cname="PINT5" edc:nzwidth="0x1" edc:desc="Pipe 5 Interrupt"/>
            <edc:SFRFieldDef edc:cname="PINT6" edc:nzwidth="0x1" edc:desc="Pipe 6 Interrupt"/>
            <edc:SFRFieldDef edc:cname="PINT7" edc:nzwidth="0x1" edc:desc="Pipe 7 Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PCFG0" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:addr="0x4100A100">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="PTOKEN" edc:nzwidth="0x2" edc:desc="Pipe Token"/>
            <edc:SFRFieldDef edc:cname="BK" edc:nzwidth="0x1" edc:desc="Pipe Bank"/>
            <edc:SFRFieldDef edc:cname="PTYPE" edc:nzwidth="0x3" edc:desc="Pipe Type"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="BINTERVAL0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4100A103">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="BINTERVAL" edc:nzwidth="0x8" edc:desc="Bit Interval"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PSTATUSCLR0" edc:nzwidth="0x8" edc:access="ww-w-w-w" edc:por="00000000" edc:mclr="00000000" edc:impl="0xD5" edc:addr="0x4100A104">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="DTGL" edc:nzwidth="0x1" edc:desc="Data Toggle clear"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CURBK" edc:nzwidth="0x1" edc:desc="Curren Bank clear"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PFREEZE" edc:nzwidth="0x1" edc:desc="Pipe Freeze Clear"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BK0RDY" edc:nzwidth="0x1" edc:desc="Bank 0 Ready Clear"/>
            <edc:SFRFieldDef edc:cname="BK1RDY" edc:nzwidth="0x1" edc:desc="Bank 1 Ready Clear"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PSTATUSSET0" edc:nzwidth="0x8" edc:access="ww-w-w-w" edc:por="00000000" edc:mclr="00000000" edc:impl="0xD5" edc:addr="0x4100A105">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="DTGL" edc:nzwidth="0x1" edc:desc="Data Toggle Set"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CURBK" edc:nzwidth="0x1" edc:desc="Current Bank Set"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PFREEZE" edc:nzwidth="0x1" edc:desc="Pipe Freeze Set"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BK0RDY" edc:nzwidth="0x1" edc:desc="Bank 0 Ready Set"/>
            <edc:SFRFieldDef edc:cname="BK1RDY" edc:nzwidth="0x1" edc:desc="Bank 1 Ready Set"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PSTATUS0" edc:nzwidth="0x8" edc:access="rr-r-r-r" edc:por="00000000" edc:mclr="00000000" edc:impl="0xD5" edc:addr="0x4100A106">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="DTGL" edc:nzwidth="0x1" edc:desc="Data Toggle"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CURBK" edc:nzwidth="0x1" edc:desc="Current Bank"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PFREEZE" edc:nzwidth="0x1" edc:desc="Pipe Freeze"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BK0RDY" edc:nzwidth="0x1" edc:desc="Bank 0 ready"/>
            <edc:SFRFieldDef edc:cname="BK1RDY" edc:nzwidth="0x1" edc:desc="Bank 1 ready"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PINTFLAG0" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:addr="0x4100A107">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="TRCPT0" edc:nzwidth="0x1" edc:desc="Transfer Complete 0 Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="TRCPT1" edc:nzwidth="0x1" edc:desc="Transfer Complete 1 Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="TRFAIL" edc:nzwidth="0x1" edc:desc="Error Flow Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Pipe Error Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="TXSTP" edc:nzwidth="0x1" edc:desc="Transmit  Setup Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="STALL" edc:nzwidth="0x1" edc:desc="Stall Interrupt Flag"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PINTENCLR0" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:addr="0x4100A108">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="TRCPT0" edc:nzwidth="0x1" edc:desc="Transfer Complete 0 Disable"/>
            <edc:SFRFieldDef edc:cname="TRCPT1" edc:nzwidth="0x1" edc:desc="Transfer Complete 1 Disable"/>
            <edc:SFRFieldDef edc:cname="TRFAIL" edc:nzwidth="0x1" edc:desc="Error Flow Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Pipe Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXSTP" edc:nzwidth="0x1" edc:desc="Transmit Setup Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="STALL" edc:nzwidth="0x1" edc:desc="Stall Inetrrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PINTENSET0" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:addr="0x4100A109">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="TRCPT0" edc:nzwidth="0x1" edc:desc="Transfer Complete 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRCPT1" edc:nzwidth="0x1" edc:desc="Transfer Complete 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRFAIL" edc:nzwidth="0x1" edc:desc="Error Flow Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Pipe Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXSTP" edc:nzwidth="0x1" edc:desc="Transmit  Setup Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="STALL" edc:nzwidth="0x1" edc:desc="Stall Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PCFG1" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:addr="0x4100A120">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="PTOKEN" edc:nzwidth="0x2" edc:desc="Pipe Token"/>
            <edc:SFRFieldDef edc:cname="BK" edc:nzwidth="0x1" edc:desc="Pipe Bank"/>
            <edc:SFRFieldDef edc:cname="PTYPE" edc:nzwidth="0x3" edc:desc="Pipe Type"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="BINTERVAL1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4100A123">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="BINTERVAL" edc:nzwidth="0x8" edc:desc="Bit Interval"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PSTATUSCLR1" edc:nzwidth="0x8" edc:access="ww-w-w-w" edc:por="00000000" edc:mclr="00000000" edc:impl="0xD5" edc:addr="0x4100A124">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="DTGL" edc:nzwidth="0x1" edc:desc="Data Toggle clear"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CURBK" edc:nzwidth="0x1" edc:desc="Curren Bank clear"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PFREEZE" edc:nzwidth="0x1" edc:desc="Pipe Freeze Clear"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BK0RDY" edc:nzwidth="0x1" edc:desc="Bank 0 Ready Clear"/>
            <edc:SFRFieldDef edc:cname="BK1RDY" edc:nzwidth="0x1" edc:desc="Bank 1 Ready Clear"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PSTATUSSET1" edc:nzwidth="0x8" edc:access="ww-w-w-w" edc:por="00000000" edc:mclr="00000000" edc:impl="0xD5" edc:addr="0x4100A125">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="DTGL" edc:nzwidth="0x1" edc:desc="Data Toggle Set"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CURBK" edc:nzwidth="0x1" edc:desc="Current Bank Set"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PFREEZE" edc:nzwidth="0x1" edc:desc="Pipe Freeze Set"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BK0RDY" edc:nzwidth="0x1" edc:desc="Bank 0 Ready Set"/>
            <edc:SFRFieldDef edc:cname="BK1RDY" edc:nzwidth="0x1" edc:desc="Bank 1 Ready Set"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PSTATUS1" edc:nzwidth="0x8" edc:access="rr-r-r-r" edc:por="00000000" edc:mclr="00000000" edc:impl="0xD5" edc:addr="0x4100A126">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="DTGL" edc:nzwidth="0x1" edc:desc="Data Toggle"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CURBK" edc:nzwidth="0x1" edc:desc="Current Bank"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PFREEZE" edc:nzwidth="0x1" edc:desc="Pipe Freeze"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BK0RDY" edc:nzwidth="0x1" edc:desc="Bank 0 ready"/>
            <edc:SFRFieldDef edc:cname="BK1RDY" edc:nzwidth="0x1" edc:desc="Bank 1 ready"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PINTFLAG1" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:addr="0x4100A127">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="TRCPT0" edc:nzwidth="0x1" edc:desc="Transfer Complete 0 Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="TRCPT1" edc:nzwidth="0x1" edc:desc="Transfer Complete 1 Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="TRFAIL" edc:nzwidth="0x1" edc:desc="Error Flow Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Pipe Error Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="TXSTP" edc:nzwidth="0x1" edc:desc="Transmit  Setup Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="STALL" edc:nzwidth="0x1" edc:desc="Stall Interrupt Flag"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PINTENCLR1" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:addr="0x4100A128">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="TRCPT0" edc:nzwidth="0x1" edc:desc="Transfer Complete 0 Disable"/>
            <edc:SFRFieldDef edc:cname="TRCPT1" edc:nzwidth="0x1" edc:desc="Transfer Complete 1 Disable"/>
            <edc:SFRFieldDef edc:cname="TRFAIL" edc:nzwidth="0x1" edc:desc="Error Flow Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Pipe Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXSTP" edc:nzwidth="0x1" edc:desc="Transmit Setup Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="STALL" edc:nzwidth="0x1" edc:desc="Stall Inetrrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PINTENSET1" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:addr="0x4100A129">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="TRCPT0" edc:nzwidth="0x1" edc:desc="Transfer Complete 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRCPT1" edc:nzwidth="0x1" edc:desc="Transfer Complete 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRFAIL" edc:nzwidth="0x1" edc:desc="Error Flow Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Pipe Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXSTP" edc:nzwidth="0x1" edc:desc="Transmit  Setup Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="STALL" edc:nzwidth="0x1" edc:desc="Stall Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PCFG2" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:addr="0x4100A140">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="PTOKEN" edc:nzwidth="0x2" edc:desc="Pipe Token"/>
            <edc:SFRFieldDef edc:cname="BK" edc:nzwidth="0x1" edc:desc="Pipe Bank"/>
            <edc:SFRFieldDef edc:cname="PTYPE" edc:nzwidth="0x3" edc:desc="Pipe Type"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="BINTERVAL2" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4100A143">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="BINTERVAL" edc:nzwidth="0x8" edc:desc="Bit Interval"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PSTATUSCLR2" edc:nzwidth="0x8" edc:access="ww-w-w-w" edc:por="00000000" edc:mclr="00000000" edc:impl="0xD5" edc:addr="0x4100A144">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="DTGL" edc:nzwidth="0x1" edc:desc="Data Toggle clear"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CURBK" edc:nzwidth="0x1" edc:desc="Curren Bank clear"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PFREEZE" edc:nzwidth="0x1" edc:desc="Pipe Freeze Clear"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BK0RDY" edc:nzwidth="0x1" edc:desc="Bank 0 Ready Clear"/>
            <edc:SFRFieldDef edc:cname="BK1RDY" edc:nzwidth="0x1" edc:desc="Bank 1 Ready Clear"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PSTATUSSET2" edc:nzwidth="0x8" edc:access="ww-w-w-w" edc:por="00000000" edc:mclr="00000000" edc:impl="0xD5" edc:addr="0x4100A145">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="DTGL" edc:nzwidth="0x1" edc:desc="Data Toggle Set"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CURBK" edc:nzwidth="0x1" edc:desc="Current Bank Set"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PFREEZE" edc:nzwidth="0x1" edc:desc="Pipe Freeze Set"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BK0RDY" edc:nzwidth="0x1" edc:desc="Bank 0 Ready Set"/>
            <edc:SFRFieldDef edc:cname="BK1RDY" edc:nzwidth="0x1" edc:desc="Bank 1 Ready Set"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PSTATUS2" edc:nzwidth="0x8" edc:access="rr-r-r-r" edc:por="00000000" edc:mclr="00000000" edc:impl="0xD5" edc:addr="0x4100A146">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="DTGL" edc:nzwidth="0x1" edc:desc="Data Toggle"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CURBK" edc:nzwidth="0x1" edc:desc="Current Bank"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PFREEZE" edc:nzwidth="0x1" edc:desc="Pipe Freeze"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BK0RDY" edc:nzwidth="0x1" edc:desc="Bank 0 ready"/>
            <edc:SFRFieldDef edc:cname="BK1RDY" edc:nzwidth="0x1" edc:desc="Bank 1 ready"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PINTFLAG2" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:addr="0x4100A147">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="TRCPT0" edc:nzwidth="0x1" edc:desc="Transfer Complete 0 Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="TRCPT1" edc:nzwidth="0x1" edc:desc="Transfer Complete 1 Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="TRFAIL" edc:nzwidth="0x1" edc:desc="Error Flow Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Pipe Error Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="TXSTP" edc:nzwidth="0x1" edc:desc="Transmit  Setup Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="STALL" edc:nzwidth="0x1" edc:desc="Stall Interrupt Flag"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PINTENCLR2" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:addr="0x4100A148">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="TRCPT0" edc:nzwidth="0x1" edc:desc="Transfer Complete 0 Disable"/>
            <edc:SFRFieldDef edc:cname="TRCPT1" edc:nzwidth="0x1" edc:desc="Transfer Complete 1 Disable"/>
            <edc:SFRFieldDef edc:cname="TRFAIL" edc:nzwidth="0x1" edc:desc="Error Flow Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Pipe Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXSTP" edc:nzwidth="0x1" edc:desc="Transmit Setup Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="STALL" edc:nzwidth="0x1" edc:desc="Stall Inetrrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PINTENSET2" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:addr="0x4100A149">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="TRCPT0" edc:nzwidth="0x1" edc:desc="Transfer Complete 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRCPT1" edc:nzwidth="0x1" edc:desc="Transfer Complete 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRFAIL" edc:nzwidth="0x1" edc:desc="Error Flow Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Pipe Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXSTP" edc:nzwidth="0x1" edc:desc="Transmit  Setup Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="STALL" edc:nzwidth="0x1" edc:desc="Stall Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PCFG3" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:addr="0x4100A160">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="PTOKEN" edc:nzwidth="0x2" edc:desc="Pipe Token"/>
            <edc:SFRFieldDef edc:cname="BK" edc:nzwidth="0x1" edc:desc="Pipe Bank"/>
            <edc:SFRFieldDef edc:cname="PTYPE" edc:nzwidth="0x3" edc:desc="Pipe Type"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="BINTERVAL3" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4100A163">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="BINTERVAL" edc:nzwidth="0x8" edc:desc="Bit Interval"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PSTATUSCLR3" edc:nzwidth="0x8" edc:access="ww-w-w-w" edc:por="00000000" edc:mclr="00000000" edc:impl="0xD5" edc:addr="0x4100A164">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="DTGL" edc:nzwidth="0x1" edc:desc="Data Toggle clear"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CURBK" edc:nzwidth="0x1" edc:desc="Curren Bank clear"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PFREEZE" edc:nzwidth="0x1" edc:desc="Pipe Freeze Clear"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BK0RDY" edc:nzwidth="0x1" edc:desc="Bank 0 Ready Clear"/>
            <edc:SFRFieldDef edc:cname="BK1RDY" edc:nzwidth="0x1" edc:desc="Bank 1 Ready Clear"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PSTATUSSET3" edc:nzwidth="0x8" edc:access="ww-w-w-w" edc:por="00000000" edc:mclr="00000000" edc:impl="0xD5" edc:addr="0x4100A165">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="DTGL" edc:nzwidth="0x1" edc:desc="Data Toggle Set"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CURBK" edc:nzwidth="0x1" edc:desc="Current Bank Set"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PFREEZE" edc:nzwidth="0x1" edc:desc="Pipe Freeze Set"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BK0RDY" edc:nzwidth="0x1" edc:desc="Bank 0 Ready Set"/>
            <edc:SFRFieldDef edc:cname="BK1RDY" edc:nzwidth="0x1" edc:desc="Bank 1 Ready Set"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PSTATUS3" edc:nzwidth="0x8" edc:access="rr-r-r-r" edc:por="00000000" edc:mclr="00000000" edc:impl="0xD5" edc:addr="0x4100A166">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="DTGL" edc:nzwidth="0x1" edc:desc="Data Toggle"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CURBK" edc:nzwidth="0x1" edc:desc="Current Bank"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PFREEZE" edc:nzwidth="0x1" edc:desc="Pipe Freeze"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BK0RDY" edc:nzwidth="0x1" edc:desc="Bank 0 ready"/>
            <edc:SFRFieldDef edc:cname="BK1RDY" edc:nzwidth="0x1" edc:desc="Bank 1 ready"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PINTFLAG3" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:addr="0x4100A167">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="TRCPT0" edc:nzwidth="0x1" edc:desc="Transfer Complete 0 Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="TRCPT1" edc:nzwidth="0x1" edc:desc="Transfer Complete 1 Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="TRFAIL" edc:nzwidth="0x1" edc:desc="Error Flow Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Pipe Error Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="TXSTP" edc:nzwidth="0x1" edc:desc="Transmit  Setup Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="STALL" edc:nzwidth="0x1" edc:desc="Stall Interrupt Flag"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PINTENCLR3" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:addr="0x4100A168">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="TRCPT0" edc:nzwidth="0x1" edc:desc="Transfer Complete 0 Disable"/>
            <edc:SFRFieldDef edc:cname="TRCPT1" edc:nzwidth="0x1" edc:desc="Transfer Complete 1 Disable"/>
            <edc:SFRFieldDef edc:cname="TRFAIL" edc:nzwidth="0x1" edc:desc="Error Flow Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Pipe Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXSTP" edc:nzwidth="0x1" edc:desc="Transmit Setup Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="STALL" edc:nzwidth="0x1" edc:desc="Stall Inetrrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PINTENSET3" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:addr="0x4100A169">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="TRCPT0" edc:nzwidth="0x1" edc:desc="Transfer Complete 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRCPT1" edc:nzwidth="0x1" edc:desc="Transfer Complete 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRFAIL" edc:nzwidth="0x1" edc:desc="Error Flow Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Pipe Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXSTP" edc:nzwidth="0x1" edc:desc="Transmit  Setup Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="STALL" edc:nzwidth="0x1" edc:desc="Stall Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PCFG4" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:addr="0x4100A180">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="PTOKEN" edc:nzwidth="0x2" edc:desc="Pipe Token"/>
            <edc:SFRFieldDef edc:cname="BK" edc:nzwidth="0x1" edc:desc="Pipe Bank"/>
            <edc:SFRFieldDef edc:cname="PTYPE" edc:nzwidth="0x3" edc:desc="Pipe Type"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="BINTERVAL4" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4100A183">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="BINTERVAL" edc:nzwidth="0x8" edc:desc="Bit Interval"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PSTATUSCLR4" edc:nzwidth="0x8" edc:access="ww-w-w-w" edc:por="00000000" edc:mclr="00000000" edc:impl="0xD5" edc:addr="0x4100A184">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="DTGL" edc:nzwidth="0x1" edc:desc="Data Toggle clear"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CURBK" edc:nzwidth="0x1" edc:desc="Curren Bank clear"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PFREEZE" edc:nzwidth="0x1" edc:desc="Pipe Freeze Clear"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BK0RDY" edc:nzwidth="0x1" edc:desc="Bank 0 Ready Clear"/>
            <edc:SFRFieldDef edc:cname="BK1RDY" edc:nzwidth="0x1" edc:desc="Bank 1 Ready Clear"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PSTATUSSET4" edc:nzwidth="0x8" edc:access="ww-w-w-w" edc:por="00000000" edc:mclr="00000000" edc:impl="0xD5" edc:addr="0x4100A185">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="DTGL" edc:nzwidth="0x1" edc:desc="Data Toggle Set"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CURBK" edc:nzwidth="0x1" edc:desc="Current Bank Set"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PFREEZE" edc:nzwidth="0x1" edc:desc="Pipe Freeze Set"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BK0RDY" edc:nzwidth="0x1" edc:desc="Bank 0 Ready Set"/>
            <edc:SFRFieldDef edc:cname="BK1RDY" edc:nzwidth="0x1" edc:desc="Bank 1 Ready Set"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PSTATUS4" edc:nzwidth="0x8" edc:access="rr-r-r-r" edc:por="00000000" edc:mclr="00000000" edc:impl="0xD5" edc:addr="0x4100A186">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="DTGL" edc:nzwidth="0x1" edc:desc="Data Toggle"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CURBK" edc:nzwidth="0x1" edc:desc="Current Bank"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PFREEZE" edc:nzwidth="0x1" edc:desc="Pipe Freeze"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BK0RDY" edc:nzwidth="0x1" edc:desc="Bank 0 ready"/>
            <edc:SFRFieldDef edc:cname="BK1RDY" edc:nzwidth="0x1" edc:desc="Bank 1 ready"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PINTFLAG4" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:addr="0x4100A187">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="TRCPT0" edc:nzwidth="0x1" edc:desc="Transfer Complete 0 Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="TRCPT1" edc:nzwidth="0x1" edc:desc="Transfer Complete 1 Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="TRFAIL" edc:nzwidth="0x1" edc:desc="Error Flow Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Pipe Error Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="TXSTP" edc:nzwidth="0x1" edc:desc="Transmit  Setup Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="STALL" edc:nzwidth="0x1" edc:desc="Stall Interrupt Flag"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PINTENCLR4" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:addr="0x4100A188">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="TRCPT0" edc:nzwidth="0x1" edc:desc="Transfer Complete 0 Disable"/>
            <edc:SFRFieldDef edc:cname="TRCPT1" edc:nzwidth="0x1" edc:desc="Transfer Complete 1 Disable"/>
            <edc:SFRFieldDef edc:cname="TRFAIL" edc:nzwidth="0x1" edc:desc="Error Flow Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Pipe Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXSTP" edc:nzwidth="0x1" edc:desc="Transmit Setup Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="STALL" edc:nzwidth="0x1" edc:desc="Stall Inetrrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PINTENSET4" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:addr="0x4100A189">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="TRCPT0" edc:nzwidth="0x1" edc:desc="Transfer Complete 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRCPT1" edc:nzwidth="0x1" edc:desc="Transfer Complete 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRFAIL" edc:nzwidth="0x1" edc:desc="Error Flow Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Pipe Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXSTP" edc:nzwidth="0x1" edc:desc="Transmit  Setup Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="STALL" edc:nzwidth="0x1" edc:desc="Stall Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PCFG5" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:addr="0x4100A1A0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="PTOKEN" edc:nzwidth="0x2" edc:desc="Pipe Token"/>
            <edc:SFRFieldDef edc:cname="BK" edc:nzwidth="0x1" edc:desc="Pipe Bank"/>
            <edc:SFRFieldDef edc:cname="PTYPE" edc:nzwidth="0x3" edc:desc="Pipe Type"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="BINTERVAL5" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4100A1A3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="BINTERVAL" edc:nzwidth="0x8" edc:desc="Bit Interval"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PSTATUSCLR5" edc:nzwidth="0x8" edc:access="ww-w-w-w" edc:por="00000000" edc:mclr="00000000" edc:impl="0xD5" edc:addr="0x4100A1A4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="DTGL" edc:nzwidth="0x1" edc:desc="Data Toggle clear"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CURBK" edc:nzwidth="0x1" edc:desc="Curren Bank clear"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PFREEZE" edc:nzwidth="0x1" edc:desc="Pipe Freeze Clear"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BK0RDY" edc:nzwidth="0x1" edc:desc="Bank 0 Ready Clear"/>
            <edc:SFRFieldDef edc:cname="BK1RDY" edc:nzwidth="0x1" edc:desc="Bank 1 Ready Clear"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PSTATUSSET5" edc:nzwidth="0x8" edc:access="ww-w-w-w" edc:por="00000000" edc:mclr="00000000" edc:impl="0xD5" edc:addr="0x4100A1A5">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="DTGL" edc:nzwidth="0x1" edc:desc="Data Toggle Set"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CURBK" edc:nzwidth="0x1" edc:desc="Current Bank Set"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PFREEZE" edc:nzwidth="0x1" edc:desc="Pipe Freeze Set"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BK0RDY" edc:nzwidth="0x1" edc:desc="Bank 0 Ready Set"/>
            <edc:SFRFieldDef edc:cname="BK1RDY" edc:nzwidth="0x1" edc:desc="Bank 1 Ready Set"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PSTATUS5" edc:nzwidth="0x8" edc:access="rr-r-r-r" edc:por="00000000" edc:mclr="00000000" edc:impl="0xD5" edc:addr="0x4100A1A6">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="DTGL" edc:nzwidth="0x1" edc:desc="Data Toggle"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CURBK" edc:nzwidth="0x1" edc:desc="Current Bank"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PFREEZE" edc:nzwidth="0x1" edc:desc="Pipe Freeze"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BK0RDY" edc:nzwidth="0x1" edc:desc="Bank 0 ready"/>
            <edc:SFRFieldDef edc:cname="BK1RDY" edc:nzwidth="0x1" edc:desc="Bank 1 ready"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PINTFLAG5" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:addr="0x4100A1A7">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="TRCPT0" edc:nzwidth="0x1" edc:desc="Transfer Complete 0 Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="TRCPT1" edc:nzwidth="0x1" edc:desc="Transfer Complete 1 Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="TRFAIL" edc:nzwidth="0x1" edc:desc="Error Flow Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Pipe Error Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="TXSTP" edc:nzwidth="0x1" edc:desc="Transmit  Setup Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="STALL" edc:nzwidth="0x1" edc:desc="Stall Interrupt Flag"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PINTENCLR5" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:addr="0x4100A1A8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="TRCPT0" edc:nzwidth="0x1" edc:desc="Transfer Complete 0 Disable"/>
            <edc:SFRFieldDef edc:cname="TRCPT1" edc:nzwidth="0x1" edc:desc="Transfer Complete 1 Disable"/>
            <edc:SFRFieldDef edc:cname="TRFAIL" edc:nzwidth="0x1" edc:desc="Error Flow Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Pipe Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXSTP" edc:nzwidth="0x1" edc:desc="Transmit Setup Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="STALL" edc:nzwidth="0x1" edc:desc="Stall Inetrrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PINTENSET5" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:addr="0x4100A1A9">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="TRCPT0" edc:nzwidth="0x1" edc:desc="Transfer Complete 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRCPT1" edc:nzwidth="0x1" edc:desc="Transfer Complete 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRFAIL" edc:nzwidth="0x1" edc:desc="Error Flow Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Pipe Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXSTP" edc:nzwidth="0x1" edc:desc="Transmit  Setup Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="STALL" edc:nzwidth="0x1" edc:desc="Stall Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PCFG6" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:addr="0x4100A1C0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="PTOKEN" edc:nzwidth="0x2" edc:desc="Pipe Token"/>
            <edc:SFRFieldDef edc:cname="BK" edc:nzwidth="0x1" edc:desc="Pipe Bank"/>
            <edc:SFRFieldDef edc:cname="PTYPE" edc:nzwidth="0x3" edc:desc="Pipe Type"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="BINTERVAL6" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4100A1C3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="BINTERVAL" edc:nzwidth="0x8" edc:desc="Bit Interval"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PSTATUSCLR6" edc:nzwidth="0x8" edc:access="ww-w-w-w" edc:por="00000000" edc:mclr="00000000" edc:impl="0xD5" edc:addr="0x4100A1C4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="DTGL" edc:nzwidth="0x1" edc:desc="Data Toggle clear"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CURBK" edc:nzwidth="0x1" edc:desc="Curren Bank clear"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PFREEZE" edc:nzwidth="0x1" edc:desc="Pipe Freeze Clear"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BK0RDY" edc:nzwidth="0x1" edc:desc="Bank 0 Ready Clear"/>
            <edc:SFRFieldDef edc:cname="BK1RDY" edc:nzwidth="0x1" edc:desc="Bank 1 Ready Clear"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PSTATUSSET6" edc:nzwidth="0x8" edc:access="ww-w-w-w" edc:por="00000000" edc:mclr="00000000" edc:impl="0xD5" edc:addr="0x4100A1C5">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="DTGL" edc:nzwidth="0x1" edc:desc="Data Toggle Set"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CURBK" edc:nzwidth="0x1" edc:desc="Current Bank Set"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PFREEZE" edc:nzwidth="0x1" edc:desc="Pipe Freeze Set"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BK0RDY" edc:nzwidth="0x1" edc:desc="Bank 0 Ready Set"/>
            <edc:SFRFieldDef edc:cname="BK1RDY" edc:nzwidth="0x1" edc:desc="Bank 1 Ready Set"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PSTATUS6" edc:nzwidth="0x8" edc:access="rr-r-r-r" edc:por="00000000" edc:mclr="00000000" edc:impl="0xD5" edc:addr="0x4100A1C6">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="DTGL" edc:nzwidth="0x1" edc:desc="Data Toggle"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CURBK" edc:nzwidth="0x1" edc:desc="Current Bank"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PFREEZE" edc:nzwidth="0x1" edc:desc="Pipe Freeze"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BK0RDY" edc:nzwidth="0x1" edc:desc="Bank 0 ready"/>
            <edc:SFRFieldDef edc:cname="BK1RDY" edc:nzwidth="0x1" edc:desc="Bank 1 ready"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PINTFLAG6" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:addr="0x4100A1C7">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="TRCPT0" edc:nzwidth="0x1" edc:desc="Transfer Complete 0 Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="TRCPT1" edc:nzwidth="0x1" edc:desc="Transfer Complete 1 Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="TRFAIL" edc:nzwidth="0x1" edc:desc="Error Flow Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Pipe Error Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="TXSTP" edc:nzwidth="0x1" edc:desc="Transmit  Setup Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="STALL" edc:nzwidth="0x1" edc:desc="Stall Interrupt Flag"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PINTENCLR6" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:addr="0x4100A1C8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="TRCPT0" edc:nzwidth="0x1" edc:desc="Transfer Complete 0 Disable"/>
            <edc:SFRFieldDef edc:cname="TRCPT1" edc:nzwidth="0x1" edc:desc="Transfer Complete 1 Disable"/>
            <edc:SFRFieldDef edc:cname="TRFAIL" edc:nzwidth="0x1" edc:desc="Error Flow Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Pipe Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXSTP" edc:nzwidth="0x1" edc:desc="Transmit Setup Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="STALL" edc:nzwidth="0x1" edc:desc="Stall Inetrrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PINTENSET6" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:addr="0x4100A1C9">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="TRCPT0" edc:nzwidth="0x1" edc:desc="Transfer Complete 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRCPT1" edc:nzwidth="0x1" edc:desc="Transfer Complete 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRFAIL" edc:nzwidth="0x1" edc:desc="Error Flow Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Pipe Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXSTP" edc:nzwidth="0x1" edc:desc="Transmit  Setup Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="STALL" edc:nzwidth="0x1" edc:desc="Stall Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PCFG7" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:addr="0x4100A1E0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="PTOKEN" edc:nzwidth="0x2" edc:desc="Pipe Token"/>
            <edc:SFRFieldDef edc:cname="BK" edc:nzwidth="0x1" edc:desc="Pipe Bank"/>
            <edc:SFRFieldDef edc:cname="PTYPE" edc:nzwidth="0x3" edc:desc="Pipe Type"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="BINTERVAL7" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4100A1E3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="BINTERVAL" edc:nzwidth="0x8" edc:desc="Bit Interval"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PSTATUSCLR7" edc:nzwidth="0x8" edc:access="ww-w-w-w" edc:por="00000000" edc:mclr="00000000" edc:impl="0xD5" edc:addr="0x4100A1E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="DTGL" edc:nzwidth="0x1" edc:desc="Data Toggle clear"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CURBK" edc:nzwidth="0x1" edc:desc="Curren Bank clear"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PFREEZE" edc:nzwidth="0x1" edc:desc="Pipe Freeze Clear"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BK0RDY" edc:nzwidth="0x1" edc:desc="Bank 0 Ready Clear"/>
            <edc:SFRFieldDef edc:cname="BK1RDY" edc:nzwidth="0x1" edc:desc="Bank 1 Ready Clear"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PSTATUSSET7" edc:nzwidth="0x8" edc:access="ww-w-w-w" edc:por="00000000" edc:mclr="00000000" edc:impl="0xD5" edc:addr="0x4100A1E5">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="DTGL" edc:nzwidth="0x1" edc:desc="Data Toggle Set"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CURBK" edc:nzwidth="0x1" edc:desc="Current Bank Set"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PFREEZE" edc:nzwidth="0x1" edc:desc="Pipe Freeze Set"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BK0RDY" edc:nzwidth="0x1" edc:desc="Bank 0 Ready Set"/>
            <edc:SFRFieldDef edc:cname="BK1RDY" edc:nzwidth="0x1" edc:desc="Bank 1 Ready Set"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PSTATUS7" edc:nzwidth="0x8" edc:access="rr-r-r-r" edc:por="00000000" edc:mclr="00000000" edc:impl="0xD5" edc:addr="0x4100A1E6">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="DTGL" edc:nzwidth="0x1" edc:desc="Data Toggle"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CURBK" edc:nzwidth="0x1" edc:desc="Current Bank"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PFREEZE" edc:nzwidth="0x1" edc:desc="Pipe Freeze"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BK0RDY" edc:nzwidth="0x1" edc:desc="Bank 0 ready"/>
            <edc:SFRFieldDef edc:cname="BK1RDY" edc:nzwidth="0x1" edc:desc="Bank 1 ready"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PINTFLAG7" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:addr="0x4100A1E7">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="TRCPT0" edc:nzwidth="0x1" edc:desc="Transfer Complete 0 Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="TRCPT1" edc:nzwidth="0x1" edc:desc="Transfer Complete 1 Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="TRFAIL" edc:nzwidth="0x1" edc:desc="Error Flow Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Pipe Error Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="TXSTP" edc:nzwidth="0x1" edc:desc="Transmit  Setup Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="STALL" edc:nzwidth="0x1" edc:desc="Stall Interrupt Flag"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PINTENCLR7" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:addr="0x4100A1E8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="TRCPT0" edc:nzwidth="0x1" edc:desc="Transfer Complete 0 Disable"/>
            <edc:SFRFieldDef edc:cname="TRCPT1" edc:nzwidth="0x1" edc:desc="Transfer Complete 1 Disable"/>
            <edc:SFRFieldDef edc:cname="TRFAIL" edc:nzwidth="0x1" edc:desc="Error Flow Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Pipe Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXSTP" edc:nzwidth="0x1" edc:desc="Transmit Setup Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="STALL" edc:nzwidth="0x1" edc:desc="Stall Inetrrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="USB" edc:cname="PINTENSET7" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:addr="0x4100A1E9">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB">
            <edc:SFRFieldDef edc:cname="TRCPT0" edc:nzwidth="0x1" edc:desc="Transfer Complete 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRCPT1" edc:nzwidth="0x1" edc:desc="Transfer Complete 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRFAIL" edc:nzwidth="0x1" edc:desc="Error Flow Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Pipe Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXSTP" edc:nzwidth="0x1" edc:desc="Transmit  Setup Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="STALL" edc:nzwidth="0x1" edc:desc="Stall Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:EmulatorSector edc:beginaddr="0xE0001000" edc:endaddr="0xE000F000" edc:regionid="emulation"/>
  </edc:PhysicalSpace>
  <edc:PinList edc:ppsflavor="atmel">
    <edc:Pin>
      <edc:VirtualPin edc:name="PA00" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT0" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="OANEG1" edc:ppsfunction="B" ltx:memberofperipheral="OPAMP"/>
      <edc:VirtualPin edc:name="X0" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="Y0" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="PAD0" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM1"/>
      <edc:VirtualPin edc:name="WO0" edc:ppsfunction="E" ltx:memberofperipheral="TCC2"/>
      <edc:VirtualPin edc:name="DRV0" edc:ppsfunction="F" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="XIN32" edc:ppsfunction="XIN32" ltx:memberofperipheral="OSC32KCTRL"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA01" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT1" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="OAPOS1" edc:ppsfunction="B" ltx:memberofperipheral="OPAMP"/>
      <edc:VirtualPin edc:name="X1" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="Y1" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="PAD1" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM1"/>
      <edc:VirtualPin edc:name="WO1" edc:ppsfunction="E" ltx:memberofperipheral="TCC2"/>
      <edc:VirtualPin edc:name="DRV1" edc:ppsfunction="F" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="XOUT32" edc:ppsfunction="XOUT32" ltx:memberofperipheral="OSC32KCTRL"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC00" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT8" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="AIN20" edc:ppsfunction="B" ltx:memberofperipheral="ADC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC01" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT9" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="AIN21" edc:ppsfunction="B" ltx:memberofperipheral="ADC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC02" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT10" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="AIN22" edc:ppsfunction="B" ltx:memberofperipheral="ADC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC03" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT11" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="AIN23" edc:ppsfunction="B" ltx:memberofperipheral="ADC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA02" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT2" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="AIN0" edc:ppsfunction="B" ltx:memberofperipheral="ADC"/>
      <edc:VirtualPin edc:name="VOUT0" edc:ppsfunction="B" ltx:memberofperipheral="DAC"/>
      <edc:VirtualPin edc:name="OANEG0" edc:ppsfunction="B" ltx:memberofperipheral="OPAMP"/>
      <edc:VirtualPin edc:name="X2" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="Y2" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="PAD2" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM0"/>
      <edc:VirtualPin edc:name="DRV2" edc:ppsfunction="F" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="WO0" edc:ppsfunction="J" ltx:memberofperipheral="TCC3"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA03" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT3" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="AIN1" edc:ppsfunction="B" ltx:memberofperipheral="ADC"/>
      <edc:VirtualPin edc:name="VREFP" edc:ppsfunction="B" ltx:memberofperipheral="DAC"/>
      <edc:VirtualPin edc:name="OANEG2" edc:ppsfunction="B" ltx:memberofperipheral="OPAMP"/>
      <edc:VirtualPin edc:name="ECI0" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="X3" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="Y3" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="PAD3" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM0"/>
      <edc:VirtualPin edc:name="DRV3" edc:ppsfunction="F" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="WO1" edc:ppsfunction="J" ltx:memberofperipheral="TCC3"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB04" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT4" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="AIN6" edc:ppsfunction="B" ltx:memberofperipheral="AC"/>
      <edc:VirtualPin edc:name="AIN12" edc:ppsfunction="B" ltx:memberofperipheral="ADC"/>
      <edc:VirtualPin edc:name="OAOUT1" edc:ppsfunction="B" ltx:memberofperipheral="OPAMP"/>
      <edc:VirtualPin edc:name="X26" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="Y26" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="DRV26" edc:ppsfunction="F" ltx:memberofperipheral="PTC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB05" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT5" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="AIN7" edc:ppsfunction="B" ltx:memberofperipheral="AC"/>
      <edc:VirtualPin edc:name="AIN13" edc:ppsfunction="B" ltx:memberofperipheral="ADC"/>
      <edc:VirtualPin edc:name="X27" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="Y27" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="DRV27" edc:ppsfunction="F" ltx:memberofperipheral="PTC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="AVSS"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="AVDD"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB06" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT6" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="AIN14" edc:ppsfunction="B" ltx:memberofperipheral="ADC"/>
      <edc:VirtualPin edc:name="X28" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="Y28" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="DRV28" edc:ppsfunction="F" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="IN6" edc:ppsfunction="I" ltx:memberofperipheral="CCL"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB07" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT7" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="AIN15" edc:ppsfunction="B" ltx:memberofperipheral="ADC"/>
      <edc:VirtualPin edc:name="X29" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="Y29" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="DRV29" edc:ppsfunction="F" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="IN7" edc:ppsfunction="I" ltx:memberofperipheral="CCL"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB08" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT8" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="AIN18" edc:ppsfunction="B" ltx:memberofperipheral="ADC"/>
      <edc:VirtualPin edc:name="X20" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="Y20" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="PAD0" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM3"/>
      <edc:VirtualPin edc:name="WO0" edc:ppsfunction="E" ltx:memberofperipheral="TC0"/>
      <edc:VirtualPin edc:name="DRV20" edc:ppsfunction="F" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="IN8" edc:ppsfunction="I" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="WO6" edc:ppsfunction="J" ltx:memberofperipheral="TCC3"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB09" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT9" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="AIN19" edc:ppsfunction="B" ltx:memberofperipheral="ADC"/>
      <edc:VirtualPin edc:name="X21" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="Y21" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="PAD1" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM3"/>
      <edc:VirtualPin edc:name="WO1" edc:ppsfunction="E" ltx:memberofperipheral="TC0"/>
      <edc:VirtualPin edc:name="DRV21" edc:ppsfunction="F" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="OUT2" edc:ppsfunction="I" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="WO7" edc:ppsfunction="J" ltx:memberofperipheral="TCC3"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA04" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT4" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="AIN0" edc:ppsfunction="B" ltx:memberofperipheral="AC"/>
      <edc:VirtualPin edc:name="AIN2" edc:ppsfunction="B" ltx:memberofperipheral="ADC"/>
      <edc:VirtualPin edc:name="VREFP" edc:ppsfunction="B" ltx:memberofperipheral="ADC"/>
      <edc:VirtualPin edc:name="OAOUT2" edc:ppsfunction="B" ltx:memberofperipheral="OPAMP"/>
      <edc:VirtualPin edc:name="ECI1" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="PAD0" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM0"/>
      <edc:VirtualPin edc:name="WO0" edc:ppsfunction="E" ltx:memberofperipheral="TCC0"/>
      <edc:VirtualPin edc:name="IN0" edc:ppsfunction="I" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="WO2" edc:ppsfunction="J" ltx:memberofperipheral="TCC3"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA05" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT5" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="AIN1" edc:ppsfunction="B" ltx:memberofperipheral="AC"/>
      <edc:VirtualPin edc:name="AIN3" edc:ppsfunction="B" ltx:memberofperipheral="ADC"/>
      <edc:VirtualPin edc:name="OAPOS2" edc:ppsfunction="B" ltx:memberofperipheral="OPAMP"/>
      <edc:VirtualPin edc:name="ECI2" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="X4" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="Y4" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="PAD1" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM0"/>
      <edc:VirtualPin edc:name="WO1" edc:ppsfunction="E" ltx:memberofperipheral="TCC0"/>
      <edc:VirtualPin edc:name="DRV4" edc:ppsfunction="F" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="IN1" edc:ppsfunction="I" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="WO3" edc:ppsfunction="J" ltx:memberofperipheral="TCC3"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA06" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT6" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="AIN2" edc:ppsfunction="B" ltx:memberofperipheral="AC"/>
      <edc:VirtualPin edc:name="AIN4" edc:ppsfunction="B" ltx:memberofperipheral="ADC"/>
      <edc:VirtualPin edc:name="OAPOS0" edc:ppsfunction="B" ltx:memberofperipheral="OPAMP"/>
      <edc:VirtualPin edc:name="ECI3" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="X5" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="Y5" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="PAD2" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM0"/>
      <edc:VirtualPin edc:name="WO0" edc:ppsfunction="E" ltx:memberofperipheral="TCC1"/>
      <edc:VirtualPin edc:name="DRV5" edc:ppsfunction="F" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="IN2" edc:ppsfunction="I" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="WO4" edc:ppsfunction="J" ltx:memberofperipheral="TCC3"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA07" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT7" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="AIN3" edc:ppsfunction="B" ltx:memberofperipheral="AC"/>
      <edc:VirtualPin edc:name="AIN5" edc:ppsfunction="B" ltx:memberofperipheral="ADC"/>
      <edc:VirtualPin edc:name="VOUT1" edc:ppsfunction="B" ltx:memberofperipheral="DAC"/>
      <edc:VirtualPin edc:name="OAOUT0" edc:ppsfunction="B" ltx:memberofperipheral="OPAMP"/>
      <edc:VirtualPin edc:name="PAD3" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM0"/>
      <edc:VirtualPin edc:name="WO1" edc:ppsfunction="E" ltx:memberofperipheral="TCC1"/>
      <edc:VirtualPin edc:name="OUT0" edc:ppsfunction="I" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="WO5" edc:ppsfunction="J" ltx:memberofperipheral="TCC3"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC05" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT13" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC06" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT14" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC07" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT15" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="AVSS"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="AVDD"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA08" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="NMI" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="AIN6" edc:ppsfunction="B" ltx:memberofperipheral="ADC"/>
      <edc:VirtualPin edc:name="X6" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="Y6" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="PAD0" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM1"/>
      <edc:VirtualPin edc:name="PAD0" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM2"/>
      <edc:VirtualPin edc:name="WO0" edc:ppsfunction="E" ltx:memberofperipheral="TCC0"/>
      <edc:VirtualPin edc:name="DRV6" edc:ppsfunction="F" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="IN0" edc:ppsfunction="G" ltx:memberofperipheral="RTC"/>
      <edc:VirtualPin edc:name="IN3" edc:ppsfunction="I" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="WO2" edc:ppsfunction="J" ltx:memberofperipheral="TCC1"/>
      <edc:VirtualPin edc:name="SDI" edc:ppsfunction="K" ltx:memberofperipheral="I2S"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA09" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT0" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="AIN7" edc:ppsfunction="B" ltx:memberofperipheral="ADC"/>
      <edc:VirtualPin edc:name="X7" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="Y7" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="PAD1" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM1"/>
      <edc:VirtualPin edc:name="PAD1" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM2"/>
      <edc:VirtualPin edc:name="WO1" edc:ppsfunction="E" ltx:memberofperipheral="TCC0"/>
      <edc:VirtualPin edc:name="DRV7" edc:ppsfunction="F" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="IN1" edc:ppsfunction="G" ltx:memberofperipheral="RTC"/>
      <edc:VirtualPin edc:name="IN4" edc:ppsfunction="I" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="WO3" edc:ppsfunction="J" ltx:memberofperipheral="TCC1"/>
      <edc:VirtualPin edc:name="MCK0" edc:ppsfunction="K" ltx:memberofperipheral="I2S"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA10" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT1" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="AIN8" edc:ppsfunction="B" ltx:memberofperipheral="ADC"/>
      <edc:VirtualPin edc:name="X8" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="Y8" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="PAD2" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM1"/>
      <edc:VirtualPin edc:name="PAD2" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM2"/>
      <edc:VirtualPin edc:name="WO0" edc:ppsfunction="E" ltx:memberofperipheral="TCC1"/>
      <edc:VirtualPin edc:name="DRV8" edc:ppsfunction="F" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="IO4" edc:ppsfunction="H" ltx:memberofperipheral="GCLK"/>
      <edc:VirtualPin edc:name="IN5" edc:ppsfunction="I" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="WO2" edc:ppsfunction="J" ltx:memberofperipheral="TCC0"/>
      <edc:VirtualPin edc:name="SCK0" edc:ppsfunction="K" ltx:memberofperipheral="I2S"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA11" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT2" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="AIN9" edc:ppsfunction="B" ltx:memberofperipheral="ADC"/>
      <edc:VirtualPin edc:name="X9" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="Y9" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="PAD3" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM1"/>
      <edc:VirtualPin edc:name="PAD3" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM2"/>
      <edc:VirtualPin edc:name="WO1" edc:ppsfunction="E" ltx:memberofperipheral="TCC1"/>
      <edc:VirtualPin edc:name="DRV9" edc:ppsfunction="F" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="IO3" edc:ppsfunction="H" ltx:memberofperipheral="GCLK"/>
      <edc:VirtualPin edc:name="OUT1" edc:ppsfunction="I" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="WO3" edc:ppsfunction="J" ltx:memberofperipheral="TCC0"/>
      <edc:VirtualPin edc:name="FS0" edc:ppsfunction="K" ltx:memberofperipheral="I2S"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC08" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT0" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC09" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT1" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC10" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT2" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="PAD2" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC11" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT3" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="PAD3" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC12" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT4" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="PAD0" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC13" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT5" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="PAD1" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="AVSSPLL"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VDD"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VSS"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VDDPLL"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB12" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT12" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="X30" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="Y30" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="PAD0" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM3"/>
      <edc:VirtualPin edc:name="WO0" edc:ppsfunction="E" ltx:memberofperipheral="TC0"/>
      <edc:VirtualPin edc:name="DRV30" edc:ppsfunction="F" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="IO6" edc:ppsfunction="H" ltx:memberofperipheral="GCLK"/>
      <edc:VirtualPin edc:name="WO6" edc:ppsfunction="J" ltx:memberofperipheral="TCC0"/>
      <edc:VirtualPin edc:name="FS1" edc:ppsfunction="K" ltx:memberofperipheral="I2S"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB13" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT13" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="X31" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="Y31" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="PAD1" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM3"/>
      <edc:VirtualPin edc:name="WO1" edc:ppsfunction="E" ltx:memberofperipheral="TC0"/>
      <edc:VirtualPin edc:name="DRV31" edc:ppsfunction="F" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="IO7" edc:ppsfunction="H" ltx:memberofperipheral="GCLK"/>
      <edc:VirtualPin edc:name="WO7" edc:ppsfunction="J" ltx:memberofperipheral="TCC0"/>
      <edc:VirtualPin edc:name="MCK1" edc:ppsfunction="K" ltx:memberofperipheral="I2S"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB14" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT14" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="PAD2" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM3"/>
      <edc:VirtualPin edc:name="WO0" edc:ppsfunction="E" ltx:memberofperipheral="TC1"/>
      <edc:VirtualPin edc:name="IN4" edc:ppsfunction="G" ltx:memberofperipheral="RTC"/>
      <edc:VirtualPin edc:name="IO0" edc:ppsfunction="H" ltx:memberofperipheral="GCLK"/>
      <edc:VirtualPin edc:name="IN9" edc:ppsfunction="I" ltx:memberofperipheral="CCL"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB15" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT15" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="PAD3" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM3"/>
      <edc:VirtualPin edc:name="WO1" edc:ppsfunction="E" ltx:memberofperipheral="TC1"/>
      <edc:VirtualPin edc:name="IN5" edc:ppsfunction="G" ltx:memberofperipheral="RTC"/>
      <edc:VirtualPin edc:name="IO1" edc:ppsfunction="H" ltx:memberofperipheral="GCLK"/>
      <edc:VirtualPin edc:name="IN10" edc:ppsfunction="I" ltx:memberofperipheral="CCL"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC14" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT6" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="IN6" edc:ppsfunction="G" ltx:memberofperipheral="RTC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC15" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT7" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="IN7" edc:ppsfunction="G" ltx:memberofperipheral="RTC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA12" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT12" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="X24" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="Y24" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="PAD0" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM2"/>
      <edc:VirtualPin edc:name="PAD0" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM4"/>
      <edc:VirtualPin edc:name="WO0" edc:ppsfunction="E" ltx:memberofperipheral="TCC2"/>
      <edc:VirtualPin edc:name="DRV24" edc:ppsfunction="F" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="CMP0" edc:ppsfunction="H" ltx:memberofperipheral="AC"/>
      <edc:VirtualPin edc:name="WO6" edc:ppsfunction="J" ltx:memberofperipheral="TCC0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA13" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT13" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="X25" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="Y25" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="PAD1" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM2"/>
      <edc:VirtualPin edc:name="PAD1" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM4"/>
      <edc:VirtualPin edc:name="WO1" edc:ppsfunction="E" ltx:memberofperipheral="TCC2"/>
      <edc:VirtualPin edc:name="DRV25" edc:ppsfunction="F" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="CMP1" edc:ppsfunction="H" ltx:memberofperipheral="AC"/>
      <edc:VirtualPin edc:name="WO7" edc:ppsfunction="J" ltx:memberofperipheral="TCC0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA14" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT3" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="X10" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="Y10" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="PAD2" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM2"/>
      <edc:VirtualPin edc:name="PAD2" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM0"/>
      <edc:VirtualPin edc:name="WO0" edc:ppsfunction="E" ltx:memberofperipheral="TC0"/>
      <edc:VirtualPin edc:name="DRV10" edc:ppsfunction="F" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="IO0" edc:ppsfunction="H" ltx:memberofperipheral="GCLK"/>
      <edc:VirtualPin edc:name="WO4" edc:ppsfunction="J" ltx:memberofperipheral="TCC0"/>
      <edc:VirtualPin edc:name="XIN" edc:ppsfunction="XIN" ltx:memberofperipheral="OSCCTRL"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA15" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT4" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="X11" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="Y11" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="PAD3" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM2"/>
      <edc:VirtualPin edc:name="PAD3" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM0"/>
      <edc:VirtualPin edc:name="WO1" edc:ppsfunction="E" ltx:memberofperipheral="TC0"/>
      <edc:VirtualPin edc:name="DRV11" edc:ppsfunction="F" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="IO1" edc:ppsfunction="H" ltx:memberofperipheral="GCLK"/>
      <edc:VirtualPin edc:name="WO5" edc:ppsfunction="J" ltx:memberofperipheral="TCC0"/>
      <edc:VirtualPin edc:name="XOUT" edc:ppsfunction="XOUT" ltx:memberofperipheral="OSCCTRL"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VSS"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VDD"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA16" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT5" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="X12" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="Y12" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="PAD0" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM1"/>
      <edc:VirtualPin edc:name="PAD0" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM0"/>
      <edc:VirtualPin edc:name="WO0" edc:ppsfunction="E" ltx:memberofperipheral="TCC2"/>
      <edc:VirtualPin edc:name="DRV12" edc:ppsfunction="F" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="IN2" edc:ppsfunction="G" ltx:memberofperipheral="RTC"/>
      <edc:VirtualPin edc:name="IO2" edc:ppsfunction="H" ltx:memberofperipheral="GCLK"/>
      <edc:VirtualPin edc:name="IN0" edc:ppsfunction="I" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="WO6" edc:ppsfunction="J" ltx:memberofperipheral="TCC0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA17" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT6" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="X13" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="Y13" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="PAD1" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM1"/>
      <edc:VirtualPin edc:name="PAD1" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM0"/>
      <edc:VirtualPin edc:name="WO1" edc:ppsfunction="E" ltx:memberofperipheral="TCC2"/>
      <edc:VirtualPin edc:name="DRV13" edc:ppsfunction="F" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="IN3" edc:ppsfunction="G" ltx:memberofperipheral="RTC"/>
      <edc:VirtualPin edc:name="IO3" edc:ppsfunction="H" ltx:memberofperipheral="GCLK"/>
      <edc:VirtualPin edc:name="IN1" edc:ppsfunction="I" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="WO7" edc:ppsfunction="J" ltx:memberofperipheral="TCC0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA18" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT7" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="X14" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="Y14" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="PAD2" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM1"/>
      <edc:VirtualPin edc:name="PAD2" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM0"/>
      <edc:VirtualPin edc:name="WO0" edc:ppsfunction="E" ltx:memberofperipheral="TC2"/>
      <edc:VirtualPin edc:name="DRV14" edc:ppsfunction="F" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="OUT0" edc:ppsfunction="G" ltx:memberofperipheral="RTC"/>
      <edc:VirtualPin edc:name="CMP0" edc:ppsfunction="H" ltx:memberofperipheral="AC"/>
      <edc:VirtualPin edc:name="IN2" edc:ppsfunction="I" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="WO2" edc:ppsfunction="J" ltx:memberofperipheral="TCC0"/>
      <edc:VirtualPin edc:name="FS0" edc:ppsfunction="K" ltx:memberofperipheral="I2S"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA19" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT0" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="X15" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="Y15" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="PAD3" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM1"/>
      <edc:VirtualPin edc:name="PAD3" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM0"/>
      <edc:VirtualPin edc:name="WO1" edc:ppsfunction="E" ltx:memberofperipheral="TC2"/>
      <edc:VirtualPin edc:name="DRV15" edc:ppsfunction="F" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="OUT1" edc:ppsfunction="G" ltx:memberofperipheral="RTC"/>
      <edc:VirtualPin edc:name="CMP1" edc:ppsfunction="H" ltx:memberofperipheral="AC"/>
      <edc:VirtualPin edc:name="OUT0" edc:ppsfunction="I" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="WO3" edc:ppsfunction="J" ltx:memberofperipheral="TCC0"/>
      <edc:VirtualPin edc:name="SDO" edc:ppsfunction="K" ltx:memberofperipheral="I2S"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC16" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT8" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC17" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT9" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC18" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT10" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC19" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT11" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC20" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT12" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="IN10" edc:ppsfunction="I" ltx:memberofperipheral="CCL"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC21" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT13" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VSS"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VDD"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB16" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT0" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="PAD0" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM5"/>
      <edc:VirtualPin edc:name="WO0" edc:ppsfunction="E" ltx:memberofperipheral="TC2"/>
      <edc:VirtualPin edc:name="OUT4" edc:ppsfunction="G" ltx:memberofperipheral="RTC"/>
      <edc:VirtualPin edc:name="IO2" edc:ppsfunction="H" ltx:memberofperipheral="GCLK"/>
      <edc:VirtualPin edc:name="IN11" edc:ppsfunction="I" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="WO4" edc:ppsfunction="J" ltx:memberofperipheral="TCC0"/>
      <edc:VirtualPin edc:name="SDI" edc:ppsfunction="K" ltx:memberofperipheral="I2S"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB17" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT1" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="PAD1" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM5"/>
      <edc:VirtualPin edc:name="WO1" edc:ppsfunction="E" ltx:memberofperipheral="TC2"/>
      <edc:VirtualPin edc:name="OUT5" edc:ppsfunction="G" ltx:memberofperipheral="RTC"/>
      <edc:VirtualPin edc:name="IO3" edc:ppsfunction="H" ltx:memberofperipheral="GCLK"/>
      <edc:VirtualPin edc:name="OUT3" edc:ppsfunction="I" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="WO5" edc:ppsfunction="J" ltx:memberofperipheral="TCC0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB18" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT2" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="PAD2" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM5"/>
      <edc:VirtualPin edc:name="PAD2" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM3"/>
      <edc:VirtualPin edc:name="OUT6" edc:ppsfunction="G" ltx:memberofperipheral="RTC"/>
      <edc:VirtualPin edc:name="WO0" edc:ppsfunction="J" ltx:memberofperipheral="TCC0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB19" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT3" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="PAD3" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM5"/>
      <edc:VirtualPin edc:name="PAD3" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM3"/>
      <edc:VirtualPin edc:name="OUT7" edc:ppsfunction="G" ltx:memberofperipheral="RTC"/>
      <edc:VirtualPin edc:name="WO1" edc:ppsfunction="J" ltx:memberofperipheral="TCC0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB20" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT4" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="PAD0" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM3"/>
      <edc:VirtualPin edc:name="PAD0" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM5"/>
      <edc:VirtualPin edc:name="WO2" edc:ppsfunction="J" ltx:memberofperipheral="TCC0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB21" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT5" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="PAD1" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM3"/>
      <edc:VirtualPin edc:name="PAD1" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM5"/>
      <edc:VirtualPin edc:name="WO3" edc:ppsfunction="J" ltx:memberofperipheral="TCC0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA20" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT4" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="X22" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="Y22" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="PAD2" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM3"/>
      <edc:VirtualPin edc:name="PAD2" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM2"/>
      <edc:VirtualPin edc:name="WO0" edc:ppsfunction="E" ltx:memberofperipheral="TC1"/>
      <edc:VirtualPin edc:name="DRV22" edc:ppsfunction="F" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="IO4" edc:ppsfunction="H" ltx:memberofperipheral="GCLK"/>
      <edc:VirtualPin edc:name="IN5" edc:ppsfunction="I" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="WO6" edc:ppsfunction="J" ltx:memberofperipheral="TCC0"/>
      <edc:VirtualPin edc:name="SCK0" edc:ppsfunction="K" ltx:memberofperipheral="I2S"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA21" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT5" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="X23" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="Y23" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="PAD3" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM3"/>
      <edc:VirtualPin edc:name="PAD3" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM2"/>
      <edc:VirtualPin edc:name="DRV23" edc:ppsfunction="F" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="IO5" edc:ppsfunction="H" ltx:memberofperipheral="GCLK"/>
      <edc:VirtualPin edc:name="WO7" edc:ppsfunction="J" ltx:memberofperipheral="TCC0"/>
      <edc:VirtualPin edc:name="SCK1" edc:ppsfunction="K" ltx:memberofperipheral="I2S"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA22" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT1" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="X16" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="Y16" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="PAD0" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM0"/>
      <edc:VirtualPin edc:name="PAD0" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM2"/>
      <edc:VirtualPin edc:name="WO0" edc:ppsfunction="E" ltx:memberofperipheral="TC0"/>
      <edc:VirtualPin edc:name="DRV16" edc:ppsfunction="F" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="OUT2" edc:ppsfunction="G" ltx:memberofperipheral="RTC"/>
      <edc:VirtualPin edc:name="IO2" edc:ppsfunction="H" ltx:memberofperipheral="GCLK"/>
      <edc:VirtualPin edc:name="IN6" edc:ppsfunction="I" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="WO4" edc:ppsfunction="J" ltx:memberofperipheral="TCC0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA23" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT2" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="X17" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="Y17" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="PAD1" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM0"/>
      <edc:VirtualPin edc:name="PAD1" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM2"/>
      <edc:VirtualPin edc:name="WO1" edc:ppsfunction="E" ltx:memberofperipheral="TC0"/>
      <edc:VirtualPin edc:name="DRV17" edc:ppsfunction="F" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="OUT3" edc:ppsfunction="G" ltx:memberofperipheral="RTC"/>
      <edc:VirtualPin edc:name="IO1" edc:ppsfunction="H" ltx:memberofperipheral="GCLK"/>
      <edc:VirtualPin edc:name="IN7" edc:ppsfunction="I" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="WO5" edc:ppsfunction="J" ltx:memberofperipheral="TCC0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA24" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT3" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="PAD2" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM0"/>
      <edc:VirtualPin edc:name="PAD2" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM2"/>
      <edc:VirtualPin edc:name="WO0" edc:ppsfunction="E" ltx:memberofperipheral="TC1"/>
      <edc:VirtualPin edc:name="DM" edc:ppsfunction="G" ltx:memberofperipheral="USB"/>
      <edc:VirtualPin edc:name="CMP2" edc:ppsfunction="H" ltx:memberofperipheral="AC"/>
      <edc:VirtualPin edc:name="IN8" edc:ppsfunction="I" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="WO2" edc:ppsfunction="J" ltx:memberofperipheral="TCC1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA25" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT4" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="PAD3" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM0"/>
      <edc:VirtualPin edc:name="PAD3" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM2"/>
      <edc:VirtualPin edc:name="WO1" edc:ppsfunction="E" ltx:memberofperipheral="TC1"/>
      <edc:VirtualPin edc:name="DP" edc:ppsfunction="G" ltx:memberofperipheral="USB"/>
      <edc:VirtualPin edc:name="CMP3" edc:ppsfunction="H" ltx:memberofperipheral="AC"/>
      <edc:VirtualPin edc:name="OUT2" edc:ppsfunction="I" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="WO3" edc:ppsfunction="J" ltx:memberofperipheral="TCC1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VSS"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VDD"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB22" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT6" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="PAD2" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM0"/>
      <edc:VirtualPin edc:name="PAD2" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM5"/>
      <edc:VirtualPin edc:name="SOF_1KHZ" edc:ppsfunction="G" ltx:memberofperipheral="USB"/>
      <edc:VirtualPin edc:name="IO0" edc:ppsfunction="H" ltx:memberofperipheral="GCLK"/>
      <edc:VirtualPin edc:name="IN0" edc:ppsfunction="I" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="WO0" edc:ppsfunction="J" ltx:memberofperipheral="TCC3"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB23" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT7" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="PAD3" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM0"/>
      <edc:VirtualPin edc:name="PAD3" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM5"/>
      <edc:VirtualPin edc:name="IO1" edc:ppsfunction="H" ltx:memberofperipheral="GCLK"/>
      <edc:VirtualPin edc:name="OUT0" edc:ppsfunction="I" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="WO1" edc:ppsfunction="J" ltx:memberofperipheral="TCC3"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB24" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT8" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="PAD0" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM0"/>
      <edc:VirtualPin edc:name="PAD0" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM4"/>
      <edc:VirtualPin edc:name="CMP2" edc:ppsfunction="H" ltx:memberofperipheral="AC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB25" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT9" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="PAD1" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM0"/>
      <edc:VirtualPin edc:name="PAD1" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM4"/>
      <edc:VirtualPin edc:name="CMP3" edc:ppsfunction="H" ltx:memberofperipheral="AC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC24" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT0" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="PAD2" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM0"/>
      <edc:VirtualPin edc:name="PAD2" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM4"/>
      <edc:VirtualPin edc:name="WO0" edc:ppsfunction="E" ltx:memberofperipheral="TC2"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC25" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT1" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="PAD3" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM0"/>
      <edc:VirtualPin edc:name="PAD3" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM4"/>
      <edc:VirtualPin edc:name="WO1" edc:ppsfunction="E" ltx:memberofperipheral="TC2"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC26" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT2" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC27" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT3" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="PAD0" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC28" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT4" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="PAD1" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VSS"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="RESET_N" edc:ppsfunction="default" ltx:memberofperipheral="PM"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VDDCORE"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VSSCORE"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VDDOUT"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VDD"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA30" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT6" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="X18" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="Y18" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="PAD2" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM1"/>
      <edc:VirtualPin edc:name="WO0" edc:ppsfunction="E" ltx:memberofperipheral="TCC1"/>
      <edc:VirtualPin edc:name="DRV18" edc:ppsfunction="F" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="IO0" edc:ppsfunction="H" ltx:memberofperipheral="GCLK"/>
      <edc:VirtualPin edc:name="IN3" edc:ppsfunction="I" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="WO4" edc:ppsfunction="J" ltx:memberofperipheral="TCC3"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA31" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT7" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="X19" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="Y19" edc:ppsfunction="B" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="PAD3" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM1"/>
      <edc:VirtualPin edc:name="WO1" edc:ppsfunction="E" ltx:memberofperipheral="TCC1"/>
      <edc:VirtualPin edc:name="DRV19" edc:ppsfunction="F" ltx:memberofperipheral="PTC"/>
      <edc:VirtualPin edc:name="OUT1" edc:ppsfunction="I" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="WO5" edc:ppsfunction="J" ltx:memberofperipheral="TCC3"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB30" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT14" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="PAD0" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM1"/>
      <edc:VirtualPin edc:name="PAD0" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM5"/>
      <edc:VirtualPin edc:name="WO0" edc:ppsfunction="E" ltx:memberofperipheral="TCC0"/>
      <edc:VirtualPin edc:name="WO2" edc:ppsfunction="J" ltx:memberofperipheral="TCC1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB31" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT15" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="PAD1" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM1"/>
      <edc:VirtualPin edc:name="PAD1" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM5"/>
      <edc:VirtualPin edc:name="WO1" edc:ppsfunction="E" ltx:memberofperipheral="TCC0"/>
      <edc:VirtualPin edc:name="WO3" edc:ppsfunction="J" ltx:memberofperipheral="TCC1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB00" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT0" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="AIN16" edc:ppsfunction="B" ltx:memberofperipheral="ADC"/>
      <edc:VirtualPin edc:name="PAD2" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM3"/>
      <edc:VirtualPin edc:name="PAD2" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM5"/>
      <edc:VirtualPin edc:name="IN1" edc:ppsfunction="I" ltx:memberofperipheral="CCL"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB01" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT1" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="AIN17" edc:ppsfunction="B" ltx:memberofperipheral="ADC"/>
      <edc:VirtualPin edc:name="PAD3" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM3"/>
      <edc:VirtualPin edc:name="PAD3" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM5"/>
      <edc:VirtualPin edc:name="IN2" edc:ppsfunction="I" ltx:memberofperipheral="CCL"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB02" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT2" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="AIN4" edc:ppsfunction="B" ltx:memberofperipheral="AC"/>
      <edc:VirtualPin edc:name="AIN10" edc:ppsfunction="B" ltx:memberofperipheral="ADC"/>
      <edc:VirtualPin edc:name="PAD0" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM3"/>
      <edc:VirtualPin edc:name="PAD0" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM5"/>
      <edc:VirtualPin edc:name="WO0" edc:ppsfunction="E" ltx:memberofperipheral="TC2"/>
      <edc:VirtualPin edc:name="OUT0" edc:ppsfunction="I" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="WO2" edc:ppsfunction="J" ltx:memberofperipheral="TCC3"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB03" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT3" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="AIN5" edc:ppsfunction="B" ltx:memberofperipheral="AC"/>
      <edc:VirtualPin edc:name="AIN11" edc:ppsfunction="B" ltx:memberofperipheral="ADC"/>
      <edc:VirtualPin edc:name="PAD1" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM3"/>
      <edc:VirtualPin edc:name="PAD1" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM5"/>
      <edc:VirtualPin edc:name="WO1" edc:ppsfunction="E" ltx:memberofperipheral="TC2"/>
      <edc:VirtualPin edc:name="WO3" edc:ppsfunction="J" ltx:memberofperipheral="TCC3"/>
    </edc:Pin>
  </edc:PinList>
</edc:PIC>
