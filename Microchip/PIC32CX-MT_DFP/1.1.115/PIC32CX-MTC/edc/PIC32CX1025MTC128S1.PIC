<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<edc:PIC xmlns:atdf="http://crownking/atdf" xmlns:edc="http://crownking/edc" xmlns:ltx="http://crownking/ltx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://crownking/edc edc/PIC.xsd" edc:name="PIC32CX1025MTC128S1" edc:arch="arm32bit" edc:procid="0x0000" atdf:architecture="CORTEX-M4" atdf:family="PIC32CXMT" edc:isslaveof="PIC32CX1025MTC128" edc:hasFreeze="false" edc:masksetid="SG003">
  <edc:Properties>
    <edc:Property edc:propkey="file.registers.are.odd.address.accessible" edc:propvalue="true"/>
  </edc:Properties>
  <edc:Power edc:sharespowersupply="true">
    <edc:VDD edc:minvoltage="2.25" edc:maxvoltage="3.6" edc:nominalvoltage="3.300"/>
  </edc:Power>
  <edc:Programming edc:haslvp2="true"/>
  <edc:ArchDef edc:name="arm32bit" edc:desc="arm32bit">
    <edc:MemTraits edc:addrinc="0x1" edc:locsize="0x1" edc:wordimpl="0xFFFFFFFF" edc:wordinit="0xFFFFFFFF" edc:wordsafe="0xFFFFFFFF" edc:wordsize="0x4"/>
  </edc:ArchDef>
  <edc:InstructionSet edc:instructionsetid="armv7m"/>
  <edc:InterruptList>
    <edc:Interrupt edc:irq="-15" edc:cname="Reset" edc:desc="Reset Vector, invoked on Power up and warm reset"/>
    <edc:Interrupt edc:irq="-14" edc:cname="NonMaskableInt" edc:desc="Non maskable Interrupt, cannot be stopped or preempted"/>
    <edc:Interrupt edc:irq="-13" edc:cname="HardFault" edc:desc="Hard Fault, all classes of Fault"/>
    <edc:Interrupt edc:irq="-12" edc:cname="MemoryManagement" edc:desc="Memory Management, MPU mismatch, including Access Violation and No Match"/>
    <edc:Interrupt edc:irq="-11" edc:cname="BusFault" edc:desc="Bus Fault, Pre-Fetch-, Memory Access Fault, other address/memory related Fault"/>
    <edc:Interrupt edc:irq="-10" edc:cname="UsageFault" edc:desc="Usage Fault, i.e. Undef Instruction, Illegal State Transition"/>
    <edc:Interrupt edc:irq="-5" edc:cname="SVCall" edc:desc="System Service Call via SVC instruction"/>
    <edc:Interrupt edc:irq="-4" edc:cname="DebugMonitor" edc:desc="Debug Monitor"/>
    <edc:Interrupt edc:irq="-2" edc:cname="PendSV" edc:desc="Pendable request for system service"/>
    <edc:Interrupt edc:irq="-1" edc:cname="SysTick" edc:desc="System Tick Timer"/>
    <edc:Interrupt edc:irq="0" edc:cname="SUPC" edc:desc="Supply Controller" ltx:memberofperipheral="SUPC"/>
    <edc:Interrupt edc:irq="1" edc:cname="RSTC" edc:desc="Reset Controller" ltx:memberofperipheral="RSTC"/>
    <edc:Interrupt edc:irq="2" edc:cname="RTC" edc:desc="Real Time Clock" ltx:memberofperipheral="RTC"/>
    <edc:Interrupt edc:irq="3" edc:cname="RTT" edc:desc="Real Time Timer" ltx:memberofperipheral="RTT"/>
    <edc:Interrupt edc:irq="4" edc:cname="DWDT0" edc:desc="Dual Watchdog 0 Timer" ltx:memberofperipheral="DWDT"/>
    <edc:Interrupt edc:irq="5" edc:cname="DWDT1" edc:desc="Dual Watchdog 1 Timer" ltx:memberofperipheral="DWDT"/>
    <edc:Interrupt edc:irq="6" edc:cname="PMC" edc:desc="Power Management Controller" ltx:memberofperipheral="PMC"/>
    <edc:Interrupt edc:irq="9" edc:cname="FLEXCOM0" edc:desc="FLEXCOM 0 (USART0/SPI0/TWI0)" ltx:memberofperipheral="FLEXCOM0"/>
    <edc:Interrupt edc:irq="10" edc:cname="FLEXCOM1" edc:desc="FLEXCOM 1 (USART1/SPI1/TWI1)" ltx:memberofperipheral="FLEXCOM1"/>
    <edc:Interrupt edc:irq="11" edc:cname="FLEXCOM2" edc:desc="FLEXCOM 2 (USART2/SPI2/TWI2)" ltx:memberofperipheral="FLEXCOM2"/>
    <edc:Interrupt edc:irq="12" edc:cname="FLEXCOM3" edc:desc="FLEXCOM 3 (USART3/SPI3/TWI3)" ltx:memberofperipheral="FLEXCOM3"/>
    <edc:Interrupt edc:irq="13" edc:cname="FLEXCOM4" edc:desc="FLEXCOM 4 (USART4/SPI4/TWI4)" ltx:memberofperipheral="FLEXCOM4"/>
    <edc:Interrupt edc:irq="14" edc:cname="FLEXCOM5" edc:desc="FLEXCOM 5 (USART5/SPI5/TWI5)" ltx:memberofperipheral="FLEXCOM5"/>
    <edc:Interrupt edc:irq="15" edc:cname="FLEXCOM6" edc:desc="FLEXCOM 6 (USART6/SPI6/TWI6)" ltx:memberofperipheral="FLEXCOM6"/>
    <edc:Interrupt edc:irq="16" edc:cname="FLEXCOM7" edc:desc="FLEXCOM 7 (USART7/SPI7/TWI7)" ltx:memberofperipheral="FLEXCOM7"/>
    <edc:Interrupt edc:irq="17" edc:cname="PIOA" edc:desc="Application Core Parallel I/O Controller A (PIOA)" ltx:memberofperipheral="PIOA"/>
    <edc:Interrupt edc:irq="18" edc:cname="PIOA_SEC" edc:desc="Application Core Parallel I/O Controller A (PIOA) Secure Event Interrupt" ltx:memberofperipheral="PIOA"/>
    <edc:Interrupt edc:irq="19" edc:cname="PIOB" edc:desc="Application Core Parallel I/O Controller B (PIOB)" ltx:memberofperipheral="PIOB"/>
    <edc:Interrupt edc:irq="20" edc:cname="PIOB_SEC" edc:desc="Application Core Parallel I/O Controller B (PIOB) Secure Event Interrupt" ltx:memberofperipheral="PIOB"/>
    <edc:Interrupt edc:irq="21" edc:cname="PIOC" edc:desc="Application Core Parallel I/O Controller C (PIOC)" ltx:memberofperipheral="PIOC"/>
    <edc:Interrupt edc:irq="22" edc:cname="PIOC_SEC" edc:desc="Application Core Parallel I/O Controller C (PIOC) Secure Event Interrupt" ltx:memberofperipheral="PIOC"/>
    <edc:Interrupt edc:irq="23" edc:cname="QSPI" edc:desc="Quad IO Serial Peripheral Interface" ltx:memberofperipheral="QSPI"/>
    <edc:Interrupt edc:irq="24" edc:cname="ADC" edc:desc="Analog To Digital Converter" ltx:memberofperipheral="ADC"/>
    <edc:Interrupt edc:irq="25" edc:cname="ACC" edc:desc="Analog Comparator" ltx:memberofperipheral="ACC"/>
    <edc:Interrupt edc:irq="28" edc:cname="IPC0" edc:desc="Application Core Interprocessor communication (IPC0)" ltx:memberofperipheral="IPC0"/>
    <edc:Interrupt edc:irq="29" edc:cname="SLCDC" edc:desc="Segment LCD Controller" ltx:memberofperipheral="SLCDC"/>
    <edc:Interrupt edc:irq="30" edc:cname="MEM2MEM0" edc:desc="Application Core Memory to Memory Transfer Controller (MEM2MEM0)" ltx:memberofperipheral="MEM2MEM0"/>
    <edc:Interrupt edc:irq="31" edc:cname="TC0_CHANNEL0" edc:desc="Timer Counter 0, Channel 0" ltx:memberofperipheral="TC0"/>
    <edc:Interrupt edc:irq="32" edc:cname="TC0_CHANNEL1" edc:desc="Timer Counter 0, Channel 1" ltx:memberofperipheral="TC0"/>
    <edc:Interrupt edc:irq="33" edc:cname="TC0_CHANNEL2" edc:desc="Timer Counter 0, Channel 2" ltx:memberofperipheral="TC0"/>
    <edc:Interrupt edc:irq="34" edc:cname="TC1_CHANNEL0" edc:desc="Timer Counter 1, Channel 0" ltx:memberofperipheral="TC1"/>
    <edc:Interrupt edc:irq="35" edc:cname="TC1_CHANNEL1" edc:desc="Timer Counter 1, Channel 1" ltx:memberofperipheral="TC1"/>
    <edc:Interrupt edc:irq="36" edc:cname="TC1_CHANNEL2" edc:desc="Timer Counter 1, Channel 2" ltx:memberofperipheral="TC1"/>
    <edc:Interrupt edc:irq="37" edc:cname="TC2_CHANNEL0" edc:desc="Timer Counter 2, Channel 0" ltx:memberofperipheral="TC2"/>
    <edc:Interrupt edc:irq="38" edc:cname="TC2_CHANNEL1" edc:desc="Timer Counter 2, Channel 1" ltx:memberofperipheral="TC2"/>
    <edc:Interrupt edc:irq="39" edc:cname="TC2_CHANNEL2" edc:desc="Timer Counter 2, Channel 2" ltx:memberofperipheral="TC2"/>
    <edc:Interrupt edc:irq="40" edc:cname="TC0_C0SEC" edc:desc="Timer Counter 0, Channel 0, Secure IRQ" ltx:memberofperipheral="TC0"/>
    <edc:Interrupt edc:irq="41" edc:cname="TC0_C1SEC" edc:desc="Timer Counter 0, Channel 1, Secure IRQ" ltx:memberofperipheral="TC0"/>
    <edc:Interrupt edc:irq="42" edc:cname="TC0_C2SEC" edc:desc="Timer Counter 0, Channel 2, Secure IRQ" ltx:memberofperipheral="TC0"/>
    <edc:Interrupt edc:irq="43" edc:cname="TC1_C0SEC" edc:desc="Timer Counter 1, Channel 0, Secure IRQ" ltx:memberofperipheral="TC1"/>
    <edc:Interrupt edc:irq="44" edc:cname="TC1_C1SEC" edc:desc="Timer Counter 1, Channel 1, Secure IRQ" ltx:memberofperipheral="TC1"/>
    <edc:Interrupt edc:irq="45" edc:cname="TC1_C2SEC" edc:desc="Timer Counter 1, Channel 2, Secure IRQ" ltx:memberofperipheral="TC1"/>
    <edc:Interrupt edc:irq="46" edc:cname="TC2_C0SEC" edc:desc="Timer Counter 2, Channel 0, Secure IRQ" ltx:memberofperipheral="TC2"/>
    <edc:Interrupt edc:irq="47" edc:cname="TC2_C1SEC" edc:desc="Timer Counter 2, Channel 1, Secure IRQ" ltx:memberofperipheral="TC2"/>
    <edc:Interrupt edc:irq="48" edc:cname="TC2_C2SEC" edc:desc="Timer Counter 2, Channel 2, Secure IRQ" ltx:memberofperipheral="TC2"/>
    <edc:Interrupt edc:irq="61" edc:cname="MATRIX1" edc:desc="Low-Speed Application Core Matrix (LSACM) (MATRIX1)" ltx:memberofperipheral="MATRIX1"/>
    <edc:Interrupt edc:irq="62" edc:cname="SUPC_WKUP3" edc:desc="External interrupt 3" ltx:memberofperipheral="SUPC"/>
    <edc:Interrupt edc:irq="63" edc:cname="SUPC_WKUP4" edc:desc="External interrupt 4" ltx:memberofperipheral="SUPC"/>
    <edc:Interrupt edc:irq="64" edc:cname="SUPC_WKUP5" edc:desc="External interrupt 5" ltx:memberofperipheral="SUPC"/>
    <edc:Interrupt edc:irq="65" edc:cname="SUPC_WKUP6" edc:desc="External interrupt 6" ltx:memberofperipheral="SUPC"/>
    <edc:Interrupt edc:irq="66" edc:cname="SUPC_WKUP7" edc:desc="External interrupt 7" ltx:memberofperipheral="SUPC"/>
    <edc:Interrupt edc:irq="67" edc:cname="SUPC_WKUP8" edc:desc="External interrupt 8" ltx:memberofperipheral="SUPC"/>
    <edc:Interrupt edc:irq="68" edc:cname="SUPC_WKUP9" edc:desc="External interrupt 9" ltx:memberofperipheral="SUPC"/>
    <edc:Interrupt edc:irq="69" edc:cname="SUPC_WKUP10" edc:desc="External interrupt 10" ltx:memberofperipheral="SUPC"/>
    <edc:Interrupt edc:irq="70" edc:cname="SUPC_WKUP11" edc:desc="External interrupt 11" ltx:memberofperipheral="SUPC"/>
    <edc:Interrupt edc:irq="71" edc:cname="SUPC_WKUP12" edc:desc="External interrupt 12" ltx:memberofperipheral="SUPC"/>
    <edc:Interrupt edc:irq="72" edc:cname="SUPC_WKUP13" edc:desc="External interrupt 13" ltx:memberofperipheral="SUPC"/>
    <edc:Interrupt edc:irq="73" edc:cname="SUPC_WKUP14" edc:desc="External interrupt 14" ltx:memberofperipheral="SUPC"/>
    <edc:Interrupt edc:irq="74" edc:cname="SUPC_WKUP15" edc:desc="External interrupt 15" ltx:memberofperipheral="SUPC"/>
    <edc:Interrupt edc:irq="78" edc:cname="MEM2MEM1" edc:desc="Metrology Core Memory to Memory Transfer Controller 1 (MEM2MEM1)" ltx:memberofperipheral="MEM2MEM1"/>
    <edc:Interrupt edc:irq="79" edc:cname="TC3_CHANNEL0" edc:desc="Timer Counter 3, Channel 0" ltx:memberofperipheral="TC3"/>
    <edc:Interrupt edc:irq="80" edc:cname="TC3_CHANNEL1" edc:desc="Timer Counter 3, Channel 1" ltx:memberofperipheral="TC3"/>
    <edc:Interrupt edc:irq="81" edc:cname="TC3_CHANNEL2" edc:desc="Timer Counter 3, Channel 2" ltx:memberofperipheral="TC3"/>
    <edc:Interrupt edc:irq="82" edc:cname="TC3_C0SEC" edc:desc="Timer Counter 3, Channel 0, Secure IRQ" ltx:memberofperipheral="TC3"/>
    <edc:Interrupt edc:irq="83" edc:cname="TC3_C1SEC" edc:desc="Timer Counter 3, Channel 1, Secure IRQ" ltx:memberofperipheral="TC3"/>
    <edc:Interrupt edc:irq="84" edc:cname="TC3_C2SEC" edc:desc="Timer Counter 3, Channel 2, Secure IRQ" ltx:memberofperipheral="TC3"/>
    <edc:Interrupt edc:irq="85" edc:cname="PIOD" edc:desc="Metrology Core Parallel I/O Controller D (PIOD)" ltx:memberofperipheral="PIOD"/>
    <edc:Interrupt edc:irq="86" edc:cname="PIOD_SEC" edc:desc="Metrology Core Parallel I/O Controller A Secure Interupt (named as PIOD)" ltx:memberofperipheral="PIOD"/>
    <edc:Interrupt edc:irq="87" edc:cname="UART" edc:desc="Optical UART" ltx:memberofperipheral="UART"/>
    <edc:Interrupt edc:irq="88" edc:cname="IPC1" edc:desc="Metrology Core Interprocessor communication (IPC1)" ltx:memberofperipheral="IPC1"/>
    <edc:Interrupt edc:irq="89" edc:cname="MCSPI" edc:desc="Multi-Channel SPI" ltx:memberofperipheral="MCSPI"/>
    <edc:Interrupt edc:irq="90" edc:cname="PWM" edc:desc="Pulse Width Modulation" ltx:memberofperipheral="PWM"/>
    <edc:Interrupt edc:irq="94" edc:cname="MATRIX2" edc:desc="High-Speed Metrology Core Matrix (HSMCM) (Formely MATRIX2)" ltx:memberofperipheral="MATRIX2"/>
    <edc:Interrupt edc:irq="95" edc:cname="MATRIX3" edc:desc="Low-Speed Metrology Core Matrix (LSMCM) (Formely MATRIX3)" ltx:memberofperipheral="MATRIX3"/>
  </edc:InterruptList>
  <edc:PeripheralList>
    <edc:Peripheral edc:cname="ACC" edc:desc=""/>
    <edc:Peripheral edc:cname="ADC" edc:desc=""/>
    <edc:Peripheral edc:cname="CHIPID" edc:desc=""/>
    <edc:Peripheral edc:cname="DWDT" edc:desc=""/>
    <edc:Peripheral edc:cname="FLEXCOM0" edc:desc=""/>
    <edc:Peripheral edc:cname="FLEXCOM1" edc:desc=""/>
    <edc:Peripheral edc:cname="FLEXCOM2" edc:desc=""/>
    <edc:Peripheral edc:cname="FLEXCOM3" edc:desc=""/>
    <edc:Peripheral edc:cname="FLEXCOM4" edc:desc=""/>
    <edc:Peripheral edc:cname="FLEXCOM5" edc:desc=""/>
    <edc:Peripheral edc:cname="FLEXCOM6" edc:desc=""/>
    <edc:Peripheral edc:cname="FLEXCOM7" edc:desc=""/>
    <edc:Peripheral edc:cname="GPBR" edc:desc=""/>
    <edc:Peripheral edc:cname="IPC0" edc:desc=""/>
    <edc:Peripheral edc:cname="IPC1" edc:desc=""/>
    <edc:Peripheral edc:cname="MATRIX1" edc:desc=""/>
    <edc:Peripheral edc:cname="MATRIX2" edc:desc=""/>
    <edc:Peripheral edc:cname="MATRIX3" edc:desc=""/>
    <edc:Peripheral edc:cname="MCSPI" edc:desc=""/>
    <edc:Peripheral edc:cname="MEM2MEM0" edc:desc=""/>
    <edc:Peripheral edc:cname="MEM2MEM1" edc:desc=""/>
    <edc:Peripheral edc:cname="PIO0" edc:desc=""/>
    <edc:Peripheral edc:cname="PIOA" edc:desc=""/>
    <edc:Peripheral edc:cname="PIOB" edc:desc=""/>
    <edc:Peripheral edc:cname="PIOC" edc:desc=""/>
    <edc:Peripheral edc:cname="PIO1" edc:desc=""/>
    <edc:Peripheral edc:cname="PIOD" edc:desc=""/>
    <edc:Peripheral edc:cname="PMC" edc:desc=""/>
    <edc:Peripheral edc:cname="PWM" edc:desc=""/>
    <edc:Peripheral edc:cname="QSPI" edc:desc=""/>
    <edc:Peripheral edc:cname="RSTC" edc:desc=""/>
    <edc:Peripheral edc:cname="RTC" edc:desc=""/>
    <edc:Peripheral edc:cname="RTT" edc:desc=""/>
    <edc:Peripheral edc:cname="SFR" edc:desc=""/>
    <edc:Peripheral edc:cname="SFRBU" edc:desc=""/>
    <edc:Peripheral edc:cname="SLCDC" edc:desc=""/>
    <edc:Peripheral edc:cname="SUPC" edc:desc=""/>
    <edc:Peripheral edc:cname="SYSCWP" edc:desc=""/>
    <edc:Peripheral edc:cname="TC0" edc:desc=""/>
    <edc:Peripheral edc:cname="TC1" edc:desc=""/>
    <edc:Peripheral edc:cname="TC2" edc:desc=""/>
    <edc:Peripheral edc:cname="TC3" edc:desc=""/>
    <edc:Peripheral edc:cname="UART" edc:desc=""/>
    <edc:Peripheral edc:cname="SRAM1" edc:desc=""/>
    <edc:Peripheral edc:cname="CoreDebug" edc:desc=""/>
    <edc:Peripheral edc:cname="DWT" edc:desc=""/>
    <edc:Peripheral edc:cname="FPU" edc:desc=""/>
    <edc:Peripheral edc:cname="ITM" edc:desc=""/>
    <edc:Peripheral edc:cname="MPU" edc:desc=""/>
    <edc:Peripheral edc:cname="NVIC" edc:desc=""/>
    <edc:Peripheral edc:cname="SysTick" edc:desc=""/>
    <edc:Peripheral edc:cname="SystemControl" edc:desc=""/>
    <edc:Peripheral edc:cname="TPI" edc:desc=""/>
  </edc:PeripheralList>
  <edc:PhysicalSpace>
    <edc:NMMRPlace edc:regionid="corenmmrs">
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R0" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="0"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R1" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="4"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R2" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="8"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R3" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="12"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R4" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="16"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R5" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="20"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R6" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="24"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R7" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="28"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R8" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="32"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R9" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="36"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R10" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="40"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R11" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="44"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R12" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="48"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="SP" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="Stack Pointer" edc:nmmrid="52"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="MSP" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="Main Stack Pointer" edc:nmmrid="64"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="PSP" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="Process Stack Pointer" edc:nmmrid="68"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="LR" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="11111111111111111111111111111111" edc:mclr="11111111111111111111111111111111" edc:desc="Link Register" edc:nmmrid="56"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="PC" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="Program Counter" edc:nmmrid="60"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="PSR" edc:impl="0xFF00FDFF" edc:access="nnnnnnnn--------nnnnnn-nnnnnnnnn" edc:por="00000001000000000000000000000000" edc:mclr="00000001000000000000000000000000" edc:desc="Program Status Register" edc:nmmrid="72"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="APSR" edc:impl="0xF80F0000" edc:access="nnnnn-------nnnn----------------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Application Program Status Register" edc:nmmrid="76"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="IPSR" edc:impl="0x1FF" edc:access="-----------------------rrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Interrupt Program Status Register" edc:nmmrid="80"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="EPSR" edc:impl="0x700FC00" edc:access="-----rrr--------rrrrrr----------" edc:por="00000001000000000000000000000000" edc:mclr="00000001000000000000000000000000" edc:desc="Execution Program Status Register" edc:nmmrid="84"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="PRIMASK" edc:impl="0x1" edc:access="-------------------------------n" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Priority Mask Register" edc:nmmrid="88"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="FAULTMASK" edc:impl="0x1" edc:access="-------------------------------n" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Fault Mask Register" edc:nmmrid="92"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="BASEPRI" edc:impl="0xFF" edc:access="------------------------nnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Base Priority Mask Register" edc:nmmrid="96"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="CONTROL" edc:impl="0x7" edc:access="-----------------------------nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Control Register" edc:nmmrid="100"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="FPSCR" edc:impl="0xFFF79F9F" edc:access="nnnnnnnnnnnn-nnnn--nnnnnn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Status And Control Register" edc:nmmrid="144"/>
      <edc:JoinedSFRDef edc:nzwidth="0x40" edc:cname="D0" edc:impl="0xFFFFFFFFFFFFFFFF" edc:desc="Floating-Point Extension Register">
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S0" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="148"/>
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S1" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="152"/>
      </edc:JoinedSFRDef>
      <edc:JoinedSFRDef edc:nzwidth="0x40" edc:cname="D1" edc:impl="0xFFFFFFFFFFFFFFFF" edc:desc="Floating-Point Extension Register">
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S2" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="156"/>
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S3" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="160"/>
      </edc:JoinedSFRDef>
      <edc:JoinedSFRDef edc:nzwidth="0x40" edc:cname="D2" edc:impl="0xFFFFFFFFFFFFFFFF" edc:desc="Floating-Point Extension Register">
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S4" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="164"/>
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S5" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="168"/>
      </edc:JoinedSFRDef>
      <edc:JoinedSFRDef edc:nzwidth="0x40" edc:cname="D3" edc:impl="0xFFFFFFFFFFFFFFFF" edc:desc="Floating-Point Extension Register">
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S6" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="172"/>
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S7" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="176"/>
      </edc:JoinedSFRDef>
      <edc:JoinedSFRDef edc:nzwidth="0x40" edc:cname="D4" edc:impl="0xFFFFFFFFFFFFFFFF" edc:desc="Floating-Point Extension Register">
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S8" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="180"/>
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S9" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="184"/>
      </edc:JoinedSFRDef>
      <edc:JoinedSFRDef edc:nzwidth="0x40" edc:cname="D5" edc:impl="0xFFFFFFFFFFFFFFFF" edc:desc="Floating-Point Extension Register">
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S10" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="188"/>
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S11" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="192"/>
      </edc:JoinedSFRDef>
      <edc:JoinedSFRDef edc:nzwidth="0x40" edc:cname="D6" edc:impl="0xFFFFFFFFFFFFFFFF" edc:desc="Floating-Point Extension Register">
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S12" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="196"/>
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S13" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="200"/>
      </edc:JoinedSFRDef>
      <edc:JoinedSFRDef edc:nzwidth="0x40" edc:cname="D7" edc:impl="0xFFFFFFFFFFFFFFFF" edc:desc="Floating-Point Extension Register">
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S14" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="204"/>
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S15" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="208"/>
      </edc:JoinedSFRDef>
      <edc:JoinedSFRDef edc:nzwidth="0x40" edc:cname="D8" edc:impl="0xFFFFFFFFFFFFFFFF" edc:desc="Floating-Point Extension Register">
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S16" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="212"/>
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S17" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="216"/>
      </edc:JoinedSFRDef>
      <edc:JoinedSFRDef edc:nzwidth="0x40" edc:cname="D9" edc:impl="0xFFFFFFFFFFFFFFFF" edc:desc="Floating-Point Extension Register">
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S18" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="220"/>
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S19" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="224"/>
      </edc:JoinedSFRDef>
      <edc:JoinedSFRDef edc:nzwidth="0x40" edc:cname="D10" edc:impl="0xFFFFFFFFFFFFFFFF" edc:desc="Floating-Point Extension Register">
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S20" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="228"/>
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S21" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="232"/>
      </edc:JoinedSFRDef>
      <edc:JoinedSFRDef edc:nzwidth="0x40" edc:cname="D11" edc:impl="0xFFFFFFFFFFFFFFFF" edc:desc="Floating-Point Extension Register">
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S22" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="236"/>
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S23" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="240"/>
      </edc:JoinedSFRDef>
      <edc:JoinedSFRDef edc:nzwidth="0x40" edc:cname="D12" edc:impl="0xFFFFFFFFFFFFFFFF" edc:desc="Floating-Point Extension Register">
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S24" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="244"/>
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S25" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="248"/>
      </edc:JoinedSFRDef>
      <edc:JoinedSFRDef edc:nzwidth="0x40" edc:cname="D13" edc:impl="0xFFFFFFFFFFFFFFFF" edc:desc="Floating-Point Extension Register">
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S26" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="252"/>
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S27" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="256"/>
      </edc:JoinedSFRDef>
      <edc:JoinedSFRDef edc:nzwidth="0x40" edc:cname="D14" edc:impl="0xFFFFFFFFFFFFFFFF" edc:desc="Floating-Point Extension Register">
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S28" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="260"/>
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S29" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="264"/>
      </edc:JoinedSFRDef>
      <edc:JoinedSFRDef edc:nzwidth="0x40" edc:cname="D15" edc:impl="0xFFFFFFFFFFFFFFFF" edc:desc="Floating-Point Extension Register">
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S30" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="268"/>
        <edc:SFRDef edc:nzwidth="0x20" edc:cname="S31" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Floating-Point Extension Register" edc:nmmrid="272"/>
      </edc:JoinedSFRDef>
    </edc:NMMRPlace>
    <edc:SFRDataSector edc:regionid="PERIPHERALS" edc:beginaddr="0x40000000" edc:endaddr="0x4A0002CC" edc:rw="rw">
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_MR" edc:nzwidth="0x20" edc:access="------------------------------nn" edc:impl="0x3" edc:_addr="0x40000000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="OPMODE" edc:nzwidth="0x2" edc:desc="FLEXCOM Operating Mode">
              <edc:SFRFieldSemantic edc:cname="NO_COM" edc:desc="No communication" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USART" edc:desc="All UART related protocols are selected (RS232, RS485, IrDA, ISO7816, LIN,) SPI/TWI related registers are not accessible and have no impact on IOs." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SPI" edc:desc="SPI operating mode is selected. USART/TWI related registers are not accessible and have no impact on IOs." edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TWI" edc:desc="All TWI related protocols are selected (TWI, SMBus). USART/SPI related registers are not accessible and have no impact on IOs." edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x40000004"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_RHR" edc:nzwidth="0x20" edc:access="----------------rrrrrrrrrrrrrrrr" edc:impl="0xFFFF" edc:_addr="0x40000010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="RXDATA" edc:nzwidth="0x10" edc:desc="Receive Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x40000014"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_THR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x40000020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TXDATA" edc:nzwidth="0x10" edc:desc="Transmit Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xDC" edc:_addr="0x40000024"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_RPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40000100">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="RXPTR" edc:nzwidth="0x20" edc:desc="Receive Pointer Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_RCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x40000104">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="RXCTR" edc:nzwidth="0x10" edc:desc="Receive Counter Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_TPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40000108">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TXPTR" edc:nzwidth="0x20" edc:desc="Transmit Counter Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_TCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x4000010C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TXCTR" edc:nzwidth="0x10" edc:desc="Transmit Counter Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_RNPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40000110">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="RXNPTR" edc:nzwidth="0x20" edc:desc="Receive Next Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_RNCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x40000114">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="RXNCTR" edc:nzwidth="0x10" edc:desc="Receive Next Counter"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_TNPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40000118">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TXNPTR" edc:nzwidth="0x20" edc:desc="Transmit Next Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_TNCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x4000011C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TXNCTR" edc:nzwidth="0x10" edc:desc="Transmit Counter Next"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_PTCR" edc:nzwidth="0x20" edc:access="-------w----wwww------ww------ww" edc:impl="0x10F0303" edc:_addr="0x40000120">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="RXTEN" edc:nzwidth="0x1" edc:desc="Receiver Transfer Enable"/>
            <edc:SFRFieldDef edc:cname="RXTDIS" edc:nzwidth="0x1" edc:desc="Receiver Transfer Disable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="TXTEN" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Enable"/>
            <edc:SFRFieldDef edc:cname="TXTDIS" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Disable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="RXCBEN" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Enable"/>
            <edc:SFRFieldDef edc:cname="RXCBDIS" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Disable"/>
            <edc:SFRFieldDef edc:cname="TXCBEN" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Enable"/>
            <edc:SFRFieldDef edc:cname="TXCBDIS" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Disable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ERRCLR" edc:nzwidth="0x1" edc:desc="Transfer Bus Error Clear"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_PTSR" edc:nzwidth="0x20" edc:access="-------r-----r-r-------r-------r" edc:impl="0x1050101" edc:_addr="0x40000124">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="RXTEN" edc:nzwidth="0x1" edc:desc="Receiver Transfer Enable"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="TXTEN" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Enable"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="RXCBEN" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXCBEN" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Transfer Bus Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_PWPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:impl="0xFFFFFF07" edc:_addr="0x40000128">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="WPPTREN" edc:nzwidth="0x1" edc:desc="Write Protection Pointer Registers Enable"/>
            <edc:SFRFieldDef edc:cname="WPCTREN" edc:nzwidth="0x1" edc:desc="Write Protection Counter Registers Enable"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:nzwidth="0x1" edc:desc="Write Protection Control Register Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x504443"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xD4" edc:_addr="0x4000012C"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_US_CR" edc:nzwidth="0x20" edc:access="ww-w-www--wwww--wwwwwwwwwwwwww--" edc:impl="0xD73CFFFC" edc:_addr="0x40000200">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RSTRX" edc:nzwidth="0x1" edc:desc="Reset Receiver"/>
            <edc:SFRFieldDef edc:cname="RSTTX" edc:nzwidth="0x1" edc:desc="Reset Transmitter"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
            <edc:SFRFieldDef edc:cname="RXDIS" edc:nzwidth="0x1" edc:desc="Receiver Disable"/>
            <edc:SFRFieldDef edc:cname="TXEN" edc:nzwidth="0x1" edc:desc="Transmitter Enable"/>
            <edc:SFRFieldDef edc:cname="TXDIS" edc:nzwidth="0x1" edc:desc="Transmitter Disable"/>
            <edc:SFRFieldDef edc:cname="RSTSTA" edc:nzwidth="0x1" edc:desc="Reset Status Bits"/>
            <edc:SFRFieldDef edc:cname="STTBRK" edc:nzwidth="0x1" edc:desc="Start Break"/>
            <edc:SFRFieldDef edc:cname="STPBRK" edc:nzwidth="0x1" edc:desc="Stop Break"/>
            <edc:SFRFieldDef edc:cname="STTTO" edc:nzwidth="0x1" edc:desc="Clear TIMEOUT Flag and Start Timeout After Next Character Received"/>
            <edc:SFRFieldDef edc:cname="SENDA" edc:nzwidth="0x1" edc:desc="Send Address"/>
            <edc:SFRFieldDef edc:cname="RSTIT" edc:nzwidth="0x1" edc:desc="Reset Iterations"/>
            <edc:SFRFieldDef edc:cname="RSTNACK" edc:nzwidth="0x1" edc:desc="Reset Non Acknowledge"/>
            <edc:SFRFieldDef edc:cname="RETTO" edc:nzwidth="0x1" edc:desc="Start Timeout Immediately"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RTSEN" edc:nzwidth="0x1" edc:desc="Request to Send Enable"/>
            <edc:SFRFieldDef edc:cname="RTSDIS" edc:nzwidth="0x1" edc:desc="Request to Send Disable"/>
            <edc:SFRFieldDef edc:cname="LINABT" edc:nzwidth="0x1" edc:desc="Abort LIN Transmission"/>
            <edc:SFRFieldDef edc:cname="LINWKUP" edc:nzwidth="0x1" edc:desc="Send LIN Wakeup Signal"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TXFCLR" edc:nzwidth="0x1" edc:desc="Transmit FIFO Clear"/>
            <edc:SFRFieldDef edc:cname="RXFCLR" edc:nzwidth="0x1" edc:desc="Receive FIFO Clear"/>
            <edc:SFRFieldDef edc:cname="TXFLCLR" edc:nzwidth="0x1" edc:desc="Transmit FIFO Lock CLEAR"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="REQCLR" edc:nzwidth="0x1" edc:desc="Request to Clear the Comparison Trigger"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="FIFODIS" edc:nzwidth="0x1" edc:desc="FIFO Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_US_MR" edc:nzwidth="0x20" edc:access="nnnn-nnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:impl="0xF7FFFFFF" edc:_addr="0x40000204">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="USART_MODE" edc:nzwidth="0x4" edc:desc="USART Mode of Operation">
              <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Normal mode" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="USCLKS" edc:nzwidth="0x2" edc:desc="Clock Selection">
              <edc:SFRFieldSemantic edc:cname="MCK" edc:desc="Peripheral clock is selected." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DIV" edc:desc="Peripheral clock divided (DIV=8) is selected." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="PCK" edc:desc="PMC programmable clock (PCK) is selected. If the SCK pin is driven (CLKO = 1), the CD field must be greater than 1." edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SCK" edc:desc="Serial clock (SCK) is selected." edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CHRL" edc:nzwidth="0x2" edc:desc="Character Length">
              <edc:SFRFieldSemantic edc:cname="_5_BIT" edc:desc="Character length is 5 bits." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="_6_BIT" edc:desc="Character length is 6 bits." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_7_BIT" edc:desc="Character length is 7 bits." edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BIT" edc:desc="Character length is 8 bits." edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SYNC" edc:nzwidth="0x1" edc:desc="Synchronous Mode Select"/>
            <edc:SFRFieldDef edc:cname="PAR" edc:nzwidth="0x3" edc:desc="Parity Type">
              <edc:SFRFieldSemantic edc:cname="EVEN" edc:desc="Even parity" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ODD" edc:desc="Odd parity" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SPACE" edc:desc="Parity forced to 0 (Space)" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="MARK" edc:desc="Parity forced to 1 (Mark)" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="NO" edc:desc="No parity" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="MULTIDROP" edc:desc="Multidrop mode" edc:when="(field &amp; 0x7) == 0x06"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NBSTOP" edc:nzwidth="0x2" edc:desc="Number of Stop Bits">
              <edc:SFRFieldSemantic edc:cname="_1_BIT" edc:desc="1 stop bit" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="_1_5_BIT" edc:desc="1.5 stop bit (SYNC = 0) or reserved (SYNC = 1)" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_2_BIT" edc:desc="2 stop bits" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CHMODE" edc:nzwidth="0x2" edc:desc="Channel Mode">
              <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Normal mode" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="AUTOMATIC" edc:desc="Automatic Echo. Receiver input is connected to the TXD pin." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="LOCAL_LOOPBACK" edc:desc="Local Loopback. Transmitter output is connected to the Receiver Input." edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="REMOTE_LOOPBACK" edc:desc="Remote Loopback. RXD pin is internally connected to the TXD pin." edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSBF" edc:nzwidth="0x1" edc:desc="Bit Order"/>
            <edc:SFRFieldDef edc:cname="MODE9" edc:nzwidth="0x1" edc:desc="9-bit Character Length"/>
            <edc:SFRFieldDef edc:cname="CLKO" edc:nzwidth="0x1" edc:desc="Clock Output Select"/>
            <edc:SFRFieldDef edc:cname="OVER" edc:nzwidth="0x1" edc:desc="Oversampling Mode"/>
            <edc:SFRFieldDef edc:cname="OOKRXD" edc:nzwidth="0x1" edc:desc="OOK Demodulation Input Selection"/>
            <edc:SFRFieldDef edc:cname="OOKEN" edc:nzwidth="0x1" edc:desc="OOK Modulation/Demodulation Enabled"/>
            <edc:SFRFieldDef edc:cname="VAR_SYNC" edc:nzwidth="0x1" edc:desc="Variable Synchronization of Command/Data Sync Start Frame Delimiter"/>
            <edc:SFRFieldDef edc:cname="INVDATA" edc:nzwidth="0x1" edc:desc="Inverted Data"/>
            <edc:SFRFieldDef edc:cname="MAX_ITERATION" edc:nzwidth="0x3" edc:desc="Maximum Number of Automatic Iteration"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FILTER" edc:nzwidth="0x1" edc:desc="Receive Line Filter"/>
            <edc:SFRFieldDef edc:cname="MAN" edc:nzwidth="0x1" edc:desc="Manchester Encoder/Decoder Enable"/>
            <edc:SFRFieldDef edc:cname="MODSYNC" edc:nzwidth="0x1" edc:desc="Manchester Synchronization Mode"/>
            <edc:SFRFieldDef edc:cname="ONEBIT" edc:nzwidth="0x1" edc:desc="Start Frame Delimiter Selector"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_US_IER" edc:nzwidth="0x20" edc:access="wwwwwwww-w--w---wwwwwwwwwwwwwwww" edc:impl="0xFF48FFFF" edc:_addr="0x40000208">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="RXRDY Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="TXRDY Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Receiver Break Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Transfer Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FRAME" edc:nzwidth="0x1" edc:desc="Framing Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PARE" edc:nzwidth="0x1" edc:desc="Parity Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TIMEOUT" edc:nzwidth="0x1" edc:desc="Timeout Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="TXEMPTY Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ITER" edc:nzwidth="0x1" edc:desc="Max number of Repetitions Reached Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Buffer Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Buffer Full Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINBK" edc:nzwidth="0x1" edc:desc="LIN Break Sent or LIN Break Received Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINID" edc:nzwidth="0x1" edc:desc="LIN Identifier Sent or LIN Identifier Received Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINTC" edc:nzwidth="0x1" edc:desc="LIN Transfer Completed Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear to Send Input Change Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MANE" edc:nzwidth="0x1" edc:desc="Manchester Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINBE" edc:nzwidth="0x1" edc:desc="LIN Bus Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINISFE" edc:nzwidth="0x1" edc:desc="LIN Inconsistent Synch Field Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINIPE" edc:nzwidth="0x1" edc:desc="LIN Identifier Parity Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINCE" edc:nzwidth="0x1" edc:desc="LIN Checksum Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINSNRE" edc:nzwidth="0x1" edc:desc="LIN Client Not Responding Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINSTE" edc:nzwidth="0x1" edc:desc="LIN Synch Tolerance Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINHTE" edc:nzwidth="0x1" edc:desc="LIN Header Timeout Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_US_IDR" edc:nzwidth="0x20" edc:access="wwwwwwww-w--w---wwwwwwwwwwwwwwww" edc:impl="0xFF48FFFF" edc:_addr="0x4000020C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="RXRDY Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="TXRDY Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Receiver Break Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Transfer Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="FRAME" edc:nzwidth="0x1" edc:desc="Framing Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="PARE" edc:nzwidth="0x1" edc:desc="Parity Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TIMEOUT" edc:nzwidth="0x1" edc:desc="Timeout Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="TXEMPTY Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ITER" edc:nzwidth="0x1" edc:desc="Max Number of Repetitions Reached Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Buffer Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Buffer Full Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINBK" edc:nzwidth="0x1" edc:desc="LIN Break Sent or LIN Break Received Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINID" edc:nzwidth="0x1" edc:desc="LIN Identifier Sent or LIN Identifier Received Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINTC" edc:nzwidth="0x1" edc:desc="LIN Transfer Completed Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear to Send Input Change Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MANE" edc:nzwidth="0x1" edc:desc="Manchester Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINBE" edc:nzwidth="0x1" edc:desc="LIN Bus Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINISFE" edc:nzwidth="0x1" edc:desc="LIN Inconsistent Synch Field Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINIPE" edc:nzwidth="0x1" edc:desc="LIN Identifier Parity Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINCE" edc:nzwidth="0x1" edc:desc="LIN Checksum Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINSNRE" edc:nzwidth="0x1" edc:desc="LIN Client Not Responding Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINSTE" edc:nzwidth="0x1" edc:desc="LIN Synch Tolerance Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINHTE" edc:nzwidth="0x1" edc:desc="LIN Header Timeout Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_US_IMR" edc:nzwidth="0x20" edc:access="rrrrrrrr-r--r---rrrrrrrrrrrrrrrr" edc:impl="0xFF48FFFF" edc:_addr="0x40000210">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="RXRDY Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="TXRDY Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Receiver Break Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Transfer Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="FRAME" edc:nzwidth="0x1" edc:desc="Framing Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="PARE" edc:nzwidth="0x1" edc:desc="Parity Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TIMEOUT" edc:nzwidth="0x1" edc:desc="Timeout Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="TXEMPTY Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ITER" edc:nzwidth="0x1" edc:desc="Max Number of Repetitions Reached Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Buffer Empty Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Buffer Full Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINBK" edc:nzwidth="0x1" edc:desc="LIN Break Sent or LIN Break Received Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINID" edc:nzwidth="0x1" edc:desc="LIN Identifier Sent or LIN Identifier Received Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINTC" edc:nzwidth="0x1" edc:desc="LIN Transfer Completed Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear to Send Input Change Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MANE" edc:nzwidth="0x1" edc:desc="Manchester Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINBE" edc:nzwidth="0x1" edc:desc="LIN Bus Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINISFE" edc:nzwidth="0x1" edc:desc="LIN Inconsistent Synch Field Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINIPE" edc:nzwidth="0x1" edc:desc="LIN Identifier Parity Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINCE" edc:nzwidth="0x1" edc:desc="LIN Checksum Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINSNRE" edc:nzwidth="0x1" edc:desc="LIN Client Not Responding Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINSTE" edc:nzwidth="0x1" edc:desc="LIN Synch Tolerance Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINHTE" edc:nzwidth="0x1" edc:desc="LIN Header Timeout Error Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_US_CSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrr--r---rrrrrrrrrrrrrrrr" edc:impl="0xFFC8FFFF" edc:_addr="0x40000214">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="Receiver Ready (cleared by reading FLEX_US_RHR)"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="Transmitter Ready (cleared by writing FLEX_US_THR)"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received/End of Break"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of RX Buffer (cleared by writing FLEX_US_RCR or FLEX_US_RNCR)"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of TX Buffer (cleared by writing FLEX_US_TCR or FLEX_US_TNCR)"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error"/>
            <edc:SFRFieldDef edc:cname="FRAME" edc:nzwidth="0x1" edc:desc="Framing Error"/>
            <edc:SFRFieldDef edc:cname="PARE" edc:nzwidth="0x1" edc:desc="Parity Error"/>
            <edc:SFRFieldDef edc:cname="TIMEOUT" edc:nzwidth="0x1" edc:desc="Receiver Timeout"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="Transmitter Empty (cleared by writing FLEX_US_THR)"/>
            <edc:SFRFieldDef edc:cname="ITER" edc:nzwidth="0x1" edc:desc="Max Number of Repetitions Reached"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="TX Buffer Empty (cleared by writing FLEX_US_TCR or FLEX_US_TNCR)"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="RX Buffer Full (cleared by writing FLEX_US_RCR or FLEX_US_RNCR)"/>
            <edc:SFRFieldDef edc:cname="LINBK" edc:nzwidth="0x1" edc:desc="LIN Break Sent or LIN Break Received"/>
            <edc:SFRFieldDef edc:cname="LINID" edc:nzwidth="0x1" edc:desc="LIN Identifier Sent or LIN Identifier Received"/>
            <edc:SFRFieldDef edc:cname="LINTC" edc:nzwidth="0x1" edc:desc="LIN Transfer Completed"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear to Send Input Change Flag"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Status"/>
            <edc:SFRFieldDef edc:cname="LINBLS" edc:nzwidth="0x1" edc:desc="LIN Bus Line Status"/>
            <edc:SFRFieldDef edc:cname="MANE" edc:nzwidth="0x1" edc:desc="Manchester Error"/>
            <edc:SFRFieldDef edc:cname="LINBE" edc:nzwidth="0x1" edc:desc="LIN Bit Error"/>
            <edc:SFRFieldDef edc:cname="LINISFE" edc:nzwidth="0x1" edc:desc="LIN Inconsistent Synch Field Error"/>
            <edc:SFRFieldDef edc:cname="LINIPE" edc:nzwidth="0x1" edc:desc="LIN Identifier Parity Error"/>
            <edc:SFRFieldDef edc:cname="LINCE" edc:nzwidth="0x1" edc:desc="LIN Checksum Error"/>
            <edc:SFRFieldDef edc:cname="LINSNRE" edc:nzwidth="0x1" edc:desc="LIN Client Not Responding Error"/>
            <edc:SFRFieldDef edc:cname="LINSTE" edc:nzwidth="0x1" edc:desc="LIN Synch Tolerance Error"/>
            <edc:SFRFieldDef edc:cname="LINHTE" edc:nzwidth="0x1" edc:desc="LIN Header Timeout Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_US_RHR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40000218">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="RXCHR0" edc:nzwidth="0x8" edc:desc="Received Characters"/>
            <edc:SFRFieldDef edc:cname="RXCHR1" edc:nzwidth="0x8" edc:desc="Received Characters"/>
            <edc:AdjustPoint edc:offset="-1"/>
            <edc:SFRFieldDef edc:cname="RXSYNH" edc:nzwidth="0x1" edc:desc="Received Sync"/>
            <edc:SFRFieldDef edc:cname="RXCHR2" edc:nzwidth="0x8" edc:desc="Received Characters"/>
            <edc:SFRFieldDef edc:cname="RXCHR3" edc:nzwidth="0x8" edc:desc="Received Characters"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_US_THR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4000021C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TXCHR0" edc:nzwidth="0x8" edc:desc="Character to be Transmitted"/>
            <edc:SFRFieldDef edc:cname="TXCHR1" edc:nzwidth="0x8" edc:desc="Character to be Transmitted"/>
            <edc:AdjustPoint edc:offset="-1"/>
            <edc:SFRFieldDef edc:cname="TXSYNH" edc:nzwidth="0x1" edc:desc="Sync Field to be Transmitted"/>
            <edc:SFRFieldDef edc:cname="TXCHR2" edc:nzwidth="0x8" edc:desc="Character to be Transmitted"/>
            <edc:SFRFieldDef edc:cname="TXCHR3" edc:nzwidth="0x8" edc:desc="Character to be Transmitted"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_US_BRGR" edc:nzwidth="0x20" edc:access="-------------nnnnnnnnnnnnnnnnnnn" edc:impl="0x7FFFF" edc:_addr="0x40000220">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="CD" edc:nzwidth="0x10" edc:desc="Clock Divider"/>
            <edc:SFRFieldDef edc:cname="FP" edc:nzwidth="0x3" edc:desc="Fractional Part"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_US_RTOR" edc:nzwidth="0x20" edc:access="---------------nnnnnnnnnnnnnnnnn" edc:impl="0x1FFFF" edc:_addr="0x40000224">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TO" edc:nzwidth="0x11" edc:desc="Timeout Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_US_TTGR" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:impl="0xFF" edc:_addr="0x40000228">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TG" edc:nzwidth="0x8" edc:desc="Timeguard Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x14" edc:_addr="0x4000022C"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_US_FIDI" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x40000240">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="FI_DI_RATIO" edc:nzwidth="0x10" edc:desc="FI Over DI Ratio Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_US_NER" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:impl="0xFF" edc:_addr="0x40000244">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="NB_ERRORS" edc:nzwidth="0x8" edc:desc="Number of Errors"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x40000248"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_US_IF" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:impl="0xFF" edc:_addr="0x4000024C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="IRDA_FILTER" edc:nzwidth="0x8" edc:desc="IrDA Filter"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_US_MAN" edc:nzwidth="0x20" edc:access="nnnn--nn----nnnn---n--nn----nnnn" edc:impl="0xF30F130F" edc:_addr="0x40000250">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TX_PL" edc:nzwidth="0x4" edc:desc="Transmitter Preamble Length"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TX_PP" edc:nzwidth="0x2" edc:desc="Transmitter Preamble Pattern">
              <edc:SFRFieldSemantic edc:cname="ALL_ONE" edc:desc="The preamble is composed of '1's" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ALL_ZERO" edc:desc="The preamble is composed of '0's" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ZERO_ONE" edc:desc="The preamble is composed of '01's" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="ONE_ZERO" edc:desc="The preamble is composed of '10's" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TX_MPOL" edc:nzwidth="0x1" edc:desc="Transmitter Manchester Polarity"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RX_PL" edc:nzwidth="0x4" edc:desc="Receiver Preamble Length"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="RX_PP" edc:nzwidth="0x2" edc:desc="Receiver Preamble Pattern detected">
              <edc:SFRFieldSemantic edc:cname="ALL_ONE" edc:desc="The preamble is composed of '1's" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ALL_ZERO" edc:desc="The preamble is composed of '0's" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ZERO_ONE" edc:desc="The preamble is composed of '01's" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="ONE_ZERO" edc:desc="The preamble is composed of '10's" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RX_MPOL" edc:nzwidth="0x1" edc:desc="Receiver Manchester Polarity"/>
            <edc:SFRFieldDef edc:cname="ONE" edc:nzwidth="0x1" edc:desc="Must Be Set to 1"/>
            <edc:SFRFieldDef edc:cname="DRIFT" edc:nzwidth="0x1" edc:desc="Drift Compensation"/>
            <edc:SFRFieldDef edc:cname="RXIDLEV" edc:nzwidth="0x1" edc:desc="Receiver Idle Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_US_LINMR" edc:nzwidth="0x20" edc:access="--------------nnnnnnnnnnnnnnnnnn" edc:impl="0x3FFFF" edc:_addr="0x40000254">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="NACT" edc:nzwidth="0x2" edc:desc="LIN Node Action">
              <edc:SFRFieldSemantic edc:cname="PUBLISH" edc:desc="The USART transmits the response." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SUBSCRIBE" edc:desc="The USART receives the response." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="IGNORE" edc:desc="The USART does not transmit and does not receive the response." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PARDIS" edc:nzwidth="0x1" edc:desc="Parity Disable"/>
            <edc:SFRFieldDef edc:cname="CHKDIS" edc:nzwidth="0x1" edc:desc="Checksum Disable"/>
            <edc:SFRFieldDef edc:cname="CHKTYP" edc:nzwidth="0x1" edc:desc="Checksum Type"/>
            <edc:SFRFieldDef edc:cname="DLM" edc:nzwidth="0x1" edc:desc="Data Length Mode"/>
            <edc:SFRFieldDef edc:cname="FSDIS" edc:nzwidth="0x1" edc:desc="Frame Slot Mode Disable"/>
            <edc:SFRFieldDef edc:cname="WKUPTYP" edc:nzwidth="0x1" edc:desc="Wakeup Signal Type"/>
            <edc:SFRFieldDef edc:cname="DLC" edc:nzwidth="0x8" edc:desc="Data Length Control"/>
            <edc:SFRFieldDef edc:cname="PDCM" edc:nzwidth="0x1" edc:desc="PDC Mode"/>
            <edc:SFRFieldDef edc:cname="SYNCDIS" edc:nzwidth="0x1" edc:desc="Synchronization Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_US_LINIR" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:impl="0xFF" edc:_addr="0x40000258">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="IDCHR" edc:nzwidth="0x8" edc:desc="Identifier Character"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_US_LINBRR" edc:nzwidth="0x20" edc:access="-------------rrrrrrrrrrrrrrrrrrr" edc:impl="0x7FFFF" edc:_addr="0x4000025C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="LINCD" edc:nzwidth="0x10" edc:desc="Clock Divider after Synchronization"/>
            <edc:SFRFieldDef edc:cname="LINFP" edc:nzwidth="0x3" edc:desc="Fractional Part after Synchronization"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x30" edc:_addr="0x40000260"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_US_CMPR" edc:nzwidth="0x20" edc:access="-------nnnnnnnnn-nnn---nnnnnnnnn" edc:impl="0x1FF71FF" edc:_addr="0x40000290">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="VAL1" edc:nzwidth="0x9" edc:desc="First Comparison Value for Received Character"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CMPMODE" edc:nzwidth="0x2" edc:desc="Comparison Mode">
              <edc:SFRFieldSemantic edc:cname="FLAG_ONLY" edc:desc="Any character is received and comparison function drives CMP flag." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="START_CONDITION" edc:desc="Comparison condition must be met to start reception." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FILTER" edc:desc="Comparison must be met to receive the current data only" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMPPAR" edc:nzwidth="0x1" edc:desc="Compare Parity"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="VAL2" edc:nzwidth="0x9" edc:desc="Second Comparison Value for Received Character"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x40000294"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_US_FMR" edc:nzwidth="0x20" edc:access="--nnnnnn--nnnnnn--nnnnnnn-nn--nn" edc:impl="0x3F3F3FB3" edc:_addr="0x400002A0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TXRDYM" edc:nzwidth="0x2" edc:desc="Transmitter Ready Mode">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="TXRDY will be at level '1' when at least one data can be written in the transmit FIFO. When DMA is enabled to transfer data and FLEX_US_MR.MODE9=0 (up to 8 bits to transfer on the line), the chunk of 1 byte must be configured in the DMA. If the transfer is performed by software, the access type must be defined as a byte." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="TXRDY will be at level '1' when at least two data can be written in the transmit FIFO. To minimize system bus load, when DMA is enabled to transfer data and FLEX_US_MR.MODE9=0 (up to 8 bits to transfer on the line), the chunk of 1 halfword (1 halfword carries 2 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 2 accesses) or halfword (2 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="TXRDY will be at level '1' when at least four data can be written in the transmit FIFO. To minimize system bus load, when DMA is enabled to transfer data and FLEX_US_MR.MODE9=0 (up to 8 bits to transfer on the line), the chunk of 1 word (1 word carries 4 bytes) must be configured in the DMA (chunk size=1 and word access). If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 4 accesses), halfword (2 bytes per access, 2 accesses) or word (4 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXRDYM" edc:nzwidth="0x2" edc:desc="Receiver Ready Mode">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="RXRDY will be at level '1' when at least one unread data is in the receive FIFO. When DMA is enabled to transfer data and FLEX_US_MR.MODE9=0 (up to 8 bits to transfer on the line), the chunk of 1 byte must be configured in the DMA. If the transfer is performed by software, the access type must be defined as a byte." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="RXRDY will be at level '1' when at least two unread data are in the receive FIFO. To minimize system bus load, when DMA is enabled to transfer data and FLEX_US_MR.MODE9=0 (up to 8 bits to transfer on the line), the chunk of 1 halfword (1 halfword carries 2 bytes) must be configured in the DMA (chunk size=1 and halfword access). If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 2 accesses) or halfword (2 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="RXRDY will be at level '1' when at least four unread data are in the receive FIFO. To minimize system bus load, when DMA is enabled to transfer data and FLEX_US_MR.MODE9=0 (up to 8 bits to transfer on the line), the chunk of 1 word (1 word carries 4 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 4 accesses), halfword (2 bytes per access, 2 accesses) or word (4 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FRTSC" edc:nzwidth="0x1" edc:desc="FIFO RTS Pin Control enable (Hardware Handshaking mode only)"/>
            <edc:SFRFieldDef edc:cname="TXFTHRES" edc:nzwidth="0x6" edc:desc="Transmit FIFO Threshold"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXFTHRES" edc:nzwidth="0x6" edc:desc="Receive FIFO Threshold"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXFTHRES2" edc:nzwidth="0x6" edc:desc="Receive FIFO Threshold 2"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_US_FLR" edc:nzwidth="0x20" edc:access="----------rrrrrr----------rrrrrr" edc:impl="0x3F003F" edc:_addr="0x400002A4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TXFL" edc:nzwidth="0x6" edc:desc="Transmit FIFO Level"/>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="RXFL" edc:nzwidth="0x6" edc:desc="Receive FIFO Level"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_US_FIER" edc:nzwidth="0x20" edc:access="----------------------w-wwwwwwww" edc:impl="0x2FF" edc:_addr="0x400002A8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF2" edc:nzwidth="0x1" edc:desc="RXFTHF2 Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_US_FIDR" edc:nzwidth="0x20" edc:access="----------------------w-wwwwwwww" edc:impl="0x2FF" edc:_addr="0x400002AC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF2" edc:nzwidth="0x1" edc:desc="RXFTHF2 Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_US_FIMR" edc:nzwidth="0x20" edc:access="----------------------r-rrrrrrrr" edc:impl="0x2FF" edc:_addr="0x400002B0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF2" edc:nzwidth="0x1" edc:desc="RXFTHF2 Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_US_FESR" edc:nzwidth="0x20" edc:access="----------------------rrrrrrrrrr" edc:impl="0x3FF" edc:_addr="0x400002B4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Empty Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Full Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Threshold Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="Receive FIFO Empty Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="Receive FIFO Full Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="Receive FIFO Threshold Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Pointer Error Flag"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="Receive FIFO Pointer Error Flag"/>
            <edc:SFRFieldDef edc:cname="TXFLOCK" edc:nzwidth="0x1" edc:desc="Transmit FIFO Lock"/>
            <edc:SFRFieldDef edc:cname="RXFTHF2" edc:nzwidth="0x1" edc:desc="Receive FIFO Threshold Flag 2 (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2C" edc:_addr="0x400002B8"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_US_WPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:impl="0xFFFFFF07" edc:_addr="0x400002E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="WPEN" edc:nzwidth="0x1" edc:desc="Write Protection Enable"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:nzwidth="0x1" edc:desc="Write Protection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:nzwidth="0x1" edc:desc="Write Protection Control Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of bits WPEN, WPITEN and WPCREN. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x555341"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_US_WPSR" edc:nzwidth="0x20" edc:access="--------rrrrrrrrrrrrrrrr-------r" edc:impl="0xFFFF01" edc:_addr="0x400002E8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="WPVS" edc:nzwidth="0x1" edc:desc="Write Protection Violation Status"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:nzwidth="0x10" edc:desc="Write Protection Violation Source"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x114" edc:_addr="0x400002EC"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_SPI_CR" edc:nzwidth="0x20" edc:access="ww-----w------ww---w----w-----ww" edc:impl="0xC1031083" edc:_addr="0x40000400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="SPIEN" edc:nzwidth="0x1" edc:desc="SPI Enable"/>
            <edc:SFRFieldDef edc:cname="SPIDIS" edc:nzwidth="0x1" edc:desc="SPI Disable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="SPI Software Reset"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="REQCLR" edc:nzwidth="0x1" edc:desc="Request to Clear the Comparison Trigger"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="TXFCLR" edc:nzwidth="0x1" edc:desc="Transmit FIFO Clear"/>
            <edc:SFRFieldDef edc:cname="RXFCLR" edc:nzwidth="0x1" edc:desc="Receive FIFO Clear"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="LASTXFER" edc:nzwidth="0x1" edc:desc="Last Transfer"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="FIFODIS" edc:nzwidth="0x1" edc:desc="FIFO Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_SPI_MR" edc:nzwidth="0x20" edc:access="nnnnnnnn------nn---n----n-nnnnnn" edc:impl="0xFF0310BF" edc:_addr="0x40000404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="MSTR" edc:nzwidth="0x1" edc:desc="Host/Client Mode"/>
            <edc:SFRFieldDef edc:cname="PS" edc:nzwidth="0x1" edc:desc="Peripheral Select"/>
            <edc:SFRFieldDef edc:cname="PCSDEC" edc:nzwidth="0x1" edc:desc="Chip Select Decode"/>
            <edc:SFRFieldDef edc:cname="BRSRCCLK" edc:nzwidth="0x1" edc:desc="Bit Rate Source Clock">
              <edc:SFRFieldSemantic edc:cname="PERIPH_CLK" edc:desc="The peripheral clock is the source clock for the bit rate generation." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="GCLK is the source clock for the bit rate generation, thus the bit rate can be independent of the core/peripheral clock." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MODFDIS" edc:nzwidth="0x1" edc:desc="Mode Fault Detection"/>
            <edc:SFRFieldDef edc:cname="WDRBT" edc:nzwidth="0x1" edc:desc="Wait Data Read Before Transfer"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LLB" edc:nzwidth="0x1" edc:desc="Local Loopback Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CMPMODE" edc:nzwidth="0x1" edc:desc="Comparison Mode">
              <edc:SFRFieldSemantic edc:cname="FLAG_ONLY" edc:desc="Any character is received and comparison function drives CMP flag." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="START_CONDITION" edc:desc="Comparison condition must be met to start reception of all incoming characters until REQCLR is set." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PCS" edc:nzwidth="0x2" edc:desc="Peripheral Chip Select"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="DLYBCS" edc:nzwidth="0x8" edc:desc="Delay Between Chip Selects"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_SPI_RDR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40000408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="RD0" edc:nzwidth="0x10" edc:desc="Receive Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="RD1" edc:nzwidth="0x8" edc:desc="Receive Data"/>
            <edc:SFRFieldDef edc:cname="RD1" edc:nzwidth="0x10" edc:desc="Receive Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="RD3" edc:nzwidth="0x8" edc:desc="Receive Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_SPI_TDR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4000040C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TD0" edc:nzwidth="0x10" edc:desc="Transmit Data"/>
            <edc:SFRFieldDef edc:cname="TD1" edc:nzwidth="0x10" edc:desc="Transmit Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="LASTXFER" edc:nzwidth="0x1" edc:desc="Last Transfer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_SPI_SR" edc:nzwidth="0x20" edc:access="rrrrrrrr-------r---rrrrrrrrrrrrr" edc:impl="0xFF011FFF" edc:_addr="0x40000410">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="RDRF" edc:nzwidth="0x1" edc:desc="Receive Data Register Full (cleared by reading FLEX_SPI_RDR)"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:nzwidth="0x1" edc:desc="Transmit Data Register Empty (cleared by writing FLEX_SPI_TDR)"/>
            <edc:SFRFieldDef edc:cname="MODF" edc:nzwidth="0x1" edc:desc="Mode Fault Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:nzwidth="0x1" edc:desc="Overrun Error Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of RX Buffer (cleared by writing FLEX_SPI_RCR or FLEX_SPI_RNCR)"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of TX Buffer (cleared by writing FLEX_SPI_TCR or FLEX_SPI_TNCR)"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="RX Buffer Full (cleared by writing FLEX_SPI_RCR or FLEX_SPI_RNCR)"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="TX Buffer Empty (cleared by writing FLEX_SPI_TCR or FLEX_SPI_TNCR)"/>
            <edc:SFRFieldDef edc:cname="NSSR" edc:nzwidth="0x1" edc:desc="NSS Rising (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="Transmission Registers Empty (cleared by writing FLEX_SPI_TDR)"/>
            <edc:SFRFieldDef edc:cname="UNDES" edc:nzwidth="0x1" edc:desc="Underrun Error Status (Client mode only) (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SFERR" edc:nzwidth="0x1" edc:desc="Client Mode Frame Error (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SPIENS" edc:nzwidth="0x1" edc:desc="SPI Enable Status"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Empty Flag (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Full Flag (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Threshold Flag (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="Receive FIFO Empty Flag"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="Receive FIFO Full Flag"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="Receive FIFO Threshold Flag"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Pointer Error Flag"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="Receive FIFO Pointer Error Flag"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_SPI_IER" edc:nzwidth="0x20" edc:access="wwwwwwww-----------wwwwwwwwwwwww" edc:impl="0xFF001FFF" edc:_addr="0x40000414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="RDRF" edc:nzwidth="0x1" edc:desc="Receive Data Register Full Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:nzwidth="0x1" edc:desc="SPI Transmit Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MODF" edc:nzwidth="0x1" edc:desc="Mode Fault Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="NSSR" edc:nzwidth="0x1" edc:desc="NSS Rising Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="Transmission Registers Empty Enable"/>
            <edc:SFRFieldDef edc:cname="UNDES" edc:nzwidth="0x1" edc:desc="Underrun Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SFERR" edc:nzwidth="0x1" edc:desc="Client Mode Frame Error Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0xB"/>
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_SPI_IDR" edc:nzwidth="0x20" edc:access="wwwwwwww-----------wwwwwwwwwwwww" edc:impl="0xFF001FFF" edc:_addr="0x40000418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="RDRF" edc:nzwidth="0x1" edc:desc="Receive Data Register Full Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:nzwidth="0x1" edc:desc="SPI Transmit Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="MODF" edc:nzwidth="0x1" edc:desc="Mode Fault Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="NSSR" edc:nzwidth="0x1" edc:desc="NSS Rising Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="Transmission Registers Empty Disable"/>
            <edc:SFRFieldDef edc:cname="UNDES" edc:nzwidth="0x1" edc:desc="Underrun Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SFERR" edc:nzwidth="0x1" edc:desc="Client Mode Frame Error Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0xB"/>
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_SPI_IMR" edc:nzwidth="0x20" edc:access="rrrrrrrr-----------rrrrrrrrrrrrr" edc:impl="0xFF001FFF" edc:_addr="0x4000041C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="RDRF" edc:nzwidth="0x1" edc:desc="Receive Data Register Full Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:nzwidth="0x1" edc:desc="SPI Transmit Data Register Empty Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="MODF" edc:nzwidth="0x1" edc:desc="Mode Fault Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="NSSR" edc:nzwidth="0x1" edc:desc="NSS Rising Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="Transmission Registers Empty Mask"/>
            <edc:SFRFieldDef edc:cname="UNDES" edc:nzwidth="0x1" edc:desc="Underrun Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="SFERR" edc:nzwidth="0x1" edc:desc="Client Mode Frame Error Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0xB"/>
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x10" edc:_addr="0x40000420"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_SPI_CSR0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40000430">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity"/>
            <edc:SFRFieldDef edc:cname="NCPHA" edc:nzwidth="0x1" edc:desc="Clock Phase"/>
            <edc:SFRFieldDef edc:cname="CSNAAT" edc:nzwidth="0x1" edc:desc="Chip Select Not Active After Transfer (Ignored if CSAAT = 1)"/>
            <edc:SFRFieldDef edc:cname="CSAAT" edc:nzwidth="0x1" edc:desc="Chip Select Active After Transfer"/>
            <edc:SFRFieldDef edc:cname="BITS" edc:nzwidth="0x4" edc:desc="Bits Per Transfer">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits for transfer" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits for transfer" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="10_BIT" edc:desc="10 bits for transfer" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="11_BIT" edc:desc="11 bits for transfer" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="12_BIT" edc:desc="12 bits for transfer" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="13 bits for transfer" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="14_BIT" edc:desc="14 bits for transfer" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="15_BIT" edc:desc="15 bits for transfer" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="16_BIT" edc:desc="16 bits for transfer" edc:when="(field &amp; 0xF) == 0x08"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCBR" edc:nzwidth="0x8" edc:desc="Serial Clock Bit Rate"/>
            <edc:SFRFieldDef edc:cname="DLYBS" edc:nzwidth="0x8" edc:desc="Delay Before SPCK"/>
            <edc:SFRFieldDef edc:cname="DLYBCT" edc:nzwidth="0x8" edc:desc="Delay Between Consecutive Transfers"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_SPI_CSR1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40000434">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity"/>
            <edc:SFRFieldDef edc:cname="NCPHA" edc:nzwidth="0x1" edc:desc="Clock Phase"/>
            <edc:SFRFieldDef edc:cname="CSNAAT" edc:nzwidth="0x1" edc:desc="Chip Select Not Active After Transfer (Ignored if CSAAT = 1)"/>
            <edc:SFRFieldDef edc:cname="CSAAT" edc:nzwidth="0x1" edc:desc="Chip Select Active After Transfer"/>
            <edc:SFRFieldDef edc:cname="BITS" edc:nzwidth="0x4" edc:desc="Bits Per Transfer">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits for transfer" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits for transfer" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="10_BIT" edc:desc="10 bits for transfer" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="11_BIT" edc:desc="11 bits for transfer" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="12_BIT" edc:desc="12 bits for transfer" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="13 bits for transfer" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="14_BIT" edc:desc="14 bits for transfer" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="15_BIT" edc:desc="15 bits for transfer" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="16_BIT" edc:desc="16 bits for transfer" edc:when="(field &amp; 0xF) == 0x08"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCBR" edc:nzwidth="0x8" edc:desc="Serial Clock Bit Rate"/>
            <edc:SFRFieldDef edc:cname="DLYBS" edc:nzwidth="0x8" edc:desc="Delay Before SPCK"/>
            <edc:SFRFieldDef edc:cname="DLYBCT" edc:nzwidth="0x8" edc:desc="Delay Between Consecutive Transfers"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x40000438"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_SPI_FMR" edc:nzwidth="0x20" edc:access="--nnnnnn--nnnnnn----------nn--nn" edc:impl="0x3F3F0033" edc:_addr="0x40000440">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TXRDYM" edc:nzwidth="0x2" edc:desc="Transmit Data Register Empty Mode">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="TDRE will be at level '1' when at least one data can be written in the transmit FIFO. When DMA is enabled to transfer data, the chunk of 1 data (byte or halfword) must be configured in the DMA depending on FLEX_SPI_CSR0.BITS. If the transfer is performed by software, the access type (byte, halfword) must be defined depending on FLEX_SPI_CSR0.BITS." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="TDRE will be at level '1' when at least two data can be written in the transmit FIFO. FIFO. To minimize system bus load, when DMA is enabled to transfer data, the chunk of 1 word (1 word carries 2 data) must be configured in the DMA. If the transfer is performed by software, the access type must be defined as word (2 data per access, 1 access)." edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXRDYM" edc:nzwidth="0x2" edc:desc="Receive Data Register Full Mode">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="RDRF will be at level '1' when at least one unread data is in the receive FIFO. When DMA is enabled to transfer data and FLEX_SPI_CSR0.BITS=0 (8 bits transfered on SPI line), the chunk of 1 byte must be configured in the DMA. When FLEX_SPI_CSR0.BITS&gt;0 (9 to 16 bits transfered on SPI line), the chunk of 1 halfword must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte or halfword depending on FLEX_SPI_CSR0.BITS." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="RDRF will be at level '1' when at least two unread data are in the receive FIFO. To minimize system bus load, when DMA is enabled to transfer data and FLEX_SPI_CSR0.BITS=0 (8 bits transfered on SPI line), the chunk of 1 halfword (1 halfword carries 2 bytes) must be configured in the DMA. When FLEX_SPI_CSR0.BITS&gt;0 (9 to 16 bits transfered on SPI line), the chunk of 1 word (1 word carries 2 halfwords) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as halfword (2 bytes per access, 1 access when FLEX_SPI_CSR0.BITS=0), or word (2 halfwords per access, 2 accesses when FLEX_SPI_CSR0.BITS&gt;0)." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="RDRF will be at level '1' when at least four unread data are in the receive FIFO. To minimize system bus load, when DMA is enabled to transfer data and FLEX_SPI_CSR0.BITS=0 (8 bits transfered on SPI line), the chunk of 1 word (1 halfword carries 4 bytes) must be configured in the DMA. When FLEX_SPI_CSR0.BITS&gt;0 (9 to 16 bits transfered on SPI line), the chunk of 2 words (1 word carries 4 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as word (4 bytes per access, 1 access when FLEX_SPI_CSR0.BITS=0 or 2 halfwords per access, 2 accesses when FLEX_SPI_CSR0.BITS&gt;0)." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="TXFTHRES" edc:nzwidth="0x6" edc:desc="Transmit FIFO Threshold"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXFTHRES" edc:nzwidth="0x6" edc:desc="Receive FIFO Threshold"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_SPI_FLR" edc:nzwidth="0x20" edc:access="----------rrrrrr----------rrrrrr" edc:impl="0x3F003F" edc:_addr="0x40000444">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TXFL" edc:nzwidth="0x6" edc:desc="Transmit FIFO Level"/>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="RXFL" edc:nzwidth="0x6" edc:desc="Receive FIFO Level"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_SPI_CMPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40000448">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="VAL1" edc:nzwidth="0x10" edc:desc="First Comparison Value for Received Character"/>
            <edc:SFRFieldDef edc:cname="VAL2" edc:nzwidth="0x10" edc:desc="Second Comparison Value for Received Character"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x98" edc:_addr="0x4000044C"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_SPI_WPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:impl="0xFFFFFF07" edc:_addr="0x400004E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="WPEN" edc:nzwidth="0x1" edc:desc="Write Protection Enable"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:nzwidth="0x1" edc:desc="Write Protection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:nzwidth="0x1" edc:desc="Write Protection Control Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of bits WPEN, WPITEN and WPCREN. Always reads as 0" edc:when="(field &amp; 0xFFFFFF) == 0x535049"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_SPI_WPSR" edc:nzwidth="0x20" edc:access="----------------rrrrrrrr-------r" edc:impl="0xFF01" edc:_addr="0x400004E8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="WPVS" edc:nzwidth="0x1" edc:desc="Write Protection Violation Status"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:nzwidth="0x8" edc:desc="Write Protection Violation Source"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x114" edc:_addr="0x400004EC"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_TWI_CR" edc:nzwidth="0x20" edc:access="--ww-www------wwwwwwwwwwwwwwwwww" edc:impl="0x3703FFFF" edc:_addr="0x40000600">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="START" edc:nzwidth="0x1" edc:desc="Send a START Condition"/>
            <edc:SFRFieldDef edc:cname="STOP" edc:nzwidth="0x1" edc:desc="Send a STOP Condition"/>
            <edc:SFRFieldDef edc:cname="MSEN" edc:nzwidth="0x1" edc:desc="TWI Host Mode Enabled"/>
            <edc:SFRFieldDef edc:cname="MSDIS" edc:nzwidth="0x1" edc:desc="TWI Host Mode Disabled"/>
            <edc:SFRFieldDef edc:cname="SVEN" edc:nzwidth="0x1" edc:desc="TWI Client Mode Enabled"/>
            <edc:SFRFieldDef edc:cname="SVDIS" edc:nzwidth="0x1" edc:desc="TWI Client Mode Disabled"/>
            <edc:SFRFieldDef edc:cname="QUICK" edc:nzwidth="0x1" edc:desc="SMBus Quick Command"/>
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="HSEN" edc:nzwidth="0x1" edc:desc="TWI High-Speed Mode Enabled"/>
            <edc:SFRFieldDef edc:cname="HSDIS" edc:nzwidth="0x1" edc:desc="TWI High-Speed Mode Disabled"/>
            <edc:SFRFieldDef edc:cname="SMBEN" edc:nzwidth="0x1" edc:desc="SMBus Mode Enabled"/>
            <edc:SFRFieldDef edc:cname="SMBDIS" edc:nzwidth="0x1" edc:desc="SMBus Mode Disabled"/>
            <edc:SFRFieldDef edc:cname="PECEN" edc:nzwidth="0x1" edc:desc="Packet Error Checking Enable"/>
            <edc:SFRFieldDef edc:cname="PECDIS" edc:nzwidth="0x1" edc:desc="Packet Error Checking Disable"/>
            <edc:SFRFieldDef edc:cname="PECRQ" edc:nzwidth="0x1" edc:desc="PEC Request"/>
            <edc:SFRFieldDef edc:cname="CLEAR" edc:nzwidth="0x1" edc:desc="Bus CLEAR Command"/>
            <edc:SFRFieldDef edc:cname="ACMEN" edc:nzwidth="0x1" edc:desc="Alternative Command Mode Enable"/>
            <edc:SFRFieldDef edc:cname="ACMDIS" edc:nzwidth="0x1" edc:desc="Alternative Command Mode Disable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="TXFCLR" edc:nzwidth="0x1" edc:desc="Transmit FIFO Clear"/>
            <edc:SFRFieldDef edc:cname="RXFCLR" edc:nzwidth="0x1" edc:desc="Receive FIFO Clear"/>
            <edc:SFRFieldDef edc:cname="TXFLCLR" edc:nzwidth="0x1" edc:desc="Transmit FIFO Lock CLEAR"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="FIFODIS" edc:nzwidth="0x1" edc:desc="FIFO Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_TWI_MMR" edc:nzwidth="0x20" edc:access="-------n-nnnnnnn-nnn--nn--------" edc:impl="0x17F7300" edc:_addr="0x40000604">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="IADRSZ" edc:nzwidth="0x2" edc:desc="Internal Device Address Size">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No internal device address" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="1_BYTE" edc:desc="One-byte internal device address" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="2_BYTE" edc:desc="Two-byte internal device address" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="3_BYTE" edc:desc="Three-byte internal device address" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MREAD" edc:nzwidth="0x1" edc:desc="Host Read Direction"/>
            <edc:SFRFieldDef edc:cname="SCLRBL" edc:nzwidth="0x2" edc:desc="SCL Rise Boost Level"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DADR" edc:nzwidth="0x7" edc:desc="Device Address"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NOAP" edc:nzwidth="0x1" edc:desc="No Auto-Stop On NACK Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_TWI_SMR" edc:nzwidth="0x20" edc:access="nnnn-----nnnnnnn-nnnnnnnnnnnnn-n" edc:impl="0xF07F7FFD" edc:_addr="0x40000608">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="NACKEN" edc:nzwidth="0x1" edc:desc="Client Receiver Data Phase NACK Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SMDA" edc:nzwidth="0x1" edc:desc="SMBus Default Address"/>
            <edc:SFRFieldDef edc:cname="SMHH" edc:nzwidth="0x1" edc:desc="SMBus Host Header"/>
            <edc:SFRFieldDef edc:cname="SADAT" edc:nzwidth="0x1" edc:desc="Client Address Treated as Data"/>
            <edc:SFRFieldDef edc:cname="BSEL" edc:nzwidth="0x1" edc:desc="TWI Bus Selection"/>
            <edc:SFRFieldDef edc:cname="SCLWSDIS" edc:nzwidth="0x1" edc:desc="Clock Wait State Disable"/>
            <edc:SFRFieldDef edc:cname="SNIFF" edc:nzwidth="0x1" edc:desc="Client Sniffer Mode"/>
            <edc:SFRFieldDef edc:cname="MASK" edc:nzwidth="0x7" edc:desc="Client Address Mask"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SADR" edc:nzwidth="0x7" edc:desc="Client Address"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="SADR1EN" edc:nzwidth="0x1" edc:desc="Client Address 1 Enable"/>
            <edc:SFRFieldDef edc:cname="SADR2EN" edc:nzwidth="0x1" edc:desc="Client Address 2 Enable"/>
            <edc:SFRFieldDef edc:cname="SADR3EN" edc:nzwidth="0x1" edc:desc="Client Address 3 Enable"/>
            <edc:SFRFieldDef edc:cname="DATAMEN" edc:nzwidth="0x1" edc:desc="Data Matching Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_TWI_IADR" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:impl="0xFFFFFF" edc:_addr="0x4000060C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="IADR" edc:nzwidth="0x18" edc:desc="Internal Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_TWI_CWGR" edc:nzwidth="0x20" edc:access="--nnnnnn---n-nnnnnnnnnnnnnnnnnnn" edc:impl="0x3F17FFFF" edc:_addr="0x40000610">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="CLDIV" edc:nzwidth="0x8" edc:desc="Clock Low Divider"/>
            <edc:SFRFieldDef edc:cname="CHDIV" edc:nzwidth="0x8" edc:desc="Clock High Divider"/>
            <edc:SFRFieldDef edc:cname="CKDIV" edc:nzwidth="0x3" edc:desc="Clock Divider"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BRSRCCLK" edc:nzwidth="0x1" edc:desc="Bit Rate Source Clock">
              <edc:SFRFieldSemantic edc:cname="PERIPH_CLK" edc:desc="The peripheral clock is the source clock for the bit rate generation." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="GCLK is the source clock for the bit rate generation, thus the bit rate can be independent of the core/peripheral clock." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="HOLD" edc:nzwidth="0x6" edc:desc="TWD Hold Time Versus TWCK Falling"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x40000614"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_TWI_SR" edc:nzwidth="0x20" edc:access="-----rrrr-rrrrrrrrrrrrrrrrrrrrrr" edc:impl="0x7BFFFFF" edc:_addr="0x40000620">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TXCOMP" edc:nzwidth="0x1" edc:desc="Transmission Completed (cleared by writing FLEX_TWI_THR)"/>
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="Receive Holding Register Ready (cleared when reading FLEX_TWI_RHR)"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="Transmit Holding Register Ready (cleared by writing FLEX_TWI_THR)"/>
            <edc:SFRFieldDef edc:cname="SVREAD" edc:nzwidth="0x1" edc:desc="Client Read"/>
            <edc:SFRFieldDef edc:cname="SVACC" edc:nzwidth="0x1" edc:desc="Client Access"/>
            <edc:SFRFieldDef edc:cname="GACC" edc:nzwidth="0x1" edc:desc="General Call Access (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:nzwidth="0x1" edc:desc="Underrun Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="NACK" edc:nzwidth="0x1" edc:desc="Not Acknowledged (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="ARBLST" edc:nzwidth="0x1" edc:desc="Arbitration Lost (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SCLWS" edc:nzwidth="0x1" edc:desc="Clock Wait State"/>
            <edc:SFRFieldDef edc:cname="EOSACC" edc:nzwidth="0x1" edc:desc="End Of Client Access (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of RX Buffer (cleared by writing FLEX_TWI_RCR or FLEX_TWI_RNCR)"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of TX Buffer (cleared by writing FLEX_TWI_TCR or FLEX_TWI_TNCR)"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="RX Buffer Full (cleared by writing FLEX_TWI_RCR or FLEX_TWI_RNCR)"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="TX Buffer Empty (cleared by writing FLEX_TWI_TCR or FLEX_TWI_TNCR)"/>
            <edc:SFRFieldDef edc:cname="MCACK" edc:nzwidth="0x1" edc:desc="Host Code Acknowledge (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SMBAF" edc:nzwidth="0x1" edc:desc="SMBus Alert Flag"/>
            <edc:SFRFieldDef edc:cname="TOUT" edc:nzwidth="0x1" edc:desc="Timeout Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="PECERR" edc:nzwidth="0x1" edc:desc="PEC Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SMBDAM" edc:nzwidth="0x1" edc:desc="SMBus Default Address Match (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SMBHHM" edc:nzwidth="0x1" edc:desc="SMBus Host Header Address Match (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFLOCK" edc:nzwidth="0x1" edc:desc="Transmit FIFO Lock"/>
            <edc:SFRFieldDef edc:cname="SCL" edc:nzwidth="0x1" edc:desc="SCL Line Value"/>
            <edc:SFRFieldDef edc:cname="SDA" edc:nzwidth="0x1" edc:desc="SDA Line Value"/>
            <edc:SFRFieldDef edc:cname="SR" edc:nzwidth="0x1" edc:desc="Start Repeated"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_TWI_IER" edc:nzwidth="0x20" edc:access="----------wwww-wwwwwwwwwwwww-www" edc:impl="0x3DFFF7" edc:_addr="0x40000624">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TXCOMP" edc:nzwidth="0x1" edc:desc="Transmission Completed Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="Receive Holding Register Ready Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="Transmit Holding Register Ready Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SVACC" edc:nzwidth="0x1" edc:desc="Client Access Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="GACC" edc:nzwidth="0x1" edc:desc="General Call Access Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:nzwidth="0x1" edc:desc="Underrun Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="NACK" edc:nzwidth="0x1" edc:desc="Not Acknowledge Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ARBLST" edc:nzwidth="0x1" edc:desc="Arbitration Lost Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SCL_WS" edc:nzwidth="0x1" edc:desc="Clock Wait State Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EOSACC" edc:nzwidth="0x1" edc:desc="End Of Client Access Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MCACK" edc:nzwidth="0x1" edc:desc="Host Code Acknowledge Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TOUT" edc:nzwidth="0x1" edc:desc="Timeout Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PECERR" edc:nzwidth="0x1" edc:desc="PEC Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SMBDAM" edc:nzwidth="0x1" edc:desc="SMBus Default Address Match Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SMBHHM" edc:nzwidth="0x1" edc:desc="SMBus Host Header Address Match Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_TWI_IDR" edc:nzwidth="0x20" edc:access="----------wwww-wwwwwwwwwwwww-www" edc:impl="0x3DFFF7" edc:_addr="0x40000628">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TXCOMP" edc:nzwidth="0x1" edc:desc="Transmission Completed Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="Receive Holding Register Ready Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="Transmit Holding Register Ready Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SVACC" edc:nzwidth="0x1" edc:desc="Client Access Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="GACC" edc:nzwidth="0x1" edc:desc="General Call Access Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:nzwidth="0x1" edc:desc="Underrun Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="NACK" edc:nzwidth="0x1" edc:desc="Not Acknowledge Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ARBLST" edc:nzwidth="0x1" edc:desc="Arbitration Lost Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SCL_WS" edc:nzwidth="0x1" edc:desc="Clock Wait State Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="EOSACC" edc:nzwidth="0x1" edc:desc="End Of Client Access Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="MCACK" edc:nzwidth="0x1" edc:desc="Host Code Acknowledge Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TOUT" edc:nzwidth="0x1" edc:desc="Timeout Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="PECERR" edc:nzwidth="0x1" edc:desc="PEC Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SMBDAM" edc:nzwidth="0x1" edc:desc="SMBus Default Address Match Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SMBHHM" edc:nzwidth="0x1" edc:desc="SMBus Host Header Address Match Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_TWI_IMR" edc:nzwidth="0x20" edc:access="----------rrrr-rrrrrrrrrrrrr-rrr" edc:impl="0x3DFFF7" edc:_addr="0x4000062C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TXCOMP" edc:nzwidth="0x1" edc:desc="Transmission Completed Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="Receive Holding Register Ready Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="Transmit Holding Register Ready Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SVACC" edc:nzwidth="0x1" edc:desc="Client Access Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="GACC" edc:nzwidth="0x1" edc:desc="General Call Access Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:nzwidth="0x1" edc:desc="Underrun Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="NACK" edc:nzwidth="0x1" edc:desc="Not Acknowledge Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ARBLST" edc:nzwidth="0x1" edc:desc="Arbitration Lost Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="SCL_WS" edc:nzwidth="0x1" edc:desc="Clock Wait State Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="EOSACC" edc:nzwidth="0x1" edc:desc="End Of Client Access Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="MCACK" edc:nzwidth="0x1" edc:desc="Host Code Acknowledge Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TOUT" edc:nzwidth="0x1" edc:desc="Timeout Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="PECERR" edc:nzwidth="0x1" edc:desc="PEC Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="SMBDAM" edc:nzwidth="0x1" edc:desc="SMBus Default Address Match Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="SMBHHM" edc:nzwidth="0x1" edc:desc="SMBus Host Header Address Match Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_TWI_RHR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40000630">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="RXDATA0" edc:nzwidth="0x8" edc:desc="Host or Client Receive Holding Data 0"/>
            <edc:SFRFieldDef edc:cname="RXDATA1" edc:nzwidth="0x8" edc:desc="Host or Client Receive Holding Data 1"/>
            <edc:AdjustPoint edc:offset="-6"/>
            <edc:SFRFieldDef edc:cname="PSTATE" edc:nzwidth="0x1" edc:desc="Stop State (Client Sniffer Mode only)"/>
            <edc:SFRFieldDef edc:cname="ASTATE" edc:nzwidth="0x2" edc:desc="Acknowledge State (Client Sniffer Mode only)">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Acknowledge or Nacknowledge detected after previously logged data" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ACK" edc:desc="Acknowledge (A) detected after previously logged data" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NACK" edc:desc="Nacknowledge (NA) detected after previously logged data" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="UNDEF" edc:desc="Not defined" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RXDATA2" edc:nzwidth="0x8" edc:desc="Host or Client Receive Holding Data 2"/>
            <edc:SFRFieldDef edc:cname="RXDATA3" edc:nzwidth="0x8" edc:desc="Host or Client Receive Holding Data 3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_TWI_THR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x40000634">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TXDATA0" edc:nzwidth="0x8" edc:desc="Host or Client Transmit Holding Data 0"/>
            <edc:SFRFieldDef edc:cname="TXDATA1" edc:nzwidth="0x8" edc:desc="Host or Client Transmit Holding Data 1"/>
            <edc:SFRFieldDef edc:cname="TXDATA2" edc:nzwidth="0x8" edc:desc="Host or Client Transmit Holding Data 2"/>
            <edc:SFRFieldDef edc:cname="TXDATA3" edc:nzwidth="0x8" edc:desc="Host or Client Transmit Holding Data 3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_TWI_SMBTR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn----nnnn" edc:impl="0xFFFFFF0F" edc:_addr="0x40000638">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="PRESC" edc:nzwidth="0x4" edc:desc="SMBus Clock Prescaler"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TLOWS" edc:nzwidth="0x8" edc:desc="Client Clock Stretch Maximum Cycles"/>
            <edc:SFRFieldDef edc:cname="TLOWM" edc:nzwidth="0x8" edc:desc="Host Clock Stretch Maximum Cycles"/>
            <edc:SFRFieldDef edc:cname="THMAX" edc:nzwidth="0x8" edc:desc="Clock High Maximum Cycles"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_TWI_HSR" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:impl="0xFF" edc:_addr="0x4000063C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="MCODE" edc:nzwidth="0x8" edc:desc="TWI High Speed Host Code"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_TWI_ACR" edc:nzwidth="0x20" edc:access="------nnnnnnnnnn------nnnnnnnnnn" edc:impl="0x3FF03FF" edc:_addr="0x40000640">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="DATAL" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Transfer Direction"/>
            <edc:SFRFieldDef edc:cname="PEC" edc:nzwidth="0x1" edc:desc="PEC Request (SMBus Mode only)"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="NDATAL" edc:nzwidth="0x8" edc:desc="Next Data Length"/>
            <edc:SFRFieldDef edc:cname="NDIR" edc:nzwidth="0x1" edc:desc="Next Transfer Direction"/>
            <edc:SFRFieldDef edc:cname="NPEC" edc:nzwidth="0x1" edc:desc="Next PEC Request (SMBus Mode only)"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_TWI_FILTR" edc:nzwidth="0x20" edc:access="---------------------nnn------nn" edc:impl="0x703" edc:_addr="0x40000644">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="FILT" edc:nzwidth="0x1" edc:desc="RX Digital Filter"/>
            <edc:SFRFieldDef edc:cname="PADFEN" edc:nzwidth="0x1" edc:desc="PAD Filter Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="THRES" edc:nzwidth="0x3" edc:desc="Digital Filter Threshold"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_TWI_HSCWGR" edc:nzwidth="0x20" edc:access="-------------nnnnnnnnnnnnnnnnnnn" edc:impl="0x7FFFF" edc:_addr="0x40000648">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="HSCLDIV" edc:nzwidth="0x8" edc:desc="High Speed Clock Low Divider"/>
            <edc:SFRFieldDef edc:cname="HSCHDIV" edc:nzwidth="0x8" edc:desc="High Speed Clock High Divider"/>
            <edc:SFRFieldDef edc:cname="HSCKDIV" edc:nzwidth="0x3" edc:desc="High Speed Clock Divider"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_TWI_SWMR" edc:nzwidth="0x20" edc:access="nnnnnnnn-nnnnnnn-nnnnnnn-nnnnnnn" edc:impl="0xFF7F7F7F" edc:_addr="0x4000064C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="SADR1" edc:nzwidth="0x7" edc:desc="Client Address 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SADR2" edc:nzwidth="0x7" edc:desc="Client Address 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SADR3" edc:nzwidth="0x7" edc:desc="Client Address 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DATAM" edc:nzwidth="0x8" edc:desc="Data Match"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_TWI_FMR" edc:nzwidth="0x20" edc:access="--nnnnnn--nnnnnn----------nn--nn" edc:impl="0x3F3F0033" edc:_addr="0x40000650">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TXRDYM" edc:nzwidth="0x2" edc:desc="Transmitter Ready Mode">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="TXRDY will be at level '1' when at least one data can be written in the transmit FIFO. When DMA is enabled to transfer data, the chunk of 1 byte must be configured in the DMA. If the transfer is performed by software, the access type must be defined as byte." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="TXRDY will be at level '1' when at least two data can be written in the transmit FIFO. To minimize system bus load, when DMA is enabled to transfer data, the chunk of 1 halfword (1 halfword carries 2 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 2 accesses) or halfword (2 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="TXRDY will be at level '1' when at least four data can be written in the transmit FIFO. To minimize system bus load, when DMA is enabled to transfer data, the chunk of 1 word (1 word carries 4 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 4 accesses), halfword (2 bytes per access, 2 accesses) or word (4 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXRDYM" edc:nzwidth="0x2" edc:desc="Receiver Ready Mode">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="RXRDY will be at level '1' when at least one unread data is in the receive FIFO. When DMA is enabled to transfer data the chunk of 1 byte must be configured in the DMA. If the transfer is performed by software, the access type (byte, halfword) must be defined accordingly." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="RXRDY will be at level '1' when at least two unread data are in the receive FIFO. To minimize system bus load, when DMA is enabled to transfer data, the chunk of 1 halfword (1 halfword carries 2 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 2 accesses) or halfword (2 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="RXRDY will be at level '1' when at least four unread data are in the receive FIFO. To minimize system bus load, when DMA is enabled to transfer data, the chunk of 1 word (1 word carries 4 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 4 accesses), halfword (2 bytes per access, 2 accesses) or word (4 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="TXFTHRES" edc:nzwidth="0x6" edc:desc="Transmit FIFO Threshold"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXFTHRES" edc:nzwidth="0x6" edc:desc="Receive FIFO Threshold"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_TWI_FLR" edc:nzwidth="0x20" edc:access="----------rrrrrr----------rrrrrr" edc:impl="0x3F003F" edc:_addr="0x40000654">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TXFL" edc:nzwidth="0x6" edc:desc="Transmit FIFO Level"/>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="RXFL" edc:nzwidth="0x6" edc:desc="Receive FIFO Level"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x40000658"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_TWI_FSR" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:impl="0xFF" edc:_addr="0x40000660">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Empty Flag (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Full Flag (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Threshold Flag (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="Receive FIFO Empty Flag"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="Receive FIFO Full Flag"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="Receive FIFO Threshold Flag"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Pointer Error Flag"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="Receive FIFO Pointer Error Flag"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_TWI_FIER" edc:nzwidth="0x20" edc:access="------------------------wwwwwwww" edc:impl="0xFF" edc:_addr="0x40000664">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_TWI_FIDR" edc:nzwidth="0x20" edc:access="------------------------wwwwwwww" edc:impl="0xFF" edc:_addr="0x40000668">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_TWI_FIMR" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:impl="0xFF" edc:_addr="0x4000066C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x74" edc:_addr="0x40000670"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_TWI_WPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:impl="0xFFFFFF07" edc:_addr="0x400006E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="WPEN" edc:nzwidth="0x1" edc:desc="Write Protection Enable"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:nzwidth="0x1" edc:desc="Write Protection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:nzwidth="0x1" edc:desc="Write Protection Control Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of bits WPEN, WPITEN and WPCREN. Always reads as 0" edc:when="(field &amp; 0xFFFFFF) == 0x545749"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM0" edc:cname="FLEX_TWI_WPSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrr-------r" edc:impl="0xFFFFFF01" edc:_addr="0x400006E8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="WPVS" edc:nzwidth="0x1" edc:desc="Write Protect Violation Status (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:nzwidth="0x18" edc:desc="Write Protection Violation Source"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3914" edc:_addr="0x400006EC"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_MR" edc:nzwidth="0x20" edc:access="------------------------------nn" edc:impl="0x3" edc:_addr="0x40004000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="OPMODE" edc:nzwidth="0x2" edc:desc="FLEXCOM Operating Mode">
              <edc:SFRFieldSemantic edc:cname="NO_COM" edc:desc="No communication" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USART" edc:desc="All UART related protocols are selected (RS232, RS485, IrDA, ISO7816, LIN,) SPI/TWI related registers are not accessible and have no impact on IOs." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SPI" edc:desc="SPI operating mode is selected. USART/TWI related registers are not accessible and have no impact on IOs." edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TWI" edc:desc="All TWI related protocols are selected (TWI, SMBus). USART/SPI related registers are not accessible and have no impact on IOs." edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x40004004"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_RHR" edc:nzwidth="0x20" edc:access="----------------rrrrrrrrrrrrrrrr" edc:impl="0xFFFF" edc:_addr="0x40004010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="RXDATA" edc:nzwidth="0x10" edc:desc="Receive Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x40004014"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_THR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x40004020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TXDATA" edc:nzwidth="0x10" edc:desc="Transmit Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xDC" edc:_addr="0x40004024"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_RPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40004100">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="RXPTR" edc:nzwidth="0x20" edc:desc="Receive Pointer Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_RCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x40004104">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="RXCTR" edc:nzwidth="0x10" edc:desc="Receive Counter Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_TPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40004108">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TXPTR" edc:nzwidth="0x20" edc:desc="Transmit Counter Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_TCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x4000410C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TXCTR" edc:nzwidth="0x10" edc:desc="Transmit Counter Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_RNPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40004110">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="RXNPTR" edc:nzwidth="0x20" edc:desc="Receive Next Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_RNCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x40004114">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="RXNCTR" edc:nzwidth="0x10" edc:desc="Receive Next Counter"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_TNPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40004118">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TXNPTR" edc:nzwidth="0x20" edc:desc="Transmit Next Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_TNCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x4000411C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TXNCTR" edc:nzwidth="0x10" edc:desc="Transmit Counter Next"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_PTCR" edc:nzwidth="0x20" edc:access="-------w----wwww------ww------ww" edc:impl="0x10F0303" edc:_addr="0x40004120">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="RXTEN" edc:nzwidth="0x1" edc:desc="Receiver Transfer Enable"/>
            <edc:SFRFieldDef edc:cname="RXTDIS" edc:nzwidth="0x1" edc:desc="Receiver Transfer Disable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="TXTEN" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Enable"/>
            <edc:SFRFieldDef edc:cname="TXTDIS" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Disable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="RXCBEN" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Enable"/>
            <edc:SFRFieldDef edc:cname="RXCBDIS" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Disable"/>
            <edc:SFRFieldDef edc:cname="TXCBEN" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Enable"/>
            <edc:SFRFieldDef edc:cname="TXCBDIS" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Disable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ERRCLR" edc:nzwidth="0x1" edc:desc="Transfer Bus Error Clear"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_PTSR" edc:nzwidth="0x20" edc:access="-------r-----r-r-------r-------r" edc:impl="0x1050101" edc:_addr="0x40004124">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="RXTEN" edc:nzwidth="0x1" edc:desc="Receiver Transfer Enable"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="TXTEN" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Enable"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="RXCBEN" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXCBEN" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Transfer Bus Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_PWPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:impl="0xFFFFFF07" edc:_addr="0x40004128">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="WPPTREN" edc:nzwidth="0x1" edc:desc="Write Protection Pointer Registers Enable"/>
            <edc:SFRFieldDef edc:cname="WPCTREN" edc:nzwidth="0x1" edc:desc="Write Protection Counter Registers Enable"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:nzwidth="0x1" edc:desc="Write Protection Control Register Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x504443"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xD4" edc:_addr="0x4000412C"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_US_CR" edc:nzwidth="0x20" edc:access="ww-w-www--wwww--wwwwwwwwwwwwww--" edc:impl="0xD73CFFFC" edc:_addr="0x40004200">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RSTRX" edc:nzwidth="0x1" edc:desc="Reset Receiver"/>
            <edc:SFRFieldDef edc:cname="RSTTX" edc:nzwidth="0x1" edc:desc="Reset Transmitter"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
            <edc:SFRFieldDef edc:cname="RXDIS" edc:nzwidth="0x1" edc:desc="Receiver Disable"/>
            <edc:SFRFieldDef edc:cname="TXEN" edc:nzwidth="0x1" edc:desc="Transmitter Enable"/>
            <edc:SFRFieldDef edc:cname="TXDIS" edc:nzwidth="0x1" edc:desc="Transmitter Disable"/>
            <edc:SFRFieldDef edc:cname="RSTSTA" edc:nzwidth="0x1" edc:desc="Reset Status Bits"/>
            <edc:SFRFieldDef edc:cname="STTBRK" edc:nzwidth="0x1" edc:desc="Start Break"/>
            <edc:SFRFieldDef edc:cname="STPBRK" edc:nzwidth="0x1" edc:desc="Stop Break"/>
            <edc:SFRFieldDef edc:cname="STTTO" edc:nzwidth="0x1" edc:desc="Clear TIMEOUT Flag and Start Timeout After Next Character Received"/>
            <edc:SFRFieldDef edc:cname="SENDA" edc:nzwidth="0x1" edc:desc="Send Address"/>
            <edc:SFRFieldDef edc:cname="RSTIT" edc:nzwidth="0x1" edc:desc="Reset Iterations"/>
            <edc:SFRFieldDef edc:cname="RSTNACK" edc:nzwidth="0x1" edc:desc="Reset Non Acknowledge"/>
            <edc:SFRFieldDef edc:cname="RETTO" edc:nzwidth="0x1" edc:desc="Start Timeout Immediately"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RTSEN" edc:nzwidth="0x1" edc:desc="Request to Send Enable"/>
            <edc:SFRFieldDef edc:cname="RTSDIS" edc:nzwidth="0x1" edc:desc="Request to Send Disable"/>
            <edc:SFRFieldDef edc:cname="LINABT" edc:nzwidth="0x1" edc:desc="Abort LIN Transmission"/>
            <edc:SFRFieldDef edc:cname="LINWKUP" edc:nzwidth="0x1" edc:desc="Send LIN Wakeup Signal"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TXFCLR" edc:nzwidth="0x1" edc:desc="Transmit FIFO Clear"/>
            <edc:SFRFieldDef edc:cname="RXFCLR" edc:nzwidth="0x1" edc:desc="Receive FIFO Clear"/>
            <edc:SFRFieldDef edc:cname="TXFLCLR" edc:nzwidth="0x1" edc:desc="Transmit FIFO Lock CLEAR"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="REQCLR" edc:nzwidth="0x1" edc:desc="Request to Clear the Comparison Trigger"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="FIFODIS" edc:nzwidth="0x1" edc:desc="FIFO Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_US_MR" edc:nzwidth="0x20" edc:access="nnnn-nnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:impl="0xF7FFFFFF" edc:_addr="0x40004204">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="USART_MODE" edc:nzwidth="0x4" edc:desc="USART Mode of Operation">
              <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Normal mode" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="USCLKS" edc:nzwidth="0x2" edc:desc="Clock Selection">
              <edc:SFRFieldSemantic edc:cname="MCK" edc:desc="Peripheral clock is selected." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DIV" edc:desc="Peripheral clock divided (DIV=8) is selected." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="PCK" edc:desc="PMC programmable clock (PCK) is selected. If the SCK pin is driven (CLKO = 1), the CD field must be greater than 1." edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SCK" edc:desc="Serial clock (SCK) is selected." edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CHRL" edc:nzwidth="0x2" edc:desc="Character Length">
              <edc:SFRFieldSemantic edc:cname="_5_BIT" edc:desc="Character length is 5 bits." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="_6_BIT" edc:desc="Character length is 6 bits." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_7_BIT" edc:desc="Character length is 7 bits." edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BIT" edc:desc="Character length is 8 bits." edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SYNC" edc:nzwidth="0x1" edc:desc="Synchronous Mode Select"/>
            <edc:SFRFieldDef edc:cname="PAR" edc:nzwidth="0x3" edc:desc="Parity Type">
              <edc:SFRFieldSemantic edc:cname="EVEN" edc:desc="Even parity" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ODD" edc:desc="Odd parity" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SPACE" edc:desc="Parity forced to 0 (Space)" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="MARK" edc:desc="Parity forced to 1 (Mark)" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="NO" edc:desc="No parity" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="MULTIDROP" edc:desc="Multidrop mode" edc:when="(field &amp; 0x7) == 0x06"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NBSTOP" edc:nzwidth="0x2" edc:desc="Number of Stop Bits">
              <edc:SFRFieldSemantic edc:cname="_1_BIT" edc:desc="1 stop bit" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="_1_5_BIT" edc:desc="1.5 stop bit (SYNC = 0) or reserved (SYNC = 1)" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_2_BIT" edc:desc="2 stop bits" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CHMODE" edc:nzwidth="0x2" edc:desc="Channel Mode">
              <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Normal mode" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="AUTOMATIC" edc:desc="Automatic Echo. Receiver input is connected to the TXD pin." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="LOCAL_LOOPBACK" edc:desc="Local Loopback. Transmitter output is connected to the Receiver Input." edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="REMOTE_LOOPBACK" edc:desc="Remote Loopback. RXD pin is internally connected to the TXD pin." edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSBF" edc:nzwidth="0x1" edc:desc="Bit Order"/>
            <edc:SFRFieldDef edc:cname="MODE9" edc:nzwidth="0x1" edc:desc="9-bit Character Length"/>
            <edc:SFRFieldDef edc:cname="CLKO" edc:nzwidth="0x1" edc:desc="Clock Output Select"/>
            <edc:SFRFieldDef edc:cname="OVER" edc:nzwidth="0x1" edc:desc="Oversampling Mode"/>
            <edc:SFRFieldDef edc:cname="OOKRXD" edc:nzwidth="0x1" edc:desc="OOK Demodulation Input Selection"/>
            <edc:SFRFieldDef edc:cname="OOKEN" edc:nzwidth="0x1" edc:desc="OOK Modulation/Demodulation Enabled"/>
            <edc:SFRFieldDef edc:cname="VAR_SYNC" edc:nzwidth="0x1" edc:desc="Variable Synchronization of Command/Data Sync Start Frame Delimiter"/>
            <edc:SFRFieldDef edc:cname="INVDATA" edc:nzwidth="0x1" edc:desc="Inverted Data"/>
            <edc:SFRFieldDef edc:cname="MAX_ITERATION" edc:nzwidth="0x3" edc:desc="Maximum Number of Automatic Iteration"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FILTER" edc:nzwidth="0x1" edc:desc="Receive Line Filter"/>
            <edc:SFRFieldDef edc:cname="MAN" edc:nzwidth="0x1" edc:desc="Manchester Encoder/Decoder Enable"/>
            <edc:SFRFieldDef edc:cname="MODSYNC" edc:nzwidth="0x1" edc:desc="Manchester Synchronization Mode"/>
            <edc:SFRFieldDef edc:cname="ONEBIT" edc:nzwidth="0x1" edc:desc="Start Frame Delimiter Selector"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_US_IER" edc:nzwidth="0x20" edc:access="wwwwwwww-w--w---wwwwwwwwwwwwwwww" edc:impl="0xFF48FFFF" edc:_addr="0x40004208">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="RXRDY Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="TXRDY Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Receiver Break Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Transfer Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FRAME" edc:nzwidth="0x1" edc:desc="Framing Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PARE" edc:nzwidth="0x1" edc:desc="Parity Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TIMEOUT" edc:nzwidth="0x1" edc:desc="Timeout Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="TXEMPTY Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ITER" edc:nzwidth="0x1" edc:desc="Max number of Repetitions Reached Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Buffer Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Buffer Full Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINBK" edc:nzwidth="0x1" edc:desc="LIN Break Sent or LIN Break Received Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINID" edc:nzwidth="0x1" edc:desc="LIN Identifier Sent or LIN Identifier Received Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINTC" edc:nzwidth="0x1" edc:desc="LIN Transfer Completed Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear to Send Input Change Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MANE" edc:nzwidth="0x1" edc:desc="Manchester Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINBE" edc:nzwidth="0x1" edc:desc="LIN Bus Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINISFE" edc:nzwidth="0x1" edc:desc="LIN Inconsistent Synch Field Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINIPE" edc:nzwidth="0x1" edc:desc="LIN Identifier Parity Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINCE" edc:nzwidth="0x1" edc:desc="LIN Checksum Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINSNRE" edc:nzwidth="0x1" edc:desc="LIN Client Not Responding Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINSTE" edc:nzwidth="0x1" edc:desc="LIN Synch Tolerance Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINHTE" edc:nzwidth="0x1" edc:desc="LIN Header Timeout Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_US_IDR" edc:nzwidth="0x20" edc:access="wwwwwwww-w--w---wwwwwwwwwwwwwwww" edc:impl="0xFF48FFFF" edc:_addr="0x4000420C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="RXRDY Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="TXRDY Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Receiver Break Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Transfer Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="FRAME" edc:nzwidth="0x1" edc:desc="Framing Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="PARE" edc:nzwidth="0x1" edc:desc="Parity Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TIMEOUT" edc:nzwidth="0x1" edc:desc="Timeout Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="TXEMPTY Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ITER" edc:nzwidth="0x1" edc:desc="Max Number of Repetitions Reached Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Buffer Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Buffer Full Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINBK" edc:nzwidth="0x1" edc:desc="LIN Break Sent or LIN Break Received Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINID" edc:nzwidth="0x1" edc:desc="LIN Identifier Sent or LIN Identifier Received Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINTC" edc:nzwidth="0x1" edc:desc="LIN Transfer Completed Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear to Send Input Change Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MANE" edc:nzwidth="0x1" edc:desc="Manchester Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINBE" edc:nzwidth="0x1" edc:desc="LIN Bus Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINISFE" edc:nzwidth="0x1" edc:desc="LIN Inconsistent Synch Field Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINIPE" edc:nzwidth="0x1" edc:desc="LIN Identifier Parity Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINCE" edc:nzwidth="0x1" edc:desc="LIN Checksum Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINSNRE" edc:nzwidth="0x1" edc:desc="LIN Client Not Responding Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINSTE" edc:nzwidth="0x1" edc:desc="LIN Synch Tolerance Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINHTE" edc:nzwidth="0x1" edc:desc="LIN Header Timeout Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_US_IMR" edc:nzwidth="0x20" edc:access="rrrrrrrr-r--r---rrrrrrrrrrrrrrrr" edc:impl="0xFF48FFFF" edc:_addr="0x40004210">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="RXRDY Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="TXRDY Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Receiver Break Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Transfer Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="FRAME" edc:nzwidth="0x1" edc:desc="Framing Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="PARE" edc:nzwidth="0x1" edc:desc="Parity Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TIMEOUT" edc:nzwidth="0x1" edc:desc="Timeout Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="TXEMPTY Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ITER" edc:nzwidth="0x1" edc:desc="Max Number of Repetitions Reached Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Buffer Empty Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Buffer Full Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINBK" edc:nzwidth="0x1" edc:desc="LIN Break Sent or LIN Break Received Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINID" edc:nzwidth="0x1" edc:desc="LIN Identifier Sent or LIN Identifier Received Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINTC" edc:nzwidth="0x1" edc:desc="LIN Transfer Completed Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear to Send Input Change Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MANE" edc:nzwidth="0x1" edc:desc="Manchester Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINBE" edc:nzwidth="0x1" edc:desc="LIN Bus Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINISFE" edc:nzwidth="0x1" edc:desc="LIN Inconsistent Synch Field Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINIPE" edc:nzwidth="0x1" edc:desc="LIN Identifier Parity Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINCE" edc:nzwidth="0x1" edc:desc="LIN Checksum Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINSNRE" edc:nzwidth="0x1" edc:desc="LIN Client Not Responding Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINSTE" edc:nzwidth="0x1" edc:desc="LIN Synch Tolerance Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINHTE" edc:nzwidth="0x1" edc:desc="LIN Header Timeout Error Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_US_CSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrr--r---rrrrrrrrrrrrrrrr" edc:impl="0xFFC8FFFF" edc:_addr="0x40004214">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="Receiver Ready (cleared by reading FLEX_US_RHR)"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="Transmitter Ready (cleared by writing FLEX_US_THR)"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received/End of Break"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of RX Buffer (cleared by writing FLEX_US_RCR or FLEX_US_RNCR)"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of TX Buffer (cleared by writing FLEX_US_TCR or FLEX_US_TNCR)"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error"/>
            <edc:SFRFieldDef edc:cname="FRAME" edc:nzwidth="0x1" edc:desc="Framing Error"/>
            <edc:SFRFieldDef edc:cname="PARE" edc:nzwidth="0x1" edc:desc="Parity Error"/>
            <edc:SFRFieldDef edc:cname="TIMEOUT" edc:nzwidth="0x1" edc:desc="Receiver Timeout"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="Transmitter Empty (cleared by writing FLEX_US_THR)"/>
            <edc:SFRFieldDef edc:cname="ITER" edc:nzwidth="0x1" edc:desc="Max Number of Repetitions Reached"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="TX Buffer Empty (cleared by writing FLEX_US_TCR or FLEX_US_TNCR)"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="RX Buffer Full (cleared by writing FLEX_US_RCR or FLEX_US_RNCR)"/>
            <edc:SFRFieldDef edc:cname="LINBK" edc:nzwidth="0x1" edc:desc="LIN Break Sent or LIN Break Received"/>
            <edc:SFRFieldDef edc:cname="LINID" edc:nzwidth="0x1" edc:desc="LIN Identifier Sent or LIN Identifier Received"/>
            <edc:SFRFieldDef edc:cname="LINTC" edc:nzwidth="0x1" edc:desc="LIN Transfer Completed"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear to Send Input Change Flag"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Status"/>
            <edc:SFRFieldDef edc:cname="LINBLS" edc:nzwidth="0x1" edc:desc="LIN Bus Line Status"/>
            <edc:SFRFieldDef edc:cname="MANE" edc:nzwidth="0x1" edc:desc="Manchester Error"/>
            <edc:SFRFieldDef edc:cname="LINBE" edc:nzwidth="0x1" edc:desc="LIN Bit Error"/>
            <edc:SFRFieldDef edc:cname="LINISFE" edc:nzwidth="0x1" edc:desc="LIN Inconsistent Synch Field Error"/>
            <edc:SFRFieldDef edc:cname="LINIPE" edc:nzwidth="0x1" edc:desc="LIN Identifier Parity Error"/>
            <edc:SFRFieldDef edc:cname="LINCE" edc:nzwidth="0x1" edc:desc="LIN Checksum Error"/>
            <edc:SFRFieldDef edc:cname="LINSNRE" edc:nzwidth="0x1" edc:desc="LIN Client Not Responding Error"/>
            <edc:SFRFieldDef edc:cname="LINSTE" edc:nzwidth="0x1" edc:desc="LIN Synch Tolerance Error"/>
            <edc:SFRFieldDef edc:cname="LINHTE" edc:nzwidth="0x1" edc:desc="LIN Header Timeout Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_US_RHR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40004218">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="RXCHR0" edc:nzwidth="0x8" edc:desc="Received Characters"/>
            <edc:SFRFieldDef edc:cname="RXCHR1" edc:nzwidth="0x8" edc:desc="Received Characters"/>
            <edc:AdjustPoint edc:offset="-1"/>
            <edc:SFRFieldDef edc:cname="RXSYNH" edc:nzwidth="0x1" edc:desc="Received Sync"/>
            <edc:SFRFieldDef edc:cname="RXCHR2" edc:nzwidth="0x8" edc:desc="Received Characters"/>
            <edc:SFRFieldDef edc:cname="RXCHR3" edc:nzwidth="0x8" edc:desc="Received Characters"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_US_THR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4000421C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TXCHR0" edc:nzwidth="0x8" edc:desc="Character to be Transmitted"/>
            <edc:SFRFieldDef edc:cname="TXCHR1" edc:nzwidth="0x8" edc:desc="Character to be Transmitted"/>
            <edc:AdjustPoint edc:offset="-1"/>
            <edc:SFRFieldDef edc:cname="TXSYNH" edc:nzwidth="0x1" edc:desc="Sync Field to be Transmitted"/>
            <edc:SFRFieldDef edc:cname="TXCHR2" edc:nzwidth="0x8" edc:desc="Character to be Transmitted"/>
            <edc:SFRFieldDef edc:cname="TXCHR3" edc:nzwidth="0x8" edc:desc="Character to be Transmitted"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_US_BRGR" edc:nzwidth="0x20" edc:access="-------------nnnnnnnnnnnnnnnnnnn" edc:impl="0x7FFFF" edc:_addr="0x40004220">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="CD" edc:nzwidth="0x10" edc:desc="Clock Divider"/>
            <edc:SFRFieldDef edc:cname="FP" edc:nzwidth="0x3" edc:desc="Fractional Part"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_US_RTOR" edc:nzwidth="0x20" edc:access="---------------nnnnnnnnnnnnnnnnn" edc:impl="0x1FFFF" edc:_addr="0x40004224">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TO" edc:nzwidth="0x11" edc:desc="Timeout Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_US_TTGR" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:impl="0xFF" edc:_addr="0x40004228">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TG" edc:nzwidth="0x8" edc:desc="Timeguard Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x14" edc:_addr="0x4000422C"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_US_FIDI" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x40004240">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="FI_DI_RATIO" edc:nzwidth="0x10" edc:desc="FI Over DI Ratio Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_US_NER" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:impl="0xFF" edc:_addr="0x40004244">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="NB_ERRORS" edc:nzwidth="0x8" edc:desc="Number of Errors"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x40004248"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_US_IF" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:impl="0xFF" edc:_addr="0x4000424C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="IRDA_FILTER" edc:nzwidth="0x8" edc:desc="IrDA Filter"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_US_MAN" edc:nzwidth="0x20" edc:access="nnnn--nn----nnnn---n--nn----nnnn" edc:impl="0xF30F130F" edc:_addr="0x40004250">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TX_PL" edc:nzwidth="0x4" edc:desc="Transmitter Preamble Length"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TX_PP" edc:nzwidth="0x2" edc:desc="Transmitter Preamble Pattern">
              <edc:SFRFieldSemantic edc:cname="ALL_ONE" edc:desc="The preamble is composed of '1's" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ALL_ZERO" edc:desc="The preamble is composed of '0's" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ZERO_ONE" edc:desc="The preamble is composed of '01's" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="ONE_ZERO" edc:desc="The preamble is composed of '10's" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TX_MPOL" edc:nzwidth="0x1" edc:desc="Transmitter Manchester Polarity"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RX_PL" edc:nzwidth="0x4" edc:desc="Receiver Preamble Length"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="RX_PP" edc:nzwidth="0x2" edc:desc="Receiver Preamble Pattern detected">
              <edc:SFRFieldSemantic edc:cname="ALL_ONE" edc:desc="The preamble is composed of '1's" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ALL_ZERO" edc:desc="The preamble is composed of '0's" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ZERO_ONE" edc:desc="The preamble is composed of '01's" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="ONE_ZERO" edc:desc="The preamble is composed of '10's" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RX_MPOL" edc:nzwidth="0x1" edc:desc="Receiver Manchester Polarity"/>
            <edc:SFRFieldDef edc:cname="ONE" edc:nzwidth="0x1" edc:desc="Must Be Set to 1"/>
            <edc:SFRFieldDef edc:cname="DRIFT" edc:nzwidth="0x1" edc:desc="Drift Compensation"/>
            <edc:SFRFieldDef edc:cname="RXIDLEV" edc:nzwidth="0x1" edc:desc="Receiver Idle Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_US_LINMR" edc:nzwidth="0x20" edc:access="--------------nnnnnnnnnnnnnnnnnn" edc:impl="0x3FFFF" edc:_addr="0x40004254">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="NACT" edc:nzwidth="0x2" edc:desc="LIN Node Action">
              <edc:SFRFieldSemantic edc:cname="PUBLISH" edc:desc="The USART transmits the response." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SUBSCRIBE" edc:desc="The USART receives the response." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="IGNORE" edc:desc="The USART does not transmit and does not receive the response." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PARDIS" edc:nzwidth="0x1" edc:desc="Parity Disable"/>
            <edc:SFRFieldDef edc:cname="CHKDIS" edc:nzwidth="0x1" edc:desc="Checksum Disable"/>
            <edc:SFRFieldDef edc:cname="CHKTYP" edc:nzwidth="0x1" edc:desc="Checksum Type"/>
            <edc:SFRFieldDef edc:cname="DLM" edc:nzwidth="0x1" edc:desc="Data Length Mode"/>
            <edc:SFRFieldDef edc:cname="FSDIS" edc:nzwidth="0x1" edc:desc="Frame Slot Mode Disable"/>
            <edc:SFRFieldDef edc:cname="WKUPTYP" edc:nzwidth="0x1" edc:desc="Wakeup Signal Type"/>
            <edc:SFRFieldDef edc:cname="DLC" edc:nzwidth="0x8" edc:desc="Data Length Control"/>
            <edc:SFRFieldDef edc:cname="PDCM" edc:nzwidth="0x1" edc:desc="PDC Mode"/>
            <edc:SFRFieldDef edc:cname="SYNCDIS" edc:nzwidth="0x1" edc:desc="Synchronization Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_US_LINIR" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:impl="0xFF" edc:_addr="0x40004258">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="IDCHR" edc:nzwidth="0x8" edc:desc="Identifier Character"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_US_LINBRR" edc:nzwidth="0x20" edc:access="-------------rrrrrrrrrrrrrrrrrrr" edc:impl="0x7FFFF" edc:_addr="0x4000425C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="LINCD" edc:nzwidth="0x10" edc:desc="Clock Divider after Synchronization"/>
            <edc:SFRFieldDef edc:cname="LINFP" edc:nzwidth="0x3" edc:desc="Fractional Part after Synchronization"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x30" edc:_addr="0x40004260"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_US_CMPR" edc:nzwidth="0x20" edc:access="-------nnnnnnnnn-nnn---nnnnnnnnn" edc:impl="0x1FF71FF" edc:_addr="0x40004290">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="VAL1" edc:nzwidth="0x9" edc:desc="First Comparison Value for Received Character"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CMPMODE" edc:nzwidth="0x2" edc:desc="Comparison Mode">
              <edc:SFRFieldSemantic edc:cname="FLAG_ONLY" edc:desc="Any character is received and comparison function drives CMP flag." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="START_CONDITION" edc:desc="Comparison condition must be met to start reception." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FILTER" edc:desc="Comparison must be met to receive the current data only" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMPPAR" edc:nzwidth="0x1" edc:desc="Compare Parity"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="VAL2" edc:nzwidth="0x9" edc:desc="Second Comparison Value for Received Character"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x40004294"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_US_FMR" edc:nzwidth="0x20" edc:access="--nnnnnn--nnnnnn--nnnnnnn-nn--nn" edc:impl="0x3F3F3FB3" edc:_addr="0x400042A0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TXRDYM" edc:nzwidth="0x2" edc:desc="Transmitter Ready Mode">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="TXRDY will be at level '1' when at least one data can be written in the transmit FIFO. When DMA is enabled to transfer data and FLEX_US_MR.MODE9=0 (up to 8 bits to transfer on the line), the chunk of 1 byte must be configured in the DMA. If the transfer is performed by software, the access type must be defined as a byte." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="TXRDY will be at level '1' when at least two data can be written in the transmit FIFO. To minimize system bus load, when DMA is enabled to transfer data and FLEX_US_MR.MODE9=0 (up to 8 bits to transfer on the line), the chunk of 1 halfword (1 halfword carries 2 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 2 accesses) or halfword (2 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="TXRDY will be at level '1' when at least four data can be written in the transmit FIFO. To minimize system bus load, when DMA is enabled to transfer data and FLEX_US_MR.MODE9=0 (up to 8 bits to transfer on the line), the chunk of 1 word (1 word carries 4 bytes) must be configured in the DMA (chunk size=1 and word access). If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 4 accesses), halfword (2 bytes per access, 2 accesses) or word (4 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXRDYM" edc:nzwidth="0x2" edc:desc="Receiver Ready Mode">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="RXRDY will be at level '1' when at least one unread data is in the receive FIFO. When DMA is enabled to transfer data and FLEX_US_MR.MODE9=0 (up to 8 bits to transfer on the line), the chunk of 1 byte must be configured in the DMA. If the transfer is performed by software, the access type must be defined as a byte." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="RXRDY will be at level '1' when at least two unread data are in the receive FIFO. To minimize system bus load, when DMA is enabled to transfer data and FLEX_US_MR.MODE9=0 (up to 8 bits to transfer on the line), the chunk of 1 halfword (1 halfword carries 2 bytes) must be configured in the DMA (chunk size=1 and halfword access). If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 2 accesses) or halfword (2 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="RXRDY will be at level '1' when at least four unread data are in the receive FIFO. To minimize system bus load, when DMA is enabled to transfer data and FLEX_US_MR.MODE9=0 (up to 8 bits to transfer on the line), the chunk of 1 word (1 word carries 4 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 4 accesses), halfword (2 bytes per access, 2 accesses) or word (4 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FRTSC" edc:nzwidth="0x1" edc:desc="FIFO RTS Pin Control enable (Hardware Handshaking mode only)"/>
            <edc:SFRFieldDef edc:cname="TXFTHRES" edc:nzwidth="0x6" edc:desc="Transmit FIFO Threshold"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXFTHRES" edc:nzwidth="0x6" edc:desc="Receive FIFO Threshold"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXFTHRES2" edc:nzwidth="0x6" edc:desc="Receive FIFO Threshold 2"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_US_FLR" edc:nzwidth="0x20" edc:access="----------rrrrrr----------rrrrrr" edc:impl="0x3F003F" edc:_addr="0x400042A4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TXFL" edc:nzwidth="0x6" edc:desc="Transmit FIFO Level"/>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="RXFL" edc:nzwidth="0x6" edc:desc="Receive FIFO Level"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_US_FIER" edc:nzwidth="0x20" edc:access="----------------------w-wwwwwwww" edc:impl="0x2FF" edc:_addr="0x400042A8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF2" edc:nzwidth="0x1" edc:desc="RXFTHF2 Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_US_FIDR" edc:nzwidth="0x20" edc:access="----------------------w-wwwwwwww" edc:impl="0x2FF" edc:_addr="0x400042AC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF2" edc:nzwidth="0x1" edc:desc="RXFTHF2 Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_US_FIMR" edc:nzwidth="0x20" edc:access="----------------------r-rrrrrrrr" edc:impl="0x2FF" edc:_addr="0x400042B0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF2" edc:nzwidth="0x1" edc:desc="RXFTHF2 Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_US_FESR" edc:nzwidth="0x20" edc:access="----------------------rrrrrrrrrr" edc:impl="0x3FF" edc:_addr="0x400042B4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Empty Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Full Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Threshold Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="Receive FIFO Empty Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="Receive FIFO Full Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="Receive FIFO Threshold Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Pointer Error Flag"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="Receive FIFO Pointer Error Flag"/>
            <edc:SFRFieldDef edc:cname="TXFLOCK" edc:nzwidth="0x1" edc:desc="Transmit FIFO Lock"/>
            <edc:SFRFieldDef edc:cname="RXFTHF2" edc:nzwidth="0x1" edc:desc="Receive FIFO Threshold Flag 2 (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2C" edc:_addr="0x400042B8"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_US_WPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:impl="0xFFFFFF07" edc:_addr="0x400042E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="WPEN" edc:nzwidth="0x1" edc:desc="Write Protection Enable"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:nzwidth="0x1" edc:desc="Write Protection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:nzwidth="0x1" edc:desc="Write Protection Control Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of bits WPEN, WPITEN and WPCREN. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x555341"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_US_WPSR" edc:nzwidth="0x20" edc:access="--------rrrrrrrrrrrrrrrr-------r" edc:impl="0xFFFF01" edc:_addr="0x400042E8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="WPVS" edc:nzwidth="0x1" edc:desc="Write Protection Violation Status"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:nzwidth="0x10" edc:desc="Write Protection Violation Source"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x114" edc:_addr="0x400042EC"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_SPI_CR" edc:nzwidth="0x20" edc:access="ww-----w------ww---w----w-----ww" edc:impl="0xC1031083" edc:_addr="0x40004400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="SPIEN" edc:nzwidth="0x1" edc:desc="SPI Enable"/>
            <edc:SFRFieldDef edc:cname="SPIDIS" edc:nzwidth="0x1" edc:desc="SPI Disable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="SPI Software Reset"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="REQCLR" edc:nzwidth="0x1" edc:desc="Request to Clear the Comparison Trigger"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="TXFCLR" edc:nzwidth="0x1" edc:desc="Transmit FIFO Clear"/>
            <edc:SFRFieldDef edc:cname="RXFCLR" edc:nzwidth="0x1" edc:desc="Receive FIFO Clear"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="LASTXFER" edc:nzwidth="0x1" edc:desc="Last Transfer"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="FIFODIS" edc:nzwidth="0x1" edc:desc="FIFO Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_SPI_MR" edc:nzwidth="0x20" edc:access="nnnnnnnn------nn---n----n-nnnnnn" edc:impl="0xFF0310BF" edc:_addr="0x40004404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="MSTR" edc:nzwidth="0x1" edc:desc="Host/Client Mode"/>
            <edc:SFRFieldDef edc:cname="PS" edc:nzwidth="0x1" edc:desc="Peripheral Select"/>
            <edc:SFRFieldDef edc:cname="PCSDEC" edc:nzwidth="0x1" edc:desc="Chip Select Decode"/>
            <edc:SFRFieldDef edc:cname="BRSRCCLK" edc:nzwidth="0x1" edc:desc="Bit Rate Source Clock">
              <edc:SFRFieldSemantic edc:cname="PERIPH_CLK" edc:desc="The peripheral clock is the source clock for the bit rate generation." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="GCLK is the source clock for the bit rate generation, thus the bit rate can be independent of the core/peripheral clock." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MODFDIS" edc:nzwidth="0x1" edc:desc="Mode Fault Detection"/>
            <edc:SFRFieldDef edc:cname="WDRBT" edc:nzwidth="0x1" edc:desc="Wait Data Read Before Transfer"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LLB" edc:nzwidth="0x1" edc:desc="Local Loopback Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CMPMODE" edc:nzwidth="0x1" edc:desc="Comparison Mode">
              <edc:SFRFieldSemantic edc:cname="FLAG_ONLY" edc:desc="Any character is received and comparison function drives CMP flag." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="START_CONDITION" edc:desc="Comparison condition must be met to start reception of all incoming characters until REQCLR is set." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PCS" edc:nzwidth="0x2" edc:desc="Peripheral Chip Select"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="DLYBCS" edc:nzwidth="0x8" edc:desc="Delay Between Chip Selects"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_SPI_RDR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40004408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="RD0" edc:nzwidth="0x10" edc:desc="Receive Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="RD1" edc:nzwidth="0x8" edc:desc="Receive Data"/>
            <edc:SFRFieldDef edc:cname="RD1" edc:nzwidth="0x10" edc:desc="Receive Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="RD3" edc:nzwidth="0x8" edc:desc="Receive Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_SPI_TDR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4000440C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TD0" edc:nzwidth="0x10" edc:desc="Transmit Data"/>
            <edc:SFRFieldDef edc:cname="TD1" edc:nzwidth="0x10" edc:desc="Transmit Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="LASTXFER" edc:nzwidth="0x1" edc:desc="Last Transfer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_SPI_SR" edc:nzwidth="0x20" edc:access="rrrrrrrr-------r---rrrrrrrrrrrrr" edc:impl="0xFF011FFF" edc:_addr="0x40004410">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="RDRF" edc:nzwidth="0x1" edc:desc="Receive Data Register Full (cleared by reading FLEX_SPI_RDR)"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:nzwidth="0x1" edc:desc="Transmit Data Register Empty (cleared by writing FLEX_SPI_TDR)"/>
            <edc:SFRFieldDef edc:cname="MODF" edc:nzwidth="0x1" edc:desc="Mode Fault Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:nzwidth="0x1" edc:desc="Overrun Error Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of RX Buffer (cleared by writing FLEX_SPI_RCR or FLEX_SPI_RNCR)"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of TX Buffer (cleared by writing FLEX_SPI_TCR or FLEX_SPI_TNCR)"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="RX Buffer Full (cleared by writing FLEX_SPI_RCR or FLEX_SPI_RNCR)"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="TX Buffer Empty (cleared by writing FLEX_SPI_TCR or FLEX_SPI_TNCR)"/>
            <edc:SFRFieldDef edc:cname="NSSR" edc:nzwidth="0x1" edc:desc="NSS Rising (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="Transmission Registers Empty (cleared by writing FLEX_SPI_TDR)"/>
            <edc:SFRFieldDef edc:cname="UNDES" edc:nzwidth="0x1" edc:desc="Underrun Error Status (Client mode only) (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SFERR" edc:nzwidth="0x1" edc:desc="Client Mode Frame Error (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SPIENS" edc:nzwidth="0x1" edc:desc="SPI Enable Status"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Empty Flag (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Full Flag (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Threshold Flag (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="Receive FIFO Empty Flag"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="Receive FIFO Full Flag"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="Receive FIFO Threshold Flag"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Pointer Error Flag"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="Receive FIFO Pointer Error Flag"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_SPI_IER" edc:nzwidth="0x20" edc:access="wwwwwwww-----------wwwwwwwwwwwww" edc:impl="0xFF001FFF" edc:_addr="0x40004414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="RDRF" edc:nzwidth="0x1" edc:desc="Receive Data Register Full Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:nzwidth="0x1" edc:desc="SPI Transmit Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MODF" edc:nzwidth="0x1" edc:desc="Mode Fault Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="NSSR" edc:nzwidth="0x1" edc:desc="NSS Rising Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="Transmission Registers Empty Enable"/>
            <edc:SFRFieldDef edc:cname="UNDES" edc:nzwidth="0x1" edc:desc="Underrun Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SFERR" edc:nzwidth="0x1" edc:desc="Client Mode Frame Error Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0xB"/>
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_SPI_IDR" edc:nzwidth="0x20" edc:access="wwwwwwww-----------wwwwwwwwwwwww" edc:impl="0xFF001FFF" edc:_addr="0x40004418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="RDRF" edc:nzwidth="0x1" edc:desc="Receive Data Register Full Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:nzwidth="0x1" edc:desc="SPI Transmit Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="MODF" edc:nzwidth="0x1" edc:desc="Mode Fault Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="NSSR" edc:nzwidth="0x1" edc:desc="NSS Rising Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="Transmission Registers Empty Disable"/>
            <edc:SFRFieldDef edc:cname="UNDES" edc:nzwidth="0x1" edc:desc="Underrun Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SFERR" edc:nzwidth="0x1" edc:desc="Client Mode Frame Error Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0xB"/>
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_SPI_IMR" edc:nzwidth="0x20" edc:access="rrrrrrrr-----------rrrrrrrrrrrrr" edc:impl="0xFF001FFF" edc:_addr="0x4000441C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="RDRF" edc:nzwidth="0x1" edc:desc="Receive Data Register Full Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:nzwidth="0x1" edc:desc="SPI Transmit Data Register Empty Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="MODF" edc:nzwidth="0x1" edc:desc="Mode Fault Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="NSSR" edc:nzwidth="0x1" edc:desc="NSS Rising Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="Transmission Registers Empty Mask"/>
            <edc:SFRFieldDef edc:cname="UNDES" edc:nzwidth="0x1" edc:desc="Underrun Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="SFERR" edc:nzwidth="0x1" edc:desc="Client Mode Frame Error Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0xB"/>
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x10" edc:_addr="0x40004420"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_SPI_CSR0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40004430">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity"/>
            <edc:SFRFieldDef edc:cname="NCPHA" edc:nzwidth="0x1" edc:desc="Clock Phase"/>
            <edc:SFRFieldDef edc:cname="CSNAAT" edc:nzwidth="0x1" edc:desc="Chip Select Not Active After Transfer (Ignored if CSAAT = 1)"/>
            <edc:SFRFieldDef edc:cname="CSAAT" edc:nzwidth="0x1" edc:desc="Chip Select Active After Transfer"/>
            <edc:SFRFieldDef edc:cname="BITS" edc:nzwidth="0x4" edc:desc="Bits Per Transfer">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits for transfer" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits for transfer" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="10_BIT" edc:desc="10 bits for transfer" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="11_BIT" edc:desc="11 bits for transfer" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="12_BIT" edc:desc="12 bits for transfer" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="13 bits for transfer" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="14_BIT" edc:desc="14 bits for transfer" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="15_BIT" edc:desc="15 bits for transfer" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="16_BIT" edc:desc="16 bits for transfer" edc:when="(field &amp; 0xF) == 0x08"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCBR" edc:nzwidth="0x8" edc:desc="Serial Clock Bit Rate"/>
            <edc:SFRFieldDef edc:cname="DLYBS" edc:nzwidth="0x8" edc:desc="Delay Before SPCK"/>
            <edc:SFRFieldDef edc:cname="DLYBCT" edc:nzwidth="0x8" edc:desc="Delay Between Consecutive Transfers"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_SPI_CSR1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40004434">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity"/>
            <edc:SFRFieldDef edc:cname="NCPHA" edc:nzwidth="0x1" edc:desc="Clock Phase"/>
            <edc:SFRFieldDef edc:cname="CSNAAT" edc:nzwidth="0x1" edc:desc="Chip Select Not Active After Transfer (Ignored if CSAAT = 1)"/>
            <edc:SFRFieldDef edc:cname="CSAAT" edc:nzwidth="0x1" edc:desc="Chip Select Active After Transfer"/>
            <edc:SFRFieldDef edc:cname="BITS" edc:nzwidth="0x4" edc:desc="Bits Per Transfer">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits for transfer" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits for transfer" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="10_BIT" edc:desc="10 bits for transfer" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="11_BIT" edc:desc="11 bits for transfer" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="12_BIT" edc:desc="12 bits for transfer" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="13 bits for transfer" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="14_BIT" edc:desc="14 bits for transfer" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="15_BIT" edc:desc="15 bits for transfer" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="16_BIT" edc:desc="16 bits for transfer" edc:when="(field &amp; 0xF) == 0x08"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCBR" edc:nzwidth="0x8" edc:desc="Serial Clock Bit Rate"/>
            <edc:SFRFieldDef edc:cname="DLYBS" edc:nzwidth="0x8" edc:desc="Delay Before SPCK"/>
            <edc:SFRFieldDef edc:cname="DLYBCT" edc:nzwidth="0x8" edc:desc="Delay Between Consecutive Transfers"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x40004438"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_SPI_FMR" edc:nzwidth="0x20" edc:access="--nnnnnn--nnnnnn----------nn--nn" edc:impl="0x3F3F0033" edc:_addr="0x40004440">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TXRDYM" edc:nzwidth="0x2" edc:desc="Transmit Data Register Empty Mode">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="TDRE will be at level '1' when at least one data can be written in the transmit FIFO. When DMA is enabled to transfer data, the chunk of 1 data (byte or halfword) must be configured in the DMA depending on FLEX_SPI_CSR0.BITS. If the transfer is performed by software, the access type (byte, halfword) must be defined depending on FLEX_SPI_CSR0.BITS." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="TDRE will be at level '1' when at least two data can be written in the transmit FIFO. FIFO. To minimize system bus load, when DMA is enabled to transfer data, the chunk of 1 word (1 word carries 2 data) must be configured in the DMA. If the transfer is performed by software, the access type must be defined as word (2 data per access, 1 access)." edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXRDYM" edc:nzwidth="0x2" edc:desc="Receive Data Register Full Mode">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="RDRF will be at level '1' when at least one unread data is in the receive FIFO. When DMA is enabled to transfer data and FLEX_SPI_CSR0.BITS=0 (8 bits transfered on SPI line), the chunk of 1 byte must be configured in the DMA. When FLEX_SPI_CSR0.BITS&gt;0 (9 to 16 bits transfered on SPI line), the chunk of 1 halfword must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte or halfword depending on FLEX_SPI_CSR0.BITS." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="RDRF will be at level '1' when at least two unread data are in the receive FIFO. To minimize system bus load, when DMA is enabled to transfer data and FLEX_SPI_CSR0.BITS=0 (8 bits transfered on SPI line), the chunk of 1 halfword (1 halfword carries 2 bytes) must be configured in the DMA. When FLEX_SPI_CSR0.BITS&gt;0 (9 to 16 bits transfered on SPI line), the chunk of 1 word (1 word carries 2 halfwords) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as halfword (2 bytes per access, 1 access when FLEX_SPI_CSR0.BITS=0), or word (2 halfwords per access, 2 accesses when FLEX_SPI_CSR0.BITS&gt;0)." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="RDRF will be at level '1' when at least four unread data are in the receive FIFO. To minimize system bus load, when DMA is enabled to transfer data and FLEX_SPI_CSR0.BITS=0 (8 bits transfered on SPI line), the chunk of 1 word (1 halfword carries 4 bytes) must be configured in the DMA. When FLEX_SPI_CSR0.BITS&gt;0 (9 to 16 bits transfered on SPI line), the chunk of 2 words (1 word carries 4 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as word (4 bytes per access, 1 access when FLEX_SPI_CSR0.BITS=0 or 2 halfwords per access, 2 accesses when FLEX_SPI_CSR0.BITS&gt;0)." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="TXFTHRES" edc:nzwidth="0x6" edc:desc="Transmit FIFO Threshold"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXFTHRES" edc:nzwidth="0x6" edc:desc="Receive FIFO Threshold"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_SPI_FLR" edc:nzwidth="0x20" edc:access="----------rrrrrr----------rrrrrr" edc:impl="0x3F003F" edc:_addr="0x40004444">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TXFL" edc:nzwidth="0x6" edc:desc="Transmit FIFO Level"/>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="RXFL" edc:nzwidth="0x6" edc:desc="Receive FIFO Level"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_SPI_CMPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40004448">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="VAL1" edc:nzwidth="0x10" edc:desc="First Comparison Value for Received Character"/>
            <edc:SFRFieldDef edc:cname="VAL2" edc:nzwidth="0x10" edc:desc="Second Comparison Value for Received Character"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x98" edc:_addr="0x4000444C"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_SPI_WPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:impl="0xFFFFFF07" edc:_addr="0x400044E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="WPEN" edc:nzwidth="0x1" edc:desc="Write Protection Enable"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:nzwidth="0x1" edc:desc="Write Protection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:nzwidth="0x1" edc:desc="Write Protection Control Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of bits WPEN, WPITEN and WPCREN. Always reads as 0" edc:when="(field &amp; 0xFFFFFF) == 0x535049"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_SPI_WPSR" edc:nzwidth="0x20" edc:access="----------------rrrrrrrr-------r" edc:impl="0xFF01" edc:_addr="0x400044E8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="WPVS" edc:nzwidth="0x1" edc:desc="Write Protection Violation Status"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:nzwidth="0x8" edc:desc="Write Protection Violation Source"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x114" edc:_addr="0x400044EC"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_TWI_CR" edc:nzwidth="0x20" edc:access="--ww-www------wwwwwwwwwwwwwwwwww" edc:impl="0x3703FFFF" edc:_addr="0x40004600">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="START" edc:nzwidth="0x1" edc:desc="Send a START Condition"/>
            <edc:SFRFieldDef edc:cname="STOP" edc:nzwidth="0x1" edc:desc="Send a STOP Condition"/>
            <edc:SFRFieldDef edc:cname="MSEN" edc:nzwidth="0x1" edc:desc="TWI Host Mode Enabled"/>
            <edc:SFRFieldDef edc:cname="MSDIS" edc:nzwidth="0x1" edc:desc="TWI Host Mode Disabled"/>
            <edc:SFRFieldDef edc:cname="SVEN" edc:nzwidth="0x1" edc:desc="TWI Client Mode Enabled"/>
            <edc:SFRFieldDef edc:cname="SVDIS" edc:nzwidth="0x1" edc:desc="TWI Client Mode Disabled"/>
            <edc:SFRFieldDef edc:cname="QUICK" edc:nzwidth="0x1" edc:desc="SMBus Quick Command"/>
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="HSEN" edc:nzwidth="0x1" edc:desc="TWI High-Speed Mode Enabled"/>
            <edc:SFRFieldDef edc:cname="HSDIS" edc:nzwidth="0x1" edc:desc="TWI High-Speed Mode Disabled"/>
            <edc:SFRFieldDef edc:cname="SMBEN" edc:nzwidth="0x1" edc:desc="SMBus Mode Enabled"/>
            <edc:SFRFieldDef edc:cname="SMBDIS" edc:nzwidth="0x1" edc:desc="SMBus Mode Disabled"/>
            <edc:SFRFieldDef edc:cname="PECEN" edc:nzwidth="0x1" edc:desc="Packet Error Checking Enable"/>
            <edc:SFRFieldDef edc:cname="PECDIS" edc:nzwidth="0x1" edc:desc="Packet Error Checking Disable"/>
            <edc:SFRFieldDef edc:cname="PECRQ" edc:nzwidth="0x1" edc:desc="PEC Request"/>
            <edc:SFRFieldDef edc:cname="CLEAR" edc:nzwidth="0x1" edc:desc="Bus CLEAR Command"/>
            <edc:SFRFieldDef edc:cname="ACMEN" edc:nzwidth="0x1" edc:desc="Alternative Command Mode Enable"/>
            <edc:SFRFieldDef edc:cname="ACMDIS" edc:nzwidth="0x1" edc:desc="Alternative Command Mode Disable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="TXFCLR" edc:nzwidth="0x1" edc:desc="Transmit FIFO Clear"/>
            <edc:SFRFieldDef edc:cname="RXFCLR" edc:nzwidth="0x1" edc:desc="Receive FIFO Clear"/>
            <edc:SFRFieldDef edc:cname="TXFLCLR" edc:nzwidth="0x1" edc:desc="Transmit FIFO Lock CLEAR"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="FIFODIS" edc:nzwidth="0x1" edc:desc="FIFO Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_TWI_MMR" edc:nzwidth="0x20" edc:access="-------n-nnnnnnn-nnn--nn--------" edc:impl="0x17F7300" edc:_addr="0x40004604">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="IADRSZ" edc:nzwidth="0x2" edc:desc="Internal Device Address Size">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No internal device address" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="1_BYTE" edc:desc="One-byte internal device address" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="2_BYTE" edc:desc="Two-byte internal device address" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="3_BYTE" edc:desc="Three-byte internal device address" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MREAD" edc:nzwidth="0x1" edc:desc="Host Read Direction"/>
            <edc:SFRFieldDef edc:cname="SCLRBL" edc:nzwidth="0x2" edc:desc="SCL Rise Boost Level"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DADR" edc:nzwidth="0x7" edc:desc="Device Address"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NOAP" edc:nzwidth="0x1" edc:desc="No Auto-Stop On NACK Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_TWI_SMR" edc:nzwidth="0x20" edc:access="nnnn-----nnnnnnn-nnnnnnnnnnnnn-n" edc:impl="0xF07F7FFD" edc:_addr="0x40004608">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="NACKEN" edc:nzwidth="0x1" edc:desc="Client Receiver Data Phase NACK Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SMDA" edc:nzwidth="0x1" edc:desc="SMBus Default Address"/>
            <edc:SFRFieldDef edc:cname="SMHH" edc:nzwidth="0x1" edc:desc="SMBus Host Header"/>
            <edc:SFRFieldDef edc:cname="SADAT" edc:nzwidth="0x1" edc:desc="Client Address Treated as Data"/>
            <edc:SFRFieldDef edc:cname="BSEL" edc:nzwidth="0x1" edc:desc="TWI Bus Selection"/>
            <edc:SFRFieldDef edc:cname="SCLWSDIS" edc:nzwidth="0x1" edc:desc="Clock Wait State Disable"/>
            <edc:SFRFieldDef edc:cname="SNIFF" edc:nzwidth="0x1" edc:desc="Client Sniffer Mode"/>
            <edc:SFRFieldDef edc:cname="MASK" edc:nzwidth="0x7" edc:desc="Client Address Mask"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SADR" edc:nzwidth="0x7" edc:desc="Client Address"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="SADR1EN" edc:nzwidth="0x1" edc:desc="Client Address 1 Enable"/>
            <edc:SFRFieldDef edc:cname="SADR2EN" edc:nzwidth="0x1" edc:desc="Client Address 2 Enable"/>
            <edc:SFRFieldDef edc:cname="SADR3EN" edc:nzwidth="0x1" edc:desc="Client Address 3 Enable"/>
            <edc:SFRFieldDef edc:cname="DATAMEN" edc:nzwidth="0x1" edc:desc="Data Matching Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_TWI_IADR" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:impl="0xFFFFFF" edc:_addr="0x4000460C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="IADR" edc:nzwidth="0x18" edc:desc="Internal Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_TWI_CWGR" edc:nzwidth="0x20" edc:access="--nnnnnn---n-nnnnnnnnnnnnnnnnnnn" edc:impl="0x3F17FFFF" edc:_addr="0x40004610">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="CLDIV" edc:nzwidth="0x8" edc:desc="Clock Low Divider"/>
            <edc:SFRFieldDef edc:cname="CHDIV" edc:nzwidth="0x8" edc:desc="Clock High Divider"/>
            <edc:SFRFieldDef edc:cname="CKDIV" edc:nzwidth="0x3" edc:desc="Clock Divider"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BRSRCCLK" edc:nzwidth="0x1" edc:desc="Bit Rate Source Clock">
              <edc:SFRFieldSemantic edc:cname="PERIPH_CLK" edc:desc="The peripheral clock is the source clock for the bit rate generation." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="GCLK is the source clock for the bit rate generation, thus the bit rate can be independent of the core/peripheral clock." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="HOLD" edc:nzwidth="0x6" edc:desc="TWD Hold Time Versus TWCK Falling"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x40004614"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_TWI_SR" edc:nzwidth="0x20" edc:access="-----rrrr-rrrrrrrrrrrrrrrrrrrrrr" edc:impl="0x7BFFFFF" edc:_addr="0x40004620">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TXCOMP" edc:nzwidth="0x1" edc:desc="Transmission Completed (cleared by writing FLEX_TWI_THR)"/>
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="Receive Holding Register Ready (cleared when reading FLEX_TWI_RHR)"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="Transmit Holding Register Ready (cleared by writing FLEX_TWI_THR)"/>
            <edc:SFRFieldDef edc:cname="SVREAD" edc:nzwidth="0x1" edc:desc="Client Read"/>
            <edc:SFRFieldDef edc:cname="SVACC" edc:nzwidth="0x1" edc:desc="Client Access"/>
            <edc:SFRFieldDef edc:cname="GACC" edc:nzwidth="0x1" edc:desc="General Call Access (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:nzwidth="0x1" edc:desc="Underrun Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="NACK" edc:nzwidth="0x1" edc:desc="Not Acknowledged (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="ARBLST" edc:nzwidth="0x1" edc:desc="Arbitration Lost (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SCLWS" edc:nzwidth="0x1" edc:desc="Clock Wait State"/>
            <edc:SFRFieldDef edc:cname="EOSACC" edc:nzwidth="0x1" edc:desc="End Of Client Access (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of RX Buffer (cleared by writing FLEX_TWI_RCR or FLEX_TWI_RNCR)"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of TX Buffer (cleared by writing FLEX_TWI_TCR or FLEX_TWI_TNCR)"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="RX Buffer Full (cleared by writing FLEX_TWI_RCR or FLEX_TWI_RNCR)"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="TX Buffer Empty (cleared by writing FLEX_TWI_TCR or FLEX_TWI_TNCR)"/>
            <edc:SFRFieldDef edc:cname="MCACK" edc:nzwidth="0x1" edc:desc="Host Code Acknowledge (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SMBAF" edc:nzwidth="0x1" edc:desc="SMBus Alert Flag"/>
            <edc:SFRFieldDef edc:cname="TOUT" edc:nzwidth="0x1" edc:desc="Timeout Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="PECERR" edc:nzwidth="0x1" edc:desc="PEC Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SMBDAM" edc:nzwidth="0x1" edc:desc="SMBus Default Address Match (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SMBHHM" edc:nzwidth="0x1" edc:desc="SMBus Host Header Address Match (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFLOCK" edc:nzwidth="0x1" edc:desc="Transmit FIFO Lock"/>
            <edc:SFRFieldDef edc:cname="SCL" edc:nzwidth="0x1" edc:desc="SCL Line Value"/>
            <edc:SFRFieldDef edc:cname="SDA" edc:nzwidth="0x1" edc:desc="SDA Line Value"/>
            <edc:SFRFieldDef edc:cname="SR" edc:nzwidth="0x1" edc:desc="Start Repeated"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_TWI_IER" edc:nzwidth="0x20" edc:access="----------wwww-wwwwwwwwwwwww-www" edc:impl="0x3DFFF7" edc:_addr="0x40004624">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TXCOMP" edc:nzwidth="0x1" edc:desc="Transmission Completed Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="Receive Holding Register Ready Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="Transmit Holding Register Ready Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SVACC" edc:nzwidth="0x1" edc:desc="Client Access Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="GACC" edc:nzwidth="0x1" edc:desc="General Call Access Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:nzwidth="0x1" edc:desc="Underrun Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="NACK" edc:nzwidth="0x1" edc:desc="Not Acknowledge Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ARBLST" edc:nzwidth="0x1" edc:desc="Arbitration Lost Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SCL_WS" edc:nzwidth="0x1" edc:desc="Clock Wait State Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EOSACC" edc:nzwidth="0x1" edc:desc="End Of Client Access Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MCACK" edc:nzwidth="0x1" edc:desc="Host Code Acknowledge Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TOUT" edc:nzwidth="0x1" edc:desc="Timeout Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PECERR" edc:nzwidth="0x1" edc:desc="PEC Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SMBDAM" edc:nzwidth="0x1" edc:desc="SMBus Default Address Match Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SMBHHM" edc:nzwidth="0x1" edc:desc="SMBus Host Header Address Match Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_TWI_IDR" edc:nzwidth="0x20" edc:access="----------wwww-wwwwwwwwwwwww-www" edc:impl="0x3DFFF7" edc:_addr="0x40004628">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TXCOMP" edc:nzwidth="0x1" edc:desc="Transmission Completed Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="Receive Holding Register Ready Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="Transmit Holding Register Ready Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SVACC" edc:nzwidth="0x1" edc:desc="Client Access Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="GACC" edc:nzwidth="0x1" edc:desc="General Call Access Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:nzwidth="0x1" edc:desc="Underrun Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="NACK" edc:nzwidth="0x1" edc:desc="Not Acknowledge Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ARBLST" edc:nzwidth="0x1" edc:desc="Arbitration Lost Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SCL_WS" edc:nzwidth="0x1" edc:desc="Clock Wait State Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="EOSACC" edc:nzwidth="0x1" edc:desc="End Of Client Access Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="MCACK" edc:nzwidth="0x1" edc:desc="Host Code Acknowledge Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TOUT" edc:nzwidth="0x1" edc:desc="Timeout Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="PECERR" edc:nzwidth="0x1" edc:desc="PEC Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SMBDAM" edc:nzwidth="0x1" edc:desc="SMBus Default Address Match Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SMBHHM" edc:nzwidth="0x1" edc:desc="SMBus Host Header Address Match Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_TWI_IMR" edc:nzwidth="0x20" edc:access="----------rrrr-rrrrrrrrrrrrr-rrr" edc:impl="0x3DFFF7" edc:_addr="0x4000462C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TXCOMP" edc:nzwidth="0x1" edc:desc="Transmission Completed Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="Receive Holding Register Ready Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="Transmit Holding Register Ready Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SVACC" edc:nzwidth="0x1" edc:desc="Client Access Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="GACC" edc:nzwidth="0x1" edc:desc="General Call Access Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:nzwidth="0x1" edc:desc="Underrun Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="NACK" edc:nzwidth="0x1" edc:desc="Not Acknowledge Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ARBLST" edc:nzwidth="0x1" edc:desc="Arbitration Lost Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="SCL_WS" edc:nzwidth="0x1" edc:desc="Clock Wait State Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="EOSACC" edc:nzwidth="0x1" edc:desc="End Of Client Access Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="MCACK" edc:nzwidth="0x1" edc:desc="Host Code Acknowledge Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TOUT" edc:nzwidth="0x1" edc:desc="Timeout Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="PECERR" edc:nzwidth="0x1" edc:desc="PEC Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="SMBDAM" edc:nzwidth="0x1" edc:desc="SMBus Default Address Match Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="SMBHHM" edc:nzwidth="0x1" edc:desc="SMBus Host Header Address Match Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_TWI_RHR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40004630">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="RXDATA0" edc:nzwidth="0x8" edc:desc="Host or Client Receive Holding Data 0"/>
            <edc:SFRFieldDef edc:cname="RXDATA1" edc:nzwidth="0x8" edc:desc="Host or Client Receive Holding Data 1"/>
            <edc:AdjustPoint edc:offset="-6"/>
            <edc:SFRFieldDef edc:cname="PSTATE" edc:nzwidth="0x1" edc:desc="Stop State (Client Sniffer Mode only)"/>
            <edc:SFRFieldDef edc:cname="ASTATE" edc:nzwidth="0x2" edc:desc="Acknowledge State (Client Sniffer Mode only)">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Acknowledge or Nacknowledge detected after previously logged data" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ACK" edc:desc="Acknowledge (A) detected after previously logged data" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NACK" edc:desc="Nacknowledge (NA) detected after previously logged data" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="UNDEF" edc:desc="Not defined" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RXDATA2" edc:nzwidth="0x8" edc:desc="Host or Client Receive Holding Data 2"/>
            <edc:SFRFieldDef edc:cname="RXDATA3" edc:nzwidth="0x8" edc:desc="Host or Client Receive Holding Data 3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_TWI_THR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x40004634">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TXDATA0" edc:nzwidth="0x8" edc:desc="Host or Client Transmit Holding Data 0"/>
            <edc:SFRFieldDef edc:cname="TXDATA1" edc:nzwidth="0x8" edc:desc="Host or Client Transmit Holding Data 1"/>
            <edc:SFRFieldDef edc:cname="TXDATA2" edc:nzwidth="0x8" edc:desc="Host or Client Transmit Holding Data 2"/>
            <edc:SFRFieldDef edc:cname="TXDATA3" edc:nzwidth="0x8" edc:desc="Host or Client Transmit Holding Data 3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_TWI_SMBTR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn----nnnn" edc:impl="0xFFFFFF0F" edc:_addr="0x40004638">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="PRESC" edc:nzwidth="0x4" edc:desc="SMBus Clock Prescaler"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TLOWS" edc:nzwidth="0x8" edc:desc="Client Clock Stretch Maximum Cycles"/>
            <edc:SFRFieldDef edc:cname="TLOWM" edc:nzwidth="0x8" edc:desc="Host Clock Stretch Maximum Cycles"/>
            <edc:SFRFieldDef edc:cname="THMAX" edc:nzwidth="0x8" edc:desc="Clock High Maximum Cycles"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_TWI_HSR" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:impl="0xFF" edc:_addr="0x4000463C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="MCODE" edc:nzwidth="0x8" edc:desc="TWI High Speed Host Code"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_TWI_ACR" edc:nzwidth="0x20" edc:access="------nnnnnnnnnn------nnnnnnnnnn" edc:impl="0x3FF03FF" edc:_addr="0x40004640">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="DATAL" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Transfer Direction"/>
            <edc:SFRFieldDef edc:cname="PEC" edc:nzwidth="0x1" edc:desc="PEC Request (SMBus Mode only)"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="NDATAL" edc:nzwidth="0x8" edc:desc="Next Data Length"/>
            <edc:SFRFieldDef edc:cname="NDIR" edc:nzwidth="0x1" edc:desc="Next Transfer Direction"/>
            <edc:SFRFieldDef edc:cname="NPEC" edc:nzwidth="0x1" edc:desc="Next PEC Request (SMBus Mode only)"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_TWI_FILTR" edc:nzwidth="0x20" edc:access="---------------------nnn------nn" edc:impl="0x703" edc:_addr="0x40004644">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="FILT" edc:nzwidth="0x1" edc:desc="RX Digital Filter"/>
            <edc:SFRFieldDef edc:cname="PADFEN" edc:nzwidth="0x1" edc:desc="PAD Filter Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="THRES" edc:nzwidth="0x3" edc:desc="Digital Filter Threshold"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_TWI_HSCWGR" edc:nzwidth="0x20" edc:access="-------------nnnnnnnnnnnnnnnnnnn" edc:impl="0x7FFFF" edc:_addr="0x40004648">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="HSCLDIV" edc:nzwidth="0x8" edc:desc="High Speed Clock Low Divider"/>
            <edc:SFRFieldDef edc:cname="HSCHDIV" edc:nzwidth="0x8" edc:desc="High Speed Clock High Divider"/>
            <edc:SFRFieldDef edc:cname="HSCKDIV" edc:nzwidth="0x3" edc:desc="High Speed Clock Divider"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_TWI_SWMR" edc:nzwidth="0x20" edc:access="nnnnnnnn-nnnnnnn-nnnnnnn-nnnnnnn" edc:impl="0xFF7F7F7F" edc:_addr="0x4000464C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="SADR1" edc:nzwidth="0x7" edc:desc="Client Address 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SADR2" edc:nzwidth="0x7" edc:desc="Client Address 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SADR3" edc:nzwidth="0x7" edc:desc="Client Address 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DATAM" edc:nzwidth="0x8" edc:desc="Data Match"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_TWI_FMR" edc:nzwidth="0x20" edc:access="--nnnnnn--nnnnnn----------nn--nn" edc:impl="0x3F3F0033" edc:_addr="0x40004650">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TXRDYM" edc:nzwidth="0x2" edc:desc="Transmitter Ready Mode">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="TXRDY will be at level '1' when at least one data can be written in the transmit FIFO. When DMA is enabled to transfer data, the chunk of 1 byte must be configured in the DMA. If the transfer is performed by software, the access type must be defined as byte." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="TXRDY will be at level '1' when at least two data can be written in the transmit FIFO. To minimize system bus load, when DMA is enabled to transfer data, the chunk of 1 halfword (1 halfword carries 2 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 2 accesses) or halfword (2 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="TXRDY will be at level '1' when at least four data can be written in the transmit FIFO. To minimize system bus load, when DMA is enabled to transfer data, the chunk of 1 word (1 word carries 4 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 4 accesses), halfword (2 bytes per access, 2 accesses) or word (4 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXRDYM" edc:nzwidth="0x2" edc:desc="Receiver Ready Mode">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="RXRDY will be at level '1' when at least one unread data is in the receive FIFO. When DMA is enabled to transfer data the chunk of 1 byte must be configured in the DMA. If the transfer is performed by software, the access type (byte, halfword) must be defined accordingly." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="RXRDY will be at level '1' when at least two unread data are in the receive FIFO. To minimize system bus load, when DMA is enabled to transfer data, the chunk of 1 halfword (1 halfword carries 2 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 2 accesses) or halfword (2 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="RXRDY will be at level '1' when at least four unread data are in the receive FIFO. To minimize system bus load, when DMA is enabled to transfer data, the chunk of 1 word (1 word carries 4 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 4 accesses), halfword (2 bytes per access, 2 accesses) or word (4 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="TXFTHRES" edc:nzwidth="0x6" edc:desc="Transmit FIFO Threshold"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXFTHRES" edc:nzwidth="0x6" edc:desc="Receive FIFO Threshold"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_TWI_FLR" edc:nzwidth="0x20" edc:access="----------rrrrrr----------rrrrrr" edc:impl="0x3F003F" edc:_addr="0x40004654">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TXFL" edc:nzwidth="0x6" edc:desc="Transmit FIFO Level"/>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="RXFL" edc:nzwidth="0x6" edc:desc="Receive FIFO Level"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x40004658"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_TWI_FSR" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:impl="0xFF" edc:_addr="0x40004660">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Empty Flag (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Full Flag (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Threshold Flag (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="Receive FIFO Empty Flag"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="Receive FIFO Full Flag"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="Receive FIFO Threshold Flag"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Pointer Error Flag"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="Receive FIFO Pointer Error Flag"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_TWI_FIER" edc:nzwidth="0x20" edc:access="------------------------wwwwwwww" edc:impl="0xFF" edc:_addr="0x40004664">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_TWI_FIDR" edc:nzwidth="0x20" edc:access="------------------------wwwwwwww" edc:impl="0xFF" edc:_addr="0x40004668">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_TWI_FIMR" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:impl="0xFF" edc:_addr="0x4000466C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x74" edc:_addr="0x40004670"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_TWI_WPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:impl="0xFFFFFF07" edc:_addr="0x400046E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="WPEN" edc:nzwidth="0x1" edc:desc="Write Protection Enable"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:nzwidth="0x1" edc:desc="Write Protection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:nzwidth="0x1" edc:desc="Write Protection Control Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of bits WPEN, WPITEN and WPCREN. Always reads as 0" edc:when="(field &amp; 0xFFFFFF) == 0x545749"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM1" edc:cname="FLEX_TWI_WPSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrr-------r" edc:impl="0xFFFFFF01" edc:_addr="0x400046E8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="WPVS" edc:nzwidth="0x1" edc:desc="Write Protect Violation Status (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:nzwidth="0x18" edc:desc="Write Protection Violation Source"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3914" edc:_addr="0x400046EC"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_MR" edc:nzwidth="0x20" edc:access="------------------------------nn" edc:impl="0x3" edc:_addr="0x40008000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="OPMODE" edc:nzwidth="0x2" edc:desc="FLEXCOM Operating Mode">
              <edc:SFRFieldSemantic edc:cname="NO_COM" edc:desc="No communication" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USART" edc:desc="All UART related protocols are selected (RS232, RS485, IrDA, ISO7816, LIN,) SPI/TWI related registers are not accessible and have no impact on IOs." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SPI" edc:desc="SPI operating mode is selected. USART/TWI related registers are not accessible and have no impact on IOs." edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TWI" edc:desc="All TWI related protocols are selected (TWI, SMBus). USART/SPI related registers are not accessible and have no impact on IOs." edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x40008004"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_RHR" edc:nzwidth="0x20" edc:access="----------------rrrrrrrrrrrrrrrr" edc:impl="0xFFFF" edc:_addr="0x40008010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="RXDATA" edc:nzwidth="0x10" edc:desc="Receive Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x40008014"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_THR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x40008020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TXDATA" edc:nzwidth="0x10" edc:desc="Transmit Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xDC" edc:_addr="0x40008024"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_RPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40008100">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="RXPTR" edc:nzwidth="0x20" edc:desc="Receive Pointer Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_RCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x40008104">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="RXCTR" edc:nzwidth="0x10" edc:desc="Receive Counter Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_TPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40008108">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TXPTR" edc:nzwidth="0x20" edc:desc="Transmit Counter Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_TCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x4000810C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TXCTR" edc:nzwidth="0x10" edc:desc="Transmit Counter Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_RNPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40008110">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="RXNPTR" edc:nzwidth="0x20" edc:desc="Receive Next Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_RNCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x40008114">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="RXNCTR" edc:nzwidth="0x10" edc:desc="Receive Next Counter"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_TNPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40008118">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TXNPTR" edc:nzwidth="0x20" edc:desc="Transmit Next Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_TNCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x4000811C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TXNCTR" edc:nzwidth="0x10" edc:desc="Transmit Counter Next"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_PTCR" edc:nzwidth="0x20" edc:access="-------w----wwww------ww------ww" edc:impl="0x10F0303" edc:_addr="0x40008120">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="RXTEN" edc:nzwidth="0x1" edc:desc="Receiver Transfer Enable"/>
            <edc:SFRFieldDef edc:cname="RXTDIS" edc:nzwidth="0x1" edc:desc="Receiver Transfer Disable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="TXTEN" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Enable"/>
            <edc:SFRFieldDef edc:cname="TXTDIS" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Disable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="RXCBEN" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Enable"/>
            <edc:SFRFieldDef edc:cname="RXCBDIS" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Disable"/>
            <edc:SFRFieldDef edc:cname="TXCBEN" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Enable"/>
            <edc:SFRFieldDef edc:cname="TXCBDIS" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Disable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ERRCLR" edc:nzwidth="0x1" edc:desc="Transfer Bus Error Clear"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_PTSR" edc:nzwidth="0x20" edc:access="-------r-----r-r-------r-------r" edc:impl="0x1050101" edc:_addr="0x40008124">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="RXTEN" edc:nzwidth="0x1" edc:desc="Receiver Transfer Enable"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="TXTEN" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Enable"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="RXCBEN" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXCBEN" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Transfer Bus Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_PWPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:impl="0xFFFFFF07" edc:_addr="0x40008128">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="WPPTREN" edc:nzwidth="0x1" edc:desc="Write Protection Pointer Registers Enable"/>
            <edc:SFRFieldDef edc:cname="WPCTREN" edc:nzwidth="0x1" edc:desc="Write Protection Counter Registers Enable"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:nzwidth="0x1" edc:desc="Write Protection Control Register Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x504443"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xD4" edc:_addr="0x4000812C"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_US_CR" edc:nzwidth="0x20" edc:access="ww-w-www--wwww--wwwwwwwwwwwwww--" edc:impl="0xD73CFFFC" edc:_addr="0x40008200">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RSTRX" edc:nzwidth="0x1" edc:desc="Reset Receiver"/>
            <edc:SFRFieldDef edc:cname="RSTTX" edc:nzwidth="0x1" edc:desc="Reset Transmitter"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
            <edc:SFRFieldDef edc:cname="RXDIS" edc:nzwidth="0x1" edc:desc="Receiver Disable"/>
            <edc:SFRFieldDef edc:cname="TXEN" edc:nzwidth="0x1" edc:desc="Transmitter Enable"/>
            <edc:SFRFieldDef edc:cname="TXDIS" edc:nzwidth="0x1" edc:desc="Transmitter Disable"/>
            <edc:SFRFieldDef edc:cname="RSTSTA" edc:nzwidth="0x1" edc:desc="Reset Status Bits"/>
            <edc:SFRFieldDef edc:cname="STTBRK" edc:nzwidth="0x1" edc:desc="Start Break"/>
            <edc:SFRFieldDef edc:cname="STPBRK" edc:nzwidth="0x1" edc:desc="Stop Break"/>
            <edc:SFRFieldDef edc:cname="STTTO" edc:nzwidth="0x1" edc:desc="Clear TIMEOUT Flag and Start Timeout After Next Character Received"/>
            <edc:SFRFieldDef edc:cname="SENDA" edc:nzwidth="0x1" edc:desc="Send Address"/>
            <edc:SFRFieldDef edc:cname="RSTIT" edc:nzwidth="0x1" edc:desc="Reset Iterations"/>
            <edc:SFRFieldDef edc:cname="RSTNACK" edc:nzwidth="0x1" edc:desc="Reset Non Acknowledge"/>
            <edc:SFRFieldDef edc:cname="RETTO" edc:nzwidth="0x1" edc:desc="Start Timeout Immediately"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RTSEN" edc:nzwidth="0x1" edc:desc="Request to Send Enable"/>
            <edc:SFRFieldDef edc:cname="RTSDIS" edc:nzwidth="0x1" edc:desc="Request to Send Disable"/>
            <edc:SFRFieldDef edc:cname="LINABT" edc:nzwidth="0x1" edc:desc="Abort LIN Transmission"/>
            <edc:SFRFieldDef edc:cname="LINWKUP" edc:nzwidth="0x1" edc:desc="Send LIN Wakeup Signal"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TXFCLR" edc:nzwidth="0x1" edc:desc="Transmit FIFO Clear"/>
            <edc:SFRFieldDef edc:cname="RXFCLR" edc:nzwidth="0x1" edc:desc="Receive FIFO Clear"/>
            <edc:SFRFieldDef edc:cname="TXFLCLR" edc:nzwidth="0x1" edc:desc="Transmit FIFO Lock CLEAR"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="REQCLR" edc:nzwidth="0x1" edc:desc="Request to Clear the Comparison Trigger"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="FIFODIS" edc:nzwidth="0x1" edc:desc="FIFO Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_US_MR" edc:nzwidth="0x20" edc:access="nnnn-nnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:impl="0xF7FFFFFF" edc:_addr="0x40008204">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="USART_MODE" edc:nzwidth="0x4" edc:desc="USART Mode of Operation">
              <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Normal mode" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="USCLKS" edc:nzwidth="0x2" edc:desc="Clock Selection">
              <edc:SFRFieldSemantic edc:cname="MCK" edc:desc="Peripheral clock is selected." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DIV" edc:desc="Peripheral clock divided (DIV=8) is selected." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="PCK" edc:desc="PMC programmable clock (PCK) is selected. If the SCK pin is driven (CLKO = 1), the CD field must be greater than 1." edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SCK" edc:desc="Serial clock (SCK) is selected." edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CHRL" edc:nzwidth="0x2" edc:desc="Character Length">
              <edc:SFRFieldSemantic edc:cname="_5_BIT" edc:desc="Character length is 5 bits." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="_6_BIT" edc:desc="Character length is 6 bits." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_7_BIT" edc:desc="Character length is 7 bits." edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BIT" edc:desc="Character length is 8 bits." edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SYNC" edc:nzwidth="0x1" edc:desc="Synchronous Mode Select"/>
            <edc:SFRFieldDef edc:cname="PAR" edc:nzwidth="0x3" edc:desc="Parity Type">
              <edc:SFRFieldSemantic edc:cname="EVEN" edc:desc="Even parity" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ODD" edc:desc="Odd parity" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SPACE" edc:desc="Parity forced to 0 (Space)" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="MARK" edc:desc="Parity forced to 1 (Mark)" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="NO" edc:desc="No parity" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="MULTIDROP" edc:desc="Multidrop mode" edc:when="(field &amp; 0x7) == 0x06"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NBSTOP" edc:nzwidth="0x2" edc:desc="Number of Stop Bits">
              <edc:SFRFieldSemantic edc:cname="_1_BIT" edc:desc="1 stop bit" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="_1_5_BIT" edc:desc="1.5 stop bit (SYNC = 0) or reserved (SYNC = 1)" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_2_BIT" edc:desc="2 stop bits" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CHMODE" edc:nzwidth="0x2" edc:desc="Channel Mode">
              <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Normal mode" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="AUTOMATIC" edc:desc="Automatic Echo. Receiver input is connected to the TXD pin." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="LOCAL_LOOPBACK" edc:desc="Local Loopback. Transmitter output is connected to the Receiver Input." edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="REMOTE_LOOPBACK" edc:desc="Remote Loopback. RXD pin is internally connected to the TXD pin." edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSBF" edc:nzwidth="0x1" edc:desc="Bit Order"/>
            <edc:SFRFieldDef edc:cname="MODE9" edc:nzwidth="0x1" edc:desc="9-bit Character Length"/>
            <edc:SFRFieldDef edc:cname="CLKO" edc:nzwidth="0x1" edc:desc="Clock Output Select"/>
            <edc:SFRFieldDef edc:cname="OVER" edc:nzwidth="0x1" edc:desc="Oversampling Mode"/>
            <edc:SFRFieldDef edc:cname="OOKRXD" edc:nzwidth="0x1" edc:desc="OOK Demodulation Input Selection"/>
            <edc:SFRFieldDef edc:cname="OOKEN" edc:nzwidth="0x1" edc:desc="OOK Modulation/Demodulation Enabled"/>
            <edc:SFRFieldDef edc:cname="VAR_SYNC" edc:nzwidth="0x1" edc:desc="Variable Synchronization of Command/Data Sync Start Frame Delimiter"/>
            <edc:SFRFieldDef edc:cname="INVDATA" edc:nzwidth="0x1" edc:desc="Inverted Data"/>
            <edc:SFRFieldDef edc:cname="MAX_ITERATION" edc:nzwidth="0x3" edc:desc="Maximum Number of Automatic Iteration"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FILTER" edc:nzwidth="0x1" edc:desc="Receive Line Filter"/>
            <edc:SFRFieldDef edc:cname="MAN" edc:nzwidth="0x1" edc:desc="Manchester Encoder/Decoder Enable"/>
            <edc:SFRFieldDef edc:cname="MODSYNC" edc:nzwidth="0x1" edc:desc="Manchester Synchronization Mode"/>
            <edc:SFRFieldDef edc:cname="ONEBIT" edc:nzwidth="0x1" edc:desc="Start Frame Delimiter Selector"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_US_IER" edc:nzwidth="0x20" edc:access="wwwwwwww-w--w---wwwwwwwwwwwwwwww" edc:impl="0xFF48FFFF" edc:_addr="0x40008208">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="RXRDY Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="TXRDY Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Receiver Break Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Transfer Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FRAME" edc:nzwidth="0x1" edc:desc="Framing Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PARE" edc:nzwidth="0x1" edc:desc="Parity Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TIMEOUT" edc:nzwidth="0x1" edc:desc="Timeout Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="TXEMPTY Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ITER" edc:nzwidth="0x1" edc:desc="Max number of Repetitions Reached Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Buffer Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Buffer Full Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINBK" edc:nzwidth="0x1" edc:desc="LIN Break Sent or LIN Break Received Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINID" edc:nzwidth="0x1" edc:desc="LIN Identifier Sent or LIN Identifier Received Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINTC" edc:nzwidth="0x1" edc:desc="LIN Transfer Completed Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear to Send Input Change Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MANE" edc:nzwidth="0x1" edc:desc="Manchester Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINBE" edc:nzwidth="0x1" edc:desc="LIN Bus Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINISFE" edc:nzwidth="0x1" edc:desc="LIN Inconsistent Synch Field Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINIPE" edc:nzwidth="0x1" edc:desc="LIN Identifier Parity Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINCE" edc:nzwidth="0x1" edc:desc="LIN Checksum Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINSNRE" edc:nzwidth="0x1" edc:desc="LIN Client Not Responding Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINSTE" edc:nzwidth="0x1" edc:desc="LIN Synch Tolerance Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINHTE" edc:nzwidth="0x1" edc:desc="LIN Header Timeout Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_US_IDR" edc:nzwidth="0x20" edc:access="wwwwwwww-w--w---wwwwwwwwwwwwwwww" edc:impl="0xFF48FFFF" edc:_addr="0x4000820C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="RXRDY Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="TXRDY Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Receiver Break Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Transfer Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="FRAME" edc:nzwidth="0x1" edc:desc="Framing Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="PARE" edc:nzwidth="0x1" edc:desc="Parity Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TIMEOUT" edc:nzwidth="0x1" edc:desc="Timeout Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="TXEMPTY Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ITER" edc:nzwidth="0x1" edc:desc="Max Number of Repetitions Reached Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Buffer Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Buffer Full Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINBK" edc:nzwidth="0x1" edc:desc="LIN Break Sent or LIN Break Received Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINID" edc:nzwidth="0x1" edc:desc="LIN Identifier Sent or LIN Identifier Received Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINTC" edc:nzwidth="0x1" edc:desc="LIN Transfer Completed Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear to Send Input Change Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MANE" edc:nzwidth="0x1" edc:desc="Manchester Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINBE" edc:nzwidth="0x1" edc:desc="LIN Bus Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINISFE" edc:nzwidth="0x1" edc:desc="LIN Inconsistent Synch Field Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINIPE" edc:nzwidth="0x1" edc:desc="LIN Identifier Parity Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINCE" edc:nzwidth="0x1" edc:desc="LIN Checksum Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINSNRE" edc:nzwidth="0x1" edc:desc="LIN Client Not Responding Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINSTE" edc:nzwidth="0x1" edc:desc="LIN Synch Tolerance Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINHTE" edc:nzwidth="0x1" edc:desc="LIN Header Timeout Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_US_IMR" edc:nzwidth="0x20" edc:access="rrrrrrrr-r--r---rrrrrrrrrrrrrrrr" edc:impl="0xFF48FFFF" edc:_addr="0x40008210">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="RXRDY Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="TXRDY Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Receiver Break Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Transfer Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="FRAME" edc:nzwidth="0x1" edc:desc="Framing Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="PARE" edc:nzwidth="0x1" edc:desc="Parity Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TIMEOUT" edc:nzwidth="0x1" edc:desc="Timeout Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="TXEMPTY Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ITER" edc:nzwidth="0x1" edc:desc="Max Number of Repetitions Reached Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Buffer Empty Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Buffer Full Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINBK" edc:nzwidth="0x1" edc:desc="LIN Break Sent or LIN Break Received Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINID" edc:nzwidth="0x1" edc:desc="LIN Identifier Sent or LIN Identifier Received Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINTC" edc:nzwidth="0x1" edc:desc="LIN Transfer Completed Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear to Send Input Change Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MANE" edc:nzwidth="0x1" edc:desc="Manchester Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINBE" edc:nzwidth="0x1" edc:desc="LIN Bus Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINISFE" edc:nzwidth="0x1" edc:desc="LIN Inconsistent Synch Field Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINIPE" edc:nzwidth="0x1" edc:desc="LIN Identifier Parity Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINCE" edc:nzwidth="0x1" edc:desc="LIN Checksum Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINSNRE" edc:nzwidth="0x1" edc:desc="LIN Client Not Responding Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINSTE" edc:nzwidth="0x1" edc:desc="LIN Synch Tolerance Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINHTE" edc:nzwidth="0x1" edc:desc="LIN Header Timeout Error Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_US_CSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrr--r---rrrrrrrrrrrrrrrr" edc:impl="0xFFC8FFFF" edc:_addr="0x40008214">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="Receiver Ready (cleared by reading FLEX_US_RHR)"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="Transmitter Ready (cleared by writing FLEX_US_THR)"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received/End of Break"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of RX Buffer (cleared by writing FLEX_US_RCR or FLEX_US_RNCR)"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of TX Buffer (cleared by writing FLEX_US_TCR or FLEX_US_TNCR)"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error"/>
            <edc:SFRFieldDef edc:cname="FRAME" edc:nzwidth="0x1" edc:desc="Framing Error"/>
            <edc:SFRFieldDef edc:cname="PARE" edc:nzwidth="0x1" edc:desc="Parity Error"/>
            <edc:SFRFieldDef edc:cname="TIMEOUT" edc:nzwidth="0x1" edc:desc="Receiver Timeout"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="Transmitter Empty (cleared by writing FLEX_US_THR)"/>
            <edc:SFRFieldDef edc:cname="ITER" edc:nzwidth="0x1" edc:desc="Max Number of Repetitions Reached"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="TX Buffer Empty (cleared by writing FLEX_US_TCR or FLEX_US_TNCR)"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="RX Buffer Full (cleared by writing FLEX_US_RCR or FLEX_US_RNCR)"/>
            <edc:SFRFieldDef edc:cname="LINBK" edc:nzwidth="0x1" edc:desc="LIN Break Sent or LIN Break Received"/>
            <edc:SFRFieldDef edc:cname="LINID" edc:nzwidth="0x1" edc:desc="LIN Identifier Sent or LIN Identifier Received"/>
            <edc:SFRFieldDef edc:cname="LINTC" edc:nzwidth="0x1" edc:desc="LIN Transfer Completed"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear to Send Input Change Flag"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Status"/>
            <edc:SFRFieldDef edc:cname="LINBLS" edc:nzwidth="0x1" edc:desc="LIN Bus Line Status"/>
            <edc:SFRFieldDef edc:cname="MANE" edc:nzwidth="0x1" edc:desc="Manchester Error"/>
            <edc:SFRFieldDef edc:cname="LINBE" edc:nzwidth="0x1" edc:desc="LIN Bit Error"/>
            <edc:SFRFieldDef edc:cname="LINISFE" edc:nzwidth="0x1" edc:desc="LIN Inconsistent Synch Field Error"/>
            <edc:SFRFieldDef edc:cname="LINIPE" edc:nzwidth="0x1" edc:desc="LIN Identifier Parity Error"/>
            <edc:SFRFieldDef edc:cname="LINCE" edc:nzwidth="0x1" edc:desc="LIN Checksum Error"/>
            <edc:SFRFieldDef edc:cname="LINSNRE" edc:nzwidth="0x1" edc:desc="LIN Client Not Responding Error"/>
            <edc:SFRFieldDef edc:cname="LINSTE" edc:nzwidth="0x1" edc:desc="LIN Synch Tolerance Error"/>
            <edc:SFRFieldDef edc:cname="LINHTE" edc:nzwidth="0x1" edc:desc="LIN Header Timeout Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_US_RHR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40008218">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="RXCHR0" edc:nzwidth="0x8" edc:desc="Received Characters"/>
            <edc:SFRFieldDef edc:cname="RXCHR1" edc:nzwidth="0x8" edc:desc="Received Characters"/>
            <edc:AdjustPoint edc:offset="-1"/>
            <edc:SFRFieldDef edc:cname="RXSYNH" edc:nzwidth="0x1" edc:desc="Received Sync"/>
            <edc:SFRFieldDef edc:cname="RXCHR2" edc:nzwidth="0x8" edc:desc="Received Characters"/>
            <edc:SFRFieldDef edc:cname="RXCHR3" edc:nzwidth="0x8" edc:desc="Received Characters"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_US_THR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4000821C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TXCHR0" edc:nzwidth="0x8" edc:desc="Character to be Transmitted"/>
            <edc:SFRFieldDef edc:cname="TXCHR1" edc:nzwidth="0x8" edc:desc="Character to be Transmitted"/>
            <edc:AdjustPoint edc:offset="-1"/>
            <edc:SFRFieldDef edc:cname="TXSYNH" edc:nzwidth="0x1" edc:desc="Sync Field to be Transmitted"/>
            <edc:SFRFieldDef edc:cname="TXCHR2" edc:nzwidth="0x8" edc:desc="Character to be Transmitted"/>
            <edc:SFRFieldDef edc:cname="TXCHR3" edc:nzwidth="0x8" edc:desc="Character to be Transmitted"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_US_BRGR" edc:nzwidth="0x20" edc:access="-------------nnnnnnnnnnnnnnnnnnn" edc:impl="0x7FFFF" edc:_addr="0x40008220">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="CD" edc:nzwidth="0x10" edc:desc="Clock Divider"/>
            <edc:SFRFieldDef edc:cname="FP" edc:nzwidth="0x3" edc:desc="Fractional Part"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_US_RTOR" edc:nzwidth="0x20" edc:access="---------------nnnnnnnnnnnnnnnnn" edc:impl="0x1FFFF" edc:_addr="0x40008224">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TO" edc:nzwidth="0x11" edc:desc="Timeout Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_US_TTGR" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:impl="0xFF" edc:_addr="0x40008228">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TG" edc:nzwidth="0x8" edc:desc="Timeguard Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x14" edc:_addr="0x4000822C"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_US_FIDI" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x40008240">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="FI_DI_RATIO" edc:nzwidth="0x10" edc:desc="FI Over DI Ratio Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_US_NER" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:impl="0xFF" edc:_addr="0x40008244">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="NB_ERRORS" edc:nzwidth="0x8" edc:desc="Number of Errors"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x40008248"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_US_IF" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:impl="0xFF" edc:_addr="0x4000824C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="IRDA_FILTER" edc:nzwidth="0x8" edc:desc="IrDA Filter"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_US_MAN" edc:nzwidth="0x20" edc:access="nnnn--nn----nnnn---n--nn----nnnn" edc:impl="0xF30F130F" edc:_addr="0x40008250">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TX_PL" edc:nzwidth="0x4" edc:desc="Transmitter Preamble Length"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TX_PP" edc:nzwidth="0x2" edc:desc="Transmitter Preamble Pattern">
              <edc:SFRFieldSemantic edc:cname="ALL_ONE" edc:desc="The preamble is composed of '1's" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ALL_ZERO" edc:desc="The preamble is composed of '0's" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ZERO_ONE" edc:desc="The preamble is composed of '01's" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="ONE_ZERO" edc:desc="The preamble is composed of '10's" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TX_MPOL" edc:nzwidth="0x1" edc:desc="Transmitter Manchester Polarity"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RX_PL" edc:nzwidth="0x4" edc:desc="Receiver Preamble Length"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="RX_PP" edc:nzwidth="0x2" edc:desc="Receiver Preamble Pattern detected">
              <edc:SFRFieldSemantic edc:cname="ALL_ONE" edc:desc="The preamble is composed of '1's" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ALL_ZERO" edc:desc="The preamble is composed of '0's" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ZERO_ONE" edc:desc="The preamble is composed of '01's" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="ONE_ZERO" edc:desc="The preamble is composed of '10's" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RX_MPOL" edc:nzwidth="0x1" edc:desc="Receiver Manchester Polarity"/>
            <edc:SFRFieldDef edc:cname="ONE" edc:nzwidth="0x1" edc:desc="Must Be Set to 1"/>
            <edc:SFRFieldDef edc:cname="DRIFT" edc:nzwidth="0x1" edc:desc="Drift Compensation"/>
            <edc:SFRFieldDef edc:cname="RXIDLEV" edc:nzwidth="0x1" edc:desc="Receiver Idle Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_US_LINMR" edc:nzwidth="0x20" edc:access="--------------nnnnnnnnnnnnnnnnnn" edc:impl="0x3FFFF" edc:_addr="0x40008254">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="NACT" edc:nzwidth="0x2" edc:desc="LIN Node Action">
              <edc:SFRFieldSemantic edc:cname="PUBLISH" edc:desc="The USART transmits the response." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SUBSCRIBE" edc:desc="The USART receives the response." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="IGNORE" edc:desc="The USART does not transmit and does not receive the response." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PARDIS" edc:nzwidth="0x1" edc:desc="Parity Disable"/>
            <edc:SFRFieldDef edc:cname="CHKDIS" edc:nzwidth="0x1" edc:desc="Checksum Disable"/>
            <edc:SFRFieldDef edc:cname="CHKTYP" edc:nzwidth="0x1" edc:desc="Checksum Type"/>
            <edc:SFRFieldDef edc:cname="DLM" edc:nzwidth="0x1" edc:desc="Data Length Mode"/>
            <edc:SFRFieldDef edc:cname="FSDIS" edc:nzwidth="0x1" edc:desc="Frame Slot Mode Disable"/>
            <edc:SFRFieldDef edc:cname="WKUPTYP" edc:nzwidth="0x1" edc:desc="Wakeup Signal Type"/>
            <edc:SFRFieldDef edc:cname="DLC" edc:nzwidth="0x8" edc:desc="Data Length Control"/>
            <edc:SFRFieldDef edc:cname="PDCM" edc:nzwidth="0x1" edc:desc="PDC Mode"/>
            <edc:SFRFieldDef edc:cname="SYNCDIS" edc:nzwidth="0x1" edc:desc="Synchronization Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_US_LINIR" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:impl="0xFF" edc:_addr="0x40008258">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="IDCHR" edc:nzwidth="0x8" edc:desc="Identifier Character"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_US_LINBRR" edc:nzwidth="0x20" edc:access="-------------rrrrrrrrrrrrrrrrrrr" edc:impl="0x7FFFF" edc:_addr="0x4000825C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="LINCD" edc:nzwidth="0x10" edc:desc="Clock Divider after Synchronization"/>
            <edc:SFRFieldDef edc:cname="LINFP" edc:nzwidth="0x3" edc:desc="Fractional Part after Synchronization"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x30" edc:_addr="0x40008260"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_US_CMPR" edc:nzwidth="0x20" edc:access="-------nnnnnnnnn-nnn---nnnnnnnnn" edc:impl="0x1FF71FF" edc:_addr="0x40008290">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="VAL1" edc:nzwidth="0x9" edc:desc="First Comparison Value for Received Character"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CMPMODE" edc:nzwidth="0x2" edc:desc="Comparison Mode">
              <edc:SFRFieldSemantic edc:cname="FLAG_ONLY" edc:desc="Any character is received and comparison function drives CMP flag." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="START_CONDITION" edc:desc="Comparison condition must be met to start reception." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FILTER" edc:desc="Comparison must be met to receive the current data only" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMPPAR" edc:nzwidth="0x1" edc:desc="Compare Parity"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="VAL2" edc:nzwidth="0x9" edc:desc="Second Comparison Value for Received Character"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x40008294"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_US_FMR" edc:nzwidth="0x20" edc:access="--nnnnnn--nnnnnn--nnnnnnn-nn--nn" edc:impl="0x3F3F3FB3" edc:_addr="0x400082A0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TXRDYM" edc:nzwidth="0x2" edc:desc="Transmitter Ready Mode">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="TXRDY will be at level '1' when at least one data can be written in the transmit FIFO. When DMA is enabled to transfer data and FLEX_US_MR.MODE9=0 (up to 8 bits to transfer on the line), the chunk of 1 byte must be configured in the DMA. If the transfer is performed by software, the access type must be defined as a byte." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="TXRDY will be at level '1' when at least two data can be written in the transmit FIFO. To minimize system bus load, when DMA is enabled to transfer data and FLEX_US_MR.MODE9=0 (up to 8 bits to transfer on the line), the chunk of 1 halfword (1 halfword carries 2 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 2 accesses) or halfword (2 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="TXRDY will be at level '1' when at least four data can be written in the transmit FIFO. To minimize system bus load, when DMA is enabled to transfer data and FLEX_US_MR.MODE9=0 (up to 8 bits to transfer on the line), the chunk of 1 word (1 word carries 4 bytes) must be configured in the DMA (chunk size=1 and word access). If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 4 accesses), halfword (2 bytes per access, 2 accesses) or word (4 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXRDYM" edc:nzwidth="0x2" edc:desc="Receiver Ready Mode">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="RXRDY will be at level '1' when at least one unread data is in the receive FIFO. When DMA is enabled to transfer data and FLEX_US_MR.MODE9=0 (up to 8 bits to transfer on the line), the chunk of 1 byte must be configured in the DMA. If the transfer is performed by software, the access type must be defined as a byte." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="RXRDY will be at level '1' when at least two unread data are in the receive FIFO. To minimize system bus load, when DMA is enabled to transfer data and FLEX_US_MR.MODE9=0 (up to 8 bits to transfer on the line), the chunk of 1 halfword (1 halfword carries 2 bytes) must be configured in the DMA (chunk size=1 and halfword access). If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 2 accesses) or halfword (2 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="RXRDY will be at level '1' when at least four unread data are in the receive FIFO. To minimize system bus load, when DMA is enabled to transfer data and FLEX_US_MR.MODE9=0 (up to 8 bits to transfer on the line), the chunk of 1 word (1 word carries 4 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 4 accesses), halfword (2 bytes per access, 2 accesses) or word (4 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FRTSC" edc:nzwidth="0x1" edc:desc="FIFO RTS Pin Control enable (Hardware Handshaking mode only)"/>
            <edc:SFRFieldDef edc:cname="TXFTHRES" edc:nzwidth="0x6" edc:desc="Transmit FIFO Threshold"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXFTHRES" edc:nzwidth="0x6" edc:desc="Receive FIFO Threshold"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXFTHRES2" edc:nzwidth="0x6" edc:desc="Receive FIFO Threshold 2"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_US_FLR" edc:nzwidth="0x20" edc:access="----------rrrrrr----------rrrrrr" edc:impl="0x3F003F" edc:_addr="0x400082A4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TXFL" edc:nzwidth="0x6" edc:desc="Transmit FIFO Level"/>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="RXFL" edc:nzwidth="0x6" edc:desc="Receive FIFO Level"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_US_FIER" edc:nzwidth="0x20" edc:access="----------------------w-wwwwwwww" edc:impl="0x2FF" edc:_addr="0x400082A8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF2" edc:nzwidth="0x1" edc:desc="RXFTHF2 Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_US_FIDR" edc:nzwidth="0x20" edc:access="----------------------w-wwwwwwww" edc:impl="0x2FF" edc:_addr="0x400082AC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF2" edc:nzwidth="0x1" edc:desc="RXFTHF2 Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_US_FIMR" edc:nzwidth="0x20" edc:access="----------------------r-rrrrrrrr" edc:impl="0x2FF" edc:_addr="0x400082B0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF2" edc:nzwidth="0x1" edc:desc="RXFTHF2 Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_US_FESR" edc:nzwidth="0x20" edc:access="----------------------rrrrrrrrrr" edc:impl="0x3FF" edc:_addr="0x400082B4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Empty Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Full Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Threshold Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="Receive FIFO Empty Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="Receive FIFO Full Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="Receive FIFO Threshold Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Pointer Error Flag"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="Receive FIFO Pointer Error Flag"/>
            <edc:SFRFieldDef edc:cname="TXFLOCK" edc:nzwidth="0x1" edc:desc="Transmit FIFO Lock"/>
            <edc:SFRFieldDef edc:cname="RXFTHF2" edc:nzwidth="0x1" edc:desc="Receive FIFO Threshold Flag 2 (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2C" edc:_addr="0x400082B8"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_US_WPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:impl="0xFFFFFF07" edc:_addr="0x400082E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="WPEN" edc:nzwidth="0x1" edc:desc="Write Protection Enable"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:nzwidth="0x1" edc:desc="Write Protection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:nzwidth="0x1" edc:desc="Write Protection Control Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of bits WPEN, WPITEN and WPCREN. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x555341"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_US_WPSR" edc:nzwidth="0x20" edc:access="--------rrrrrrrrrrrrrrrr-------r" edc:impl="0xFFFF01" edc:_addr="0x400082E8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="WPVS" edc:nzwidth="0x1" edc:desc="Write Protection Violation Status"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:nzwidth="0x10" edc:desc="Write Protection Violation Source"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x114" edc:_addr="0x400082EC"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_SPI_CR" edc:nzwidth="0x20" edc:access="ww-----w------ww---w----w-----ww" edc:impl="0xC1031083" edc:_addr="0x40008400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="SPIEN" edc:nzwidth="0x1" edc:desc="SPI Enable"/>
            <edc:SFRFieldDef edc:cname="SPIDIS" edc:nzwidth="0x1" edc:desc="SPI Disable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="SPI Software Reset"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="REQCLR" edc:nzwidth="0x1" edc:desc="Request to Clear the Comparison Trigger"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="TXFCLR" edc:nzwidth="0x1" edc:desc="Transmit FIFO Clear"/>
            <edc:SFRFieldDef edc:cname="RXFCLR" edc:nzwidth="0x1" edc:desc="Receive FIFO Clear"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="LASTXFER" edc:nzwidth="0x1" edc:desc="Last Transfer"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="FIFODIS" edc:nzwidth="0x1" edc:desc="FIFO Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_SPI_MR" edc:nzwidth="0x20" edc:access="nnnnnnnn------nn---n----n-nnnnnn" edc:impl="0xFF0310BF" edc:_addr="0x40008404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="MSTR" edc:nzwidth="0x1" edc:desc="Host/Client Mode"/>
            <edc:SFRFieldDef edc:cname="PS" edc:nzwidth="0x1" edc:desc="Peripheral Select"/>
            <edc:SFRFieldDef edc:cname="PCSDEC" edc:nzwidth="0x1" edc:desc="Chip Select Decode"/>
            <edc:SFRFieldDef edc:cname="BRSRCCLK" edc:nzwidth="0x1" edc:desc="Bit Rate Source Clock">
              <edc:SFRFieldSemantic edc:cname="PERIPH_CLK" edc:desc="The peripheral clock is the source clock for the bit rate generation." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="GCLK is the source clock for the bit rate generation, thus the bit rate can be independent of the core/peripheral clock." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MODFDIS" edc:nzwidth="0x1" edc:desc="Mode Fault Detection"/>
            <edc:SFRFieldDef edc:cname="WDRBT" edc:nzwidth="0x1" edc:desc="Wait Data Read Before Transfer"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LLB" edc:nzwidth="0x1" edc:desc="Local Loopback Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CMPMODE" edc:nzwidth="0x1" edc:desc="Comparison Mode">
              <edc:SFRFieldSemantic edc:cname="FLAG_ONLY" edc:desc="Any character is received and comparison function drives CMP flag." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="START_CONDITION" edc:desc="Comparison condition must be met to start reception of all incoming characters until REQCLR is set." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PCS" edc:nzwidth="0x2" edc:desc="Peripheral Chip Select"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="DLYBCS" edc:nzwidth="0x8" edc:desc="Delay Between Chip Selects"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_SPI_RDR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40008408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="RD0" edc:nzwidth="0x10" edc:desc="Receive Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="RD1" edc:nzwidth="0x8" edc:desc="Receive Data"/>
            <edc:SFRFieldDef edc:cname="RD1" edc:nzwidth="0x10" edc:desc="Receive Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="RD3" edc:nzwidth="0x8" edc:desc="Receive Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_SPI_TDR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4000840C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TD0" edc:nzwidth="0x10" edc:desc="Transmit Data"/>
            <edc:SFRFieldDef edc:cname="TD1" edc:nzwidth="0x10" edc:desc="Transmit Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="LASTXFER" edc:nzwidth="0x1" edc:desc="Last Transfer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_SPI_SR" edc:nzwidth="0x20" edc:access="rrrrrrrr-------r---rrrrrrrrrrrrr" edc:impl="0xFF011FFF" edc:_addr="0x40008410">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="RDRF" edc:nzwidth="0x1" edc:desc="Receive Data Register Full (cleared by reading FLEX_SPI_RDR)"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:nzwidth="0x1" edc:desc="Transmit Data Register Empty (cleared by writing FLEX_SPI_TDR)"/>
            <edc:SFRFieldDef edc:cname="MODF" edc:nzwidth="0x1" edc:desc="Mode Fault Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:nzwidth="0x1" edc:desc="Overrun Error Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of RX Buffer (cleared by writing FLEX_SPI_RCR or FLEX_SPI_RNCR)"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of TX Buffer (cleared by writing FLEX_SPI_TCR or FLEX_SPI_TNCR)"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="RX Buffer Full (cleared by writing FLEX_SPI_RCR or FLEX_SPI_RNCR)"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="TX Buffer Empty (cleared by writing FLEX_SPI_TCR or FLEX_SPI_TNCR)"/>
            <edc:SFRFieldDef edc:cname="NSSR" edc:nzwidth="0x1" edc:desc="NSS Rising (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="Transmission Registers Empty (cleared by writing FLEX_SPI_TDR)"/>
            <edc:SFRFieldDef edc:cname="UNDES" edc:nzwidth="0x1" edc:desc="Underrun Error Status (Client mode only) (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SFERR" edc:nzwidth="0x1" edc:desc="Client Mode Frame Error (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SPIENS" edc:nzwidth="0x1" edc:desc="SPI Enable Status"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Empty Flag (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Full Flag (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Threshold Flag (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="Receive FIFO Empty Flag"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="Receive FIFO Full Flag"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="Receive FIFO Threshold Flag"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Pointer Error Flag"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="Receive FIFO Pointer Error Flag"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_SPI_IER" edc:nzwidth="0x20" edc:access="wwwwwwww-----------wwwwwwwwwwwww" edc:impl="0xFF001FFF" edc:_addr="0x40008414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="RDRF" edc:nzwidth="0x1" edc:desc="Receive Data Register Full Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:nzwidth="0x1" edc:desc="SPI Transmit Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MODF" edc:nzwidth="0x1" edc:desc="Mode Fault Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="NSSR" edc:nzwidth="0x1" edc:desc="NSS Rising Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="Transmission Registers Empty Enable"/>
            <edc:SFRFieldDef edc:cname="UNDES" edc:nzwidth="0x1" edc:desc="Underrun Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SFERR" edc:nzwidth="0x1" edc:desc="Client Mode Frame Error Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0xB"/>
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_SPI_IDR" edc:nzwidth="0x20" edc:access="wwwwwwww-----------wwwwwwwwwwwww" edc:impl="0xFF001FFF" edc:_addr="0x40008418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="RDRF" edc:nzwidth="0x1" edc:desc="Receive Data Register Full Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:nzwidth="0x1" edc:desc="SPI Transmit Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="MODF" edc:nzwidth="0x1" edc:desc="Mode Fault Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="NSSR" edc:nzwidth="0x1" edc:desc="NSS Rising Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="Transmission Registers Empty Disable"/>
            <edc:SFRFieldDef edc:cname="UNDES" edc:nzwidth="0x1" edc:desc="Underrun Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SFERR" edc:nzwidth="0x1" edc:desc="Client Mode Frame Error Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0xB"/>
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_SPI_IMR" edc:nzwidth="0x20" edc:access="rrrrrrrr-----------rrrrrrrrrrrrr" edc:impl="0xFF001FFF" edc:_addr="0x4000841C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="RDRF" edc:nzwidth="0x1" edc:desc="Receive Data Register Full Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:nzwidth="0x1" edc:desc="SPI Transmit Data Register Empty Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="MODF" edc:nzwidth="0x1" edc:desc="Mode Fault Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="NSSR" edc:nzwidth="0x1" edc:desc="NSS Rising Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="Transmission Registers Empty Mask"/>
            <edc:SFRFieldDef edc:cname="UNDES" edc:nzwidth="0x1" edc:desc="Underrun Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="SFERR" edc:nzwidth="0x1" edc:desc="Client Mode Frame Error Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0xB"/>
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x10" edc:_addr="0x40008420"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_SPI_CSR0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40008430">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity"/>
            <edc:SFRFieldDef edc:cname="NCPHA" edc:nzwidth="0x1" edc:desc="Clock Phase"/>
            <edc:SFRFieldDef edc:cname="CSNAAT" edc:nzwidth="0x1" edc:desc="Chip Select Not Active After Transfer (Ignored if CSAAT = 1)"/>
            <edc:SFRFieldDef edc:cname="CSAAT" edc:nzwidth="0x1" edc:desc="Chip Select Active After Transfer"/>
            <edc:SFRFieldDef edc:cname="BITS" edc:nzwidth="0x4" edc:desc="Bits Per Transfer">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits for transfer" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits for transfer" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="10_BIT" edc:desc="10 bits for transfer" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="11_BIT" edc:desc="11 bits for transfer" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="12_BIT" edc:desc="12 bits for transfer" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="13 bits for transfer" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="14_BIT" edc:desc="14 bits for transfer" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="15_BIT" edc:desc="15 bits for transfer" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="16_BIT" edc:desc="16 bits for transfer" edc:when="(field &amp; 0xF) == 0x08"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCBR" edc:nzwidth="0x8" edc:desc="Serial Clock Bit Rate"/>
            <edc:SFRFieldDef edc:cname="DLYBS" edc:nzwidth="0x8" edc:desc="Delay Before SPCK"/>
            <edc:SFRFieldDef edc:cname="DLYBCT" edc:nzwidth="0x8" edc:desc="Delay Between Consecutive Transfers"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_SPI_CSR1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40008434">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity"/>
            <edc:SFRFieldDef edc:cname="NCPHA" edc:nzwidth="0x1" edc:desc="Clock Phase"/>
            <edc:SFRFieldDef edc:cname="CSNAAT" edc:nzwidth="0x1" edc:desc="Chip Select Not Active After Transfer (Ignored if CSAAT = 1)"/>
            <edc:SFRFieldDef edc:cname="CSAAT" edc:nzwidth="0x1" edc:desc="Chip Select Active After Transfer"/>
            <edc:SFRFieldDef edc:cname="BITS" edc:nzwidth="0x4" edc:desc="Bits Per Transfer">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits for transfer" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits for transfer" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="10_BIT" edc:desc="10 bits for transfer" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="11_BIT" edc:desc="11 bits for transfer" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="12_BIT" edc:desc="12 bits for transfer" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="13 bits for transfer" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="14_BIT" edc:desc="14 bits for transfer" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="15_BIT" edc:desc="15 bits for transfer" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="16_BIT" edc:desc="16 bits for transfer" edc:when="(field &amp; 0xF) == 0x08"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCBR" edc:nzwidth="0x8" edc:desc="Serial Clock Bit Rate"/>
            <edc:SFRFieldDef edc:cname="DLYBS" edc:nzwidth="0x8" edc:desc="Delay Before SPCK"/>
            <edc:SFRFieldDef edc:cname="DLYBCT" edc:nzwidth="0x8" edc:desc="Delay Between Consecutive Transfers"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x40008438"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_SPI_FMR" edc:nzwidth="0x20" edc:access="--nnnnnn--nnnnnn----------nn--nn" edc:impl="0x3F3F0033" edc:_addr="0x40008440">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TXRDYM" edc:nzwidth="0x2" edc:desc="Transmit Data Register Empty Mode">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="TDRE will be at level '1' when at least one data can be written in the transmit FIFO. When DMA is enabled to transfer data, the chunk of 1 data (byte or halfword) must be configured in the DMA depending on FLEX_SPI_CSR0.BITS. If the transfer is performed by software, the access type (byte, halfword) must be defined depending on FLEX_SPI_CSR0.BITS." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="TDRE will be at level '1' when at least two data can be written in the transmit FIFO. FIFO. To minimize system bus load, when DMA is enabled to transfer data, the chunk of 1 word (1 word carries 2 data) must be configured in the DMA. If the transfer is performed by software, the access type must be defined as word (2 data per access, 1 access)." edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXRDYM" edc:nzwidth="0x2" edc:desc="Receive Data Register Full Mode">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="RDRF will be at level '1' when at least one unread data is in the receive FIFO. When DMA is enabled to transfer data and FLEX_SPI_CSR0.BITS=0 (8 bits transfered on SPI line), the chunk of 1 byte must be configured in the DMA. When FLEX_SPI_CSR0.BITS&gt;0 (9 to 16 bits transfered on SPI line), the chunk of 1 halfword must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte or halfword depending on FLEX_SPI_CSR0.BITS." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="RDRF will be at level '1' when at least two unread data are in the receive FIFO. To minimize system bus load, when DMA is enabled to transfer data and FLEX_SPI_CSR0.BITS=0 (8 bits transfered on SPI line), the chunk of 1 halfword (1 halfword carries 2 bytes) must be configured in the DMA. When FLEX_SPI_CSR0.BITS&gt;0 (9 to 16 bits transfered on SPI line), the chunk of 1 word (1 word carries 2 halfwords) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as halfword (2 bytes per access, 1 access when FLEX_SPI_CSR0.BITS=0), or word (2 halfwords per access, 2 accesses when FLEX_SPI_CSR0.BITS&gt;0)." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="RDRF will be at level '1' when at least four unread data are in the receive FIFO. To minimize system bus load, when DMA is enabled to transfer data and FLEX_SPI_CSR0.BITS=0 (8 bits transfered on SPI line), the chunk of 1 word (1 halfword carries 4 bytes) must be configured in the DMA. When FLEX_SPI_CSR0.BITS&gt;0 (9 to 16 bits transfered on SPI line), the chunk of 2 words (1 word carries 4 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as word (4 bytes per access, 1 access when FLEX_SPI_CSR0.BITS=0 or 2 halfwords per access, 2 accesses when FLEX_SPI_CSR0.BITS&gt;0)." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="TXFTHRES" edc:nzwidth="0x6" edc:desc="Transmit FIFO Threshold"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXFTHRES" edc:nzwidth="0x6" edc:desc="Receive FIFO Threshold"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_SPI_FLR" edc:nzwidth="0x20" edc:access="----------rrrrrr----------rrrrrr" edc:impl="0x3F003F" edc:_addr="0x40008444">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TXFL" edc:nzwidth="0x6" edc:desc="Transmit FIFO Level"/>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="RXFL" edc:nzwidth="0x6" edc:desc="Receive FIFO Level"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_SPI_CMPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40008448">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="VAL1" edc:nzwidth="0x10" edc:desc="First Comparison Value for Received Character"/>
            <edc:SFRFieldDef edc:cname="VAL2" edc:nzwidth="0x10" edc:desc="Second Comparison Value for Received Character"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x98" edc:_addr="0x4000844C"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_SPI_WPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:impl="0xFFFFFF07" edc:_addr="0x400084E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="WPEN" edc:nzwidth="0x1" edc:desc="Write Protection Enable"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:nzwidth="0x1" edc:desc="Write Protection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:nzwidth="0x1" edc:desc="Write Protection Control Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of bits WPEN, WPITEN and WPCREN. Always reads as 0" edc:when="(field &amp; 0xFFFFFF) == 0x535049"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_SPI_WPSR" edc:nzwidth="0x20" edc:access="----------------rrrrrrrr-------r" edc:impl="0xFF01" edc:_addr="0x400084E8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="WPVS" edc:nzwidth="0x1" edc:desc="Write Protection Violation Status"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:nzwidth="0x8" edc:desc="Write Protection Violation Source"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x114" edc:_addr="0x400084EC"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_TWI_CR" edc:nzwidth="0x20" edc:access="--ww-www------wwwwwwwwwwwwwwwwww" edc:impl="0x3703FFFF" edc:_addr="0x40008600">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="START" edc:nzwidth="0x1" edc:desc="Send a START Condition"/>
            <edc:SFRFieldDef edc:cname="STOP" edc:nzwidth="0x1" edc:desc="Send a STOP Condition"/>
            <edc:SFRFieldDef edc:cname="MSEN" edc:nzwidth="0x1" edc:desc="TWI Host Mode Enabled"/>
            <edc:SFRFieldDef edc:cname="MSDIS" edc:nzwidth="0x1" edc:desc="TWI Host Mode Disabled"/>
            <edc:SFRFieldDef edc:cname="SVEN" edc:nzwidth="0x1" edc:desc="TWI Client Mode Enabled"/>
            <edc:SFRFieldDef edc:cname="SVDIS" edc:nzwidth="0x1" edc:desc="TWI Client Mode Disabled"/>
            <edc:SFRFieldDef edc:cname="QUICK" edc:nzwidth="0x1" edc:desc="SMBus Quick Command"/>
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="HSEN" edc:nzwidth="0x1" edc:desc="TWI High-Speed Mode Enabled"/>
            <edc:SFRFieldDef edc:cname="HSDIS" edc:nzwidth="0x1" edc:desc="TWI High-Speed Mode Disabled"/>
            <edc:SFRFieldDef edc:cname="SMBEN" edc:nzwidth="0x1" edc:desc="SMBus Mode Enabled"/>
            <edc:SFRFieldDef edc:cname="SMBDIS" edc:nzwidth="0x1" edc:desc="SMBus Mode Disabled"/>
            <edc:SFRFieldDef edc:cname="PECEN" edc:nzwidth="0x1" edc:desc="Packet Error Checking Enable"/>
            <edc:SFRFieldDef edc:cname="PECDIS" edc:nzwidth="0x1" edc:desc="Packet Error Checking Disable"/>
            <edc:SFRFieldDef edc:cname="PECRQ" edc:nzwidth="0x1" edc:desc="PEC Request"/>
            <edc:SFRFieldDef edc:cname="CLEAR" edc:nzwidth="0x1" edc:desc="Bus CLEAR Command"/>
            <edc:SFRFieldDef edc:cname="ACMEN" edc:nzwidth="0x1" edc:desc="Alternative Command Mode Enable"/>
            <edc:SFRFieldDef edc:cname="ACMDIS" edc:nzwidth="0x1" edc:desc="Alternative Command Mode Disable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="TXFCLR" edc:nzwidth="0x1" edc:desc="Transmit FIFO Clear"/>
            <edc:SFRFieldDef edc:cname="RXFCLR" edc:nzwidth="0x1" edc:desc="Receive FIFO Clear"/>
            <edc:SFRFieldDef edc:cname="TXFLCLR" edc:nzwidth="0x1" edc:desc="Transmit FIFO Lock CLEAR"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="FIFODIS" edc:nzwidth="0x1" edc:desc="FIFO Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_TWI_MMR" edc:nzwidth="0x20" edc:access="-------n-nnnnnnn-nnn--nn--------" edc:impl="0x17F7300" edc:_addr="0x40008604">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="IADRSZ" edc:nzwidth="0x2" edc:desc="Internal Device Address Size">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No internal device address" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="1_BYTE" edc:desc="One-byte internal device address" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="2_BYTE" edc:desc="Two-byte internal device address" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="3_BYTE" edc:desc="Three-byte internal device address" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MREAD" edc:nzwidth="0x1" edc:desc="Host Read Direction"/>
            <edc:SFRFieldDef edc:cname="SCLRBL" edc:nzwidth="0x2" edc:desc="SCL Rise Boost Level"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DADR" edc:nzwidth="0x7" edc:desc="Device Address"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NOAP" edc:nzwidth="0x1" edc:desc="No Auto-Stop On NACK Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_TWI_SMR" edc:nzwidth="0x20" edc:access="nnnn-----nnnnnnn-nnnnnnnnnnnnn-n" edc:impl="0xF07F7FFD" edc:_addr="0x40008608">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="NACKEN" edc:nzwidth="0x1" edc:desc="Client Receiver Data Phase NACK Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SMDA" edc:nzwidth="0x1" edc:desc="SMBus Default Address"/>
            <edc:SFRFieldDef edc:cname="SMHH" edc:nzwidth="0x1" edc:desc="SMBus Host Header"/>
            <edc:SFRFieldDef edc:cname="SADAT" edc:nzwidth="0x1" edc:desc="Client Address Treated as Data"/>
            <edc:SFRFieldDef edc:cname="BSEL" edc:nzwidth="0x1" edc:desc="TWI Bus Selection"/>
            <edc:SFRFieldDef edc:cname="SCLWSDIS" edc:nzwidth="0x1" edc:desc="Clock Wait State Disable"/>
            <edc:SFRFieldDef edc:cname="SNIFF" edc:nzwidth="0x1" edc:desc="Client Sniffer Mode"/>
            <edc:SFRFieldDef edc:cname="MASK" edc:nzwidth="0x7" edc:desc="Client Address Mask"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SADR" edc:nzwidth="0x7" edc:desc="Client Address"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="SADR1EN" edc:nzwidth="0x1" edc:desc="Client Address 1 Enable"/>
            <edc:SFRFieldDef edc:cname="SADR2EN" edc:nzwidth="0x1" edc:desc="Client Address 2 Enable"/>
            <edc:SFRFieldDef edc:cname="SADR3EN" edc:nzwidth="0x1" edc:desc="Client Address 3 Enable"/>
            <edc:SFRFieldDef edc:cname="DATAMEN" edc:nzwidth="0x1" edc:desc="Data Matching Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_TWI_IADR" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:impl="0xFFFFFF" edc:_addr="0x4000860C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="IADR" edc:nzwidth="0x18" edc:desc="Internal Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_TWI_CWGR" edc:nzwidth="0x20" edc:access="--nnnnnn---n-nnnnnnnnnnnnnnnnnnn" edc:impl="0x3F17FFFF" edc:_addr="0x40008610">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="CLDIV" edc:nzwidth="0x8" edc:desc="Clock Low Divider"/>
            <edc:SFRFieldDef edc:cname="CHDIV" edc:nzwidth="0x8" edc:desc="Clock High Divider"/>
            <edc:SFRFieldDef edc:cname="CKDIV" edc:nzwidth="0x3" edc:desc="Clock Divider"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BRSRCCLK" edc:nzwidth="0x1" edc:desc="Bit Rate Source Clock">
              <edc:SFRFieldSemantic edc:cname="PERIPH_CLK" edc:desc="The peripheral clock is the source clock for the bit rate generation." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="GCLK is the source clock for the bit rate generation, thus the bit rate can be independent of the core/peripheral clock." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="HOLD" edc:nzwidth="0x6" edc:desc="TWD Hold Time Versus TWCK Falling"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x40008614"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_TWI_SR" edc:nzwidth="0x20" edc:access="-----rrrr-rrrrrrrrrrrrrrrrrrrrrr" edc:impl="0x7BFFFFF" edc:_addr="0x40008620">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TXCOMP" edc:nzwidth="0x1" edc:desc="Transmission Completed (cleared by writing FLEX_TWI_THR)"/>
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="Receive Holding Register Ready (cleared when reading FLEX_TWI_RHR)"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="Transmit Holding Register Ready (cleared by writing FLEX_TWI_THR)"/>
            <edc:SFRFieldDef edc:cname="SVREAD" edc:nzwidth="0x1" edc:desc="Client Read"/>
            <edc:SFRFieldDef edc:cname="SVACC" edc:nzwidth="0x1" edc:desc="Client Access"/>
            <edc:SFRFieldDef edc:cname="GACC" edc:nzwidth="0x1" edc:desc="General Call Access (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:nzwidth="0x1" edc:desc="Underrun Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="NACK" edc:nzwidth="0x1" edc:desc="Not Acknowledged (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="ARBLST" edc:nzwidth="0x1" edc:desc="Arbitration Lost (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SCLWS" edc:nzwidth="0x1" edc:desc="Clock Wait State"/>
            <edc:SFRFieldDef edc:cname="EOSACC" edc:nzwidth="0x1" edc:desc="End Of Client Access (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of RX Buffer (cleared by writing FLEX_TWI_RCR or FLEX_TWI_RNCR)"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of TX Buffer (cleared by writing FLEX_TWI_TCR or FLEX_TWI_TNCR)"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="RX Buffer Full (cleared by writing FLEX_TWI_RCR or FLEX_TWI_RNCR)"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="TX Buffer Empty (cleared by writing FLEX_TWI_TCR or FLEX_TWI_TNCR)"/>
            <edc:SFRFieldDef edc:cname="MCACK" edc:nzwidth="0x1" edc:desc="Host Code Acknowledge (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SMBAF" edc:nzwidth="0x1" edc:desc="SMBus Alert Flag"/>
            <edc:SFRFieldDef edc:cname="TOUT" edc:nzwidth="0x1" edc:desc="Timeout Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="PECERR" edc:nzwidth="0x1" edc:desc="PEC Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SMBDAM" edc:nzwidth="0x1" edc:desc="SMBus Default Address Match (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SMBHHM" edc:nzwidth="0x1" edc:desc="SMBus Host Header Address Match (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFLOCK" edc:nzwidth="0x1" edc:desc="Transmit FIFO Lock"/>
            <edc:SFRFieldDef edc:cname="SCL" edc:nzwidth="0x1" edc:desc="SCL Line Value"/>
            <edc:SFRFieldDef edc:cname="SDA" edc:nzwidth="0x1" edc:desc="SDA Line Value"/>
            <edc:SFRFieldDef edc:cname="SR" edc:nzwidth="0x1" edc:desc="Start Repeated"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_TWI_IER" edc:nzwidth="0x20" edc:access="----------wwww-wwwwwwwwwwwww-www" edc:impl="0x3DFFF7" edc:_addr="0x40008624">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TXCOMP" edc:nzwidth="0x1" edc:desc="Transmission Completed Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="Receive Holding Register Ready Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="Transmit Holding Register Ready Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SVACC" edc:nzwidth="0x1" edc:desc="Client Access Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="GACC" edc:nzwidth="0x1" edc:desc="General Call Access Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:nzwidth="0x1" edc:desc="Underrun Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="NACK" edc:nzwidth="0x1" edc:desc="Not Acknowledge Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ARBLST" edc:nzwidth="0x1" edc:desc="Arbitration Lost Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SCL_WS" edc:nzwidth="0x1" edc:desc="Clock Wait State Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EOSACC" edc:nzwidth="0x1" edc:desc="End Of Client Access Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MCACK" edc:nzwidth="0x1" edc:desc="Host Code Acknowledge Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TOUT" edc:nzwidth="0x1" edc:desc="Timeout Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PECERR" edc:nzwidth="0x1" edc:desc="PEC Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SMBDAM" edc:nzwidth="0x1" edc:desc="SMBus Default Address Match Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SMBHHM" edc:nzwidth="0x1" edc:desc="SMBus Host Header Address Match Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_TWI_IDR" edc:nzwidth="0x20" edc:access="----------wwww-wwwwwwwwwwwww-www" edc:impl="0x3DFFF7" edc:_addr="0x40008628">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TXCOMP" edc:nzwidth="0x1" edc:desc="Transmission Completed Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="Receive Holding Register Ready Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="Transmit Holding Register Ready Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SVACC" edc:nzwidth="0x1" edc:desc="Client Access Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="GACC" edc:nzwidth="0x1" edc:desc="General Call Access Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:nzwidth="0x1" edc:desc="Underrun Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="NACK" edc:nzwidth="0x1" edc:desc="Not Acknowledge Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ARBLST" edc:nzwidth="0x1" edc:desc="Arbitration Lost Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SCL_WS" edc:nzwidth="0x1" edc:desc="Clock Wait State Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="EOSACC" edc:nzwidth="0x1" edc:desc="End Of Client Access Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="MCACK" edc:nzwidth="0x1" edc:desc="Host Code Acknowledge Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TOUT" edc:nzwidth="0x1" edc:desc="Timeout Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="PECERR" edc:nzwidth="0x1" edc:desc="PEC Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SMBDAM" edc:nzwidth="0x1" edc:desc="SMBus Default Address Match Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SMBHHM" edc:nzwidth="0x1" edc:desc="SMBus Host Header Address Match Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_TWI_IMR" edc:nzwidth="0x20" edc:access="----------rrrr-rrrrrrrrrrrrr-rrr" edc:impl="0x3DFFF7" edc:_addr="0x4000862C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TXCOMP" edc:nzwidth="0x1" edc:desc="Transmission Completed Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="Receive Holding Register Ready Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="Transmit Holding Register Ready Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SVACC" edc:nzwidth="0x1" edc:desc="Client Access Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="GACC" edc:nzwidth="0x1" edc:desc="General Call Access Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:nzwidth="0x1" edc:desc="Underrun Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="NACK" edc:nzwidth="0x1" edc:desc="Not Acknowledge Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ARBLST" edc:nzwidth="0x1" edc:desc="Arbitration Lost Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="SCL_WS" edc:nzwidth="0x1" edc:desc="Clock Wait State Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="EOSACC" edc:nzwidth="0x1" edc:desc="End Of Client Access Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="MCACK" edc:nzwidth="0x1" edc:desc="Host Code Acknowledge Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TOUT" edc:nzwidth="0x1" edc:desc="Timeout Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="PECERR" edc:nzwidth="0x1" edc:desc="PEC Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="SMBDAM" edc:nzwidth="0x1" edc:desc="SMBus Default Address Match Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="SMBHHM" edc:nzwidth="0x1" edc:desc="SMBus Host Header Address Match Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_TWI_RHR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40008630">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="RXDATA0" edc:nzwidth="0x8" edc:desc="Host or Client Receive Holding Data 0"/>
            <edc:SFRFieldDef edc:cname="RXDATA1" edc:nzwidth="0x8" edc:desc="Host or Client Receive Holding Data 1"/>
            <edc:AdjustPoint edc:offset="-6"/>
            <edc:SFRFieldDef edc:cname="PSTATE" edc:nzwidth="0x1" edc:desc="Stop State (Client Sniffer Mode only)"/>
            <edc:SFRFieldDef edc:cname="ASTATE" edc:nzwidth="0x2" edc:desc="Acknowledge State (Client Sniffer Mode only)">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Acknowledge or Nacknowledge detected after previously logged data" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ACK" edc:desc="Acknowledge (A) detected after previously logged data" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NACK" edc:desc="Nacknowledge (NA) detected after previously logged data" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="UNDEF" edc:desc="Not defined" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RXDATA2" edc:nzwidth="0x8" edc:desc="Host or Client Receive Holding Data 2"/>
            <edc:SFRFieldDef edc:cname="RXDATA3" edc:nzwidth="0x8" edc:desc="Host or Client Receive Holding Data 3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_TWI_THR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x40008634">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TXDATA0" edc:nzwidth="0x8" edc:desc="Host or Client Transmit Holding Data 0"/>
            <edc:SFRFieldDef edc:cname="TXDATA1" edc:nzwidth="0x8" edc:desc="Host or Client Transmit Holding Data 1"/>
            <edc:SFRFieldDef edc:cname="TXDATA2" edc:nzwidth="0x8" edc:desc="Host or Client Transmit Holding Data 2"/>
            <edc:SFRFieldDef edc:cname="TXDATA3" edc:nzwidth="0x8" edc:desc="Host or Client Transmit Holding Data 3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_TWI_SMBTR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn----nnnn" edc:impl="0xFFFFFF0F" edc:_addr="0x40008638">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="PRESC" edc:nzwidth="0x4" edc:desc="SMBus Clock Prescaler"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TLOWS" edc:nzwidth="0x8" edc:desc="Client Clock Stretch Maximum Cycles"/>
            <edc:SFRFieldDef edc:cname="TLOWM" edc:nzwidth="0x8" edc:desc="Host Clock Stretch Maximum Cycles"/>
            <edc:SFRFieldDef edc:cname="THMAX" edc:nzwidth="0x8" edc:desc="Clock High Maximum Cycles"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_TWI_HSR" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:impl="0xFF" edc:_addr="0x4000863C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="MCODE" edc:nzwidth="0x8" edc:desc="TWI High Speed Host Code"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_TWI_ACR" edc:nzwidth="0x20" edc:access="------nnnnnnnnnn------nnnnnnnnnn" edc:impl="0x3FF03FF" edc:_addr="0x40008640">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="DATAL" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Transfer Direction"/>
            <edc:SFRFieldDef edc:cname="PEC" edc:nzwidth="0x1" edc:desc="PEC Request (SMBus Mode only)"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="NDATAL" edc:nzwidth="0x8" edc:desc="Next Data Length"/>
            <edc:SFRFieldDef edc:cname="NDIR" edc:nzwidth="0x1" edc:desc="Next Transfer Direction"/>
            <edc:SFRFieldDef edc:cname="NPEC" edc:nzwidth="0x1" edc:desc="Next PEC Request (SMBus Mode only)"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_TWI_FILTR" edc:nzwidth="0x20" edc:access="---------------------nnn------nn" edc:impl="0x703" edc:_addr="0x40008644">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="FILT" edc:nzwidth="0x1" edc:desc="RX Digital Filter"/>
            <edc:SFRFieldDef edc:cname="PADFEN" edc:nzwidth="0x1" edc:desc="PAD Filter Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="THRES" edc:nzwidth="0x3" edc:desc="Digital Filter Threshold"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_TWI_HSCWGR" edc:nzwidth="0x20" edc:access="-------------nnnnnnnnnnnnnnnnnnn" edc:impl="0x7FFFF" edc:_addr="0x40008648">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="HSCLDIV" edc:nzwidth="0x8" edc:desc="High Speed Clock Low Divider"/>
            <edc:SFRFieldDef edc:cname="HSCHDIV" edc:nzwidth="0x8" edc:desc="High Speed Clock High Divider"/>
            <edc:SFRFieldDef edc:cname="HSCKDIV" edc:nzwidth="0x3" edc:desc="High Speed Clock Divider"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_TWI_SWMR" edc:nzwidth="0x20" edc:access="nnnnnnnn-nnnnnnn-nnnnnnn-nnnnnnn" edc:impl="0xFF7F7F7F" edc:_addr="0x4000864C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="SADR1" edc:nzwidth="0x7" edc:desc="Client Address 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SADR2" edc:nzwidth="0x7" edc:desc="Client Address 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SADR3" edc:nzwidth="0x7" edc:desc="Client Address 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DATAM" edc:nzwidth="0x8" edc:desc="Data Match"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_TWI_FMR" edc:nzwidth="0x20" edc:access="--nnnnnn--nnnnnn----------nn--nn" edc:impl="0x3F3F0033" edc:_addr="0x40008650">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TXRDYM" edc:nzwidth="0x2" edc:desc="Transmitter Ready Mode">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="TXRDY will be at level '1' when at least one data can be written in the transmit FIFO. When DMA is enabled to transfer data, the chunk of 1 byte must be configured in the DMA. If the transfer is performed by software, the access type must be defined as byte." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="TXRDY will be at level '1' when at least two data can be written in the transmit FIFO. To minimize system bus load, when DMA is enabled to transfer data, the chunk of 1 halfword (1 halfword carries 2 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 2 accesses) or halfword (2 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="TXRDY will be at level '1' when at least four data can be written in the transmit FIFO. To minimize system bus load, when DMA is enabled to transfer data, the chunk of 1 word (1 word carries 4 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 4 accesses), halfword (2 bytes per access, 2 accesses) or word (4 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXRDYM" edc:nzwidth="0x2" edc:desc="Receiver Ready Mode">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="RXRDY will be at level '1' when at least one unread data is in the receive FIFO. When DMA is enabled to transfer data the chunk of 1 byte must be configured in the DMA. If the transfer is performed by software, the access type (byte, halfword) must be defined accordingly." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="RXRDY will be at level '1' when at least two unread data are in the receive FIFO. To minimize system bus load, when DMA is enabled to transfer data, the chunk of 1 halfword (1 halfword carries 2 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 2 accesses) or halfword (2 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="RXRDY will be at level '1' when at least four unread data are in the receive FIFO. To minimize system bus load, when DMA is enabled to transfer data, the chunk of 1 word (1 word carries 4 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 4 accesses), halfword (2 bytes per access, 2 accesses) or word (4 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="TXFTHRES" edc:nzwidth="0x6" edc:desc="Transmit FIFO Threshold"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXFTHRES" edc:nzwidth="0x6" edc:desc="Receive FIFO Threshold"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_TWI_FLR" edc:nzwidth="0x20" edc:access="----------rrrrrr----------rrrrrr" edc:impl="0x3F003F" edc:_addr="0x40008654">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TXFL" edc:nzwidth="0x6" edc:desc="Transmit FIFO Level"/>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="RXFL" edc:nzwidth="0x6" edc:desc="Receive FIFO Level"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x40008658"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_TWI_FSR" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:impl="0xFF" edc:_addr="0x40008660">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Empty Flag (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Full Flag (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Threshold Flag (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="Receive FIFO Empty Flag"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="Receive FIFO Full Flag"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="Receive FIFO Threshold Flag"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Pointer Error Flag"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="Receive FIFO Pointer Error Flag"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_TWI_FIER" edc:nzwidth="0x20" edc:access="------------------------wwwwwwww" edc:impl="0xFF" edc:_addr="0x40008664">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_TWI_FIDR" edc:nzwidth="0x20" edc:access="------------------------wwwwwwww" edc:impl="0xFF" edc:_addr="0x40008668">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_TWI_FIMR" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:impl="0xFF" edc:_addr="0x4000866C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x74" edc:_addr="0x40008670"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_TWI_WPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:impl="0xFFFFFF07" edc:_addr="0x400086E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="WPEN" edc:nzwidth="0x1" edc:desc="Write Protection Enable"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:nzwidth="0x1" edc:desc="Write Protection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:nzwidth="0x1" edc:desc="Write Protection Control Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of bits WPEN, WPITEN and WPCREN. Always reads as 0" edc:when="(field &amp; 0xFFFFFF) == 0x545749"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM2" edc:cname="FLEX_TWI_WPSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrr-------r" edc:impl="0xFFFFFF01" edc:_addr="0x400086E8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="WPVS" edc:nzwidth="0x1" edc:desc="Write Protect Violation Status (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:nzwidth="0x18" edc:desc="Write Protection Violation Source"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3914" edc:_addr="0x400086EC"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_MR" edc:nzwidth="0x20" edc:access="------------------------------nn" edc:impl="0x3" edc:_addr="0x4000C000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="OPMODE" edc:nzwidth="0x2" edc:desc="FLEXCOM Operating Mode">
              <edc:SFRFieldSemantic edc:cname="NO_COM" edc:desc="No communication" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USART" edc:desc="All UART related protocols are selected (RS232, RS485, IrDA, ISO7816, LIN,) SPI/TWI related registers are not accessible and have no impact on IOs." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SPI" edc:desc="SPI operating mode is selected. USART/TWI related registers are not accessible and have no impact on IOs." edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TWI" edc:desc="All TWI related protocols are selected (TWI, SMBus). USART/SPI related registers are not accessible and have no impact on IOs." edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x4000C004"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_RHR" edc:nzwidth="0x20" edc:access="----------------rrrrrrrrrrrrrrrr" edc:impl="0xFFFF" edc:_addr="0x4000C010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="RXDATA" edc:nzwidth="0x10" edc:desc="Receive Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x4000C014"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_THR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x4000C020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TXDATA" edc:nzwidth="0x10" edc:desc="Transmit Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xDC" edc:_addr="0x4000C024"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_RPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4000C100">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="RXPTR" edc:nzwidth="0x20" edc:desc="Receive Pointer Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_RCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x4000C104">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="RXCTR" edc:nzwidth="0x10" edc:desc="Receive Counter Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_TPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4000C108">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TXPTR" edc:nzwidth="0x20" edc:desc="Transmit Counter Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_TCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x4000C10C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TXCTR" edc:nzwidth="0x10" edc:desc="Transmit Counter Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_RNPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4000C110">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="RXNPTR" edc:nzwidth="0x20" edc:desc="Receive Next Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_RNCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x4000C114">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="RXNCTR" edc:nzwidth="0x10" edc:desc="Receive Next Counter"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_TNPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4000C118">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TXNPTR" edc:nzwidth="0x20" edc:desc="Transmit Next Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_TNCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x4000C11C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TXNCTR" edc:nzwidth="0x10" edc:desc="Transmit Counter Next"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_PTCR" edc:nzwidth="0x20" edc:access="-------w----wwww------ww------ww" edc:impl="0x10F0303" edc:_addr="0x4000C120">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="RXTEN" edc:nzwidth="0x1" edc:desc="Receiver Transfer Enable"/>
            <edc:SFRFieldDef edc:cname="RXTDIS" edc:nzwidth="0x1" edc:desc="Receiver Transfer Disable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="TXTEN" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Enable"/>
            <edc:SFRFieldDef edc:cname="TXTDIS" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Disable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="RXCBEN" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Enable"/>
            <edc:SFRFieldDef edc:cname="RXCBDIS" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Disable"/>
            <edc:SFRFieldDef edc:cname="TXCBEN" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Enable"/>
            <edc:SFRFieldDef edc:cname="TXCBDIS" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Disable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ERRCLR" edc:nzwidth="0x1" edc:desc="Transfer Bus Error Clear"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_PTSR" edc:nzwidth="0x20" edc:access="-------r-----r-r-------r-------r" edc:impl="0x1050101" edc:_addr="0x4000C124">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="RXTEN" edc:nzwidth="0x1" edc:desc="Receiver Transfer Enable"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="TXTEN" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Enable"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="RXCBEN" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXCBEN" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Transfer Bus Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_PWPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:impl="0xFFFFFF07" edc:_addr="0x4000C128">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="WPPTREN" edc:nzwidth="0x1" edc:desc="Write Protection Pointer Registers Enable"/>
            <edc:SFRFieldDef edc:cname="WPCTREN" edc:nzwidth="0x1" edc:desc="Write Protection Counter Registers Enable"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:nzwidth="0x1" edc:desc="Write Protection Control Register Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x504443"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xD4" edc:_addr="0x4000C12C"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_US_CR" edc:nzwidth="0x20" edc:access="ww-w-www--wwww--wwwwwwwwwwwwww--" edc:impl="0xD73CFFFC" edc:_addr="0x4000C200">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RSTRX" edc:nzwidth="0x1" edc:desc="Reset Receiver"/>
            <edc:SFRFieldDef edc:cname="RSTTX" edc:nzwidth="0x1" edc:desc="Reset Transmitter"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
            <edc:SFRFieldDef edc:cname="RXDIS" edc:nzwidth="0x1" edc:desc="Receiver Disable"/>
            <edc:SFRFieldDef edc:cname="TXEN" edc:nzwidth="0x1" edc:desc="Transmitter Enable"/>
            <edc:SFRFieldDef edc:cname="TXDIS" edc:nzwidth="0x1" edc:desc="Transmitter Disable"/>
            <edc:SFRFieldDef edc:cname="RSTSTA" edc:nzwidth="0x1" edc:desc="Reset Status Bits"/>
            <edc:SFRFieldDef edc:cname="STTBRK" edc:nzwidth="0x1" edc:desc="Start Break"/>
            <edc:SFRFieldDef edc:cname="STPBRK" edc:nzwidth="0x1" edc:desc="Stop Break"/>
            <edc:SFRFieldDef edc:cname="STTTO" edc:nzwidth="0x1" edc:desc="Clear TIMEOUT Flag and Start Timeout After Next Character Received"/>
            <edc:SFRFieldDef edc:cname="SENDA" edc:nzwidth="0x1" edc:desc="Send Address"/>
            <edc:SFRFieldDef edc:cname="RSTIT" edc:nzwidth="0x1" edc:desc="Reset Iterations"/>
            <edc:SFRFieldDef edc:cname="RSTNACK" edc:nzwidth="0x1" edc:desc="Reset Non Acknowledge"/>
            <edc:SFRFieldDef edc:cname="RETTO" edc:nzwidth="0x1" edc:desc="Start Timeout Immediately"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RTSEN" edc:nzwidth="0x1" edc:desc="Request to Send Enable"/>
            <edc:SFRFieldDef edc:cname="RTSDIS" edc:nzwidth="0x1" edc:desc="Request to Send Disable"/>
            <edc:SFRFieldDef edc:cname="LINABT" edc:nzwidth="0x1" edc:desc="Abort LIN Transmission"/>
            <edc:SFRFieldDef edc:cname="LINWKUP" edc:nzwidth="0x1" edc:desc="Send LIN Wakeup Signal"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TXFCLR" edc:nzwidth="0x1" edc:desc="Transmit FIFO Clear"/>
            <edc:SFRFieldDef edc:cname="RXFCLR" edc:nzwidth="0x1" edc:desc="Receive FIFO Clear"/>
            <edc:SFRFieldDef edc:cname="TXFLCLR" edc:nzwidth="0x1" edc:desc="Transmit FIFO Lock CLEAR"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="REQCLR" edc:nzwidth="0x1" edc:desc="Request to Clear the Comparison Trigger"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="FIFODIS" edc:nzwidth="0x1" edc:desc="FIFO Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_US_MR" edc:nzwidth="0x20" edc:access="nnnn-nnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:impl="0xF7FFFFFF" edc:_addr="0x4000C204">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="USART_MODE" edc:nzwidth="0x4" edc:desc="USART Mode of Operation">
              <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Normal mode" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="USCLKS" edc:nzwidth="0x2" edc:desc="Clock Selection">
              <edc:SFRFieldSemantic edc:cname="MCK" edc:desc="Peripheral clock is selected." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DIV" edc:desc="Peripheral clock divided (DIV=8) is selected." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="PCK" edc:desc="PMC programmable clock (PCK) is selected. If the SCK pin is driven (CLKO = 1), the CD field must be greater than 1." edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SCK" edc:desc="Serial clock (SCK) is selected." edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CHRL" edc:nzwidth="0x2" edc:desc="Character Length">
              <edc:SFRFieldSemantic edc:cname="_5_BIT" edc:desc="Character length is 5 bits." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="_6_BIT" edc:desc="Character length is 6 bits." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_7_BIT" edc:desc="Character length is 7 bits." edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BIT" edc:desc="Character length is 8 bits." edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SYNC" edc:nzwidth="0x1" edc:desc="Synchronous Mode Select"/>
            <edc:SFRFieldDef edc:cname="PAR" edc:nzwidth="0x3" edc:desc="Parity Type">
              <edc:SFRFieldSemantic edc:cname="EVEN" edc:desc="Even parity" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ODD" edc:desc="Odd parity" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SPACE" edc:desc="Parity forced to 0 (Space)" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="MARK" edc:desc="Parity forced to 1 (Mark)" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="NO" edc:desc="No parity" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="MULTIDROP" edc:desc="Multidrop mode" edc:when="(field &amp; 0x7) == 0x06"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NBSTOP" edc:nzwidth="0x2" edc:desc="Number of Stop Bits">
              <edc:SFRFieldSemantic edc:cname="_1_BIT" edc:desc="1 stop bit" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="_1_5_BIT" edc:desc="1.5 stop bit (SYNC = 0) or reserved (SYNC = 1)" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_2_BIT" edc:desc="2 stop bits" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CHMODE" edc:nzwidth="0x2" edc:desc="Channel Mode">
              <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Normal mode" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="AUTOMATIC" edc:desc="Automatic Echo. Receiver input is connected to the TXD pin." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="LOCAL_LOOPBACK" edc:desc="Local Loopback. Transmitter output is connected to the Receiver Input." edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="REMOTE_LOOPBACK" edc:desc="Remote Loopback. RXD pin is internally connected to the TXD pin." edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSBF" edc:nzwidth="0x1" edc:desc="Bit Order"/>
            <edc:SFRFieldDef edc:cname="MODE9" edc:nzwidth="0x1" edc:desc="9-bit Character Length"/>
            <edc:SFRFieldDef edc:cname="CLKO" edc:nzwidth="0x1" edc:desc="Clock Output Select"/>
            <edc:SFRFieldDef edc:cname="OVER" edc:nzwidth="0x1" edc:desc="Oversampling Mode"/>
            <edc:SFRFieldDef edc:cname="OOKRXD" edc:nzwidth="0x1" edc:desc="OOK Demodulation Input Selection"/>
            <edc:SFRFieldDef edc:cname="OOKEN" edc:nzwidth="0x1" edc:desc="OOK Modulation/Demodulation Enabled"/>
            <edc:SFRFieldDef edc:cname="VAR_SYNC" edc:nzwidth="0x1" edc:desc="Variable Synchronization of Command/Data Sync Start Frame Delimiter"/>
            <edc:SFRFieldDef edc:cname="INVDATA" edc:nzwidth="0x1" edc:desc="Inverted Data"/>
            <edc:SFRFieldDef edc:cname="MAX_ITERATION" edc:nzwidth="0x3" edc:desc="Maximum Number of Automatic Iteration"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FILTER" edc:nzwidth="0x1" edc:desc="Receive Line Filter"/>
            <edc:SFRFieldDef edc:cname="MAN" edc:nzwidth="0x1" edc:desc="Manchester Encoder/Decoder Enable"/>
            <edc:SFRFieldDef edc:cname="MODSYNC" edc:nzwidth="0x1" edc:desc="Manchester Synchronization Mode"/>
            <edc:SFRFieldDef edc:cname="ONEBIT" edc:nzwidth="0x1" edc:desc="Start Frame Delimiter Selector"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_US_IER" edc:nzwidth="0x20" edc:access="wwwwwwww-w--w---wwwwwwwwwwwwwwww" edc:impl="0xFF48FFFF" edc:_addr="0x4000C208">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="RXRDY Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="TXRDY Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Receiver Break Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Transfer Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FRAME" edc:nzwidth="0x1" edc:desc="Framing Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PARE" edc:nzwidth="0x1" edc:desc="Parity Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TIMEOUT" edc:nzwidth="0x1" edc:desc="Timeout Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="TXEMPTY Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ITER" edc:nzwidth="0x1" edc:desc="Max number of Repetitions Reached Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Buffer Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Buffer Full Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINBK" edc:nzwidth="0x1" edc:desc="LIN Break Sent or LIN Break Received Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINID" edc:nzwidth="0x1" edc:desc="LIN Identifier Sent or LIN Identifier Received Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINTC" edc:nzwidth="0x1" edc:desc="LIN Transfer Completed Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear to Send Input Change Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MANE" edc:nzwidth="0x1" edc:desc="Manchester Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINBE" edc:nzwidth="0x1" edc:desc="LIN Bus Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINISFE" edc:nzwidth="0x1" edc:desc="LIN Inconsistent Synch Field Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINIPE" edc:nzwidth="0x1" edc:desc="LIN Identifier Parity Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINCE" edc:nzwidth="0x1" edc:desc="LIN Checksum Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINSNRE" edc:nzwidth="0x1" edc:desc="LIN Client Not Responding Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINSTE" edc:nzwidth="0x1" edc:desc="LIN Synch Tolerance Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINHTE" edc:nzwidth="0x1" edc:desc="LIN Header Timeout Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_US_IDR" edc:nzwidth="0x20" edc:access="wwwwwwww-w--w---wwwwwwwwwwwwwwww" edc:impl="0xFF48FFFF" edc:_addr="0x4000C20C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="RXRDY Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="TXRDY Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Receiver Break Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Transfer Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="FRAME" edc:nzwidth="0x1" edc:desc="Framing Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="PARE" edc:nzwidth="0x1" edc:desc="Parity Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TIMEOUT" edc:nzwidth="0x1" edc:desc="Timeout Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="TXEMPTY Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ITER" edc:nzwidth="0x1" edc:desc="Max Number of Repetitions Reached Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Buffer Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Buffer Full Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINBK" edc:nzwidth="0x1" edc:desc="LIN Break Sent or LIN Break Received Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINID" edc:nzwidth="0x1" edc:desc="LIN Identifier Sent or LIN Identifier Received Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINTC" edc:nzwidth="0x1" edc:desc="LIN Transfer Completed Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear to Send Input Change Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MANE" edc:nzwidth="0x1" edc:desc="Manchester Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINBE" edc:nzwidth="0x1" edc:desc="LIN Bus Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINISFE" edc:nzwidth="0x1" edc:desc="LIN Inconsistent Synch Field Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINIPE" edc:nzwidth="0x1" edc:desc="LIN Identifier Parity Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINCE" edc:nzwidth="0x1" edc:desc="LIN Checksum Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINSNRE" edc:nzwidth="0x1" edc:desc="LIN Client Not Responding Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINSTE" edc:nzwidth="0x1" edc:desc="LIN Synch Tolerance Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINHTE" edc:nzwidth="0x1" edc:desc="LIN Header Timeout Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_US_IMR" edc:nzwidth="0x20" edc:access="rrrrrrrr-r--r---rrrrrrrrrrrrrrrr" edc:impl="0xFF48FFFF" edc:_addr="0x4000C210">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="RXRDY Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="TXRDY Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Receiver Break Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Transfer Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="FRAME" edc:nzwidth="0x1" edc:desc="Framing Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="PARE" edc:nzwidth="0x1" edc:desc="Parity Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TIMEOUT" edc:nzwidth="0x1" edc:desc="Timeout Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="TXEMPTY Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ITER" edc:nzwidth="0x1" edc:desc="Max Number of Repetitions Reached Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Buffer Empty Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Buffer Full Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINBK" edc:nzwidth="0x1" edc:desc="LIN Break Sent or LIN Break Received Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINID" edc:nzwidth="0x1" edc:desc="LIN Identifier Sent or LIN Identifier Received Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINTC" edc:nzwidth="0x1" edc:desc="LIN Transfer Completed Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear to Send Input Change Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MANE" edc:nzwidth="0x1" edc:desc="Manchester Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINBE" edc:nzwidth="0x1" edc:desc="LIN Bus Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINISFE" edc:nzwidth="0x1" edc:desc="LIN Inconsistent Synch Field Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINIPE" edc:nzwidth="0x1" edc:desc="LIN Identifier Parity Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINCE" edc:nzwidth="0x1" edc:desc="LIN Checksum Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINSNRE" edc:nzwidth="0x1" edc:desc="LIN Client Not Responding Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINSTE" edc:nzwidth="0x1" edc:desc="LIN Synch Tolerance Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINHTE" edc:nzwidth="0x1" edc:desc="LIN Header Timeout Error Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_US_CSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrr--r---rrrrrrrrrrrrrrrr" edc:impl="0xFFC8FFFF" edc:_addr="0x4000C214">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="Receiver Ready (cleared by reading FLEX_US_RHR)"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="Transmitter Ready (cleared by writing FLEX_US_THR)"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received/End of Break"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of RX Buffer (cleared by writing FLEX_US_RCR or FLEX_US_RNCR)"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of TX Buffer (cleared by writing FLEX_US_TCR or FLEX_US_TNCR)"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error"/>
            <edc:SFRFieldDef edc:cname="FRAME" edc:nzwidth="0x1" edc:desc="Framing Error"/>
            <edc:SFRFieldDef edc:cname="PARE" edc:nzwidth="0x1" edc:desc="Parity Error"/>
            <edc:SFRFieldDef edc:cname="TIMEOUT" edc:nzwidth="0x1" edc:desc="Receiver Timeout"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="Transmitter Empty (cleared by writing FLEX_US_THR)"/>
            <edc:SFRFieldDef edc:cname="ITER" edc:nzwidth="0x1" edc:desc="Max Number of Repetitions Reached"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="TX Buffer Empty (cleared by writing FLEX_US_TCR or FLEX_US_TNCR)"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="RX Buffer Full (cleared by writing FLEX_US_RCR or FLEX_US_RNCR)"/>
            <edc:SFRFieldDef edc:cname="LINBK" edc:nzwidth="0x1" edc:desc="LIN Break Sent or LIN Break Received"/>
            <edc:SFRFieldDef edc:cname="LINID" edc:nzwidth="0x1" edc:desc="LIN Identifier Sent or LIN Identifier Received"/>
            <edc:SFRFieldDef edc:cname="LINTC" edc:nzwidth="0x1" edc:desc="LIN Transfer Completed"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear to Send Input Change Flag"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Status"/>
            <edc:SFRFieldDef edc:cname="LINBLS" edc:nzwidth="0x1" edc:desc="LIN Bus Line Status"/>
            <edc:SFRFieldDef edc:cname="MANE" edc:nzwidth="0x1" edc:desc="Manchester Error"/>
            <edc:SFRFieldDef edc:cname="LINBE" edc:nzwidth="0x1" edc:desc="LIN Bit Error"/>
            <edc:SFRFieldDef edc:cname="LINISFE" edc:nzwidth="0x1" edc:desc="LIN Inconsistent Synch Field Error"/>
            <edc:SFRFieldDef edc:cname="LINIPE" edc:nzwidth="0x1" edc:desc="LIN Identifier Parity Error"/>
            <edc:SFRFieldDef edc:cname="LINCE" edc:nzwidth="0x1" edc:desc="LIN Checksum Error"/>
            <edc:SFRFieldDef edc:cname="LINSNRE" edc:nzwidth="0x1" edc:desc="LIN Client Not Responding Error"/>
            <edc:SFRFieldDef edc:cname="LINSTE" edc:nzwidth="0x1" edc:desc="LIN Synch Tolerance Error"/>
            <edc:SFRFieldDef edc:cname="LINHTE" edc:nzwidth="0x1" edc:desc="LIN Header Timeout Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_US_RHR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4000C218">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="RXCHR0" edc:nzwidth="0x8" edc:desc="Received Characters"/>
            <edc:SFRFieldDef edc:cname="RXCHR1" edc:nzwidth="0x8" edc:desc="Received Characters"/>
            <edc:AdjustPoint edc:offset="-1"/>
            <edc:SFRFieldDef edc:cname="RXSYNH" edc:nzwidth="0x1" edc:desc="Received Sync"/>
            <edc:SFRFieldDef edc:cname="RXCHR2" edc:nzwidth="0x8" edc:desc="Received Characters"/>
            <edc:SFRFieldDef edc:cname="RXCHR3" edc:nzwidth="0x8" edc:desc="Received Characters"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_US_THR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4000C21C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TXCHR0" edc:nzwidth="0x8" edc:desc="Character to be Transmitted"/>
            <edc:SFRFieldDef edc:cname="TXCHR1" edc:nzwidth="0x8" edc:desc="Character to be Transmitted"/>
            <edc:AdjustPoint edc:offset="-1"/>
            <edc:SFRFieldDef edc:cname="TXSYNH" edc:nzwidth="0x1" edc:desc="Sync Field to be Transmitted"/>
            <edc:SFRFieldDef edc:cname="TXCHR2" edc:nzwidth="0x8" edc:desc="Character to be Transmitted"/>
            <edc:SFRFieldDef edc:cname="TXCHR3" edc:nzwidth="0x8" edc:desc="Character to be Transmitted"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_US_BRGR" edc:nzwidth="0x20" edc:access="-------------nnnnnnnnnnnnnnnnnnn" edc:impl="0x7FFFF" edc:_addr="0x4000C220">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="CD" edc:nzwidth="0x10" edc:desc="Clock Divider"/>
            <edc:SFRFieldDef edc:cname="FP" edc:nzwidth="0x3" edc:desc="Fractional Part"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_US_RTOR" edc:nzwidth="0x20" edc:access="---------------nnnnnnnnnnnnnnnnn" edc:impl="0x1FFFF" edc:_addr="0x4000C224">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TO" edc:nzwidth="0x11" edc:desc="Timeout Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_US_TTGR" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:impl="0xFF" edc:_addr="0x4000C228">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TG" edc:nzwidth="0x8" edc:desc="Timeguard Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x14" edc:_addr="0x4000C22C"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_US_FIDI" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x4000C240">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="FI_DI_RATIO" edc:nzwidth="0x10" edc:desc="FI Over DI Ratio Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_US_NER" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:impl="0xFF" edc:_addr="0x4000C244">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="NB_ERRORS" edc:nzwidth="0x8" edc:desc="Number of Errors"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4000C248"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_US_IF" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:impl="0xFF" edc:_addr="0x4000C24C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="IRDA_FILTER" edc:nzwidth="0x8" edc:desc="IrDA Filter"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_US_MAN" edc:nzwidth="0x20" edc:access="nnnn--nn----nnnn---n--nn----nnnn" edc:impl="0xF30F130F" edc:_addr="0x4000C250">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TX_PL" edc:nzwidth="0x4" edc:desc="Transmitter Preamble Length"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TX_PP" edc:nzwidth="0x2" edc:desc="Transmitter Preamble Pattern">
              <edc:SFRFieldSemantic edc:cname="ALL_ONE" edc:desc="The preamble is composed of '1's" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ALL_ZERO" edc:desc="The preamble is composed of '0's" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ZERO_ONE" edc:desc="The preamble is composed of '01's" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="ONE_ZERO" edc:desc="The preamble is composed of '10's" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TX_MPOL" edc:nzwidth="0x1" edc:desc="Transmitter Manchester Polarity"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RX_PL" edc:nzwidth="0x4" edc:desc="Receiver Preamble Length"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="RX_PP" edc:nzwidth="0x2" edc:desc="Receiver Preamble Pattern detected">
              <edc:SFRFieldSemantic edc:cname="ALL_ONE" edc:desc="The preamble is composed of '1's" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ALL_ZERO" edc:desc="The preamble is composed of '0's" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ZERO_ONE" edc:desc="The preamble is composed of '01's" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="ONE_ZERO" edc:desc="The preamble is composed of '10's" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RX_MPOL" edc:nzwidth="0x1" edc:desc="Receiver Manchester Polarity"/>
            <edc:SFRFieldDef edc:cname="ONE" edc:nzwidth="0x1" edc:desc="Must Be Set to 1"/>
            <edc:SFRFieldDef edc:cname="DRIFT" edc:nzwidth="0x1" edc:desc="Drift Compensation"/>
            <edc:SFRFieldDef edc:cname="RXIDLEV" edc:nzwidth="0x1" edc:desc="Receiver Idle Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_US_LINMR" edc:nzwidth="0x20" edc:access="--------------nnnnnnnnnnnnnnnnnn" edc:impl="0x3FFFF" edc:_addr="0x4000C254">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="NACT" edc:nzwidth="0x2" edc:desc="LIN Node Action">
              <edc:SFRFieldSemantic edc:cname="PUBLISH" edc:desc="The USART transmits the response." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SUBSCRIBE" edc:desc="The USART receives the response." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="IGNORE" edc:desc="The USART does not transmit and does not receive the response." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PARDIS" edc:nzwidth="0x1" edc:desc="Parity Disable"/>
            <edc:SFRFieldDef edc:cname="CHKDIS" edc:nzwidth="0x1" edc:desc="Checksum Disable"/>
            <edc:SFRFieldDef edc:cname="CHKTYP" edc:nzwidth="0x1" edc:desc="Checksum Type"/>
            <edc:SFRFieldDef edc:cname="DLM" edc:nzwidth="0x1" edc:desc="Data Length Mode"/>
            <edc:SFRFieldDef edc:cname="FSDIS" edc:nzwidth="0x1" edc:desc="Frame Slot Mode Disable"/>
            <edc:SFRFieldDef edc:cname="WKUPTYP" edc:nzwidth="0x1" edc:desc="Wakeup Signal Type"/>
            <edc:SFRFieldDef edc:cname="DLC" edc:nzwidth="0x8" edc:desc="Data Length Control"/>
            <edc:SFRFieldDef edc:cname="PDCM" edc:nzwidth="0x1" edc:desc="PDC Mode"/>
            <edc:SFRFieldDef edc:cname="SYNCDIS" edc:nzwidth="0x1" edc:desc="Synchronization Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_US_LINIR" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:impl="0xFF" edc:_addr="0x4000C258">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="IDCHR" edc:nzwidth="0x8" edc:desc="Identifier Character"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_US_LINBRR" edc:nzwidth="0x20" edc:access="-------------rrrrrrrrrrrrrrrrrrr" edc:impl="0x7FFFF" edc:_addr="0x4000C25C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="LINCD" edc:nzwidth="0x10" edc:desc="Clock Divider after Synchronization"/>
            <edc:SFRFieldDef edc:cname="LINFP" edc:nzwidth="0x3" edc:desc="Fractional Part after Synchronization"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x30" edc:_addr="0x4000C260"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_US_CMPR" edc:nzwidth="0x20" edc:access="-------nnnnnnnnn-nnn---nnnnnnnnn" edc:impl="0x1FF71FF" edc:_addr="0x4000C290">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="VAL1" edc:nzwidth="0x9" edc:desc="First Comparison Value for Received Character"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CMPMODE" edc:nzwidth="0x2" edc:desc="Comparison Mode">
              <edc:SFRFieldSemantic edc:cname="FLAG_ONLY" edc:desc="Any character is received and comparison function drives CMP flag." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="START_CONDITION" edc:desc="Comparison condition must be met to start reception." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FILTER" edc:desc="Comparison must be met to receive the current data only" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMPPAR" edc:nzwidth="0x1" edc:desc="Compare Parity"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="VAL2" edc:nzwidth="0x9" edc:desc="Second Comparison Value for Received Character"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x4000C294"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_US_FMR" edc:nzwidth="0x20" edc:access="--nnnnnn--nnnnnn--nnnnnnn-nn--nn" edc:impl="0x3F3F3FB3" edc:_addr="0x4000C2A0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TXRDYM" edc:nzwidth="0x2" edc:desc="Transmitter Ready Mode">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="TXRDY will be at level '1' when at least one data can be written in the transmit FIFO. When DMA is enabled to transfer data and FLEX_US_MR.MODE9=0 (up to 8 bits to transfer on the line), the chunk of 1 byte must be configured in the DMA. If the transfer is performed by software, the access type must be defined as a byte." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="TXRDY will be at level '1' when at least two data can be written in the transmit FIFO. To minimize system bus load, when DMA is enabled to transfer data and FLEX_US_MR.MODE9=0 (up to 8 bits to transfer on the line), the chunk of 1 halfword (1 halfword carries 2 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 2 accesses) or halfword (2 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="TXRDY will be at level '1' when at least four data can be written in the transmit FIFO. To minimize system bus load, when DMA is enabled to transfer data and FLEX_US_MR.MODE9=0 (up to 8 bits to transfer on the line), the chunk of 1 word (1 word carries 4 bytes) must be configured in the DMA (chunk size=1 and word access). If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 4 accesses), halfword (2 bytes per access, 2 accesses) or word (4 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXRDYM" edc:nzwidth="0x2" edc:desc="Receiver Ready Mode">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="RXRDY will be at level '1' when at least one unread data is in the receive FIFO. When DMA is enabled to transfer data and FLEX_US_MR.MODE9=0 (up to 8 bits to transfer on the line), the chunk of 1 byte must be configured in the DMA. If the transfer is performed by software, the access type must be defined as a byte." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="RXRDY will be at level '1' when at least two unread data are in the receive FIFO. To minimize system bus load, when DMA is enabled to transfer data and FLEX_US_MR.MODE9=0 (up to 8 bits to transfer on the line), the chunk of 1 halfword (1 halfword carries 2 bytes) must be configured in the DMA (chunk size=1 and halfword access). If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 2 accesses) or halfword (2 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="RXRDY will be at level '1' when at least four unread data are in the receive FIFO. To minimize system bus load, when DMA is enabled to transfer data and FLEX_US_MR.MODE9=0 (up to 8 bits to transfer on the line), the chunk of 1 word (1 word carries 4 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 4 accesses), halfword (2 bytes per access, 2 accesses) or word (4 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FRTSC" edc:nzwidth="0x1" edc:desc="FIFO RTS Pin Control enable (Hardware Handshaking mode only)"/>
            <edc:SFRFieldDef edc:cname="TXFTHRES" edc:nzwidth="0x6" edc:desc="Transmit FIFO Threshold"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXFTHRES" edc:nzwidth="0x6" edc:desc="Receive FIFO Threshold"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXFTHRES2" edc:nzwidth="0x6" edc:desc="Receive FIFO Threshold 2"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_US_FLR" edc:nzwidth="0x20" edc:access="----------rrrrrr----------rrrrrr" edc:impl="0x3F003F" edc:_addr="0x4000C2A4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TXFL" edc:nzwidth="0x6" edc:desc="Transmit FIFO Level"/>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="RXFL" edc:nzwidth="0x6" edc:desc="Receive FIFO Level"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_US_FIER" edc:nzwidth="0x20" edc:access="----------------------w-wwwwwwww" edc:impl="0x2FF" edc:_addr="0x4000C2A8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF2" edc:nzwidth="0x1" edc:desc="RXFTHF2 Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_US_FIDR" edc:nzwidth="0x20" edc:access="----------------------w-wwwwwwww" edc:impl="0x2FF" edc:_addr="0x4000C2AC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF2" edc:nzwidth="0x1" edc:desc="RXFTHF2 Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_US_FIMR" edc:nzwidth="0x20" edc:access="----------------------r-rrrrrrrr" edc:impl="0x2FF" edc:_addr="0x4000C2B0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF2" edc:nzwidth="0x1" edc:desc="RXFTHF2 Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_US_FESR" edc:nzwidth="0x20" edc:access="----------------------rrrrrrrrrr" edc:impl="0x3FF" edc:_addr="0x4000C2B4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Empty Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Full Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Threshold Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="Receive FIFO Empty Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="Receive FIFO Full Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="Receive FIFO Threshold Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Pointer Error Flag"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="Receive FIFO Pointer Error Flag"/>
            <edc:SFRFieldDef edc:cname="TXFLOCK" edc:nzwidth="0x1" edc:desc="Transmit FIFO Lock"/>
            <edc:SFRFieldDef edc:cname="RXFTHF2" edc:nzwidth="0x1" edc:desc="Receive FIFO Threshold Flag 2 (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2C" edc:_addr="0x4000C2B8"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_US_WPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:impl="0xFFFFFF07" edc:_addr="0x4000C2E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="WPEN" edc:nzwidth="0x1" edc:desc="Write Protection Enable"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:nzwidth="0x1" edc:desc="Write Protection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:nzwidth="0x1" edc:desc="Write Protection Control Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of bits WPEN, WPITEN and WPCREN. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x555341"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_US_WPSR" edc:nzwidth="0x20" edc:access="--------rrrrrrrrrrrrrrrr-------r" edc:impl="0xFFFF01" edc:_addr="0x4000C2E8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="WPVS" edc:nzwidth="0x1" edc:desc="Write Protection Violation Status"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:nzwidth="0x10" edc:desc="Write Protection Violation Source"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x114" edc:_addr="0x4000C2EC"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_SPI_CR" edc:nzwidth="0x20" edc:access="ww-----w------ww---w----w-----ww" edc:impl="0xC1031083" edc:_addr="0x4000C400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="SPIEN" edc:nzwidth="0x1" edc:desc="SPI Enable"/>
            <edc:SFRFieldDef edc:cname="SPIDIS" edc:nzwidth="0x1" edc:desc="SPI Disable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="SPI Software Reset"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="REQCLR" edc:nzwidth="0x1" edc:desc="Request to Clear the Comparison Trigger"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="TXFCLR" edc:nzwidth="0x1" edc:desc="Transmit FIFO Clear"/>
            <edc:SFRFieldDef edc:cname="RXFCLR" edc:nzwidth="0x1" edc:desc="Receive FIFO Clear"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="LASTXFER" edc:nzwidth="0x1" edc:desc="Last Transfer"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="FIFODIS" edc:nzwidth="0x1" edc:desc="FIFO Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_SPI_MR" edc:nzwidth="0x20" edc:access="nnnnnnnn------nn---n----n-nnnnnn" edc:impl="0xFF0310BF" edc:_addr="0x4000C404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="MSTR" edc:nzwidth="0x1" edc:desc="Host/Client Mode"/>
            <edc:SFRFieldDef edc:cname="PS" edc:nzwidth="0x1" edc:desc="Peripheral Select"/>
            <edc:SFRFieldDef edc:cname="PCSDEC" edc:nzwidth="0x1" edc:desc="Chip Select Decode"/>
            <edc:SFRFieldDef edc:cname="BRSRCCLK" edc:nzwidth="0x1" edc:desc="Bit Rate Source Clock">
              <edc:SFRFieldSemantic edc:cname="PERIPH_CLK" edc:desc="The peripheral clock is the source clock for the bit rate generation." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="GCLK is the source clock for the bit rate generation, thus the bit rate can be independent of the core/peripheral clock." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MODFDIS" edc:nzwidth="0x1" edc:desc="Mode Fault Detection"/>
            <edc:SFRFieldDef edc:cname="WDRBT" edc:nzwidth="0x1" edc:desc="Wait Data Read Before Transfer"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LLB" edc:nzwidth="0x1" edc:desc="Local Loopback Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CMPMODE" edc:nzwidth="0x1" edc:desc="Comparison Mode">
              <edc:SFRFieldSemantic edc:cname="FLAG_ONLY" edc:desc="Any character is received and comparison function drives CMP flag." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="START_CONDITION" edc:desc="Comparison condition must be met to start reception of all incoming characters until REQCLR is set." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PCS" edc:nzwidth="0x2" edc:desc="Peripheral Chip Select"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="DLYBCS" edc:nzwidth="0x8" edc:desc="Delay Between Chip Selects"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_SPI_RDR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4000C408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="RD0" edc:nzwidth="0x10" edc:desc="Receive Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="RD1" edc:nzwidth="0x8" edc:desc="Receive Data"/>
            <edc:SFRFieldDef edc:cname="RD1" edc:nzwidth="0x10" edc:desc="Receive Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="RD3" edc:nzwidth="0x8" edc:desc="Receive Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_SPI_TDR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4000C40C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TD0" edc:nzwidth="0x10" edc:desc="Transmit Data"/>
            <edc:SFRFieldDef edc:cname="TD1" edc:nzwidth="0x10" edc:desc="Transmit Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="LASTXFER" edc:nzwidth="0x1" edc:desc="Last Transfer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_SPI_SR" edc:nzwidth="0x20" edc:access="rrrrrrrr-------r---rrrrrrrrrrrrr" edc:impl="0xFF011FFF" edc:_addr="0x4000C410">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="RDRF" edc:nzwidth="0x1" edc:desc="Receive Data Register Full (cleared by reading FLEX_SPI_RDR)"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:nzwidth="0x1" edc:desc="Transmit Data Register Empty (cleared by writing FLEX_SPI_TDR)"/>
            <edc:SFRFieldDef edc:cname="MODF" edc:nzwidth="0x1" edc:desc="Mode Fault Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:nzwidth="0x1" edc:desc="Overrun Error Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of RX Buffer (cleared by writing FLEX_SPI_RCR or FLEX_SPI_RNCR)"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of TX Buffer (cleared by writing FLEX_SPI_TCR or FLEX_SPI_TNCR)"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="RX Buffer Full (cleared by writing FLEX_SPI_RCR or FLEX_SPI_RNCR)"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="TX Buffer Empty (cleared by writing FLEX_SPI_TCR or FLEX_SPI_TNCR)"/>
            <edc:SFRFieldDef edc:cname="NSSR" edc:nzwidth="0x1" edc:desc="NSS Rising (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="Transmission Registers Empty (cleared by writing FLEX_SPI_TDR)"/>
            <edc:SFRFieldDef edc:cname="UNDES" edc:nzwidth="0x1" edc:desc="Underrun Error Status (Client mode only) (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SFERR" edc:nzwidth="0x1" edc:desc="Client Mode Frame Error (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SPIENS" edc:nzwidth="0x1" edc:desc="SPI Enable Status"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Empty Flag (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Full Flag (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Threshold Flag (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="Receive FIFO Empty Flag"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="Receive FIFO Full Flag"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="Receive FIFO Threshold Flag"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Pointer Error Flag"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="Receive FIFO Pointer Error Flag"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_SPI_IER" edc:nzwidth="0x20" edc:access="wwwwwwww-----------wwwwwwwwwwwww" edc:impl="0xFF001FFF" edc:_addr="0x4000C414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="RDRF" edc:nzwidth="0x1" edc:desc="Receive Data Register Full Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:nzwidth="0x1" edc:desc="SPI Transmit Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MODF" edc:nzwidth="0x1" edc:desc="Mode Fault Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="NSSR" edc:nzwidth="0x1" edc:desc="NSS Rising Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="Transmission Registers Empty Enable"/>
            <edc:SFRFieldDef edc:cname="UNDES" edc:nzwidth="0x1" edc:desc="Underrun Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SFERR" edc:nzwidth="0x1" edc:desc="Client Mode Frame Error Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0xB"/>
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_SPI_IDR" edc:nzwidth="0x20" edc:access="wwwwwwww-----------wwwwwwwwwwwww" edc:impl="0xFF001FFF" edc:_addr="0x4000C418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="RDRF" edc:nzwidth="0x1" edc:desc="Receive Data Register Full Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:nzwidth="0x1" edc:desc="SPI Transmit Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="MODF" edc:nzwidth="0x1" edc:desc="Mode Fault Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="NSSR" edc:nzwidth="0x1" edc:desc="NSS Rising Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="Transmission Registers Empty Disable"/>
            <edc:SFRFieldDef edc:cname="UNDES" edc:nzwidth="0x1" edc:desc="Underrun Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SFERR" edc:nzwidth="0x1" edc:desc="Client Mode Frame Error Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0xB"/>
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_SPI_IMR" edc:nzwidth="0x20" edc:access="rrrrrrrr-----------rrrrrrrrrrrrr" edc:impl="0xFF001FFF" edc:_addr="0x4000C41C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="RDRF" edc:nzwidth="0x1" edc:desc="Receive Data Register Full Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:nzwidth="0x1" edc:desc="SPI Transmit Data Register Empty Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="MODF" edc:nzwidth="0x1" edc:desc="Mode Fault Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="NSSR" edc:nzwidth="0x1" edc:desc="NSS Rising Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="Transmission Registers Empty Mask"/>
            <edc:SFRFieldDef edc:cname="UNDES" edc:nzwidth="0x1" edc:desc="Underrun Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="SFERR" edc:nzwidth="0x1" edc:desc="Client Mode Frame Error Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0xB"/>
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x10" edc:_addr="0x4000C420"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_SPI_CSR0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4000C430">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity"/>
            <edc:SFRFieldDef edc:cname="NCPHA" edc:nzwidth="0x1" edc:desc="Clock Phase"/>
            <edc:SFRFieldDef edc:cname="CSNAAT" edc:nzwidth="0x1" edc:desc="Chip Select Not Active After Transfer (Ignored if CSAAT = 1)"/>
            <edc:SFRFieldDef edc:cname="CSAAT" edc:nzwidth="0x1" edc:desc="Chip Select Active After Transfer"/>
            <edc:SFRFieldDef edc:cname="BITS" edc:nzwidth="0x4" edc:desc="Bits Per Transfer">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits for transfer" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits for transfer" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="10_BIT" edc:desc="10 bits for transfer" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="11_BIT" edc:desc="11 bits for transfer" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="12_BIT" edc:desc="12 bits for transfer" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="13 bits for transfer" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="14_BIT" edc:desc="14 bits for transfer" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="15_BIT" edc:desc="15 bits for transfer" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="16_BIT" edc:desc="16 bits for transfer" edc:when="(field &amp; 0xF) == 0x08"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCBR" edc:nzwidth="0x8" edc:desc="Serial Clock Bit Rate"/>
            <edc:SFRFieldDef edc:cname="DLYBS" edc:nzwidth="0x8" edc:desc="Delay Before SPCK"/>
            <edc:SFRFieldDef edc:cname="DLYBCT" edc:nzwidth="0x8" edc:desc="Delay Between Consecutive Transfers"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_SPI_CSR1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4000C434">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity"/>
            <edc:SFRFieldDef edc:cname="NCPHA" edc:nzwidth="0x1" edc:desc="Clock Phase"/>
            <edc:SFRFieldDef edc:cname="CSNAAT" edc:nzwidth="0x1" edc:desc="Chip Select Not Active After Transfer (Ignored if CSAAT = 1)"/>
            <edc:SFRFieldDef edc:cname="CSAAT" edc:nzwidth="0x1" edc:desc="Chip Select Active After Transfer"/>
            <edc:SFRFieldDef edc:cname="BITS" edc:nzwidth="0x4" edc:desc="Bits Per Transfer">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits for transfer" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits for transfer" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="10_BIT" edc:desc="10 bits for transfer" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="11_BIT" edc:desc="11 bits for transfer" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="12_BIT" edc:desc="12 bits for transfer" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="13 bits for transfer" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="14_BIT" edc:desc="14 bits for transfer" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="15_BIT" edc:desc="15 bits for transfer" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="16_BIT" edc:desc="16 bits for transfer" edc:when="(field &amp; 0xF) == 0x08"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCBR" edc:nzwidth="0x8" edc:desc="Serial Clock Bit Rate"/>
            <edc:SFRFieldDef edc:cname="DLYBS" edc:nzwidth="0x8" edc:desc="Delay Before SPCK"/>
            <edc:SFRFieldDef edc:cname="DLYBCT" edc:nzwidth="0x8" edc:desc="Delay Between Consecutive Transfers"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x4000C438"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_SPI_FMR" edc:nzwidth="0x20" edc:access="--nnnnnn--nnnnnn----------nn--nn" edc:impl="0x3F3F0033" edc:_addr="0x4000C440">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TXRDYM" edc:nzwidth="0x2" edc:desc="Transmit Data Register Empty Mode">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="TDRE will be at level '1' when at least one data can be written in the transmit FIFO. When DMA is enabled to transfer data, the chunk of 1 data (byte or halfword) must be configured in the DMA depending on FLEX_SPI_CSR0.BITS. If the transfer is performed by software, the access type (byte, halfword) must be defined depending on FLEX_SPI_CSR0.BITS." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="TDRE will be at level '1' when at least two data can be written in the transmit FIFO. FIFO. To minimize system bus load, when DMA is enabled to transfer data, the chunk of 1 word (1 word carries 2 data) must be configured in the DMA. If the transfer is performed by software, the access type must be defined as word (2 data per access, 1 access)." edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXRDYM" edc:nzwidth="0x2" edc:desc="Receive Data Register Full Mode">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="RDRF will be at level '1' when at least one unread data is in the receive FIFO. When DMA is enabled to transfer data and FLEX_SPI_CSR0.BITS=0 (8 bits transfered on SPI line), the chunk of 1 byte must be configured in the DMA. When FLEX_SPI_CSR0.BITS&gt;0 (9 to 16 bits transfered on SPI line), the chunk of 1 halfword must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte or halfword depending on FLEX_SPI_CSR0.BITS." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="RDRF will be at level '1' when at least two unread data are in the receive FIFO. To minimize system bus load, when DMA is enabled to transfer data and FLEX_SPI_CSR0.BITS=0 (8 bits transfered on SPI line), the chunk of 1 halfword (1 halfword carries 2 bytes) must be configured in the DMA. When FLEX_SPI_CSR0.BITS&gt;0 (9 to 16 bits transfered on SPI line), the chunk of 1 word (1 word carries 2 halfwords) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as halfword (2 bytes per access, 1 access when FLEX_SPI_CSR0.BITS=0), or word (2 halfwords per access, 2 accesses when FLEX_SPI_CSR0.BITS&gt;0)." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="RDRF will be at level '1' when at least four unread data are in the receive FIFO. To minimize system bus load, when DMA is enabled to transfer data and FLEX_SPI_CSR0.BITS=0 (8 bits transfered on SPI line), the chunk of 1 word (1 halfword carries 4 bytes) must be configured in the DMA. When FLEX_SPI_CSR0.BITS&gt;0 (9 to 16 bits transfered on SPI line), the chunk of 2 words (1 word carries 4 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as word (4 bytes per access, 1 access when FLEX_SPI_CSR0.BITS=0 or 2 halfwords per access, 2 accesses when FLEX_SPI_CSR0.BITS&gt;0)." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="TXFTHRES" edc:nzwidth="0x6" edc:desc="Transmit FIFO Threshold"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXFTHRES" edc:nzwidth="0x6" edc:desc="Receive FIFO Threshold"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_SPI_FLR" edc:nzwidth="0x20" edc:access="----------rrrrrr----------rrrrrr" edc:impl="0x3F003F" edc:_addr="0x4000C444">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TXFL" edc:nzwidth="0x6" edc:desc="Transmit FIFO Level"/>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="RXFL" edc:nzwidth="0x6" edc:desc="Receive FIFO Level"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_SPI_CMPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4000C448">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="VAL1" edc:nzwidth="0x10" edc:desc="First Comparison Value for Received Character"/>
            <edc:SFRFieldDef edc:cname="VAL2" edc:nzwidth="0x10" edc:desc="Second Comparison Value for Received Character"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x98" edc:_addr="0x4000C44C"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_SPI_WPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:impl="0xFFFFFF07" edc:_addr="0x4000C4E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="WPEN" edc:nzwidth="0x1" edc:desc="Write Protection Enable"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:nzwidth="0x1" edc:desc="Write Protection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:nzwidth="0x1" edc:desc="Write Protection Control Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of bits WPEN, WPITEN and WPCREN. Always reads as 0" edc:when="(field &amp; 0xFFFFFF) == 0x535049"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_SPI_WPSR" edc:nzwidth="0x20" edc:access="----------------rrrrrrrr-------r" edc:impl="0xFF01" edc:_addr="0x4000C4E8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="WPVS" edc:nzwidth="0x1" edc:desc="Write Protection Violation Status"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:nzwidth="0x8" edc:desc="Write Protection Violation Source"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x114" edc:_addr="0x4000C4EC"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_TWI_CR" edc:nzwidth="0x20" edc:access="--ww-www------wwwwwwwwwwwwwwwwww" edc:impl="0x3703FFFF" edc:_addr="0x4000C600">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="START" edc:nzwidth="0x1" edc:desc="Send a START Condition"/>
            <edc:SFRFieldDef edc:cname="STOP" edc:nzwidth="0x1" edc:desc="Send a STOP Condition"/>
            <edc:SFRFieldDef edc:cname="MSEN" edc:nzwidth="0x1" edc:desc="TWI Host Mode Enabled"/>
            <edc:SFRFieldDef edc:cname="MSDIS" edc:nzwidth="0x1" edc:desc="TWI Host Mode Disabled"/>
            <edc:SFRFieldDef edc:cname="SVEN" edc:nzwidth="0x1" edc:desc="TWI Client Mode Enabled"/>
            <edc:SFRFieldDef edc:cname="SVDIS" edc:nzwidth="0x1" edc:desc="TWI Client Mode Disabled"/>
            <edc:SFRFieldDef edc:cname="QUICK" edc:nzwidth="0x1" edc:desc="SMBus Quick Command"/>
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="HSEN" edc:nzwidth="0x1" edc:desc="TWI High-Speed Mode Enabled"/>
            <edc:SFRFieldDef edc:cname="HSDIS" edc:nzwidth="0x1" edc:desc="TWI High-Speed Mode Disabled"/>
            <edc:SFRFieldDef edc:cname="SMBEN" edc:nzwidth="0x1" edc:desc="SMBus Mode Enabled"/>
            <edc:SFRFieldDef edc:cname="SMBDIS" edc:nzwidth="0x1" edc:desc="SMBus Mode Disabled"/>
            <edc:SFRFieldDef edc:cname="PECEN" edc:nzwidth="0x1" edc:desc="Packet Error Checking Enable"/>
            <edc:SFRFieldDef edc:cname="PECDIS" edc:nzwidth="0x1" edc:desc="Packet Error Checking Disable"/>
            <edc:SFRFieldDef edc:cname="PECRQ" edc:nzwidth="0x1" edc:desc="PEC Request"/>
            <edc:SFRFieldDef edc:cname="CLEAR" edc:nzwidth="0x1" edc:desc="Bus CLEAR Command"/>
            <edc:SFRFieldDef edc:cname="ACMEN" edc:nzwidth="0x1" edc:desc="Alternative Command Mode Enable"/>
            <edc:SFRFieldDef edc:cname="ACMDIS" edc:nzwidth="0x1" edc:desc="Alternative Command Mode Disable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="TXFCLR" edc:nzwidth="0x1" edc:desc="Transmit FIFO Clear"/>
            <edc:SFRFieldDef edc:cname="RXFCLR" edc:nzwidth="0x1" edc:desc="Receive FIFO Clear"/>
            <edc:SFRFieldDef edc:cname="TXFLCLR" edc:nzwidth="0x1" edc:desc="Transmit FIFO Lock CLEAR"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="FIFODIS" edc:nzwidth="0x1" edc:desc="FIFO Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_TWI_MMR" edc:nzwidth="0x20" edc:access="-------n-nnnnnnn-nnn--nn--------" edc:impl="0x17F7300" edc:_addr="0x4000C604">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="IADRSZ" edc:nzwidth="0x2" edc:desc="Internal Device Address Size">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No internal device address" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="1_BYTE" edc:desc="One-byte internal device address" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="2_BYTE" edc:desc="Two-byte internal device address" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="3_BYTE" edc:desc="Three-byte internal device address" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MREAD" edc:nzwidth="0x1" edc:desc="Host Read Direction"/>
            <edc:SFRFieldDef edc:cname="SCLRBL" edc:nzwidth="0x2" edc:desc="SCL Rise Boost Level"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DADR" edc:nzwidth="0x7" edc:desc="Device Address"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NOAP" edc:nzwidth="0x1" edc:desc="No Auto-Stop On NACK Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_TWI_SMR" edc:nzwidth="0x20" edc:access="nnnn-----nnnnnnn-nnnnnnnnnnnnn-n" edc:impl="0xF07F7FFD" edc:_addr="0x4000C608">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="NACKEN" edc:nzwidth="0x1" edc:desc="Client Receiver Data Phase NACK Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SMDA" edc:nzwidth="0x1" edc:desc="SMBus Default Address"/>
            <edc:SFRFieldDef edc:cname="SMHH" edc:nzwidth="0x1" edc:desc="SMBus Host Header"/>
            <edc:SFRFieldDef edc:cname="SADAT" edc:nzwidth="0x1" edc:desc="Client Address Treated as Data"/>
            <edc:SFRFieldDef edc:cname="BSEL" edc:nzwidth="0x1" edc:desc="TWI Bus Selection"/>
            <edc:SFRFieldDef edc:cname="SCLWSDIS" edc:nzwidth="0x1" edc:desc="Clock Wait State Disable"/>
            <edc:SFRFieldDef edc:cname="SNIFF" edc:nzwidth="0x1" edc:desc="Client Sniffer Mode"/>
            <edc:SFRFieldDef edc:cname="MASK" edc:nzwidth="0x7" edc:desc="Client Address Mask"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SADR" edc:nzwidth="0x7" edc:desc="Client Address"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="SADR1EN" edc:nzwidth="0x1" edc:desc="Client Address 1 Enable"/>
            <edc:SFRFieldDef edc:cname="SADR2EN" edc:nzwidth="0x1" edc:desc="Client Address 2 Enable"/>
            <edc:SFRFieldDef edc:cname="SADR3EN" edc:nzwidth="0x1" edc:desc="Client Address 3 Enable"/>
            <edc:SFRFieldDef edc:cname="DATAMEN" edc:nzwidth="0x1" edc:desc="Data Matching Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_TWI_IADR" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:impl="0xFFFFFF" edc:_addr="0x4000C60C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="IADR" edc:nzwidth="0x18" edc:desc="Internal Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_TWI_CWGR" edc:nzwidth="0x20" edc:access="--nnnnnn---n-nnnnnnnnnnnnnnnnnnn" edc:impl="0x3F17FFFF" edc:_addr="0x4000C610">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="CLDIV" edc:nzwidth="0x8" edc:desc="Clock Low Divider"/>
            <edc:SFRFieldDef edc:cname="CHDIV" edc:nzwidth="0x8" edc:desc="Clock High Divider"/>
            <edc:SFRFieldDef edc:cname="CKDIV" edc:nzwidth="0x3" edc:desc="Clock Divider"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BRSRCCLK" edc:nzwidth="0x1" edc:desc="Bit Rate Source Clock">
              <edc:SFRFieldSemantic edc:cname="PERIPH_CLK" edc:desc="The peripheral clock is the source clock for the bit rate generation." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="GCLK is the source clock for the bit rate generation, thus the bit rate can be independent of the core/peripheral clock." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="HOLD" edc:nzwidth="0x6" edc:desc="TWD Hold Time Versus TWCK Falling"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x4000C614"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_TWI_SR" edc:nzwidth="0x20" edc:access="-----rrrr-rrrrrrrrrrrrrrrrrrrrrr" edc:impl="0x7BFFFFF" edc:_addr="0x4000C620">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TXCOMP" edc:nzwidth="0x1" edc:desc="Transmission Completed (cleared by writing FLEX_TWI_THR)"/>
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="Receive Holding Register Ready (cleared when reading FLEX_TWI_RHR)"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="Transmit Holding Register Ready (cleared by writing FLEX_TWI_THR)"/>
            <edc:SFRFieldDef edc:cname="SVREAD" edc:nzwidth="0x1" edc:desc="Client Read"/>
            <edc:SFRFieldDef edc:cname="SVACC" edc:nzwidth="0x1" edc:desc="Client Access"/>
            <edc:SFRFieldDef edc:cname="GACC" edc:nzwidth="0x1" edc:desc="General Call Access (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:nzwidth="0x1" edc:desc="Underrun Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="NACK" edc:nzwidth="0x1" edc:desc="Not Acknowledged (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="ARBLST" edc:nzwidth="0x1" edc:desc="Arbitration Lost (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SCLWS" edc:nzwidth="0x1" edc:desc="Clock Wait State"/>
            <edc:SFRFieldDef edc:cname="EOSACC" edc:nzwidth="0x1" edc:desc="End Of Client Access (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of RX Buffer (cleared by writing FLEX_TWI_RCR or FLEX_TWI_RNCR)"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of TX Buffer (cleared by writing FLEX_TWI_TCR or FLEX_TWI_TNCR)"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="RX Buffer Full (cleared by writing FLEX_TWI_RCR or FLEX_TWI_RNCR)"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="TX Buffer Empty (cleared by writing FLEX_TWI_TCR or FLEX_TWI_TNCR)"/>
            <edc:SFRFieldDef edc:cname="MCACK" edc:nzwidth="0x1" edc:desc="Host Code Acknowledge (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SMBAF" edc:nzwidth="0x1" edc:desc="SMBus Alert Flag"/>
            <edc:SFRFieldDef edc:cname="TOUT" edc:nzwidth="0x1" edc:desc="Timeout Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="PECERR" edc:nzwidth="0x1" edc:desc="PEC Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SMBDAM" edc:nzwidth="0x1" edc:desc="SMBus Default Address Match (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SMBHHM" edc:nzwidth="0x1" edc:desc="SMBus Host Header Address Match (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFLOCK" edc:nzwidth="0x1" edc:desc="Transmit FIFO Lock"/>
            <edc:SFRFieldDef edc:cname="SCL" edc:nzwidth="0x1" edc:desc="SCL Line Value"/>
            <edc:SFRFieldDef edc:cname="SDA" edc:nzwidth="0x1" edc:desc="SDA Line Value"/>
            <edc:SFRFieldDef edc:cname="SR" edc:nzwidth="0x1" edc:desc="Start Repeated"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_TWI_IER" edc:nzwidth="0x20" edc:access="----------wwww-wwwwwwwwwwwww-www" edc:impl="0x3DFFF7" edc:_addr="0x4000C624">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TXCOMP" edc:nzwidth="0x1" edc:desc="Transmission Completed Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="Receive Holding Register Ready Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="Transmit Holding Register Ready Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SVACC" edc:nzwidth="0x1" edc:desc="Client Access Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="GACC" edc:nzwidth="0x1" edc:desc="General Call Access Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:nzwidth="0x1" edc:desc="Underrun Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="NACK" edc:nzwidth="0x1" edc:desc="Not Acknowledge Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ARBLST" edc:nzwidth="0x1" edc:desc="Arbitration Lost Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SCL_WS" edc:nzwidth="0x1" edc:desc="Clock Wait State Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EOSACC" edc:nzwidth="0x1" edc:desc="End Of Client Access Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MCACK" edc:nzwidth="0x1" edc:desc="Host Code Acknowledge Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TOUT" edc:nzwidth="0x1" edc:desc="Timeout Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PECERR" edc:nzwidth="0x1" edc:desc="PEC Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SMBDAM" edc:nzwidth="0x1" edc:desc="SMBus Default Address Match Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SMBHHM" edc:nzwidth="0x1" edc:desc="SMBus Host Header Address Match Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_TWI_IDR" edc:nzwidth="0x20" edc:access="----------wwww-wwwwwwwwwwwww-www" edc:impl="0x3DFFF7" edc:_addr="0x4000C628">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TXCOMP" edc:nzwidth="0x1" edc:desc="Transmission Completed Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="Receive Holding Register Ready Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="Transmit Holding Register Ready Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SVACC" edc:nzwidth="0x1" edc:desc="Client Access Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="GACC" edc:nzwidth="0x1" edc:desc="General Call Access Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:nzwidth="0x1" edc:desc="Underrun Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="NACK" edc:nzwidth="0x1" edc:desc="Not Acknowledge Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ARBLST" edc:nzwidth="0x1" edc:desc="Arbitration Lost Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SCL_WS" edc:nzwidth="0x1" edc:desc="Clock Wait State Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="EOSACC" edc:nzwidth="0x1" edc:desc="End Of Client Access Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="MCACK" edc:nzwidth="0x1" edc:desc="Host Code Acknowledge Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TOUT" edc:nzwidth="0x1" edc:desc="Timeout Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="PECERR" edc:nzwidth="0x1" edc:desc="PEC Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SMBDAM" edc:nzwidth="0x1" edc:desc="SMBus Default Address Match Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SMBHHM" edc:nzwidth="0x1" edc:desc="SMBus Host Header Address Match Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_TWI_IMR" edc:nzwidth="0x20" edc:access="----------rrrr-rrrrrrrrrrrrr-rrr" edc:impl="0x3DFFF7" edc:_addr="0x4000C62C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TXCOMP" edc:nzwidth="0x1" edc:desc="Transmission Completed Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="Receive Holding Register Ready Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="Transmit Holding Register Ready Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SVACC" edc:nzwidth="0x1" edc:desc="Client Access Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="GACC" edc:nzwidth="0x1" edc:desc="General Call Access Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:nzwidth="0x1" edc:desc="Underrun Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="NACK" edc:nzwidth="0x1" edc:desc="Not Acknowledge Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ARBLST" edc:nzwidth="0x1" edc:desc="Arbitration Lost Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="SCL_WS" edc:nzwidth="0x1" edc:desc="Clock Wait State Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="EOSACC" edc:nzwidth="0x1" edc:desc="End Of Client Access Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="MCACK" edc:nzwidth="0x1" edc:desc="Host Code Acknowledge Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TOUT" edc:nzwidth="0x1" edc:desc="Timeout Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="PECERR" edc:nzwidth="0x1" edc:desc="PEC Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="SMBDAM" edc:nzwidth="0x1" edc:desc="SMBus Default Address Match Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="SMBHHM" edc:nzwidth="0x1" edc:desc="SMBus Host Header Address Match Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_TWI_RHR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4000C630">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="RXDATA0" edc:nzwidth="0x8" edc:desc="Host or Client Receive Holding Data 0"/>
            <edc:SFRFieldDef edc:cname="RXDATA1" edc:nzwidth="0x8" edc:desc="Host or Client Receive Holding Data 1"/>
            <edc:AdjustPoint edc:offset="-6"/>
            <edc:SFRFieldDef edc:cname="PSTATE" edc:nzwidth="0x1" edc:desc="Stop State (Client Sniffer Mode only)"/>
            <edc:SFRFieldDef edc:cname="ASTATE" edc:nzwidth="0x2" edc:desc="Acknowledge State (Client Sniffer Mode only)">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Acknowledge or Nacknowledge detected after previously logged data" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ACK" edc:desc="Acknowledge (A) detected after previously logged data" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NACK" edc:desc="Nacknowledge (NA) detected after previously logged data" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="UNDEF" edc:desc="Not defined" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RXDATA2" edc:nzwidth="0x8" edc:desc="Host or Client Receive Holding Data 2"/>
            <edc:SFRFieldDef edc:cname="RXDATA3" edc:nzwidth="0x8" edc:desc="Host or Client Receive Holding Data 3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_TWI_THR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4000C634">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TXDATA0" edc:nzwidth="0x8" edc:desc="Host or Client Transmit Holding Data 0"/>
            <edc:SFRFieldDef edc:cname="TXDATA1" edc:nzwidth="0x8" edc:desc="Host or Client Transmit Holding Data 1"/>
            <edc:SFRFieldDef edc:cname="TXDATA2" edc:nzwidth="0x8" edc:desc="Host or Client Transmit Holding Data 2"/>
            <edc:SFRFieldDef edc:cname="TXDATA3" edc:nzwidth="0x8" edc:desc="Host or Client Transmit Holding Data 3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_TWI_SMBTR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn----nnnn" edc:impl="0xFFFFFF0F" edc:_addr="0x4000C638">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="PRESC" edc:nzwidth="0x4" edc:desc="SMBus Clock Prescaler"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TLOWS" edc:nzwidth="0x8" edc:desc="Client Clock Stretch Maximum Cycles"/>
            <edc:SFRFieldDef edc:cname="TLOWM" edc:nzwidth="0x8" edc:desc="Host Clock Stretch Maximum Cycles"/>
            <edc:SFRFieldDef edc:cname="THMAX" edc:nzwidth="0x8" edc:desc="Clock High Maximum Cycles"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_TWI_HSR" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:impl="0xFF" edc:_addr="0x4000C63C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="MCODE" edc:nzwidth="0x8" edc:desc="TWI High Speed Host Code"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_TWI_ACR" edc:nzwidth="0x20" edc:access="------nnnnnnnnnn------nnnnnnnnnn" edc:impl="0x3FF03FF" edc:_addr="0x4000C640">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="DATAL" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Transfer Direction"/>
            <edc:SFRFieldDef edc:cname="PEC" edc:nzwidth="0x1" edc:desc="PEC Request (SMBus Mode only)"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="NDATAL" edc:nzwidth="0x8" edc:desc="Next Data Length"/>
            <edc:SFRFieldDef edc:cname="NDIR" edc:nzwidth="0x1" edc:desc="Next Transfer Direction"/>
            <edc:SFRFieldDef edc:cname="NPEC" edc:nzwidth="0x1" edc:desc="Next PEC Request (SMBus Mode only)"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_TWI_FILTR" edc:nzwidth="0x20" edc:access="---------------------nnn------nn" edc:impl="0x703" edc:_addr="0x4000C644">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="FILT" edc:nzwidth="0x1" edc:desc="RX Digital Filter"/>
            <edc:SFRFieldDef edc:cname="PADFEN" edc:nzwidth="0x1" edc:desc="PAD Filter Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="THRES" edc:nzwidth="0x3" edc:desc="Digital Filter Threshold"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_TWI_HSCWGR" edc:nzwidth="0x20" edc:access="-------------nnnnnnnnnnnnnnnnnnn" edc:impl="0x7FFFF" edc:_addr="0x4000C648">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="HSCLDIV" edc:nzwidth="0x8" edc:desc="High Speed Clock Low Divider"/>
            <edc:SFRFieldDef edc:cname="HSCHDIV" edc:nzwidth="0x8" edc:desc="High Speed Clock High Divider"/>
            <edc:SFRFieldDef edc:cname="HSCKDIV" edc:nzwidth="0x3" edc:desc="High Speed Clock Divider"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_TWI_SWMR" edc:nzwidth="0x20" edc:access="nnnnnnnn-nnnnnnn-nnnnnnn-nnnnnnn" edc:impl="0xFF7F7F7F" edc:_addr="0x4000C64C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="SADR1" edc:nzwidth="0x7" edc:desc="Client Address 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SADR2" edc:nzwidth="0x7" edc:desc="Client Address 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SADR3" edc:nzwidth="0x7" edc:desc="Client Address 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DATAM" edc:nzwidth="0x8" edc:desc="Data Match"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_TWI_FMR" edc:nzwidth="0x20" edc:access="--nnnnnn--nnnnnn----------nn--nn" edc:impl="0x3F3F0033" edc:_addr="0x4000C650">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TXRDYM" edc:nzwidth="0x2" edc:desc="Transmitter Ready Mode">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="TXRDY will be at level '1' when at least one data can be written in the transmit FIFO. When DMA is enabled to transfer data, the chunk of 1 byte must be configured in the DMA. If the transfer is performed by software, the access type must be defined as byte." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="TXRDY will be at level '1' when at least two data can be written in the transmit FIFO. To minimize system bus load, when DMA is enabled to transfer data, the chunk of 1 halfword (1 halfword carries 2 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 2 accesses) or halfword (2 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="TXRDY will be at level '1' when at least four data can be written in the transmit FIFO. To minimize system bus load, when DMA is enabled to transfer data, the chunk of 1 word (1 word carries 4 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 4 accesses), halfword (2 bytes per access, 2 accesses) or word (4 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXRDYM" edc:nzwidth="0x2" edc:desc="Receiver Ready Mode">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="RXRDY will be at level '1' when at least one unread data is in the receive FIFO. When DMA is enabled to transfer data the chunk of 1 byte must be configured in the DMA. If the transfer is performed by software, the access type (byte, halfword) must be defined accordingly." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="RXRDY will be at level '1' when at least two unread data are in the receive FIFO. To minimize system bus load, when DMA is enabled to transfer data, the chunk of 1 halfword (1 halfword carries 2 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 2 accesses) or halfword (2 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="RXRDY will be at level '1' when at least four unread data are in the receive FIFO. To minimize system bus load, when DMA is enabled to transfer data, the chunk of 1 word (1 word carries 4 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 4 accesses), halfword (2 bytes per access, 2 accesses) or word (4 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="TXFTHRES" edc:nzwidth="0x6" edc:desc="Transmit FIFO Threshold"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXFTHRES" edc:nzwidth="0x6" edc:desc="Receive FIFO Threshold"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_TWI_FLR" edc:nzwidth="0x20" edc:access="----------rrrrrr----------rrrrrr" edc:impl="0x3F003F" edc:_addr="0x4000C654">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TXFL" edc:nzwidth="0x6" edc:desc="Transmit FIFO Level"/>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="RXFL" edc:nzwidth="0x6" edc:desc="Receive FIFO Level"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x4000C658"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_TWI_FSR" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:impl="0xFF" edc:_addr="0x4000C660">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Empty Flag (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Full Flag (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Threshold Flag (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="Receive FIFO Empty Flag"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="Receive FIFO Full Flag"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="Receive FIFO Threshold Flag"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Pointer Error Flag"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="Receive FIFO Pointer Error Flag"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_TWI_FIER" edc:nzwidth="0x20" edc:access="------------------------wwwwwwww" edc:impl="0xFF" edc:_addr="0x4000C664">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_TWI_FIDR" edc:nzwidth="0x20" edc:access="------------------------wwwwwwww" edc:impl="0xFF" edc:_addr="0x4000C668">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_TWI_FIMR" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:impl="0xFF" edc:_addr="0x4000C66C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x74" edc:_addr="0x4000C670"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_TWI_WPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:impl="0xFFFFFF07" edc:_addr="0x4000C6E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="WPEN" edc:nzwidth="0x1" edc:desc="Write Protection Enable"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:nzwidth="0x1" edc:desc="Write Protection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:nzwidth="0x1" edc:desc="Write Protection Control Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of bits WPEN, WPITEN and WPCREN. Always reads as 0" edc:when="(field &amp; 0xFFFFFF) == 0x545749"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM3" edc:cname="FLEX_TWI_WPSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrr-------r" edc:impl="0xFFFFFF01" edc:_addr="0x4000C6E8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="WPVS" edc:nzwidth="0x1" edc:desc="Write Protect Violation Status (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:nzwidth="0x18" edc:desc="Write Protection Violation Source"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3914" edc:_addr="0x4000C6EC"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_MR" edc:nzwidth="0x20" edc:access="------------------------------nn" edc:impl="0x3" edc:_addr="0x40010000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="OPMODE" edc:nzwidth="0x2" edc:desc="FLEXCOM Operating Mode">
              <edc:SFRFieldSemantic edc:cname="NO_COM" edc:desc="No communication" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USART" edc:desc="All UART related protocols are selected (RS232, RS485, IrDA, ISO7816, LIN,) SPI/TWI related registers are not accessible and have no impact on IOs." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SPI" edc:desc="SPI operating mode is selected. USART/TWI related registers are not accessible and have no impact on IOs." edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TWI" edc:desc="All TWI related protocols are selected (TWI, SMBus). USART/SPI related registers are not accessible and have no impact on IOs." edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x40010004"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_RHR" edc:nzwidth="0x20" edc:access="----------------rrrrrrrrrrrrrrrr" edc:impl="0xFFFF" edc:_addr="0x40010010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="RXDATA" edc:nzwidth="0x10" edc:desc="Receive Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x40010014"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_THR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x40010020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="TXDATA" edc:nzwidth="0x10" edc:desc="Transmit Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xDC" edc:_addr="0x40010024"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_RPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40010100">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="RXPTR" edc:nzwidth="0x20" edc:desc="Receive Pointer Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_RCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x40010104">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="RXCTR" edc:nzwidth="0x10" edc:desc="Receive Counter Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_TPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40010108">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="TXPTR" edc:nzwidth="0x20" edc:desc="Transmit Counter Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_TCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x4001010C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="TXCTR" edc:nzwidth="0x10" edc:desc="Transmit Counter Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_RNPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40010110">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="RXNPTR" edc:nzwidth="0x20" edc:desc="Receive Next Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_RNCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x40010114">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="RXNCTR" edc:nzwidth="0x10" edc:desc="Receive Next Counter"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_TNPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40010118">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="TXNPTR" edc:nzwidth="0x20" edc:desc="Transmit Next Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_TNCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x4001011C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="TXNCTR" edc:nzwidth="0x10" edc:desc="Transmit Counter Next"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_PTCR" edc:nzwidth="0x20" edc:access="-------w----wwww------ww------ww" edc:impl="0x10F0303" edc:_addr="0x40010120">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="RXTEN" edc:nzwidth="0x1" edc:desc="Receiver Transfer Enable"/>
            <edc:SFRFieldDef edc:cname="RXTDIS" edc:nzwidth="0x1" edc:desc="Receiver Transfer Disable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="TXTEN" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Enable"/>
            <edc:SFRFieldDef edc:cname="TXTDIS" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Disable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="RXCBEN" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Enable"/>
            <edc:SFRFieldDef edc:cname="RXCBDIS" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Disable"/>
            <edc:SFRFieldDef edc:cname="TXCBEN" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Enable"/>
            <edc:SFRFieldDef edc:cname="TXCBDIS" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Disable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ERRCLR" edc:nzwidth="0x1" edc:desc="Transfer Bus Error Clear"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_PTSR" edc:nzwidth="0x20" edc:access="-------r-----r-r-------r-------r" edc:impl="0x1050101" edc:_addr="0x40010124">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="RXTEN" edc:nzwidth="0x1" edc:desc="Receiver Transfer Enable"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="TXTEN" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Enable"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="RXCBEN" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXCBEN" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Transfer Bus Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_PWPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:impl="0xFFFFFF07" edc:_addr="0x40010128">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="WPPTREN" edc:nzwidth="0x1" edc:desc="Write Protection Pointer Registers Enable"/>
            <edc:SFRFieldDef edc:cname="WPCTREN" edc:nzwidth="0x1" edc:desc="Write Protection Counter Registers Enable"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:nzwidth="0x1" edc:desc="Write Protection Control Register Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x504443"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xD4" edc:_addr="0x4001012C"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_US_CR" edc:nzwidth="0x20" edc:access="ww-w-www--wwww--wwwwwwwwwwwwww--" edc:impl="0xD73CFFFC" edc:_addr="0x40010200">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RSTRX" edc:nzwidth="0x1" edc:desc="Reset Receiver"/>
            <edc:SFRFieldDef edc:cname="RSTTX" edc:nzwidth="0x1" edc:desc="Reset Transmitter"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
            <edc:SFRFieldDef edc:cname="RXDIS" edc:nzwidth="0x1" edc:desc="Receiver Disable"/>
            <edc:SFRFieldDef edc:cname="TXEN" edc:nzwidth="0x1" edc:desc="Transmitter Enable"/>
            <edc:SFRFieldDef edc:cname="TXDIS" edc:nzwidth="0x1" edc:desc="Transmitter Disable"/>
            <edc:SFRFieldDef edc:cname="RSTSTA" edc:nzwidth="0x1" edc:desc="Reset Status Bits"/>
            <edc:SFRFieldDef edc:cname="STTBRK" edc:nzwidth="0x1" edc:desc="Start Break"/>
            <edc:SFRFieldDef edc:cname="STPBRK" edc:nzwidth="0x1" edc:desc="Stop Break"/>
            <edc:SFRFieldDef edc:cname="STTTO" edc:nzwidth="0x1" edc:desc="Clear TIMEOUT Flag and Start Timeout After Next Character Received"/>
            <edc:SFRFieldDef edc:cname="SENDA" edc:nzwidth="0x1" edc:desc="Send Address"/>
            <edc:SFRFieldDef edc:cname="RSTIT" edc:nzwidth="0x1" edc:desc="Reset Iterations"/>
            <edc:SFRFieldDef edc:cname="RSTNACK" edc:nzwidth="0x1" edc:desc="Reset Non Acknowledge"/>
            <edc:SFRFieldDef edc:cname="RETTO" edc:nzwidth="0x1" edc:desc="Start Timeout Immediately"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RTSEN" edc:nzwidth="0x1" edc:desc="Request to Send Enable"/>
            <edc:SFRFieldDef edc:cname="RTSDIS" edc:nzwidth="0x1" edc:desc="Request to Send Disable"/>
            <edc:SFRFieldDef edc:cname="LINABT" edc:nzwidth="0x1" edc:desc="Abort LIN Transmission"/>
            <edc:SFRFieldDef edc:cname="LINWKUP" edc:nzwidth="0x1" edc:desc="Send LIN Wakeup Signal"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TXFCLR" edc:nzwidth="0x1" edc:desc="Transmit FIFO Clear"/>
            <edc:SFRFieldDef edc:cname="RXFCLR" edc:nzwidth="0x1" edc:desc="Receive FIFO Clear"/>
            <edc:SFRFieldDef edc:cname="TXFLCLR" edc:nzwidth="0x1" edc:desc="Transmit FIFO Lock CLEAR"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="REQCLR" edc:nzwidth="0x1" edc:desc="Request to Clear the Comparison Trigger"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="FIFODIS" edc:nzwidth="0x1" edc:desc="FIFO Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_US_MR" edc:nzwidth="0x20" edc:access="nnnn-nnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:impl="0xF7FFFFFF" edc:_addr="0x40010204">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="USART_MODE" edc:nzwidth="0x4" edc:desc="USART Mode of Operation">
              <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Normal mode" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="USCLKS" edc:nzwidth="0x2" edc:desc="Clock Selection">
              <edc:SFRFieldSemantic edc:cname="MCK" edc:desc="Peripheral clock is selected." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DIV" edc:desc="Peripheral clock divided (DIV=8) is selected." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="PCK" edc:desc="PMC programmable clock (PCK) is selected. If the SCK pin is driven (CLKO = 1), the CD field must be greater than 1." edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SCK" edc:desc="Serial clock (SCK) is selected." edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CHRL" edc:nzwidth="0x2" edc:desc="Character Length">
              <edc:SFRFieldSemantic edc:cname="_5_BIT" edc:desc="Character length is 5 bits." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="_6_BIT" edc:desc="Character length is 6 bits." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_7_BIT" edc:desc="Character length is 7 bits." edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BIT" edc:desc="Character length is 8 bits." edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SYNC" edc:nzwidth="0x1" edc:desc="Synchronous Mode Select"/>
            <edc:SFRFieldDef edc:cname="PAR" edc:nzwidth="0x3" edc:desc="Parity Type">
              <edc:SFRFieldSemantic edc:cname="EVEN" edc:desc="Even parity" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ODD" edc:desc="Odd parity" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SPACE" edc:desc="Parity forced to 0 (Space)" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="MARK" edc:desc="Parity forced to 1 (Mark)" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="NO" edc:desc="No parity" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="MULTIDROP" edc:desc="Multidrop mode" edc:when="(field &amp; 0x7) == 0x06"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NBSTOP" edc:nzwidth="0x2" edc:desc="Number of Stop Bits">
              <edc:SFRFieldSemantic edc:cname="_1_BIT" edc:desc="1 stop bit" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="_1_5_BIT" edc:desc="1.5 stop bit (SYNC = 0) or reserved (SYNC = 1)" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_2_BIT" edc:desc="2 stop bits" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CHMODE" edc:nzwidth="0x2" edc:desc="Channel Mode">
              <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Normal mode" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="AUTOMATIC" edc:desc="Automatic Echo. Receiver input is connected to the TXD pin." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="LOCAL_LOOPBACK" edc:desc="Local Loopback. Transmitter output is connected to the Receiver Input." edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="REMOTE_LOOPBACK" edc:desc="Remote Loopback. RXD pin is internally connected to the TXD pin." edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSBF" edc:nzwidth="0x1" edc:desc="Bit Order"/>
            <edc:SFRFieldDef edc:cname="MODE9" edc:nzwidth="0x1" edc:desc="9-bit Character Length"/>
            <edc:SFRFieldDef edc:cname="CLKO" edc:nzwidth="0x1" edc:desc="Clock Output Select"/>
            <edc:SFRFieldDef edc:cname="OVER" edc:nzwidth="0x1" edc:desc="Oversampling Mode"/>
            <edc:SFRFieldDef edc:cname="OOKRXD" edc:nzwidth="0x1" edc:desc="OOK Demodulation Input Selection"/>
            <edc:SFRFieldDef edc:cname="OOKEN" edc:nzwidth="0x1" edc:desc="OOK Modulation/Demodulation Enabled"/>
            <edc:SFRFieldDef edc:cname="VAR_SYNC" edc:nzwidth="0x1" edc:desc="Variable Synchronization of Command/Data Sync Start Frame Delimiter"/>
            <edc:SFRFieldDef edc:cname="INVDATA" edc:nzwidth="0x1" edc:desc="Inverted Data"/>
            <edc:SFRFieldDef edc:cname="MAX_ITERATION" edc:nzwidth="0x3" edc:desc="Maximum Number of Automatic Iteration"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FILTER" edc:nzwidth="0x1" edc:desc="Receive Line Filter"/>
            <edc:SFRFieldDef edc:cname="MAN" edc:nzwidth="0x1" edc:desc="Manchester Encoder/Decoder Enable"/>
            <edc:SFRFieldDef edc:cname="MODSYNC" edc:nzwidth="0x1" edc:desc="Manchester Synchronization Mode"/>
            <edc:SFRFieldDef edc:cname="ONEBIT" edc:nzwidth="0x1" edc:desc="Start Frame Delimiter Selector"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_US_IER" edc:nzwidth="0x20" edc:access="wwwwwwww-w--w---wwwwwwwwwwwwwwww" edc:impl="0xFF48FFFF" edc:_addr="0x40010208">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="RXRDY Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="TXRDY Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Receiver Break Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Transfer Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FRAME" edc:nzwidth="0x1" edc:desc="Framing Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PARE" edc:nzwidth="0x1" edc:desc="Parity Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TIMEOUT" edc:nzwidth="0x1" edc:desc="Timeout Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="TXEMPTY Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ITER" edc:nzwidth="0x1" edc:desc="Max number of Repetitions Reached Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Buffer Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Buffer Full Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINBK" edc:nzwidth="0x1" edc:desc="LIN Break Sent or LIN Break Received Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINID" edc:nzwidth="0x1" edc:desc="LIN Identifier Sent or LIN Identifier Received Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINTC" edc:nzwidth="0x1" edc:desc="LIN Transfer Completed Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear to Send Input Change Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MANE" edc:nzwidth="0x1" edc:desc="Manchester Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINBE" edc:nzwidth="0x1" edc:desc="LIN Bus Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINISFE" edc:nzwidth="0x1" edc:desc="LIN Inconsistent Synch Field Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINIPE" edc:nzwidth="0x1" edc:desc="LIN Identifier Parity Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINCE" edc:nzwidth="0x1" edc:desc="LIN Checksum Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINSNRE" edc:nzwidth="0x1" edc:desc="LIN Client Not Responding Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINSTE" edc:nzwidth="0x1" edc:desc="LIN Synch Tolerance Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINHTE" edc:nzwidth="0x1" edc:desc="LIN Header Timeout Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_US_IDR" edc:nzwidth="0x20" edc:access="wwwwwwww-w--w---wwwwwwwwwwwwwwww" edc:impl="0xFF48FFFF" edc:_addr="0x4001020C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="RXRDY Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="TXRDY Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Receiver Break Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Transfer Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="FRAME" edc:nzwidth="0x1" edc:desc="Framing Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="PARE" edc:nzwidth="0x1" edc:desc="Parity Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TIMEOUT" edc:nzwidth="0x1" edc:desc="Timeout Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="TXEMPTY Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ITER" edc:nzwidth="0x1" edc:desc="Max Number of Repetitions Reached Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Buffer Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Buffer Full Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINBK" edc:nzwidth="0x1" edc:desc="LIN Break Sent or LIN Break Received Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINID" edc:nzwidth="0x1" edc:desc="LIN Identifier Sent or LIN Identifier Received Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINTC" edc:nzwidth="0x1" edc:desc="LIN Transfer Completed Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear to Send Input Change Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MANE" edc:nzwidth="0x1" edc:desc="Manchester Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINBE" edc:nzwidth="0x1" edc:desc="LIN Bus Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINISFE" edc:nzwidth="0x1" edc:desc="LIN Inconsistent Synch Field Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINIPE" edc:nzwidth="0x1" edc:desc="LIN Identifier Parity Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINCE" edc:nzwidth="0x1" edc:desc="LIN Checksum Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINSNRE" edc:nzwidth="0x1" edc:desc="LIN Client Not Responding Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINSTE" edc:nzwidth="0x1" edc:desc="LIN Synch Tolerance Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINHTE" edc:nzwidth="0x1" edc:desc="LIN Header Timeout Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_US_IMR" edc:nzwidth="0x20" edc:access="rrrrrrrr-r--r---rrrrrrrrrrrrrrrr" edc:impl="0xFF48FFFF" edc:_addr="0x40010210">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="RXRDY Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="TXRDY Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Receiver Break Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Transfer Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="FRAME" edc:nzwidth="0x1" edc:desc="Framing Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="PARE" edc:nzwidth="0x1" edc:desc="Parity Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TIMEOUT" edc:nzwidth="0x1" edc:desc="Timeout Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="TXEMPTY Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ITER" edc:nzwidth="0x1" edc:desc="Max Number of Repetitions Reached Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Buffer Empty Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Buffer Full Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINBK" edc:nzwidth="0x1" edc:desc="LIN Break Sent or LIN Break Received Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINID" edc:nzwidth="0x1" edc:desc="LIN Identifier Sent or LIN Identifier Received Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINTC" edc:nzwidth="0x1" edc:desc="LIN Transfer Completed Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear to Send Input Change Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MANE" edc:nzwidth="0x1" edc:desc="Manchester Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINBE" edc:nzwidth="0x1" edc:desc="LIN Bus Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINISFE" edc:nzwidth="0x1" edc:desc="LIN Inconsistent Synch Field Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINIPE" edc:nzwidth="0x1" edc:desc="LIN Identifier Parity Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINCE" edc:nzwidth="0x1" edc:desc="LIN Checksum Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINSNRE" edc:nzwidth="0x1" edc:desc="LIN Client Not Responding Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINSTE" edc:nzwidth="0x1" edc:desc="LIN Synch Tolerance Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINHTE" edc:nzwidth="0x1" edc:desc="LIN Header Timeout Error Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_US_CSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrr--r---rrrrrrrrrrrrrrrr" edc:impl="0xFFC8FFFF" edc:_addr="0x40010214">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="Receiver Ready (cleared by reading FLEX_US_RHR)"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="Transmitter Ready (cleared by writing FLEX_US_THR)"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received/End of Break"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of RX Buffer (cleared by writing FLEX_US_RCR or FLEX_US_RNCR)"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of TX Buffer (cleared by writing FLEX_US_TCR or FLEX_US_TNCR)"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error"/>
            <edc:SFRFieldDef edc:cname="FRAME" edc:nzwidth="0x1" edc:desc="Framing Error"/>
            <edc:SFRFieldDef edc:cname="PARE" edc:nzwidth="0x1" edc:desc="Parity Error"/>
            <edc:SFRFieldDef edc:cname="TIMEOUT" edc:nzwidth="0x1" edc:desc="Receiver Timeout"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="Transmitter Empty (cleared by writing FLEX_US_THR)"/>
            <edc:SFRFieldDef edc:cname="ITER" edc:nzwidth="0x1" edc:desc="Max Number of Repetitions Reached"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="TX Buffer Empty (cleared by writing FLEX_US_TCR or FLEX_US_TNCR)"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="RX Buffer Full (cleared by writing FLEX_US_RCR or FLEX_US_RNCR)"/>
            <edc:SFRFieldDef edc:cname="LINBK" edc:nzwidth="0x1" edc:desc="LIN Break Sent or LIN Break Received"/>
            <edc:SFRFieldDef edc:cname="LINID" edc:nzwidth="0x1" edc:desc="LIN Identifier Sent or LIN Identifier Received"/>
            <edc:SFRFieldDef edc:cname="LINTC" edc:nzwidth="0x1" edc:desc="LIN Transfer Completed"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear to Send Input Change Flag"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Status"/>
            <edc:SFRFieldDef edc:cname="LINBLS" edc:nzwidth="0x1" edc:desc="LIN Bus Line Status"/>
            <edc:SFRFieldDef edc:cname="MANE" edc:nzwidth="0x1" edc:desc="Manchester Error"/>
            <edc:SFRFieldDef edc:cname="LINBE" edc:nzwidth="0x1" edc:desc="LIN Bit Error"/>
            <edc:SFRFieldDef edc:cname="LINISFE" edc:nzwidth="0x1" edc:desc="LIN Inconsistent Synch Field Error"/>
            <edc:SFRFieldDef edc:cname="LINIPE" edc:nzwidth="0x1" edc:desc="LIN Identifier Parity Error"/>
            <edc:SFRFieldDef edc:cname="LINCE" edc:nzwidth="0x1" edc:desc="LIN Checksum Error"/>
            <edc:SFRFieldDef edc:cname="LINSNRE" edc:nzwidth="0x1" edc:desc="LIN Client Not Responding Error"/>
            <edc:SFRFieldDef edc:cname="LINSTE" edc:nzwidth="0x1" edc:desc="LIN Synch Tolerance Error"/>
            <edc:SFRFieldDef edc:cname="LINHTE" edc:nzwidth="0x1" edc:desc="LIN Header Timeout Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_US_RHR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40010218">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="RXCHR0" edc:nzwidth="0x8" edc:desc="Received Characters"/>
            <edc:SFRFieldDef edc:cname="RXCHR1" edc:nzwidth="0x8" edc:desc="Received Characters"/>
            <edc:AdjustPoint edc:offset="-1"/>
            <edc:SFRFieldDef edc:cname="RXSYNH" edc:nzwidth="0x1" edc:desc="Received Sync"/>
            <edc:SFRFieldDef edc:cname="RXCHR2" edc:nzwidth="0x8" edc:desc="Received Characters"/>
            <edc:SFRFieldDef edc:cname="RXCHR3" edc:nzwidth="0x8" edc:desc="Received Characters"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_US_THR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4001021C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="TXCHR0" edc:nzwidth="0x8" edc:desc="Character to be Transmitted"/>
            <edc:SFRFieldDef edc:cname="TXCHR1" edc:nzwidth="0x8" edc:desc="Character to be Transmitted"/>
            <edc:AdjustPoint edc:offset="-1"/>
            <edc:SFRFieldDef edc:cname="TXSYNH" edc:nzwidth="0x1" edc:desc="Sync Field to be Transmitted"/>
            <edc:SFRFieldDef edc:cname="TXCHR2" edc:nzwidth="0x8" edc:desc="Character to be Transmitted"/>
            <edc:SFRFieldDef edc:cname="TXCHR3" edc:nzwidth="0x8" edc:desc="Character to be Transmitted"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_US_BRGR" edc:nzwidth="0x20" edc:access="-------------nnnnnnnnnnnnnnnnnnn" edc:impl="0x7FFFF" edc:_addr="0x40010220">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="CD" edc:nzwidth="0x10" edc:desc="Clock Divider"/>
            <edc:SFRFieldDef edc:cname="FP" edc:nzwidth="0x3" edc:desc="Fractional Part"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_US_RTOR" edc:nzwidth="0x20" edc:access="---------------nnnnnnnnnnnnnnnnn" edc:impl="0x1FFFF" edc:_addr="0x40010224">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="TO" edc:nzwidth="0x11" edc:desc="Timeout Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_US_TTGR" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:impl="0xFF" edc:_addr="0x40010228">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="TG" edc:nzwidth="0x8" edc:desc="Timeguard Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x14" edc:_addr="0x4001022C"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_US_FIDI" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x40010240">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="FI_DI_RATIO" edc:nzwidth="0x10" edc:desc="FI Over DI Ratio Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_US_NER" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:impl="0xFF" edc:_addr="0x40010244">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="NB_ERRORS" edc:nzwidth="0x8" edc:desc="Number of Errors"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x40010248"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_US_IF" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:impl="0xFF" edc:_addr="0x4001024C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="IRDA_FILTER" edc:nzwidth="0x8" edc:desc="IrDA Filter"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_US_MAN" edc:nzwidth="0x20" edc:access="nnnn--nn----nnnn---n--nn----nnnn" edc:impl="0xF30F130F" edc:_addr="0x40010250">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="TX_PL" edc:nzwidth="0x4" edc:desc="Transmitter Preamble Length"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TX_PP" edc:nzwidth="0x2" edc:desc="Transmitter Preamble Pattern">
              <edc:SFRFieldSemantic edc:cname="ALL_ONE" edc:desc="The preamble is composed of '1's" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ALL_ZERO" edc:desc="The preamble is composed of '0's" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ZERO_ONE" edc:desc="The preamble is composed of '01's" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="ONE_ZERO" edc:desc="The preamble is composed of '10's" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TX_MPOL" edc:nzwidth="0x1" edc:desc="Transmitter Manchester Polarity"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RX_PL" edc:nzwidth="0x4" edc:desc="Receiver Preamble Length"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="RX_PP" edc:nzwidth="0x2" edc:desc="Receiver Preamble Pattern detected">
              <edc:SFRFieldSemantic edc:cname="ALL_ONE" edc:desc="The preamble is composed of '1's" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ALL_ZERO" edc:desc="The preamble is composed of '0's" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ZERO_ONE" edc:desc="The preamble is composed of '01's" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="ONE_ZERO" edc:desc="The preamble is composed of '10's" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RX_MPOL" edc:nzwidth="0x1" edc:desc="Receiver Manchester Polarity"/>
            <edc:SFRFieldDef edc:cname="ONE" edc:nzwidth="0x1" edc:desc="Must Be Set to 1"/>
            <edc:SFRFieldDef edc:cname="DRIFT" edc:nzwidth="0x1" edc:desc="Drift Compensation"/>
            <edc:SFRFieldDef edc:cname="RXIDLEV" edc:nzwidth="0x1" edc:desc="Receiver Idle Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_US_LINMR" edc:nzwidth="0x20" edc:access="--------------nnnnnnnnnnnnnnnnnn" edc:impl="0x3FFFF" edc:_addr="0x40010254">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="NACT" edc:nzwidth="0x2" edc:desc="LIN Node Action">
              <edc:SFRFieldSemantic edc:cname="PUBLISH" edc:desc="The USART transmits the response." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SUBSCRIBE" edc:desc="The USART receives the response." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="IGNORE" edc:desc="The USART does not transmit and does not receive the response." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PARDIS" edc:nzwidth="0x1" edc:desc="Parity Disable"/>
            <edc:SFRFieldDef edc:cname="CHKDIS" edc:nzwidth="0x1" edc:desc="Checksum Disable"/>
            <edc:SFRFieldDef edc:cname="CHKTYP" edc:nzwidth="0x1" edc:desc="Checksum Type"/>
            <edc:SFRFieldDef edc:cname="DLM" edc:nzwidth="0x1" edc:desc="Data Length Mode"/>
            <edc:SFRFieldDef edc:cname="FSDIS" edc:nzwidth="0x1" edc:desc="Frame Slot Mode Disable"/>
            <edc:SFRFieldDef edc:cname="WKUPTYP" edc:nzwidth="0x1" edc:desc="Wakeup Signal Type"/>
            <edc:SFRFieldDef edc:cname="DLC" edc:nzwidth="0x8" edc:desc="Data Length Control"/>
            <edc:SFRFieldDef edc:cname="PDCM" edc:nzwidth="0x1" edc:desc="PDC Mode"/>
            <edc:SFRFieldDef edc:cname="SYNCDIS" edc:nzwidth="0x1" edc:desc="Synchronization Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_US_LINIR" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:impl="0xFF" edc:_addr="0x40010258">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="IDCHR" edc:nzwidth="0x8" edc:desc="Identifier Character"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_US_LINBRR" edc:nzwidth="0x20" edc:access="-------------rrrrrrrrrrrrrrrrrrr" edc:impl="0x7FFFF" edc:_addr="0x4001025C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="LINCD" edc:nzwidth="0x10" edc:desc="Clock Divider after Synchronization"/>
            <edc:SFRFieldDef edc:cname="LINFP" edc:nzwidth="0x3" edc:desc="Fractional Part after Synchronization"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x30" edc:_addr="0x40010260"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_US_CMPR" edc:nzwidth="0x20" edc:access="-------nnnnnnnnn-nnn---nnnnnnnnn" edc:impl="0x1FF71FF" edc:_addr="0x40010290">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="VAL1" edc:nzwidth="0x9" edc:desc="First Comparison Value for Received Character"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CMPMODE" edc:nzwidth="0x2" edc:desc="Comparison Mode">
              <edc:SFRFieldSemantic edc:cname="FLAG_ONLY" edc:desc="Any character is received and comparison function drives CMP flag." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="START_CONDITION" edc:desc="Comparison condition must be met to start reception." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FILTER" edc:desc="Comparison must be met to receive the current data only" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMPPAR" edc:nzwidth="0x1" edc:desc="Compare Parity"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="VAL2" edc:nzwidth="0x9" edc:desc="Second Comparison Value for Received Character"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x40010294"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_US_FMR" edc:nzwidth="0x20" edc:access="--nnnnnn--nnnnnn--nnnnnnn-nn--nn" edc:impl="0x3F3F3FB3" edc:_addr="0x400102A0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="TXRDYM" edc:nzwidth="0x2" edc:desc="Transmitter Ready Mode">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="TXRDY will be at level '1' when at least one data can be written in the transmit FIFO. When DMA is enabled to transfer data and FLEX_US_MR.MODE9=0 (up to 8 bits to transfer on the line), the chunk of 1 byte must be configured in the DMA. If the transfer is performed by software, the access type must be defined as a byte." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="TXRDY will be at level '1' when at least two data can be written in the transmit FIFO. To minimize system bus load, when DMA is enabled to transfer data and FLEX_US_MR.MODE9=0 (up to 8 bits to transfer on the line), the chunk of 1 halfword (1 halfword carries 2 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 2 accesses) or halfword (2 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="TXRDY will be at level '1' when at least four data can be written in the transmit FIFO. To minimize system bus load, when DMA is enabled to transfer data and FLEX_US_MR.MODE9=0 (up to 8 bits to transfer on the line), the chunk of 1 word (1 word carries 4 bytes) must be configured in the DMA (chunk size=1 and word access). If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 4 accesses), halfword (2 bytes per access, 2 accesses) or word (4 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXRDYM" edc:nzwidth="0x2" edc:desc="Receiver Ready Mode">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="RXRDY will be at level '1' when at least one unread data is in the receive FIFO. When DMA is enabled to transfer data and FLEX_US_MR.MODE9=0 (up to 8 bits to transfer on the line), the chunk of 1 byte must be configured in the DMA. If the transfer is performed by software, the access type must be defined as a byte." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="RXRDY will be at level '1' when at least two unread data are in the receive FIFO. To minimize system bus load, when DMA is enabled to transfer data and FLEX_US_MR.MODE9=0 (up to 8 bits to transfer on the line), the chunk of 1 halfword (1 halfword carries 2 bytes) must be configured in the DMA (chunk size=1 and halfword access). If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 2 accesses) or halfword (2 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="RXRDY will be at level '1' when at least four unread data are in the receive FIFO. To minimize system bus load, when DMA is enabled to transfer data and FLEX_US_MR.MODE9=0 (up to 8 bits to transfer on the line), the chunk of 1 word (1 word carries 4 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 4 accesses), halfword (2 bytes per access, 2 accesses) or word (4 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FRTSC" edc:nzwidth="0x1" edc:desc="FIFO RTS Pin Control enable (Hardware Handshaking mode only)"/>
            <edc:SFRFieldDef edc:cname="TXFTHRES" edc:nzwidth="0x6" edc:desc="Transmit FIFO Threshold"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXFTHRES" edc:nzwidth="0x6" edc:desc="Receive FIFO Threshold"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXFTHRES2" edc:nzwidth="0x6" edc:desc="Receive FIFO Threshold 2"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_US_FLR" edc:nzwidth="0x20" edc:access="----------rrrrrr----------rrrrrr" edc:impl="0x3F003F" edc:_addr="0x400102A4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="TXFL" edc:nzwidth="0x6" edc:desc="Transmit FIFO Level"/>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="RXFL" edc:nzwidth="0x6" edc:desc="Receive FIFO Level"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_US_FIER" edc:nzwidth="0x20" edc:access="----------------------w-wwwwwwww" edc:impl="0x2FF" edc:_addr="0x400102A8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF2" edc:nzwidth="0x1" edc:desc="RXFTHF2 Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_US_FIDR" edc:nzwidth="0x20" edc:access="----------------------w-wwwwwwww" edc:impl="0x2FF" edc:_addr="0x400102AC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF2" edc:nzwidth="0x1" edc:desc="RXFTHF2 Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_US_FIMR" edc:nzwidth="0x20" edc:access="----------------------r-rrrrrrrr" edc:impl="0x2FF" edc:_addr="0x400102B0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF2" edc:nzwidth="0x1" edc:desc="RXFTHF2 Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_US_FESR" edc:nzwidth="0x20" edc:access="----------------------rrrrrrrrrr" edc:impl="0x3FF" edc:_addr="0x400102B4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Empty Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Full Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Threshold Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="Receive FIFO Empty Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="Receive FIFO Full Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="Receive FIFO Threshold Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Pointer Error Flag"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="Receive FIFO Pointer Error Flag"/>
            <edc:SFRFieldDef edc:cname="TXFLOCK" edc:nzwidth="0x1" edc:desc="Transmit FIFO Lock"/>
            <edc:SFRFieldDef edc:cname="RXFTHF2" edc:nzwidth="0x1" edc:desc="Receive FIFO Threshold Flag 2 (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2C" edc:_addr="0x400102B8"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_US_WPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:impl="0xFFFFFF07" edc:_addr="0x400102E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="WPEN" edc:nzwidth="0x1" edc:desc="Write Protection Enable"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:nzwidth="0x1" edc:desc="Write Protection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:nzwidth="0x1" edc:desc="Write Protection Control Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of bits WPEN, WPITEN and WPCREN. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x555341"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_US_WPSR" edc:nzwidth="0x20" edc:access="--------rrrrrrrrrrrrrrrr-------r" edc:impl="0xFFFF01" edc:_addr="0x400102E8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="WPVS" edc:nzwidth="0x1" edc:desc="Write Protection Violation Status"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:nzwidth="0x10" edc:desc="Write Protection Violation Source"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x114" edc:_addr="0x400102EC"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_SPI_CR" edc:nzwidth="0x20" edc:access="ww-----w------ww---w----w-----ww" edc:impl="0xC1031083" edc:_addr="0x40010400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="SPIEN" edc:nzwidth="0x1" edc:desc="SPI Enable"/>
            <edc:SFRFieldDef edc:cname="SPIDIS" edc:nzwidth="0x1" edc:desc="SPI Disable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="SPI Software Reset"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="REQCLR" edc:nzwidth="0x1" edc:desc="Request to Clear the Comparison Trigger"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="TXFCLR" edc:nzwidth="0x1" edc:desc="Transmit FIFO Clear"/>
            <edc:SFRFieldDef edc:cname="RXFCLR" edc:nzwidth="0x1" edc:desc="Receive FIFO Clear"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="LASTXFER" edc:nzwidth="0x1" edc:desc="Last Transfer"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="FIFODIS" edc:nzwidth="0x1" edc:desc="FIFO Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_SPI_MR" edc:nzwidth="0x20" edc:access="nnnnnnnn------nn---n----n-nnnnnn" edc:impl="0xFF0310BF" edc:_addr="0x40010404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="MSTR" edc:nzwidth="0x1" edc:desc="Host/Client Mode"/>
            <edc:SFRFieldDef edc:cname="PS" edc:nzwidth="0x1" edc:desc="Peripheral Select"/>
            <edc:SFRFieldDef edc:cname="PCSDEC" edc:nzwidth="0x1" edc:desc="Chip Select Decode"/>
            <edc:SFRFieldDef edc:cname="BRSRCCLK" edc:nzwidth="0x1" edc:desc="Bit Rate Source Clock">
              <edc:SFRFieldSemantic edc:cname="PERIPH_CLK" edc:desc="The peripheral clock is the source clock for the bit rate generation." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="GCLK is the source clock for the bit rate generation, thus the bit rate can be independent of the core/peripheral clock." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MODFDIS" edc:nzwidth="0x1" edc:desc="Mode Fault Detection"/>
            <edc:SFRFieldDef edc:cname="WDRBT" edc:nzwidth="0x1" edc:desc="Wait Data Read Before Transfer"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LLB" edc:nzwidth="0x1" edc:desc="Local Loopback Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CMPMODE" edc:nzwidth="0x1" edc:desc="Comparison Mode">
              <edc:SFRFieldSemantic edc:cname="FLAG_ONLY" edc:desc="Any character is received and comparison function drives CMP flag." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="START_CONDITION" edc:desc="Comparison condition must be met to start reception of all incoming characters until REQCLR is set." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PCS" edc:nzwidth="0x2" edc:desc="Peripheral Chip Select"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="DLYBCS" edc:nzwidth="0x8" edc:desc="Delay Between Chip Selects"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_SPI_RDR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40010408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="RD0" edc:nzwidth="0x10" edc:desc="Receive Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="RD1" edc:nzwidth="0x8" edc:desc="Receive Data"/>
            <edc:SFRFieldDef edc:cname="RD1" edc:nzwidth="0x10" edc:desc="Receive Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="RD3" edc:nzwidth="0x8" edc:desc="Receive Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_SPI_TDR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4001040C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="TD0" edc:nzwidth="0x10" edc:desc="Transmit Data"/>
            <edc:SFRFieldDef edc:cname="TD1" edc:nzwidth="0x10" edc:desc="Transmit Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="LASTXFER" edc:nzwidth="0x1" edc:desc="Last Transfer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_SPI_SR" edc:nzwidth="0x20" edc:access="rrrrrrrr-------r---rrrrrrrrrrrrr" edc:impl="0xFF011FFF" edc:_addr="0x40010410">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="RDRF" edc:nzwidth="0x1" edc:desc="Receive Data Register Full (cleared by reading FLEX_SPI_RDR)"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:nzwidth="0x1" edc:desc="Transmit Data Register Empty (cleared by writing FLEX_SPI_TDR)"/>
            <edc:SFRFieldDef edc:cname="MODF" edc:nzwidth="0x1" edc:desc="Mode Fault Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:nzwidth="0x1" edc:desc="Overrun Error Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of RX Buffer (cleared by writing FLEX_SPI_RCR or FLEX_SPI_RNCR)"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of TX Buffer (cleared by writing FLEX_SPI_TCR or FLEX_SPI_TNCR)"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="RX Buffer Full (cleared by writing FLEX_SPI_RCR or FLEX_SPI_RNCR)"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="TX Buffer Empty (cleared by writing FLEX_SPI_TCR or FLEX_SPI_TNCR)"/>
            <edc:SFRFieldDef edc:cname="NSSR" edc:nzwidth="0x1" edc:desc="NSS Rising (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="Transmission Registers Empty (cleared by writing FLEX_SPI_TDR)"/>
            <edc:SFRFieldDef edc:cname="UNDES" edc:nzwidth="0x1" edc:desc="Underrun Error Status (Client mode only) (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SFERR" edc:nzwidth="0x1" edc:desc="Client Mode Frame Error (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SPIENS" edc:nzwidth="0x1" edc:desc="SPI Enable Status"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Empty Flag (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Full Flag (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Threshold Flag (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="Receive FIFO Empty Flag"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="Receive FIFO Full Flag"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="Receive FIFO Threshold Flag"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Pointer Error Flag"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="Receive FIFO Pointer Error Flag"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_SPI_IER" edc:nzwidth="0x20" edc:access="wwwwwwww-----------wwwwwwwwwwwww" edc:impl="0xFF001FFF" edc:_addr="0x40010414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="RDRF" edc:nzwidth="0x1" edc:desc="Receive Data Register Full Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:nzwidth="0x1" edc:desc="SPI Transmit Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MODF" edc:nzwidth="0x1" edc:desc="Mode Fault Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="NSSR" edc:nzwidth="0x1" edc:desc="NSS Rising Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="Transmission Registers Empty Enable"/>
            <edc:SFRFieldDef edc:cname="UNDES" edc:nzwidth="0x1" edc:desc="Underrun Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SFERR" edc:nzwidth="0x1" edc:desc="Client Mode Frame Error Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0xB"/>
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_SPI_IDR" edc:nzwidth="0x20" edc:access="wwwwwwww-----------wwwwwwwwwwwww" edc:impl="0xFF001FFF" edc:_addr="0x40010418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="RDRF" edc:nzwidth="0x1" edc:desc="Receive Data Register Full Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:nzwidth="0x1" edc:desc="SPI Transmit Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="MODF" edc:nzwidth="0x1" edc:desc="Mode Fault Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="NSSR" edc:nzwidth="0x1" edc:desc="NSS Rising Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="Transmission Registers Empty Disable"/>
            <edc:SFRFieldDef edc:cname="UNDES" edc:nzwidth="0x1" edc:desc="Underrun Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SFERR" edc:nzwidth="0x1" edc:desc="Client Mode Frame Error Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0xB"/>
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_SPI_IMR" edc:nzwidth="0x20" edc:access="rrrrrrrr-----------rrrrrrrrrrrrr" edc:impl="0xFF001FFF" edc:_addr="0x4001041C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="RDRF" edc:nzwidth="0x1" edc:desc="Receive Data Register Full Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:nzwidth="0x1" edc:desc="SPI Transmit Data Register Empty Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="MODF" edc:nzwidth="0x1" edc:desc="Mode Fault Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="NSSR" edc:nzwidth="0x1" edc:desc="NSS Rising Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="Transmission Registers Empty Mask"/>
            <edc:SFRFieldDef edc:cname="UNDES" edc:nzwidth="0x1" edc:desc="Underrun Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="SFERR" edc:nzwidth="0x1" edc:desc="Client Mode Frame Error Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0xB"/>
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x10" edc:_addr="0x40010420"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_SPI_CSR0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40010430">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity"/>
            <edc:SFRFieldDef edc:cname="NCPHA" edc:nzwidth="0x1" edc:desc="Clock Phase"/>
            <edc:SFRFieldDef edc:cname="CSNAAT" edc:nzwidth="0x1" edc:desc="Chip Select Not Active After Transfer (Ignored if CSAAT = 1)"/>
            <edc:SFRFieldDef edc:cname="CSAAT" edc:nzwidth="0x1" edc:desc="Chip Select Active After Transfer"/>
            <edc:SFRFieldDef edc:cname="BITS" edc:nzwidth="0x4" edc:desc="Bits Per Transfer">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits for transfer" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits for transfer" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="10_BIT" edc:desc="10 bits for transfer" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="11_BIT" edc:desc="11 bits for transfer" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="12_BIT" edc:desc="12 bits for transfer" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="13 bits for transfer" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="14_BIT" edc:desc="14 bits for transfer" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="15_BIT" edc:desc="15 bits for transfer" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="16_BIT" edc:desc="16 bits for transfer" edc:when="(field &amp; 0xF) == 0x08"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCBR" edc:nzwidth="0x8" edc:desc="Serial Clock Bit Rate"/>
            <edc:SFRFieldDef edc:cname="DLYBS" edc:nzwidth="0x8" edc:desc="Delay Before SPCK"/>
            <edc:SFRFieldDef edc:cname="DLYBCT" edc:nzwidth="0x8" edc:desc="Delay Between Consecutive Transfers"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_SPI_CSR1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40010434">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity"/>
            <edc:SFRFieldDef edc:cname="NCPHA" edc:nzwidth="0x1" edc:desc="Clock Phase"/>
            <edc:SFRFieldDef edc:cname="CSNAAT" edc:nzwidth="0x1" edc:desc="Chip Select Not Active After Transfer (Ignored if CSAAT = 1)"/>
            <edc:SFRFieldDef edc:cname="CSAAT" edc:nzwidth="0x1" edc:desc="Chip Select Active After Transfer"/>
            <edc:SFRFieldDef edc:cname="BITS" edc:nzwidth="0x4" edc:desc="Bits Per Transfer">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits for transfer" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits for transfer" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="10_BIT" edc:desc="10 bits for transfer" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="11_BIT" edc:desc="11 bits for transfer" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="12_BIT" edc:desc="12 bits for transfer" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="13 bits for transfer" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="14_BIT" edc:desc="14 bits for transfer" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="15_BIT" edc:desc="15 bits for transfer" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="16_BIT" edc:desc="16 bits for transfer" edc:when="(field &amp; 0xF) == 0x08"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCBR" edc:nzwidth="0x8" edc:desc="Serial Clock Bit Rate"/>
            <edc:SFRFieldDef edc:cname="DLYBS" edc:nzwidth="0x8" edc:desc="Delay Before SPCK"/>
            <edc:SFRFieldDef edc:cname="DLYBCT" edc:nzwidth="0x8" edc:desc="Delay Between Consecutive Transfers"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x40010438"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_SPI_FMR" edc:nzwidth="0x20" edc:access="--nnnnnn--nnnnnn----------nn--nn" edc:impl="0x3F3F0033" edc:_addr="0x40010440">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="TXRDYM" edc:nzwidth="0x2" edc:desc="Transmit Data Register Empty Mode">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="TDRE will be at level '1' when at least one data can be written in the transmit FIFO. When DMA is enabled to transfer data, the chunk of 1 data (byte or halfword) must be configured in the DMA depending on FLEX_SPI_CSR0.BITS. If the transfer is performed by software, the access type (byte, halfword) must be defined depending on FLEX_SPI_CSR0.BITS." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="TDRE will be at level '1' when at least two data can be written in the transmit FIFO. FIFO. To minimize system bus load, when DMA is enabled to transfer data, the chunk of 1 word (1 word carries 2 data) must be configured in the DMA. If the transfer is performed by software, the access type must be defined as word (2 data per access, 1 access)." edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXRDYM" edc:nzwidth="0x2" edc:desc="Receive Data Register Full Mode">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="RDRF will be at level '1' when at least one unread data is in the receive FIFO. When DMA is enabled to transfer data and FLEX_SPI_CSR0.BITS=0 (8 bits transfered on SPI line), the chunk of 1 byte must be configured in the DMA. When FLEX_SPI_CSR0.BITS&gt;0 (9 to 16 bits transfered on SPI line), the chunk of 1 halfword must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte or halfword depending on FLEX_SPI_CSR0.BITS." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="RDRF will be at level '1' when at least two unread data are in the receive FIFO. To minimize system bus load, when DMA is enabled to transfer data and FLEX_SPI_CSR0.BITS=0 (8 bits transfered on SPI line), the chunk of 1 halfword (1 halfword carries 2 bytes) must be configured in the DMA. When FLEX_SPI_CSR0.BITS&gt;0 (9 to 16 bits transfered on SPI line), the chunk of 1 word (1 word carries 2 halfwords) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as halfword (2 bytes per access, 1 access when FLEX_SPI_CSR0.BITS=0), or word (2 halfwords per access, 2 accesses when FLEX_SPI_CSR0.BITS&gt;0)." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="RDRF will be at level '1' when at least four unread data are in the receive FIFO. To minimize system bus load, when DMA is enabled to transfer data and FLEX_SPI_CSR0.BITS=0 (8 bits transfered on SPI line), the chunk of 1 word (1 halfword carries 4 bytes) must be configured in the DMA. When FLEX_SPI_CSR0.BITS&gt;0 (9 to 16 bits transfered on SPI line), the chunk of 2 words (1 word carries 4 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as word (4 bytes per access, 1 access when FLEX_SPI_CSR0.BITS=0 or 2 halfwords per access, 2 accesses when FLEX_SPI_CSR0.BITS&gt;0)." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="TXFTHRES" edc:nzwidth="0x6" edc:desc="Transmit FIFO Threshold"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXFTHRES" edc:nzwidth="0x6" edc:desc="Receive FIFO Threshold"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_SPI_FLR" edc:nzwidth="0x20" edc:access="----------rrrrrr----------rrrrrr" edc:impl="0x3F003F" edc:_addr="0x40010444">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="TXFL" edc:nzwidth="0x6" edc:desc="Transmit FIFO Level"/>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="RXFL" edc:nzwidth="0x6" edc:desc="Receive FIFO Level"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_SPI_CMPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40010448">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="VAL1" edc:nzwidth="0x10" edc:desc="First Comparison Value for Received Character"/>
            <edc:SFRFieldDef edc:cname="VAL2" edc:nzwidth="0x10" edc:desc="Second Comparison Value for Received Character"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x98" edc:_addr="0x4001044C"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_SPI_WPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:impl="0xFFFFFF07" edc:_addr="0x400104E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="WPEN" edc:nzwidth="0x1" edc:desc="Write Protection Enable"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:nzwidth="0x1" edc:desc="Write Protection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:nzwidth="0x1" edc:desc="Write Protection Control Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of bits WPEN, WPITEN and WPCREN. Always reads as 0" edc:when="(field &amp; 0xFFFFFF) == 0x535049"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_SPI_WPSR" edc:nzwidth="0x20" edc:access="----------------rrrrrrrr-------r" edc:impl="0xFF01" edc:_addr="0x400104E8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="WPVS" edc:nzwidth="0x1" edc:desc="Write Protection Violation Status"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:nzwidth="0x8" edc:desc="Write Protection Violation Source"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x114" edc:_addr="0x400104EC"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_TWI_CR" edc:nzwidth="0x20" edc:access="--ww-www------wwwwwwwwwwwwwwwwww" edc:impl="0x3703FFFF" edc:_addr="0x40010600">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="START" edc:nzwidth="0x1" edc:desc="Send a START Condition"/>
            <edc:SFRFieldDef edc:cname="STOP" edc:nzwidth="0x1" edc:desc="Send a STOP Condition"/>
            <edc:SFRFieldDef edc:cname="MSEN" edc:nzwidth="0x1" edc:desc="TWI Host Mode Enabled"/>
            <edc:SFRFieldDef edc:cname="MSDIS" edc:nzwidth="0x1" edc:desc="TWI Host Mode Disabled"/>
            <edc:SFRFieldDef edc:cname="SVEN" edc:nzwidth="0x1" edc:desc="TWI Client Mode Enabled"/>
            <edc:SFRFieldDef edc:cname="SVDIS" edc:nzwidth="0x1" edc:desc="TWI Client Mode Disabled"/>
            <edc:SFRFieldDef edc:cname="QUICK" edc:nzwidth="0x1" edc:desc="SMBus Quick Command"/>
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="HSEN" edc:nzwidth="0x1" edc:desc="TWI High-Speed Mode Enabled"/>
            <edc:SFRFieldDef edc:cname="HSDIS" edc:nzwidth="0x1" edc:desc="TWI High-Speed Mode Disabled"/>
            <edc:SFRFieldDef edc:cname="SMBEN" edc:nzwidth="0x1" edc:desc="SMBus Mode Enabled"/>
            <edc:SFRFieldDef edc:cname="SMBDIS" edc:nzwidth="0x1" edc:desc="SMBus Mode Disabled"/>
            <edc:SFRFieldDef edc:cname="PECEN" edc:nzwidth="0x1" edc:desc="Packet Error Checking Enable"/>
            <edc:SFRFieldDef edc:cname="PECDIS" edc:nzwidth="0x1" edc:desc="Packet Error Checking Disable"/>
            <edc:SFRFieldDef edc:cname="PECRQ" edc:nzwidth="0x1" edc:desc="PEC Request"/>
            <edc:SFRFieldDef edc:cname="CLEAR" edc:nzwidth="0x1" edc:desc="Bus CLEAR Command"/>
            <edc:SFRFieldDef edc:cname="ACMEN" edc:nzwidth="0x1" edc:desc="Alternative Command Mode Enable"/>
            <edc:SFRFieldDef edc:cname="ACMDIS" edc:nzwidth="0x1" edc:desc="Alternative Command Mode Disable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="TXFCLR" edc:nzwidth="0x1" edc:desc="Transmit FIFO Clear"/>
            <edc:SFRFieldDef edc:cname="RXFCLR" edc:nzwidth="0x1" edc:desc="Receive FIFO Clear"/>
            <edc:SFRFieldDef edc:cname="TXFLCLR" edc:nzwidth="0x1" edc:desc="Transmit FIFO Lock CLEAR"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="FIFODIS" edc:nzwidth="0x1" edc:desc="FIFO Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_TWI_MMR" edc:nzwidth="0x20" edc:access="-------n-nnnnnnn-nnn--nn--------" edc:impl="0x17F7300" edc:_addr="0x40010604">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="IADRSZ" edc:nzwidth="0x2" edc:desc="Internal Device Address Size">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No internal device address" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="1_BYTE" edc:desc="One-byte internal device address" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="2_BYTE" edc:desc="Two-byte internal device address" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="3_BYTE" edc:desc="Three-byte internal device address" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MREAD" edc:nzwidth="0x1" edc:desc="Host Read Direction"/>
            <edc:SFRFieldDef edc:cname="SCLRBL" edc:nzwidth="0x2" edc:desc="SCL Rise Boost Level"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DADR" edc:nzwidth="0x7" edc:desc="Device Address"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NOAP" edc:nzwidth="0x1" edc:desc="No Auto-Stop On NACK Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_TWI_SMR" edc:nzwidth="0x20" edc:access="nnnn-----nnnnnnn-nnnnnnnnnnnnn-n" edc:impl="0xF07F7FFD" edc:_addr="0x40010608">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="NACKEN" edc:nzwidth="0x1" edc:desc="Client Receiver Data Phase NACK Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SMDA" edc:nzwidth="0x1" edc:desc="SMBus Default Address"/>
            <edc:SFRFieldDef edc:cname="SMHH" edc:nzwidth="0x1" edc:desc="SMBus Host Header"/>
            <edc:SFRFieldDef edc:cname="SADAT" edc:nzwidth="0x1" edc:desc="Client Address Treated as Data"/>
            <edc:SFRFieldDef edc:cname="BSEL" edc:nzwidth="0x1" edc:desc="TWI Bus Selection"/>
            <edc:SFRFieldDef edc:cname="SCLWSDIS" edc:nzwidth="0x1" edc:desc="Clock Wait State Disable"/>
            <edc:SFRFieldDef edc:cname="SNIFF" edc:nzwidth="0x1" edc:desc="Client Sniffer Mode"/>
            <edc:SFRFieldDef edc:cname="MASK" edc:nzwidth="0x7" edc:desc="Client Address Mask"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SADR" edc:nzwidth="0x7" edc:desc="Client Address"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="SADR1EN" edc:nzwidth="0x1" edc:desc="Client Address 1 Enable"/>
            <edc:SFRFieldDef edc:cname="SADR2EN" edc:nzwidth="0x1" edc:desc="Client Address 2 Enable"/>
            <edc:SFRFieldDef edc:cname="SADR3EN" edc:nzwidth="0x1" edc:desc="Client Address 3 Enable"/>
            <edc:SFRFieldDef edc:cname="DATAMEN" edc:nzwidth="0x1" edc:desc="Data Matching Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_TWI_IADR" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:impl="0xFFFFFF" edc:_addr="0x4001060C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="IADR" edc:nzwidth="0x18" edc:desc="Internal Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_TWI_CWGR" edc:nzwidth="0x20" edc:access="--nnnnnn---n-nnnnnnnnnnnnnnnnnnn" edc:impl="0x3F17FFFF" edc:_addr="0x40010610">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="CLDIV" edc:nzwidth="0x8" edc:desc="Clock Low Divider"/>
            <edc:SFRFieldDef edc:cname="CHDIV" edc:nzwidth="0x8" edc:desc="Clock High Divider"/>
            <edc:SFRFieldDef edc:cname="CKDIV" edc:nzwidth="0x3" edc:desc="Clock Divider"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BRSRCCLK" edc:nzwidth="0x1" edc:desc="Bit Rate Source Clock">
              <edc:SFRFieldSemantic edc:cname="PERIPH_CLK" edc:desc="The peripheral clock is the source clock for the bit rate generation." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="GCLK is the source clock for the bit rate generation, thus the bit rate can be independent of the core/peripheral clock." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="HOLD" edc:nzwidth="0x6" edc:desc="TWD Hold Time Versus TWCK Falling"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x40010614"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_TWI_SR" edc:nzwidth="0x20" edc:access="-----rrrr-rrrrrrrrrrrrrrrrrrrrrr" edc:impl="0x7BFFFFF" edc:_addr="0x40010620">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="TXCOMP" edc:nzwidth="0x1" edc:desc="Transmission Completed (cleared by writing FLEX_TWI_THR)"/>
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="Receive Holding Register Ready (cleared when reading FLEX_TWI_RHR)"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="Transmit Holding Register Ready (cleared by writing FLEX_TWI_THR)"/>
            <edc:SFRFieldDef edc:cname="SVREAD" edc:nzwidth="0x1" edc:desc="Client Read"/>
            <edc:SFRFieldDef edc:cname="SVACC" edc:nzwidth="0x1" edc:desc="Client Access"/>
            <edc:SFRFieldDef edc:cname="GACC" edc:nzwidth="0x1" edc:desc="General Call Access (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:nzwidth="0x1" edc:desc="Underrun Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="NACK" edc:nzwidth="0x1" edc:desc="Not Acknowledged (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="ARBLST" edc:nzwidth="0x1" edc:desc="Arbitration Lost (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SCLWS" edc:nzwidth="0x1" edc:desc="Clock Wait State"/>
            <edc:SFRFieldDef edc:cname="EOSACC" edc:nzwidth="0x1" edc:desc="End Of Client Access (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of RX Buffer (cleared by writing FLEX_TWI_RCR or FLEX_TWI_RNCR)"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of TX Buffer (cleared by writing FLEX_TWI_TCR or FLEX_TWI_TNCR)"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="RX Buffer Full (cleared by writing FLEX_TWI_RCR or FLEX_TWI_RNCR)"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="TX Buffer Empty (cleared by writing FLEX_TWI_TCR or FLEX_TWI_TNCR)"/>
            <edc:SFRFieldDef edc:cname="MCACK" edc:nzwidth="0x1" edc:desc="Host Code Acknowledge (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SMBAF" edc:nzwidth="0x1" edc:desc="SMBus Alert Flag"/>
            <edc:SFRFieldDef edc:cname="TOUT" edc:nzwidth="0x1" edc:desc="Timeout Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="PECERR" edc:nzwidth="0x1" edc:desc="PEC Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SMBDAM" edc:nzwidth="0x1" edc:desc="SMBus Default Address Match (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SMBHHM" edc:nzwidth="0x1" edc:desc="SMBus Host Header Address Match (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFLOCK" edc:nzwidth="0x1" edc:desc="Transmit FIFO Lock"/>
            <edc:SFRFieldDef edc:cname="SCL" edc:nzwidth="0x1" edc:desc="SCL Line Value"/>
            <edc:SFRFieldDef edc:cname="SDA" edc:nzwidth="0x1" edc:desc="SDA Line Value"/>
            <edc:SFRFieldDef edc:cname="SR" edc:nzwidth="0x1" edc:desc="Start Repeated"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_TWI_IER" edc:nzwidth="0x20" edc:access="----------wwww-wwwwwwwwwwwww-www" edc:impl="0x3DFFF7" edc:_addr="0x40010624">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="TXCOMP" edc:nzwidth="0x1" edc:desc="Transmission Completed Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="Receive Holding Register Ready Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="Transmit Holding Register Ready Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SVACC" edc:nzwidth="0x1" edc:desc="Client Access Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="GACC" edc:nzwidth="0x1" edc:desc="General Call Access Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:nzwidth="0x1" edc:desc="Underrun Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="NACK" edc:nzwidth="0x1" edc:desc="Not Acknowledge Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ARBLST" edc:nzwidth="0x1" edc:desc="Arbitration Lost Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SCL_WS" edc:nzwidth="0x1" edc:desc="Clock Wait State Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EOSACC" edc:nzwidth="0x1" edc:desc="End Of Client Access Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MCACK" edc:nzwidth="0x1" edc:desc="Host Code Acknowledge Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TOUT" edc:nzwidth="0x1" edc:desc="Timeout Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PECERR" edc:nzwidth="0x1" edc:desc="PEC Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SMBDAM" edc:nzwidth="0x1" edc:desc="SMBus Default Address Match Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SMBHHM" edc:nzwidth="0x1" edc:desc="SMBus Host Header Address Match Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_TWI_IDR" edc:nzwidth="0x20" edc:access="----------wwww-wwwwwwwwwwwww-www" edc:impl="0x3DFFF7" edc:_addr="0x40010628">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="TXCOMP" edc:nzwidth="0x1" edc:desc="Transmission Completed Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="Receive Holding Register Ready Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="Transmit Holding Register Ready Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SVACC" edc:nzwidth="0x1" edc:desc="Client Access Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="GACC" edc:nzwidth="0x1" edc:desc="General Call Access Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:nzwidth="0x1" edc:desc="Underrun Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="NACK" edc:nzwidth="0x1" edc:desc="Not Acknowledge Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ARBLST" edc:nzwidth="0x1" edc:desc="Arbitration Lost Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SCL_WS" edc:nzwidth="0x1" edc:desc="Clock Wait State Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="EOSACC" edc:nzwidth="0x1" edc:desc="End Of Client Access Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="MCACK" edc:nzwidth="0x1" edc:desc="Host Code Acknowledge Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TOUT" edc:nzwidth="0x1" edc:desc="Timeout Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="PECERR" edc:nzwidth="0x1" edc:desc="PEC Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SMBDAM" edc:nzwidth="0x1" edc:desc="SMBus Default Address Match Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SMBHHM" edc:nzwidth="0x1" edc:desc="SMBus Host Header Address Match Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_TWI_IMR" edc:nzwidth="0x20" edc:access="----------rrrr-rrrrrrrrrrrrr-rrr" edc:impl="0x3DFFF7" edc:_addr="0x4001062C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="TXCOMP" edc:nzwidth="0x1" edc:desc="Transmission Completed Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="Receive Holding Register Ready Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="Transmit Holding Register Ready Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SVACC" edc:nzwidth="0x1" edc:desc="Client Access Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="GACC" edc:nzwidth="0x1" edc:desc="General Call Access Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:nzwidth="0x1" edc:desc="Underrun Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="NACK" edc:nzwidth="0x1" edc:desc="Not Acknowledge Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ARBLST" edc:nzwidth="0x1" edc:desc="Arbitration Lost Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="SCL_WS" edc:nzwidth="0x1" edc:desc="Clock Wait State Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="EOSACC" edc:nzwidth="0x1" edc:desc="End Of Client Access Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="MCACK" edc:nzwidth="0x1" edc:desc="Host Code Acknowledge Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TOUT" edc:nzwidth="0x1" edc:desc="Timeout Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="PECERR" edc:nzwidth="0x1" edc:desc="PEC Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="SMBDAM" edc:nzwidth="0x1" edc:desc="SMBus Default Address Match Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="SMBHHM" edc:nzwidth="0x1" edc:desc="SMBus Host Header Address Match Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_TWI_RHR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40010630">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="RXDATA0" edc:nzwidth="0x8" edc:desc="Host or Client Receive Holding Data 0"/>
            <edc:SFRFieldDef edc:cname="RXDATA1" edc:nzwidth="0x8" edc:desc="Host or Client Receive Holding Data 1"/>
            <edc:AdjustPoint edc:offset="-6"/>
            <edc:SFRFieldDef edc:cname="PSTATE" edc:nzwidth="0x1" edc:desc="Stop State (Client Sniffer Mode only)"/>
            <edc:SFRFieldDef edc:cname="ASTATE" edc:nzwidth="0x2" edc:desc="Acknowledge State (Client Sniffer Mode only)">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Acknowledge or Nacknowledge detected after previously logged data" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ACK" edc:desc="Acknowledge (A) detected after previously logged data" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NACK" edc:desc="Nacknowledge (NA) detected after previously logged data" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="UNDEF" edc:desc="Not defined" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RXDATA2" edc:nzwidth="0x8" edc:desc="Host or Client Receive Holding Data 2"/>
            <edc:SFRFieldDef edc:cname="RXDATA3" edc:nzwidth="0x8" edc:desc="Host or Client Receive Holding Data 3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_TWI_THR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x40010634">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="TXDATA0" edc:nzwidth="0x8" edc:desc="Host or Client Transmit Holding Data 0"/>
            <edc:SFRFieldDef edc:cname="TXDATA1" edc:nzwidth="0x8" edc:desc="Host or Client Transmit Holding Data 1"/>
            <edc:SFRFieldDef edc:cname="TXDATA2" edc:nzwidth="0x8" edc:desc="Host or Client Transmit Holding Data 2"/>
            <edc:SFRFieldDef edc:cname="TXDATA3" edc:nzwidth="0x8" edc:desc="Host or Client Transmit Holding Data 3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_TWI_SMBTR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn----nnnn" edc:impl="0xFFFFFF0F" edc:_addr="0x40010638">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="PRESC" edc:nzwidth="0x4" edc:desc="SMBus Clock Prescaler"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TLOWS" edc:nzwidth="0x8" edc:desc="Client Clock Stretch Maximum Cycles"/>
            <edc:SFRFieldDef edc:cname="TLOWM" edc:nzwidth="0x8" edc:desc="Host Clock Stretch Maximum Cycles"/>
            <edc:SFRFieldDef edc:cname="THMAX" edc:nzwidth="0x8" edc:desc="Clock High Maximum Cycles"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_TWI_HSR" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:impl="0xFF" edc:_addr="0x4001063C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="MCODE" edc:nzwidth="0x8" edc:desc="TWI High Speed Host Code"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_TWI_ACR" edc:nzwidth="0x20" edc:access="------nnnnnnnnnn------nnnnnnnnnn" edc:impl="0x3FF03FF" edc:_addr="0x40010640">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="DATAL" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Transfer Direction"/>
            <edc:SFRFieldDef edc:cname="PEC" edc:nzwidth="0x1" edc:desc="PEC Request (SMBus Mode only)"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="NDATAL" edc:nzwidth="0x8" edc:desc="Next Data Length"/>
            <edc:SFRFieldDef edc:cname="NDIR" edc:nzwidth="0x1" edc:desc="Next Transfer Direction"/>
            <edc:SFRFieldDef edc:cname="NPEC" edc:nzwidth="0x1" edc:desc="Next PEC Request (SMBus Mode only)"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_TWI_FILTR" edc:nzwidth="0x20" edc:access="---------------------nnn------nn" edc:impl="0x703" edc:_addr="0x40010644">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="FILT" edc:nzwidth="0x1" edc:desc="RX Digital Filter"/>
            <edc:SFRFieldDef edc:cname="PADFEN" edc:nzwidth="0x1" edc:desc="PAD Filter Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="THRES" edc:nzwidth="0x3" edc:desc="Digital Filter Threshold"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_TWI_HSCWGR" edc:nzwidth="0x20" edc:access="-------------nnnnnnnnnnnnnnnnnnn" edc:impl="0x7FFFF" edc:_addr="0x40010648">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="HSCLDIV" edc:nzwidth="0x8" edc:desc="High Speed Clock Low Divider"/>
            <edc:SFRFieldDef edc:cname="HSCHDIV" edc:nzwidth="0x8" edc:desc="High Speed Clock High Divider"/>
            <edc:SFRFieldDef edc:cname="HSCKDIV" edc:nzwidth="0x3" edc:desc="High Speed Clock Divider"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_TWI_SWMR" edc:nzwidth="0x20" edc:access="nnnnnnnn-nnnnnnn-nnnnnnn-nnnnnnn" edc:impl="0xFF7F7F7F" edc:_addr="0x4001064C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="SADR1" edc:nzwidth="0x7" edc:desc="Client Address 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SADR2" edc:nzwidth="0x7" edc:desc="Client Address 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SADR3" edc:nzwidth="0x7" edc:desc="Client Address 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DATAM" edc:nzwidth="0x8" edc:desc="Data Match"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_TWI_FMR" edc:nzwidth="0x20" edc:access="--nnnnnn--nnnnnn----------nn--nn" edc:impl="0x3F3F0033" edc:_addr="0x40010650">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="TXRDYM" edc:nzwidth="0x2" edc:desc="Transmitter Ready Mode">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="TXRDY will be at level '1' when at least one data can be written in the transmit FIFO. When DMA is enabled to transfer data, the chunk of 1 byte must be configured in the DMA. If the transfer is performed by software, the access type must be defined as byte." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="TXRDY will be at level '1' when at least two data can be written in the transmit FIFO. To minimize system bus load, when DMA is enabled to transfer data, the chunk of 1 halfword (1 halfword carries 2 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 2 accesses) or halfword (2 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="TXRDY will be at level '1' when at least four data can be written in the transmit FIFO. To minimize system bus load, when DMA is enabled to transfer data, the chunk of 1 word (1 word carries 4 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 4 accesses), halfword (2 bytes per access, 2 accesses) or word (4 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXRDYM" edc:nzwidth="0x2" edc:desc="Receiver Ready Mode">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="RXRDY will be at level '1' when at least one unread data is in the receive FIFO. When DMA is enabled to transfer data the chunk of 1 byte must be configured in the DMA. If the transfer is performed by software, the access type (byte, halfword) must be defined accordingly." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="RXRDY will be at level '1' when at least two unread data are in the receive FIFO. To minimize system bus load, when DMA is enabled to transfer data, the chunk of 1 halfword (1 halfword carries 2 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 2 accesses) or halfword (2 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="RXRDY will be at level '1' when at least four unread data are in the receive FIFO. To minimize system bus load, when DMA is enabled to transfer data, the chunk of 1 word (1 word carries 4 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 4 accesses), halfword (2 bytes per access, 2 accesses) or word (4 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="TXFTHRES" edc:nzwidth="0x6" edc:desc="Transmit FIFO Threshold"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXFTHRES" edc:nzwidth="0x6" edc:desc="Receive FIFO Threshold"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_TWI_FLR" edc:nzwidth="0x20" edc:access="----------rrrrrr----------rrrrrr" edc:impl="0x3F003F" edc:_addr="0x40010654">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="TXFL" edc:nzwidth="0x6" edc:desc="Transmit FIFO Level"/>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="RXFL" edc:nzwidth="0x6" edc:desc="Receive FIFO Level"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x40010658"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_TWI_FSR" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:impl="0xFF" edc:_addr="0x40010660">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Empty Flag (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Full Flag (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Threshold Flag (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="Receive FIFO Empty Flag"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="Receive FIFO Full Flag"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="Receive FIFO Threshold Flag"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Pointer Error Flag"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="Receive FIFO Pointer Error Flag"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_TWI_FIER" edc:nzwidth="0x20" edc:access="------------------------wwwwwwww" edc:impl="0xFF" edc:_addr="0x40010664">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_TWI_FIDR" edc:nzwidth="0x20" edc:access="------------------------wwwwwwww" edc:impl="0xFF" edc:_addr="0x40010668">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_TWI_FIMR" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:impl="0xFF" edc:_addr="0x4001066C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x74" edc:_addr="0x40010670"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_TWI_WPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:impl="0xFFFFFF07" edc:_addr="0x400106E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="WPEN" edc:nzwidth="0x1" edc:desc="Write Protection Enable"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:nzwidth="0x1" edc:desc="Write Protection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:nzwidth="0x1" edc:desc="Write Protection Control Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of bits WPEN, WPITEN and WPCREN. Always reads as 0" edc:when="(field &amp; 0xFFFFFF) == 0x545749"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM4" edc:cname="FLEX_TWI_WPSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrr-------r" edc:impl="0xFFFFFF01" edc:_addr="0x400106E8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM4">
            <edc:SFRFieldDef edc:cname="WPVS" edc:nzwidth="0x1" edc:desc="Write Protect Violation Status (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:nzwidth="0x18" edc:desc="Write Protection Violation Source"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3914" edc:_addr="0x400106EC"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_MR" edc:nzwidth="0x20" edc:access="------------------------------nn" edc:impl="0x3" edc:_addr="0x40014000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="OPMODE" edc:nzwidth="0x2" edc:desc="FLEXCOM Operating Mode">
              <edc:SFRFieldSemantic edc:cname="NO_COM" edc:desc="No communication" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USART" edc:desc="All UART related protocols are selected (RS232, RS485, IrDA, ISO7816, LIN,) SPI/TWI related registers are not accessible and have no impact on IOs." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SPI" edc:desc="SPI operating mode is selected. USART/TWI related registers are not accessible and have no impact on IOs." edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TWI" edc:desc="All TWI related protocols are selected (TWI, SMBus). USART/SPI related registers are not accessible and have no impact on IOs." edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x40014004"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_RHR" edc:nzwidth="0x20" edc:access="----------------rrrrrrrrrrrrrrrr" edc:impl="0xFFFF" edc:_addr="0x40014010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="RXDATA" edc:nzwidth="0x10" edc:desc="Receive Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x40014014"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_THR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x40014020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="TXDATA" edc:nzwidth="0x10" edc:desc="Transmit Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xDC" edc:_addr="0x40014024"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_RPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40014100">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="RXPTR" edc:nzwidth="0x20" edc:desc="Receive Pointer Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_RCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x40014104">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="RXCTR" edc:nzwidth="0x10" edc:desc="Receive Counter Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_TPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40014108">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="TXPTR" edc:nzwidth="0x20" edc:desc="Transmit Counter Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_TCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x4001410C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="TXCTR" edc:nzwidth="0x10" edc:desc="Transmit Counter Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_RNPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40014110">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="RXNPTR" edc:nzwidth="0x20" edc:desc="Receive Next Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_RNCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x40014114">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="RXNCTR" edc:nzwidth="0x10" edc:desc="Receive Next Counter"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_TNPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40014118">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="TXNPTR" edc:nzwidth="0x20" edc:desc="Transmit Next Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_TNCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x4001411C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="TXNCTR" edc:nzwidth="0x10" edc:desc="Transmit Counter Next"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_PTCR" edc:nzwidth="0x20" edc:access="-------w----wwww------ww------ww" edc:impl="0x10F0303" edc:_addr="0x40014120">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="RXTEN" edc:nzwidth="0x1" edc:desc="Receiver Transfer Enable"/>
            <edc:SFRFieldDef edc:cname="RXTDIS" edc:nzwidth="0x1" edc:desc="Receiver Transfer Disable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="TXTEN" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Enable"/>
            <edc:SFRFieldDef edc:cname="TXTDIS" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Disable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="RXCBEN" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Enable"/>
            <edc:SFRFieldDef edc:cname="RXCBDIS" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Disable"/>
            <edc:SFRFieldDef edc:cname="TXCBEN" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Enable"/>
            <edc:SFRFieldDef edc:cname="TXCBDIS" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Disable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ERRCLR" edc:nzwidth="0x1" edc:desc="Transfer Bus Error Clear"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_PTSR" edc:nzwidth="0x20" edc:access="-------r-----r-r-------r-------r" edc:impl="0x1050101" edc:_addr="0x40014124">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="RXTEN" edc:nzwidth="0x1" edc:desc="Receiver Transfer Enable"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="TXTEN" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Enable"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="RXCBEN" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXCBEN" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Transfer Bus Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_PWPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:impl="0xFFFFFF07" edc:_addr="0x40014128">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="WPPTREN" edc:nzwidth="0x1" edc:desc="Write Protection Pointer Registers Enable"/>
            <edc:SFRFieldDef edc:cname="WPCTREN" edc:nzwidth="0x1" edc:desc="Write Protection Counter Registers Enable"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:nzwidth="0x1" edc:desc="Write Protection Control Register Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x504443"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xD4" edc:_addr="0x4001412C"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_US_CR" edc:nzwidth="0x20" edc:access="ww-w-www--wwww--wwwwwwwwwwwwww--" edc:impl="0xD73CFFFC" edc:_addr="0x40014200">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RSTRX" edc:nzwidth="0x1" edc:desc="Reset Receiver"/>
            <edc:SFRFieldDef edc:cname="RSTTX" edc:nzwidth="0x1" edc:desc="Reset Transmitter"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
            <edc:SFRFieldDef edc:cname="RXDIS" edc:nzwidth="0x1" edc:desc="Receiver Disable"/>
            <edc:SFRFieldDef edc:cname="TXEN" edc:nzwidth="0x1" edc:desc="Transmitter Enable"/>
            <edc:SFRFieldDef edc:cname="TXDIS" edc:nzwidth="0x1" edc:desc="Transmitter Disable"/>
            <edc:SFRFieldDef edc:cname="RSTSTA" edc:nzwidth="0x1" edc:desc="Reset Status Bits"/>
            <edc:SFRFieldDef edc:cname="STTBRK" edc:nzwidth="0x1" edc:desc="Start Break"/>
            <edc:SFRFieldDef edc:cname="STPBRK" edc:nzwidth="0x1" edc:desc="Stop Break"/>
            <edc:SFRFieldDef edc:cname="STTTO" edc:nzwidth="0x1" edc:desc="Clear TIMEOUT Flag and Start Timeout After Next Character Received"/>
            <edc:SFRFieldDef edc:cname="SENDA" edc:nzwidth="0x1" edc:desc="Send Address"/>
            <edc:SFRFieldDef edc:cname="RSTIT" edc:nzwidth="0x1" edc:desc="Reset Iterations"/>
            <edc:SFRFieldDef edc:cname="RSTNACK" edc:nzwidth="0x1" edc:desc="Reset Non Acknowledge"/>
            <edc:SFRFieldDef edc:cname="RETTO" edc:nzwidth="0x1" edc:desc="Start Timeout Immediately"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RTSEN" edc:nzwidth="0x1" edc:desc="Request to Send Enable"/>
            <edc:SFRFieldDef edc:cname="RTSDIS" edc:nzwidth="0x1" edc:desc="Request to Send Disable"/>
            <edc:SFRFieldDef edc:cname="LINABT" edc:nzwidth="0x1" edc:desc="Abort LIN Transmission"/>
            <edc:SFRFieldDef edc:cname="LINWKUP" edc:nzwidth="0x1" edc:desc="Send LIN Wakeup Signal"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TXFCLR" edc:nzwidth="0x1" edc:desc="Transmit FIFO Clear"/>
            <edc:SFRFieldDef edc:cname="RXFCLR" edc:nzwidth="0x1" edc:desc="Receive FIFO Clear"/>
            <edc:SFRFieldDef edc:cname="TXFLCLR" edc:nzwidth="0x1" edc:desc="Transmit FIFO Lock CLEAR"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="REQCLR" edc:nzwidth="0x1" edc:desc="Request to Clear the Comparison Trigger"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="FIFODIS" edc:nzwidth="0x1" edc:desc="FIFO Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_US_MR" edc:nzwidth="0x20" edc:access="nnnn-nnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:impl="0xF7FFFFFF" edc:_addr="0x40014204">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="USART_MODE" edc:nzwidth="0x4" edc:desc="USART Mode of Operation">
              <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Normal mode" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="USCLKS" edc:nzwidth="0x2" edc:desc="Clock Selection">
              <edc:SFRFieldSemantic edc:cname="MCK" edc:desc="Peripheral clock is selected." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DIV" edc:desc="Peripheral clock divided (DIV=8) is selected." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="PCK" edc:desc="PMC programmable clock (PCK) is selected. If the SCK pin is driven (CLKO = 1), the CD field must be greater than 1." edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SCK" edc:desc="Serial clock (SCK) is selected." edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CHRL" edc:nzwidth="0x2" edc:desc="Character Length">
              <edc:SFRFieldSemantic edc:cname="_5_BIT" edc:desc="Character length is 5 bits." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="_6_BIT" edc:desc="Character length is 6 bits." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_7_BIT" edc:desc="Character length is 7 bits." edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BIT" edc:desc="Character length is 8 bits." edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SYNC" edc:nzwidth="0x1" edc:desc="Synchronous Mode Select"/>
            <edc:SFRFieldDef edc:cname="PAR" edc:nzwidth="0x3" edc:desc="Parity Type">
              <edc:SFRFieldSemantic edc:cname="EVEN" edc:desc="Even parity" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ODD" edc:desc="Odd parity" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SPACE" edc:desc="Parity forced to 0 (Space)" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="MARK" edc:desc="Parity forced to 1 (Mark)" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="NO" edc:desc="No parity" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="MULTIDROP" edc:desc="Multidrop mode" edc:when="(field &amp; 0x7) == 0x06"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NBSTOP" edc:nzwidth="0x2" edc:desc="Number of Stop Bits">
              <edc:SFRFieldSemantic edc:cname="_1_BIT" edc:desc="1 stop bit" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="_1_5_BIT" edc:desc="1.5 stop bit (SYNC = 0) or reserved (SYNC = 1)" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_2_BIT" edc:desc="2 stop bits" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CHMODE" edc:nzwidth="0x2" edc:desc="Channel Mode">
              <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Normal mode" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="AUTOMATIC" edc:desc="Automatic Echo. Receiver input is connected to the TXD pin." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="LOCAL_LOOPBACK" edc:desc="Local Loopback. Transmitter output is connected to the Receiver Input." edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="REMOTE_LOOPBACK" edc:desc="Remote Loopback. RXD pin is internally connected to the TXD pin." edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSBF" edc:nzwidth="0x1" edc:desc="Bit Order"/>
            <edc:SFRFieldDef edc:cname="MODE9" edc:nzwidth="0x1" edc:desc="9-bit Character Length"/>
            <edc:SFRFieldDef edc:cname="CLKO" edc:nzwidth="0x1" edc:desc="Clock Output Select"/>
            <edc:SFRFieldDef edc:cname="OVER" edc:nzwidth="0x1" edc:desc="Oversampling Mode"/>
            <edc:SFRFieldDef edc:cname="OOKRXD" edc:nzwidth="0x1" edc:desc="OOK Demodulation Input Selection"/>
            <edc:SFRFieldDef edc:cname="OOKEN" edc:nzwidth="0x1" edc:desc="OOK Modulation/Demodulation Enabled"/>
            <edc:SFRFieldDef edc:cname="VAR_SYNC" edc:nzwidth="0x1" edc:desc="Variable Synchronization of Command/Data Sync Start Frame Delimiter"/>
            <edc:SFRFieldDef edc:cname="INVDATA" edc:nzwidth="0x1" edc:desc="Inverted Data"/>
            <edc:SFRFieldDef edc:cname="MAX_ITERATION" edc:nzwidth="0x3" edc:desc="Maximum Number of Automatic Iteration"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FILTER" edc:nzwidth="0x1" edc:desc="Receive Line Filter"/>
            <edc:SFRFieldDef edc:cname="MAN" edc:nzwidth="0x1" edc:desc="Manchester Encoder/Decoder Enable"/>
            <edc:SFRFieldDef edc:cname="MODSYNC" edc:nzwidth="0x1" edc:desc="Manchester Synchronization Mode"/>
            <edc:SFRFieldDef edc:cname="ONEBIT" edc:nzwidth="0x1" edc:desc="Start Frame Delimiter Selector"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_US_IER" edc:nzwidth="0x20" edc:access="wwwwwwww-w--w---wwwwwwwwwwwwwwww" edc:impl="0xFF48FFFF" edc:_addr="0x40014208">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="RXRDY Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="TXRDY Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Receiver Break Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Transfer Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FRAME" edc:nzwidth="0x1" edc:desc="Framing Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PARE" edc:nzwidth="0x1" edc:desc="Parity Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TIMEOUT" edc:nzwidth="0x1" edc:desc="Timeout Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="TXEMPTY Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ITER" edc:nzwidth="0x1" edc:desc="Max number of Repetitions Reached Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Buffer Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Buffer Full Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINBK" edc:nzwidth="0x1" edc:desc="LIN Break Sent or LIN Break Received Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINID" edc:nzwidth="0x1" edc:desc="LIN Identifier Sent or LIN Identifier Received Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINTC" edc:nzwidth="0x1" edc:desc="LIN Transfer Completed Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear to Send Input Change Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MANE" edc:nzwidth="0x1" edc:desc="Manchester Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINBE" edc:nzwidth="0x1" edc:desc="LIN Bus Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINISFE" edc:nzwidth="0x1" edc:desc="LIN Inconsistent Synch Field Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINIPE" edc:nzwidth="0x1" edc:desc="LIN Identifier Parity Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINCE" edc:nzwidth="0x1" edc:desc="LIN Checksum Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINSNRE" edc:nzwidth="0x1" edc:desc="LIN Client Not Responding Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINSTE" edc:nzwidth="0x1" edc:desc="LIN Synch Tolerance Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINHTE" edc:nzwidth="0x1" edc:desc="LIN Header Timeout Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_US_IDR" edc:nzwidth="0x20" edc:access="wwwwwwww-w--w---wwwwwwwwwwwwwwww" edc:impl="0xFF48FFFF" edc:_addr="0x4001420C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="RXRDY Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="TXRDY Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Receiver Break Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Transfer Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="FRAME" edc:nzwidth="0x1" edc:desc="Framing Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="PARE" edc:nzwidth="0x1" edc:desc="Parity Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TIMEOUT" edc:nzwidth="0x1" edc:desc="Timeout Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="TXEMPTY Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ITER" edc:nzwidth="0x1" edc:desc="Max Number of Repetitions Reached Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Buffer Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Buffer Full Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINBK" edc:nzwidth="0x1" edc:desc="LIN Break Sent or LIN Break Received Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINID" edc:nzwidth="0x1" edc:desc="LIN Identifier Sent or LIN Identifier Received Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINTC" edc:nzwidth="0x1" edc:desc="LIN Transfer Completed Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear to Send Input Change Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MANE" edc:nzwidth="0x1" edc:desc="Manchester Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINBE" edc:nzwidth="0x1" edc:desc="LIN Bus Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINISFE" edc:nzwidth="0x1" edc:desc="LIN Inconsistent Synch Field Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINIPE" edc:nzwidth="0x1" edc:desc="LIN Identifier Parity Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINCE" edc:nzwidth="0x1" edc:desc="LIN Checksum Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINSNRE" edc:nzwidth="0x1" edc:desc="LIN Client Not Responding Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINSTE" edc:nzwidth="0x1" edc:desc="LIN Synch Tolerance Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINHTE" edc:nzwidth="0x1" edc:desc="LIN Header Timeout Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_US_IMR" edc:nzwidth="0x20" edc:access="rrrrrrrr-r--r---rrrrrrrrrrrrrrrr" edc:impl="0xFF48FFFF" edc:_addr="0x40014210">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="RXRDY Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="TXRDY Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Receiver Break Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Transfer Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="FRAME" edc:nzwidth="0x1" edc:desc="Framing Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="PARE" edc:nzwidth="0x1" edc:desc="Parity Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TIMEOUT" edc:nzwidth="0x1" edc:desc="Timeout Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="TXEMPTY Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ITER" edc:nzwidth="0x1" edc:desc="Max Number of Repetitions Reached Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Buffer Empty Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Buffer Full Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINBK" edc:nzwidth="0x1" edc:desc="LIN Break Sent or LIN Break Received Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINID" edc:nzwidth="0x1" edc:desc="LIN Identifier Sent or LIN Identifier Received Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINTC" edc:nzwidth="0x1" edc:desc="LIN Transfer Completed Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear to Send Input Change Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MANE" edc:nzwidth="0x1" edc:desc="Manchester Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINBE" edc:nzwidth="0x1" edc:desc="LIN Bus Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINISFE" edc:nzwidth="0x1" edc:desc="LIN Inconsistent Synch Field Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINIPE" edc:nzwidth="0x1" edc:desc="LIN Identifier Parity Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINCE" edc:nzwidth="0x1" edc:desc="LIN Checksum Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINSNRE" edc:nzwidth="0x1" edc:desc="LIN Client Not Responding Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINSTE" edc:nzwidth="0x1" edc:desc="LIN Synch Tolerance Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINHTE" edc:nzwidth="0x1" edc:desc="LIN Header Timeout Error Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_US_CSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrr--r---rrrrrrrrrrrrrrrr" edc:impl="0xFFC8FFFF" edc:_addr="0x40014214">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="Receiver Ready (cleared by reading FLEX_US_RHR)"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="Transmitter Ready (cleared by writing FLEX_US_THR)"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received/End of Break"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of RX Buffer (cleared by writing FLEX_US_RCR or FLEX_US_RNCR)"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of TX Buffer (cleared by writing FLEX_US_TCR or FLEX_US_TNCR)"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error"/>
            <edc:SFRFieldDef edc:cname="FRAME" edc:nzwidth="0x1" edc:desc="Framing Error"/>
            <edc:SFRFieldDef edc:cname="PARE" edc:nzwidth="0x1" edc:desc="Parity Error"/>
            <edc:SFRFieldDef edc:cname="TIMEOUT" edc:nzwidth="0x1" edc:desc="Receiver Timeout"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="Transmitter Empty (cleared by writing FLEX_US_THR)"/>
            <edc:SFRFieldDef edc:cname="ITER" edc:nzwidth="0x1" edc:desc="Max Number of Repetitions Reached"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="TX Buffer Empty (cleared by writing FLEX_US_TCR or FLEX_US_TNCR)"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="RX Buffer Full (cleared by writing FLEX_US_RCR or FLEX_US_RNCR)"/>
            <edc:SFRFieldDef edc:cname="LINBK" edc:nzwidth="0x1" edc:desc="LIN Break Sent or LIN Break Received"/>
            <edc:SFRFieldDef edc:cname="LINID" edc:nzwidth="0x1" edc:desc="LIN Identifier Sent or LIN Identifier Received"/>
            <edc:SFRFieldDef edc:cname="LINTC" edc:nzwidth="0x1" edc:desc="LIN Transfer Completed"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear to Send Input Change Flag"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Status"/>
            <edc:SFRFieldDef edc:cname="LINBLS" edc:nzwidth="0x1" edc:desc="LIN Bus Line Status"/>
            <edc:SFRFieldDef edc:cname="MANE" edc:nzwidth="0x1" edc:desc="Manchester Error"/>
            <edc:SFRFieldDef edc:cname="LINBE" edc:nzwidth="0x1" edc:desc="LIN Bit Error"/>
            <edc:SFRFieldDef edc:cname="LINISFE" edc:nzwidth="0x1" edc:desc="LIN Inconsistent Synch Field Error"/>
            <edc:SFRFieldDef edc:cname="LINIPE" edc:nzwidth="0x1" edc:desc="LIN Identifier Parity Error"/>
            <edc:SFRFieldDef edc:cname="LINCE" edc:nzwidth="0x1" edc:desc="LIN Checksum Error"/>
            <edc:SFRFieldDef edc:cname="LINSNRE" edc:nzwidth="0x1" edc:desc="LIN Client Not Responding Error"/>
            <edc:SFRFieldDef edc:cname="LINSTE" edc:nzwidth="0x1" edc:desc="LIN Synch Tolerance Error"/>
            <edc:SFRFieldDef edc:cname="LINHTE" edc:nzwidth="0x1" edc:desc="LIN Header Timeout Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_US_RHR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40014218">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="RXCHR0" edc:nzwidth="0x8" edc:desc="Received Characters"/>
            <edc:SFRFieldDef edc:cname="RXCHR1" edc:nzwidth="0x8" edc:desc="Received Characters"/>
            <edc:AdjustPoint edc:offset="-1"/>
            <edc:SFRFieldDef edc:cname="RXSYNH" edc:nzwidth="0x1" edc:desc="Received Sync"/>
            <edc:SFRFieldDef edc:cname="RXCHR2" edc:nzwidth="0x8" edc:desc="Received Characters"/>
            <edc:SFRFieldDef edc:cname="RXCHR3" edc:nzwidth="0x8" edc:desc="Received Characters"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_US_THR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4001421C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="TXCHR0" edc:nzwidth="0x8" edc:desc="Character to be Transmitted"/>
            <edc:SFRFieldDef edc:cname="TXCHR1" edc:nzwidth="0x8" edc:desc="Character to be Transmitted"/>
            <edc:AdjustPoint edc:offset="-1"/>
            <edc:SFRFieldDef edc:cname="TXSYNH" edc:nzwidth="0x1" edc:desc="Sync Field to be Transmitted"/>
            <edc:SFRFieldDef edc:cname="TXCHR2" edc:nzwidth="0x8" edc:desc="Character to be Transmitted"/>
            <edc:SFRFieldDef edc:cname="TXCHR3" edc:nzwidth="0x8" edc:desc="Character to be Transmitted"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_US_BRGR" edc:nzwidth="0x20" edc:access="-------------nnnnnnnnnnnnnnnnnnn" edc:impl="0x7FFFF" edc:_addr="0x40014220">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="CD" edc:nzwidth="0x10" edc:desc="Clock Divider"/>
            <edc:SFRFieldDef edc:cname="FP" edc:nzwidth="0x3" edc:desc="Fractional Part"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_US_RTOR" edc:nzwidth="0x20" edc:access="---------------nnnnnnnnnnnnnnnnn" edc:impl="0x1FFFF" edc:_addr="0x40014224">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="TO" edc:nzwidth="0x11" edc:desc="Timeout Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_US_TTGR" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:impl="0xFF" edc:_addr="0x40014228">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="TG" edc:nzwidth="0x8" edc:desc="Timeguard Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x14" edc:_addr="0x4001422C"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_US_FIDI" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x40014240">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="FI_DI_RATIO" edc:nzwidth="0x10" edc:desc="FI Over DI Ratio Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_US_NER" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:impl="0xFF" edc:_addr="0x40014244">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="NB_ERRORS" edc:nzwidth="0x8" edc:desc="Number of Errors"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x40014248"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_US_IF" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:impl="0xFF" edc:_addr="0x4001424C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="IRDA_FILTER" edc:nzwidth="0x8" edc:desc="IrDA Filter"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_US_MAN" edc:nzwidth="0x20" edc:access="nnnn--nn----nnnn---n--nn----nnnn" edc:impl="0xF30F130F" edc:_addr="0x40014250">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="TX_PL" edc:nzwidth="0x4" edc:desc="Transmitter Preamble Length"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TX_PP" edc:nzwidth="0x2" edc:desc="Transmitter Preamble Pattern">
              <edc:SFRFieldSemantic edc:cname="ALL_ONE" edc:desc="The preamble is composed of '1's" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ALL_ZERO" edc:desc="The preamble is composed of '0's" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ZERO_ONE" edc:desc="The preamble is composed of '01's" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="ONE_ZERO" edc:desc="The preamble is composed of '10's" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TX_MPOL" edc:nzwidth="0x1" edc:desc="Transmitter Manchester Polarity"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RX_PL" edc:nzwidth="0x4" edc:desc="Receiver Preamble Length"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="RX_PP" edc:nzwidth="0x2" edc:desc="Receiver Preamble Pattern detected">
              <edc:SFRFieldSemantic edc:cname="ALL_ONE" edc:desc="The preamble is composed of '1's" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ALL_ZERO" edc:desc="The preamble is composed of '0's" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ZERO_ONE" edc:desc="The preamble is composed of '01's" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="ONE_ZERO" edc:desc="The preamble is composed of '10's" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RX_MPOL" edc:nzwidth="0x1" edc:desc="Receiver Manchester Polarity"/>
            <edc:SFRFieldDef edc:cname="ONE" edc:nzwidth="0x1" edc:desc="Must Be Set to 1"/>
            <edc:SFRFieldDef edc:cname="DRIFT" edc:nzwidth="0x1" edc:desc="Drift Compensation"/>
            <edc:SFRFieldDef edc:cname="RXIDLEV" edc:nzwidth="0x1" edc:desc="Receiver Idle Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_US_LINMR" edc:nzwidth="0x20" edc:access="--------------nnnnnnnnnnnnnnnnnn" edc:impl="0x3FFFF" edc:_addr="0x40014254">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="NACT" edc:nzwidth="0x2" edc:desc="LIN Node Action">
              <edc:SFRFieldSemantic edc:cname="PUBLISH" edc:desc="The USART transmits the response." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SUBSCRIBE" edc:desc="The USART receives the response." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="IGNORE" edc:desc="The USART does not transmit and does not receive the response." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PARDIS" edc:nzwidth="0x1" edc:desc="Parity Disable"/>
            <edc:SFRFieldDef edc:cname="CHKDIS" edc:nzwidth="0x1" edc:desc="Checksum Disable"/>
            <edc:SFRFieldDef edc:cname="CHKTYP" edc:nzwidth="0x1" edc:desc="Checksum Type"/>
            <edc:SFRFieldDef edc:cname="DLM" edc:nzwidth="0x1" edc:desc="Data Length Mode"/>
            <edc:SFRFieldDef edc:cname="FSDIS" edc:nzwidth="0x1" edc:desc="Frame Slot Mode Disable"/>
            <edc:SFRFieldDef edc:cname="WKUPTYP" edc:nzwidth="0x1" edc:desc="Wakeup Signal Type"/>
            <edc:SFRFieldDef edc:cname="DLC" edc:nzwidth="0x8" edc:desc="Data Length Control"/>
            <edc:SFRFieldDef edc:cname="PDCM" edc:nzwidth="0x1" edc:desc="PDC Mode"/>
            <edc:SFRFieldDef edc:cname="SYNCDIS" edc:nzwidth="0x1" edc:desc="Synchronization Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_US_LINIR" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:impl="0xFF" edc:_addr="0x40014258">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="IDCHR" edc:nzwidth="0x8" edc:desc="Identifier Character"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_US_LINBRR" edc:nzwidth="0x20" edc:access="-------------rrrrrrrrrrrrrrrrrrr" edc:impl="0x7FFFF" edc:_addr="0x4001425C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="LINCD" edc:nzwidth="0x10" edc:desc="Clock Divider after Synchronization"/>
            <edc:SFRFieldDef edc:cname="LINFP" edc:nzwidth="0x3" edc:desc="Fractional Part after Synchronization"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x30" edc:_addr="0x40014260"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_US_CMPR" edc:nzwidth="0x20" edc:access="-------nnnnnnnnn-nnn---nnnnnnnnn" edc:impl="0x1FF71FF" edc:_addr="0x40014290">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="VAL1" edc:nzwidth="0x9" edc:desc="First Comparison Value for Received Character"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CMPMODE" edc:nzwidth="0x2" edc:desc="Comparison Mode">
              <edc:SFRFieldSemantic edc:cname="FLAG_ONLY" edc:desc="Any character is received and comparison function drives CMP flag." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="START_CONDITION" edc:desc="Comparison condition must be met to start reception." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FILTER" edc:desc="Comparison must be met to receive the current data only" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMPPAR" edc:nzwidth="0x1" edc:desc="Compare Parity"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="VAL2" edc:nzwidth="0x9" edc:desc="Second Comparison Value for Received Character"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x40014294"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_US_FMR" edc:nzwidth="0x20" edc:access="--nnnnnn--nnnnnn--nnnnnnn-nn--nn" edc:impl="0x3F3F3FB3" edc:_addr="0x400142A0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="TXRDYM" edc:nzwidth="0x2" edc:desc="Transmitter Ready Mode">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="TXRDY will be at level '1' when at least one data can be written in the transmit FIFO. When DMA is enabled to transfer data and FLEX_US_MR.MODE9=0 (up to 8 bits to transfer on the line), the chunk of 1 byte must be configured in the DMA. If the transfer is performed by software, the access type must be defined as a byte." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="TXRDY will be at level '1' when at least two data can be written in the transmit FIFO. To minimize system bus load, when DMA is enabled to transfer data and FLEX_US_MR.MODE9=0 (up to 8 bits to transfer on the line), the chunk of 1 halfword (1 halfword carries 2 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 2 accesses) or halfword (2 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="TXRDY will be at level '1' when at least four data can be written in the transmit FIFO. To minimize system bus load, when DMA is enabled to transfer data and FLEX_US_MR.MODE9=0 (up to 8 bits to transfer on the line), the chunk of 1 word (1 word carries 4 bytes) must be configured in the DMA (chunk size=1 and word access). If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 4 accesses), halfword (2 bytes per access, 2 accesses) or word (4 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXRDYM" edc:nzwidth="0x2" edc:desc="Receiver Ready Mode">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="RXRDY will be at level '1' when at least one unread data is in the receive FIFO. When DMA is enabled to transfer data and FLEX_US_MR.MODE9=0 (up to 8 bits to transfer on the line), the chunk of 1 byte must be configured in the DMA. If the transfer is performed by software, the access type must be defined as a byte." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="RXRDY will be at level '1' when at least two unread data are in the receive FIFO. To minimize system bus load, when DMA is enabled to transfer data and FLEX_US_MR.MODE9=0 (up to 8 bits to transfer on the line), the chunk of 1 halfword (1 halfword carries 2 bytes) must be configured in the DMA (chunk size=1 and halfword access). If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 2 accesses) or halfword (2 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="RXRDY will be at level '1' when at least four unread data are in the receive FIFO. To minimize system bus load, when DMA is enabled to transfer data and FLEX_US_MR.MODE9=0 (up to 8 bits to transfer on the line), the chunk of 1 word (1 word carries 4 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 4 accesses), halfword (2 bytes per access, 2 accesses) or word (4 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FRTSC" edc:nzwidth="0x1" edc:desc="FIFO RTS Pin Control enable (Hardware Handshaking mode only)"/>
            <edc:SFRFieldDef edc:cname="TXFTHRES" edc:nzwidth="0x6" edc:desc="Transmit FIFO Threshold"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXFTHRES" edc:nzwidth="0x6" edc:desc="Receive FIFO Threshold"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXFTHRES2" edc:nzwidth="0x6" edc:desc="Receive FIFO Threshold 2"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_US_FLR" edc:nzwidth="0x20" edc:access="----------rrrrrr----------rrrrrr" edc:impl="0x3F003F" edc:_addr="0x400142A4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="TXFL" edc:nzwidth="0x6" edc:desc="Transmit FIFO Level"/>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="RXFL" edc:nzwidth="0x6" edc:desc="Receive FIFO Level"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_US_FIER" edc:nzwidth="0x20" edc:access="----------------------w-wwwwwwww" edc:impl="0x2FF" edc:_addr="0x400142A8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF2" edc:nzwidth="0x1" edc:desc="RXFTHF2 Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_US_FIDR" edc:nzwidth="0x20" edc:access="----------------------w-wwwwwwww" edc:impl="0x2FF" edc:_addr="0x400142AC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF2" edc:nzwidth="0x1" edc:desc="RXFTHF2 Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_US_FIMR" edc:nzwidth="0x20" edc:access="----------------------r-rrrrrrrr" edc:impl="0x2FF" edc:_addr="0x400142B0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF2" edc:nzwidth="0x1" edc:desc="RXFTHF2 Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_US_FESR" edc:nzwidth="0x20" edc:access="----------------------rrrrrrrrrr" edc:impl="0x3FF" edc:_addr="0x400142B4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Empty Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Full Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Threshold Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="Receive FIFO Empty Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="Receive FIFO Full Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="Receive FIFO Threshold Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Pointer Error Flag"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="Receive FIFO Pointer Error Flag"/>
            <edc:SFRFieldDef edc:cname="TXFLOCK" edc:nzwidth="0x1" edc:desc="Transmit FIFO Lock"/>
            <edc:SFRFieldDef edc:cname="RXFTHF2" edc:nzwidth="0x1" edc:desc="Receive FIFO Threshold Flag 2 (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2C" edc:_addr="0x400142B8"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_US_WPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:impl="0xFFFFFF07" edc:_addr="0x400142E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="WPEN" edc:nzwidth="0x1" edc:desc="Write Protection Enable"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:nzwidth="0x1" edc:desc="Write Protection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:nzwidth="0x1" edc:desc="Write Protection Control Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of bits WPEN, WPITEN and WPCREN. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x555341"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_US_WPSR" edc:nzwidth="0x20" edc:access="--------rrrrrrrrrrrrrrrr-------r" edc:impl="0xFFFF01" edc:_addr="0x400142E8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="WPVS" edc:nzwidth="0x1" edc:desc="Write Protection Violation Status"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:nzwidth="0x10" edc:desc="Write Protection Violation Source"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x114" edc:_addr="0x400142EC"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_SPI_CR" edc:nzwidth="0x20" edc:access="ww-----w------ww---w----w-----ww" edc:impl="0xC1031083" edc:_addr="0x40014400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="SPIEN" edc:nzwidth="0x1" edc:desc="SPI Enable"/>
            <edc:SFRFieldDef edc:cname="SPIDIS" edc:nzwidth="0x1" edc:desc="SPI Disable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="SPI Software Reset"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="REQCLR" edc:nzwidth="0x1" edc:desc="Request to Clear the Comparison Trigger"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="TXFCLR" edc:nzwidth="0x1" edc:desc="Transmit FIFO Clear"/>
            <edc:SFRFieldDef edc:cname="RXFCLR" edc:nzwidth="0x1" edc:desc="Receive FIFO Clear"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="LASTXFER" edc:nzwidth="0x1" edc:desc="Last Transfer"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="FIFODIS" edc:nzwidth="0x1" edc:desc="FIFO Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_SPI_MR" edc:nzwidth="0x20" edc:access="nnnnnnnn------nn---n----n-nnnnnn" edc:impl="0xFF0310BF" edc:_addr="0x40014404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="MSTR" edc:nzwidth="0x1" edc:desc="Host/Client Mode"/>
            <edc:SFRFieldDef edc:cname="PS" edc:nzwidth="0x1" edc:desc="Peripheral Select"/>
            <edc:SFRFieldDef edc:cname="PCSDEC" edc:nzwidth="0x1" edc:desc="Chip Select Decode"/>
            <edc:SFRFieldDef edc:cname="BRSRCCLK" edc:nzwidth="0x1" edc:desc="Bit Rate Source Clock">
              <edc:SFRFieldSemantic edc:cname="PERIPH_CLK" edc:desc="The peripheral clock is the source clock for the bit rate generation." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="GCLK is the source clock for the bit rate generation, thus the bit rate can be independent of the core/peripheral clock." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MODFDIS" edc:nzwidth="0x1" edc:desc="Mode Fault Detection"/>
            <edc:SFRFieldDef edc:cname="WDRBT" edc:nzwidth="0x1" edc:desc="Wait Data Read Before Transfer"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LLB" edc:nzwidth="0x1" edc:desc="Local Loopback Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CMPMODE" edc:nzwidth="0x1" edc:desc="Comparison Mode">
              <edc:SFRFieldSemantic edc:cname="FLAG_ONLY" edc:desc="Any character is received and comparison function drives CMP flag." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="START_CONDITION" edc:desc="Comparison condition must be met to start reception of all incoming characters until REQCLR is set." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PCS" edc:nzwidth="0x2" edc:desc="Peripheral Chip Select"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="DLYBCS" edc:nzwidth="0x8" edc:desc="Delay Between Chip Selects"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_SPI_RDR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40014408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="RD0" edc:nzwidth="0x10" edc:desc="Receive Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="RD1" edc:nzwidth="0x8" edc:desc="Receive Data"/>
            <edc:SFRFieldDef edc:cname="RD1" edc:nzwidth="0x10" edc:desc="Receive Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="RD3" edc:nzwidth="0x8" edc:desc="Receive Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_SPI_TDR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4001440C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="TD0" edc:nzwidth="0x10" edc:desc="Transmit Data"/>
            <edc:SFRFieldDef edc:cname="TD1" edc:nzwidth="0x10" edc:desc="Transmit Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="LASTXFER" edc:nzwidth="0x1" edc:desc="Last Transfer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_SPI_SR" edc:nzwidth="0x20" edc:access="rrrrrrrr-------r---rrrrrrrrrrrrr" edc:impl="0xFF011FFF" edc:_addr="0x40014410">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="RDRF" edc:nzwidth="0x1" edc:desc="Receive Data Register Full (cleared by reading FLEX_SPI_RDR)"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:nzwidth="0x1" edc:desc="Transmit Data Register Empty (cleared by writing FLEX_SPI_TDR)"/>
            <edc:SFRFieldDef edc:cname="MODF" edc:nzwidth="0x1" edc:desc="Mode Fault Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:nzwidth="0x1" edc:desc="Overrun Error Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of RX Buffer (cleared by writing FLEX_SPI_RCR or FLEX_SPI_RNCR)"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of TX Buffer (cleared by writing FLEX_SPI_TCR or FLEX_SPI_TNCR)"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="RX Buffer Full (cleared by writing FLEX_SPI_RCR or FLEX_SPI_RNCR)"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="TX Buffer Empty (cleared by writing FLEX_SPI_TCR or FLEX_SPI_TNCR)"/>
            <edc:SFRFieldDef edc:cname="NSSR" edc:nzwidth="0x1" edc:desc="NSS Rising (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="Transmission Registers Empty (cleared by writing FLEX_SPI_TDR)"/>
            <edc:SFRFieldDef edc:cname="UNDES" edc:nzwidth="0x1" edc:desc="Underrun Error Status (Client mode only) (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SFERR" edc:nzwidth="0x1" edc:desc="Client Mode Frame Error (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SPIENS" edc:nzwidth="0x1" edc:desc="SPI Enable Status"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Empty Flag (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Full Flag (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Threshold Flag (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="Receive FIFO Empty Flag"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="Receive FIFO Full Flag"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="Receive FIFO Threshold Flag"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Pointer Error Flag"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="Receive FIFO Pointer Error Flag"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_SPI_IER" edc:nzwidth="0x20" edc:access="wwwwwwww-----------wwwwwwwwwwwww" edc:impl="0xFF001FFF" edc:_addr="0x40014414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="RDRF" edc:nzwidth="0x1" edc:desc="Receive Data Register Full Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:nzwidth="0x1" edc:desc="SPI Transmit Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MODF" edc:nzwidth="0x1" edc:desc="Mode Fault Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="NSSR" edc:nzwidth="0x1" edc:desc="NSS Rising Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="Transmission Registers Empty Enable"/>
            <edc:SFRFieldDef edc:cname="UNDES" edc:nzwidth="0x1" edc:desc="Underrun Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SFERR" edc:nzwidth="0x1" edc:desc="Client Mode Frame Error Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0xB"/>
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_SPI_IDR" edc:nzwidth="0x20" edc:access="wwwwwwww-----------wwwwwwwwwwwww" edc:impl="0xFF001FFF" edc:_addr="0x40014418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="RDRF" edc:nzwidth="0x1" edc:desc="Receive Data Register Full Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:nzwidth="0x1" edc:desc="SPI Transmit Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="MODF" edc:nzwidth="0x1" edc:desc="Mode Fault Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="NSSR" edc:nzwidth="0x1" edc:desc="NSS Rising Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="Transmission Registers Empty Disable"/>
            <edc:SFRFieldDef edc:cname="UNDES" edc:nzwidth="0x1" edc:desc="Underrun Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SFERR" edc:nzwidth="0x1" edc:desc="Client Mode Frame Error Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0xB"/>
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_SPI_IMR" edc:nzwidth="0x20" edc:access="rrrrrrrr-----------rrrrrrrrrrrrr" edc:impl="0xFF001FFF" edc:_addr="0x4001441C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="RDRF" edc:nzwidth="0x1" edc:desc="Receive Data Register Full Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:nzwidth="0x1" edc:desc="SPI Transmit Data Register Empty Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="MODF" edc:nzwidth="0x1" edc:desc="Mode Fault Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="NSSR" edc:nzwidth="0x1" edc:desc="NSS Rising Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="Transmission Registers Empty Mask"/>
            <edc:SFRFieldDef edc:cname="UNDES" edc:nzwidth="0x1" edc:desc="Underrun Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="SFERR" edc:nzwidth="0x1" edc:desc="Client Mode Frame Error Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0xB"/>
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x10" edc:_addr="0x40014420"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_SPI_CSR0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40014430">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity"/>
            <edc:SFRFieldDef edc:cname="NCPHA" edc:nzwidth="0x1" edc:desc="Clock Phase"/>
            <edc:SFRFieldDef edc:cname="CSNAAT" edc:nzwidth="0x1" edc:desc="Chip Select Not Active After Transfer (Ignored if CSAAT = 1)"/>
            <edc:SFRFieldDef edc:cname="CSAAT" edc:nzwidth="0x1" edc:desc="Chip Select Active After Transfer"/>
            <edc:SFRFieldDef edc:cname="BITS" edc:nzwidth="0x4" edc:desc="Bits Per Transfer">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits for transfer" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits for transfer" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="10_BIT" edc:desc="10 bits for transfer" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="11_BIT" edc:desc="11 bits for transfer" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="12_BIT" edc:desc="12 bits for transfer" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="13 bits for transfer" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="14_BIT" edc:desc="14 bits for transfer" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="15_BIT" edc:desc="15 bits for transfer" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="16_BIT" edc:desc="16 bits for transfer" edc:when="(field &amp; 0xF) == 0x08"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCBR" edc:nzwidth="0x8" edc:desc="Serial Clock Bit Rate"/>
            <edc:SFRFieldDef edc:cname="DLYBS" edc:nzwidth="0x8" edc:desc="Delay Before SPCK"/>
            <edc:SFRFieldDef edc:cname="DLYBCT" edc:nzwidth="0x8" edc:desc="Delay Between Consecutive Transfers"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_SPI_CSR1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40014434">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity"/>
            <edc:SFRFieldDef edc:cname="NCPHA" edc:nzwidth="0x1" edc:desc="Clock Phase"/>
            <edc:SFRFieldDef edc:cname="CSNAAT" edc:nzwidth="0x1" edc:desc="Chip Select Not Active After Transfer (Ignored if CSAAT = 1)"/>
            <edc:SFRFieldDef edc:cname="CSAAT" edc:nzwidth="0x1" edc:desc="Chip Select Active After Transfer"/>
            <edc:SFRFieldDef edc:cname="BITS" edc:nzwidth="0x4" edc:desc="Bits Per Transfer">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits for transfer" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits for transfer" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="10_BIT" edc:desc="10 bits for transfer" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="11_BIT" edc:desc="11 bits for transfer" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="12_BIT" edc:desc="12 bits for transfer" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="13 bits for transfer" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="14_BIT" edc:desc="14 bits for transfer" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="15_BIT" edc:desc="15 bits for transfer" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="16_BIT" edc:desc="16 bits for transfer" edc:when="(field &amp; 0xF) == 0x08"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCBR" edc:nzwidth="0x8" edc:desc="Serial Clock Bit Rate"/>
            <edc:SFRFieldDef edc:cname="DLYBS" edc:nzwidth="0x8" edc:desc="Delay Before SPCK"/>
            <edc:SFRFieldDef edc:cname="DLYBCT" edc:nzwidth="0x8" edc:desc="Delay Between Consecutive Transfers"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x40014438"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_SPI_FMR" edc:nzwidth="0x20" edc:access="--nnnnnn--nnnnnn----------nn--nn" edc:impl="0x3F3F0033" edc:_addr="0x40014440">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="TXRDYM" edc:nzwidth="0x2" edc:desc="Transmit Data Register Empty Mode">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="TDRE will be at level '1' when at least one data can be written in the transmit FIFO. When DMA is enabled to transfer data, the chunk of 1 data (byte or halfword) must be configured in the DMA depending on FLEX_SPI_CSR0.BITS. If the transfer is performed by software, the access type (byte, halfword) must be defined depending on FLEX_SPI_CSR0.BITS." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="TDRE will be at level '1' when at least two data can be written in the transmit FIFO. FIFO. To minimize system bus load, when DMA is enabled to transfer data, the chunk of 1 word (1 word carries 2 data) must be configured in the DMA. If the transfer is performed by software, the access type must be defined as word (2 data per access, 1 access)." edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXRDYM" edc:nzwidth="0x2" edc:desc="Receive Data Register Full Mode">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="RDRF will be at level '1' when at least one unread data is in the receive FIFO. When DMA is enabled to transfer data and FLEX_SPI_CSR0.BITS=0 (8 bits transfered on SPI line), the chunk of 1 byte must be configured in the DMA. When FLEX_SPI_CSR0.BITS&gt;0 (9 to 16 bits transfered on SPI line), the chunk of 1 halfword must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte or halfword depending on FLEX_SPI_CSR0.BITS." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="RDRF will be at level '1' when at least two unread data are in the receive FIFO. To minimize system bus load, when DMA is enabled to transfer data and FLEX_SPI_CSR0.BITS=0 (8 bits transfered on SPI line), the chunk of 1 halfword (1 halfword carries 2 bytes) must be configured in the DMA. When FLEX_SPI_CSR0.BITS&gt;0 (9 to 16 bits transfered on SPI line), the chunk of 1 word (1 word carries 2 halfwords) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as halfword (2 bytes per access, 1 access when FLEX_SPI_CSR0.BITS=0), or word (2 halfwords per access, 2 accesses when FLEX_SPI_CSR0.BITS&gt;0)." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="RDRF will be at level '1' when at least four unread data are in the receive FIFO. To minimize system bus load, when DMA is enabled to transfer data and FLEX_SPI_CSR0.BITS=0 (8 bits transfered on SPI line), the chunk of 1 word (1 halfword carries 4 bytes) must be configured in the DMA. When FLEX_SPI_CSR0.BITS&gt;0 (9 to 16 bits transfered on SPI line), the chunk of 2 words (1 word carries 4 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as word (4 bytes per access, 1 access when FLEX_SPI_CSR0.BITS=0 or 2 halfwords per access, 2 accesses when FLEX_SPI_CSR0.BITS&gt;0)." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="TXFTHRES" edc:nzwidth="0x6" edc:desc="Transmit FIFO Threshold"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXFTHRES" edc:nzwidth="0x6" edc:desc="Receive FIFO Threshold"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_SPI_FLR" edc:nzwidth="0x20" edc:access="----------rrrrrr----------rrrrrr" edc:impl="0x3F003F" edc:_addr="0x40014444">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="TXFL" edc:nzwidth="0x6" edc:desc="Transmit FIFO Level"/>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="RXFL" edc:nzwidth="0x6" edc:desc="Receive FIFO Level"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_SPI_CMPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40014448">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="VAL1" edc:nzwidth="0x10" edc:desc="First Comparison Value for Received Character"/>
            <edc:SFRFieldDef edc:cname="VAL2" edc:nzwidth="0x10" edc:desc="Second Comparison Value for Received Character"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x98" edc:_addr="0x4001444C"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_SPI_WPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:impl="0xFFFFFF07" edc:_addr="0x400144E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="WPEN" edc:nzwidth="0x1" edc:desc="Write Protection Enable"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:nzwidth="0x1" edc:desc="Write Protection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:nzwidth="0x1" edc:desc="Write Protection Control Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of bits WPEN, WPITEN and WPCREN. Always reads as 0" edc:when="(field &amp; 0xFFFFFF) == 0x535049"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_SPI_WPSR" edc:nzwidth="0x20" edc:access="----------------rrrrrrrr-------r" edc:impl="0xFF01" edc:_addr="0x400144E8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="WPVS" edc:nzwidth="0x1" edc:desc="Write Protection Violation Status"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:nzwidth="0x8" edc:desc="Write Protection Violation Source"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x114" edc:_addr="0x400144EC"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_TWI_CR" edc:nzwidth="0x20" edc:access="--ww-www------wwwwwwwwwwwwwwwwww" edc:impl="0x3703FFFF" edc:_addr="0x40014600">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="START" edc:nzwidth="0x1" edc:desc="Send a START Condition"/>
            <edc:SFRFieldDef edc:cname="STOP" edc:nzwidth="0x1" edc:desc="Send a STOP Condition"/>
            <edc:SFRFieldDef edc:cname="MSEN" edc:nzwidth="0x1" edc:desc="TWI Host Mode Enabled"/>
            <edc:SFRFieldDef edc:cname="MSDIS" edc:nzwidth="0x1" edc:desc="TWI Host Mode Disabled"/>
            <edc:SFRFieldDef edc:cname="SVEN" edc:nzwidth="0x1" edc:desc="TWI Client Mode Enabled"/>
            <edc:SFRFieldDef edc:cname="SVDIS" edc:nzwidth="0x1" edc:desc="TWI Client Mode Disabled"/>
            <edc:SFRFieldDef edc:cname="QUICK" edc:nzwidth="0x1" edc:desc="SMBus Quick Command"/>
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="HSEN" edc:nzwidth="0x1" edc:desc="TWI High-Speed Mode Enabled"/>
            <edc:SFRFieldDef edc:cname="HSDIS" edc:nzwidth="0x1" edc:desc="TWI High-Speed Mode Disabled"/>
            <edc:SFRFieldDef edc:cname="SMBEN" edc:nzwidth="0x1" edc:desc="SMBus Mode Enabled"/>
            <edc:SFRFieldDef edc:cname="SMBDIS" edc:nzwidth="0x1" edc:desc="SMBus Mode Disabled"/>
            <edc:SFRFieldDef edc:cname="PECEN" edc:nzwidth="0x1" edc:desc="Packet Error Checking Enable"/>
            <edc:SFRFieldDef edc:cname="PECDIS" edc:nzwidth="0x1" edc:desc="Packet Error Checking Disable"/>
            <edc:SFRFieldDef edc:cname="PECRQ" edc:nzwidth="0x1" edc:desc="PEC Request"/>
            <edc:SFRFieldDef edc:cname="CLEAR" edc:nzwidth="0x1" edc:desc="Bus CLEAR Command"/>
            <edc:SFRFieldDef edc:cname="ACMEN" edc:nzwidth="0x1" edc:desc="Alternative Command Mode Enable"/>
            <edc:SFRFieldDef edc:cname="ACMDIS" edc:nzwidth="0x1" edc:desc="Alternative Command Mode Disable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="TXFCLR" edc:nzwidth="0x1" edc:desc="Transmit FIFO Clear"/>
            <edc:SFRFieldDef edc:cname="RXFCLR" edc:nzwidth="0x1" edc:desc="Receive FIFO Clear"/>
            <edc:SFRFieldDef edc:cname="TXFLCLR" edc:nzwidth="0x1" edc:desc="Transmit FIFO Lock CLEAR"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="FIFODIS" edc:nzwidth="0x1" edc:desc="FIFO Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_TWI_MMR" edc:nzwidth="0x20" edc:access="-------n-nnnnnnn-nnn--nn--------" edc:impl="0x17F7300" edc:_addr="0x40014604">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="IADRSZ" edc:nzwidth="0x2" edc:desc="Internal Device Address Size">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No internal device address" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="1_BYTE" edc:desc="One-byte internal device address" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="2_BYTE" edc:desc="Two-byte internal device address" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="3_BYTE" edc:desc="Three-byte internal device address" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MREAD" edc:nzwidth="0x1" edc:desc="Host Read Direction"/>
            <edc:SFRFieldDef edc:cname="SCLRBL" edc:nzwidth="0x2" edc:desc="SCL Rise Boost Level"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DADR" edc:nzwidth="0x7" edc:desc="Device Address"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NOAP" edc:nzwidth="0x1" edc:desc="No Auto-Stop On NACK Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_TWI_SMR" edc:nzwidth="0x20" edc:access="nnnn-----nnnnnnn-nnnnnnnnnnnnn-n" edc:impl="0xF07F7FFD" edc:_addr="0x40014608">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="NACKEN" edc:nzwidth="0x1" edc:desc="Client Receiver Data Phase NACK Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SMDA" edc:nzwidth="0x1" edc:desc="SMBus Default Address"/>
            <edc:SFRFieldDef edc:cname="SMHH" edc:nzwidth="0x1" edc:desc="SMBus Host Header"/>
            <edc:SFRFieldDef edc:cname="SADAT" edc:nzwidth="0x1" edc:desc="Client Address Treated as Data"/>
            <edc:SFRFieldDef edc:cname="BSEL" edc:nzwidth="0x1" edc:desc="TWI Bus Selection"/>
            <edc:SFRFieldDef edc:cname="SCLWSDIS" edc:nzwidth="0x1" edc:desc="Clock Wait State Disable"/>
            <edc:SFRFieldDef edc:cname="SNIFF" edc:nzwidth="0x1" edc:desc="Client Sniffer Mode"/>
            <edc:SFRFieldDef edc:cname="MASK" edc:nzwidth="0x7" edc:desc="Client Address Mask"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SADR" edc:nzwidth="0x7" edc:desc="Client Address"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="SADR1EN" edc:nzwidth="0x1" edc:desc="Client Address 1 Enable"/>
            <edc:SFRFieldDef edc:cname="SADR2EN" edc:nzwidth="0x1" edc:desc="Client Address 2 Enable"/>
            <edc:SFRFieldDef edc:cname="SADR3EN" edc:nzwidth="0x1" edc:desc="Client Address 3 Enable"/>
            <edc:SFRFieldDef edc:cname="DATAMEN" edc:nzwidth="0x1" edc:desc="Data Matching Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_TWI_IADR" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:impl="0xFFFFFF" edc:_addr="0x4001460C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="IADR" edc:nzwidth="0x18" edc:desc="Internal Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_TWI_CWGR" edc:nzwidth="0x20" edc:access="--nnnnnn---n-nnnnnnnnnnnnnnnnnnn" edc:impl="0x3F17FFFF" edc:_addr="0x40014610">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="CLDIV" edc:nzwidth="0x8" edc:desc="Clock Low Divider"/>
            <edc:SFRFieldDef edc:cname="CHDIV" edc:nzwidth="0x8" edc:desc="Clock High Divider"/>
            <edc:SFRFieldDef edc:cname="CKDIV" edc:nzwidth="0x3" edc:desc="Clock Divider"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BRSRCCLK" edc:nzwidth="0x1" edc:desc="Bit Rate Source Clock">
              <edc:SFRFieldSemantic edc:cname="PERIPH_CLK" edc:desc="The peripheral clock is the source clock for the bit rate generation." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="GCLK is the source clock for the bit rate generation, thus the bit rate can be independent of the core/peripheral clock." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="HOLD" edc:nzwidth="0x6" edc:desc="TWD Hold Time Versus TWCK Falling"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x40014614"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_TWI_SR" edc:nzwidth="0x20" edc:access="-----rrrr-rrrrrrrrrrrrrrrrrrrrrr" edc:impl="0x7BFFFFF" edc:_addr="0x40014620">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="TXCOMP" edc:nzwidth="0x1" edc:desc="Transmission Completed (cleared by writing FLEX_TWI_THR)"/>
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="Receive Holding Register Ready (cleared when reading FLEX_TWI_RHR)"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="Transmit Holding Register Ready (cleared by writing FLEX_TWI_THR)"/>
            <edc:SFRFieldDef edc:cname="SVREAD" edc:nzwidth="0x1" edc:desc="Client Read"/>
            <edc:SFRFieldDef edc:cname="SVACC" edc:nzwidth="0x1" edc:desc="Client Access"/>
            <edc:SFRFieldDef edc:cname="GACC" edc:nzwidth="0x1" edc:desc="General Call Access (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:nzwidth="0x1" edc:desc="Underrun Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="NACK" edc:nzwidth="0x1" edc:desc="Not Acknowledged (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="ARBLST" edc:nzwidth="0x1" edc:desc="Arbitration Lost (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SCLWS" edc:nzwidth="0x1" edc:desc="Clock Wait State"/>
            <edc:SFRFieldDef edc:cname="EOSACC" edc:nzwidth="0x1" edc:desc="End Of Client Access (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of RX Buffer (cleared by writing FLEX_TWI_RCR or FLEX_TWI_RNCR)"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of TX Buffer (cleared by writing FLEX_TWI_TCR or FLEX_TWI_TNCR)"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="RX Buffer Full (cleared by writing FLEX_TWI_RCR or FLEX_TWI_RNCR)"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="TX Buffer Empty (cleared by writing FLEX_TWI_TCR or FLEX_TWI_TNCR)"/>
            <edc:SFRFieldDef edc:cname="MCACK" edc:nzwidth="0x1" edc:desc="Host Code Acknowledge (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SMBAF" edc:nzwidth="0x1" edc:desc="SMBus Alert Flag"/>
            <edc:SFRFieldDef edc:cname="TOUT" edc:nzwidth="0x1" edc:desc="Timeout Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="PECERR" edc:nzwidth="0x1" edc:desc="PEC Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SMBDAM" edc:nzwidth="0x1" edc:desc="SMBus Default Address Match (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SMBHHM" edc:nzwidth="0x1" edc:desc="SMBus Host Header Address Match (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFLOCK" edc:nzwidth="0x1" edc:desc="Transmit FIFO Lock"/>
            <edc:SFRFieldDef edc:cname="SCL" edc:nzwidth="0x1" edc:desc="SCL Line Value"/>
            <edc:SFRFieldDef edc:cname="SDA" edc:nzwidth="0x1" edc:desc="SDA Line Value"/>
            <edc:SFRFieldDef edc:cname="SR" edc:nzwidth="0x1" edc:desc="Start Repeated"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_TWI_IER" edc:nzwidth="0x20" edc:access="----------wwww-wwwwwwwwwwwww-www" edc:impl="0x3DFFF7" edc:_addr="0x40014624">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="TXCOMP" edc:nzwidth="0x1" edc:desc="Transmission Completed Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="Receive Holding Register Ready Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="Transmit Holding Register Ready Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SVACC" edc:nzwidth="0x1" edc:desc="Client Access Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="GACC" edc:nzwidth="0x1" edc:desc="General Call Access Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:nzwidth="0x1" edc:desc="Underrun Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="NACK" edc:nzwidth="0x1" edc:desc="Not Acknowledge Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ARBLST" edc:nzwidth="0x1" edc:desc="Arbitration Lost Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SCL_WS" edc:nzwidth="0x1" edc:desc="Clock Wait State Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EOSACC" edc:nzwidth="0x1" edc:desc="End Of Client Access Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MCACK" edc:nzwidth="0x1" edc:desc="Host Code Acknowledge Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TOUT" edc:nzwidth="0x1" edc:desc="Timeout Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PECERR" edc:nzwidth="0x1" edc:desc="PEC Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SMBDAM" edc:nzwidth="0x1" edc:desc="SMBus Default Address Match Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SMBHHM" edc:nzwidth="0x1" edc:desc="SMBus Host Header Address Match Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_TWI_IDR" edc:nzwidth="0x20" edc:access="----------wwww-wwwwwwwwwwwww-www" edc:impl="0x3DFFF7" edc:_addr="0x40014628">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="TXCOMP" edc:nzwidth="0x1" edc:desc="Transmission Completed Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="Receive Holding Register Ready Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="Transmit Holding Register Ready Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SVACC" edc:nzwidth="0x1" edc:desc="Client Access Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="GACC" edc:nzwidth="0x1" edc:desc="General Call Access Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:nzwidth="0x1" edc:desc="Underrun Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="NACK" edc:nzwidth="0x1" edc:desc="Not Acknowledge Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ARBLST" edc:nzwidth="0x1" edc:desc="Arbitration Lost Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SCL_WS" edc:nzwidth="0x1" edc:desc="Clock Wait State Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="EOSACC" edc:nzwidth="0x1" edc:desc="End Of Client Access Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="MCACK" edc:nzwidth="0x1" edc:desc="Host Code Acknowledge Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TOUT" edc:nzwidth="0x1" edc:desc="Timeout Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="PECERR" edc:nzwidth="0x1" edc:desc="PEC Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SMBDAM" edc:nzwidth="0x1" edc:desc="SMBus Default Address Match Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SMBHHM" edc:nzwidth="0x1" edc:desc="SMBus Host Header Address Match Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_TWI_IMR" edc:nzwidth="0x20" edc:access="----------rrrr-rrrrrrrrrrrrr-rrr" edc:impl="0x3DFFF7" edc:_addr="0x4001462C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="TXCOMP" edc:nzwidth="0x1" edc:desc="Transmission Completed Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="Receive Holding Register Ready Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="Transmit Holding Register Ready Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SVACC" edc:nzwidth="0x1" edc:desc="Client Access Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="GACC" edc:nzwidth="0x1" edc:desc="General Call Access Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:nzwidth="0x1" edc:desc="Underrun Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="NACK" edc:nzwidth="0x1" edc:desc="Not Acknowledge Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ARBLST" edc:nzwidth="0x1" edc:desc="Arbitration Lost Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="SCL_WS" edc:nzwidth="0x1" edc:desc="Clock Wait State Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="EOSACC" edc:nzwidth="0x1" edc:desc="End Of Client Access Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="MCACK" edc:nzwidth="0x1" edc:desc="Host Code Acknowledge Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TOUT" edc:nzwidth="0x1" edc:desc="Timeout Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="PECERR" edc:nzwidth="0x1" edc:desc="PEC Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="SMBDAM" edc:nzwidth="0x1" edc:desc="SMBus Default Address Match Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="SMBHHM" edc:nzwidth="0x1" edc:desc="SMBus Host Header Address Match Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_TWI_RHR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40014630">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="RXDATA0" edc:nzwidth="0x8" edc:desc="Host or Client Receive Holding Data 0"/>
            <edc:SFRFieldDef edc:cname="RXDATA1" edc:nzwidth="0x8" edc:desc="Host or Client Receive Holding Data 1"/>
            <edc:AdjustPoint edc:offset="-6"/>
            <edc:SFRFieldDef edc:cname="PSTATE" edc:nzwidth="0x1" edc:desc="Stop State (Client Sniffer Mode only)"/>
            <edc:SFRFieldDef edc:cname="ASTATE" edc:nzwidth="0x2" edc:desc="Acknowledge State (Client Sniffer Mode only)">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Acknowledge or Nacknowledge detected after previously logged data" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ACK" edc:desc="Acknowledge (A) detected after previously logged data" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NACK" edc:desc="Nacknowledge (NA) detected after previously logged data" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="UNDEF" edc:desc="Not defined" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RXDATA2" edc:nzwidth="0x8" edc:desc="Host or Client Receive Holding Data 2"/>
            <edc:SFRFieldDef edc:cname="RXDATA3" edc:nzwidth="0x8" edc:desc="Host or Client Receive Holding Data 3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_TWI_THR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x40014634">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="TXDATA0" edc:nzwidth="0x8" edc:desc="Host or Client Transmit Holding Data 0"/>
            <edc:SFRFieldDef edc:cname="TXDATA1" edc:nzwidth="0x8" edc:desc="Host or Client Transmit Holding Data 1"/>
            <edc:SFRFieldDef edc:cname="TXDATA2" edc:nzwidth="0x8" edc:desc="Host or Client Transmit Holding Data 2"/>
            <edc:SFRFieldDef edc:cname="TXDATA3" edc:nzwidth="0x8" edc:desc="Host or Client Transmit Holding Data 3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_TWI_SMBTR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn----nnnn" edc:impl="0xFFFFFF0F" edc:_addr="0x40014638">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="PRESC" edc:nzwidth="0x4" edc:desc="SMBus Clock Prescaler"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TLOWS" edc:nzwidth="0x8" edc:desc="Client Clock Stretch Maximum Cycles"/>
            <edc:SFRFieldDef edc:cname="TLOWM" edc:nzwidth="0x8" edc:desc="Host Clock Stretch Maximum Cycles"/>
            <edc:SFRFieldDef edc:cname="THMAX" edc:nzwidth="0x8" edc:desc="Clock High Maximum Cycles"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_TWI_HSR" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:impl="0xFF" edc:_addr="0x4001463C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="MCODE" edc:nzwidth="0x8" edc:desc="TWI High Speed Host Code"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_TWI_ACR" edc:nzwidth="0x20" edc:access="------nnnnnnnnnn------nnnnnnnnnn" edc:impl="0x3FF03FF" edc:_addr="0x40014640">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="DATAL" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Transfer Direction"/>
            <edc:SFRFieldDef edc:cname="PEC" edc:nzwidth="0x1" edc:desc="PEC Request (SMBus Mode only)"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="NDATAL" edc:nzwidth="0x8" edc:desc="Next Data Length"/>
            <edc:SFRFieldDef edc:cname="NDIR" edc:nzwidth="0x1" edc:desc="Next Transfer Direction"/>
            <edc:SFRFieldDef edc:cname="NPEC" edc:nzwidth="0x1" edc:desc="Next PEC Request (SMBus Mode only)"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_TWI_FILTR" edc:nzwidth="0x20" edc:access="---------------------nnn------nn" edc:impl="0x703" edc:_addr="0x40014644">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="FILT" edc:nzwidth="0x1" edc:desc="RX Digital Filter"/>
            <edc:SFRFieldDef edc:cname="PADFEN" edc:nzwidth="0x1" edc:desc="PAD Filter Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="THRES" edc:nzwidth="0x3" edc:desc="Digital Filter Threshold"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_TWI_HSCWGR" edc:nzwidth="0x20" edc:access="-------------nnnnnnnnnnnnnnnnnnn" edc:impl="0x7FFFF" edc:_addr="0x40014648">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="HSCLDIV" edc:nzwidth="0x8" edc:desc="High Speed Clock Low Divider"/>
            <edc:SFRFieldDef edc:cname="HSCHDIV" edc:nzwidth="0x8" edc:desc="High Speed Clock High Divider"/>
            <edc:SFRFieldDef edc:cname="HSCKDIV" edc:nzwidth="0x3" edc:desc="High Speed Clock Divider"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_TWI_SWMR" edc:nzwidth="0x20" edc:access="nnnnnnnn-nnnnnnn-nnnnnnn-nnnnnnn" edc:impl="0xFF7F7F7F" edc:_addr="0x4001464C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="SADR1" edc:nzwidth="0x7" edc:desc="Client Address 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SADR2" edc:nzwidth="0x7" edc:desc="Client Address 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SADR3" edc:nzwidth="0x7" edc:desc="Client Address 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DATAM" edc:nzwidth="0x8" edc:desc="Data Match"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_TWI_FMR" edc:nzwidth="0x20" edc:access="--nnnnnn--nnnnnn----------nn--nn" edc:impl="0x3F3F0033" edc:_addr="0x40014650">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="TXRDYM" edc:nzwidth="0x2" edc:desc="Transmitter Ready Mode">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="TXRDY will be at level '1' when at least one data can be written in the transmit FIFO. When DMA is enabled to transfer data, the chunk of 1 byte must be configured in the DMA. If the transfer is performed by software, the access type must be defined as byte." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="TXRDY will be at level '1' when at least two data can be written in the transmit FIFO. To minimize system bus load, when DMA is enabled to transfer data, the chunk of 1 halfword (1 halfword carries 2 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 2 accesses) or halfword (2 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="TXRDY will be at level '1' when at least four data can be written in the transmit FIFO. To minimize system bus load, when DMA is enabled to transfer data, the chunk of 1 word (1 word carries 4 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 4 accesses), halfword (2 bytes per access, 2 accesses) or word (4 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXRDYM" edc:nzwidth="0x2" edc:desc="Receiver Ready Mode">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="RXRDY will be at level '1' when at least one unread data is in the receive FIFO. When DMA is enabled to transfer data the chunk of 1 byte must be configured in the DMA. If the transfer is performed by software, the access type (byte, halfword) must be defined accordingly." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="RXRDY will be at level '1' when at least two unread data are in the receive FIFO. To minimize system bus load, when DMA is enabled to transfer data, the chunk of 1 halfword (1 halfword carries 2 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 2 accesses) or halfword (2 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="RXRDY will be at level '1' when at least four unread data are in the receive FIFO. To minimize system bus load, when DMA is enabled to transfer data, the chunk of 1 word (1 word carries 4 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 4 accesses), halfword (2 bytes per access, 2 accesses) or word (4 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="TXFTHRES" edc:nzwidth="0x6" edc:desc="Transmit FIFO Threshold"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXFTHRES" edc:nzwidth="0x6" edc:desc="Receive FIFO Threshold"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_TWI_FLR" edc:nzwidth="0x20" edc:access="----------rrrrrr----------rrrrrr" edc:impl="0x3F003F" edc:_addr="0x40014654">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="TXFL" edc:nzwidth="0x6" edc:desc="Transmit FIFO Level"/>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="RXFL" edc:nzwidth="0x6" edc:desc="Receive FIFO Level"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x40014658"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_TWI_FSR" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:impl="0xFF" edc:_addr="0x40014660">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Empty Flag (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Full Flag (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Threshold Flag (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="Receive FIFO Empty Flag"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="Receive FIFO Full Flag"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="Receive FIFO Threshold Flag"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Pointer Error Flag"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="Receive FIFO Pointer Error Flag"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_TWI_FIER" edc:nzwidth="0x20" edc:access="------------------------wwwwwwww" edc:impl="0xFF" edc:_addr="0x40014664">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_TWI_FIDR" edc:nzwidth="0x20" edc:access="------------------------wwwwwwww" edc:impl="0xFF" edc:_addr="0x40014668">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_TWI_FIMR" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:impl="0xFF" edc:_addr="0x4001466C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x74" edc:_addr="0x40014670"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_TWI_WPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:impl="0xFFFFFF07" edc:_addr="0x400146E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="WPEN" edc:nzwidth="0x1" edc:desc="Write Protection Enable"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:nzwidth="0x1" edc:desc="Write Protection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:nzwidth="0x1" edc:desc="Write Protection Control Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of bits WPEN, WPITEN and WPCREN. Always reads as 0" edc:when="(field &amp; 0xFFFFFF) == 0x545749"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM5" edc:cname="FLEX_TWI_WPSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrr-------r" edc:impl="0xFFFFFF01" edc:_addr="0x400146E8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM5">
            <edc:SFRFieldDef edc:cname="WPVS" edc:nzwidth="0x1" edc:desc="Write Protect Violation Status (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:nzwidth="0x18" edc:desc="Write Protection Violation Source"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3914" edc:_addr="0x400146EC"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_MR" edc:nzwidth="0x20" edc:access="------------------------------nn" edc:impl="0x3" edc:_addr="0x40018000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="OPMODE" edc:nzwidth="0x2" edc:desc="FLEXCOM Operating Mode">
              <edc:SFRFieldSemantic edc:cname="NO_COM" edc:desc="No communication" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USART" edc:desc="All UART related protocols are selected (RS232, RS485, IrDA, ISO7816, LIN,) SPI/TWI related registers are not accessible and have no impact on IOs." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SPI" edc:desc="SPI operating mode is selected. USART/TWI related registers are not accessible and have no impact on IOs." edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TWI" edc:desc="All TWI related protocols are selected (TWI, SMBus). USART/SPI related registers are not accessible and have no impact on IOs." edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x40018004"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_RHR" edc:nzwidth="0x20" edc:access="----------------rrrrrrrrrrrrrrrr" edc:impl="0xFFFF" edc:_addr="0x40018010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="RXDATA" edc:nzwidth="0x10" edc:desc="Receive Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x40018014"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_THR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x40018020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="TXDATA" edc:nzwidth="0x10" edc:desc="Transmit Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xDC" edc:_addr="0x40018024"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_RPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40018100">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="RXPTR" edc:nzwidth="0x20" edc:desc="Receive Pointer Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_RCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x40018104">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="RXCTR" edc:nzwidth="0x10" edc:desc="Receive Counter Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_TPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40018108">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="TXPTR" edc:nzwidth="0x20" edc:desc="Transmit Counter Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_TCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x4001810C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="TXCTR" edc:nzwidth="0x10" edc:desc="Transmit Counter Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_RNPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40018110">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="RXNPTR" edc:nzwidth="0x20" edc:desc="Receive Next Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_RNCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x40018114">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="RXNCTR" edc:nzwidth="0x10" edc:desc="Receive Next Counter"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_TNPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40018118">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="TXNPTR" edc:nzwidth="0x20" edc:desc="Transmit Next Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_TNCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x4001811C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="TXNCTR" edc:nzwidth="0x10" edc:desc="Transmit Counter Next"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_PTCR" edc:nzwidth="0x20" edc:access="-------w----wwww------ww------ww" edc:impl="0x10F0303" edc:_addr="0x40018120">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="RXTEN" edc:nzwidth="0x1" edc:desc="Receiver Transfer Enable"/>
            <edc:SFRFieldDef edc:cname="RXTDIS" edc:nzwidth="0x1" edc:desc="Receiver Transfer Disable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="TXTEN" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Enable"/>
            <edc:SFRFieldDef edc:cname="TXTDIS" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Disable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="RXCBEN" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Enable"/>
            <edc:SFRFieldDef edc:cname="RXCBDIS" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Disable"/>
            <edc:SFRFieldDef edc:cname="TXCBEN" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Enable"/>
            <edc:SFRFieldDef edc:cname="TXCBDIS" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Disable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ERRCLR" edc:nzwidth="0x1" edc:desc="Transfer Bus Error Clear"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_PTSR" edc:nzwidth="0x20" edc:access="-------r-----r-r-------r-------r" edc:impl="0x1050101" edc:_addr="0x40018124">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="RXTEN" edc:nzwidth="0x1" edc:desc="Receiver Transfer Enable"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="TXTEN" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Enable"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="RXCBEN" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXCBEN" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Transfer Bus Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_PWPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:impl="0xFFFFFF07" edc:_addr="0x40018128">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="WPPTREN" edc:nzwidth="0x1" edc:desc="Write Protection Pointer Registers Enable"/>
            <edc:SFRFieldDef edc:cname="WPCTREN" edc:nzwidth="0x1" edc:desc="Write Protection Counter Registers Enable"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:nzwidth="0x1" edc:desc="Write Protection Control Register Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x504443"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xD4" edc:_addr="0x4001812C"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_US_CR" edc:nzwidth="0x20" edc:access="ww-w-www--wwww--wwwwwwwwwwwwww--" edc:impl="0xD73CFFFC" edc:_addr="0x40018200">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RSTRX" edc:nzwidth="0x1" edc:desc="Reset Receiver"/>
            <edc:SFRFieldDef edc:cname="RSTTX" edc:nzwidth="0x1" edc:desc="Reset Transmitter"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
            <edc:SFRFieldDef edc:cname="RXDIS" edc:nzwidth="0x1" edc:desc="Receiver Disable"/>
            <edc:SFRFieldDef edc:cname="TXEN" edc:nzwidth="0x1" edc:desc="Transmitter Enable"/>
            <edc:SFRFieldDef edc:cname="TXDIS" edc:nzwidth="0x1" edc:desc="Transmitter Disable"/>
            <edc:SFRFieldDef edc:cname="RSTSTA" edc:nzwidth="0x1" edc:desc="Reset Status Bits"/>
            <edc:SFRFieldDef edc:cname="STTBRK" edc:nzwidth="0x1" edc:desc="Start Break"/>
            <edc:SFRFieldDef edc:cname="STPBRK" edc:nzwidth="0x1" edc:desc="Stop Break"/>
            <edc:SFRFieldDef edc:cname="STTTO" edc:nzwidth="0x1" edc:desc="Clear TIMEOUT Flag and Start Timeout After Next Character Received"/>
            <edc:SFRFieldDef edc:cname="SENDA" edc:nzwidth="0x1" edc:desc="Send Address"/>
            <edc:SFRFieldDef edc:cname="RSTIT" edc:nzwidth="0x1" edc:desc="Reset Iterations"/>
            <edc:SFRFieldDef edc:cname="RSTNACK" edc:nzwidth="0x1" edc:desc="Reset Non Acknowledge"/>
            <edc:SFRFieldDef edc:cname="RETTO" edc:nzwidth="0x1" edc:desc="Start Timeout Immediately"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RTSEN" edc:nzwidth="0x1" edc:desc="Request to Send Enable"/>
            <edc:SFRFieldDef edc:cname="RTSDIS" edc:nzwidth="0x1" edc:desc="Request to Send Disable"/>
            <edc:SFRFieldDef edc:cname="LINABT" edc:nzwidth="0x1" edc:desc="Abort LIN Transmission"/>
            <edc:SFRFieldDef edc:cname="LINWKUP" edc:nzwidth="0x1" edc:desc="Send LIN Wakeup Signal"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TXFCLR" edc:nzwidth="0x1" edc:desc="Transmit FIFO Clear"/>
            <edc:SFRFieldDef edc:cname="RXFCLR" edc:nzwidth="0x1" edc:desc="Receive FIFO Clear"/>
            <edc:SFRFieldDef edc:cname="TXFLCLR" edc:nzwidth="0x1" edc:desc="Transmit FIFO Lock CLEAR"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="REQCLR" edc:nzwidth="0x1" edc:desc="Request to Clear the Comparison Trigger"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="FIFODIS" edc:nzwidth="0x1" edc:desc="FIFO Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_US_MR" edc:nzwidth="0x20" edc:access="nnnn-nnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:impl="0xF7FFFFFF" edc:_addr="0x40018204">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="USART_MODE" edc:nzwidth="0x4" edc:desc="USART Mode of Operation">
              <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Normal mode" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="USCLKS" edc:nzwidth="0x2" edc:desc="Clock Selection">
              <edc:SFRFieldSemantic edc:cname="MCK" edc:desc="Peripheral clock is selected." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DIV" edc:desc="Peripheral clock divided (DIV=8) is selected." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="PCK" edc:desc="PMC programmable clock (PCK) is selected. If the SCK pin is driven (CLKO = 1), the CD field must be greater than 1." edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SCK" edc:desc="Serial clock (SCK) is selected." edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CHRL" edc:nzwidth="0x2" edc:desc="Character Length">
              <edc:SFRFieldSemantic edc:cname="_5_BIT" edc:desc="Character length is 5 bits." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="_6_BIT" edc:desc="Character length is 6 bits." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_7_BIT" edc:desc="Character length is 7 bits." edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BIT" edc:desc="Character length is 8 bits." edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SYNC" edc:nzwidth="0x1" edc:desc="Synchronous Mode Select"/>
            <edc:SFRFieldDef edc:cname="PAR" edc:nzwidth="0x3" edc:desc="Parity Type">
              <edc:SFRFieldSemantic edc:cname="EVEN" edc:desc="Even parity" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ODD" edc:desc="Odd parity" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SPACE" edc:desc="Parity forced to 0 (Space)" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="MARK" edc:desc="Parity forced to 1 (Mark)" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="NO" edc:desc="No parity" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="MULTIDROP" edc:desc="Multidrop mode" edc:when="(field &amp; 0x7) == 0x06"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NBSTOP" edc:nzwidth="0x2" edc:desc="Number of Stop Bits">
              <edc:SFRFieldSemantic edc:cname="_1_BIT" edc:desc="1 stop bit" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="_1_5_BIT" edc:desc="1.5 stop bit (SYNC = 0) or reserved (SYNC = 1)" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_2_BIT" edc:desc="2 stop bits" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CHMODE" edc:nzwidth="0x2" edc:desc="Channel Mode">
              <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Normal mode" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="AUTOMATIC" edc:desc="Automatic Echo. Receiver input is connected to the TXD pin." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="LOCAL_LOOPBACK" edc:desc="Local Loopback. Transmitter output is connected to the Receiver Input." edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="REMOTE_LOOPBACK" edc:desc="Remote Loopback. RXD pin is internally connected to the TXD pin." edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSBF" edc:nzwidth="0x1" edc:desc="Bit Order"/>
            <edc:SFRFieldDef edc:cname="MODE9" edc:nzwidth="0x1" edc:desc="9-bit Character Length"/>
            <edc:SFRFieldDef edc:cname="CLKO" edc:nzwidth="0x1" edc:desc="Clock Output Select"/>
            <edc:SFRFieldDef edc:cname="OVER" edc:nzwidth="0x1" edc:desc="Oversampling Mode"/>
            <edc:SFRFieldDef edc:cname="OOKRXD" edc:nzwidth="0x1" edc:desc="OOK Demodulation Input Selection"/>
            <edc:SFRFieldDef edc:cname="OOKEN" edc:nzwidth="0x1" edc:desc="OOK Modulation/Demodulation Enabled"/>
            <edc:SFRFieldDef edc:cname="VAR_SYNC" edc:nzwidth="0x1" edc:desc="Variable Synchronization of Command/Data Sync Start Frame Delimiter"/>
            <edc:SFRFieldDef edc:cname="INVDATA" edc:nzwidth="0x1" edc:desc="Inverted Data"/>
            <edc:SFRFieldDef edc:cname="MAX_ITERATION" edc:nzwidth="0x3" edc:desc="Maximum Number of Automatic Iteration"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FILTER" edc:nzwidth="0x1" edc:desc="Receive Line Filter"/>
            <edc:SFRFieldDef edc:cname="MAN" edc:nzwidth="0x1" edc:desc="Manchester Encoder/Decoder Enable"/>
            <edc:SFRFieldDef edc:cname="MODSYNC" edc:nzwidth="0x1" edc:desc="Manchester Synchronization Mode"/>
            <edc:SFRFieldDef edc:cname="ONEBIT" edc:nzwidth="0x1" edc:desc="Start Frame Delimiter Selector"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_US_IER" edc:nzwidth="0x20" edc:access="wwwwwwww-w--w---wwwwwwwwwwwwwwww" edc:impl="0xFF48FFFF" edc:_addr="0x40018208">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="RXRDY Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="TXRDY Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Receiver Break Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Transfer Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FRAME" edc:nzwidth="0x1" edc:desc="Framing Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PARE" edc:nzwidth="0x1" edc:desc="Parity Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TIMEOUT" edc:nzwidth="0x1" edc:desc="Timeout Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="TXEMPTY Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ITER" edc:nzwidth="0x1" edc:desc="Max number of Repetitions Reached Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Buffer Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Buffer Full Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINBK" edc:nzwidth="0x1" edc:desc="LIN Break Sent or LIN Break Received Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINID" edc:nzwidth="0x1" edc:desc="LIN Identifier Sent or LIN Identifier Received Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINTC" edc:nzwidth="0x1" edc:desc="LIN Transfer Completed Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear to Send Input Change Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MANE" edc:nzwidth="0x1" edc:desc="Manchester Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINBE" edc:nzwidth="0x1" edc:desc="LIN Bus Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINISFE" edc:nzwidth="0x1" edc:desc="LIN Inconsistent Synch Field Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINIPE" edc:nzwidth="0x1" edc:desc="LIN Identifier Parity Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINCE" edc:nzwidth="0x1" edc:desc="LIN Checksum Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINSNRE" edc:nzwidth="0x1" edc:desc="LIN Client Not Responding Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINSTE" edc:nzwidth="0x1" edc:desc="LIN Synch Tolerance Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINHTE" edc:nzwidth="0x1" edc:desc="LIN Header Timeout Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_US_IDR" edc:nzwidth="0x20" edc:access="wwwwwwww-w--w---wwwwwwwwwwwwwwww" edc:impl="0xFF48FFFF" edc:_addr="0x4001820C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="RXRDY Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="TXRDY Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Receiver Break Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Transfer Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="FRAME" edc:nzwidth="0x1" edc:desc="Framing Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="PARE" edc:nzwidth="0x1" edc:desc="Parity Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TIMEOUT" edc:nzwidth="0x1" edc:desc="Timeout Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="TXEMPTY Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ITER" edc:nzwidth="0x1" edc:desc="Max Number of Repetitions Reached Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Buffer Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Buffer Full Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINBK" edc:nzwidth="0x1" edc:desc="LIN Break Sent or LIN Break Received Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINID" edc:nzwidth="0x1" edc:desc="LIN Identifier Sent or LIN Identifier Received Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINTC" edc:nzwidth="0x1" edc:desc="LIN Transfer Completed Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear to Send Input Change Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MANE" edc:nzwidth="0x1" edc:desc="Manchester Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINBE" edc:nzwidth="0x1" edc:desc="LIN Bus Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINISFE" edc:nzwidth="0x1" edc:desc="LIN Inconsistent Synch Field Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINIPE" edc:nzwidth="0x1" edc:desc="LIN Identifier Parity Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINCE" edc:nzwidth="0x1" edc:desc="LIN Checksum Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINSNRE" edc:nzwidth="0x1" edc:desc="LIN Client Not Responding Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINSTE" edc:nzwidth="0x1" edc:desc="LIN Synch Tolerance Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINHTE" edc:nzwidth="0x1" edc:desc="LIN Header Timeout Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_US_IMR" edc:nzwidth="0x20" edc:access="rrrrrrrr-r--r---rrrrrrrrrrrrrrrr" edc:impl="0xFF48FFFF" edc:_addr="0x40018210">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="RXRDY Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="TXRDY Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Receiver Break Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Transfer Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="FRAME" edc:nzwidth="0x1" edc:desc="Framing Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="PARE" edc:nzwidth="0x1" edc:desc="Parity Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TIMEOUT" edc:nzwidth="0x1" edc:desc="Timeout Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="TXEMPTY Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ITER" edc:nzwidth="0x1" edc:desc="Max Number of Repetitions Reached Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Buffer Empty Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Buffer Full Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINBK" edc:nzwidth="0x1" edc:desc="LIN Break Sent or LIN Break Received Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINID" edc:nzwidth="0x1" edc:desc="LIN Identifier Sent or LIN Identifier Received Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINTC" edc:nzwidth="0x1" edc:desc="LIN Transfer Completed Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear to Send Input Change Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MANE" edc:nzwidth="0x1" edc:desc="Manchester Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINBE" edc:nzwidth="0x1" edc:desc="LIN Bus Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINISFE" edc:nzwidth="0x1" edc:desc="LIN Inconsistent Synch Field Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINIPE" edc:nzwidth="0x1" edc:desc="LIN Identifier Parity Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINCE" edc:nzwidth="0x1" edc:desc="LIN Checksum Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINSNRE" edc:nzwidth="0x1" edc:desc="LIN Client Not Responding Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINSTE" edc:nzwidth="0x1" edc:desc="LIN Synch Tolerance Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINHTE" edc:nzwidth="0x1" edc:desc="LIN Header Timeout Error Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_US_CSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrr--r---rrrrrrrrrrrrrrrr" edc:impl="0xFFC8FFFF" edc:_addr="0x40018214">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="Receiver Ready (cleared by reading FLEX_US_RHR)"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="Transmitter Ready (cleared by writing FLEX_US_THR)"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received/End of Break"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of RX Buffer (cleared by writing FLEX_US_RCR or FLEX_US_RNCR)"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of TX Buffer (cleared by writing FLEX_US_TCR or FLEX_US_TNCR)"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error"/>
            <edc:SFRFieldDef edc:cname="FRAME" edc:nzwidth="0x1" edc:desc="Framing Error"/>
            <edc:SFRFieldDef edc:cname="PARE" edc:nzwidth="0x1" edc:desc="Parity Error"/>
            <edc:SFRFieldDef edc:cname="TIMEOUT" edc:nzwidth="0x1" edc:desc="Receiver Timeout"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="Transmitter Empty (cleared by writing FLEX_US_THR)"/>
            <edc:SFRFieldDef edc:cname="ITER" edc:nzwidth="0x1" edc:desc="Max Number of Repetitions Reached"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="TX Buffer Empty (cleared by writing FLEX_US_TCR or FLEX_US_TNCR)"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="RX Buffer Full (cleared by writing FLEX_US_RCR or FLEX_US_RNCR)"/>
            <edc:SFRFieldDef edc:cname="LINBK" edc:nzwidth="0x1" edc:desc="LIN Break Sent or LIN Break Received"/>
            <edc:SFRFieldDef edc:cname="LINID" edc:nzwidth="0x1" edc:desc="LIN Identifier Sent or LIN Identifier Received"/>
            <edc:SFRFieldDef edc:cname="LINTC" edc:nzwidth="0x1" edc:desc="LIN Transfer Completed"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear to Send Input Change Flag"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Status"/>
            <edc:SFRFieldDef edc:cname="LINBLS" edc:nzwidth="0x1" edc:desc="LIN Bus Line Status"/>
            <edc:SFRFieldDef edc:cname="MANE" edc:nzwidth="0x1" edc:desc="Manchester Error"/>
            <edc:SFRFieldDef edc:cname="LINBE" edc:nzwidth="0x1" edc:desc="LIN Bit Error"/>
            <edc:SFRFieldDef edc:cname="LINISFE" edc:nzwidth="0x1" edc:desc="LIN Inconsistent Synch Field Error"/>
            <edc:SFRFieldDef edc:cname="LINIPE" edc:nzwidth="0x1" edc:desc="LIN Identifier Parity Error"/>
            <edc:SFRFieldDef edc:cname="LINCE" edc:nzwidth="0x1" edc:desc="LIN Checksum Error"/>
            <edc:SFRFieldDef edc:cname="LINSNRE" edc:nzwidth="0x1" edc:desc="LIN Client Not Responding Error"/>
            <edc:SFRFieldDef edc:cname="LINSTE" edc:nzwidth="0x1" edc:desc="LIN Synch Tolerance Error"/>
            <edc:SFRFieldDef edc:cname="LINHTE" edc:nzwidth="0x1" edc:desc="LIN Header Timeout Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_US_RHR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40018218">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="RXCHR0" edc:nzwidth="0x8" edc:desc="Received Characters"/>
            <edc:SFRFieldDef edc:cname="RXCHR1" edc:nzwidth="0x8" edc:desc="Received Characters"/>
            <edc:AdjustPoint edc:offset="-1"/>
            <edc:SFRFieldDef edc:cname="RXSYNH" edc:nzwidth="0x1" edc:desc="Received Sync"/>
            <edc:SFRFieldDef edc:cname="RXCHR2" edc:nzwidth="0x8" edc:desc="Received Characters"/>
            <edc:SFRFieldDef edc:cname="RXCHR3" edc:nzwidth="0x8" edc:desc="Received Characters"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_US_THR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4001821C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="TXCHR0" edc:nzwidth="0x8" edc:desc="Character to be Transmitted"/>
            <edc:SFRFieldDef edc:cname="TXCHR1" edc:nzwidth="0x8" edc:desc="Character to be Transmitted"/>
            <edc:AdjustPoint edc:offset="-1"/>
            <edc:SFRFieldDef edc:cname="TXSYNH" edc:nzwidth="0x1" edc:desc="Sync Field to be Transmitted"/>
            <edc:SFRFieldDef edc:cname="TXCHR2" edc:nzwidth="0x8" edc:desc="Character to be Transmitted"/>
            <edc:SFRFieldDef edc:cname="TXCHR3" edc:nzwidth="0x8" edc:desc="Character to be Transmitted"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_US_BRGR" edc:nzwidth="0x20" edc:access="-------------nnnnnnnnnnnnnnnnnnn" edc:impl="0x7FFFF" edc:_addr="0x40018220">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="CD" edc:nzwidth="0x10" edc:desc="Clock Divider"/>
            <edc:SFRFieldDef edc:cname="FP" edc:nzwidth="0x3" edc:desc="Fractional Part"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_US_RTOR" edc:nzwidth="0x20" edc:access="---------------nnnnnnnnnnnnnnnnn" edc:impl="0x1FFFF" edc:_addr="0x40018224">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="TO" edc:nzwidth="0x11" edc:desc="Timeout Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_US_TTGR" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:impl="0xFF" edc:_addr="0x40018228">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="TG" edc:nzwidth="0x8" edc:desc="Timeguard Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x14" edc:_addr="0x4001822C"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_US_FIDI" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x40018240">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="FI_DI_RATIO" edc:nzwidth="0x10" edc:desc="FI Over DI Ratio Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_US_NER" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:impl="0xFF" edc:_addr="0x40018244">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="NB_ERRORS" edc:nzwidth="0x8" edc:desc="Number of Errors"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x40018248"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_US_IF" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:impl="0xFF" edc:_addr="0x4001824C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="IRDA_FILTER" edc:nzwidth="0x8" edc:desc="IrDA Filter"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_US_MAN" edc:nzwidth="0x20" edc:access="nnnn--nn----nnnn---n--nn----nnnn" edc:impl="0xF30F130F" edc:_addr="0x40018250">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="TX_PL" edc:nzwidth="0x4" edc:desc="Transmitter Preamble Length"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TX_PP" edc:nzwidth="0x2" edc:desc="Transmitter Preamble Pattern">
              <edc:SFRFieldSemantic edc:cname="ALL_ONE" edc:desc="The preamble is composed of '1's" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ALL_ZERO" edc:desc="The preamble is composed of '0's" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ZERO_ONE" edc:desc="The preamble is composed of '01's" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="ONE_ZERO" edc:desc="The preamble is composed of '10's" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TX_MPOL" edc:nzwidth="0x1" edc:desc="Transmitter Manchester Polarity"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RX_PL" edc:nzwidth="0x4" edc:desc="Receiver Preamble Length"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="RX_PP" edc:nzwidth="0x2" edc:desc="Receiver Preamble Pattern detected">
              <edc:SFRFieldSemantic edc:cname="ALL_ONE" edc:desc="The preamble is composed of '1's" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ALL_ZERO" edc:desc="The preamble is composed of '0's" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ZERO_ONE" edc:desc="The preamble is composed of '01's" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="ONE_ZERO" edc:desc="The preamble is composed of '10's" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RX_MPOL" edc:nzwidth="0x1" edc:desc="Receiver Manchester Polarity"/>
            <edc:SFRFieldDef edc:cname="ONE" edc:nzwidth="0x1" edc:desc="Must Be Set to 1"/>
            <edc:SFRFieldDef edc:cname="DRIFT" edc:nzwidth="0x1" edc:desc="Drift Compensation"/>
            <edc:SFRFieldDef edc:cname="RXIDLEV" edc:nzwidth="0x1" edc:desc="Receiver Idle Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_US_LINMR" edc:nzwidth="0x20" edc:access="--------------nnnnnnnnnnnnnnnnnn" edc:impl="0x3FFFF" edc:_addr="0x40018254">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="NACT" edc:nzwidth="0x2" edc:desc="LIN Node Action">
              <edc:SFRFieldSemantic edc:cname="PUBLISH" edc:desc="The USART transmits the response." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SUBSCRIBE" edc:desc="The USART receives the response." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="IGNORE" edc:desc="The USART does not transmit and does not receive the response." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PARDIS" edc:nzwidth="0x1" edc:desc="Parity Disable"/>
            <edc:SFRFieldDef edc:cname="CHKDIS" edc:nzwidth="0x1" edc:desc="Checksum Disable"/>
            <edc:SFRFieldDef edc:cname="CHKTYP" edc:nzwidth="0x1" edc:desc="Checksum Type"/>
            <edc:SFRFieldDef edc:cname="DLM" edc:nzwidth="0x1" edc:desc="Data Length Mode"/>
            <edc:SFRFieldDef edc:cname="FSDIS" edc:nzwidth="0x1" edc:desc="Frame Slot Mode Disable"/>
            <edc:SFRFieldDef edc:cname="WKUPTYP" edc:nzwidth="0x1" edc:desc="Wakeup Signal Type"/>
            <edc:SFRFieldDef edc:cname="DLC" edc:nzwidth="0x8" edc:desc="Data Length Control"/>
            <edc:SFRFieldDef edc:cname="PDCM" edc:nzwidth="0x1" edc:desc="PDC Mode"/>
            <edc:SFRFieldDef edc:cname="SYNCDIS" edc:nzwidth="0x1" edc:desc="Synchronization Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_US_LINIR" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:impl="0xFF" edc:_addr="0x40018258">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="IDCHR" edc:nzwidth="0x8" edc:desc="Identifier Character"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_US_LINBRR" edc:nzwidth="0x20" edc:access="-------------rrrrrrrrrrrrrrrrrrr" edc:impl="0x7FFFF" edc:_addr="0x4001825C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="LINCD" edc:nzwidth="0x10" edc:desc="Clock Divider after Synchronization"/>
            <edc:SFRFieldDef edc:cname="LINFP" edc:nzwidth="0x3" edc:desc="Fractional Part after Synchronization"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x30" edc:_addr="0x40018260"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_US_CMPR" edc:nzwidth="0x20" edc:access="-------nnnnnnnnn-nnn---nnnnnnnnn" edc:impl="0x1FF71FF" edc:_addr="0x40018290">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="VAL1" edc:nzwidth="0x9" edc:desc="First Comparison Value for Received Character"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CMPMODE" edc:nzwidth="0x2" edc:desc="Comparison Mode">
              <edc:SFRFieldSemantic edc:cname="FLAG_ONLY" edc:desc="Any character is received and comparison function drives CMP flag." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="START_CONDITION" edc:desc="Comparison condition must be met to start reception." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FILTER" edc:desc="Comparison must be met to receive the current data only" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMPPAR" edc:nzwidth="0x1" edc:desc="Compare Parity"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="VAL2" edc:nzwidth="0x9" edc:desc="Second Comparison Value for Received Character"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x40018294"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_US_FMR" edc:nzwidth="0x20" edc:access="--nnnnnn--nnnnnn--nnnnnnn-nn--nn" edc:impl="0x3F3F3FB3" edc:_addr="0x400182A0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="TXRDYM" edc:nzwidth="0x2" edc:desc="Transmitter Ready Mode">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="TXRDY will be at level '1' when at least one data can be written in the transmit FIFO. When DMA is enabled to transfer data and FLEX_US_MR.MODE9=0 (up to 8 bits to transfer on the line), the chunk of 1 byte must be configured in the DMA. If the transfer is performed by software, the access type must be defined as a byte." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="TXRDY will be at level '1' when at least two data can be written in the transmit FIFO. To minimize system bus load, when DMA is enabled to transfer data and FLEX_US_MR.MODE9=0 (up to 8 bits to transfer on the line), the chunk of 1 halfword (1 halfword carries 2 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 2 accesses) or halfword (2 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="TXRDY will be at level '1' when at least four data can be written in the transmit FIFO. To minimize system bus load, when DMA is enabled to transfer data and FLEX_US_MR.MODE9=0 (up to 8 bits to transfer on the line), the chunk of 1 word (1 word carries 4 bytes) must be configured in the DMA (chunk size=1 and word access). If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 4 accesses), halfword (2 bytes per access, 2 accesses) or word (4 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXRDYM" edc:nzwidth="0x2" edc:desc="Receiver Ready Mode">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="RXRDY will be at level '1' when at least one unread data is in the receive FIFO. When DMA is enabled to transfer data and FLEX_US_MR.MODE9=0 (up to 8 bits to transfer on the line), the chunk of 1 byte must be configured in the DMA. If the transfer is performed by software, the access type must be defined as a byte." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="RXRDY will be at level '1' when at least two unread data are in the receive FIFO. To minimize system bus load, when DMA is enabled to transfer data and FLEX_US_MR.MODE9=0 (up to 8 bits to transfer on the line), the chunk of 1 halfword (1 halfword carries 2 bytes) must be configured in the DMA (chunk size=1 and halfword access). If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 2 accesses) or halfword (2 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="RXRDY will be at level '1' when at least four unread data are in the receive FIFO. To minimize system bus load, when DMA is enabled to transfer data and FLEX_US_MR.MODE9=0 (up to 8 bits to transfer on the line), the chunk of 1 word (1 word carries 4 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 4 accesses), halfword (2 bytes per access, 2 accesses) or word (4 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FRTSC" edc:nzwidth="0x1" edc:desc="FIFO RTS Pin Control enable (Hardware Handshaking mode only)"/>
            <edc:SFRFieldDef edc:cname="TXFTHRES" edc:nzwidth="0x6" edc:desc="Transmit FIFO Threshold"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXFTHRES" edc:nzwidth="0x6" edc:desc="Receive FIFO Threshold"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXFTHRES2" edc:nzwidth="0x6" edc:desc="Receive FIFO Threshold 2"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_US_FLR" edc:nzwidth="0x20" edc:access="----------rrrrrr----------rrrrrr" edc:impl="0x3F003F" edc:_addr="0x400182A4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="TXFL" edc:nzwidth="0x6" edc:desc="Transmit FIFO Level"/>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="RXFL" edc:nzwidth="0x6" edc:desc="Receive FIFO Level"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_US_FIER" edc:nzwidth="0x20" edc:access="----------------------w-wwwwwwww" edc:impl="0x2FF" edc:_addr="0x400182A8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF2" edc:nzwidth="0x1" edc:desc="RXFTHF2 Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_US_FIDR" edc:nzwidth="0x20" edc:access="----------------------w-wwwwwwww" edc:impl="0x2FF" edc:_addr="0x400182AC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF2" edc:nzwidth="0x1" edc:desc="RXFTHF2 Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_US_FIMR" edc:nzwidth="0x20" edc:access="----------------------r-rrrrrrrr" edc:impl="0x2FF" edc:_addr="0x400182B0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF2" edc:nzwidth="0x1" edc:desc="RXFTHF2 Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_US_FESR" edc:nzwidth="0x20" edc:access="----------------------rrrrrrrrrr" edc:impl="0x3FF" edc:_addr="0x400182B4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Empty Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Full Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Threshold Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="Receive FIFO Empty Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="Receive FIFO Full Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="Receive FIFO Threshold Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Pointer Error Flag"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="Receive FIFO Pointer Error Flag"/>
            <edc:SFRFieldDef edc:cname="TXFLOCK" edc:nzwidth="0x1" edc:desc="Transmit FIFO Lock"/>
            <edc:SFRFieldDef edc:cname="RXFTHF2" edc:nzwidth="0x1" edc:desc="Receive FIFO Threshold Flag 2 (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2C" edc:_addr="0x400182B8"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_US_WPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:impl="0xFFFFFF07" edc:_addr="0x400182E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="WPEN" edc:nzwidth="0x1" edc:desc="Write Protection Enable"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:nzwidth="0x1" edc:desc="Write Protection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:nzwidth="0x1" edc:desc="Write Protection Control Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of bits WPEN, WPITEN and WPCREN. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x555341"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_US_WPSR" edc:nzwidth="0x20" edc:access="--------rrrrrrrrrrrrrrrr-------r" edc:impl="0xFFFF01" edc:_addr="0x400182E8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="WPVS" edc:nzwidth="0x1" edc:desc="Write Protection Violation Status"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:nzwidth="0x10" edc:desc="Write Protection Violation Source"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x114" edc:_addr="0x400182EC"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_SPI_CR" edc:nzwidth="0x20" edc:access="ww-----w------ww---w----w-----ww" edc:impl="0xC1031083" edc:_addr="0x40018400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="SPIEN" edc:nzwidth="0x1" edc:desc="SPI Enable"/>
            <edc:SFRFieldDef edc:cname="SPIDIS" edc:nzwidth="0x1" edc:desc="SPI Disable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="SPI Software Reset"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="REQCLR" edc:nzwidth="0x1" edc:desc="Request to Clear the Comparison Trigger"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="TXFCLR" edc:nzwidth="0x1" edc:desc="Transmit FIFO Clear"/>
            <edc:SFRFieldDef edc:cname="RXFCLR" edc:nzwidth="0x1" edc:desc="Receive FIFO Clear"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="LASTXFER" edc:nzwidth="0x1" edc:desc="Last Transfer"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="FIFODIS" edc:nzwidth="0x1" edc:desc="FIFO Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_SPI_MR" edc:nzwidth="0x20" edc:access="nnnnnnnn------nn---n----n-nnnnnn" edc:impl="0xFF0310BF" edc:_addr="0x40018404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="MSTR" edc:nzwidth="0x1" edc:desc="Host/Client Mode"/>
            <edc:SFRFieldDef edc:cname="PS" edc:nzwidth="0x1" edc:desc="Peripheral Select"/>
            <edc:SFRFieldDef edc:cname="PCSDEC" edc:nzwidth="0x1" edc:desc="Chip Select Decode"/>
            <edc:SFRFieldDef edc:cname="BRSRCCLK" edc:nzwidth="0x1" edc:desc="Bit Rate Source Clock">
              <edc:SFRFieldSemantic edc:cname="PERIPH_CLK" edc:desc="The peripheral clock is the source clock for the bit rate generation." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="GCLK is the source clock for the bit rate generation, thus the bit rate can be independent of the core/peripheral clock." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MODFDIS" edc:nzwidth="0x1" edc:desc="Mode Fault Detection"/>
            <edc:SFRFieldDef edc:cname="WDRBT" edc:nzwidth="0x1" edc:desc="Wait Data Read Before Transfer"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LLB" edc:nzwidth="0x1" edc:desc="Local Loopback Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CMPMODE" edc:nzwidth="0x1" edc:desc="Comparison Mode">
              <edc:SFRFieldSemantic edc:cname="FLAG_ONLY" edc:desc="Any character is received and comparison function drives CMP flag." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="START_CONDITION" edc:desc="Comparison condition must be met to start reception of all incoming characters until REQCLR is set." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PCS" edc:nzwidth="0x2" edc:desc="Peripheral Chip Select"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="DLYBCS" edc:nzwidth="0x8" edc:desc="Delay Between Chip Selects"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_SPI_RDR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40018408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="RD0" edc:nzwidth="0x10" edc:desc="Receive Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="RD1" edc:nzwidth="0x8" edc:desc="Receive Data"/>
            <edc:SFRFieldDef edc:cname="RD1" edc:nzwidth="0x10" edc:desc="Receive Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="RD3" edc:nzwidth="0x8" edc:desc="Receive Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_SPI_TDR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4001840C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="TD0" edc:nzwidth="0x10" edc:desc="Transmit Data"/>
            <edc:SFRFieldDef edc:cname="TD1" edc:nzwidth="0x10" edc:desc="Transmit Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="LASTXFER" edc:nzwidth="0x1" edc:desc="Last Transfer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_SPI_SR" edc:nzwidth="0x20" edc:access="rrrrrrrr-------r---rrrrrrrrrrrrr" edc:impl="0xFF011FFF" edc:_addr="0x40018410">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="RDRF" edc:nzwidth="0x1" edc:desc="Receive Data Register Full (cleared by reading FLEX_SPI_RDR)"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:nzwidth="0x1" edc:desc="Transmit Data Register Empty (cleared by writing FLEX_SPI_TDR)"/>
            <edc:SFRFieldDef edc:cname="MODF" edc:nzwidth="0x1" edc:desc="Mode Fault Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:nzwidth="0x1" edc:desc="Overrun Error Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of RX Buffer (cleared by writing FLEX_SPI_RCR or FLEX_SPI_RNCR)"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of TX Buffer (cleared by writing FLEX_SPI_TCR or FLEX_SPI_TNCR)"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="RX Buffer Full (cleared by writing FLEX_SPI_RCR or FLEX_SPI_RNCR)"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="TX Buffer Empty (cleared by writing FLEX_SPI_TCR or FLEX_SPI_TNCR)"/>
            <edc:SFRFieldDef edc:cname="NSSR" edc:nzwidth="0x1" edc:desc="NSS Rising (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="Transmission Registers Empty (cleared by writing FLEX_SPI_TDR)"/>
            <edc:SFRFieldDef edc:cname="UNDES" edc:nzwidth="0x1" edc:desc="Underrun Error Status (Client mode only) (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SFERR" edc:nzwidth="0x1" edc:desc="Client Mode Frame Error (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SPIENS" edc:nzwidth="0x1" edc:desc="SPI Enable Status"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Empty Flag (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Full Flag (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Threshold Flag (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="Receive FIFO Empty Flag"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="Receive FIFO Full Flag"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="Receive FIFO Threshold Flag"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Pointer Error Flag"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="Receive FIFO Pointer Error Flag"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_SPI_IER" edc:nzwidth="0x20" edc:access="wwwwwwww-----------wwwwwwwwwwwww" edc:impl="0xFF001FFF" edc:_addr="0x40018414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="RDRF" edc:nzwidth="0x1" edc:desc="Receive Data Register Full Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:nzwidth="0x1" edc:desc="SPI Transmit Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MODF" edc:nzwidth="0x1" edc:desc="Mode Fault Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="NSSR" edc:nzwidth="0x1" edc:desc="NSS Rising Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="Transmission Registers Empty Enable"/>
            <edc:SFRFieldDef edc:cname="UNDES" edc:nzwidth="0x1" edc:desc="Underrun Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SFERR" edc:nzwidth="0x1" edc:desc="Client Mode Frame Error Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0xB"/>
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_SPI_IDR" edc:nzwidth="0x20" edc:access="wwwwwwww-----------wwwwwwwwwwwww" edc:impl="0xFF001FFF" edc:_addr="0x40018418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="RDRF" edc:nzwidth="0x1" edc:desc="Receive Data Register Full Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:nzwidth="0x1" edc:desc="SPI Transmit Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="MODF" edc:nzwidth="0x1" edc:desc="Mode Fault Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="NSSR" edc:nzwidth="0x1" edc:desc="NSS Rising Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="Transmission Registers Empty Disable"/>
            <edc:SFRFieldDef edc:cname="UNDES" edc:nzwidth="0x1" edc:desc="Underrun Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SFERR" edc:nzwidth="0x1" edc:desc="Client Mode Frame Error Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0xB"/>
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_SPI_IMR" edc:nzwidth="0x20" edc:access="rrrrrrrr-----------rrrrrrrrrrrrr" edc:impl="0xFF001FFF" edc:_addr="0x4001841C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="RDRF" edc:nzwidth="0x1" edc:desc="Receive Data Register Full Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:nzwidth="0x1" edc:desc="SPI Transmit Data Register Empty Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="MODF" edc:nzwidth="0x1" edc:desc="Mode Fault Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="NSSR" edc:nzwidth="0x1" edc:desc="NSS Rising Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="Transmission Registers Empty Mask"/>
            <edc:SFRFieldDef edc:cname="UNDES" edc:nzwidth="0x1" edc:desc="Underrun Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="SFERR" edc:nzwidth="0x1" edc:desc="Client Mode Frame Error Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0xB"/>
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x10" edc:_addr="0x40018420"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_SPI_CSR0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40018430">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity"/>
            <edc:SFRFieldDef edc:cname="NCPHA" edc:nzwidth="0x1" edc:desc="Clock Phase"/>
            <edc:SFRFieldDef edc:cname="CSNAAT" edc:nzwidth="0x1" edc:desc="Chip Select Not Active After Transfer (Ignored if CSAAT = 1)"/>
            <edc:SFRFieldDef edc:cname="CSAAT" edc:nzwidth="0x1" edc:desc="Chip Select Active After Transfer"/>
            <edc:SFRFieldDef edc:cname="BITS" edc:nzwidth="0x4" edc:desc="Bits Per Transfer">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits for transfer" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits for transfer" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="10_BIT" edc:desc="10 bits for transfer" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="11_BIT" edc:desc="11 bits for transfer" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="12_BIT" edc:desc="12 bits for transfer" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="13 bits for transfer" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="14_BIT" edc:desc="14 bits for transfer" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="15_BIT" edc:desc="15 bits for transfer" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="16_BIT" edc:desc="16 bits for transfer" edc:when="(field &amp; 0xF) == 0x08"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCBR" edc:nzwidth="0x8" edc:desc="Serial Clock Bit Rate"/>
            <edc:SFRFieldDef edc:cname="DLYBS" edc:nzwidth="0x8" edc:desc="Delay Before SPCK"/>
            <edc:SFRFieldDef edc:cname="DLYBCT" edc:nzwidth="0x8" edc:desc="Delay Between Consecutive Transfers"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_SPI_CSR1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40018434">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity"/>
            <edc:SFRFieldDef edc:cname="NCPHA" edc:nzwidth="0x1" edc:desc="Clock Phase"/>
            <edc:SFRFieldDef edc:cname="CSNAAT" edc:nzwidth="0x1" edc:desc="Chip Select Not Active After Transfer (Ignored if CSAAT = 1)"/>
            <edc:SFRFieldDef edc:cname="CSAAT" edc:nzwidth="0x1" edc:desc="Chip Select Active After Transfer"/>
            <edc:SFRFieldDef edc:cname="BITS" edc:nzwidth="0x4" edc:desc="Bits Per Transfer">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits for transfer" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits for transfer" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="10_BIT" edc:desc="10 bits for transfer" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="11_BIT" edc:desc="11 bits for transfer" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="12_BIT" edc:desc="12 bits for transfer" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="13 bits for transfer" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="14_BIT" edc:desc="14 bits for transfer" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="15_BIT" edc:desc="15 bits for transfer" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="16_BIT" edc:desc="16 bits for transfer" edc:when="(field &amp; 0xF) == 0x08"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCBR" edc:nzwidth="0x8" edc:desc="Serial Clock Bit Rate"/>
            <edc:SFRFieldDef edc:cname="DLYBS" edc:nzwidth="0x8" edc:desc="Delay Before SPCK"/>
            <edc:SFRFieldDef edc:cname="DLYBCT" edc:nzwidth="0x8" edc:desc="Delay Between Consecutive Transfers"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x40018438"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_SPI_FMR" edc:nzwidth="0x20" edc:access="--nnnnnn--nnnnnn----------nn--nn" edc:impl="0x3F3F0033" edc:_addr="0x40018440">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="TXRDYM" edc:nzwidth="0x2" edc:desc="Transmit Data Register Empty Mode">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="TDRE will be at level '1' when at least one data can be written in the transmit FIFO. When DMA is enabled to transfer data, the chunk of 1 data (byte or halfword) must be configured in the DMA depending on FLEX_SPI_CSR0.BITS. If the transfer is performed by software, the access type (byte, halfword) must be defined depending on FLEX_SPI_CSR0.BITS." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="TDRE will be at level '1' when at least two data can be written in the transmit FIFO. FIFO. To minimize system bus load, when DMA is enabled to transfer data, the chunk of 1 word (1 word carries 2 data) must be configured in the DMA. If the transfer is performed by software, the access type must be defined as word (2 data per access, 1 access)." edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXRDYM" edc:nzwidth="0x2" edc:desc="Receive Data Register Full Mode">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="RDRF will be at level '1' when at least one unread data is in the receive FIFO. When DMA is enabled to transfer data and FLEX_SPI_CSR0.BITS=0 (8 bits transfered on SPI line), the chunk of 1 byte must be configured in the DMA. When FLEX_SPI_CSR0.BITS&gt;0 (9 to 16 bits transfered on SPI line), the chunk of 1 halfword must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte or halfword depending on FLEX_SPI_CSR0.BITS." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="RDRF will be at level '1' when at least two unread data are in the receive FIFO. To minimize system bus load, when DMA is enabled to transfer data and FLEX_SPI_CSR0.BITS=0 (8 bits transfered on SPI line), the chunk of 1 halfword (1 halfword carries 2 bytes) must be configured in the DMA. When FLEX_SPI_CSR0.BITS&gt;0 (9 to 16 bits transfered on SPI line), the chunk of 1 word (1 word carries 2 halfwords) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as halfword (2 bytes per access, 1 access when FLEX_SPI_CSR0.BITS=0), or word (2 halfwords per access, 2 accesses when FLEX_SPI_CSR0.BITS&gt;0)." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="RDRF will be at level '1' when at least four unread data are in the receive FIFO. To minimize system bus load, when DMA is enabled to transfer data and FLEX_SPI_CSR0.BITS=0 (8 bits transfered on SPI line), the chunk of 1 word (1 halfword carries 4 bytes) must be configured in the DMA. When FLEX_SPI_CSR0.BITS&gt;0 (9 to 16 bits transfered on SPI line), the chunk of 2 words (1 word carries 4 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as word (4 bytes per access, 1 access when FLEX_SPI_CSR0.BITS=0 or 2 halfwords per access, 2 accesses when FLEX_SPI_CSR0.BITS&gt;0)." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="TXFTHRES" edc:nzwidth="0x6" edc:desc="Transmit FIFO Threshold"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXFTHRES" edc:nzwidth="0x6" edc:desc="Receive FIFO Threshold"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_SPI_FLR" edc:nzwidth="0x20" edc:access="----------rrrrrr----------rrrrrr" edc:impl="0x3F003F" edc:_addr="0x40018444">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="TXFL" edc:nzwidth="0x6" edc:desc="Transmit FIFO Level"/>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="RXFL" edc:nzwidth="0x6" edc:desc="Receive FIFO Level"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_SPI_CMPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40018448">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="VAL1" edc:nzwidth="0x10" edc:desc="First Comparison Value for Received Character"/>
            <edc:SFRFieldDef edc:cname="VAL2" edc:nzwidth="0x10" edc:desc="Second Comparison Value for Received Character"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x98" edc:_addr="0x4001844C"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_SPI_WPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:impl="0xFFFFFF07" edc:_addr="0x400184E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="WPEN" edc:nzwidth="0x1" edc:desc="Write Protection Enable"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:nzwidth="0x1" edc:desc="Write Protection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:nzwidth="0x1" edc:desc="Write Protection Control Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of bits WPEN, WPITEN and WPCREN. Always reads as 0" edc:when="(field &amp; 0xFFFFFF) == 0x535049"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_SPI_WPSR" edc:nzwidth="0x20" edc:access="----------------rrrrrrrr-------r" edc:impl="0xFF01" edc:_addr="0x400184E8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="WPVS" edc:nzwidth="0x1" edc:desc="Write Protection Violation Status"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:nzwidth="0x8" edc:desc="Write Protection Violation Source"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x114" edc:_addr="0x400184EC"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_TWI_CR" edc:nzwidth="0x20" edc:access="--ww-www------wwwwwwwwwwwwwwwwww" edc:impl="0x3703FFFF" edc:_addr="0x40018600">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="START" edc:nzwidth="0x1" edc:desc="Send a START Condition"/>
            <edc:SFRFieldDef edc:cname="STOP" edc:nzwidth="0x1" edc:desc="Send a STOP Condition"/>
            <edc:SFRFieldDef edc:cname="MSEN" edc:nzwidth="0x1" edc:desc="TWI Host Mode Enabled"/>
            <edc:SFRFieldDef edc:cname="MSDIS" edc:nzwidth="0x1" edc:desc="TWI Host Mode Disabled"/>
            <edc:SFRFieldDef edc:cname="SVEN" edc:nzwidth="0x1" edc:desc="TWI Client Mode Enabled"/>
            <edc:SFRFieldDef edc:cname="SVDIS" edc:nzwidth="0x1" edc:desc="TWI Client Mode Disabled"/>
            <edc:SFRFieldDef edc:cname="QUICK" edc:nzwidth="0x1" edc:desc="SMBus Quick Command"/>
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="HSEN" edc:nzwidth="0x1" edc:desc="TWI High-Speed Mode Enabled"/>
            <edc:SFRFieldDef edc:cname="HSDIS" edc:nzwidth="0x1" edc:desc="TWI High-Speed Mode Disabled"/>
            <edc:SFRFieldDef edc:cname="SMBEN" edc:nzwidth="0x1" edc:desc="SMBus Mode Enabled"/>
            <edc:SFRFieldDef edc:cname="SMBDIS" edc:nzwidth="0x1" edc:desc="SMBus Mode Disabled"/>
            <edc:SFRFieldDef edc:cname="PECEN" edc:nzwidth="0x1" edc:desc="Packet Error Checking Enable"/>
            <edc:SFRFieldDef edc:cname="PECDIS" edc:nzwidth="0x1" edc:desc="Packet Error Checking Disable"/>
            <edc:SFRFieldDef edc:cname="PECRQ" edc:nzwidth="0x1" edc:desc="PEC Request"/>
            <edc:SFRFieldDef edc:cname="CLEAR" edc:nzwidth="0x1" edc:desc="Bus CLEAR Command"/>
            <edc:SFRFieldDef edc:cname="ACMEN" edc:nzwidth="0x1" edc:desc="Alternative Command Mode Enable"/>
            <edc:SFRFieldDef edc:cname="ACMDIS" edc:nzwidth="0x1" edc:desc="Alternative Command Mode Disable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="TXFCLR" edc:nzwidth="0x1" edc:desc="Transmit FIFO Clear"/>
            <edc:SFRFieldDef edc:cname="RXFCLR" edc:nzwidth="0x1" edc:desc="Receive FIFO Clear"/>
            <edc:SFRFieldDef edc:cname="TXFLCLR" edc:nzwidth="0x1" edc:desc="Transmit FIFO Lock CLEAR"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="FIFODIS" edc:nzwidth="0x1" edc:desc="FIFO Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_TWI_MMR" edc:nzwidth="0x20" edc:access="-------n-nnnnnnn-nnn--nn--------" edc:impl="0x17F7300" edc:_addr="0x40018604">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="IADRSZ" edc:nzwidth="0x2" edc:desc="Internal Device Address Size">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No internal device address" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="1_BYTE" edc:desc="One-byte internal device address" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="2_BYTE" edc:desc="Two-byte internal device address" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="3_BYTE" edc:desc="Three-byte internal device address" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MREAD" edc:nzwidth="0x1" edc:desc="Host Read Direction"/>
            <edc:SFRFieldDef edc:cname="SCLRBL" edc:nzwidth="0x2" edc:desc="SCL Rise Boost Level"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DADR" edc:nzwidth="0x7" edc:desc="Device Address"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NOAP" edc:nzwidth="0x1" edc:desc="No Auto-Stop On NACK Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_TWI_SMR" edc:nzwidth="0x20" edc:access="nnnn-----nnnnnnn-nnnnnnnnnnnnn-n" edc:impl="0xF07F7FFD" edc:_addr="0x40018608">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="NACKEN" edc:nzwidth="0x1" edc:desc="Client Receiver Data Phase NACK Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SMDA" edc:nzwidth="0x1" edc:desc="SMBus Default Address"/>
            <edc:SFRFieldDef edc:cname="SMHH" edc:nzwidth="0x1" edc:desc="SMBus Host Header"/>
            <edc:SFRFieldDef edc:cname="SADAT" edc:nzwidth="0x1" edc:desc="Client Address Treated as Data"/>
            <edc:SFRFieldDef edc:cname="BSEL" edc:nzwidth="0x1" edc:desc="TWI Bus Selection"/>
            <edc:SFRFieldDef edc:cname="SCLWSDIS" edc:nzwidth="0x1" edc:desc="Clock Wait State Disable"/>
            <edc:SFRFieldDef edc:cname="SNIFF" edc:nzwidth="0x1" edc:desc="Client Sniffer Mode"/>
            <edc:SFRFieldDef edc:cname="MASK" edc:nzwidth="0x7" edc:desc="Client Address Mask"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SADR" edc:nzwidth="0x7" edc:desc="Client Address"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="SADR1EN" edc:nzwidth="0x1" edc:desc="Client Address 1 Enable"/>
            <edc:SFRFieldDef edc:cname="SADR2EN" edc:nzwidth="0x1" edc:desc="Client Address 2 Enable"/>
            <edc:SFRFieldDef edc:cname="SADR3EN" edc:nzwidth="0x1" edc:desc="Client Address 3 Enable"/>
            <edc:SFRFieldDef edc:cname="DATAMEN" edc:nzwidth="0x1" edc:desc="Data Matching Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_TWI_IADR" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:impl="0xFFFFFF" edc:_addr="0x4001860C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="IADR" edc:nzwidth="0x18" edc:desc="Internal Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_TWI_CWGR" edc:nzwidth="0x20" edc:access="--nnnnnn---n-nnnnnnnnnnnnnnnnnnn" edc:impl="0x3F17FFFF" edc:_addr="0x40018610">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="CLDIV" edc:nzwidth="0x8" edc:desc="Clock Low Divider"/>
            <edc:SFRFieldDef edc:cname="CHDIV" edc:nzwidth="0x8" edc:desc="Clock High Divider"/>
            <edc:SFRFieldDef edc:cname="CKDIV" edc:nzwidth="0x3" edc:desc="Clock Divider"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BRSRCCLK" edc:nzwidth="0x1" edc:desc="Bit Rate Source Clock">
              <edc:SFRFieldSemantic edc:cname="PERIPH_CLK" edc:desc="The peripheral clock is the source clock for the bit rate generation." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="GCLK is the source clock for the bit rate generation, thus the bit rate can be independent of the core/peripheral clock." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="HOLD" edc:nzwidth="0x6" edc:desc="TWD Hold Time Versus TWCK Falling"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x40018614"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_TWI_SR" edc:nzwidth="0x20" edc:access="-----rrrr-rrrrrrrrrrrrrrrrrrrrrr" edc:impl="0x7BFFFFF" edc:_addr="0x40018620">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="TXCOMP" edc:nzwidth="0x1" edc:desc="Transmission Completed (cleared by writing FLEX_TWI_THR)"/>
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="Receive Holding Register Ready (cleared when reading FLEX_TWI_RHR)"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="Transmit Holding Register Ready (cleared by writing FLEX_TWI_THR)"/>
            <edc:SFRFieldDef edc:cname="SVREAD" edc:nzwidth="0x1" edc:desc="Client Read"/>
            <edc:SFRFieldDef edc:cname="SVACC" edc:nzwidth="0x1" edc:desc="Client Access"/>
            <edc:SFRFieldDef edc:cname="GACC" edc:nzwidth="0x1" edc:desc="General Call Access (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:nzwidth="0x1" edc:desc="Underrun Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="NACK" edc:nzwidth="0x1" edc:desc="Not Acknowledged (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="ARBLST" edc:nzwidth="0x1" edc:desc="Arbitration Lost (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SCLWS" edc:nzwidth="0x1" edc:desc="Clock Wait State"/>
            <edc:SFRFieldDef edc:cname="EOSACC" edc:nzwidth="0x1" edc:desc="End Of Client Access (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of RX Buffer (cleared by writing FLEX_TWI_RCR or FLEX_TWI_RNCR)"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of TX Buffer (cleared by writing FLEX_TWI_TCR or FLEX_TWI_TNCR)"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="RX Buffer Full (cleared by writing FLEX_TWI_RCR or FLEX_TWI_RNCR)"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="TX Buffer Empty (cleared by writing FLEX_TWI_TCR or FLEX_TWI_TNCR)"/>
            <edc:SFRFieldDef edc:cname="MCACK" edc:nzwidth="0x1" edc:desc="Host Code Acknowledge (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SMBAF" edc:nzwidth="0x1" edc:desc="SMBus Alert Flag"/>
            <edc:SFRFieldDef edc:cname="TOUT" edc:nzwidth="0x1" edc:desc="Timeout Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="PECERR" edc:nzwidth="0x1" edc:desc="PEC Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SMBDAM" edc:nzwidth="0x1" edc:desc="SMBus Default Address Match (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SMBHHM" edc:nzwidth="0x1" edc:desc="SMBus Host Header Address Match (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFLOCK" edc:nzwidth="0x1" edc:desc="Transmit FIFO Lock"/>
            <edc:SFRFieldDef edc:cname="SCL" edc:nzwidth="0x1" edc:desc="SCL Line Value"/>
            <edc:SFRFieldDef edc:cname="SDA" edc:nzwidth="0x1" edc:desc="SDA Line Value"/>
            <edc:SFRFieldDef edc:cname="SR" edc:nzwidth="0x1" edc:desc="Start Repeated"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_TWI_IER" edc:nzwidth="0x20" edc:access="----------wwww-wwwwwwwwwwwww-www" edc:impl="0x3DFFF7" edc:_addr="0x40018624">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="TXCOMP" edc:nzwidth="0x1" edc:desc="Transmission Completed Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="Receive Holding Register Ready Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="Transmit Holding Register Ready Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SVACC" edc:nzwidth="0x1" edc:desc="Client Access Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="GACC" edc:nzwidth="0x1" edc:desc="General Call Access Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:nzwidth="0x1" edc:desc="Underrun Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="NACK" edc:nzwidth="0x1" edc:desc="Not Acknowledge Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ARBLST" edc:nzwidth="0x1" edc:desc="Arbitration Lost Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SCL_WS" edc:nzwidth="0x1" edc:desc="Clock Wait State Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EOSACC" edc:nzwidth="0x1" edc:desc="End Of Client Access Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MCACK" edc:nzwidth="0x1" edc:desc="Host Code Acknowledge Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TOUT" edc:nzwidth="0x1" edc:desc="Timeout Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PECERR" edc:nzwidth="0x1" edc:desc="PEC Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SMBDAM" edc:nzwidth="0x1" edc:desc="SMBus Default Address Match Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SMBHHM" edc:nzwidth="0x1" edc:desc="SMBus Host Header Address Match Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_TWI_IDR" edc:nzwidth="0x20" edc:access="----------wwww-wwwwwwwwwwwww-www" edc:impl="0x3DFFF7" edc:_addr="0x40018628">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="TXCOMP" edc:nzwidth="0x1" edc:desc="Transmission Completed Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="Receive Holding Register Ready Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="Transmit Holding Register Ready Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SVACC" edc:nzwidth="0x1" edc:desc="Client Access Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="GACC" edc:nzwidth="0x1" edc:desc="General Call Access Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:nzwidth="0x1" edc:desc="Underrun Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="NACK" edc:nzwidth="0x1" edc:desc="Not Acknowledge Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ARBLST" edc:nzwidth="0x1" edc:desc="Arbitration Lost Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SCL_WS" edc:nzwidth="0x1" edc:desc="Clock Wait State Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="EOSACC" edc:nzwidth="0x1" edc:desc="End Of Client Access Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="MCACK" edc:nzwidth="0x1" edc:desc="Host Code Acknowledge Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TOUT" edc:nzwidth="0x1" edc:desc="Timeout Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="PECERR" edc:nzwidth="0x1" edc:desc="PEC Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SMBDAM" edc:nzwidth="0x1" edc:desc="SMBus Default Address Match Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SMBHHM" edc:nzwidth="0x1" edc:desc="SMBus Host Header Address Match Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_TWI_IMR" edc:nzwidth="0x20" edc:access="----------rrrr-rrrrrrrrrrrrr-rrr" edc:impl="0x3DFFF7" edc:_addr="0x4001862C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="TXCOMP" edc:nzwidth="0x1" edc:desc="Transmission Completed Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="Receive Holding Register Ready Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="Transmit Holding Register Ready Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SVACC" edc:nzwidth="0x1" edc:desc="Client Access Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="GACC" edc:nzwidth="0x1" edc:desc="General Call Access Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:nzwidth="0x1" edc:desc="Underrun Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="NACK" edc:nzwidth="0x1" edc:desc="Not Acknowledge Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ARBLST" edc:nzwidth="0x1" edc:desc="Arbitration Lost Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="SCL_WS" edc:nzwidth="0x1" edc:desc="Clock Wait State Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="EOSACC" edc:nzwidth="0x1" edc:desc="End Of Client Access Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="MCACK" edc:nzwidth="0x1" edc:desc="Host Code Acknowledge Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TOUT" edc:nzwidth="0x1" edc:desc="Timeout Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="PECERR" edc:nzwidth="0x1" edc:desc="PEC Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="SMBDAM" edc:nzwidth="0x1" edc:desc="SMBus Default Address Match Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="SMBHHM" edc:nzwidth="0x1" edc:desc="SMBus Host Header Address Match Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_TWI_RHR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40018630">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="RXDATA0" edc:nzwidth="0x8" edc:desc="Host or Client Receive Holding Data 0"/>
            <edc:SFRFieldDef edc:cname="RXDATA1" edc:nzwidth="0x8" edc:desc="Host or Client Receive Holding Data 1"/>
            <edc:AdjustPoint edc:offset="-6"/>
            <edc:SFRFieldDef edc:cname="PSTATE" edc:nzwidth="0x1" edc:desc="Stop State (Client Sniffer Mode only)"/>
            <edc:SFRFieldDef edc:cname="ASTATE" edc:nzwidth="0x2" edc:desc="Acknowledge State (Client Sniffer Mode only)">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Acknowledge or Nacknowledge detected after previously logged data" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ACK" edc:desc="Acknowledge (A) detected after previously logged data" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NACK" edc:desc="Nacknowledge (NA) detected after previously logged data" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="UNDEF" edc:desc="Not defined" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RXDATA2" edc:nzwidth="0x8" edc:desc="Host or Client Receive Holding Data 2"/>
            <edc:SFRFieldDef edc:cname="RXDATA3" edc:nzwidth="0x8" edc:desc="Host or Client Receive Holding Data 3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_TWI_THR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x40018634">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="TXDATA0" edc:nzwidth="0x8" edc:desc="Host or Client Transmit Holding Data 0"/>
            <edc:SFRFieldDef edc:cname="TXDATA1" edc:nzwidth="0x8" edc:desc="Host or Client Transmit Holding Data 1"/>
            <edc:SFRFieldDef edc:cname="TXDATA2" edc:nzwidth="0x8" edc:desc="Host or Client Transmit Holding Data 2"/>
            <edc:SFRFieldDef edc:cname="TXDATA3" edc:nzwidth="0x8" edc:desc="Host or Client Transmit Holding Data 3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_TWI_SMBTR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn----nnnn" edc:impl="0xFFFFFF0F" edc:_addr="0x40018638">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="PRESC" edc:nzwidth="0x4" edc:desc="SMBus Clock Prescaler"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TLOWS" edc:nzwidth="0x8" edc:desc="Client Clock Stretch Maximum Cycles"/>
            <edc:SFRFieldDef edc:cname="TLOWM" edc:nzwidth="0x8" edc:desc="Host Clock Stretch Maximum Cycles"/>
            <edc:SFRFieldDef edc:cname="THMAX" edc:nzwidth="0x8" edc:desc="Clock High Maximum Cycles"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_TWI_HSR" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:impl="0xFF" edc:_addr="0x4001863C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="MCODE" edc:nzwidth="0x8" edc:desc="TWI High Speed Host Code"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_TWI_ACR" edc:nzwidth="0x20" edc:access="------nnnnnnnnnn------nnnnnnnnnn" edc:impl="0x3FF03FF" edc:_addr="0x40018640">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="DATAL" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Transfer Direction"/>
            <edc:SFRFieldDef edc:cname="PEC" edc:nzwidth="0x1" edc:desc="PEC Request (SMBus Mode only)"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="NDATAL" edc:nzwidth="0x8" edc:desc="Next Data Length"/>
            <edc:SFRFieldDef edc:cname="NDIR" edc:nzwidth="0x1" edc:desc="Next Transfer Direction"/>
            <edc:SFRFieldDef edc:cname="NPEC" edc:nzwidth="0x1" edc:desc="Next PEC Request (SMBus Mode only)"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_TWI_FILTR" edc:nzwidth="0x20" edc:access="---------------------nnn------nn" edc:impl="0x703" edc:_addr="0x40018644">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="FILT" edc:nzwidth="0x1" edc:desc="RX Digital Filter"/>
            <edc:SFRFieldDef edc:cname="PADFEN" edc:nzwidth="0x1" edc:desc="PAD Filter Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="THRES" edc:nzwidth="0x3" edc:desc="Digital Filter Threshold"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_TWI_HSCWGR" edc:nzwidth="0x20" edc:access="-------------nnnnnnnnnnnnnnnnnnn" edc:impl="0x7FFFF" edc:_addr="0x40018648">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="HSCLDIV" edc:nzwidth="0x8" edc:desc="High Speed Clock Low Divider"/>
            <edc:SFRFieldDef edc:cname="HSCHDIV" edc:nzwidth="0x8" edc:desc="High Speed Clock High Divider"/>
            <edc:SFRFieldDef edc:cname="HSCKDIV" edc:nzwidth="0x3" edc:desc="High Speed Clock Divider"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_TWI_SWMR" edc:nzwidth="0x20" edc:access="nnnnnnnn-nnnnnnn-nnnnnnn-nnnnnnn" edc:impl="0xFF7F7F7F" edc:_addr="0x4001864C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="SADR1" edc:nzwidth="0x7" edc:desc="Client Address 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SADR2" edc:nzwidth="0x7" edc:desc="Client Address 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SADR3" edc:nzwidth="0x7" edc:desc="Client Address 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DATAM" edc:nzwidth="0x8" edc:desc="Data Match"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_TWI_FMR" edc:nzwidth="0x20" edc:access="--nnnnnn--nnnnnn----------nn--nn" edc:impl="0x3F3F0033" edc:_addr="0x40018650">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="TXRDYM" edc:nzwidth="0x2" edc:desc="Transmitter Ready Mode">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="TXRDY will be at level '1' when at least one data can be written in the transmit FIFO. When DMA is enabled to transfer data, the chunk of 1 byte must be configured in the DMA. If the transfer is performed by software, the access type must be defined as byte." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="TXRDY will be at level '1' when at least two data can be written in the transmit FIFO. To minimize system bus load, when DMA is enabled to transfer data, the chunk of 1 halfword (1 halfword carries 2 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 2 accesses) or halfword (2 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="TXRDY will be at level '1' when at least four data can be written in the transmit FIFO. To minimize system bus load, when DMA is enabled to transfer data, the chunk of 1 word (1 word carries 4 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 4 accesses), halfword (2 bytes per access, 2 accesses) or word (4 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXRDYM" edc:nzwidth="0x2" edc:desc="Receiver Ready Mode">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="RXRDY will be at level '1' when at least one unread data is in the receive FIFO. When DMA is enabled to transfer data the chunk of 1 byte must be configured in the DMA. If the transfer is performed by software, the access type (byte, halfword) must be defined accordingly." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="RXRDY will be at level '1' when at least two unread data are in the receive FIFO. To minimize system bus load, when DMA is enabled to transfer data, the chunk of 1 halfword (1 halfword carries 2 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 2 accesses) or halfword (2 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="RXRDY will be at level '1' when at least four unread data are in the receive FIFO. To minimize system bus load, when DMA is enabled to transfer data, the chunk of 1 word (1 word carries 4 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 4 accesses), halfword (2 bytes per access, 2 accesses) or word (4 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="TXFTHRES" edc:nzwidth="0x6" edc:desc="Transmit FIFO Threshold"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXFTHRES" edc:nzwidth="0x6" edc:desc="Receive FIFO Threshold"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_TWI_FLR" edc:nzwidth="0x20" edc:access="----------rrrrrr----------rrrrrr" edc:impl="0x3F003F" edc:_addr="0x40018654">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="TXFL" edc:nzwidth="0x6" edc:desc="Transmit FIFO Level"/>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="RXFL" edc:nzwidth="0x6" edc:desc="Receive FIFO Level"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x40018658"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_TWI_FSR" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:impl="0xFF" edc:_addr="0x40018660">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Empty Flag (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Full Flag (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Threshold Flag (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="Receive FIFO Empty Flag"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="Receive FIFO Full Flag"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="Receive FIFO Threshold Flag"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Pointer Error Flag"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="Receive FIFO Pointer Error Flag"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_TWI_FIER" edc:nzwidth="0x20" edc:access="------------------------wwwwwwww" edc:impl="0xFF" edc:_addr="0x40018664">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_TWI_FIDR" edc:nzwidth="0x20" edc:access="------------------------wwwwwwww" edc:impl="0xFF" edc:_addr="0x40018668">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_TWI_FIMR" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:impl="0xFF" edc:_addr="0x4001866C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x74" edc:_addr="0x40018670"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_TWI_WPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:impl="0xFFFFFF07" edc:_addr="0x400186E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="WPEN" edc:nzwidth="0x1" edc:desc="Write Protection Enable"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:nzwidth="0x1" edc:desc="Write Protection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:nzwidth="0x1" edc:desc="Write Protection Control Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of bits WPEN, WPITEN and WPCREN. Always reads as 0" edc:when="(field &amp; 0xFFFFFF) == 0x545749"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM6" edc:cname="FLEX_TWI_WPSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrr-------r" edc:impl="0xFFFFFF01" edc:_addr="0x400186E8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM6">
            <edc:SFRFieldDef edc:cname="WPVS" edc:nzwidth="0x1" edc:desc="Write Protect Violation Status (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:nzwidth="0x18" edc:desc="Write Protection Violation Source"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3914" edc:_addr="0x400186EC"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_MR" edc:nzwidth="0x20" edc:access="------------------------------nn" edc:impl="0x3" edc:_addr="0x4001C000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="OPMODE" edc:nzwidth="0x2" edc:desc="FLEXCOM Operating Mode">
              <edc:SFRFieldSemantic edc:cname="NO_COM" edc:desc="No communication" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USART" edc:desc="All UART related protocols are selected (RS232, RS485, IrDA, ISO7816, LIN,) SPI/TWI related registers are not accessible and have no impact on IOs." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SPI" edc:desc="SPI operating mode is selected. USART/TWI related registers are not accessible and have no impact on IOs." edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TWI" edc:desc="All TWI related protocols are selected (TWI, SMBus). USART/SPI related registers are not accessible and have no impact on IOs." edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x4001C004"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_RHR" edc:nzwidth="0x20" edc:access="----------------rrrrrrrrrrrrrrrr" edc:impl="0xFFFF" edc:_addr="0x4001C010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="RXDATA" edc:nzwidth="0x10" edc:desc="Receive Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x4001C014"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_THR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x4001C020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="TXDATA" edc:nzwidth="0x10" edc:desc="Transmit Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xDC" edc:_addr="0x4001C024"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_RPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4001C100">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="RXPTR" edc:nzwidth="0x20" edc:desc="Receive Pointer Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_RCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x4001C104">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="RXCTR" edc:nzwidth="0x10" edc:desc="Receive Counter Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_TPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4001C108">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="TXPTR" edc:nzwidth="0x20" edc:desc="Transmit Counter Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_TCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x4001C10C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="TXCTR" edc:nzwidth="0x10" edc:desc="Transmit Counter Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_RNPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4001C110">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="RXNPTR" edc:nzwidth="0x20" edc:desc="Receive Next Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_RNCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x4001C114">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="RXNCTR" edc:nzwidth="0x10" edc:desc="Receive Next Counter"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_TNPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4001C118">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="TXNPTR" edc:nzwidth="0x20" edc:desc="Transmit Next Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_TNCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x4001C11C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="TXNCTR" edc:nzwidth="0x10" edc:desc="Transmit Counter Next"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_PTCR" edc:nzwidth="0x20" edc:access="-------w----wwww------ww------ww" edc:impl="0x10F0303" edc:_addr="0x4001C120">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="RXTEN" edc:nzwidth="0x1" edc:desc="Receiver Transfer Enable"/>
            <edc:SFRFieldDef edc:cname="RXTDIS" edc:nzwidth="0x1" edc:desc="Receiver Transfer Disable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="TXTEN" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Enable"/>
            <edc:SFRFieldDef edc:cname="TXTDIS" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Disable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="RXCBEN" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Enable"/>
            <edc:SFRFieldDef edc:cname="RXCBDIS" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Disable"/>
            <edc:SFRFieldDef edc:cname="TXCBEN" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Enable"/>
            <edc:SFRFieldDef edc:cname="TXCBDIS" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Disable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ERRCLR" edc:nzwidth="0x1" edc:desc="Transfer Bus Error Clear"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_PTSR" edc:nzwidth="0x20" edc:access="-------r-----r-r-------r-------r" edc:impl="0x1050101" edc:_addr="0x4001C124">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="RXTEN" edc:nzwidth="0x1" edc:desc="Receiver Transfer Enable"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="TXTEN" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Enable"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="RXCBEN" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXCBEN" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Transfer Bus Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_PWPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:impl="0xFFFFFF07" edc:_addr="0x4001C128">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="WPPTREN" edc:nzwidth="0x1" edc:desc="Write Protection Pointer Registers Enable"/>
            <edc:SFRFieldDef edc:cname="WPCTREN" edc:nzwidth="0x1" edc:desc="Write Protection Counter Registers Enable"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:nzwidth="0x1" edc:desc="Write Protection Control Register Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x504443"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xD4" edc:_addr="0x4001C12C"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_US_CR" edc:nzwidth="0x20" edc:access="ww-w-www--wwww--wwwwwwwwwwwwww--" edc:impl="0xD73CFFFC" edc:_addr="0x4001C200">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RSTRX" edc:nzwidth="0x1" edc:desc="Reset Receiver"/>
            <edc:SFRFieldDef edc:cname="RSTTX" edc:nzwidth="0x1" edc:desc="Reset Transmitter"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
            <edc:SFRFieldDef edc:cname="RXDIS" edc:nzwidth="0x1" edc:desc="Receiver Disable"/>
            <edc:SFRFieldDef edc:cname="TXEN" edc:nzwidth="0x1" edc:desc="Transmitter Enable"/>
            <edc:SFRFieldDef edc:cname="TXDIS" edc:nzwidth="0x1" edc:desc="Transmitter Disable"/>
            <edc:SFRFieldDef edc:cname="RSTSTA" edc:nzwidth="0x1" edc:desc="Reset Status Bits"/>
            <edc:SFRFieldDef edc:cname="STTBRK" edc:nzwidth="0x1" edc:desc="Start Break"/>
            <edc:SFRFieldDef edc:cname="STPBRK" edc:nzwidth="0x1" edc:desc="Stop Break"/>
            <edc:SFRFieldDef edc:cname="STTTO" edc:nzwidth="0x1" edc:desc="Clear TIMEOUT Flag and Start Timeout After Next Character Received"/>
            <edc:SFRFieldDef edc:cname="SENDA" edc:nzwidth="0x1" edc:desc="Send Address"/>
            <edc:SFRFieldDef edc:cname="RSTIT" edc:nzwidth="0x1" edc:desc="Reset Iterations"/>
            <edc:SFRFieldDef edc:cname="RSTNACK" edc:nzwidth="0x1" edc:desc="Reset Non Acknowledge"/>
            <edc:SFRFieldDef edc:cname="RETTO" edc:nzwidth="0x1" edc:desc="Start Timeout Immediately"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RTSEN" edc:nzwidth="0x1" edc:desc="Request to Send Enable"/>
            <edc:SFRFieldDef edc:cname="RTSDIS" edc:nzwidth="0x1" edc:desc="Request to Send Disable"/>
            <edc:SFRFieldDef edc:cname="LINABT" edc:nzwidth="0x1" edc:desc="Abort LIN Transmission"/>
            <edc:SFRFieldDef edc:cname="LINWKUP" edc:nzwidth="0x1" edc:desc="Send LIN Wakeup Signal"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TXFCLR" edc:nzwidth="0x1" edc:desc="Transmit FIFO Clear"/>
            <edc:SFRFieldDef edc:cname="RXFCLR" edc:nzwidth="0x1" edc:desc="Receive FIFO Clear"/>
            <edc:SFRFieldDef edc:cname="TXFLCLR" edc:nzwidth="0x1" edc:desc="Transmit FIFO Lock CLEAR"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="REQCLR" edc:nzwidth="0x1" edc:desc="Request to Clear the Comparison Trigger"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="FIFODIS" edc:nzwidth="0x1" edc:desc="FIFO Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_US_MR" edc:nzwidth="0x20" edc:access="nnnn-nnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:impl="0xF7FFFFFF" edc:_addr="0x4001C204">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="USART_MODE" edc:nzwidth="0x4" edc:desc="USART Mode of Operation">
              <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Normal mode" edc:when="(field &amp; 0xF) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="USCLKS" edc:nzwidth="0x2" edc:desc="Clock Selection">
              <edc:SFRFieldSemantic edc:cname="MCK" edc:desc="Peripheral clock is selected." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DIV" edc:desc="Peripheral clock divided (DIV=8) is selected." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="PCK" edc:desc="PMC programmable clock (PCK) is selected. If the SCK pin is driven (CLKO = 1), the CD field must be greater than 1." edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SCK" edc:desc="Serial clock (SCK) is selected." edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CHRL" edc:nzwidth="0x2" edc:desc="Character Length">
              <edc:SFRFieldSemantic edc:cname="_5_BIT" edc:desc="Character length is 5 bits." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="_6_BIT" edc:desc="Character length is 6 bits." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_7_BIT" edc:desc="Character length is 7 bits." edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BIT" edc:desc="Character length is 8 bits." edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SYNC" edc:nzwidth="0x1" edc:desc="Synchronous Mode Select"/>
            <edc:SFRFieldDef edc:cname="PAR" edc:nzwidth="0x3" edc:desc="Parity Type">
              <edc:SFRFieldSemantic edc:cname="EVEN" edc:desc="Even parity" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ODD" edc:desc="Odd parity" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SPACE" edc:desc="Parity forced to 0 (Space)" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="MARK" edc:desc="Parity forced to 1 (Mark)" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="NO" edc:desc="No parity" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="MULTIDROP" edc:desc="Multidrop mode" edc:when="(field &amp; 0x7) == 0x06"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NBSTOP" edc:nzwidth="0x2" edc:desc="Number of Stop Bits">
              <edc:SFRFieldSemantic edc:cname="_1_BIT" edc:desc="1 stop bit" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="_1_5_BIT" edc:desc="1.5 stop bit (SYNC = 0) or reserved (SYNC = 1)" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_2_BIT" edc:desc="2 stop bits" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CHMODE" edc:nzwidth="0x2" edc:desc="Channel Mode">
              <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Normal mode" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="AUTOMATIC" edc:desc="Automatic Echo. Receiver input is connected to the TXD pin." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="LOCAL_LOOPBACK" edc:desc="Local Loopback. Transmitter output is connected to the Receiver Input." edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="REMOTE_LOOPBACK" edc:desc="Remote Loopback. RXD pin is internally connected to the TXD pin." edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSBF" edc:nzwidth="0x1" edc:desc="Bit Order"/>
            <edc:SFRFieldDef edc:cname="MODE9" edc:nzwidth="0x1" edc:desc="9-bit Character Length"/>
            <edc:SFRFieldDef edc:cname="CLKO" edc:nzwidth="0x1" edc:desc="Clock Output Select"/>
            <edc:SFRFieldDef edc:cname="OVER" edc:nzwidth="0x1" edc:desc="Oversampling Mode"/>
            <edc:SFRFieldDef edc:cname="OOKRXD" edc:nzwidth="0x1" edc:desc="OOK Demodulation Input Selection"/>
            <edc:SFRFieldDef edc:cname="OOKEN" edc:nzwidth="0x1" edc:desc="OOK Modulation/Demodulation Enabled"/>
            <edc:SFRFieldDef edc:cname="VAR_SYNC" edc:nzwidth="0x1" edc:desc="Variable Synchronization of Command/Data Sync Start Frame Delimiter"/>
            <edc:SFRFieldDef edc:cname="INVDATA" edc:nzwidth="0x1" edc:desc="Inverted Data"/>
            <edc:SFRFieldDef edc:cname="MAX_ITERATION" edc:nzwidth="0x3" edc:desc="Maximum Number of Automatic Iteration"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FILTER" edc:nzwidth="0x1" edc:desc="Receive Line Filter"/>
            <edc:SFRFieldDef edc:cname="MAN" edc:nzwidth="0x1" edc:desc="Manchester Encoder/Decoder Enable"/>
            <edc:SFRFieldDef edc:cname="MODSYNC" edc:nzwidth="0x1" edc:desc="Manchester Synchronization Mode"/>
            <edc:SFRFieldDef edc:cname="ONEBIT" edc:nzwidth="0x1" edc:desc="Start Frame Delimiter Selector"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_US_IER" edc:nzwidth="0x20" edc:access="wwwwwwww-w--w---wwwwwwwwwwwwwwww" edc:impl="0xFF48FFFF" edc:_addr="0x4001C208">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="RXRDY Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="TXRDY Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Receiver Break Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Transfer Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FRAME" edc:nzwidth="0x1" edc:desc="Framing Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PARE" edc:nzwidth="0x1" edc:desc="Parity Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TIMEOUT" edc:nzwidth="0x1" edc:desc="Timeout Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="TXEMPTY Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ITER" edc:nzwidth="0x1" edc:desc="Max number of Repetitions Reached Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Buffer Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Buffer Full Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINBK" edc:nzwidth="0x1" edc:desc="LIN Break Sent or LIN Break Received Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINID" edc:nzwidth="0x1" edc:desc="LIN Identifier Sent or LIN Identifier Received Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINTC" edc:nzwidth="0x1" edc:desc="LIN Transfer Completed Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear to Send Input Change Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MANE" edc:nzwidth="0x1" edc:desc="Manchester Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINBE" edc:nzwidth="0x1" edc:desc="LIN Bus Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINISFE" edc:nzwidth="0x1" edc:desc="LIN Inconsistent Synch Field Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINIPE" edc:nzwidth="0x1" edc:desc="LIN Identifier Parity Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINCE" edc:nzwidth="0x1" edc:desc="LIN Checksum Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINSNRE" edc:nzwidth="0x1" edc:desc="LIN Client Not Responding Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINSTE" edc:nzwidth="0x1" edc:desc="LIN Synch Tolerance Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LINHTE" edc:nzwidth="0x1" edc:desc="LIN Header Timeout Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_US_IDR" edc:nzwidth="0x20" edc:access="wwwwwwww-w--w---wwwwwwwwwwwwwwww" edc:impl="0xFF48FFFF" edc:_addr="0x4001C20C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="RXRDY Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="TXRDY Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Receiver Break Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Transfer Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="FRAME" edc:nzwidth="0x1" edc:desc="Framing Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="PARE" edc:nzwidth="0x1" edc:desc="Parity Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TIMEOUT" edc:nzwidth="0x1" edc:desc="Timeout Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="TXEMPTY Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ITER" edc:nzwidth="0x1" edc:desc="Max Number of Repetitions Reached Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Buffer Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Buffer Full Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINBK" edc:nzwidth="0x1" edc:desc="LIN Break Sent or LIN Break Received Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINID" edc:nzwidth="0x1" edc:desc="LIN Identifier Sent or LIN Identifier Received Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINTC" edc:nzwidth="0x1" edc:desc="LIN Transfer Completed Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear to Send Input Change Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MANE" edc:nzwidth="0x1" edc:desc="Manchester Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINBE" edc:nzwidth="0x1" edc:desc="LIN Bus Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINISFE" edc:nzwidth="0x1" edc:desc="LIN Inconsistent Synch Field Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINIPE" edc:nzwidth="0x1" edc:desc="LIN Identifier Parity Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINCE" edc:nzwidth="0x1" edc:desc="LIN Checksum Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINSNRE" edc:nzwidth="0x1" edc:desc="LIN Client Not Responding Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINSTE" edc:nzwidth="0x1" edc:desc="LIN Synch Tolerance Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LINHTE" edc:nzwidth="0x1" edc:desc="LIN Header Timeout Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_US_IMR" edc:nzwidth="0x20" edc:access="rrrrrrrr-r--r---rrrrrrrrrrrrrrrr" edc:impl="0xFF48FFFF" edc:_addr="0x4001C210">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="RXRDY Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="TXRDY Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Receiver Break Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Transfer Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="FRAME" edc:nzwidth="0x1" edc:desc="Framing Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="PARE" edc:nzwidth="0x1" edc:desc="Parity Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TIMEOUT" edc:nzwidth="0x1" edc:desc="Timeout Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="TXEMPTY Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ITER" edc:nzwidth="0x1" edc:desc="Max Number of Repetitions Reached Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Buffer Empty Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Buffer Full Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINBK" edc:nzwidth="0x1" edc:desc="LIN Break Sent or LIN Break Received Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINID" edc:nzwidth="0x1" edc:desc="LIN Identifier Sent or LIN Identifier Received Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINTC" edc:nzwidth="0x1" edc:desc="LIN Transfer Completed Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear to Send Input Change Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MANE" edc:nzwidth="0x1" edc:desc="Manchester Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINBE" edc:nzwidth="0x1" edc:desc="LIN Bus Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINISFE" edc:nzwidth="0x1" edc:desc="LIN Inconsistent Synch Field Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINIPE" edc:nzwidth="0x1" edc:desc="LIN Identifier Parity Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINCE" edc:nzwidth="0x1" edc:desc="LIN Checksum Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINSNRE" edc:nzwidth="0x1" edc:desc="LIN Client Not Responding Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINSTE" edc:nzwidth="0x1" edc:desc="LIN Synch Tolerance Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LINHTE" edc:nzwidth="0x1" edc:desc="LIN Header Timeout Error Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_US_CSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrr--r---rrrrrrrrrrrrrrrr" edc:impl="0xFFC8FFFF" edc:_addr="0x4001C214">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="Receiver Ready (cleared by reading FLEX_US_RHR)"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="Transmitter Ready (cleared by writing FLEX_US_THR)"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received/End of Break"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of RX Buffer (cleared by writing FLEX_US_RCR or FLEX_US_RNCR)"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of TX Buffer (cleared by writing FLEX_US_TCR or FLEX_US_TNCR)"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error"/>
            <edc:SFRFieldDef edc:cname="FRAME" edc:nzwidth="0x1" edc:desc="Framing Error"/>
            <edc:SFRFieldDef edc:cname="PARE" edc:nzwidth="0x1" edc:desc="Parity Error"/>
            <edc:SFRFieldDef edc:cname="TIMEOUT" edc:nzwidth="0x1" edc:desc="Receiver Timeout"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="Transmitter Empty (cleared by writing FLEX_US_THR)"/>
            <edc:SFRFieldDef edc:cname="ITER" edc:nzwidth="0x1" edc:desc="Max Number of Repetitions Reached"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="TX Buffer Empty (cleared by writing FLEX_US_TCR or FLEX_US_TNCR)"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="RX Buffer Full (cleared by writing FLEX_US_RCR or FLEX_US_RNCR)"/>
            <edc:SFRFieldDef edc:cname="LINBK" edc:nzwidth="0x1" edc:desc="LIN Break Sent or LIN Break Received"/>
            <edc:SFRFieldDef edc:cname="LINID" edc:nzwidth="0x1" edc:desc="LIN Identifier Sent or LIN Identifier Received"/>
            <edc:SFRFieldDef edc:cname="LINTC" edc:nzwidth="0x1" edc:desc="LIN Transfer Completed"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear to Send Input Change Flag"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Status"/>
            <edc:SFRFieldDef edc:cname="LINBLS" edc:nzwidth="0x1" edc:desc="LIN Bus Line Status"/>
            <edc:SFRFieldDef edc:cname="MANE" edc:nzwidth="0x1" edc:desc="Manchester Error"/>
            <edc:SFRFieldDef edc:cname="LINBE" edc:nzwidth="0x1" edc:desc="LIN Bit Error"/>
            <edc:SFRFieldDef edc:cname="LINISFE" edc:nzwidth="0x1" edc:desc="LIN Inconsistent Synch Field Error"/>
            <edc:SFRFieldDef edc:cname="LINIPE" edc:nzwidth="0x1" edc:desc="LIN Identifier Parity Error"/>
            <edc:SFRFieldDef edc:cname="LINCE" edc:nzwidth="0x1" edc:desc="LIN Checksum Error"/>
            <edc:SFRFieldDef edc:cname="LINSNRE" edc:nzwidth="0x1" edc:desc="LIN Client Not Responding Error"/>
            <edc:SFRFieldDef edc:cname="LINSTE" edc:nzwidth="0x1" edc:desc="LIN Synch Tolerance Error"/>
            <edc:SFRFieldDef edc:cname="LINHTE" edc:nzwidth="0x1" edc:desc="LIN Header Timeout Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_US_RHR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4001C218">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="RXCHR0" edc:nzwidth="0x8" edc:desc="Received Characters"/>
            <edc:SFRFieldDef edc:cname="RXCHR1" edc:nzwidth="0x8" edc:desc="Received Characters"/>
            <edc:AdjustPoint edc:offset="-1"/>
            <edc:SFRFieldDef edc:cname="RXSYNH" edc:nzwidth="0x1" edc:desc="Received Sync"/>
            <edc:SFRFieldDef edc:cname="RXCHR2" edc:nzwidth="0x8" edc:desc="Received Characters"/>
            <edc:SFRFieldDef edc:cname="RXCHR3" edc:nzwidth="0x8" edc:desc="Received Characters"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_US_THR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4001C21C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="TXCHR0" edc:nzwidth="0x8" edc:desc="Character to be Transmitted"/>
            <edc:SFRFieldDef edc:cname="TXCHR1" edc:nzwidth="0x8" edc:desc="Character to be Transmitted"/>
            <edc:AdjustPoint edc:offset="-1"/>
            <edc:SFRFieldDef edc:cname="TXSYNH" edc:nzwidth="0x1" edc:desc="Sync Field to be Transmitted"/>
            <edc:SFRFieldDef edc:cname="TXCHR2" edc:nzwidth="0x8" edc:desc="Character to be Transmitted"/>
            <edc:SFRFieldDef edc:cname="TXCHR3" edc:nzwidth="0x8" edc:desc="Character to be Transmitted"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_US_BRGR" edc:nzwidth="0x20" edc:access="-------------nnnnnnnnnnnnnnnnnnn" edc:impl="0x7FFFF" edc:_addr="0x4001C220">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="CD" edc:nzwidth="0x10" edc:desc="Clock Divider"/>
            <edc:SFRFieldDef edc:cname="FP" edc:nzwidth="0x3" edc:desc="Fractional Part"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_US_RTOR" edc:nzwidth="0x20" edc:access="---------------nnnnnnnnnnnnnnnnn" edc:impl="0x1FFFF" edc:_addr="0x4001C224">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="TO" edc:nzwidth="0x11" edc:desc="Timeout Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_US_TTGR" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:impl="0xFF" edc:_addr="0x4001C228">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="TG" edc:nzwidth="0x8" edc:desc="Timeguard Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x14" edc:_addr="0x4001C22C"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_US_FIDI" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x4001C240">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="FI_DI_RATIO" edc:nzwidth="0x10" edc:desc="FI Over DI Ratio Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_US_NER" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:impl="0xFF" edc:_addr="0x4001C244">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="NB_ERRORS" edc:nzwidth="0x8" edc:desc="Number of Errors"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4001C248"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_US_IF" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:impl="0xFF" edc:_addr="0x4001C24C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="IRDA_FILTER" edc:nzwidth="0x8" edc:desc="IrDA Filter"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_US_MAN" edc:nzwidth="0x20" edc:access="nnnn--nn----nnnn---n--nn----nnnn" edc:impl="0xF30F130F" edc:_addr="0x4001C250">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="TX_PL" edc:nzwidth="0x4" edc:desc="Transmitter Preamble Length"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TX_PP" edc:nzwidth="0x2" edc:desc="Transmitter Preamble Pattern">
              <edc:SFRFieldSemantic edc:cname="ALL_ONE" edc:desc="The preamble is composed of '1's" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ALL_ZERO" edc:desc="The preamble is composed of '0's" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ZERO_ONE" edc:desc="The preamble is composed of '01's" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="ONE_ZERO" edc:desc="The preamble is composed of '10's" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TX_MPOL" edc:nzwidth="0x1" edc:desc="Transmitter Manchester Polarity"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RX_PL" edc:nzwidth="0x4" edc:desc="Receiver Preamble Length"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="RX_PP" edc:nzwidth="0x2" edc:desc="Receiver Preamble Pattern detected">
              <edc:SFRFieldSemantic edc:cname="ALL_ONE" edc:desc="The preamble is composed of '1's" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ALL_ZERO" edc:desc="The preamble is composed of '0's" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ZERO_ONE" edc:desc="The preamble is composed of '01's" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="ONE_ZERO" edc:desc="The preamble is composed of '10's" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RX_MPOL" edc:nzwidth="0x1" edc:desc="Receiver Manchester Polarity"/>
            <edc:SFRFieldDef edc:cname="ONE" edc:nzwidth="0x1" edc:desc="Must Be Set to 1"/>
            <edc:SFRFieldDef edc:cname="DRIFT" edc:nzwidth="0x1" edc:desc="Drift Compensation"/>
            <edc:SFRFieldDef edc:cname="RXIDLEV" edc:nzwidth="0x1" edc:desc="Receiver Idle Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_US_LINMR" edc:nzwidth="0x20" edc:access="--------------nnnnnnnnnnnnnnnnnn" edc:impl="0x3FFFF" edc:_addr="0x4001C254">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="NACT" edc:nzwidth="0x2" edc:desc="LIN Node Action">
              <edc:SFRFieldSemantic edc:cname="PUBLISH" edc:desc="The USART transmits the response." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SUBSCRIBE" edc:desc="The USART receives the response." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="IGNORE" edc:desc="The USART does not transmit and does not receive the response." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PARDIS" edc:nzwidth="0x1" edc:desc="Parity Disable"/>
            <edc:SFRFieldDef edc:cname="CHKDIS" edc:nzwidth="0x1" edc:desc="Checksum Disable"/>
            <edc:SFRFieldDef edc:cname="CHKTYP" edc:nzwidth="0x1" edc:desc="Checksum Type"/>
            <edc:SFRFieldDef edc:cname="DLM" edc:nzwidth="0x1" edc:desc="Data Length Mode"/>
            <edc:SFRFieldDef edc:cname="FSDIS" edc:nzwidth="0x1" edc:desc="Frame Slot Mode Disable"/>
            <edc:SFRFieldDef edc:cname="WKUPTYP" edc:nzwidth="0x1" edc:desc="Wakeup Signal Type"/>
            <edc:SFRFieldDef edc:cname="DLC" edc:nzwidth="0x8" edc:desc="Data Length Control"/>
            <edc:SFRFieldDef edc:cname="PDCM" edc:nzwidth="0x1" edc:desc="PDC Mode"/>
            <edc:SFRFieldDef edc:cname="SYNCDIS" edc:nzwidth="0x1" edc:desc="Synchronization Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_US_LINIR" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:impl="0xFF" edc:_addr="0x4001C258">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="IDCHR" edc:nzwidth="0x8" edc:desc="Identifier Character"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_US_LINBRR" edc:nzwidth="0x20" edc:access="-------------rrrrrrrrrrrrrrrrrrr" edc:impl="0x7FFFF" edc:_addr="0x4001C25C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="LINCD" edc:nzwidth="0x10" edc:desc="Clock Divider after Synchronization"/>
            <edc:SFRFieldDef edc:cname="LINFP" edc:nzwidth="0x3" edc:desc="Fractional Part after Synchronization"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x30" edc:_addr="0x4001C260"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_US_CMPR" edc:nzwidth="0x20" edc:access="-------nnnnnnnnn-nnn---nnnnnnnnn" edc:impl="0x1FF71FF" edc:_addr="0x4001C290">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="VAL1" edc:nzwidth="0x9" edc:desc="First Comparison Value for Received Character"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CMPMODE" edc:nzwidth="0x2" edc:desc="Comparison Mode">
              <edc:SFRFieldSemantic edc:cname="FLAG_ONLY" edc:desc="Any character is received and comparison function drives CMP flag." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="START_CONDITION" edc:desc="Comparison condition must be met to start reception." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FILTER" edc:desc="Comparison must be met to receive the current data only" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMPPAR" edc:nzwidth="0x1" edc:desc="Compare Parity"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="VAL2" edc:nzwidth="0x9" edc:desc="Second Comparison Value for Received Character"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x4001C294"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_US_FMR" edc:nzwidth="0x20" edc:access="--nnnnnn--nnnnnn--nnnnnnn-nn--nn" edc:impl="0x3F3F3FB3" edc:_addr="0x4001C2A0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="TXRDYM" edc:nzwidth="0x2" edc:desc="Transmitter Ready Mode">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="TXRDY will be at level '1' when at least one data can be written in the transmit FIFO. When DMA is enabled to transfer data and FLEX_US_MR.MODE9=0 (up to 8 bits to transfer on the line), the chunk of 1 byte must be configured in the DMA. If the transfer is performed by software, the access type must be defined as a byte." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="TXRDY will be at level '1' when at least two data can be written in the transmit FIFO. To minimize system bus load, when DMA is enabled to transfer data and FLEX_US_MR.MODE9=0 (up to 8 bits to transfer on the line), the chunk of 1 halfword (1 halfword carries 2 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 2 accesses) or halfword (2 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="TXRDY will be at level '1' when at least four data can be written in the transmit FIFO. To minimize system bus load, when DMA is enabled to transfer data and FLEX_US_MR.MODE9=0 (up to 8 bits to transfer on the line), the chunk of 1 word (1 word carries 4 bytes) must be configured in the DMA (chunk size=1 and word access). If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 4 accesses), halfword (2 bytes per access, 2 accesses) or word (4 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXRDYM" edc:nzwidth="0x2" edc:desc="Receiver Ready Mode">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="RXRDY will be at level '1' when at least one unread data is in the receive FIFO. When DMA is enabled to transfer data and FLEX_US_MR.MODE9=0 (up to 8 bits to transfer on the line), the chunk of 1 byte must be configured in the DMA. If the transfer is performed by software, the access type must be defined as a byte." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="RXRDY will be at level '1' when at least two unread data are in the receive FIFO. To minimize system bus load, when DMA is enabled to transfer data and FLEX_US_MR.MODE9=0 (up to 8 bits to transfer on the line), the chunk of 1 halfword (1 halfword carries 2 bytes) must be configured in the DMA (chunk size=1 and halfword access). If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 2 accesses) or halfword (2 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="RXRDY will be at level '1' when at least four unread data are in the receive FIFO. To minimize system bus load, when DMA is enabled to transfer data and FLEX_US_MR.MODE9=0 (up to 8 bits to transfer on the line), the chunk of 1 word (1 word carries 4 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 4 accesses), halfword (2 bytes per access, 2 accesses) or word (4 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FRTSC" edc:nzwidth="0x1" edc:desc="FIFO RTS Pin Control enable (Hardware Handshaking mode only)"/>
            <edc:SFRFieldDef edc:cname="TXFTHRES" edc:nzwidth="0x6" edc:desc="Transmit FIFO Threshold"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXFTHRES" edc:nzwidth="0x6" edc:desc="Receive FIFO Threshold"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXFTHRES2" edc:nzwidth="0x6" edc:desc="Receive FIFO Threshold 2"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_US_FLR" edc:nzwidth="0x20" edc:access="----------rrrrrr----------rrrrrr" edc:impl="0x3F003F" edc:_addr="0x4001C2A4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="TXFL" edc:nzwidth="0x6" edc:desc="Transmit FIFO Level"/>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="RXFL" edc:nzwidth="0x6" edc:desc="Receive FIFO Level"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_US_FIER" edc:nzwidth="0x20" edc:access="----------------------w-wwwwwwww" edc:impl="0x2FF" edc:_addr="0x4001C2A8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF2" edc:nzwidth="0x1" edc:desc="RXFTHF2 Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_US_FIDR" edc:nzwidth="0x20" edc:access="----------------------w-wwwwwwww" edc:impl="0x2FF" edc:_addr="0x4001C2AC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF2" edc:nzwidth="0x1" edc:desc="RXFTHF2 Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_US_FIMR" edc:nzwidth="0x20" edc:access="----------------------r-rrrrrrrr" edc:impl="0x2FF" edc:_addr="0x4001C2B0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF2" edc:nzwidth="0x1" edc:desc="RXFTHF2 Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_US_FESR" edc:nzwidth="0x20" edc:access="----------------------rrrrrrrrrr" edc:impl="0x3FF" edc:_addr="0x4001C2B4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Empty Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Full Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Threshold Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="Receive FIFO Empty Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="Receive FIFO Full Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="Receive FIFO Threshold Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Pointer Error Flag"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="Receive FIFO Pointer Error Flag"/>
            <edc:SFRFieldDef edc:cname="TXFLOCK" edc:nzwidth="0x1" edc:desc="Transmit FIFO Lock"/>
            <edc:SFRFieldDef edc:cname="RXFTHF2" edc:nzwidth="0x1" edc:desc="Receive FIFO Threshold Flag 2 (cleared by writing the FLEX_US_CR.RSTSTA bit)"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2C" edc:_addr="0x4001C2B8"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_US_WPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:impl="0xFFFFFF07" edc:_addr="0x4001C2E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="WPEN" edc:nzwidth="0x1" edc:desc="Write Protection Enable"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:nzwidth="0x1" edc:desc="Write Protection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:nzwidth="0x1" edc:desc="Write Protection Control Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of bits WPEN, WPITEN and WPCREN. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x555341"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_US_WPSR" edc:nzwidth="0x20" edc:access="--------rrrrrrrrrrrrrrrr-------r" edc:impl="0xFFFF01" edc:_addr="0x4001C2E8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="WPVS" edc:nzwidth="0x1" edc:desc="Write Protection Violation Status"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:nzwidth="0x10" edc:desc="Write Protection Violation Source"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x114" edc:_addr="0x4001C2EC"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_SPI_CR" edc:nzwidth="0x20" edc:access="ww-----w------ww---w----w-----ww" edc:impl="0xC1031083" edc:_addr="0x4001C400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="SPIEN" edc:nzwidth="0x1" edc:desc="SPI Enable"/>
            <edc:SFRFieldDef edc:cname="SPIDIS" edc:nzwidth="0x1" edc:desc="SPI Disable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="SPI Software Reset"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="REQCLR" edc:nzwidth="0x1" edc:desc="Request to Clear the Comparison Trigger"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="TXFCLR" edc:nzwidth="0x1" edc:desc="Transmit FIFO Clear"/>
            <edc:SFRFieldDef edc:cname="RXFCLR" edc:nzwidth="0x1" edc:desc="Receive FIFO Clear"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="LASTXFER" edc:nzwidth="0x1" edc:desc="Last Transfer"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="FIFODIS" edc:nzwidth="0x1" edc:desc="FIFO Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_SPI_MR" edc:nzwidth="0x20" edc:access="nnnnnnnn------nn---n----n-nnnnnn" edc:impl="0xFF0310BF" edc:_addr="0x4001C404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="MSTR" edc:nzwidth="0x1" edc:desc="Host/Client Mode"/>
            <edc:SFRFieldDef edc:cname="PS" edc:nzwidth="0x1" edc:desc="Peripheral Select"/>
            <edc:SFRFieldDef edc:cname="PCSDEC" edc:nzwidth="0x1" edc:desc="Chip Select Decode"/>
            <edc:SFRFieldDef edc:cname="BRSRCCLK" edc:nzwidth="0x1" edc:desc="Bit Rate Source Clock">
              <edc:SFRFieldSemantic edc:cname="PERIPH_CLK" edc:desc="The peripheral clock is the source clock for the bit rate generation." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="GCLK is the source clock for the bit rate generation, thus the bit rate can be independent of the core/peripheral clock." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MODFDIS" edc:nzwidth="0x1" edc:desc="Mode Fault Detection"/>
            <edc:SFRFieldDef edc:cname="WDRBT" edc:nzwidth="0x1" edc:desc="Wait Data Read Before Transfer"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LLB" edc:nzwidth="0x1" edc:desc="Local Loopback Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CMPMODE" edc:nzwidth="0x1" edc:desc="Comparison Mode">
              <edc:SFRFieldSemantic edc:cname="FLAG_ONLY" edc:desc="Any character is received and comparison function drives CMP flag." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="START_CONDITION" edc:desc="Comparison condition must be met to start reception of all incoming characters until REQCLR is set." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PCS" edc:nzwidth="0x2" edc:desc="Peripheral Chip Select"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="DLYBCS" edc:nzwidth="0x8" edc:desc="Delay Between Chip Selects"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_SPI_RDR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4001C408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="RD0" edc:nzwidth="0x10" edc:desc="Receive Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="RD1" edc:nzwidth="0x8" edc:desc="Receive Data"/>
            <edc:SFRFieldDef edc:cname="RD1" edc:nzwidth="0x10" edc:desc="Receive Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="RD3" edc:nzwidth="0x8" edc:desc="Receive Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_SPI_TDR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4001C40C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="TD0" edc:nzwidth="0x10" edc:desc="Transmit Data"/>
            <edc:SFRFieldDef edc:cname="TD1" edc:nzwidth="0x10" edc:desc="Transmit Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="LASTXFER" edc:nzwidth="0x1" edc:desc="Last Transfer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_SPI_SR" edc:nzwidth="0x20" edc:access="rrrrrrrr-------r---rrrrrrrrrrrrr" edc:impl="0xFF011FFF" edc:_addr="0x4001C410">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="RDRF" edc:nzwidth="0x1" edc:desc="Receive Data Register Full (cleared by reading FLEX_SPI_RDR)"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:nzwidth="0x1" edc:desc="Transmit Data Register Empty (cleared by writing FLEX_SPI_TDR)"/>
            <edc:SFRFieldDef edc:cname="MODF" edc:nzwidth="0x1" edc:desc="Mode Fault Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:nzwidth="0x1" edc:desc="Overrun Error Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of RX Buffer (cleared by writing FLEX_SPI_RCR or FLEX_SPI_RNCR)"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of TX Buffer (cleared by writing FLEX_SPI_TCR or FLEX_SPI_TNCR)"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="RX Buffer Full (cleared by writing FLEX_SPI_RCR or FLEX_SPI_RNCR)"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="TX Buffer Empty (cleared by writing FLEX_SPI_TCR or FLEX_SPI_TNCR)"/>
            <edc:SFRFieldDef edc:cname="NSSR" edc:nzwidth="0x1" edc:desc="NSS Rising (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="Transmission Registers Empty (cleared by writing FLEX_SPI_TDR)"/>
            <edc:SFRFieldDef edc:cname="UNDES" edc:nzwidth="0x1" edc:desc="Underrun Error Status (Client mode only) (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SFERR" edc:nzwidth="0x1" edc:desc="Client Mode Frame Error (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SPIENS" edc:nzwidth="0x1" edc:desc="SPI Enable Status"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Empty Flag (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Full Flag (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Threshold Flag (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="Receive FIFO Empty Flag"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="Receive FIFO Full Flag"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="Receive FIFO Threshold Flag"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Pointer Error Flag"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="Receive FIFO Pointer Error Flag"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_SPI_IER" edc:nzwidth="0x20" edc:access="wwwwwwww-----------wwwwwwwwwwwww" edc:impl="0xFF001FFF" edc:_addr="0x4001C414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="RDRF" edc:nzwidth="0x1" edc:desc="Receive Data Register Full Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:nzwidth="0x1" edc:desc="SPI Transmit Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MODF" edc:nzwidth="0x1" edc:desc="Mode Fault Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="NSSR" edc:nzwidth="0x1" edc:desc="NSS Rising Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="Transmission Registers Empty Enable"/>
            <edc:SFRFieldDef edc:cname="UNDES" edc:nzwidth="0x1" edc:desc="Underrun Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SFERR" edc:nzwidth="0x1" edc:desc="Client Mode Frame Error Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0xB"/>
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_SPI_IDR" edc:nzwidth="0x20" edc:access="wwwwwwww-----------wwwwwwwwwwwww" edc:impl="0xFF001FFF" edc:_addr="0x4001C418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="RDRF" edc:nzwidth="0x1" edc:desc="Receive Data Register Full Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:nzwidth="0x1" edc:desc="SPI Transmit Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="MODF" edc:nzwidth="0x1" edc:desc="Mode Fault Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="NSSR" edc:nzwidth="0x1" edc:desc="NSS Rising Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="Transmission Registers Empty Disable"/>
            <edc:SFRFieldDef edc:cname="UNDES" edc:nzwidth="0x1" edc:desc="Underrun Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SFERR" edc:nzwidth="0x1" edc:desc="Client Mode Frame Error Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0xB"/>
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_SPI_IMR" edc:nzwidth="0x20" edc:access="rrrrrrrr-----------rrrrrrrrrrrrr" edc:impl="0xFF001FFF" edc:_addr="0x4001C41C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="RDRF" edc:nzwidth="0x1" edc:desc="Receive Data Register Full Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:nzwidth="0x1" edc:desc="SPI Transmit Data Register Empty Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="MODF" edc:nzwidth="0x1" edc:desc="Mode Fault Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="NSSR" edc:nzwidth="0x1" edc:desc="NSS Rising Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="Transmission Registers Empty Mask"/>
            <edc:SFRFieldDef edc:cname="UNDES" edc:nzwidth="0x1" edc:desc="Underrun Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="SFERR" edc:nzwidth="0x1" edc:desc="Client Mode Frame Error Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0xB"/>
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x10" edc:_addr="0x4001C420"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_SPI_CSR0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4001C430">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity"/>
            <edc:SFRFieldDef edc:cname="NCPHA" edc:nzwidth="0x1" edc:desc="Clock Phase"/>
            <edc:SFRFieldDef edc:cname="CSNAAT" edc:nzwidth="0x1" edc:desc="Chip Select Not Active After Transfer (Ignored if CSAAT = 1)"/>
            <edc:SFRFieldDef edc:cname="CSAAT" edc:nzwidth="0x1" edc:desc="Chip Select Active After Transfer"/>
            <edc:SFRFieldDef edc:cname="BITS" edc:nzwidth="0x4" edc:desc="Bits Per Transfer">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits for transfer" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits for transfer" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="10_BIT" edc:desc="10 bits for transfer" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="11_BIT" edc:desc="11 bits for transfer" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="12_BIT" edc:desc="12 bits for transfer" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="13 bits for transfer" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="14_BIT" edc:desc="14 bits for transfer" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="15_BIT" edc:desc="15 bits for transfer" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="16_BIT" edc:desc="16 bits for transfer" edc:when="(field &amp; 0xF) == 0x08"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCBR" edc:nzwidth="0x8" edc:desc="Serial Clock Bit Rate"/>
            <edc:SFRFieldDef edc:cname="DLYBS" edc:nzwidth="0x8" edc:desc="Delay Before SPCK"/>
            <edc:SFRFieldDef edc:cname="DLYBCT" edc:nzwidth="0x8" edc:desc="Delay Between Consecutive Transfers"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_SPI_CSR1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4001C434">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity"/>
            <edc:SFRFieldDef edc:cname="NCPHA" edc:nzwidth="0x1" edc:desc="Clock Phase"/>
            <edc:SFRFieldDef edc:cname="CSNAAT" edc:nzwidth="0x1" edc:desc="Chip Select Not Active After Transfer (Ignored if CSAAT = 1)"/>
            <edc:SFRFieldDef edc:cname="CSAAT" edc:nzwidth="0x1" edc:desc="Chip Select Active After Transfer"/>
            <edc:SFRFieldDef edc:cname="BITS" edc:nzwidth="0x4" edc:desc="Bits Per Transfer">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits for transfer" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits for transfer" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="10_BIT" edc:desc="10 bits for transfer" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="11_BIT" edc:desc="11 bits for transfer" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="12_BIT" edc:desc="12 bits for transfer" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="13 bits for transfer" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="14_BIT" edc:desc="14 bits for transfer" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="15_BIT" edc:desc="15 bits for transfer" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="16_BIT" edc:desc="16 bits for transfer" edc:when="(field &amp; 0xF) == 0x08"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCBR" edc:nzwidth="0x8" edc:desc="Serial Clock Bit Rate"/>
            <edc:SFRFieldDef edc:cname="DLYBS" edc:nzwidth="0x8" edc:desc="Delay Before SPCK"/>
            <edc:SFRFieldDef edc:cname="DLYBCT" edc:nzwidth="0x8" edc:desc="Delay Between Consecutive Transfers"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x4001C438"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_SPI_FMR" edc:nzwidth="0x20" edc:access="--nnnnnn--nnnnnn----------nn--nn" edc:impl="0x3F3F0033" edc:_addr="0x4001C440">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="TXRDYM" edc:nzwidth="0x2" edc:desc="Transmit Data Register Empty Mode">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="TDRE will be at level '1' when at least one data can be written in the transmit FIFO. When DMA is enabled to transfer data, the chunk of 1 data (byte or halfword) must be configured in the DMA depending on FLEX_SPI_CSR0.BITS. If the transfer is performed by software, the access type (byte, halfword) must be defined depending on FLEX_SPI_CSR0.BITS." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="TDRE will be at level '1' when at least two data can be written in the transmit FIFO. FIFO. To minimize system bus load, when DMA is enabled to transfer data, the chunk of 1 word (1 word carries 2 data) must be configured in the DMA. If the transfer is performed by software, the access type must be defined as word (2 data per access, 1 access)." edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXRDYM" edc:nzwidth="0x2" edc:desc="Receive Data Register Full Mode">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="RDRF will be at level '1' when at least one unread data is in the receive FIFO. When DMA is enabled to transfer data and FLEX_SPI_CSR0.BITS=0 (8 bits transfered on SPI line), the chunk of 1 byte must be configured in the DMA. When FLEX_SPI_CSR0.BITS&gt;0 (9 to 16 bits transfered on SPI line), the chunk of 1 halfword must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte or halfword depending on FLEX_SPI_CSR0.BITS." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="RDRF will be at level '1' when at least two unread data are in the receive FIFO. To minimize system bus load, when DMA is enabled to transfer data and FLEX_SPI_CSR0.BITS=0 (8 bits transfered on SPI line), the chunk of 1 halfword (1 halfword carries 2 bytes) must be configured in the DMA. When FLEX_SPI_CSR0.BITS&gt;0 (9 to 16 bits transfered on SPI line), the chunk of 1 word (1 word carries 2 halfwords) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as halfword (2 bytes per access, 1 access when FLEX_SPI_CSR0.BITS=0), or word (2 halfwords per access, 2 accesses when FLEX_SPI_CSR0.BITS&gt;0)." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="RDRF will be at level '1' when at least four unread data are in the receive FIFO. To minimize system bus load, when DMA is enabled to transfer data and FLEX_SPI_CSR0.BITS=0 (8 bits transfered on SPI line), the chunk of 1 word (1 halfword carries 4 bytes) must be configured in the DMA. When FLEX_SPI_CSR0.BITS&gt;0 (9 to 16 bits transfered on SPI line), the chunk of 2 words (1 word carries 4 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as word (4 bytes per access, 1 access when FLEX_SPI_CSR0.BITS=0 or 2 halfwords per access, 2 accesses when FLEX_SPI_CSR0.BITS&gt;0)." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="TXFTHRES" edc:nzwidth="0x6" edc:desc="Transmit FIFO Threshold"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXFTHRES" edc:nzwidth="0x6" edc:desc="Receive FIFO Threshold"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_SPI_FLR" edc:nzwidth="0x20" edc:access="----------rrrrrr----------rrrrrr" edc:impl="0x3F003F" edc:_addr="0x4001C444">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="TXFL" edc:nzwidth="0x6" edc:desc="Transmit FIFO Level"/>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="RXFL" edc:nzwidth="0x6" edc:desc="Receive FIFO Level"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_SPI_CMPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4001C448">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="VAL1" edc:nzwidth="0x10" edc:desc="First Comparison Value for Received Character"/>
            <edc:SFRFieldDef edc:cname="VAL2" edc:nzwidth="0x10" edc:desc="Second Comparison Value for Received Character"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x98" edc:_addr="0x4001C44C"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_SPI_WPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:impl="0xFFFFFF07" edc:_addr="0x4001C4E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="WPEN" edc:nzwidth="0x1" edc:desc="Write Protection Enable"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:nzwidth="0x1" edc:desc="Write Protection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:nzwidth="0x1" edc:desc="Write Protection Control Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of bits WPEN, WPITEN and WPCREN. Always reads as 0" edc:when="(field &amp; 0xFFFFFF) == 0x535049"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_SPI_WPSR" edc:nzwidth="0x20" edc:access="----------------rrrrrrrr-------r" edc:impl="0xFF01" edc:_addr="0x4001C4E8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="WPVS" edc:nzwidth="0x1" edc:desc="Write Protection Violation Status"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:nzwidth="0x8" edc:desc="Write Protection Violation Source"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x114" edc:_addr="0x4001C4EC"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_TWI_CR" edc:nzwidth="0x20" edc:access="--ww-www------wwwwwwwwwwwwwwwwww" edc:impl="0x3703FFFF" edc:_addr="0x4001C600">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="START" edc:nzwidth="0x1" edc:desc="Send a START Condition"/>
            <edc:SFRFieldDef edc:cname="STOP" edc:nzwidth="0x1" edc:desc="Send a STOP Condition"/>
            <edc:SFRFieldDef edc:cname="MSEN" edc:nzwidth="0x1" edc:desc="TWI Host Mode Enabled"/>
            <edc:SFRFieldDef edc:cname="MSDIS" edc:nzwidth="0x1" edc:desc="TWI Host Mode Disabled"/>
            <edc:SFRFieldDef edc:cname="SVEN" edc:nzwidth="0x1" edc:desc="TWI Client Mode Enabled"/>
            <edc:SFRFieldDef edc:cname="SVDIS" edc:nzwidth="0x1" edc:desc="TWI Client Mode Disabled"/>
            <edc:SFRFieldDef edc:cname="QUICK" edc:nzwidth="0x1" edc:desc="SMBus Quick Command"/>
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="HSEN" edc:nzwidth="0x1" edc:desc="TWI High-Speed Mode Enabled"/>
            <edc:SFRFieldDef edc:cname="HSDIS" edc:nzwidth="0x1" edc:desc="TWI High-Speed Mode Disabled"/>
            <edc:SFRFieldDef edc:cname="SMBEN" edc:nzwidth="0x1" edc:desc="SMBus Mode Enabled"/>
            <edc:SFRFieldDef edc:cname="SMBDIS" edc:nzwidth="0x1" edc:desc="SMBus Mode Disabled"/>
            <edc:SFRFieldDef edc:cname="PECEN" edc:nzwidth="0x1" edc:desc="Packet Error Checking Enable"/>
            <edc:SFRFieldDef edc:cname="PECDIS" edc:nzwidth="0x1" edc:desc="Packet Error Checking Disable"/>
            <edc:SFRFieldDef edc:cname="PECRQ" edc:nzwidth="0x1" edc:desc="PEC Request"/>
            <edc:SFRFieldDef edc:cname="CLEAR" edc:nzwidth="0x1" edc:desc="Bus CLEAR Command"/>
            <edc:SFRFieldDef edc:cname="ACMEN" edc:nzwidth="0x1" edc:desc="Alternative Command Mode Enable"/>
            <edc:SFRFieldDef edc:cname="ACMDIS" edc:nzwidth="0x1" edc:desc="Alternative Command Mode Disable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="TXFCLR" edc:nzwidth="0x1" edc:desc="Transmit FIFO Clear"/>
            <edc:SFRFieldDef edc:cname="RXFCLR" edc:nzwidth="0x1" edc:desc="Receive FIFO Clear"/>
            <edc:SFRFieldDef edc:cname="TXFLCLR" edc:nzwidth="0x1" edc:desc="Transmit FIFO Lock CLEAR"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="FIFODIS" edc:nzwidth="0x1" edc:desc="FIFO Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_TWI_MMR" edc:nzwidth="0x20" edc:access="-------n-nnnnnnn-nnn--nn--------" edc:impl="0x17F7300" edc:_addr="0x4001C604">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="IADRSZ" edc:nzwidth="0x2" edc:desc="Internal Device Address Size">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No internal device address" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="1_BYTE" edc:desc="One-byte internal device address" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="2_BYTE" edc:desc="Two-byte internal device address" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="3_BYTE" edc:desc="Three-byte internal device address" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MREAD" edc:nzwidth="0x1" edc:desc="Host Read Direction"/>
            <edc:SFRFieldDef edc:cname="SCLRBL" edc:nzwidth="0x2" edc:desc="SCL Rise Boost Level"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DADR" edc:nzwidth="0x7" edc:desc="Device Address"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NOAP" edc:nzwidth="0x1" edc:desc="No Auto-Stop On NACK Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_TWI_SMR" edc:nzwidth="0x20" edc:access="nnnn-----nnnnnnn-nnnnnnnnnnnnn-n" edc:impl="0xF07F7FFD" edc:_addr="0x4001C608">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="NACKEN" edc:nzwidth="0x1" edc:desc="Client Receiver Data Phase NACK Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SMDA" edc:nzwidth="0x1" edc:desc="SMBus Default Address"/>
            <edc:SFRFieldDef edc:cname="SMHH" edc:nzwidth="0x1" edc:desc="SMBus Host Header"/>
            <edc:SFRFieldDef edc:cname="SADAT" edc:nzwidth="0x1" edc:desc="Client Address Treated as Data"/>
            <edc:SFRFieldDef edc:cname="BSEL" edc:nzwidth="0x1" edc:desc="TWI Bus Selection"/>
            <edc:SFRFieldDef edc:cname="SCLWSDIS" edc:nzwidth="0x1" edc:desc="Clock Wait State Disable"/>
            <edc:SFRFieldDef edc:cname="SNIFF" edc:nzwidth="0x1" edc:desc="Client Sniffer Mode"/>
            <edc:SFRFieldDef edc:cname="MASK" edc:nzwidth="0x7" edc:desc="Client Address Mask"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SADR" edc:nzwidth="0x7" edc:desc="Client Address"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="SADR1EN" edc:nzwidth="0x1" edc:desc="Client Address 1 Enable"/>
            <edc:SFRFieldDef edc:cname="SADR2EN" edc:nzwidth="0x1" edc:desc="Client Address 2 Enable"/>
            <edc:SFRFieldDef edc:cname="SADR3EN" edc:nzwidth="0x1" edc:desc="Client Address 3 Enable"/>
            <edc:SFRFieldDef edc:cname="DATAMEN" edc:nzwidth="0x1" edc:desc="Data Matching Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_TWI_IADR" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:impl="0xFFFFFF" edc:_addr="0x4001C60C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="IADR" edc:nzwidth="0x18" edc:desc="Internal Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_TWI_CWGR" edc:nzwidth="0x20" edc:access="--nnnnnn---n-nnnnnnnnnnnnnnnnnnn" edc:impl="0x3F17FFFF" edc:_addr="0x4001C610">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="CLDIV" edc:nzwidth="0x8" edc:desc="Clock Low Divider"/>
            <edc:SFRFieldDef edc:cname="CHDIV" edc:nzwidth="0x8" edc:desc="Clock High Divider"/>
            <edc:SFRFieldDef edc:cname="CKDIV" edc:nzwidth="0x3" edc:desc="Clock Divider"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BRSRCCLK" edc:nzwidth="0x1" edc:desc="Bit Rate Source Clock">
              <edc:SFRFieldSemantic edc:cname="PERIPH_CLK" edc:desc="The peripheral clock is the source clock for the bit rate generation." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="GCLK is the source clock for the bit rate generation, thus the bit rate can be independent of the core/peripheral clock." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="HOLD" edc:nzwidth="0x6" edc:desc="TWD Hold Time Versus TWCK Falling"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x4001C614"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_TWI_SR" edc:nzwidth="0x20" edc:access="-----rrrr-rrrrrrrrrrrrrrrrrrrrrr" edc:impl="0x7BFFFFF" edc:_addr="0x4001C620">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="TXCOMP" edc:nzwidth="0x1" edc:desc="Transmission Completed (cleared by writing FLEX_TWI_THR)"/>
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="Receive Holding Register Ready (cleared when reading FLEX_TWI_RHR)"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="Transmit Holding Register Ready (cleared by writing FLEX_TWI_THR)"/>
            <edc:SFRFieldDef edc:cname="SVREAD" edc:nzwidth="0x1" edc:desc="Client Read"/>
            <edc:SFRFieldDef edc:cname="SVACC" edc:nzwidth="0x1" edc:desc="Client Access"/>
            <edc:SFRFieldDef edc:cname="GACC" edc:nzwidth="0x1" edc:desc="General Call Access (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:nzwidth="0x1" edc:desc="Underrun Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="NACK" edc:nzwidth="0x1" edc:desc="Not Acknowledged (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="ARBLST" edc:nzwidth="0x1" edc:desc="Arbitration Lost (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SCLWS" edc:nzwidth="0x1" edc:desc="Clock Wait State"/>
            <edc:SFRFieldDef edc:cname="EOSACC" edc:nzwidth="0x1" edc:desc="End Of Client Access (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of RX Buffer (cleared by writing FLEX_TWI_RCR or FLEX_TWI_RNCR)"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of TX Buffer (cleared by writing FLEX_TWI_TCR or FLEX_TWI_TNCR)"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="RX Buffer Full (cleared by writing FLEX_TWI_RCR or FLEX_TWI_RNCR)"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="TX Buffer Empty (cleared by writing FLEX_TWI_TCR or FLEX_TWI_TNCR)"/>
            <edc:SFRFieldDef edc:cname="MCACK" edc:nzwidth="0x1" edc:desc="Host Code Acknowledge (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SMBAF" edc:nzwidth="0x1" edc:desc="SMBus Alert Flag"/>
            <edc:SFRFieldDef edc:cname="TOUT" edc:nzwidth="0x1" edc:desc="Timeout Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="PECERR" edc:nzwidth="0x1" edc:desc="PEC Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SMBDAM" edc:nzwidth="0x1" edc:desc="SMBus Default Address Match (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SMBHHM" edc:nzwidth="0x1" edc:desc="SMBus Host Header Address Match (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFLOCK" edc:nzwidth="0x1" edc:desc="Transmit FIFO Lock"/>
            <edc:SFRFieldDef edc:cname="SCL" edc:nzwidth="0x1" edc:desc="SCL Line Value"/>
            <edc:SFRFieldDef edc:cname="SDA" edc:nzwidth="0x1" edc:desc="SDA Line Value"/>
            <edc:SFRFieldDef edc:cname="SR" edc:nzwidth="0x1" edc:desc="Start Repeated"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_TWI_IER" edc:nzwidth="0x20" edc:access="----------wwww-wwwwwwwwwwwww-www" edc:impl="0x3DFFF7" edc:_addr="0x4001C624">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="TXCOMP" edc:nzwidth="0x1" edc:desc="Transmission Completed Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="Receive Holding Register Ready Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="Transmit Holding Register Ready Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SVACC" edc:nzwidth="0x1" edc:desc="Client Access Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="GACC" edc:nzwidth="0x1" edc:desc="General Call Access Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:nzwidth="0x1" edc:desc="Underrun Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="NACK" edc:nzwidth="0x1" edc:desc="Not Acknowledge Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ARBLST" edc:nzwidth="0x1" edc:desc="Arbitration Lost Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SCL_WS" edc:nzwidth="0x1" edc:desc="Clock Wait State Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EOSACC" edc:nzwidth="0x1" edc:desc="End Of Client Access Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MCACK" edc:nzwidth="0x1" edc:desc="Host Code Acknowledge Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TOUT" edc:nzwidth="0x1" edc:desc="Timeout Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PECERR" edc:nzwidth="0x1" edc:desc="PEC Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SMBDAM" edc:nzwidth="0x1" edc:desc="SMBus Default Address Match Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SMBHHM" edc:nzwidth="0x1" edc:desc="SMBus Host Header Address Match Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_TWI_IDR" edc:nzwidth="0x20" edc:access="----------wwww-wwwwwwwwwwwww-www" edc:impl="0x3DFFF7" edc:_addr="0x4001C628">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="TXCOMP" edc:nzwidth="0x1" edc:desc="Transmission Completed Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="Receive Holding Register Ready Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="Transmit Holding Register Ready Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SVACC" edc:nzwidth="0x1" edc:desc="Client Access Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="GACC" edc:nzwidth="0x1" edc:desc="General Call Access Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:nzwidth="0x1" edc:desc="Underrun Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="NACK" edc:nzwidth="0x1" edc:desc="Not Acknowledge Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ARBLST" edc:nzwidth="0x1" edc:desc="Arbitration Lost Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SCL_WS" edc:nzwidth="0x1" edc:desc="Clock Wait State Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="EOSACC" edc:nzwidth="0x1" edc:desc="End Of Client Access Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="MCACK" edc:nzwidth="0x1" edc:desc="Host Code Acknowledge Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TOUT" edc:nzwidth="0x1" edc:desc="Timeout Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="PECERR" edc:nzwidth="0x1" edc:desc="PEC Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SMBDAM" edc:nzwidth="0x1" edc:desc="SMBus Default Address Match Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SMBHHM" edc:nzwidth="0x1" edc:desc="SMBus Host Header Address Match Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_TWI_IMR" edc:nzwidth="0x20" edc:access="----------rrrr-rrrrrrrrrrrrr-rrr" edc:impl="0x3DFFF7" edc:_addr="0x4001C62C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="TXCOMP" edc:nzwidth="0x1" edc:desc="Transmission Completed Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="Receive Holding Register Ready Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="Transmit Holding Register Ready Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SVACC" edc:nzwidth="0x1" edc:desc="Client Access Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="GACC" edc:nzwidth="0x1" edc:desc="General Call Access Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:nzwidth="0x1" edc:desc="Underrun Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="NACK" edc:nzwidth="0x1" edc:desc="Not Acknowledge Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ARBLST" edc:nzwidth="0x1" edc:desc="Arbitration Lost Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="SCL_WS" edc:nzwidth="0x1" edc:desc="Clock Wait State Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="EOSACC" edc:nzwidth="0x1" edc:desc="End Of Client Access Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="MCACK" edc:nzwidth="0x1" edc:desc="Host Code Acknowledge Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TOUT" edc:nzwidth="0x1" edc:desc="Timeout Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="PECERR" edc:nzwidth="0x1" edc:desc="PEC Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="SMBDAM" edc:nzwidth="0x1" edc:desc="SMBus Default Address Match Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="SMBHHM" edc:nzwidth="0x1" edc:desc="SMBus Host Header Address Match Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_TWI_RHR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4001C630">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="RXDATA0" edc:nzwidth="0x8" edc:desc="Host or Client Receive Holding Data 0"/>
            <edc:SFRFieldDef edc:cname="RXDATA1" edc:nzwidth="0x8" edc:desc="Host or Client Receive Holding Data 1"/>
            <edc:AdjustPoint edc:offset="-6"/>
            <edc:SFRFieldDef edc:cname="PSTATE" edc:nzwidth="0x1" edc:desc="Stop State (Client Sniffer Mode only)"/>
            <edc:SFRFieldDef edc:cname="ASTATE" edc:nzwidth="0x2" edc:desc="Acknowledge State (Client Sniffer Mode only)">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Acknowledge or Nacknowledge detected after previously logged data" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ACK" edc:desc="Acknowledge (A) detected after previously logged data" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="NACK" edc:desc="Nacknowledge (NA) detected after previously logged data" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="UNDEF" edc:desc="Not defined" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RXDATA2" edc:nzwidth="0x8" edc:desc="Host or Client Receive Holding Data 2"/>
            <edc:SFRFieldDef edc:cname="RXDATA3" edc:nzwidth="0x8" edc:desc="Host or Client Receive Holding Data 3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_TWI_THR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4001C634">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="TXDATA0" edc:nzwidth="0x8" edc:desc="Host or Client Transmit Holding Data 0"/>
            <edc:SFRFieldDef edc:cname="TXDATA1" edc:nzwidth="0x8" edc:desc="Host or Client Transmit Holding Data 1"/>
            <edc:SFRFieldDef edc:cname="TXDATA2" edc:nzwidth="0x8" edc:desc="Host or Client Transmit Holding Data 2"/>
            <edc:SFRFieldDef edc:cname="TXDATA3" edc:nzwidth="0x8" edc:desc="Host or Client Transmit Holding Data 3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_TWI_SMBTR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn----nnnn" edc:impl="0xFFFFFF0F" edc:_addr="0x4001C638">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="PRESC" edc:nzwidth="0x4" edc:desc="SMBus Clock Prescaler"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TLOWS" edc:nzwidth="0x8" edc:desc="Client Clock Stretch Maximum Cycles"/>
            <edc:SFRFieldDef edc:cname="TLOWM" edc:nzwidth="0x8" edc:desc="Host Clock Stretch Maximum Cycles"/>
            <edc:SFRFieldDef edc:cname="THMAX" edc:nzwidth="0x8" edc:desc="Clock High Maximum Cycles"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_TWI_HSR" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:impl="0xFF" edc:_addr="0x4001C63C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="MCODE" edc:nzwidth="0x8" edc:desc="TWI High Speed Host Code"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_TWI_ACR" edc:nzwidth="0x20" edc:access="------nnnnnnnnnn------nnnnnnnnnn" edc:impl="0x3FF03FF" edc:_addr="0x4001C640">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="DATAL" edc:nzwidth="0x8" edc:desc="Data Length"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Transfer Direction"/>
            <edc:SFRFieldDef edc:cname="PEC" edc:nzwidth="0x1" edc:desc="PEC Request (SMBus Mode only)"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="NDATAL" edc:nzwidth="0x8" edc:desc="Next Data Length"/>
            <edc:SFRFieldDef edc:cname="NDIR" edc:nzwidth="0x1" edc:desc="Next Transfer Direction"/>
            <edc:SFRFieldDef edc:cname="NPEC" edc:nzwidth="0x1" edc:desc="Next PEC Request (SMBus Mode only)"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_TWI_FILTR" edc:nzwidth="0x20" edc:access="---------------------nnn------nn" edc:impl="0x703" edc:_addr="0x4001C644">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="FILT" edc:nzwidth="0x1" edc:desc="RX Digital Filter"/>
            <edc:SFRFieldDef edc:cname="PADFEN" edc:nzwidth="0x1" edc:desc="PAD Filter Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="THRES" edc:nzwidth="0x3" edc:desc="Digital Filter Threshold"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_TWI_HSCWGR" edc:nzwidth="0x20" edc:access="-------------nnnnnnnnnnnnnnnnnnn" edc:impl="0x7FFFF" edc:_addr="0x4001C648">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="HSCLDIV" edc:nzwidth="0x8" edc:desc="High Speed Clock Low Divider"/>
            <edc:SFRFieldDef edc:cname="HSCHDIV" edc:nzwidth="0x8" edc:desc="High Speed Clock High Divider"/>
            <edc:SFRFieldDef edc:cname="HSCKDIV" edc:nzwidth="0x3" edc:desc="High Speed Clock Divider"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_TWI_SWMR" edc:nzwidth="0x20" edc:access="nnnnnnnn-nnnnnnn-nnnnnnn-nnnnnnn" edc:impl="0xFF7F7F7F" edc:_addr="0x4001C64C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="SADR1" edc:nzwidth="0x7" edc:desc="Client Address 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SADR2" edc:nzwidth="0x7" edc:desc="Client Address 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SADR3" edc:nzwidth="0x7" edc:desc="Client Address 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DATAM" edc:nzwidth="0x8" edc:desc="Data Match"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_TWI_FMR" edc:nzwidth="0x20" edc:access="--nnnnnn--nnnnnn----------nn--nn" edc:impl="0x3F3F0033" edc:_addr="0x4001C650">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="TXRDYM" edc:nzwidth="0x2" edc:desc="Transmitter Ready Mode">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="TXRDY will be at level '1' when at least one data can be written in the transmit FIFO. When DMA is enabled to transfer data, the chunk of 1 byte must be configured in the DMA. If the transfer is performed by software, the access type must be defined as byte." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="TXRDY will be at level '1' when at least two data can be written in the transmit FIFO. To minimize system bus load, when DMA is enabled to transfer data, the chunk of 1 halfword (1 halfword carries 2 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 2 accesses) or halfword (2 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="TXRDY will be at level '1' when at least four data can be written in the transmit FIFO. To minimize system bus load, when DMA is enabled to transfer data, the chunk of 1 word (1 word carries 4 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 4 accesses), halfword (2 bytes per access, 2 accesses) or word (4 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXRDYM" edc:nzwidth="0x2" edc:desc="Receiver Ready Mode">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="RXRDY will be at level '1' when at least one unread data is in the receive FIFO. When DMA is enabled to transfer data the chunk of 1 byte must be configured in the DMA. If the transfer is performed by software, the access type (byte, halfword) must be defined accordingly." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="RXRDY will be at level '1' when at least two unread data are in the receive FIFO. To minimize system bus load, when DMA is enabled to transfer data, the chunk of 1 halfword (1 halfword carries 2 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 2 accesses) or halfword (2 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="RXRDY will be at level '1' when at least four unread data are in the receive FIFO. To minimize system bus load, when DMA is enabled to transfer data, the chunk of 1 word (1 word carries 4 bytes) must be configured in the DMA. If the transfer is performed by software, the access type can be defined as byte (1 byte per access, 4 accesses), halfword (2 bytes per access, 2 accesses) or word (4 bytes per access, 1 single access)." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="TXFTHRES" edc:nzwidth="0x6" edc:desc="Transmit FIFO Threshold"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXFTHRES" edc:nzwidth="0x6" edc:desc="Receive FIFO Threshold"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_TWI_FLR" edc:nzwidth="0x20" edc:access="----------rrrrrr----------rrrrrr" edc:impl="0x3F003F" edc:_addr="0x4001C654">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="TXFL" edc:nzwidth="0x6" edc:desc="Transmit FIFO Level"/>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="RXFL" edc:nzwidth="0x6" edc:desc="Receive FIFO Level"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x4001C658"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_TWI_FSR" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:impl="0xFF" edc:_addr="0x4001C660">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Empty Flag (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Full Flag (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Threshold Flag (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="Receive FIFO Empty Flag"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="Receive FIFO Full Flag"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="Receive FIFO Threshold Flag"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Pointer Error Flag"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="Receive FIFO Pointer Error Flag"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_TWI_FIER" edc:nzwidth="0x20" edc:access="------------------------wwwwwwww" edc:impl="0xFF" edc:_addr="0x4001C664">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_TWI_FIDR" edc:nzwidth="0x20" edc:access="------------------------wwwwwwww" edc:impl="0xFF" edc:_addr="0x4001C668">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_TWI_FIMR" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:impl="0xFF" edc:_addr="0x4001C66C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x74" edc:_addr="0x4001C670"/>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_TWI_WPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:impl="0xFFFFFF07" edc:_addr="0x4001C6E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="WPEN" edc:nzwidth="0x1" edc:desc="Write Protection Enable"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:nzwidth="0x1" edc:desc="Write Protection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:nzwidth="0x1" edc:desc="Write Protection Control Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of bits WPEN, WPITEN and WPCREN. Always reads as 0" edc:when="(field &amp; 0xFFFFFF) == 0x545749"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FLEXCOM7" edc:cname="FLEX_TWI_WPSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrr-------r" edc:impl="0xFFFFFF01" edc:_addr="0x4001C6E8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM7">
            <edc:SFRFieldDef edc:cname="WPVS" edc:nzwidth="0x1" edc:desc="Write Protect Violation Status (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:nzwidth="0x18" edc:desc="Write Protection Violation Source"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3914" edc:_addr="0x4001C6EC"/>
      <edc:SFRDef ltx:memberofperipheral="QSPI" edc:cname="QSPI_CR" edc:nzwidth="0x20" edc:access="-------w-------------wwww-----ww" edc:impl="0x1000783" edc:_addr="0x40020000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="QSPI">
            <edc:SFRFieldDef edc:cname="QSPIEN" edc:nzwidth="0x1" edc:desc="QSPI Enable"/>
            <edc:SFRFieldDef edc:cname="QSPIDIS" edc:nzwidth="0x1" edc:desc="QSPI Disable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="QSPI Software Reset"/>
            <edc:SFRFieldDef edc:cname="UPDCFG" edc:nzwidth="0x1" edc:desc="Update Configuration"/>
            <edc:SFRFieldDef edc:cname="STTFR" edc:nzwidth="0x1" edc:desc="Start Transfer"/>
            <edc:SFRFieldDef edc:cname="RTOUT" edc:nzwidth="0x1" edc:desc="Reset Time-out"/>
            <edc:AdjustPoint edc:offset="0xD"/>
            <edc:SFRFieldDef edc:cname="LASTXFER" edc:nzwidth="0x1" edc:desc="Last Transfer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="QSPI" edc:cname="QSPI_MR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnn----nnnnn-nn-n-n" edc:impl="0xFFFF0FB5" edc:_addr="0x40020004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="QSPI">
            <edc:SFRFieldDef edc:cname="SMM" edc:nzwidth="0x1" edc:desc="Serial Memory Mode">
              <edc:SFRFieldSemantic edc:cname="SPI" edc:desc="The QSPI is in SPI mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="MEMORY" edc:desc="The QSPI is in Serial Memory mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="WDRBT" edc:nzwidth="0x1" edc:desc="Wait Data Read Before Transfer">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="No effect. In SPI mode, a transfer can be initiated whatever the state of QSPI_RDR is." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="In SPI mode, a transfer can start only if QSPI_RDR is empty, i.e., does not contain any unread data. This mode prevents overrun error in reception." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CSMODE" edc:nzwidth="0x2" edc:desc="Chip Select Mode">
              <edc:SFRFieldSemantic edc:cname="NOT_RELOADED" edc:desc="The chip select is deasserted if QSPI_TDR.TD has not been reloaded before the end of the current transfer." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LASTXFER" edc:desc="The chip select is deasserted when the bit LASTXFER is written to '1' and the character written in QSPI_TDR.TD has been transferred." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SYSTEMATICALLY" edc:desc="The chip select is deasserted systematically after each transfer." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TAMPCLR" edc:nzwidth="0x1" edc:desc="Tamper Clear Enable"/>
            <edc:SFRFieldDef edc:cname="NBBITS" edc:nzwidth="0x4" edc:desc="Number Of Bits Per Transfer">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits for transfer" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="16_BIT" edc:desc="16 bits for transfer" edc:when="(field &amp; 0xF) == 0x08"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="DLYBCT" edc:nzwidth="0x8" edc:desc="Delay Between Consecutive Transfers"/>
            <edc:SFRFieldDef edc:cname="DLYCS" edc:nzwidth="0x8" edc:desc="Minimum Inactive QCS Delay"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="QSPI" edc:cname="QSPI_RDR" edc:nzwidth="0x20" edc:access="----------------rrrrrrrrrrrrrrrr" edc:impl="0xFFFF" edc:_addr="0x40020008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="QSPI">
            <edc:SFRFieldDef edc:cname="RD" edc:nzwidth="0x10" edc:desc="Receive Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="QSPI" edc:cname="QSPI_TDR" edc:nzwidth="0x20" edc:access="----------------wwwwwwwwwwwwwwww" edc:impl="0xFFFF" edc:_addr="0x4002000C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="QSPI">
            <edc:SFRFieldDef edc:cname="TD" edc:nzwidth="0x10" edc:desc="Transmit Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="QSPI" edc:cname="QSPI_ISR" edc:nzwidth="0x20" edc:access="--------------r-rrrrrr-rrrrrrrrr" edc:impl="0x2FDFF" edc:_addr="0x40020010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="QSPI">
            <edc:SFRFieldDef edc:cname="RDRF" edc:nzwidth="0x1" edc:desc="Receive Data Register Full (cleared by reading QSPI_RDR)"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:nzwidth="0x1" edc:desc="Transmit Data Register Empty (cleared by writing QSPI_TDR)"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="Transmission Registers Empty (cleared by writing QSPI_TDR)"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:nzwidth="0x1" edc:desc="Overrun Error Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of RX buffer"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of TX buffer"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="RX Buffer Full"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="TX Buffer Empty"/>
            <edc:SFRFieldDef edc:cname="CSR" edc:nzwidth="0x1" edc:desc="Chip Select Rise (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="INSTRE" edc:nzwidth="0x1" edc:desc="Instruction End Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="LWRA" edc:nzwidth="0x1" edc:desc="Last Write Access (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="QITF" edc:nzwidth="0x1" edc:desc="QSPI Interrupt Fall"/>
            <edc:SFRFieldDef edc:cname="QITR" edc:nzwidth="0x1" edc:desc="QSPI Interrupt Rise"/>
            <edc:SFRFieldDef edc:cname="CSFA" edc:nzwidth="0x1" edc:desc="Chip Select Fall Autoclear"/>
            <edc:SFRFieldDef edc:cname="CSRA" edc:nzwidth="0x1" edc:desc="Chip Select Rise Autoclear"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TOUT" edc:nzwidth="0x1" edc:desc="QSPI Time-out"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="QSPI" edc:cname="QSPI_IER" edc:nzwidth="0x20" edc:access="--------------w-wwwwww-wwwwwwwww" edc:impl="0x2FDFF" edc:_addr="0x40020014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="QSPI">
            <edc:SFRFieldDef edc:cname="RDRF" edc:nzwidth="0x1" edc:desc="Receive Data Register Full Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:nzwidth="0x1" edc:desc="Transmit Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="Transmission Registers Empty Enable"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CSR" edc:nzwidth="0x1" edc:desc="Chip Select Rise Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="INSTRE" edc:nzwidth="0x1" edc:desc="Instruction End Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LWRA" edc:nzwidth="0x1" edc:desc="Last Write Access Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="QITF" edc:nzwidth="0x1" edc:desc="QSPI Interrupt Fall Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="QITR" edc:nzwidth="0x1" edc:desc="QSPI Interrupt Rise Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CSFA" edc:nzwidth="0x1" edc:desc="Chip Select Fall Autoclear Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CSRA" edc:nzwidth="0x1" edc:desc="Chip Select Rise Autoclear Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TOUT" edc:nzwidth="0x1" edc:desc="QSPI Time-out Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="QSPI" edc:cname="QSPI_IDR" edc:nzwidth="0x20" edc:access="--------------w-wwwwww-wwwwwwwww" edc:impl="0x2FDFF" edc:_addr="0x40020018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="QSPI">
            <edc:SFRFieldDef edc:cname="RDRF" edc:nzwidth="0x1" edc:desc="Receive Data Register Full Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:nzwidth="0x1" edc:desc="Transmit Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="Transmission Registers Empty Disable"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CSR" edc:nzwidth="0x1" edc:desc="Chip Select Rise Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="INSTRE" edc:nzwidth="0x1" edc:desc="Instruction End Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LWRA" edc:nzwidth="0x1" edc:desc="Last Write Access Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="QITF" edc:nzwidth="0x1" edc:desc="QSPI Interrupt Fall Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="QITR" edc:nzwidth="0x1" edc:desc="QSPI Interrupt Rise Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CSFA" edc:nzwidth="0x1" edc:desc="Chip Select Fall Autoclear Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CSRA" edc:nzwidth="0x1" edc:desc="Chip Select Rise Autoclear Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TOUT" edc:nzwidth="0x1" edc:desc="QSPI Time-out Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="QSPI" edc:cname="QSPI_IMR" edc:nzwidth="0x20" edc:access="--------------r-rrrrrr-rrrrrrrrr" edc:impl="0x2FDFF" edc:_addr="0x4002001C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="QSPI">
            <edc:SFRFieldDef edc:cname="RDRF" edc:nzwidth="0x1" edc:desc="Receive Data Register Full Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:nzwidth="0x1" edc:desc="Transmit Data Register Empty Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="Transmission Registers Empty Mask"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="CSR" edc:nzwidth="0x1" edc:desc="Chip Select Rise Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="INSTRE" edc:nzwidth="0x1" edc:desc="Instruction End Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LWRA" edc:nzwidth="0x1" edc:desc="Last Write Access Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="QITF" edc:nzwidth="0x1" edc:desc="QSPI Interrupt Fall Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="QITR" edc:nzwidth="0x1" edc:desc="QSPI Interrupt Rise Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="CSFA" edc:nzwidth="0x1" edc:desc="Chip Select Fall Autoclear Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="CSRA" edc:nzwidth="0x1" edc:desc="Chip Select Rise Autoclear Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TOUT" edc:nzwidth="0x1" edc:desc="QSPI Time-out Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="QSPI" edc:cname="QSPI_SCR" edc:nzwidth="0x20" edc:access="--------nnnnnnnn--------------nn" edc:impl="0xFF0003" edc:_addr="0x40020020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="QSPI">
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity"/>
            <edc:SFRFieldDef edc:cname="CPHA" edc:nzwidth="0x1" edc:desc="Clock Phase"/>
            <edc:AdjustPoint edc:offset="0xE"/>
            <edc:SFRFieldDef edc:cname="DLYBS" edc:nzwidth="0x8" edc:desc="Delay Before QSCK"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="QSPI" edc:cname="QSPI_SR" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:impl="0x1F" edc:_addr="0x40020024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="QSPI">
            <edc:SFRFieldDef edc:cname="SYNCBSY" edc:nzwidth="0x1" edc:desc="Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="QSPIENS" edc:nzwidth="0x1" edc:desc="QSPI Enable Status"/>
            <edc:SFRFieldDef edc:cname="CSS" edc:nzwidth="0x1" edc:desc="Chip Select Status"/>
            <edc:SFRFieldDef edc:cname="RBUSY" edc:nzwidth="0x1" edc:desc="Read Busy"/>
            <edc:SFRFieldDef edc:cname="HIDLE" edc:nzwidth="0x1" edc:desc="QSPI Idle"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x40020028"/>
      <edc:SFRDef ltx:memberofperipheral="QSPI" edc:cname="QSPI_IAR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40020030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="QSPI">
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0x20" edc:desc="Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="QSPI" edc:cname="QSPI_WICR" edc:nzwidth="0x20" edc:access="--------nnnnnnnn--------nnnnnnnn" edc:impl="0xFF00FF" edc:_addr="0x40020034">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="QSPI">
            <edc:SFRFieldDef edc:cname="WRINST" edc:nzwidth="0x8" edc:desc="Write Instruction Code"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="WROPT" edc:nzwidth="0x8" edc:desc="Write Option Code"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="QSPI" edc:cname="QSPI_IFR" edc:nzwidth="0x20" edc:access="--nn-nnnn--nnnnnnn-nnnnnnnnnnnnn" edc:impl="0x379FDFFF" edc:_addr="0x40020038">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="QSPI">
            <edc:SFRFieldDef edc:cname="WIDTH" edc:nzwidth="0x4" edc:desc="Width of Instruction Code, Address, Option Code and Data">
              <edc:SFRFieldSemantic edc:cname="SINGLE_BIT_SPI" edc:desc="Instruction: Single-bit SPI / Address-Option: Single-bit SPI / Data: Single-bit SPI" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DUAL_OUTPUT" edc:desc="Instruction: Single-bit SPI / Address-Option: Single-bit SPI / Data: Dual SPI" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="QUAD_OUTPUT" edc:desc="Instruction: Single-bit SPI / Address-Option: Single-bit SPI / Data: Quad SPI" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DUAL_IO" edc:desc="Instruction: Single-bit SPI / Address-Option: Dual SPI / Data: Dual SPI" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="QUAD_IO" edc:desc="Instruction: Single-bit SPI / Address-Option: Quad SPI / Data: Quad SPI" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DUAL_CMD" edc:desc="Instruction: Dual SPI / Address-Option: Dual SPI / Data: Dual SPI" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="QUAD_CMD" edc:desc="Instruction: Quad SPI / Address-Option: Quad SPI / Data: Quad SPI" edc:when="(field &amp; 0xF) == 0x06"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="INSTEN" edc:nzwidth="0x1" edc:desc="Instruction Enable"/>
            <edc:SFRFieldDef edc:cname="ADDREN" edc:nzwidth="0x1" edc:desc="Address Enable"/>
            <edc:SFRFieldDef edc:cname="OPTEN" edc:nzwidth="0x1" edc:desc="Option Enable"/>
            <edc:SFRFieldDef edc:cname="DATAEN" edc:nzwidth="0x1" edc:desc="Data Enable"/>
            <edc:SFRFieldDef edc:cname="OPTL" edc:nzwidth="0x2" edc:desc="Option Code Length">
              <edc:SFRFieldSemantic edc:cname="OPTION_1BIT" edc:desc="The option code is 1 bit long." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="OPTION_2BIT" edc:desc="The option code is 2 bits long." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="OPTION_4BIT" edc:desc="The option code is 4 bits long." edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="OPTION_8BIT" edc:desc="The option code is 8 bits long." edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ADDRL" edc:nzwidth="0x2" edc:desc="Address Length">
              <edc:SFRFieldSemantic edc:cname="_8_BIT" edc:desc="8-bit address size" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="_16_BIT" edc:desc="16-bit address size" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_24_BIT" edc:desc="24-bit address size" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_32_BIT" edc:desc="32-bit address size" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TFRTYP" edc:nzwidth="0x1" edc:desc="Data Transfer Type">
              <edc:SFRFieldSemantic edc:cname="TRSFR_REGISTER" edc:desc="Read/Write of memory register, write of memory page buffer. This configuration implies the following: Either the AHB or the APB interface can be used to initiate the transfer (SMRM bit). Returned data represents the memory register value. If the APB interface is used, the RDRF and TDRE flags help to control the frame. Scrambling is possible only if the APB interface is used. For HyperFlash memories the &quot;target&quot; bit is set to register space in the HyperFlash header." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TRSFR_MEMORY" edc:desc="Read/Write accesses to the memory space. This configuration implies the following: Only the System Bus interface can be used to trigger accesses. Access to random location is possible. Address mask is applied and full size accesses only are performed. Internal optimization algorithm is enabled to minimize latency. Data are returned in a system bus protocol compliant way. Seamless scrambling is enabled. Seamless handling of HyperFlash Write Buffer programming command (one command for each data) Seamless protocol-specific page boundary handling Address shift is handled seamlessly (e.g. halfword memories)." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CRM" edc:nzwidth="0x1" edc:desc="Continuous Read Mode">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Continuous Read mode is disabled." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Continuous Read mode is enabled." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DDREN" edc:nzwidth="0x1" edc:desc="DDR Mode Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Transfers are performed in Single Data Rate mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Transfers are performed in Double Data Rate mode, whereas the instruction field is still transferred in Single Data Rate mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NBDUM" edc:nzwidth="0x5" edc:desc="Number Of Dummy Cycles"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SMRM" edc:nzwidth="0x1" edc:desc="Serial Memory Register Mode"/>
            <edc:SFRFieldDef edc:cname="APBTFRTYP" edc:nzwidth="0x1" edc:desc="Peripheral BusTransfer Type"/>
            <edc:SFRFieldDef edc:cname="DQSEN" edc:nzwidth="0x1" edc:desc="DQS Sampling Enable"/>
            <edc:SFRFieldDef edc:cname="DDRCMDEN" edc:nzwidth="0x1" edc:desc="DDR Mode Command Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Transfer of instruction field is performed in Single Data Rate mode even if DDREN is written to '1'." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Transfer of instruction field is performed in Double Data Rate mode if DDREN bit is written to '1'. If DDREN is written to '0', the instruction field is sent in Single Data Rate mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PROTTYP" edc:nzwidth="0x2" edc:desc="Protocol Type">
              <edc:SFRFieldSemantic edc:cname="STD_SPI" edc:desc="Standard (Q)SPI Protocol" edc:when="(field &amp; 0x3) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="QSPI" edc:cname="QSPI_RICR" edc:nzwidth="0x20" edc:access="--------nnnnnnnn--------nnnnnnnn" edc:impl="0xFF00FF" edc:_addr="0x4002003C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="QSPI">
            <edc:SFRFieldDef edc:cname="RDINST" edc:nzwidth="0x8" edc:desc="Read Instruction Code"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="RDOPT" edc:nzwidth="0x8" edc:desc="Read Option Code"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="QSPI" edc:cname="QSPI_SMR" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0x40020040">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="QSPI">
            <edc:SFRFieldDef edc:cname="SCREN" edc:nzwidth="0x1" edc:desc="Scrambling/Unscrambling Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="The scrambling/unscrambling is disabled." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="The scrambling/unscrambling is enabled." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RVDIS" edc:nzwidth="0x1" edc:desc="Scrambling/Unscrambling Random Value Disable"/>
            <edc:SFRFieldDef edc:cname="SCRKL" edc:nzwidth="0x1" edc:desc="Scrambling Key Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="QSPI" edc:cname="QSPI_SKR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x40020044">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="QSPI">
            <edc:SFRFieldDef edc:cname="USRK" edc:nzwidth="0x20" edc:desc="User Scrambling Key"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x40020048"/>
      <edc:SFRDef ltx:memberofperipheral="QSPI" edc:cname="QSPI_WRACNT" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40020054">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="QSPI">
            <edc:SFRFieldDef edc:cname="NBWRA" edc:nzwidth="0x20" edc:desc="Number of Write Accesses"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x40020058"/>
      <edc:SFRDef ltx:memberofperipheral="QSPI" edc:cname="QSPI_TOUT" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x40020064">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="QSPI">
            <edc:SFRFieldDef edc:cname="TCNTM" edc:nzwidth="0x10" edc:desc="Time-out Counter Maximum Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x7C" edc:_addr="0x40020068"/>
      <edc:SFRDef ltx:memberofperipheral="QSPI" edc:cname="QSPI_WPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:impl="0xFFFFFF07" edc:_addr="0x400200E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="QSPI">
            <edc:SFRFieldDef edc:cname="WPEN" edc:nzwidth="0x1" edc:desc="Write Protection Enable"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:nzwidth="0x1" edc:desc="Write Protection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:nzwidth="0x1" edc:desc="Write Protection Control Register Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPEN bit. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x515350"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="QSPI" edc:cname="QSPI_WPSR" edc:nzwidth="0x20" edc:access="----------------rrrrrrrr-------r" edc:impl="0xFF01" edc:_addr="0x400200E8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="QSPI">
            <edc:SFRFieldDef edc:cname="WPVS" edc:nzwidth="0x1" edc:desc="Write Protection Violation Status"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:nzwidth="0x8" edc:desc="Write Protection Violation Source"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x14" edc:_addr="0x400200EC"/>
      <edc:SFRDef ltx:memberofperipheral="QSPI" edc:cname="QSPI_RPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40020100">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="QSPI">
            <edc:SFRFieldDef edc:cname="RXPTR" edc:nzwidth="0x20" edc:desc="Receive Pointer Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="QSPI" edc:cname="QSPI_RCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x40020104">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="QSPI">
            <edc:SFRFieldDef edc:cname="RXCTR" edc:nzwidth="0x10" edc:desc="Receive Counter Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="QSPI" edc:cname="QSPI_TPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40020108">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="QSPI">
            <edc:SFRFieldDef edc:cname="TXPTR" edc:nzwidth="0x20" edc:desc="Transmit Counter Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="QSPI" edc:cname="QSPI_TCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x4002010C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="QSPI">
            <edc:SFRFieldDef edc:cname="TXCTR" edc:nzwidth="0x10" edc:desc="Transmit Counter Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="QSPI" edc:cname="QSPI_RNPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40020110">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="QSPI">
            <edc:SFRFieldDef edc:cname="RXNPTR" edc:nzwidth="0x20" edc:desc="Receive Next Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="QSPI" edc:cname="QSPI_RNCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x40020114">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="QSPI">
            <edc:SFRFieldDef edc:cname="RXNCTR" edc:nzwidth="0x10" edc:desc="Receive Next Counter"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="QSPI" edc:cname="QSPI_TNPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40020118">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="QSPI">
            <edc:SFRFieldDef edc:cname="TXNPTR" edc:nzwidth="0x20" edc:desc="Transmit Next Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="QSPI" edc:cname="QSPI_TNCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x4002011C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="QSPI">
            <edc:SFRFieldDef edc:cname="TXNCTR" edc:nzwidth="0x10" edc:desc="Transmit Counter Next"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="QSPI" edc:cname="QSPI_PTCR" edc:nzwidth="0x20" edc:access="-------w----wwww------ww------ww" edc:impl="0x10F0303" edc:_addr="0x40020120">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="QSPI">
            <edc:SFRFieldDef edc:cname="RXTEN" edc:nzwidth="0x1" edc:desc="Receiver Transfer Enable"/>
            <edc:SFRFieldDef edc:cname="RXTDIS" edc:nzwidth="0x1" edc:desc="Receiver Transfer Disable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="TXTEN" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Enable"/>
            <edc:SFRFieldDef edc:cname="TXTDIS" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Disable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="RXCBEN" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Enable"/>
            <edc:SFRFieldDef edc:cname="RXCBDIS" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Disable"/>
            <edc:SFRFieldDef edc:cname="TXCBEN" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Enable"/>
            <edc:SFRFieldDef edc:cname="TXCBDIS" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Disable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ERRCLR" edc:nzwidth="0x1" edc:desc="Transfer Bus Error Clear"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="QSPI" edc:cname="QSPI_PTSR" edc:nzwidth="0x20" edc:access="-------r-----r-r-------r-------r" edc:impl="0x1050101" edc:_addr="0x40020124">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="QSPI">
            <edc:SFRFieldDef edc:cname="RXTEN" edc:nzwidth="0x1" edc:desc="Receiver Transfer Enable"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="TXTEN" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Enable"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="RXCBEN" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXCBEN" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Transfer Bus Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="QSPI" edc:cname="QSPI_PWPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:impl="0xFFFFFF07" edc:_addr="0x40020128">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="QSPI">
            <edc:SFRFieldDef edc:cname="WPPTREN" edc:nzwidth="0x1" edc:desc="Write Protection Pointer Registers Enable"/>
            <edc:SFRFieldDef edc:cname="WPCTREN" edc:nzwidth="0x1" edc:desc="Write Protection Counter Registers Enable"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:nzwidth="0x1" edc:desc="Write Protection Control Register Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x504443"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3ED4" edc:_addr="0x4002012C"/>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADC_CR" edc:nzwidth="0x20" edc:access="---------------------------ww-ww" edc:impl="0x1B" edc:_addr="0x40024000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="START" edc:nzwidth="0x1" edc:desc="Start Conversion"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SWFIFO" edc:nzwidth="0x1" edc:desc="Software FIFO Reset"/>
            <edc:SFRFieldDef edc:cname="CMPRST" edc:nzwidth="0x1" edc:desc="Comparison Restart"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADC_MR" edc:nzwidth="0x20" edc:access="nnnnnnnnn---nnnnnnnnnnnn-nn-nnn-" edc:impl="0xFF8FFF6E" edc:_addr="0x40024004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TRGSEL" edc:nzwidth="0x3" edc:desc="Trigger Selection">
              <edc:SFRFieldSemantic edc:cname="ADC_TRIG0" edc:desc="PWM event line 0" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ADC_TRIG1" edc:desc="TIOA0 TC0" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ADC_TRIG2" edc:desc="TIOA1 TC0" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="ADC_TRIG3" edc:desc="TIOA2 TC0" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="ADC_TRIG4" edc:desc="TIOA0 TC1" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="ADC_TRIG5" edc:desc="TIOA1 TC1" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="ADC_TRIG6" edc:desc="RTCOUT0" edc:when="(field &amp; 0x7) == 0x06"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SLEEP" edc:nzwidth="0x1" edc:desc="Sleep Mode">
              <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Normal mode: The ADC core and reference voltage circuitry are kept on between conversions." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SLEEP" edc:desc="Sleep mode: The wake-up time can be modified by programming the FWUP bit." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FWUP" edc:nzwidth="0x1" edc:desc="Fast Wake-up">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="If SLEEP is 1, then both ADC core and reference voltage circuitry are off between conversions." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ON" edc:desc="If SLEEP is 1, then Fast Wake-up Sleep mode: The voltage reference is on between conversions and ADC core is off." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PRESCAL" edc:nzwidth="0x8" edc:desc="Prescaler Rate Selection"/>
            <edc:SFRFieldDef edc:cname="STARTUP" edc:nzwidth="0x4" edc:desc="Startup Time">
              <edc:SFRFieldSemantic edc:cname="SUT0" edc:desc="0 period of ADCCLK" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SUT8" edc:desc="8 periods of ADCCLK" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SUT16" edc:desc="16 periods of ADCCLK" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SUT24" edc:desc="24 periods of ADCCLK" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SUT64" edc:desc="64 periods of ADCCLK" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="SUT80" edc:desc="80 periods of ADCCLK" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="SUT96" edc:desc="96 periods of ADCCLK" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="SUT112" edc:desc="112 periods of ADCCLK" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="SUT512" edc:desc="512 periods of ADCCLK" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="SUT576" edc:desc="576 periods of ADCCLK" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="SUT640" edc:desc="640 periods of ADCCLK" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="SUT704" edc:desc="704 periods of ADCCLK" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="SUT768" edc:desc="768 periods of ADCCLK" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="SUT832" edc:desc="832 periods of ADCCLK" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="SUT896" edc:desc="896 periods of ADCCLK" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="SUT960" edc:desc="960 periods of ADCCLK" edc:when="(field &amp; 0xF) == 0x0F"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ANACH" edc:nzwidth="0x1" edc:desc="Analog Change">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No analog change on channel switching: DIFF0 is used for all channels." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ALLOWED" edc:desc="Allows different analog settings for each channel. See ADC Channel Configuration Register." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TRACKTIM" edc:nzwidth="0x4" edc:desc="Tracking Time"/>
            <edc:SFRFieldDef edc:cname="TRANSFER" edc:nzwidth="0x2" edc:desc="Transfer Time"/>
            <edc:SFRFieldDef edc:cname="ALWAYS1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USEQ" edc:nzwidth="0x1" edc:desc="User Sequence Enable">
              <edc:SFRFieldSemantic edc:cname="NUM_ORDER" edc:desc="Normal mode: The controller converts channels in a simple numeric order depending only on the channel index." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="REG_ORDER" edc:desc="User Sequence mode: The sequence respects what is defined in ADC_SEQR1and can be used to convert the same channel several times." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADC_SEQR1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40024008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="USCH1" edc:nzwidth="0x4" edc:desc="User Sequence Number 1"/>
            <edc:SFRFieldDef edc:cname="USCH2" edc:nzwidth="0x4" edc:desc="User Sequence Number 2"/>
            <edc:SFRFieldDef edc:cname="USCH3" edc:nzwidth="0x4" edc:desc="User Sequence Number 3"/>
            <edc:SFRFieldDef edc:cname="USCH4" edc:nzwidth="0x4" edc:desc="User Sequence Number 4"/>
            <edc:SFRFieldDef edc:cname="USCH5" edc:nzwidth="0x4" edc:desc="User Sequence Number 5"/>
            <edc:SFRFieldDef edc:cname="USCH6" edc:nzwidth="0x4" edc:desc="User Sequence Number 6"/>
            <edc:SFRFieldDef edc:cname="USCH7" edc:nzwidth="0x4" edc:desc="User Sequence Number 7"/>
            <edc:SFRFieldDef edc:cname="USCH8" edc:nzwidth="0x4" edc:desc="User Sequence Number 8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4002400C"/>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADC_CHER" edc:nzwidth="0x20" edc:access="------------------------wwwwwwww" edc:impl="0xFF" edc:_addr="0x40024010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="CH0" edc:nzwidth="0x1" edc:desc="Channel 0 Enable"/>
            <edc:SFRFieldDef edc:cname="CH1" edc:nzwidth="0x1" edc:desc="Channel 1 Enable"/>
            <edc:SFRFieldDef edc:cname="CH2" edc:nzwidth="0x1" edc:desc="Channel 2 Enable"/>
            <edc:SFRFieldDef edc:cname="CH3" edc:nzwidth="0x1" edc:desc="Channel 3 Enable"/>
            <edc:SFRFieldDef edc:cname="CH4" edc:nzwidth="0x1" edc:desc="Channel 4 Enable"/>
            <edc:SFRFieldDef edc:cname="CH5" edc:nzwidth="0x1" edc:desc="Channel 5 Enable"/>
            <edc:SFRFieldDef edc:cname="CH6" edc:nzwidth="0x1" edc:desc="Channel 6 Enable"/>
            <edc:SFRFieldDef edc:cname="CH7" edc:nzwidth="0x1" edc:desc="Channel 7 Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADC_CHDR" edc:nzwidth="0x20" edc:access="------------------------wwwwwwww" edc:impl="0xFF" edc:_addr="0x40024014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="CH0" edc:nzwidth="0x1" edc:desc="Channel 0 Disable"/>
            <edc:SFRFieldDef edc:cname="CH1" edc:nzwidth="0x1" edc:desc="Channel 1 Disable"/>
            <edc:SFRFieldDef edc:cname="CH2" edc:nzwidth="0x1" edc:desc="Channel 2 Disable"/>
            <edc:SFRFieldDef edc:cname="CH3" edc:nzwidth="0x1" edc:desc="Channel 3 Disable"/>
            <edc:SFRFieldDef edc:cname="CH4" edc:nzwidth="0x1" edc:desc="Channel 4 Disable"/>
            <edc:SFRFieldDef edc:cname="CH5" edc:nzwidth="0x1" edc:desc="Channel 5 Disable"/>
            <edc:SFRFieldDef edc:cname="CH6" edc:nzwidth="0x1" edc:desc="Channel 6 Disable"/>
            <edc:SFRFieldDef edc:cname="CH7" edc:nzwidth="0x1" edc:desc="Channel 7 Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADC_CHSR" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:impl="0xFF" edc:_addr="0x40024018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="CH0" edc:nzwidth="0x1" edc:desc="Channel 0 Status"/>
            <edc:SFRFieldDef edc:cname="CH1" edc:nzwidth="0x1" edc:desc="Channel 1 Status"/>
            <edc:SFRFieldDef edc:cname="CH2" edc:nzwidth="0x1" edc:desc="Channel 2 Status"/>
            <edc:SFRFieldDef edc:cname="CH3" edc:nzwidth="0x1" edc:desc="Channel 3 Status"/>
            <edc:SFRFieldDef edc:cname="CH4" edc:nzwidth="0x1" edc:desc="Channel 4 Status"/>
            <edc:SFRFieldDef edc:cname="CH5" edc:nzwidth="0x1" edc:desc="Channel 5 Status"/>
            <edc:SFRFieldDef edc:cname="CH6" edc:nzwidth="0x1" edc:desc="Channel 6 Status"/>
            <edc:SFRFieldDef edc:cname="CH7" edc:nzwidth="0x1" edc:desc="Channel 7 Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4002401C"/>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADC_LCDR" edc:nzwidth="0x20" edc:access="---rrrrr--------rrrrrrrrrrrrrrrr" edc:impl="0x1F00FFFF" edc:_addr="0x40024020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="NO_OSR_LDATA" edc:nzwidth="0xC" edc:desc="Last Data Converted when No Oversampling"/>
            <edc:SFRFieldDef edc:cname="NO_OSR_CHNB" edc:nzwidth="0x4" edc:desc="Channel Number when No Oversampling"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="CHNBOSR" edc:nzwidth="0x5" edc:desc="Channel Number in Oversampling Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADC_IER" edc:nzwidth="0x20" edc:access="---wwwww----ww-----------wwwwwww" edc:impl="0x1F0C007F" edc:_addr="0x40024024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="Receive Ready Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXEMPTY" edc:nzwidth="0x1" edc:desc="Receive FIFO Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFULL" edc:nzwidth="0x1" edc:desc="Receive FIFO Full Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXCHUNK" edc:nzwidth="0x1" edc:desc="Receive FIFO Chunk Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXUDR" edc:nzwidth="0x1" edc:desc="Receive Under Flow Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXOVR" edc:nzwidth="0x1" edc:desc="Receive Over Flow Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SMEV" edc:nzwidth="0x1" edc:desc="Supply Monitor Event Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0xB"/>
            <edc:SFRFieldDef edc:cname="EOS" edc:nzwidth="0x1" edc:desc="End Of Sequence Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TEMPCHG" edc:nzwidth="0x1" edc:desc="Temperature Change Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="DRDY" edc:nzwidth="0x1" edc:desc="Data Ready Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="GOVRE" edc:nzwidth="0x1" edc:desc="General Overrun Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="COMPE" edc:nzwidth="0x1" edc:desc="Comparison Event Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Transfer Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADC_IDR" edc:nzwidth="0x20" edc:access="---wwwww----ww-----------wwwwwww" edc:impl="0x1F0C007F" edc:_addr="0x40024028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="Receive Ready Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXEMPTY" edc:nzwidth="0x1" edc:desc="Receive FIFO Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFULL" edc:nzwidth="0x1" edc:desc="Receive FIFO Full Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXCHUNK" edc:nzwidth="0x1" edc:desc="Receive FIFO Chunk Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXUDR" edc:nzwidth="0x1" edc:desc="Receive Under Flow Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXOVR" edc:nzwidth="0x1" edc:desc="Receive Over Flow Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SMEV" edc:nzwidth="0x1" edc:desc="Supply Monitor Event Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0xB"/>
            <edc:SFRFieldDef edc:cname="EOS" edc:nzwidth="0x1" edc:desc="End Of Sequence Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TEMPCHG" edc:nzwidth="0x1" edc:desc="Temperature Change Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="DRDY" edc:nzwidth="0x1" edc:desc="Data Ready Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="GOVRE" edc:nzwidth="0x1" edc:desc="General Overrun Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="COMPE" edc:nzwidth="0x1" edc:desc="Comparison Event Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Transfer Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADC_IMR" edc:nzwidth="0x20" edc:access="---rrrrr----rr-----------rrrrrrr" edc:impl="0x1F0C007F" edc:_addr="0x4002402C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="Receive Ready Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXEMPTY" edc:nzwidth="0x1" edc:desc="Receive FIFO Empty Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFULL" edc:nzwidth="0x1" edc:desc="Receive FIFO Full Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXCHUNK" edc:nzwidth="0x1" edc:desc="Receive FIFO Chunk Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXUDR" edc:nzwidth="0x1" edc:desc="Receive Under Flow Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXOVR" edc:nzwidth="0x1" edc:desc="Receive Over Flow Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="SMEV" edc:nzwidth="0x1" edc:desc="Supply Monitor Event Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0xB"/>
            <edc:SFRFieldDef edc:cname="EOS" edc:nzwidth="0x1" edc:desc="End Of Sequence Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TEMPCHG" edc:nzwidth="0x1" edc:desc="Temperature Change Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="DRDY" edc:nzwidth="0x1" edc:desc="Data Ready Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="GOVRE" edc:nzwidth="0x1" edc:desc="General Overrun Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="COMPE" edc:nzwidth="0x1" edc:desc="Comparison Event Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Transfer Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADC_ISR" edc:nzwidth="0x20" edc:access="---rrrrr----rr-----------rrrrrrr" edc:impl="0x1F0C007F" edc:_addr="0x40024030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="Receive Ready (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="RXEMPTY" edc:nzwidth="0x1" edc:desc="Receive FIFO Empty (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="RXFULL" edc:nzwidth="0x1" edc:desc="Receive FIFO Full (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="RXCHUNK" edc:nzwidth="0x1" edc:desc="Receive FIFO Chunk (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="RXUDR" edc:nzwidth="0x1" edc:desc="Receive Under Flow (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="RXOVR" edc:nzwidth="0x1" edc:desc="Receive Over Flow (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SMEV" edc:nzwidth="0x1" edc:desc="Supply Monitor Event (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0xB"/>
            <edc:SFRFieldDef edc:cname="EOS" edc:nzwidth="0x1" edc:desc="End Of Sequence (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="TEMPCHG" edc:nzwidth="0x1" edc:desc="Temperature Change (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="DRDY" edc:nzwidth="0x1" edc:desc="Data Ready (automatically set / cleared)"/>
            <edc:SFRFieldDef edc:cname="GOVRE" edc:nzwidth="0x1" edc:desc="General Overrun Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="COMPE" edc:nzwidth="0x1" edc:desc="Comparison Event (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Transfer (cleared by writing ADC_RCR or ADC_RNCR)"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full (cleared by writing ADC_RCR or ADC_RNCR)"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADC_EOC_IER" edc:nzwidth="0x20" edc:access="------------------------wwwwwwww" edc:impl="0xFF" edc:_addr="0x40024034">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="EOC0" edc:nzwidth="0x1" edc:desc="End of Conversion Interrupt Enable 0"/>
            <edc:SFRFieldDef edc:cname="EOC1" edc:nzwidth="0x1" edc:desc="End of Conversion Interrupt Enable 1"/>
            <edc:SFRFieldDef edc:cname="EOC2" edc:nzwidth="0x1" edc:desc="End of Conversion Interrupt Enable 2"/>
            <edc:SFRFieldDef edc:cname="EOC3" edc:nzwidth="0x1" edc:desc="End of Conversion Interrupt Enable 3"/>
            <edc:SFRFieldDef edc:cname="EOC4" edc:nzwidth="0x1" edc:desc="End of Conversion Interrupt Enable 4"/>
            <edc:SFRFieldDef edc:cname="EOC5" edc:nzwidth="0x1" edc:desc="End of Conversion Interrupt Enable 5"/>
            <edc:SFRFieldDef edc:cname="EOC6" edc:nzwidth="0x1" edc:desc="End of Conversion Interrupt Enable 6"/>
            <edc:SFRFieldDef edc:cname="EOC7" edc:nzwidth="0x1" edc:desc="End of Conversion Interrupt Enable 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADC_EOC_IDR" edc:nzwidth="0x20" edc:access="------------------------wwwwwwww" edc:impl="0xFF" edc:_addr="0x40024038">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="EOC0" edc:nzwidth="0x1" edc:desc="End of Conversion Interrupt Disable 0"/>
            <edc:SFRFieldDef edc:cname="EOC1" edc:nzwidth="0x1" edc:desc="End of Conversion Interrupt Disable 1"/>
            <edc:SFRFieldDef edc:cname="EOC2" edc:nzwidth="0x1" edc:desc="End of Conversion Interrupt Disable 2"/>
            <edc:SFRFieldDef edc:cname="EOC3" edc:nzwidth="0x1" edc:desc="End of Conversion Interrupt Disable 3"/>
            <edc:SFRFieldDef edc:cname="EOC4" edc:nzwidth="0x1" edc:desc="End of Conversion Interrupt Disable 4"/>
            <edc:SFRFieldDef edc:cname="EOC5" edc:nzwidth="0x1" edc:desc="End of Conversion Interrupt Disable 5"/>
            <edc:SFRFieldDef edc:cname="EOC6" edc:nzwidth="0x1" edc:desc="End of Conversion Interrupt Disable 6"/>
            <edc:SFRFieldDef edc:cname="EOC7" edc:nzwidth="0x1" edc:desc="End of Conversion Interrupt Disable 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADC_EOC_IMR" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:impl="0xFF" edc:_addr="0x4002403C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="EOC0" edc:nzwidth="0x1" edc:desc="End of Conversion Interrupt Mask 0"/>
            <edc:SFRFieldDef edc:cname="EOC1" edc:nzwidth="0x1" edc:desc="End of Conversion Interrupt Mask 1"/>
            <edc:SFRFieldDef edc:cname="EOC2" edc:nzwidth="0x1" edc:desc="End of Conversion Interrupt Mask 2"/>
            <edc:SFRFieldDef edc:cname="EOC3" edc:nzwidth="0x1" edc:desc="End of Conversion Interrupt Mask 3"/>
            <edc:SFRFieldDef edc:cname="EOC4" edc:nzwidth="0x1" edc:desc="End of Conversion Interrupt Mask 4"/>
            <edc:SFRFieldDef edc:cname="EOC5" edc:nzwidth="0x1" edc:desc="End of Conversion Interrupt Mask 5"/>
            <edc:SFRFieldDef edc:cname="EOC6" edc:nzwidth="0x1" edc:desc="End of Conversion Interrupt Mask 6"/>
            <edc:SFRFieldDef edc:cname="EOC7" edc:nzwidth="0x1" edc:desc="End of Conversion Interrupt Mask 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADC_EOC_ISR" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:impl="0xFF" edc:_addr="0x40024040">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="EOC0" edc:nzwidth="0x1" edc:desc="End of Conversion 0 (automatically set / cleared)"/>
            <edc:SFRFieldDef edc:cname="EOC1" edc:nzwidth="0x1" edc:desc="End of Conversion 1 (automatically set / cleared)"/>
            <edc:SFRFieldDef edc:cname="EOC2" edc:nzwidth="0x1" edc:desc="End of Conversion 2 (automatically set / cleared)"/>
            <edc:SFRFieldDef edc:cname="EOC3" edc:nzwidth="0x1" edc:desc="End of Conversion 3 (automatically set / cleared)"/>
            <edc:SFRFieldDef edc:cname="EOC4" edc:nzwidth="0x1" edc:desc="End of Conversion 4 (automatically set / cleared)"/>
            <edc:SFRFieldDef edc:cname="EOC5" edc:nzwidth="0x1" edc:desc="End of Conversion 5 (automatically set / cleared)"/>
            <edc:SFRFieldDef edc:cname="EOC6" edc:nzwidth="0x1" edc:desc="End of Conversion 6 (automatically set / cleared)"/>
            <edc:SFRFieldDef edc:cname="EOC7" edc:nzwidth="0x1" edc:desc="End of Conversion 7 (automatically set / cleared)"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADC_TEMPMR" edc:nzwidth="0x20" edc:access="--------------------------nn---n" edc:impl="0x31" edc:_addr="0x40024044">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="TEMPON" edc:nzwidth="0x1" edc:desc="Temperature Sensor On"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="TEMPCMPMOD" edc:nzwidth="0x2" edc:desc="Temperature Comparison Mode">
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Generates the TEMPCHG flag in ADC_ISR when the converted data is lower than the low threshold of the window." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="Generates the TEMPCHG flag in ADC_ISR when the converted data is higher than the high threshold of the window." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="IN" edc:desc="Generates the TEMPCHG flag in ADC_ISR when the converted data is in the comparison window." edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="OUT" edc:desc="Generates the TEMPCHG flag in ADC_ISR when the converted data is out of the comparison window." edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADC_TEMPCWR" edc:nzwidth="0x20" edc:access="----nnnnnnnnnnnn----nnnnnnnnnnnn" edc:impl="0xFFF0FFF" edc:_addr="0x40024048">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="TLOWTHRES" edc:nzwidth="0xC" edc:desc="Temperature Low Threshold"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="THIGHTHRES" edc:nzwidth="0xC" edc:desc="Temperature High Threshold"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADC_OVER" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:impl="0xFF" edc:_addr="0x4002404C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="OVRE0" edc:nzwidth="0x1" edc:desc="Overrun Error 0"/>
            <edc:SFRFieldDef edc:cname="OVRE1" edc:nzwidth="0x1" edc:desc="Overrun Error 1"/>
            <edc:SFRFieldDef edc:cname="OVRE2" edc:nzwidth="0x1" edc:desc="Overrun Error 2"/>
            <edc:SFRFieldDef edc:cname="OVRE3" edc:nzwidth="0x1" edc:desc="Overrun Error 3"/>
            <edc:SFRFieldDef edc:cname="OVRE4" edc:nzwidth="0x1" edc:desc="Overrun Error 4"/>
            <edc:SFRFieldDef edc:cname="OVRE5" edc:nzwidth="0x1" edc:desc="Overrun Error 5"/>
            <edc:SFRFieldDef edc:cname="OVRE6" edc:nzwidth="0x1" edc:desc="Overrun Error 6"/>
            <edc:SFRFieldDef edc:cname="OVRE7" edc:nzwidth="0x1" edc:desc="Overrun Error 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADC_EMR" edc:nzwidth="0x20" edc:access="--nn-nnnnnnn-nnn--nn--nnnnnn-nnn" edc:impl="0x37F733F7" edc:_addr="0x40024050">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="CMPMODE" edc:nzwidth="0x2" edc:desc="Comparison Mode">
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="When the converted data is lower than the low threshold of the window, generates the COMPE flag in ADC_ISR or, in Partial Wake-up mode, defines the conditions to exit the system from Wait mode." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="When the converted data is higher than the high threshold of the window, generates the COMPE flag in ADC_ISR or, in Partial Wake-up mode, defines the conditions to exit the system from Wait mode." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="IN" edc:desc="When the converted data is in the comparison window, generates the COMPE flag in ADC_ISR or, in Partial Wake-up mode, defines the conditions to exit the system from Wait mode." edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="OUT" edc:desc="When the converted data is out of the comparison window, generates the COMPE flag in ADC_ISR or, in Partial Wake-up mode, defines the conditions to exit the system from Wait mode." edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMPTYPE" edc:nzwidth="0x1" edc:desc="Comparison Type">
              <edc:SFRFieldSemantic edc:cname="FLAG_ONLY" edc:desc="Any conversion is performed and comparison function drives the COMPE flag." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="START_CONDITION" edc:desc="Comparison conditions must be met to start the storage of all conversions until ADC_CR.CMPRST is set." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPSEL" edc:nzwidth="0x5" edc:desc="Comparison Selected Channel"/>
            <edc:SFRFieldDef edc:cname="CMPALL" edc:nzwidth="0x1" edc:desc="Compare All Channels"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMPFILTER" edc:nzwidth="0x2" edc:desc="Compare Event Filtering"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="OSR" edc:nzwidth="0x3" edc:desc="Over Sampling Rate">
              <edc:SFRFieldSemantic edc:cname="NO_AVERAGE" edc:desc="No averaging. ADC sample rate is maximum." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="OSR4" edc:desc="1-bit enhanced resolution by averaging. ADC sample rate divided by 4." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="OSR16" edc:desc="2-bit enhanced resolution by averaging. ADC sample rate divided by 16." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="OSR64" edc:desc="1-bit enhanced resolution by averaging. ADC sample rate divided by 64" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="OSR256" edc:desc="2-bit enhanced resolution by averaging. ADC sample rate divided by 256." edc:when="(field &amp; 0x7) == 0x04"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ASTE" edc:nzwidth="0x1" edc:desc="Averaging on Single Trigger Event">
              <edc:SFRFieldSemantic edc:cname="MULTI_TRIG_AVERAGE" edc:desc="The average requests several trigger events." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE_TRIG_AVERAGE" edc:desc="The average requests only one trigger event." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SRCCLK" edc:nzwidth="0x1" edc:desc="External Clock Selection">
              <edc:SFRFieldSemantic edc:cname="PERIPH_CLK" edc:desc="The peripheral clock is the source for the ADC prescaler." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="GCLK is the source clock for the ADC prescaler, thus the ADC clock can be independent of the core/peripheral clock." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TRACKX" edc:nzwidth="0x2" edc:desc="Tracking Time x4, x8 or x16">
              <edc:SFRFieldSemantic edc:cname="TRACKTIMX1" edc:desc="ADC_MR.TRACKTIM effect is multiplied by 1." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TRACKTIMX4" edc:desc="ADC_MR.TRACKTIM effect is multiplied by 4." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="TRACKTIMX8" edc:desc="ADC_MR.TRACKTIM effect is multiplied by 8" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TRACKTIMX16" edc:desc="ADC_MR.TRACKTIM effect is multiplied by 16." edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TAG" edc:nzwidth="0x1" edc:desc="ADC_LCDR Tag"/>
            <edc:SFRFieldDef edc:cname="SIGNMODE" edc:nzwidth="0x2" edc:desc="Sign Mode">
              <edc:SFRFieldSemantic edc:cname="SE_UNSG_DF_SIGN" edc:desc="Single-ended channels: unsigned conversions Differential channels: signed conversions" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SE_SIGN_DF_UNSG" edc:desc="Single-ended channels: signed conversions Differential channels: unsigned conversions" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ALL_UNSIGNED" edc:desc="All channels: unsigned conversions" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="ALL_SIGNED" edc:desc="All channels: signed conversions" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ADCMODE" edc:nzwidth="0x2" edc:desc="ADC Running Mode">
              <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Normal mode of operation." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="OFFSET_ERROR" edc:desc="Offset Error mode to measure the offset error. See Table 6-6 &quot;ADC Running Modes&quot;." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="GAIN_ERROR_HIGH" edc:desc="Gain Error mode to measure the gain error. See Table 6-6 &quot;ADC Running Modes&quot;." edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="GAIN_ERROR_LOW" edc:desc="Gain Error mode to measure the gain error. See Table 6-6 &quot;ADC Running Modes&quot;." edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADC_CWR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40024054">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="LOWTHRES" edc:nzwidth="0x10" edc:desc="Low Threshold"/>
            <edc:SFRFieldDef edc:cname="HIGHTHRES" edc:nzwidth="0x10" edc:desc="High Threshold"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x40024058"/>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADC_CCR" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:impl="0xFF" edc:_addr="0x4002405C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="DIFF0" edc:nzwidth="0x1" edc:desc="Differential Inputs for Channel 0"/>
            <edc:SFRFieldDef edc:cname="DIFF1" edc:nzwidth="0x1" edc:desc="Differential Inputs for Channel 1"/>
            <edc:SFRFieldDef edc:cname="DIFF2" edc:nzwidth="0x1" edc:desc="Differential Inputs for Channel 2"/>
            <edc:SFRFieldDef edc:cname="DIFF3" edc:nzwidth="0x1" edc:desc="Differential Inputs for Channel 3"/>
            <edc:SFRFieldDef edc:cname="DIFF4" edc:nzwidth="0x1" edc:desc="Differential Inputs for Channel 4"/>
            <edc:SFRFieldDef edc:cname="DIFF5" edc:nzwidth="0x1" edc:desc="Differential Inputs for Channel 5"/>
            <edc:SFRFieldDef edc:cname="DIFF6" edc:nzwidth="0x1" edc:desc="Differential Inputs for Channel 6"/>
            <edc:SFRFieldDef edc:cname="DIFF7" edc:nzwidth="0x1" edc:desc="Differential Inputs for Channel 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADC_CDR0" edc:nzwidth="0x20" edc:access="----------------rrrrrrrrrrrrrrrr" edc:impl="0xFFFF" edc:_addr="0x40024060">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x10" edc:desc="Converted Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADC_CDR1" edc:nzwidth="0x20" edc:access="----------------rrrrrrrrrrrrrrrr" edc:impl="0xFFFF" edc:_addr="0x40024064">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x10" edc:desc="Converted Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADC_CDR2" edc:nzwidth="0x20" edc:access="----------------rrrrrrrrrrrrrrrr" edc:impl="0xFFFF" edc:_addr="0x40024068">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x10" edc:desc="Converted Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADC_CDR3" edc:nzwidth="0x20" edc:access="----------------rrrrrrrrrrrrrrrr" edc:impl="0xFFFF" edc:_addr="0x4002406C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x10" edc:desc="Converted Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADC_CDR4" edc:nzwidth="0x20" edc:access="----------------rrrrrrrrrrrrrrrr" edc:impl="0xFFFF" edc:_addr="0x40024070">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x10" edc:desc="Converted Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADC_CDR5" edc:nzwidth="0x20" edc:access="----------------rrrrrrrrrrrrrrrr" edc:impl="0xFFFF" edc:_addr="0x40024074">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x10" edc:desc="Converted Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADC_CDR6" edc:nzwidth="0x20" edc:access="----------------rrrrrrrrrrrrrrrr" edc:impl="0xFFFF" edc:_addr="0x40024078">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x10" edc:desc="Converted Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADC_CDR7" edc:nzwidth="0x20" edc:access="----------------rrrrrrrrrrrrrrrr" edc:impl="0xFFFF" edc:_addr="0x4002407C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x10" edc:desc="Converted Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x60" edc:_addr="0x40024080"/>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADC_ACR" edc:nzwidth="0x20" edc:access="---------nnn-----------------n--" edc:impl="0x700004" edc:_addr="0x400240E0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ZBAT" edc:nzwidth="0x1" edc:desc="VBAT Resistive Load Selection"/>
            <edc:AdjustPoint edc:offset="0x11"/>
            <edc:SFRFieldDef edc:cname="INTVREFEN" edc:nzwidth="0x1" edc:desc="ADC Internal Positive Voltage Reference Enable"/>
            <edc:SFRFieldDef edc:cname="SMEN" edc:nzwidth="0x1" edc:desc="Supply Monitor Enable"/>
            <edc:SFRFieldDef edc:cname="SMVT" edc:nzwidth="0x1" edc:desc="Supply Monitor Voltage Threshold"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADC_FMR" edc:nzwidth="0x20" edc:access="--------nnnnnnnn--------nnnn--nn" edc:impl="0xFF00F3" edc:_addr="0x400240E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="ENFIFO" edc:nzwidth="0x1" edc:desc="Enable FIFO">
              <edc:SFRFieldSemantic edc:cname="0" edc:desc="FIFO is disabled." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="FIFO is enabled." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ENLEVEL" edc:nzwidth="0x1" edc:desc="Enable Level">
              <edc:SFRFieldSemantic edc:cname="0" edc:desc="Request to DMA is generated as soon as one data is written in FIFO when FIFO is enabled. CHUNK is not used." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="Request to DMA is generated as soon as the number of written elements in the FIFO is greater than or equal to CHUNK." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CHUNK" edc:nzwidth="0x4" edc:desc="Chunk Size"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="FIFOCNT" edc:nzwidth="0x8" edc:desc="FIFO Count (read-only)"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x18" edc:_addr="0x400240E8"/>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADC_RPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40024100">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="RXPTR" edc:nzwidth="0x20" edc:desc="Receive Pointer Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADC_RCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x40024104">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="RXCTR" edc:nzwidth="0x10" edc:desc="Receive Counter Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x40024108"/>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADC_RNPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40024110">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="RXNPTR" edc:nzwidth="0x20" edc:desc="Receive Next Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADC_RNCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x40024114">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="RXNCTR" edc:nzwidth="0x10" edc:desc="Receive Next Counter"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x40024118"/>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADC_PTCR" edc:nzwidth="0x20" edc:access="-------w----wwww------ww------ww" edc:impl="0x10F0303" edc:_addr="0x40024120">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="RXTEN" edc:nzwidth="0x1" edc:desc="Receiver Transfer Enable"/>
            <edc:SFRFieldDef edc:cname="RXTDIS" edc:nzwidth="0x1" edc:desc="Receiver Transfer Disable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="TXTEN" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Enable"/>
            <edc:SFRFieldDef edc:cname="TXTDIS" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Disable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="RXCBEN" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Enable"/>
            <edc:SFRFieldDef edc:cname="RXCBDIS" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Disable"/>
            <edc:SFRFieldDef edc:cname="TXCBEN" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Enable"/>
            <edc:SFRFieldDef edc:cname="TXCBDIS" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Disable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ERRCLR" edc:nzwidth="0x1" edc:desc="Transfer Bus Error Clear"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADC_PTSR" edc:nzwidth="0x20" edc:access="-------r-----r-r-------r-------r" edc:impl="0x1050101" edc:_addr="0x40024124">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="RXTEN" edc:nzwidth="0x1" edc:desc="Receiver Transfer Enable"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="TXTEN" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Enable"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="RXCBEN" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXCBEN" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Transfer Bus Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADC_PWPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:impl="0xFFFFFF07" edc:_addr="0x40024128">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="WPPTREN" edc:nzwidth="0x1" edc:desc="Write Protection Pointer Registers Enable"/>
            <edc:SFRFieldDef edc:cname="WPCTREN" edc:nzwidth="0x1" edc:desc="Write Protection Counter Registers Enable"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:nzwidth="0x1" edc:desc="Write Protection Control Register Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x504443"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4002412C"/>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADC_TRGR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:impl="0xFFFFFF07" edc:_addr="0x40024130">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="TRGMOD" edc:nzwidth="0x3" edc:desc="Trigger Mode">
              <edc:SFRFieldSemantic edc:cname="NO_TRIGGER" edc:desc="No hardware trigger, only software trigger can start conversions" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="EXT_TRIG_RISE" edc:desc="Rising edge of the selected trigger event, defined in ADC_MR.TRGSEL" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="EXT_TRIG_FALL" edc:desc="Falling edge of the selected trigger event" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="EXT_TRIG_ANY" edc:desc="Any edge of the selected trigger event" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="PERIOD_TRIG" edc:desc="ADC internal periodic trigger (see TRGPER)" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="CONTINUOUS" edc:desc="Continuous mode, free run mode" edc:when="(field &amp; 0x7) == 0x06"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="TRGPER" edc:nzwidth="0x18" edc:desc="Trigger Period"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADC_COSR" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:impl="0x1F" edc:_addr="0x40024134">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="CSEL" edc:nzwidth="0x5" edc:desc="Channel Correction Select"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADC_CVR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40024138">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="OFFSETCORR" edc:nzwidth="0x10" edc:desc="Offset Correction"/>
            <edc:SFRFieldDef edc:cname="GAINCORR" edc:nzwidth="0x10" edc:desc="Gain Correction"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADC_CECR" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:impl="0xFF" edc:_addr="0x4002413C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="ECORR0" edc:nzwidth="0x1" edc:desc="Error Correction Enable for Channel 0"/>
            <edc:SFRFieldDef edc:cname="ECORR1" edc:nzwidth="0x1" edc:desc="Error Correction Enable for Channel 1"/>
            <edc:SFRFieldDef edc:cname="ECORR2" edc:nzwidth="0x1" edc:desc="Error Correction Enable for Channel 2"/>
            <edc:SFRFieldDef edc:cname="ECORR3" edc:nzwidth="0x1" edc:desc="Error Correction Enable for Channel 3"/>
            <edc:SFRFieldDef edc:cname="ECORR4" edc:nzwidth="0x1" edc:desc="Error Correction Enable for Channel 4"/>
            <edc:SFRFieldDef edc:cname="ECORR5" edc:nzwidth="0x1" edc:desc="Error Correction Enable for Channel 5"/>
            <edc:SFRFieldDef edc:cname="ECORR6" edc:nzwidth="0x1" edc:desc="Error Correction Enable for Channel 6"/>
            <edc:SFRFieldDef edc:cname="ECORR7" edc:nzwidth="0x1" edc:desc="Error Correction Enable for Channel 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x40024140"/>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADC_SR" edc:nzwidth="0x20" edc:access="-------------------------------r" edc:impl="0x1" edc:_addr="0x40024144">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="VADCSM" edc:nzwidth="0x1" edc:desc="VDD ADC Supply Monitor Output"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x40024148"/>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADC_WPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:impl="0xFFFFFF07" edc:_addr="0x4002414C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="WPEN" edc:nzwidth="0x1" edc:desc="Write Protection Enable"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:nzwidth="0x1" edc:desc="Write Protection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:nzwidth="0x1" edc:desc="Write Protection Control Register Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPEN bit. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x414443"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADC_WPSR" edc:nzwidth="0x20" edc:access="--------rrrrrrrrrrrrrrrr-------r" edc:impl="0xFFFF01" edc:_addr="0x40024150">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="WPVS" edc:nzwidth="0x1" edc:desc="Write Protection Violation Status"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:nzwidth="0x10" edc:desc="Write Protection Violation Source"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3EAC" edc:_addr="0x40024154"/>
      <edc:SFRDef ltx:memberofperipheral="ACC" edc:cname="ACC_CR" edc:nzwidth="0x20" edc:access="-------------------------------w" edc:impl="0x1" edc:_addr="0x40028000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ACC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ACC" edc:cname="ACC_MR" edc:nzwidth="0x20" edc:access="-----------------nnn-nnn-nnn-nnn" edc:impl="0x7777" edc:_addr="0x40028004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ACC">
            <edc:SFRFieldDef edc:cname="SELMINUS" edc:nzwidth="0x3" edc:desc="Selection for Minus Comparator Input">
              <edc:SFRFieldSemantic edc:cname="AD3" edc:desc="Selects AD3" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="AD4" edc:desc="Selects AD4" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="VTEMP" edc:desc="Selects VTEMP" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="VREFTEMP" edc:desc="Selects VREFTEMP" edc:when="(field &amp; 0x7) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SELPLUS" edc:nzwidth="0x3" edc:desc="Selection For Plus Comparator Input">
              <edc:SFRFieldSemantic edc:cname="AD0" edc:desc="Selects AD0" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="AD1" edc:desc="Selects AD1" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="AD2" edc:desc="Selects AD2" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="VREFP" edc:desc="Selects VREFP" edc:when="(field &amp; 0x7) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ACEN" edc:nzwidth="0x1" edc:desc="Analog Comparator Enable">
              <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Analog comparator disabled." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="EN" edc:desc="Analog comparator enabled." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGETYP" edc:nzwidth="0x2" edc:desc="Edge Type">
              <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Only rising edge of comparator output" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Falling edge of comparator output" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ANY" edc:desc="Any edge of comparator output" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="INV" edc:nzwidth="0x1" edc:desc="Invert Comparator Output">
              <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Analog comparator output is directly processed." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="EN" edc:desc="Analog comparator output is inverted prior to being processed." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SELFS" edc:nzwidth="0x1" edc:desc="Selection Of Fault Source">
              <edc:SFRFieldSemantic edc:cname="CE" edc:desc="The CE flag is used to drive the FAULT output." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="OUTPUT" edc:desc="The output of the analog comparator flag is used to drive the FAULT output." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FE" edc:nzwidth="0x1" edc:desc="Fault Enable">
              <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="The FAULT output is tied to 0." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="EN" edc:desc="The FAULT output is driven by the signal defined by SELFS." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1C" edc:_addr="0x40028008"/>
      <edc:SFRDef ltx:memberofperipheral="ACC" edc:cname="ACC_IER" edc:nzwidth="0x20" edc:access="-------------------------------w" edc:impl="0x1" edc:_addr="0x40028024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ACC">
            <edc:SFRFieldDef edc:cname="CE" edc:nzwidth="0x1" edc:desc="Comparison Edge"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ACC" edc:cname="ACC_IDR" edc:nzwidth="0x20" edc:access="-------------------------------w" edc:impl="0x1" edc:_addr="0x40028028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ACC">
            <edc:SFRFieldDef edc:cname="CE" edc:nzwidth="0x1" edc:desc="Comparison Edge"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ACC" edc:cname="ACC_IMR" edc:nzwidth="0x20" edc:access="-------------------------------r" edc:impl="0x1" edc:_addr="0x4002802C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ACC">
            <edc:SFRFieldDef edc:cname="CE" edc:nzwidth="0x1" edc:desc="Comparison Edge"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ACC" edc:cname="ACC_ISR" edc:nzwidth="0x20" edc:access="r-----------------------------rr" edc:impl="0x80000003" edc:_addr="0x40028030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ACC">
            <edc:SFRFieldDef edc:cname="CE" edc:nzwidth="0x1" edc:desc="Comparison Edge (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SCO" edc:nzwidth="0x1" edc:desc="Synchronized Comparator Output"/>
            <edc:AdjustPoint edc:offset="0x1D"/>
            <edc:SFRFieldDef edc:cname="MASK" edc:nzwidth="0x1" edc:desc="Flag Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x60" edc:_addr="0x40028034"/>
      <edc:SFRDef ltx:memberofperipheral="ACC" edc:cname="ACC_ACR" edc:nzwidth="0x20" edc:access="-------------------------------n" edc:impl="0x1" edc:_addr="0x40028094">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ACC">
            <edc:SFRFieldDef edc:cname="MSEL" edc:nzwidth="0x1" edc:desc="Masking Period Selection">
              <edc:SFRFieldSemantic edc:cname="0" edc:desc="Masks AC output for 16 peripheral clock periods after any write access in ACC_MR or ACC_CR" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="Masks AC output for 128 peripheral clock periods after any write access in ACC_MR or ACC_CR" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4C" edc:_addr="0x40028098"/>
      <edc:SFRDef ltx:memberofperipheral="ACC" edc:cname="ACC_WPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-------n" edc:impl="0xFFFFFF01" edc:_addr="0x400280E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ACC">
            <edc:SFRFieldDef edc:cname="WPEN" edc:nzwidth="0x1" edc:desc="Write Protection Configuration Enable"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPEN bit. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x414343"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ACC" edc:cname="ACC_WPSR" edc:nzwidth="0x20" edc:access="-------------------------------r" edc:impl="0x1" edc:_addr="0x400280E8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ACC">
            <edc:SFRFieldDef edc:cname="WPVS" edc:nzwidth="0x1" edc:desc="Write Protection Violation Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3F14" edc:_addr="0x400280EC"/>
      <edc:SFRDef ltx:memberofperipheral="IPC0" edc:cname="IPC0_ISCR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4002C000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="IPC0">
            <edc:SFRFieldDef edc:cname="IRQ0" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ1" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ2" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ3" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ4" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ5" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ6" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ7" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ8" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ9" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ10" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ11" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ12" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ13" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ14" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ15" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ16" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ17" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ18" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ19" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ20" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ21" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ22" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ23" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ24" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ25" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ26" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ27" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ28" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ29" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ30" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ31" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="IPC0" edc:cname="IPC0_ICCR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4002C004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="IPC0">
            <edc:SFRFieldDef edc:cname="IRQ0" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ1" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ2" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ3" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ4" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ5" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ6" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ7" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ8" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ9" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ10" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ11" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ12" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ13" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ14" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ15" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ16" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ17" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ18" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ19" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ20" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ21" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ22" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ23" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ24" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ25" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ26" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ27" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ28" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ29" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ30" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ31" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="IPC0" edc:cname="IPC0_IPR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4002C008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="IPC0">
            <edc:SFRFieldDef edc:cname="IRQ0" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ1" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ2" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ3" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ4" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ5" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ6" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ7" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ8" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ9" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ10" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ11" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ12" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ13" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ14" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ15" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ16" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ17" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ18" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ19" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ20" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ21" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ22" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ23" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ24" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ25" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ26" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ27" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ28" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ29" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ30" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ31" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="IPC0" edc:cname="IPC0_IECR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4002C00C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="IPC0">
            <edc:SFRFieldDef edc:cname="IRQ0" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ1" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ2" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ3" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ4" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ5" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ6" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ7" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ8" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ9" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ10" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ11" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ12" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ13" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ14" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ15" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ16" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ17" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ18" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ19" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ20" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ21" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ22" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ23" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ24" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ25" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ26" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ27" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ28" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ29" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ30" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ31" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="IPC0" edc:cname="IPC0_IDCR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4002C010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="IPC0">
            <edc:SFRFieldDef edc:cname="IRQ0" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ1" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ2" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ3" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ4" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ5" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ6" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ7" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ8" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ9" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ10" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ11" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ12" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ13" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ14" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ15" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ16" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ17" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ18" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ19" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ20" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ21" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ22" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ23" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ24" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ25" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ26" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ27" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ28" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ29" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ30" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ31" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="IPC0" edc:cname="IPC0_IMR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4002C014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="IPC0">
            <edc:SFRFieldDef edc:cname="IRQ0" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ1" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ2" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ3" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ4" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ5" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ6" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ7" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ8" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ9" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ10" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ11" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ12" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ13" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ14" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ15" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ16" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ17" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ18" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ19" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ20" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ21" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ22" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ23" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ24" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ25" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ26" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ27" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ28" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ29" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ30" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ31" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="IPC0" edc:cname="IPC0_ISR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4002C018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="IPC0">
            <edc:SFRFieldDef edc:cname="IRQ0" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ1" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ2" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ3" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ4" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ5" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ6" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ7" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ8" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ9" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ10" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ11" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ12" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ13" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ14" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ15" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ16" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ17" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ18" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ19" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ20" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ21" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ22" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ23" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ24" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ25" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ26" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ27" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ28" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ29" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ30" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ31" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="IPC0" edc:cname="IPC0_WPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn------n-" edc:impl="0xFFFFFF02" edc:_addr="0x4002C01C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="IPC0">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:nzwidth="0x1" edc:desc="Write Protection Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPEN bit. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x495043"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3FE0" edc:_addr="0x4002C020"/>
      <edc:SFRDef ltx:memberofperipheral="SLCDC" edc:cname="SLCDC_CR" edc:nzwidth="0x20" edc:access="----------------wwwwwwwwww--w-ww" edc:impl="0xFFCB" edc:_addr="0x40030000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SLCDC">
            <edc:SFRFieldDef edc:cname="LCDEN" edc:nzwidth="0x1" edc:desc="Enable the LCDC"/>
            <edc:SFRFieldDef edc:cname="LCDDIS" edc:nzwidth="0x1" edc:desc="Disable LCDC"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FRZDF" edc:nzwidth="0x1" edc:desc="Freeze Display Panel Features Configuration"/>
            <edc:SFRFieldDef edc:cname="FRZMAP" edc:nzwidth="0x1" edc:desc="Freeze Remap Configuration"/>
            <edc:SFRFieldDef edc:cname="FRZKEY" edc:nzwidth="0x8" edc:desc="Freeze Key (write-only)">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the FRZDF bit or FRZMAP bit. Always reads as 0." edc:when="(field &amp; 0xFF) == 0x4E"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SLCDC" edc:cname="SLCDC_MR" edc:nzwidth="0x20" edc:access="-------n--nnnnnn--nnnnnn-----nnn" edc:impl="0x13F3F07" edc:_addr="0x40030004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SLCDC">
            <edc:SFRFieldDef edc:cname="COMSEL" edc:nzwidth="0x3" edc:desc="Selection of the Number of Commons">
              <edc:SFRFieldSemantic edc:cname="COM_0" edc:desc="COM0 is driven by SLCDC, COM1:7 are driven by digital function" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="COM_0TO1" edc:desc="COM0:1 are driven by SLCDC, COM2:7 are driven by digital function" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="COM_0TO2" edc:desc="COM0:2 are driven by SLCDC, COM3:7 are driven by digital function" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="COM_0TO3" edc:desc="COM0:3 are driven by SLCDC, COM4:7 are driven by digital function" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="COM_0TO4" edc:desc="COM0:4 are driven by SLCDC, COM5:7 are driven by digital function" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="COM_0TO5" edc:desc="COM0:5 are driven by SLCDC, COM6:7 are driven by digital function" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="COM_0TO6" edc:desc="COM0:6 are driven by SLCDC, COM7 driven by digital function" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="COM_0TO7" edc:desc="COM0:7 are driven by SLCDC, no COM pin driven by digital function" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="SEGSEL" edc:nzwidth="0x6" edc:desc="Selection of the Number of Segments"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="BUFTIME" edc:nzwidth="0x4" edc:desc="Buffer On-Time">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Nominal drive time is 0% of SLCK period" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="X2_SLCK_PERIOD" edc:desc="Nominal drive time is 2 periods of SLCK clock" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="X4_SLCK_PERIOD" edc:desc="Nominal drive time is 4 periods of SLCK clock" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="X8_SLCK_PERIOD" edc:desc="Nominal drive time is 8 periods of SLCK clock" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="X16_SLCK_PERIOD" edc:desc="Nominal drive time is 16 periods of SLCK clock" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="X32_SLCK_PERIOD" edc:desc="Nominal drive time is 32 periods of SLCK clock" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="X64_SLCK_PERIOD" edc:desc="Nominal drive time is 64 periods of SLCK clock" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="X128_SLCK_PERIOD" edc:desc="Nominal drive time is 128 periods of SLCK clock" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="PERCENT_50" edc:desc="Nominal drive time is 50% of SLCK period" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="PERCENT_100" edc:desc="Nominal drive time is 100% of SLCK period" edc:when="(field &amp; 0xF) == 0x09"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BIAS" edc:nzwidth="0x2" edc:desc="LCD Display Configuration">
              <edc:SFRFieldSemantic edc:cname="STATIC" edc:desc="Static" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="BIAS_1_2" edc:desc="Bias 1/2" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="BIAS_1_3" edc:desc="Bias 1/3" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="BIAS_1_4" edc:desc="Bias 1/4" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="LPMODE" edc:nzwidth="0x1" edc:desc="Low-Power Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SLCDC" edc:cname="SLCDC_FRR" edc:nzwidth="0x20" edc:access="---------------------nnn-----nnn" edc:impl="0x707" edc:_addr="0x40030008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SLCDC">
            <edc:SFRFieldDef edc:cname="PRESC" edc:nzwidth="0x3" edc:desc="Clock Prescaler">
              <edc:SFRFieldSemantic edc:cname="SLCK_DIV8" edc:desc="Slow clock is divided by 8" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SLCK_DIV16" edc:desc="Slow clock is divided by 16" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SLCK_DIV32" edc:desc="Slow clock is divided by 32" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SLCK_DIV64" edc:desc="Slow clock is divided by 64" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SLCK_DIV128" edc:desc="Slow clock is divided by 128" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="SLCK_DIV256" edc:desc="Slow clock is divided by 256" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="SLCK_DIV512" edc:desc="Slow clock is divided by 512" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="SLCK_DIV1024" edc:desc="Slow clock is divided by 1024" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="DIV" edc:nzwidth="0x3" edc:desc="Clock Division">
              <edc:SFRFieldSemantic edc:cname="PRESC_CLK_DIV1" edc:desc="Clock output from prescaler is divided by 1" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PRESC_CLK_DIV2" edc:desc="Clock output from prescaler is divided by 2" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="PRESC_CLK_DIV3" edc:desc="Clock output from prescaler is divided by 3" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="PRESC_CLK_DIV4" edc:desc="Clock output from prescaler is divided by 4" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="PRESC_CLK_DIV5" edc:desc="Clock output from prescaler is divided by 5" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="PRESC_CLK_DIV6" edc:desc="Clock output from prescaler is divided by 6" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="PRESC_CLK_DIV7" edc:desc="Clock output from prescaler is divided by 7" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="PRESC_CLK_DIV8" edc:desc="Clock output from prescaler is divided by 8" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SLCDC" edc:cname="SLCDC_DR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnn-----nnn" edc:impl="0xFF07" edc:_addr="0x4003000C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SLCDC">
            <edc:SFRFieldDef edc:cname="DISPMODE" edc:nzwidth="0x3" edc:desc="Display Mode Register">
              <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Normal Mode-Latched data are displayed." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="FORCE_OFF" edc:desc="Force Off Mode-All pixels are invisible. (The SLCDC memory is unchanged.)" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FORCE_ON" edc:desc="Force On Mode-All pixels are visible. (The SLCDC memory is unchanged.)" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="BLINKING" edc:desc="Blinking Mode-All pixels are alternately turned off to the predefined state in SLCDC memory at LCDBLKFREQ frequency. (The SLCDC memory is unchanged.)" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="INVERTED" edc:desc="Inverted Mode-All pixels are set in the inverted state as defined in SLCDC memory. (The SLCDC memory is unchanged.)" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="INVERTED_BLINK" edc:desc="Inverted Blinking Mode-All pixels are alternately turned off to the predefined opposite state in SLCDC memory at LCDBLKFREQ frequency. (The SLCDC memory is unchanged.)" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="USER_BUFFER_LOAD" edc:desc="User Buffer Only Load Mode-Blocks the automatic transfer from User Buffer to Display Buffer." edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="BUFFERS_SWAP" edc:desc="Buffer Swap Mode-All pixels are alternatively assigned to the state defined in the User Buffer, then to the state defined in the Display Buffer at LCDBLKFREQ frequency." edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="LCDBLKFREQ" edc:nzwidth="0x8" edc:desc="LCD Blinking Frequency Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SLCDC" edc:cname="SLCDC_SR" edc:nzwidth="0x20" edc:access="------------------------rr-----r" edc:impl="0xC1" edc:_addr="0x40030010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SLCDC">
            <edc:SFRFieldDef edc:cname="ENA" edc:nzwidth="0x1" edc:desc="Enable Status (Automatically Set/Reset)"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="DFFRZS" edc:nzwidth="0x1" edc:desc="Display Panel Features Configuration Freeze Status"/>
            <edc:SFRFieldDef edc:cname="MAPFRZS" edc:nzwidth="0x1" edc:desc="Remapping Configuration Freeze Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x40030014"/>
      <edc:SFRDef ltx:memberofperipheral="SLCDC" edc:cname="SLCDC_IER" edc:nzwidth="0x20" edc:access="-----------------------------w-w" edc:impl="0x5" edc:_addr="0x40030020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SLCDC">
            <edc:SFRFieldDef edc:cname="ENDFRAME" edc:nzwidth="0x1" edc:desc="End of Frame Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DIS" edc:nzwidth="0x1" edc:desc="Disable Completion Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SLCDC" edc:cname="SLCDC_IDR" edc:nzwidth="0x20" edc:access="-----------------------------w-w" edc:impl="0x5" edc:_addr="0x40030024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SLCDC">
            <edc:SFRFieldDef edc:cname="ENDFRAME" edc:nzwidth="0x1" edc:desc="End of Frame Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DIS" edc:nzwidth="0x1" edc:desc="Disable Completion Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SLCDC" edc:cname="SLCDC_IMR" edc:nzwidth="0x20" edc:access="-----------------------------r-r" edc:impl="0x5" edc:_addr="0x40030028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SLCDC">
            <edc:SFRFieldDef edc:cname="ENDFRAME" edc:nzwidth="0x1" edc:desc="End of Frame Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DIS" edc:nzwidth="0x1" edc:desc="Disable Completion Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SLCDC" edc:cname="SLCDC_ISR" edc:nzwidth="0x20" edc:access="-----------------------------r-r" edc:impl="0x5" edc:_addr="0x4003002C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SLCDC">
            <edc:SFRFieldDef edc:cname="ENDFRAME" edc:nzwidth="0x1" edc:desc="End of Frame Interrupt Status"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DIS" edc:nzwidth="0x1" edc:desc="Disable Completion Interrupt Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SLCDC" edc:cname="SLCDC_SMR0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40030030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SLCDC">
            <edc:SFRFieldDef edc:cname="LCD0" edc:nzwidth="0x1" edc:desc="LCD Segment Mapped on SEGx I/O Pin"/>
            <edc:SFRFieldDef edc:cname="LCD1" edc:nzwidth="0x1" edc:desc="LCD Segment Mapped on SEGx I/O Pin"/>
            <edc:SFRFieldDef edc:cname="LCD2" edc:nzwidth="0x1" edc:desc="LCD Segment Mapped on SEGx I/O Pin"/>
            <edc:SFRFieldDef edc:cname="LCD3" edc:nzwidth="0x1" edc:desc="LCD Segment Mapped on SEGx I/O Pin"/>
            <edc:SFRFieldDef edc:cname="LCD4" edc:nzwidth="0x1" edc:desc="LCD Segment Mapped on SEGx I/O Pin"/>
            <edc:SFRFieldDef edc:cname="LCD5" edc:nzwidth="0x1" edc:desc="LCD Segment Mapped on SEGx I/O Pin"/>
            <edc:SFRFieldDef edc:cname="LCD6" edc:nzwidth="0x1" edc:desc="LCD Segment Mapped on SEGx I/O Pin"/>
            <edc:SFRFieldDef edc:cname="LCD7" edc:nzwidth="0x1" edc:desc="LCD Segment Mapped on SEGx I/O Pin"/>
            <edc:SFRFieldDef edc:cname="LCD8" edc:nzwidth="0x1" edc:desc="LCD Segment Mapped on SEGx I/O Pin"/>
            <edc:SFRFieldDef edc:cname="LCD9" edc:nzwidth="0x1" edc:desc="LCD Segment Mapped on SEGx I/O Pin"/>
            <edc:SFRFieldDef edc:cname="LCD10" edc:nzwidth="0x1" edc:desc="LCD Segment Mapped on SEGx I/O Pin"/>
            <edc:SFRFieldDef edc:cname="LCD11" edc:nzwidth="0x1" edc:desc="LCD Segment Mapped on SEGx I/O Pin"/>
            <edc:SFRFieldDef edc:cname="LCD12" edc:nzwidth="0x1" edc:desc="LCD Segment Mapped on SEGx I/O Pin"/>
            <edc:SFRFieldDef edc:cname="LCD13" edc:nzwidth="0x1" edc:desc="LCD Segment Mapped on SEGx I/O Pin"/>
            <edc:SFRFieldDef edc:cname="LCD14" edc:nzwidth="0x1" edc:desc="LCD Segment Mapped on SEGx I/O Pin"/>
            <edc:SFRFieldDef edc:cname="LCD15" edc:nzwidth="0x1" edc:desc="LCD Segment Mapped on SEGx I/O Pin"/>
            <edc:SFRFieldDef edc:cname="LCD16" edc:nzwidth="0x1" edc:desc="LCD Segment Mapped on SEGx I/O Pin"/>
            <edc:SFRFieldDef edc:cname="LCD17" edc:nzwidth="0x1" edc:desc="LCD Segment Mapped on SEGx I/O Pin"/>
            <edc:SFRFieldDef edc:cname="LCD18" edc:nzwidth="0x1" edc:desc="LCD Segment Mapped on SEGx I/O Pin"/>
            <edc:SFRFieldDef edc:cname="LCD19" edc:nzwidth="0x1" edc:desc="LCD Segment Mapped on SEGx I/O Pin"/>
            <edc:SFRFieldDef edc:cname="LCD20" edc:nzwidth="0x1" edc:desc="LCD Segment Mapped on SEGx I/O Pin"/>
            <edc:SFRFieldDef edc:cname="LCD21" edc:nzwidth="0x1" edc:desc="LCD Segment Mapped on SEGx I/O Pin"/>
            <edc:SFRFieldDef edc:cname="LCD22" edc:nzwidth="0x1" edc:desc="LCD Segment Mapped on SEGx I/O Pin"/>
            <edc:SFRFieldDef edc:cname="LCD23" edc:nzwidth="0x1" edc:desc="LCD Segment Mapped on SEGx I/O Pin"/>
            <edc:SFRFieldDef edc:cname="LCD24" edc:nzwidth="0x1" edc:desc="LCD Segment Mapped on SEGx I/O Pin"/>
            <edc:SFRFieldDef edc:cname="LCD25" edc:nzwidth="0x1" edc:desc="LCD Segment Mapped on SEGx I/O Pin"/>
            <edc:SFRFieldDef edc:cname="LCD26" edc:nzwidth="0x1" edc:desc="LCD Segment Mapped on SEGx I/O Pin"/>
            <edc:SFRFieldDef edc:cname="LCD27" edc:nzwidth="0x1" edc:desc="LCD Segment Mapped on SEGx I/O Pin"/>
            <edc:SFRFieldDef edc:cname="LCD28" edc:nzwidth="0x1" edc:desc="LCD Segment Mapped on SEGx I/O Pin"/>
            <edc:SFRFieldDef edc:cname="LCD29" edc:nzwidth="0x1" edc:desc="LCD Segment Mapped on SEGx I/O Pin"/>
            <edc:SFRFieldDef edc:cname="LCD30" edc:nzwidth="0x1" edc:desc="LCD Segment Mapped on SEGx I/O Pin"/>
            <edc:SFRFieldDef edc:cname="LCD31" edc:nzwidth="0x1" edc:desc="LCD Segment Mapped on SEGx I/O Pin"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xB0" edc:_addr="0x40030034"/>
      <edc:SFRDef ltx:memberofperipheral="SLCDC" edc:cname="SLCDC_WPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:impl="0xFFFFFF07" edc:_addr="0x400300E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SLCDC">
            <edc:SFRFieldDef edc:cname="WPEN" edc:nzwidth="0x1" edc:desc="Write Protection Enable"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:nzwidth="0x1" edc:desc="Write Protection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:nzwidth="0x1" edc:desc="Write Protection Control Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPEN bit. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x534C43"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x118" edc:_addr="0x400300E8"/>
      <edc:SFRDef ltx:memberofperipheral="SLCDC" edc:cname="SLCDC_LMEMR0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40030200">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SLCDC">
            <edc:SFRFieldDef edc:cname="LPIXEL" edc:nzwidth="0x20" edc:desc="LSB Pixels Pattern Associated to COMx Terminal"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x40030204"/>
      <edc:SFRDef ltx:memberofperipheral="SLCDC" edc:cname="SLCDC_LMEMR1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40030208">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SLCDC">
            <edc:SFRFieldDef edc:cname="LPIXEL" edc:nzwidth="0x20" edc:desc="LSB Pixels Pattern Associated to COMx Terminal"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4003020C"/>
      <edc:SFRDef ltx:memberofperipheral="SLCDC" edc:cname="SLCDC_LMEMR2" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40030210">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SLCDC">
            <edc:SFRFieldDef edc:cname="LPIXEL" edc:nzwidth="0x20" edc:desc="LSB Pixels Pattern Associated to COMx Terminal"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x40030214"/>
      <edc:SFRDef ltx:memberofperipheral="SLCDC" edc:cname="SLCDC_LMEMR3" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40030218">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SLCDC">
            <edc:SFRFieldDef edc:cname="LPIXEL" edc:nzwidth="0x20" edc:desc="LSB Pixels Pattern Associated to COMx Terminal"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4003021C"/>
      <edc:SFRDef ltx:memberofperipheral="SLCDC" edc:cname="SLCDC_LMEMR4" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40030220">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SLCDC">
            <edc:SFRFieldDef edc:cname="LPIXEL" edc:nzwidth="0x20" edc:desc="LSB Pixels Pattern Associated to COMx Terminal"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x40030224"/>
      <edc:SFRDef ltx:memberofperipheral="SLCDC" edc:cname="SLCDC_LMEMR5" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40030228">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SLCDC">
            <edc:SFRFieldDef edc:cname="LPIXEL" edc:nzwidth="0x20" edc:desc="LSB Pixels Pattern Associated to COMx Terminal"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4003022C"/>
      <edc:SFRDef ltx:memberofperipheral="SLCDC" edc:cname="SLCDC_LMEMR6" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40030230">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SLCDC">
            <edc:SFRFieldDef edc:cname="LPIXEL" edc:nzwidth="0x20" edc:desc="LSB Pixels Pattern Associated to COMx Terminal"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x40030234"/>
      <edc:SFRDef ltx:memberofperipheral="SLCDC" edc:cname="SLCDC_LMEMR7" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40030238">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SLCDC">
            <edc:SFRFieldDef edc:cname="LPIXEL" edc:nzwidth="0x20" edc:desc="LSB Pixels Pattern Associated to COMx Terminal"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3DC4" edc:_addr="0x4003023C"/>
      <edc:SFRDef ltx:memberofperipheral="MEM2MEM0" edc:cname="MEM2MEM0_THR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40034000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MEM2MEM0">
            <edc:SFRFieldDef edc:cname="THDATA" edc:nzwidth="0x20" edc:desc="Transfer Holding Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MEM2MEM0" edc:cname="MEM2MEM0_MR" edc:nzwidth="0x20" edc:access="------------------------------nn" edc:impl="0x3" edc:_addr="0x40034004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MEM2MEM0">
            <edc:SFRFieldDef edc:cname="TSIZE" edc:nzwidth="0x2" edc:desc="Transfer Size">
              <edc:SFRFieldSemantic edc:cname="T_8BIT" edc:desc="The buffer size is defined in bytes." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="T_16BIT" edc:desc="The buffer size is defined in half-words (16-bit)." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="T_32BIT" edc:desc="The buffer size is defined in words (32-bit). Default value." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MEM2MEM0" edc:cname="MEM2MEM0_IER" edc:nzwidth="0x20" edc:access="------------------------------ww" edc:impl="0x3" edc:_addr="0x40034008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MEM2MEM0">
            <edc:SFRFieldDef edc:cname="RXEND" edc:nzwidth="0x1" edc:desc="End of Transfer Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Buffer Full Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MEM2MEM0" edc:cname="MEM2MEM0_IDR" edc:nzwidth="0x20" edc:access="------------------------------ww" edc:impl="0x3" edc:_addr="0x4003400C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MEM2MEM0">
            <edc:SFRFieldDef edc:cname="RXEND" edc:nzwidth="0x1" edc:desc="End of Transfer Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Buffer Full Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MEM2MEM0" edc:cname="MEM2MEM0_IMR" edc:nzwidth="0x20" edc:access="------------------------------rr" edc:impl="0x3" edc:_addr="0x40034010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MEM2MEM0">
            <edc:SFRFieldDef edc:cname="RXEND" edc:nzwidth="0x1" edc:desc="End of Transfer Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Buffer Full Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MEM2MEM0" edc:cname="MEM2MEM0_ISR" edc:nzwidth="0x20" edc:access="------------------------------rr" edc:impl="0x3" edc:_addr="0x40034014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MEM2MEM0">
            <edc:SFRFieldDef edc:cname="RXEND" edc:nzwidth="0x1" edc:desc="End of Transfer"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Buffer Full"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MEM2MEM0" edc:cname="MEM2MEM0_WPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn------nn" edc:impl="0xFFFFFF03" edc:_addr="0x40034018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MEM2MEM0">
            <edc:SFRFieldDef edc:cname="WPEN" edc:nzwidth="0x1" edc:desc="Write Protection Configuration Enable"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:nzwidth="0x1" edc:desc="Write Protection Interruption Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPEN, WPITEN bits. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x4D454D"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xE4" edc:_addr="0x4003401C"/>
      <edc:SFRDef ltx:memberofperipheral="MEM2MEM0" edc:cname="MEM2MEM0_RPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40034100">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MEM2MEM0">
            <edc:SFRFieldDef edc:cname="RXPTR" edc:nzwidth="0x20" edc:desc="Receive Pointer Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MEM2MEM0" edc:cname="MEM2MEM0_RCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x40034104">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MEM2MEM0">
            <edc:SFRFieldDef edc:cname="RXCTR" edc:nzwidth="0x10" edc:desc="Receive Counter Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MEM2MEM0" edc:cname="MEM2MEM0_TPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40034108">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MEM2MEM0">
            <edc:SFRFieldDef edc:cname="TXPTR" edc:nzwidth="0x20" edc:desc="Transmit Counter Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MEM2MEM0" edc:cname="MEM2MEM0_TCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x4003410C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MEM2MEM0">
            <edc:SFRFieldDef edc:cname="TXCTR" edc:nzwidth="0x10" edc:desc="Transmit Counter Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MEM2MEM0" edc:cname="MEM2MEM0_RNPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40034110">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MEM2MEM0">
            <edc:SFRFieldDef edc:cname="RXNPTR" edc:nzwidth="0x20" edc:desc="Receive Next Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MEM2MEM0" edc:cname="MEM2MEM0_RNCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x40034114">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MEM2MEM0">
            <edc:SFRFieldDef edc:cname="RXNCTR" edc:nzwidth="0x10" edc:desc="Receive Next Counter"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MEM2MEM0" edc:cname="MEM2MEM0_TNPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40034118">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MEM2MEM0">
            <edc:SFRFieldDef edc:cname="TXNPTR" edc:nzwidth="0x20" edc:desc="Transmit Next Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MEM2MEM0" edc:cname="MEM2MEM0_TNCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x4003411C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MEM2MEM0">
            <edc:SFRFieldDef edc:cname="TXNCTR" edc:nzwidth="0x10" edc:desc="Transmit Counter Next"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MEM2MEM0" edc:cname="MEM2MEM0_PTCR" edc:nzwidth="0x20" edc:access="-------w----wwww------ww------ww" edc:impl="0x10F0303" edc:_addr="0x40034120">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MEM2MEM0">
            <edc:SFRFieldDef edc:cname="RXTEN" edc:nzwidth="0x1" edc:desc="Receiver Transfer Enable"/>
            <edc:SFRFieldDef edc:cname="RXTDIS" edc:nzwidth="0x1" edc:desc="Receiver Transfer Disable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="TXTEN" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Enable"/>
            <edc:SFRFieldDef edc:cname="TXTDIS" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Disable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="RXCBEN" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Enable"/>
            <edc:SFRFieldDef edc:cname="RXCBDIS" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Disable"/>
            <edc:SFRFieldDef edc:cname="TXCBEN" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Enable"/>
            <edc:SFRFieldDef edc:cname="TXCBDIS" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Disable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ERRCLR" edc:nzwidth="0x1" edc:desc="Transfer Bus Error Clear"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MEM2MEM0" edc:cname="MEM2MEM0_PTSR" edc:nzwidth="0x20" edc:access="-------r-----r-r-------r-------r" edc:impl="0x1050101" edc:_addr="0x40034124">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MEM2MEM0">
            <edc:SFRFieldDef edc:cname="RXTEN" edc:nzwidth="0x1" edc:desc="Receiver Transfer Enable"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="TXTEN" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Enable"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="RXCBEN" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXCBEN" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Transfer Bus Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MEM2MEM0" edc:cname="MEM2MEM0_PWPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:impl="0xFFFFFF07" edc:_addr="0x40034128">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MEM2MEM0">
            <edc:SFRFieldDef edc:cname="WPPTREN" edc:nzwidth="0x1" edc:desc="Write Protection Pointer Registers Enable"/>
            <edc:SFRFieldDef edc:cname="WPCTREN" edc:nzwidth="0x1" edc:desc="Write Protection Counter Registers Enable"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:nzwidth="0x1" edc:desc="Write Protection Control Register Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x504443"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3ED4" edc:_addr="0x4003412C"/>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC_CHANNEL0TC0_CCR" edc:nzwidth="0x20" edc:access="-----------------------------www" edc:impl="0x7" edc:_addr="0x40038000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="CLKEN" edc:nzwidth="0x1" edc:desc="Counter Clock Enable Command"/>
            <edc:SFRFieldDef edc:cname="CLKDIS" edc:nzwidth="0x1" edc:desc="Counter Clock Disable Command"/>
            <edc:SFRFieldDef edc:cname="SWTRG" edc:nzwidth="0x1" edc:desc="Software Trigger Command"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC_CHANNEL0TC0_CMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40038004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="TCCLKS" edc:nzwidth="0x3" edc:desc="Clock Selection">
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK1" edc:desc="Clock selected: internal GCLK [TC_ID] clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK2" edc:desc="Clock selected: internal MCK/8 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK3" edc:desc="Clock selected: internal MCK/32 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK4" edc:desc="Clock selected: internal MCK/128 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK5" edc:desc="Clock selected: internal MD_SLCK clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="Clock selected: XC0" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="Clock selected: XC1" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="Clock selected: XC2" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CLKI" edc:nzwidth="0x1" edc:desc="Clock Invert"/>
            <edc:SFRFieldDef edc:cname="BURST" edc:nzwidth="0x2" edc:desc="Burst Signal Selection">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="The clock is not gated by an external signal." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="XC0 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="XC1 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="XC2 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPCSTOP" edc:nzwidth="0x1" edc:desc="Counter Clock Stopped with RC Compare"/>
            <edc:SFRFieldDef edc:cname="CPCDIS" edc:nzwidth="0x1" edc:desc="Counter Clock Disable with RC Compare"/>
            <edc:SFRFieldDef edc:cname="EEVTEDG" edc:nzwidth="0x2" edc:desc="External Event Edge Selection">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Rising edge" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Falling edge" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="EDGE" edc:desc="Each edge" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EEVT" edc:nzwidth="0x2" edc:desc="External Event Selection">
              <edc:SFRFieldSemantic edc:cname="TIOB" edc:desc="TIOB" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="XC0" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="XC1" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="XC2" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ENETRG" edc:nzwidth="0x1" edc:desc="External Event Trigger Enable"/>
            <edc:SFRFieldDef edc:cname="WAVSEL" edc:nzwidth="0x2" edc:desc="Waveform Selection">
              <edc:SFRFieldSemantic edc:cname="UP" edc:desc="UP mode without automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="UPDOWN" edc:desc="UPDOWN mode without automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="UP_RC" edc:desc="UP mode with automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="UPDOWN_RC" edc:desc="UPDOWN mode with automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="-1"/>
            <edc:SFRFieldDef edc:cname="CPCTRG" edc:nzwidth="0x1" edc:desc="RC Compare Trigger Enable"/>
            <edc:SFRFieldDef edc:cname="WAVE" edc:nzwidth="0x1" edc:desc="Waveform Mode"/>
            <edc:SFRFieldDef edc:cname="ACPA" edc:nzwidth="0x2" edc:desc="RA Compare Effect on TIOAx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ACPC" edc:nzwidth="0x2" edc:desc="RC Compare Effect on TIOAx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AEEVT" edc:nzwidth="0x2" edc:desc="External Event Effect on TIOAx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASWTRG" edc:nzwidth="0x2" edc:desc="Software Trigger Effect on TIOAx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BCPB" edc:nzwidth="0x2" edc:desc="RB Compare Effect on TIOBx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BCPC" edc:nzwidth="0x2" edc:desc="RC Compare Effect on TIOBx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BEEVT" edc:nzwidth="0x2" edc:desc="External Event Effect on TIOBx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BSWTRG" edc:nzwidth="0x2" edc:desc="Software Trigger Effect on TIOBx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC_CHANNEL0TC0_SMMR" edc:nzwidth="0x20" edc:access="------------------------------nn" edc:impl="0x3" edc:_addr="0x40038008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="GCEN" edc:nzwidth="0x1" edc:desc="Gray Count Enable"/>
            <edc:SFRFieldDef edc:cname="DOWN" edc:nzwidth="0x1" edc:desc="Down Count"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4003800C"/>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC_CHANNEL0TC0_CV" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40038010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="CV" edc:nzwidth="0x20" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC_CHANNEL0TC0_RA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40038014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="RA" edc:nzwidth="0x20" edc:desc="Register A"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC_CHANNEL0TC0_RB" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40038018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="RB" edc:nzwidth="0x20" edc:desc="Register B"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC_CHANNEL0TC0_RC" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4003801C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="RC" edc:nzwidth="0x20" edc:desc="Register C"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC_CHANNEL0TC0_SR" edc:nzwidth="0x20" edc:access="-------------rrr-----rrrrrrrrrrr" edc:impl="0x707FF" edc:_addr="0x40038020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="COVFS" edc:nzwidth="0x1" edc:desc="Counter Overflow Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:nzwidth="0x1" edc:desc="Load Overrun Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:nzwidth="0x1" edc:desc="RA Compare Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:nzwidth="0x1" edc:desc="RB Compare Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:nzwidth="0x1" edc:desc="RC Compare Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:nzwidth="0x1" edc:desc="RA Loading Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:nzwidth="0x1" edc:desc="RB Loading Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1" edc:desc="External Trigger Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receiver Transfer (cleared by writing TC_RCR or TC_RNCR)"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Reception Buffer Full (cleared by writing TC_RCR or TC_RNCR)"/>
            <edc:SFRFieldDef edc:cname="SECE" edc:nzwidth="0x1" edc:desc="Security and/or Safety Event (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="CLKSTA" edc:nzwidth="0x1" edc:desc="Clock Enabling Status"/>
            <edc:SFRFieldDef edc:cname="MTIOA" edc:nzwidth="0x1" edc:desc="TIOAx Mirror"/>
            <edc:SFRFieldDef edc:cname="MTIOB" edc:nzwidth="0x1" edc:desc="TIOBx Mirror"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC_CHANNEL0TC0_IER" edc:nzwidth="0x20" edc:access="---------------------wwwwwwwwwww" edc:impl="0x7FF" edc:_addr="0x40038024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="COVFS" edc:nzwidth="0x1" edc:desc="Counter Overflow"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:nzwidth="0x1" edc:desc="Load Overrun"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:nzwidth="0x1" edc:desc="RA Compare"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:nzwidth="0x1" edc:desc="RB Compare"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:nzwidth="0x1" edc:desc="RC Compare"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:nzwidth="0x1" edc:desc="RA Loading"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:nzwidth="0x1" edc:desc="RB Loading"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1" edc:desc="External Trigger"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receiver Transfer"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Reception Buffer Full"/>
            <edc:SFRFieldDef edc:cname="SECE" edc:nzwidth="0x1" edc:desc="Security and/or Safety Event Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC_CHANNEL0TC0_IDR" edc:nzwidth="0x20" edc:access="---------------------wwwwwwwwwww" edc:impl="0x7FF" edc:_addr="0x40038028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="COVFS" edc:nzwidth="0x1" edc:desc="Counter Overflow"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:nzwidth="0x1" edc:desc="Load Overrun"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:nzwidth="0x1" edc:desc="RA Compare"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:nzwidth="0x1" edc:desc="RB Compare"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:nzwidth="0x1" edc:desc="RC Compare"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:nzwidth="0x1" edc:desc="RA Loading"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:nzwidth="0x1" edc:desc="RB Loading"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1" edc:desc="External Trigger"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receiver Transfer"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Reception Buffer Full"/>
            <edc:SFRFieldDef edc:cname="SECE" edc:nzwidth="0x1" edc:desc="Security and/or Safety Event Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC_CHANNEL0TC0_IMR" edc:nzwidth="0x20" edc:access="---------------------rrrrrrrrrrr" edc:impl="0x7FF" edc:_addr="0x4003802C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="COVFS" edc:nzwidth="0x1" edc:desc="Counter Overflow"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:nzwidth="0x1" edc:desc="Load Overrun"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:nzwidth="0x1" edc:desc="RA Compare"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:nzwidth="0x1" edc:desc="RB Compare"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:nzwidth="0x1" edc:desc="RC Compare"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:nzwidth="0x1" edc:desc="RA Loading"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:nzwidth="0x1" edc:desc="RB Loading"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1" edc:desc="External Trigger"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receiver Transfer"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Reception Buffer Full"/>
            <edc:SFRFieldDef edc:cname="SECE" edc:nzwidth="0x1" edc:desc="Security and/or Safety Event Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC_CHANNEL0TC0_EMR" edc:nzwidth="0x20" edc:access="-----------------------n--nn--nn" edc:impl="0x133" edc:_addr="0x40038030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="TRIGSRCA" edc:nzwidth="0x2" edc:desc="Trigger Source for Input A">
              <edc:SFRFieldSemantic edc:cname="EXTERNAL_TIOAx" edc:desc="The trigger/capture input A is driven by external pin TIOAx" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PWMx" edc:desc="The trigger/capture input A is driven internally by PWMx" edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TRIGSRCB" edc:nzwidth="0x2" edc:desc="Trigger Source for Input B">
              <edc:SFRFieldSemantic edc:cname="EXTERNAL_TIOBx" edc:desc="The trigger/capture input B is driven by external pin TIOBx" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PWMx" edc:desc="The trigger/capture input B is driven internally by the comparator output (see Figure 7-16) of the PWMx." edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="NODIVCLK" edc:nzwidth="0x1" edc:desc="No Divided Clock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC_CHANNEL0TC0_CSR" edc:nzwidth="0x20" edc:access="-------------rrr----------------" edc:impl="0x70000" edc:_addr="0x40038034">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:AdjustPoint edc:offset="0x10"/>
            <edc:SFRFieldDef edc:cname="CLKSTA" edc:nzwidth="0x1" edc:desc="Clock Enabling Status"/>
            <edc:SFRFieldDef edc:cname="MTIOA" edc:nzwidth="0x1" edc:desc="TIOAx Mirror"/>
            <edc:SFRFieldDef edc:cname="MTIOB" edc:nzwidth="0x1" edc:desc="TIOBx Mirror"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC_CHANNEL0TC0_SSR" edc:nzwidth="0x20" edc:access="r---rrrrrrrrrrrrrrrrrrrr----rrrr" edc:impl="0x8FFFFF0F" edc:_addr="0x40038038">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="WPVS" edc:nzwidth="0x1" edc:desc="Write Protection Violation Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CGD" edc:nzwidth="0x1" edc:desc="Clock Glitch Detected (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SEQE" edc:nzwidth="0x1" edc:desc="Internal Sequencer Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SWE" edc:nzwidth="0x1" edc:desc="Software Control Error (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:nzwidth="0x10" edc:desc="Write Protection Violation Source (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SWETYP" edc:nzwidth="0x4" edc:desc="Software Error Type (cleared on read)">
              <edc:SFRFieldSemantic edc:cname="READ_WO" edc:desc="TC Channel x is enabled and a write-only register has been read (Warning)." edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="WRITE_RO" edc:desc="TC Channel x is enabled and a write access has been performed on a read-only register (Warning)." edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="UNDEF_RW" edc:desc="Access to an undefined address of the TC (Warning)." edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="W_RARB_CAPT" edc:desc="TC_RAx or TC_RBx are written while channel is enabled and configured in capture mode (Error)." edc:when="(field &amp; 0xF) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ECLASS" edc:nzwidth="0x1" edc:desc="Software Error Class">
              <edc:SFRFieldSemantic edc:cname="WARNING" edc:desc="An abnormal access that does not have any impact." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ERROR" edc:desc="An abnormal access that may have an impact." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4003803C"/>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC_CHANNEL1TC0_CCR" edc:nzwidth="0x20" edc:access="-----------------------------www" edc:impl="0x7" edc:_addr="0x40038040">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="CLKEN" edc:nzwidth="0x1" edc:desc="Counter Clock Enable Command"/>
            <edc:SFRFieldDef edc:cname="CLKDIS" edc:nzwidth="0x1" edc:desc="Counter Clock Disable Command"/>
            <edc:SFRFieldDef edc:cname="SWTRG" edc:nzwidth="0x1" edc:desc="Software Trigger Command"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC_CHANNEL1TC0_CMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40038044">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="TCCLKS" edc:nzwidth="0x3" edc:desc="Clock Selection">
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK1" edc:desc="Clock selected: internal GCLK [TC_ID] clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK2" edc:desc="Clock selected: internal MCK/8 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK3" edc:desc="Clock selected: internal MCK/32 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK4" edc:desc="Clock selected: internal MCK/128 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK5" edc:desc="Clock selected: internal MD_SLCK clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="Clock selected: XC0" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="Clock selected: XC1" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="Clock selected: XC2" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CLKI" edc:nzwidth="0x1" edc:desc="Clock Invert"/>
            <edc:SFRFieldDef edc:cname="BURST" edc:nzwidth="0x2" edc:desc="Burst Signal Selection">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="The clock is not gated by an external signal." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="XC0 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="XC1 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="XC2 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPCSTOP" edc:nzwidth="0x1" edc:desc="Counter Clock Stopped with RC Compare"/>
            <edc:SFRFieldDef edc:cname="CPCDIS" edc:nzwidth="0x1" edc:desc="Counter Clock Disable with RC Compare"/>
            <edc:SFRFieldDef edc:cname="EEVTEDG" edc:nzwidth="0x2" edc:desc="External Event Edge Selection">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Rising edge" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Falling edge" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="EDGE" edc:desc="Each edge" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EEVT" edc:nzwidth="0x2" edc:desc="External Event Selection">
              <edc:SFRFieldSemantic edc:cname="TIOB" edc:desc="TIOB" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="XC0" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="XC1" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="XC2" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ENETRG" edc:nzwidth="0x1" edc:desc="External Event Trigger Enable"/>
            <edc:SFRFieldDef edc:cname="WAVSEL" edc:nzwidth="0x2" edc:desc="Waveform Selection">
              <edc:SFRFieldSemantic edc:cname="UP" edc:desc="UP mode without automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="UPDOWN" edc:desc="UPDOWN mode without automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="UP_RC" edc:desc="UP mode with automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="UPDOWN_RC" edc:desc="UPDOWN mode with automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="-1"/>
            <edc:SFRFieldDef edc:cname="CPCTRG" edc:nzwidth="0x1" edc:desc="RC Compare Trigger Enable"/>
            <edc:SFRFieldDef edc:cname="WAVE" edc:nzwidth="0x1" edc:desc="Waveform Mode"/>
            <edc:SFRFieldDef edc:cname="ACPA" edc:nzwidth="0x2" edc:desc="RA Compare Effect on TIOAx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ACPC" edc:nzwidth="0x2" edc:desc="RC Compare Effect on TIOAx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AEEVT" edc:nzwidth="0x2" edc:desc="External Event Effect on TIOAx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASWTRG" edc:nzwidth="0x2" edc:desc="Software Trigger Effect on TIOAx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BCPB" edc:nzwidth="0x2" edc:desc="RB Compare Effect on TIOBx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BCPC" edc:nzwidth="0x2" edc:desc="RC Compare Effect on TIOBx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BEEVT" edc:nzwidth="0x2" edc:desc="External Event Effect on TIOBx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BSWTRG" edc:nzwidth="0x2" edc:desc="Software Trigger Effect on TIOBx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC_CHANNEL1TC0_SMMR" edc:nzwidth="0x20" edc:access="------------------------------nn" edc:impl="0x3" edc:_addr="0x40038048">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="GCEN" edc:nzwidth="0x1" edc:desc="Gray Count Enable"/>
            <edc:SFRFieldDef edc:cname="DOWN" edc:nzwidth="0x1" edc:desc="Down Count"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4003804C"/>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC_CHANNEL1TC0_CV" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40038050">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="CV" edc:nzwidth="0x20" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC_CHANNEL1TC0_RA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40038054">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="RA" edc:nzwidth="0x20" edc:desc="Register A"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC_CHANNEL1TC0_RB" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40038058">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="RB" edc:nzwidth="0x20" edc:desc="Register B"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC_CHANNEL1TC0_RC" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4003805C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="RC" edc:nzwidth="0x20" edc:desc="Register C"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC_CHANNEL1TC0_SR" edc:nzwidth="0x20" edc:access="-------------rrr-----rrrrrrrrrrr" edc:impl="0x707FF" edc:_addr="0x40038060">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="COVFS" edc:nzwidth="0x1" edc:desc="Counter Overflow Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:nzwidth="0x1" edc:desc="Load Overrun Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:nzwidth="0x1" edc:desc="RA Compare Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:nzwidth="0x1" edc:desc="RB Compare Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:nzwidth="0x1" edc:desc="RC Compare Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:nzwidth="0x1" edc:desc="RA Loading Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:nzwidth="0x1" edc:desc="RB Loading Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1" edc:desc="External Trigger Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receiver Transfer (cleared by writing TC_RCR or TC_RNCR)"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Reception Buffer Full (cleared by writing TC_RCR or TC_RNCR)"/>
            <edc:SFRFieldDef edc:cname="SECE" edc:nzwidth="0x1" edc:desc="Security and/or Safety Event (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="CLKSTA" edc:nzwidth="0x1" edc:desc="Clock Enabling Status"/>
            <edc:SFRFieldDef edc:cname="MTIOA" edc:nzwidth="0x1" edc:desc="TIOAx Mirror"/>
            <edc:SFRFieldDef edc:cname="MTIOB" edc:nzwidth="0x1" edc:desc="TIOBx Mirror"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC_CHANNEL1TC0_IER" edc:nzwidth="0x20" edc:access="---------------------wwwwwwwwwww" edc:impl="0x7FF" edc:_addr="0x40038064">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="COVFS" edc:nzwidth="0x1" edc:desc="Counter Overflow"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:nzwidth="0x1" edc:desc="Load Overrun"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:nzwidth="0x1" edc:desc="RA Compare"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:nzwidth="0x1" edc:desc="RB Compare"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:nzwidth="0x1" edc:desc="RC Compare"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:nzwidth="0x1" edc:desc="RA Loading"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:nzwidth="0x1" edc:desc="RB Loading"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1" edc:desc="External Trigger"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receiver Transfer"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Reception Buffer Full"/>
            <edc:SFRFieldDef edc:cname="SECE" edc:nzwidth="0x1" edc:desc="Security and/or Safety Event Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC_CHANNEL1TC0_IDR" edc:nzwidth="0x20" edc:access="---------------------wwwwwwwwwww" edc:impl="0x7FF" edc:_addr="0x40038068">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="COVFS" edc:nzwidth="0x1" edc:desc="Counter Overflow"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:nzwidth="0x1" edc:desc="Load Overrun"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:nzwidth="0x1" edc:desc="RA Compare"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:nzwidth="0x1" edc:desc="RB Compare"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:nzwidth="0x1" edc:desc="RC Compare"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:nzwidth="0x1" edc:desc="RA Loading"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:nzwidth="0x1" edc:desc="RB Loading"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1" edc:desc="External Trigger"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receiver Transfer"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Reception Buffer Full"/>
            <edc:SFRFieldDef edc:cname="SECE" edc:nzwidth="0x1" edc:desc="Security and/or Safety Event Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC_CHANNEL1TC0_IMR" edc:nzwidth="0x20" edc:access="---------------------rrrrrrrrrrr" edc:impl="0x7FF" edc:_addr="0x4003806C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="COVFS" edc:nzwidth="0x1" edc:desc="Counter Overflow"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:nzwidth="0x1" edc:desc="Load Overrun"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:nzwidth="0x1" edc:desc="RA Compare"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:nzwidth="0x1" edc:desc="RB Compare"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:nzwidth="0x1" edc:desc="RC Compare"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:nzwidth="0x1" edc:desc="RA Loading"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:nzwidth="0x1" edc:desc="RB Loading"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1" edc:desc="External Trigger"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receiver Transfer"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Reception Buffer Full"/>
            <edc:SFRFieldDef edc:cname="SECE" edc:nzwidth="0x1" edc:desc="Security and/or Safety Event Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC_CHANNEL1TC0_EMR" edc:nzwidth="0x20" edc:access="-----------------------n--nn--nn" edc:impl="0x133" edc:_addr="0x40038070">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="TRIGSRCA" edc:nzwidth="0x2" edc:desc="Trigger Source for Input A">
              <edc:SFRFieldSemantic edc:cname="EXTERNAL_TIOAx" edc:desc="The trigger/capture input A is driven by external pin TIOAx" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PWMx" edc:desc="The trigger/capture input A is driven internally by PWMx" edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TRIGSRCB" edc:nzwidth="0x2" edc:desc="Trigger Source for Input B">
              <edc:SFRFieldSemantic edc:cname="EXTERNAL_TIOBx" edc:desc="The trigger/capture input B is driven by external pin TIOBx" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PWMx" edc:desc="The trigger/capture input B is driven internally by the comparator output (see Figure 7-16) of the PWMx." edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="NODIVCLK" edc:nzwidth="0x1" edc:desc="No Divided Clock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC_CHANNEL1TC0_CSR" edc:nzwidth="0x20" edc:access="-------------rrr----------------" edc:impl="0x70000" edc:_addr="0x40038074">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:AdjustPoint edc:offset="0x10"/>
            <edc:SFRFieldDef edc:cname="CLKSTA" edc:nzwidth="0x1" edc:desc="Clock Enabling Status"/>
            <edc:SFRFieldDef edc:cname="MTIOA" edc:nzwidth="0x1" edc:desc="TIOAx Mirror"/>
            <edc:SFRFieldDef edc:cname="MTIOB" edc:nzwidth="0x1" edc:desc="TIOBx Mirror"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC_CHANNEL1TC0_SSR" edc:nzwidth="0x20" edc:access="r---rrrrrrrrrrrrrrrrrrrr----rrrr" edc:impl="0x8FFFFF0F" edc:_addr="0x40038078">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="WPVS" edc:nzwidth="0x1" edc:desc="Write Protection Violation Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CGD" edc:nzwidth="0x1" edc:desc="Clock Glitch Detected (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SEQE" edc:nzwidth="0x1" edc:desc="Internal Sequencer Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SWE" edc:nzwidth="0x1" edc:desc="Software Control Error (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:nzwidth="0x10" edc:desc="Write Protection Violation Source (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SWETYP" edc:nzwidth="0x4" edc:desc="Software Error Type (cleared on read)">
              <edc:SFRFieldSemantic edc:cname="READ_WO" edc:desc="TC Channel x is enabled and a write-only register has been read (Warning)." edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="WRITE_RO" edc:desc="TC Channel x is enabled and a write access has been performed on a read-only register (Warning)." edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="UNDEF_RW" edc:desc="Access to an undefined address of the TC (Warning)." edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="W_RARB_CAPT" edc:desc="TC_RAx or TC_RBx are written while channel is enabled and configured in capture mode (Error)." edc:when="(field &amp; 0xF) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ECLASS" edc:nzwidth="0x1" edc:desc="Software Error Class">
              <edc:SFRFieldSemantic edc:cname="WARNING" edc:desc="An abnormal access that does not have any impact." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ERROR" edc:desc="An abnormal access that may have an impact." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4003807C"/>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC_CHANNEL2TC0_CCR" edc:nzwidth="0x20" edc:access="-----------------------------www" edc:impl="0x7" edc:_addr="0x40038080">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="CLKEN" edc:nzwidth="0x1" edc:desc="Counter Clock Enable Command"/>
            <edc:SFRFieldDef edc:cname="CLKDIS" edc:nzwidth="0x1" edc:desc="Counter Clock Disable Command"/>
            <edc:SFRFieldDef edc:cname="SWTRG" edc:nzwidth="0x1" edc:desc="Software Trigger Command"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC_CHANNEL2TC0_CMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40038084">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="TCCLKS" edc:nzwidth="0x3" edc:desc="Clock Selection">
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK1" edc:desc="Clock selected: internal GCLK [TC_ID] clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK2" edc:desc="Clock selected: internal MCK/8 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK3" edc:desc="Clock selected: internal MCK/32 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK4" edc:desc="Clock selected: internal MCK/128 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK5" edc:desc="Clock selected: internal MD_SLCK clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="Clock selected: XC0" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="Clock selected: XC1" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="Clock selected: XC2" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CLKI" edc:nzwidth="0x1" edc:desc="Clock Invert"/>
            <edc:SFRFieldDef edc:cname="BURST" edc:nzwidth="0x2" edc:desc="Burst Signal Selection">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="The clock is not gated by an external signal." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="XC0 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="XC1 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="XC2 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPCSTOP" edc:nzwidth="0x1" edc:desc="Counter Clock Stopped with RC Compare"/>
            <edc:SFRFieldDef edc:cname="CPCDIS" edc:nzwidth="0x1" edc:desc="Counter Clock Disable with RC Compare"/>
            <edc:SFRFieldDef edc:cname="EEVTEDG" edc:nzwidth="0x2" edc:desc="External Event Edge Selection">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Rising edge" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Falling edge" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="EDGE" edc:desc="Each edge" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EEVT" edc:nzwidth="0x2" edc:desc="External Event Selection">
              <edc:SFRFieldSemantic edc:cname="TIOB" edc:desc="TIOB" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="XC0" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="XC1" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="XC2" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ENETRG" edc:nzwidth="0x1" edc:desc="External Event Trigger Enable"/>
            <edc:SFRFieldDef edc:cname="WAVSEL" edc:nzwidth="0x2" edc:desc="Waveform Selection">
              <edc:SFRFieldSemantic edc:cname="UP" edc:desc="UP mode without automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="UPDOWN" edc:desc="UPDOWN mode without automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="UP_RC" edc:desc="UP mode with automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="UPDOWN_RC" edc:desc="UPDOWN mode with automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="-1"/>
            <edc:SFRFieldDef edc:cname="CPCTRG" edc:nzwidth="0x1" edc:desc="RC Compare Trigger Enable"/>
            <edc:SFRFieldDef edc:cname="WAVE" edc:nzwidth="0x1" edc:desc="Waveform Mode"/>
            <edc:SFRFieldDef edc:cname="ACPA" edc:nzwidth="0x2" edc:desc="RA Compare Effect on TIOAx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ACPC" edc:nzwidth="0x2" edc:desc="RC Compare Effect on TIOAx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AEEVT" edc:nzwidth="0x2" edc:desc="External Event Effect on TIOAx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASWTRG" edc:nzwidth="0x2" edc:desc="Software Trigger Effect on TIOAx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BCPB" edc:nzwidth="0x2" edc:desc="RB Compare Effect on TIOBx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BCPC" edc:nzwidth="0x2" edc:desc="RC Compare Effect on TIOBx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BEEVT" edc:nzwidth="0x2" edc:desc="External Event Effect on TIOBx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BSWTRG" edc:nzwidth="0x2" edc:desc="Software Trigger Effect on TIOBx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC_CHANNEL2TC0_SMMR" edc:nzwidth="0x20" edc:access="------------------------------nn" edc:impl="0x3" edc:_addr="0x40038088">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="GCEN" edc:nzwidth="0x1" edc:desc="Gray Count Enable"/>
            <edc:SFRFieldDef edc:cname="DOWN" edc:nzwidth="0x1" edc:desc="Down Count"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4003808C"/>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC_CHANNEL2TC0_CV" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40038090">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="CV" edc:nzwidth="0x20" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC_CHANNEL2TC0_RA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40038094">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="RA" edc:nzwidth="0x20" edc:desc="Register A"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC_CHANNEL2TC0_RB" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40038098">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="RB" edc:nzwidth="0x20" edc:desc="Register B"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC_CHANNEL2TC0_RC" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4003809C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="RC" edc:nzwidth="0x20" edc:desc="Register C"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC_CHANNEL2TC0_SR" edc:nzwidth="0x20" edc:access="-------------rrr-----rrrrrrrrrrr" edc:impl="0x707FF" edc:_addr="0x400380A0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="COVFS" edc:nzwidth="0x1" edc:desc="Counter Overflow Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:nzwidth="0x1" edc:desc="Load Overrun Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:nzwidth="0x1" edc:desc="RA Compare Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:nzwidth="0x1" edc:desc="RB Compare Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:nzwidth="0x1" edc:desc="RC Compare Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:nzwidth="0x1" edc:desc="RA Loading Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:nzwidth="0x1" edc:desc="RB Loading Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1" edc:desc="External Trigger Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receiver Transfer (cleared by writing TC_RCR or TC_RNCR)"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Reception Buffer Full (cleared by writing TC_RCR or TC_RNCR)"/>
            <edc:SFRFieldDef edc:cname="SECE" edc:nzwidth="0x1" edc:desc="Security and/or Safety Event (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="CLKSTA" edc:nzwidth="0x1" edc:desc="Clock Enabling Status"/>
            <edc:SFRFieldDef edc:cname="MTIOA" edc:nzwidth="0x1" edc:desc="TIOAx Mirror"/>
            <edc:SFRFieldDef edc:cname="MTIOB" edc:nzwidth="0x1" edc:desc="TIOBx Mirror"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC_CHANNEL2TC0_IER" edc:nzwidth="0x20" edc:access="---------------------wwwwwwwwwww" edc:impl="0x7FF" edc:_addr="0x400380A4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="COVFS" edc:nzwidth="0x1" edc:desc="Counter Overflow"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:nzwidth="0x1" edc:desc="Load Overrun"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:nzwidth="0x1" edc:desc="RA Compare"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:nzwidth="0x1" edc:desc="RB Compare"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:nzwidth="0x1" edc:desc="RC Compare"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:nzwidth="0x1" edc:desc="RA Loading"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:nzwidth="0x1" edc:desc="RB Loading"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1" edc:desc="External Trigger"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receiver Transfer"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Reception Buffer Full"/>
            <edc:SFRFieldDef edc:cname="SECE" edc:nzwidth="0x1" edc:desc="Security and/or Safety Event Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC_CHANNEL2TC0_IDR" edc:nzwidth="0x20" edc:access="---------------------wwwwwwwwwww" edc:impl="0x7FF" edc:_addr="0x400380A8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="COVFS" edc:nzwidth="0x1" edc:desc="Counter Overflow"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:nzwidth="0x1" edc:desc="Load Overrun"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:nzwidth="0x1" edc:desc="RA Compare"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:nzwidth="0x1" edc:desc="RB Compare"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:nzwidth="0x1" edc:desc="RC Compare"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:nzwidth="0x1" edc:desc="RA Loading"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:nzwidth="0x1" edc:desc="RB Loading"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1" edc:desc="External Trigger"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receiver Transfer"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Reception Buffer Full"/>
            <edc:SFRFieldDef edc:cname="SECE" edc:nzwidth="0x1" edc:desc="Security and/or Safety Event Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC_CHANNEL2TC0_IMR" edc:nzwidth="0x20" edc:access="---------------------rrrrrrrrrrr" edc:impl="0x7FF" edc:_addr="0x400380AC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="COVFS" edc:nzwidth="0x1" edc:desc="Counter Overflow"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:nzwidth="0x1" edc:desc="Load Overrun"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:nzwidth="0x1" edc:desc="RA Compare"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:nzwidth="0x1" edc:desc="RB Compare"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:nzwidth="0x1" edc:desc="RC Compare"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:nzwidth="0x1" edc:desc="RA Loading"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:nzwidth="0x1" edc:desc="RB Loading"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1" edc:desc="External Trigger"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receiver Transfer"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Reception Buffer Full"/>
            <edc:SFRFieldDef edc:cname="SECE" edc:nzwidth="0x1" edc:desc="Security and/or Safety Event Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC_CHANNEL2TC0_EMR" edc:nzwidth="0x20" edc:access="-----------------------n--nn--nn" edc:impl="0x133" edc:_addr="0x400380B0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="TRIGSRCA" edc:nzwidth="0x2" edc:desc="Trigger Source for Input A">
              <edc:SFRFieldSemantic edc:cname="EXTERNAL_TIOAx" edc:desc="The trigger/capture input A is driven by external pin TIOAx" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PWMx" edc:desc="The trigger/capture input A is driven internally by PWMx" edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TRIGSRCB" edc:nzwidth="0x2" edc:desc="Trigger Source for Input B">
              <edc:SFRFieldSemantic edc:cname="EXTERNAL_TIOBx" edc:desc="The trigger/capture input B is driven by external pin TIOBx" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PWMx" edc:desc="The trigger/capture input B is driven internally by the comparator output (see Figure 7-16) of the PWMx." edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="NODIVCLK" edc:nzwidth="0x1" edc:desc="No Divided Clock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC_CHANNEL2TC0_CSR" edc:nzwidth="0x20" edc:access="-------------rrr----------------" edc:impl="0x70000" edc:_addr="0x400380B4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:AdjustPoint edc:offset="0x10"/>
            <edc:SFRFieldDef edc:cname="CLKSTA" edc:nzwidth="0x1" edc:desc="Clock Enabling Status"/>
            <edc:SFRFieldDef edc:cname="MTIOA" edc:nzwidth="0x1" edc:desc="TIOAx Mirror"/>
            <edc:SFRFieldDef edc:cname="MTIOB" edc:nzwidth="0x1" edc:desc="TIOBx Mirror"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC_CHANNEL2TC0_SSR" edc:nzwidth="0x20" edc:access="r---rrrrrrrrrrrrrrrrrrrr----rrrr" edc:impl="0x8FFFFF0F" edc:_addr="0x400380B8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="WPVS" edc:nzwidth="0x1" edc:desc="Write Protection Violation Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CGD" edc:nzwidth="0x1" edc:desc="Clock Glitch Detected (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SEQE" edc:nzwidth="0x1" edc:desc="Internal Sequencer Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SWE" edc:nzwidth="0x1" edc:desc="Software Control Error (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:nzwidth="0x10" edc:desc="Write Protection Violation Source (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SWETYP" edc:nzwidth="0x4" edc:desc="Software Error Type (cleared on read)">
              <edc:SFRFieldSemantic edc:cname="READ_WO" edc:desc="TC Channel x is enabled and a write-only register has been read (Warning)." edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="WRITE_RO" edc:desc="TC Channel x is enabled and a write access has been performed on a read-only register (Warning)." edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="UNDEF_RW" edc:desc="Access to an undefined address of the TC (Warning)." edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="W_RARB_CAPT" edc:desc="TC_RAx or TC_RBx are written while channel is enabled and configured in capture mode (Error)." edc:when="(field &amp; 0xF) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ECLASS" edc:nzwidth="0x1" edc:desc="Software Error Class">
              <edc:SFRFieldSemantic edc:cname="WARNING" edc:desc="An abnormal access that does not have any impact." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ERROR" edc:desc="An abnormal access that may have an impact." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x400380BC"/>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC0_BCR" edc:nzwidth="0x20" edc:access="-------------------------------w" edc:impl="0x1" edc:_addr="0x400380C0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="SYNC" edc:nzwidth="0x1" edc:desc="Synchro Command"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC0_BMR" edc:nzwidth="0x20" edc:access="------nnnnnn--nnnnnnnnnn--nnnnnn" edc:impl="0x3F3FF3F" edc:_addr="0x400380C4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="TC0XC0S" edc:nzwidth="0x2" edc:desc="External Clock Signal 0 Selection">
              <edc:SFRFieldSemantic edc:cname="TCLK0" edc:desc="Signal connected to XC0: TCLK0" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TIOA1" edc:desc="Signal connected to XC0: TIOA1" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TIOA2" edc:desc="Signal connected to XC0: TIOA2" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TC1XC1S" edc:nzwidth="0x2" edc:desc="External Clock Signal 1 Selection">
              <edc:SFRFieldSemantic edc:cname="TCLK1" edc:desc="Signal connected to XC1: TCLK1" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TIOA0" edc:desc="Signal connected to XC1: TIOA0" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TIOA2" edc:desc="Signal connected to XC1: TIOA2" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TC2XC2S" edc:nzwidth="0x2" edc:desc="External Clock Signal 2 Selection">
              <edc:SFRFieldSemantic edc:cname="TCLK2" edc:desc="Signal connected to XC2: TCLK2" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TIOA0" edc:desc="Signal connected to XC2: TIOA0" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TIOA1" edc:desc="Signal connected to XC2: TIOA1" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="QDEN" edc:nzwidth="0x1" edc:desc="Quadrature Decoder Enabled"/>
            <edc:SFRFieldDef edc:cname="POSEN" edc:nzwidth="0x1" edc:desc="Position Enabled"/>
            <edc:SFRFieldDef edc:cname="SPEEDEN" edc:nzwidth="0x1" edc:desc="Speed Enabled"/>
            <edc:SFRFieldDef edc:cname="QDTRANS" edc:nzwidth="0x1" edc:desc="Quadrature Decoding Transparent"/>
            <edc:SFRFieldDef edc:cname="EDGPHA" edc:nzwidth="0x1" edc:desc="Edge on PHA Count Mode"/>
            <edc:SFRFieldDef edc:cname="INVA" edc:nzwidth="0x1" edc:desc="Inverted PHA"/>
            <edc:SFRFieldDef edc:cname="INVB" edc:nzwidth="0x1" edc:desc="Inverted PHB"/>
            <edc:SFRFieldDef edc:cname="INVIDX" edc:nzwidth="0x1" edc:desc="Inverted Index"/>
            <edc:SFRFieldDef edc:cname="SWAP" edc:nzwidth="0x1" edc:desc="Swap PHA and PHB"/>
            <edc:SFRFieldDef edc:cname="IDXPHB" edc:nzwidth="0x1" edc:desc="Index Pin is PHB Pin"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MAXFILT" edc:nzwidth="0x6" edc:desc="Maximum Filter"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC0_QIER" edc:nzwidth="0x20" edc:access="------------------------wwww-www" edc:impl="0xF7" edc:_addr="0x400380C8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="IDX" edc:nzwidth="0x1" edc:desc="Index"/>
            <edc:SFRFieldDef edc:cname="DIRCHG" edc:nzwidth="0x1" edc:desc="Direction Change"/>
            <edc:SFRFieldDef edc:cname="QERR" edc:nzwidth="0x1" edc:desc="Quadrature Error"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FPHA" edc:nzwidth="0x1" edc:desc="Filtered Phase A Line"/>
            <edc:SFRFieldDef edc:cname="FPHB" edc:nzwidth="0x1" edc:desc="Filtered Phase B Line"/>
            <edc:SFRFieldDef edc:cname="FIDX" edc:nzwidth="0x1" edc:desc="Filtered Index Line"/>
            <edc:SFRFieldDef edc:cname="FMP" edc:nzwidth="0x1" edc:desc="Filtered Missing Pulse"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC0_QIDR" edc:nzwidth="0x20" edc:access="------------------------wwww-www" edc:impl="0xF7" edc:_addr="0x400380CC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="IDX" edc:nzwidth="0x1" edc:desc="Index"/>
            <edc:SFRFieldDef edc:cname="DIRCHG" edc:nzwidth="0x1" edc:desc="Direction Change"/>
            <edc:SFRFieldDef edc:cname="QERR" edc:nzwidth="0x1" edc:desc="Quadrature Error"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FPHA" edc:nzwidth="0x1" edc:desc="Filtered Phase A Line"/>
            <edc:SFRFieldDef edc:cname="FPHB" edc:nzwidth="0x1" edc:desc="Filtered Phase B Line"/>
            <edc:SFRFieldDef edc:cname="FIDX" edc:nzwidth="0x1" edc:desc="Filtered Index Line"/>
            <edc:SFRFieldDef edc:cname="FMP" edc:nzwidth="0x1" edc:desc="Filtered Missing Pulse"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC0_QIMR" edc:nzwidth="0x20" edc:access="------------------------rrrr-rrr" edc:impl="0xF7" edc:_addr="0x400380D0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="IDX" edc:nzwidth="0x1" edc:desc="Index"/>
            <edc:SFRFieldDef edc:cname="DIRCHG" edc:nzwidth="0x1" edc:desc="Direction Change"/>
            <edc:SFRFieldDef edc:cname="QERR" edc:nzwidth="0x1" edc:desc="Quadrature Error"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FPHA" edc:nzwidth="0x1" edc:desc="Filtered Phase A Line"/>
            <edc:SFRFieldDef edc:cname="FPHB" edc:nzwidth="0x1" edc:desc="Filtered Phase B Line"/>
            <edc:SFRFieldDef edc:cname="FIDX" edc:nzwidth="0x1" edc:desc="Filtered Index Line"/>
            <edc:SFRFieldDef edc:cname="FMP" edc:nzwidth="0x1" edc:desc="Filtered Missing Pulse"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC0_QISR" edc:nzwidth="0x20" edc:access="-----------------------rrrrr-rrr" edc:impl="0x1F7" edc:_addr="0x400380D4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="IDX" edc:nzwidth="0x1" edc:desc="Index"/>
            <edc:SFRFieldDef edc:cname="DIRCHG" edc:nzwidth="0x1" edc:desc="Direction Change"/>
            <edc:SFRFieldDef edc:cname="QERR" edc:nzwidth="0x1" edc:desc="Quadrature Error"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FPHA" edc:nzwidth="0x1" edc:desc="Filtered Phase A Line"/>
            <edc:SFRFieldDef edc:cname="FPHB" edc:nzwidth="0x1" edc:desc="Filtered Phase B Line"/>
            <edc:SFRFieldDef edc:cname="FIDX" edc:nzwidth="0x1" edc:desc="Filtered Index Line"/>
            <edc:SFRFieldDef edc:cname="FMP" edc:nzwidth="0x1" edc:desc="Filtered Missing Pulse"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Direction"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC0_FMR" edc:nzwidth="0x20" edc:access="------------------------------nn" edc:impl="0x3" edc:_addr="0x400380D8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="ENCF0" edc:nzwidth="0x1" edc:desc="Enable Compare Fault Channel 0"/>
            <edc:SFRFieldDef edc:cname="ENCF1" edc:nzwidth="0x1" edc:desc="Enable Compare Fault Channel 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC0_QSR" edc:nzwidth="0x20" edc:access="-----------------------r--------" edc:impl="0x100" edc:_addr="0x400380DC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Direction"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x400380E0"/>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC0_WPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn---n-nnn" edc:impl="0xFFFFFF17" edc:_addr="0x400380E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="WPEN" edc:nzwidth="0x1" edc:desc="Write Protection Enable"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:nzwidth="0x1" edc:desc="Write Protection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:nzwidth="0x1" edc:desc="Write Protection Control Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FIRSTE" edc:nzwidth="0x1" edc:desc="First Error Report Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPEN bit. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x54494D"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x18" edc:_addr="0x400380E8"/>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC0_RPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40038100">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="RXPTR" edc:nzwidth="0x20" edc:desc="Receive Pointer Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC0_RCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x40038104">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="RXCTR" edc:nzwidth="0x10" edc:desc="Receive Counter Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x40038108"/>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC0_RNPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40038110">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="RXNPTR" edc:nzwidth="0x20" edc:desc="Receive Next Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC0_RNCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x40038114">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="RXNCTR" edc:nzwidth="0x10" edc:desc="Receive Next Counter"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x40038118"/>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC0_PTC0R" edc:nzwidth="0x20" edc:access="-------w----wwww------ww------ww" edc:impl="0x10F0303" edc:_addr="0x40038120">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="RXTEN" edc:nzwidth="0x1" edc:desc="Receiver Transfer Enable"/>
            <edc:SFRFieldDef edc:cname="RXTDIS" edc:nzwidth="0x1" edc:desc="Receiver Transfer Disable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="TXTEN" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Enable"/>
            <edc:SFRFieldDef edc:cname="TXTDIS" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Disable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="RXCBEN" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Enable"/>
            <edc:SFRFieldDef edc:cname="RXCBDIS" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Disable"/>
            <edc:SFRFieldDef edc:cname="TXCBEN" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Enable"/>
            <edc:SFRFieldDef edc:cname="TXCBDIS" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Disable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ERRCLR" edc:nzwidth="0x1" edc:desc="Transfer Bus Error Clear"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC0_PTSR" edc:nzwidth="0x20" edc:access="-------r-----r-r-------r-------r" edc:impl="0x1050101" edc:_addr="0x40038124">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="RXTEN" edc:nzwidth="0x1" edc:desc="Receiver Transfer Enable"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="TXTEN" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Enable"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="RXCBEN" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXCBEN" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Transfer Bus Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TC0_PWPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:impl="0xFFFFFF07" edc:_addr="0x40038128">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="WPPTREN" edc:nzwidth="0x1" edc:desc="Write Protection Pointer Registers Enable"/>
            <edc:SFRFieldDef edc:cname="WPCTREN" edc:nzwidth="0x1" edc:desc="Write Protection Counter Registers Enable"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:nzwidth="0x1" edc:desc="Write Protection Control Register Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x504443"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3ED4" edc:_addr="0x4003812C"/>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC_CHANNEL0TC1_CCR" edc:nzwidth="0x20" edc:access="-----------------------------www" edc:impl="0x7" edc:_addr="0x4003C000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="CLKEN" edc:nzwidth="0x1" edc:desc="Counter Clock Enable Command"/>
            <edc:SFRFieldDef edc:cname="CLKDIS" edc:nzwidth="0x1" edc:desc="Counter Clock Disable Command"/>
            <edc:SFRFieldDef edc:cname="SWTRG" edc:nzwidth="0x1" edc:desc="Software Trigger Command"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC_CHANNEL0TC1_CMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4003C004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="TCCLKS" edc:nzwidth="0x3" edc:desc="Clock Selection">
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK1" edc:desc="Clock selected: internal GCLK [TC_ID] clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK2" edc:desc="Clock selected: internal MCK/8 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK3" edc:desc="Clock selected: internal MCK/32 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK4" edc:desc="Clock selected: internal MCK/128 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK5" edc:desc="Clock selected: internal MD_SLCK clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="Clock selected: XC0" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="Clock selected: XC1" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="Clock selected: XC2" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CLKI" edc:nzwidth="0x1" edc:desc="Clock Invert"/>
            <edc:SFRFieldDef edc:cname="BURST" edc:nzwidth="0x2" edc:desc="Burst Signal Selection">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="The clock is not gated by an external signal." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="XC0 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="XC1 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="XC2 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPCSTOP" edc:nzwidth="0x1" edc:desc="Counter Clock Stopped with RC Compare"/>
            <edc:SFRFieldDef edc:cname="CPCDIS" edc:nzwidth="0x1" edc:desc="Counter Clock Disable with RC Compare"/>
            <edc:SFRFieldDef edc:cname="EEVTEDG" edc:nzwidth="0x2" edc:desc="External Event Edge Selection">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Rising edge" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Falling edge" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="EDGE" edc:desc="Each edge" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EEVT" edc:nzwidth="0x2" edc:desc="External Event Selection">
              <edc:SFRFieldSemantic edc:cname="TIOB" edc:desc="TIOB" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="XC0" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="XC1" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="XC2" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ENETRG" edc:nzwidth="0x1" edc:desc="External Event Trigger Enable"/>
            <edc:SFRFieldDef edc:cname="WAVSEL" edc:nzwidth="0x2" edc:desc="Waveform Selection">
              <edc:SFRFieldSemantic edc:cname="UP" edc:desc="UP mode without automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="UPDOWN" edc:desc="UPDOWN mode without automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="UP_RC" edc:desc="UP mode with automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="UPDOWN_RC" edc:desc="UPDOWN mode with automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="-1"/>
            <edc:SFRFieldDef edc:cname="CPCTRG" edc:nzwidth="0x1" edc:desc="RC Compare Trigger Enable"/>
            <edc:SFRFieldDef edc:cname="WAVE" edc:nzwidth="0x1" edc:desc="Waveform Mode"/>
            <edc:SFRFieldDef edc:cname="ACPA" edc:nzwidth="0x2" edc:desc="RA Compare Effect on TIOAx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ACPC" edc:nzwidth="0x2" edc:desc="RC Compare Effect on TIOAx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AEEVT" edc:nzwidth="0x2" edc:desc="External Event Effect on TIOAx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASWTRG" edc:nzwidth="0x2" edc:desc="Software Trigger Effect on TIOAx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BCPB" edc:nzwidth="0x2" edc:desc="RB Compare Effect on TIOBx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BCPC" edc:nzwidth="0x2" edc:desc="RC Compare Effect on TIOBx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BEEVT" edc:nzwidth="0x2" edc:desc="External Event Effect on TIOBx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BSWTRG" edc:nzwidth="0x2" edc:desc="Software Trigger Effect on TIOBx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC_CHANNEL0TC1_SMMR" edc:nzwidth="0x20" edc:access="------------------------------nn" edc:impl="0x3" edc:_addr="0x4003C008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="GCEN" edc:nzwidth="0x1" edc:desc="Gray Count Enable"/>
            <edc:SFRFieldDef edc:cname="DOWN" edc:nzwidth="0x1" edc:desc="Down Count"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4003C00C"/>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC_CHANNEL0TC1_CV" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4003C010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="CV" edc:nzwidth="0x20" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC_CHANNEL0TC1_RA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4003C014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="RA" edc:nzwidth="0x20" edc:desc="Register A"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC_CHANNEL0TC1_RB" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4003C018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="RB" edc:nzwidth="0x20" edc:desc="Register B"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC_CHANNEL0TC1_RC" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4003C01C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="RC" edc:nzwidth="0x20" edc:desc="Register C"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC_CHANNEL0TC1_SR" edc:nzwidth="0x20" edc:access="-------------rrr-----rrrrrrrrrrr" edc:impl="0x707FF" edc:_addr="0x4003C020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="COVFS" edc:nzwidth="0x1" edc:desc="Counter Overflow Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:nzwidth="0x1" edc:desc="Load Overrun Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:nzwidth="0x1" edc:desc="RA Compare Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:nzwidth="0x1" edc:desc="RB Compare Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:nzwidth="0x1" edc:desc="RC Compare Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:nzwidth="0x1" edc:desc="RA Loading Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:nzwidth="0x1" edc:desc="RB Loading Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1" edc:desc="External Trigger Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receiver Transfer (cleared by writing TC_RCR or TC_RNCR)"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Reception Buffer Full (cleared by writing TC_RCR or TC_RNCR)"/>
            <edc:SFRFieldDef edc:cname="SECE" edc:nzwidth="0x1" edc:desc="Security and/or Safety Event (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="CLKSTA" edc:nzwidth="0x1" edc:desc="Clock Enabling Status"/>
            <edc:SFRFieldDef edc:cname="MTIOA" edc:nzwidth="0x1" edc:desc="TIOAx Mirror"/>
            <edc:SFRFieldDef edc:cname="MTIOB" edc:nzwidth="0x1" edc:desc="TIOBx Mirror"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC_CHANNEL0TC1_IER" edc:nzwidth="0x20" edc:access="---------------------wwwwwwwwwww" edc:impl="0x7FF" edc:_addr="0x4003C024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="COVFS" edc:nzwidth="0x1" edc:desc="Counter Overflow"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:nzwidth="0x1" edc:desc="Load Overrun"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:nzwidth="0x1" edc:desc="RA Compare"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:nzwidth="0x1" edc:desc="RB Compare"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:nzwidth="0x1" edc:desc="RC Compare"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:nzwidth="0x1" edc:desc="RA Loading"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:nzwidth="0x1" edc:desc="RB Loading"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1" edc:desc="External Trigger"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receiver Transfer"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Reception Buffer Full"/>
            <edc:SFRFieldDef edc:cname="SECE" edc:nzwidth="0x1" edc:desc="Security and/or Safety Event Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC_CHANNEL0TC1_IDR" edc:nzwidth="0x20" edc:access="---------------------wwwwwwwwwww" edc:impl="0x7FF" edc:_addr="0x4003C028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="COVFS" edc:nzwidth="0x1" edc:desc="Counter Overflow"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:nzwidth="0x1" edc:desc="Load Overrun"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:nzwidth="0x1" edc:desc="RA Compare"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:nzwidth="0x1" edc:desc="RB Compare"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:nzwidth="0x1" edc:desc="RC Compare"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:nzwidth="0x1" edc:desc="RA Loading"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:nzwidth="0x1" edc:desc="RB Loading"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1" edc:desc="External Trigger"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receiver Transfer"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Reception Buffer Full"/>
            <edc:SFRFieldDef edc:cname="SECE" edc:nzwidth="0x1" edc:desc="Security and/or Safety Event Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC_CHANNEL0TC1_IMR" edc:nzwidth="0x20" edc:access="---------------------rrrrrrrrrrr" edc:impl="0x7FF" edc:_addr="0x4003C02C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="COVFS" edc:nzwidth="0x1" edc:desc="Counter Overflow"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:nzwidth="0x1" edc:desc="Load Overrun"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:nzwidth="0x1" edc:desc="RA Compare"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:nzwidth="0x1" edc:desc="RB Compare"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:nzwidth="0x1" edc:desc="RC Compare"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:nzwidth="0x1" edc:desc="RA Loading"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:nzwidth="0x1" edc:desc="RB Loading"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1" edc:desc="External Trigger"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receiver Transfer"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Reception Buffer Full"/>
            <edc:SFRFieldDef edc:cname="SECE" edc:nzwidth="0x1" edc:desc="Security and/or Safety Event Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC_CHANNEL0TC1_EMR" edc:nzwidth="0x20" edc:access="-----------------------n--nn--nn" edc:impl="0x133" edc:_addr="0x4003C030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="TRIGSRCA" edc:nzwidth="0x2" edc:desc="Trigger Source for Input A">
              <edc:SFRFieldSemantic edc:cname="EXTERNAL_TIOAx" edc:desc="The trigger/capture input A is driven by external pin TIOAx" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PWMx" edc:desc="The trigger/capture input A is driven internally by PWMx" edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TRIGSRCB" edc:nzwidth="0x2" edc:desc="Trigger Source for Input B">
              <edc:SFRFieldSemantic edc:cname="EXTERNAL_TIOBx" edc:desc="The trigger/capture input B is driven by external pin TIOBx" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PWMx" edc:desc="The trigger/capture input B is driven internally by the comparator output (see Figure 7-16) of the PWMx." edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="NODIVCLK" edc:nzwidth="0x1" edc:desc="No Divided Clock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC_CHANNEL0TC1_CSR" edc:nzwidth="0x20" edc:access="-------------rrr----------------" edc:impl="0x70000" edc:_addr="0x4003C034">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:AdjustPoint edc:offset="0x10"/>
            <edc:SFRFieldDef edc:cname="CLKSTA" edc:nzwidth="0x1" edc:desc="Clock Enabling Status"/>
            <edc:SFRFieldDef edc:cname="MTIOA" edc:nzwidth="0x1" edc:desc="TIOAx Mirror"/>
            <edc:SFRFieldDef edc:cname="MTIOB" edc:nzwidth="0x1" edc:desc="TIOBx Mirror"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC_CHANNEL0TC1_SSR" edc:nzwidth="0x20" edc:access="r---rrrrrrrrrrrrrrrrrrrr----rrrr" edc:impl="0x8FFFFF0F" edc:_addr="0x4003C038">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="WPVS" edc:nzwidth="0x1" edc:desc="Write Protection Violation Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CGD" edc:nzwidth="0x1" edc:desc="Clock Glitch Detected (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SEQE" edc:nzwidth="0x1" edc:desc="Internal Sequencer Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SWE" edc:nzwidth="0x1" edc:desc="Software Control Error (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:nzwidth="0x10" edc:desc="Write Protection Violation Source (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SWETYP" edc:nzwidth="0x4" edc:desc="Software Error Type (cleared on read)">
              <edc:SFRFieldSemantic edc:cname="READ_WO" edc:desc="TC Channel x is enabled and a write-only register has been read (Warning)." edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="WRITE_RO" edc:desc="TC Channel x is enabled and a write access has been performed on a read-only register (Warning)." edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="UNDEF_RW" edc:desc="Access to an undefined address of the TC (Warning)." edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="W_RARB_CAPT" edc:desc="TC_RAx or TC_RBx are written while channel is enabled and configured in capture mode (Error)." edc:when="(field &amp; 0xF) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ECLASS" edc:nzwidth="0x1" edc:desc="Software Error Class">
              <edc:SFRFieldSemantic edc:cname="WARNING" edc:desc="An abnormal access that does not have any impact." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ERROR" edc:desc="An abnormal access that may have an impact." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4003C03C"/>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC_CHANNEL1TC1_CCR" edc:nzwidth="0x20" edc:access="-----------------------------www" edc:impl="0x7" edc:_addr="0x4003C040">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="CLKEN" edc:nzwidth="0x1" edc:desc="Counter Clock Enable Command"/>
            <edc:SFRFieldDef edc:cname="CLKDIS" edc:nzwidth="0x1" edc:desc="Counter Clock Disable Command"/>
            <edc:SFRFieldDef edc:cname="SWTRG" edc:nzwidth="0x1" edc:desc="Software Trigger Command"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC_CHANNEL1TC1_CMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4003C044">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="TCCLKS" edc:nzwidth="0x3" edc:desc="Clock Selection">
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK1" edc:desc="Clock selected: internal GCLK [TC_ID] clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK2" edc:desc="Clock selected: internal MCK/8 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK3" edc:desc="Clock selected: internal MCK/32 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK4" edc:desc="Clock selected: internal MCK/128 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK5" edc:desc="Clock selected: internal MD_SLCK clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="Clock selected: XC0" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="Clock selected: XC1" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="Clock selected: XC2" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CLKI" edc:nzwidth="0x1" edc:desc="Clock Invert"/>
            <edc:SFRFieldDef edc:cname="BURST" edc:nzwidth="0x2" edc:desc="Burst Signal Selection">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="The clock is not gated by an external signal." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="XC0 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="XC1 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="XC2 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPCSTOP" edc:nzwidth="0x1" edc:desc="Counter Clock Stopped with RC Compare"/>
            <edc:SFRFieldDef edc:cname="CPCDIS" edc:nzwidth="0x1" edc:desc="Counter Clock Disable with RC Compare"/>
            <edc:SFRFieldDef edc:cname="EEVTEDG" edc:nzwidth="0x2" edc:desc="External Event Edge Selection">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Rising edge" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Falling edge" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="EDGE" edc:desc="Each edge" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EEVT" edc:nzwidth="0x2" edc:desc="External Event Selection">
              <edc:SFRFieldSemantic edc:cname="TIOB" edc:desc="TIOB" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="XC0" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="XC1" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="XC2" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ENETRG" edc:nzwidth="0x1" edc:desc="External Event Trigger Enable"/>
            <edc:SFRFieldDef edc:cname="WAVSEL" edc:nzwidth="0x2" edc:desc="Waveform Selection">
              <edc:SFRFieldSemantic edc:cname="UP" edc:desc="UP mode without automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="UPDOWN" edc:desc="UPDOWN mode without automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="UP_RC" edc:desc="UP mode with automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="UPDOWN_RC" edc:desc="UPDOWN mode with automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="-1"/>
            <edc:SFRFieldDef edc:cname="CPCTRG" edc:nzwidth="0x1" edc:desc="RC Compare Trigger Enable"/>
            <edc:SFRFieldDef edc:cname="WAVE" edc:nzwidth="0x1" edc:desc="Waveform Mode"/>
            <edc:SFRFieldDef edc:cname="ACPA" edc:nzwidth="0x2" edc:desc="RA Compare Effect on TIOAx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ACPC" edc:nzwidth="0x2" edc:desc="RC Compare Effect on TIOAx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AEEVT" edc:nzwidth="0x2" edc:desc="External Event Effect on TIOAx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASWTRG" edc:nzwidth="0x2" edc:desc="Software Trigger Effect on TIOAx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BCPB" edc:nzwidth="0x2" edc:desc="RB Compare Effect on TIOBx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BCPC" edc:nzwidth="0x2" edc:desc="RC Compare Effect on TIOBx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BEEVT" edc:nzwidth="0x2" edc:desc="External Event Effect on TIOBx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BSWTRG" edc:nzwidth="0x2" edc:desc="Software Trigger Effect on TIOBx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC_CHANNEL1TC1_SMMR" edc:nzwidth="0x20" edc:access="------------------------------nn" edc:impl="0x3" edc:_addr="0x4003C048">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="GCEN" edc:nzwidth="0x1" edc:desc="Gray Count Enable"/>
            <edc:SFRFieldDef edc:cname="DOWN" edc:nzwidth="0x1" edc:desc="Down Count"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4003C04C"/>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC_CHANNEL1TC1_CV" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4003C050">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="CV" edc:nzwidth="0x20" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC_CHANNEL1TC1_RA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4003C054">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="RA" edc:nzwidth="0x20" edc:desc="Register A"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC_CHANNEL1TC1_RB" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4003C058">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="RB" edc:nzwidth="0x20" edc:desc="Register B"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC_CHANNEL1TC1_RC" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4003C05C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="RC" edc:nzwidth="0x20" edc:desc="Register C"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC_CHANNEL1TC1_SR" edc:nzwidth="0x20" edc:access="-------------rrr-----rrrrrrrrrrr" edc:impl="0x707FF" edc:_addr="0x4003C060">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="COVFS" edc:nzwidth="0x1" edc:desc="Counter Overflow Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:nzwidth="0x1" edc:desc="Load Overrun Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:nzwidth="0x1" edc:desc="RA Compare Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:nzwidth="0x1" edc:desc="RB Compare Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:nzwidth="0x1" edc:desc="RC Compare Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:nzwidth="0x1" edc:desc="RA Loading Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:nzwidth="0x1" edc:desc="RB Loading Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1" edc:desc="External Trigger Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receiver Transfer (cleared by writing TC_RCR or TC_RNCR)"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Reception Buffer Full (cleared by writing TC_RCR or TC_RNCR)"/>
            <edc:SFRFieldDef edc:cname="SECE" edc:nzwidth="0x1" edc:desc="Security and/or Safety Event (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="CLKSTA" edc:nzwidth="0x1" edc:desc="Clock Enabling Status"/>
            <edc:SFRFieldDef edc:cname="MTIOA" edc:nzwidth="0x1" edc:desc="TIOAx Mirror"/>
            <edc:SFRFieldDef edc:cname="MTIOB" edc:nzwidth="0x1" edc:desc="TIOBx Mirror"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC_CHANNEL1TC1_IER" edc:nzwidth="0x20" edc:access="---------------------wwwwwwwwwww" edc:impl="0x7FF" edc:_addr="0x4003C064">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="COVFS" edc:nzwidth="0x1" edc:desc="Counter Overflow"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:nzwidth="0x1" edc:desc="Load Overrun"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:nzwidth="0x1" edc:desc="RA Compare"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:nzwidth="0x1" edc:desc="RB Compare"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:nzwidth="0x1" edc:desc="RC Compare"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:nzwidth="0x1" edc:desc="RA Loading"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:nzwidth="0x1" edc:desc="RB Loading"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1" edc:desc="External Trigger"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receiver Transfer"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Reception Buffer Full"/>
            <edc:SFRFieldDef edc:cname="SECE" edc:nzwidth="0x1" edc:desc="Security and/or Safety Event Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC_CHANNEL1TC1_IDR" edc:nzwidth="0x20" edc:access="---------------------wwwwwwwwwww" edc:impl="0x7FF" edc:_addr="0x4003C068">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="COVFS" edc:nzwidth="0x1" edc:desc="Counter Overflow"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:nzwidth="0x1" edc:desc="Load Overrun"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:nzwidth="0x1" edc:desc="RA Compare"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:nzwidth="0x1" edc:desc="RB Compare"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:nzwidth="0x1" edc:desc="RC Compare"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:nzwidth="0x1" edc:desc="RA Loading"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:nzwidth="0x1" edc:desc="RB Loading"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1" edc:desc="External Trigger"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receiver Transfer"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Reception Buffer Full"/>
            <edc:SFRFieldDef edc:cname="SECE" edc:nzwidth="0x1" edc:desc="Security and/or Safety Event Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC_CHANNEL1TC1_IMR" edc:nzwidth="0x20" edc:access="---------------------rrrrrrrrrrr" edc:impl="0x7FF" edc:_addr="0x4003C06C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="COVFS" edc:nzwidth="0x1" edc:desc="Counter Overflow"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:nzwidth="0x1" edc:desc="Load Overrun"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:nzwidth="0x1" edc:desc="RA Compare"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:nzwidth="0x1" edc:desc="RB Compare"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:nzwidth="0x1" edc:desc="RC Compare"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:nzwidth="0x1" edc:desc="RA Loading"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:nzwidth="0x1" edc:desc="RB Loading"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1" edc:desc="External Trigger"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receiver Transfer"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Reception Buffer Full"/>
            <edc:SFRFieldDef edc:cname="SECE" edc:nzwidth="0x1" edc:desc="Security and/or Safety Event Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC_CHANNEL1TC1_EMR" edc:nzwidth="0x20" edc:access="-----------------------n--nn--nn" edc:impl="0x133" edc:_addr="0x4003C070">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="TRIGSRCA" edc:nzwidth="0x2" edc:desc="Trigger Source for Input A">
              <edc:SFRFieldSemantic edc:cname="EXTERNAL_TIOAx" edc:desc="The trigger/capture input A is driven by external pin TIOAx" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PWMx" edc:desc="The trigger/capture input A is driven internally by PWMx" edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TRIGSRCB" edc:nzwidth="0x2" edc:desc="Trigger Source for Input B">
              <edc:SFRFieldSemantic edc:cname="EXTERNAL_TIOBx" edc:desc="The trigger/capture input B is driven by external pin TIOBx" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PWMx" edc:desc="The trigger/capture input B is driven internally by the comparator output (see Figure 7-16) of the PWMx." edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="NODIVCLK" edc:nzwidth="0x1" edc:desc="No Divided Clock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC_CHANNEL1TC1_CSR" edc:nzwidth="0x20" edc:access="-------------rrr----------------" edc:impl="0x70000" edc:_addr="0x4003C074">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:AdjustPoint edc:offset="0x10"/>
            <edc:SFRFieldDef edc:cname="CLKSTA" edc:nzwidth="0x1" edc:desc="Clock Enabling Status"/>
            <edc:SFRFieldDef edc:cname="MTIOA" edc:nzwidth="0x1" edc:desc="TIOAx Mirror"/>
            <edc:SFRFieldDef edc:cname="MTIOB" edc:nzwidth="0x1" edc:desc="TIOBx Mirror"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC_CHANNEL1TC1_SSR" edc:nzwidth="0x20" edc:access="r---rrrrrrrrrrrrrrrrrrrr----rrrr" edc:impl="0x8FFFFF0F" edc:_addr="0x4003C078">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="WPVS" edc:nzwidth="0x1" edc:desc="Write Protection Violation Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CGD" edc:nzwidth="0x1" edc:desc="Clock Glitch Detected (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SEQE" edc:nzwidth="0x1" edc:desc="Internal Sequencer Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SWE" edc:nzwidth="0x1" edc:desc="Software Control Error (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:nzwidth="0x10" edc:desc="Write Protection Violation Source (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SWETYP" edc:nzwidth="0x4" edc:desc="Software Error Type (cleared on read)">
              <edc:SFRFieldSemantic edc:cname="READ_WO" edc:desc="TC Channel x is enabled and a write-only register has been read (Warning)." edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="WRITE_RO" edc:desc="TC Channel x is enabled and a write access has been performed on a read-only register (Warning)." edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="UNDEF_RW" edc:desc="Access to an undefined address of the TC (Warning)." edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="W_RARB_CAPT" edc:desc="TC_RAx or TC_RBx are written while channel is enabled and configured in capture mode (Error)." edc:when="(field &amp; 0xF) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ECLASS" edc:nzwidth="0x1" edc:desc="Software Error Class">
              <edc:SFRFieldSemantic edc:cname="WARNING" edc:desc="An abnormal access that does not have any impact." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ERROR" edc:desc="An abnormal access that may have an impact." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4003C07C"/>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC_CHANNEL2TC1_CCR" edc:nzwidth="0x20" edc:access="-----------------------------www" edc:impl="0x7" edc:_addr="0x4003C080">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="CLKEN" edc:nzwidth="0x1" edc:desc="Counter Clock Enable Command"/>
            <edc:SFRFieldDef edc:cname="CLKDIS" edc:nzwidth="0x1" edc:desc="Counter Clock Disable Command"/>
            <edc:SFRFieldDef edc:cname="SWTRG" edc:nzwidth="0x1" edc:desc="Software Trigger Command"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC_CHANNEL2TC1_CMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4003C084">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="TCCLKS" edc:nzwidth="0x3" edc:desc="Clock Selection">
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK1" edc:desc="Clock selected: internal GCLK [TC_ID] clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK2" edc:desc="Clock selected: internal MCK/8 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK3" edc:desc="Clock selected: internal MCK/32 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK4" edc:desc="Clock selected: internal MCK/128 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK5" edc:desc="Clock selected: internal MD_SLCK clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="Clock selected: XC0" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="Clock selected: XC1" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="Clock selected: XC2" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CLKI" edc:nzwidth="0x1" edc:desc="Clock Invert"/>
            <edc:SFRFieldDef edc:cname="BURST" edc:nzwidth="0x2" edc:desc="Burst Signal Selection">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="The clock is not gated by an external signal." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="XC0 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="XC1 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="XC2 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPCSTOP" edc:nzwidth="0x1" edc:desc="Counter Clock Stopped with RC Compare"/>
            <edc:SFRFieldDef edc:cname="CPCDIS" edc:nzwidth="0x1" edc:desc="Counter Clock Disable with RC Compare"/>
            <edc:SFRFieldDef edc:cname="EEVTEDG" edc:nzwidth="0x2" edc:desc="External Event Edge Selection">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Rising edge" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Falling edge" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="EDGE" edc:desc="Each edge" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EEVT" edc:nzwidth="0x2" edc:desc="External Event Selection">
              <edc:SFRFieldSemantic edc:cname="TIOB" edc:desc="TIOB" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="XC0" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="XC1" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="XC2" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ENETRG" edc:nzwidth="0x1" edc:desc="External Event Trigger Enable"/>
            <edc:SFRFieldDef edc:cname="WAVSEL" edc:nzwidth="0x2" edc:desc="Waveform Selection">
              <edc:SFRFieldSemantic edc:cname="UP" edc:desc="UP mode without automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="UPDOWN" edc:desc="UPDOWN mode without automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="UP_RC" edc:desc="UP mode with automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="UPDOWN_RC" edc:desc="UPDOWN mode with automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="-1"/>
            <edc:SFRFieldDef edc:cname="CPCTRG" edc:nzwidth="0x1" edc:desc="RC Compare Trigger Enable"/>
            <edc:SFRFieldDef edc:cname="WAVE" edc:nzwidth="0x1" edc:desc="Waveform Mode"/>
            <edc:SFRFieldDef edc:cname="ACPA" edc:nzwidth="0x2" edc:desc="RA Compare Effect on TIOAx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ACPC" edc:nzwidth="0x2" edc:desc="RC Compare Effect on TIOAx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AEEVT" edc:nzwidth="0x2" edc:desc="External Event Effect on TIOAx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASWTRG" edc:nzwidth="0x2" edc:desc="Software Trigger Effect on TIOAx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BCPB" edc:nzwidth="0x2" edc:desc="RB Compare Effect on TIOBx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BCPC" edc:nzwidth="0x2" edc:desc="RC Compare Effect on TIOBx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BEEVT" edc:nzwidth="0x2" edc:desc="External Event Effect on TIOBx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BSWTRG" edc:nzwidth="0x2" edc:desc="Software Trigger Effect on TIOBx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC_CHANNEL2TC1_SMMR" edc:nzwidth="0x20" edc:access="------------------------------nn" edc:impl="0x3" edc:_addr="0x4003C088">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="GCEN" edc:nzwidth="0x1" edc:desc="Gray Count Enable"/>
            <edc:SFRFieldDef edc:cname="DOWN" edc:nzwidth="0x1" edc:desc="Down Count"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4003C08C"/>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC_CHANNEL2TC1_CV" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4003C090">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="CV" edc:nzwidth="0x20" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC_CHANNEL2TC1_RA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4003C094">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="RA" edc:nzwidth="0x20" edc:desc="Register A"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC_CHANNEL2TC1_RB" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4003C098">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="RB" edc:nzwidth="0x20" edc:desc="Register B"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC_CHANNEL2TC1_RC" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4003C09C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="RC" edc:nzwidth="0x20" edc:desc="Register C"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC_CHANNEL2TC1_SR" edc:nzwidth="0x20" edc:access="-------------rrr-----rrrrrrrrrrr" edc:impl="0x707FF" edc:_addr="0x4003C0A0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="COVFS" edc:nzwidth="0x1" edc:desc="Counter Overflow Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:nzwidth="0x1" edc:desc="Load Overrun Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:nzwidth="0x1" edc:desc="RA Compare Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:nzwidth="0x1" edc:desc="RB Compare Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:nzwidth="0x1" edc:desc="RC Compare Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:nzwidth="0x1" edc:desc="RA Loading Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:nzwidth="0x1" edc:desc="RB Loading Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1" edc:desc="External Trigger Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receiver Transfer (cleared by writing TC_RCR or TC_RNCR)"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Reception Buffer Full (cleared by writing TC_RCR or TC_RNCR)"/>
            <edc:SFRFieldDef edc:cname="SECE" edc:nzwidth="0x1" edc:desc="Security and/or Safety Event (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="CLKSTA" edc:nzwidth="0x1" edc:desc="Clock Enabling Status"/>
            <edc:SFRFieldDef edc:cname="MTIOA" edc:nzwidth="0x1" edc:desc="TIOAx Mirror"/>
            <edc:SFRFieldDef edc:cname="MTIOB" edc:nzwidth="0x1" edc:desc="TIOBx Mirror"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC_CHANNEL2TC1_IER" edc:nzwidth="0x20" edc:access="---------------------wwwwwwwwwww" edc:impl="0x7FF" edc:_addr="0x4003C0A4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="COVFS" edc:nzwidth="0x1" edc:desc="Counter Overflow"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:nzwidth="0x1" edc:desc="Load Overrun"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:nzwidth="0x1" edc:desc="RA Compare"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:nzwidth="0x1" edc:desc="RB Compare"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:nzwidth="0x1" edc:desc="RC Compare"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:nzwidth="0x1" edc:desc="RA Loading"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:nzwidth="0x1" edc:desc="RB Loading"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1" edc:desc="External Trigger"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receiver Transfer"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Reception Buffer Full"/>
            <edc:SFRFieldDef edc:cname="SECE" edc:nzwidth="0x1" edc:desc="Security and/or Safety Event Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC_CHANNEL2TC1_IDR" edc:nzwidth="0x20" edc:access="---------------------wwwwwwwwwww" edc:impl="0x7FF" edc:_addr="0x4003C0A8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="COVFS" edc:nzwidth="0x1" edc:desc="Counter Overflow"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:nzwidth="0x1" edc:desc="Load Overrun"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:nzwidth="0x1" edc:desc="RA Compare"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:nzwidth="0x1" edc:desc="RB Compare"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:nzwidth="0x1" edc:desc="RC Compare"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:nzwidth="0x1" edc:desc="RA Loading"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:nzwidth="0x1" edc:desc="RB Loading"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1" edc:desc="External Trigger"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receiver Transfer"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Reception Buffer Full"/>
            <edc:SFRFieldDef edc:cname="SECE" edc:nzwidth="0x1" edc:desc="Security and/or Safety Event Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC_CHANNEL2TC1_IMR" edc:nzwidth="0x20" edc:access="---------------------rrrrrrrrrrr" edc:impl="0x7FF" edc:_addr="0x4003C0AC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="COVFS" edc:nzwidth="0x1" edc:desc="Counter Overflow"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:nzwidth="0x1" edc:desc="Load Overrun"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:nzwidth="0x1" edc:desc="RA Compare"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:nzwidth="0x1" edc:desc="RB Compare"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:nzwidth="0x1" edc:desc="RC Compare"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:nzwidth="0x1" edc:desc="RA Loading"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:nzwidth="0x1" edc:desc="RB Loading"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1" edc:desc="External Trigger"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receiver Transfer"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Reception Buffer Full"/>
            <edc:SFRFieldDef edc:cname="SECE" edc:nzwidth="0x1" edc:desc="Security and/or Safety Event Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC_CHANNEL2TC1_EMR" edc:nzwidth="0x20" edc:access="-----------------------n--nn--nn" edc:impl="0x133" edc:_addr="0x4003C0B0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="TRIGSRCA" edc:nzwidth="0x2" edc:desc="Trigger Source for Input A">
              <edc:SFRFieldSemantic edc:cname="EXTERNAL_TIOAx" edc:desc="The trigger/capture input A is driven by external pin TIOAx" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PWMx" edc:desc="The trigger/capture input A is driven internally by PWMx" edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TRIGSRCB" edc:nzwidth="0x2" edc:desc="Trigger Source for Input B">
              <edc:SFRFieldSemantic edc:cname="EXTERNAL_TIOBx" edc:desc="The trigger/capture input B is driven by external pin TIOBx" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PWMx" edc:desc="The trigger/capture input B is driven internally by the comparator output (see Figure 7-16) of the PWMx." edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="NODIVCLK" edc:nzwidth="0x1" edc:desc="No Divided Clock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC_CHANNEL2TC1_CSR" edc:nzwidth="0x20" edc:access="-------------rrr----------------" edc:impl="0x70000" edc:_addr="0x4003C0B4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:AdjustPoint edc:offset="0x10"/>
            <edc:SFRFieldDef edc:cname="CLKSTA" edc:nzwidth="0x1" edc:desc="Clock Enabling Status"/>
            <edc:SFRFieldDef edc:cname="MTIOA" edc:nzwidth="0x1" edc:desc="TIOAx Mirror"/>
            <edc:SFRFieldDef edc:cname="MTIOB" edc:nzwidth="0x1" edc:desc="TIOBx Mirror"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC_CHANNEL2TC1_SSR" edc:nzwidth="0x20" edc:access="r---rrrrrrrrrrrrrrrrrrrr----rrrr" edc:impl="0x8FFFFF0F" edc:_addr="0x4003C0B8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="WPVS" edc:nzwidth="0x1" edc:desc="Write Protection Violation Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CGD" edc:nzwidth="0x1" edc:desc="Clock Glitch Detected (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SEQE" edc:nzwidth="0x1" edc:desc="Internal Sequencer Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SWE" edc:nzwidth="0x1" edc:desc="Software Control Error (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:nzwidth="0x10" edc:desc="Write Protection Violation Source (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SWETYP" edc:nzwidth="0x4" edc:desc="Software Error Type (cleared on read)">
              <edc:SFRFieldSemantic edc:cname="READ_WO" edc:desc="TC Channel x is enabled and a write-only register has been read (Warning)." edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="WRITE_RO" edc:desc="TC Channel x is enabled and a write access has been performed on a read-only register (Warning)." edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="UNDEF_RW" edc:desc="Access to an undefined address of the TC (Warning)." edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="W_RARB_CAPT" edc:desc="TC_RAx or TC_RBx are written while channel is enabled and configured in capture mode (Error)." edc:when="(field &amp; 0xF) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ECLASS" edc:nzwidth="0x1" edc:desc="Software Error Class">
              <edc:SFRFieldSemantic edc:cname="WARNING" edc:desc="An abnormal access that does not have any impact." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ERROR" edc:desc="An abnormal access that may have an impact." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4003C0BC"/>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC1_BCR" edc:nzwidth="0x20" edc:access="-------------------------------w" edc:impl="0x1" edc:_addr="0x4003C0C0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="SYNC" edc:nzwidth="0x1" edc:desc="Synchro Command"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC1_BMR" edc:nzwidth="0x20" edc:access="------nnnnnn--nnnnnnnnnn--nnnnnn" edc:impl="0x3F3FF3F" edc:_addr="0x4003C0C4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="TC0XC0S" edc:nzwidth="0x2" edc:desc="External Clock Signal 0 Selection">
              <edc:SFRFieldSemantic edc:cname="TCLK0" edc:desc="Signal connected to XC0: TCLK0" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TIOA1" edc:desc="Signal connected to XC0: TIOA1" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TIOA2" edc:desc="Signal connected to XC0: TIOA2" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TC1XC1S" edc:nzwidth="0x2" edc:desc="External Clock Signal 1 Selection">
              <edc:SFRFieldSemantic edc:cname="TCLK1" edc:desc="Signal connected to XC1: TCLK1" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TIOA0" edc:desc="Signal connected to XC1: TIOA0" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TIOA2" edc:desc="Signal connected to XC1: TIOA2" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TC2XC2S" edc:nzwidth="0x2" edc:desc="External Clock Signal 2 Selection">
              <edc:SFRFieldSemantic edc:cname="TCLK2" edc:desc="Signal connected to XC2: TCLK2" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TIOA0" edc:desc="Signal connected to XC2: TIOA0" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TIOA1" edc:desc="Signal connected to XC2: TIOA1" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="QDEN" edc:nzwidth="0x1" edc:desc="Quadrature Decoder Enabled"/>
            <edc:SFRFieldDef edc:cname="POSEN" edc:nzwidth="0x1" edc:desc="Position Enabled"/>
            <edc:SFRFieldDef edc:cname="SPEEDEN" edc:nzwidth="0x1" edc:desc="Speed Enabled"/>
            <edc:SFRFieldDef edc:cname="QDTRANS" edc:nzwidth="0x1" edc:desc="Quadrature Decoding Transparent"/>
            <edc:SFRFieldDef edc:cname="EDGPHA" edc:nzwidth="0x1" edc:desc="Edge on PHA Count Mode"/>
            <edc:SFRFieldDef edc:cname="INVA" edc:nzwidth="0x1" edc:desc="Inverted PHA"/>
            <edc:SFRFieldDef edc:cname="INVB" edc:nzwidth="0x1" edc:desc="Inverted PHB"/>
            <edc:SFRFieldDef edc:cname="INVIDX" edc:nzwidth="0x1" edc:desc="Inverted Index"/>
            <edc:SFRFieldDef edc:cname="SWAP" edc:nzwidth="0x1" edc:desc="Swap PHA and PHB"/>
            <edc:SFRFieldDef edc:cname="IDXPHB" edc:nzwidth="0x1" edc:desc="Index Pin is PHB Pin"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MAXFILT" edc:nzwidth="0x6" edc:desc="Maximum Filter"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC1_QIER" edc:nzwidth="0x20" edc:access="------------------------wwww-www" edc:impl="0xF7" edc:_addr="0x4003C0C8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="IDX" edc:nzwidth="0x1" edc:desc="Index"/>
            <edc:SFRFieldDef edc:cname="DIRCHG" edc:nzwidth="0x1" edc:desc="Direction Change"/>
            <edc:SFRFieldDef edc:cname="QERR" edc:nzwidth="0x1" edc:desc="Quadrature Error"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FPHA" edc:nzwidth="0x1" edc:desc="Filtered Phase A Line"/>
            <edc:SFRFieldDef edc:cname="FPHB" edc:nzwidth="0x1" edc:desc="Filtered Phase B Line"/>
            <edc:SFRFieldDef edc:cname="FIDX" edc:nzwidth="0x1" edc:desc="Filtered Index Line"/>
            <edc:SFRFieldDef edc:cname="FMP" edc:nzwidth="0x1" edc:desc="Filtered Missing Pulse"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC1_QIDR" edc:nzwidth="0x20" edc:access="------------------------wwww-www" edc:impl="0xF7" edc:_addr="0x4003C0CC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="IDX" edc:nzwidth="0x1" edc:desc="Index"/>
            <edc:SFRFieldDef edc:cname="DIRCHG" edc:nzwidth="0x1" edc:desc="Direction Change"/>
            <edc:SFRFieldDef edc:cname="QERR" edc:nzwidth="0x1" edc:desc="Quadrature Error"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FPHA" edc:nzwidth="0x1" edc:desc="Filtered Phase A Line"/>
            <edc:SFRFieldDef edc:cname="FPHB" edc:nzwidth="0x1" edc:desc="Filtered Phase B Line"/>
            <edc:SFRFieldDef edc:cname="FIDX" edc:nzwidth="0x1" edc:desc="Filtered Index Line"/>
            <edc:SFRFieldDef edc:cname="FMP" edc:nzwidth="0x1" edc:desc="Filtered Missing Pulse"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC1_QIMR" edc:nzwidth="0x20" edc:access="------------------------rrrr-rrr" edc:impl="0xF7" edc:_addr="0x4003C0D0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="IDX" edc:nzwidth="0x1" edc:desc="Index"/>
            <edc:SFRFieldDef edc:cname="DIRCHG" edc:nzwidth="0x1" edc:desc="Direction Change"/>
            <edc:SFRFieldDef edc:cname="QERR" edc:nzwidth="0x1" edc:desc="Quadrature Error"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FPHA" edc:nzwidth="0x1" edc:desc="Filtered Phase A Line"/>
            <edc:SFRFieldDef edc:cname="FPHB" edc:nzwidth="0x1" edc:desc="Filtered Phase B Line"/>
            <edc:SFRFieldDef edc:cname="FIDX" edc:nzwidth="0x1" edc:desc="Filtered Index Line"/>
            <edc:SFRFieldDef edc:cname="FMP" edc:nzwidth="0x1" edc:desc="Filtered Missing Pulse"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC1_QISR" edc:nzwidth="0x20" edc:access="-----------------------rrrrr-rrr" edc:impl="0x1F7" edc:_addr="0x4003C0D4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="IDX" edc:nzwidth="0x1" edc:desc="Index"/>
            <edc:SFRFieldDef edc:cname="DIRCHG" edc:nzwidth="0x1" edc:desc="Direction Change"/>
            <edc:SFRFieldDef edc:cname="QERR" edc:nzwidth="0x1" edc:desc="Quadrature Error"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FPHA" edc:nzwidth="0x1" edc:desc="Filtered Phase A Line"/>
            <edc:SFRFieldDef edc:cname="FPHB" edc:nzwidth="0x1" edc:desc="Filtered Phase B Line"/>
            <edc:SFRFieldDef edc:cname="FIDX" edc:nzwidth="0x1" edc:desc="Filtered Index Line"/>
            <edc:SFRFieldDef edc:cname="FMP" edc:nzwidth="0x1" edc:desc="Filtered Missing Pulse"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Direction"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC1_FMR" edc:nzwidth="0x20" edc:access="------------------------------nn" edc:impl="0x3" edc:_addr="0x4003C0D8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="ENCF0" edc:nzwidth="0x1" edc:desc="Enable Compare Fault Channel 0"/>
            <edc:SFRFieldDef edc:cname="ENCF1" edc:nzwidth="0x1" edc:desc="Enable Compare Fault Channel 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC1_QSR" edc:nzwidth="0x20" edc:access="-----------------------r--------" edc:impl="0x100" edc:_addr="0x4003C0DC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Direction"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4003C0E0"/>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC1_WPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn---n-nnn" edc:impl="0xFFFFFF17" edc:_addr="0x4003C0E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="WPEN" edc:nzwidth="0x1" edc:desc="Write Protection Enable"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:nzwidth="0x1" edc:desc="Write Protection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:nzwidth="0x1" edc:desc="Write Protection Control Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FIRSTE" edc:nzwidth="0x1" edc:desc="First Error Report Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPEN bit. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x54494D"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x18" edc:_addr="0x4003C0E8"/>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC1_RPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4003C100">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="RXPTR" edc:nzwidth="0x20" edc:desc="Receive Pointer Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC1_RCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x4003C104">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="RXCTR" edc:nzwidth="0x10" edc:desc="Receive Counter Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x4003C108"/>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC1_RNPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4003C110">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="RXNPTR" edc:nzwidth="0x20" edc:desc="Receive Next Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC1_RNCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x4003C114">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="RXNCTR" edc:nzwidth="0x10" edc:desc="Receive Next Counter"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x4003C118"/>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC1_PTC1R" edc:nzwidth="0x20" edc:access="-------w----wwww------ww------ww" edc:impl="0x10F0303" edc:_addr="0x4003C120">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="RXTEN" edc:nzwidth="0x1" edc:desc="Receiver Transfer Enable"/>
            <edc:SFRFieldDef edc:cname="RXTDIS" edc:nzwidth="0x1" edc:desc="Receiver Transfer Disable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="TXTEN" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Enable"/>
            <edc:SFRFieldDef edc:cname="TXTDIS" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Disable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="RXCBEN" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Enable"/>
            <edc:SFRFieldDef edc:cname="RXCBDIS" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Disable"/>
            <edc:SFRFieldDef edc:cname="TXCBEN" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Enable"/>
            <edc:SFRFieldDef edc:cname="TXCBDIS" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Disable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ERRCLR" edc:nzwidth="0x1" edc:desc="Transfer Bus Error Clear"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC1_PTSR" edc:nzwidth="0x20" edc:access="-------r-----r-r-------r-------r" edc:impl="0x1050101" edc:_addr="0x4003C124">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="RXTEN" edc:nzwidth="0x1" edc:desc="Receiver Transfer Enable"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="TXTEN" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Enable"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="RXCBEN" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXCBEN" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Transfer Bus Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TC1_PWPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:impl="0xFFFFFF07" edc:_addr="0x4003C128">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="WPPTREN" edc:nzwidth="0x1" edc:desc="Write Protection Pointer Registers Enable"/>
            <edc:SFRFieldDef edc:cname="WPCTREN" edc:nzwidth="0x1" edc:desc="Write Protection Counter Registers Enable"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:nzwidth="0x1" edc:desc="Write Protection Control Register Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x504443"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3ED4" edc:_addr="0x4003C12C"/>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC_CHANNEL0TC2_CCR" edc:nzwidth="0x20" edc:access="-----------------------------www" edc:impl="0x7" edc:_addr="0x40040000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="CLKEN" edc:nzwidth="0x1" edc:desc="Counter Clock Enable Command"/>
            <edc:SFRFieldDef edc:cname="CLKDIS" edc:nzwidth="0x1" edc:desc="Counter Clock Disable Command"/>
            <edc:SFRFieldDef edc:cname="SWTRG" edc:nzwidth="0x1" edc:desc="Software Trigger Command"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC_CHANNEL0TC2_CMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40040004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="TCCLKS" edc:nzwidth="0x3" edc:desc="Clock Selection">
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK1" edc:desc="Clock selected: internal GCLK [TC_ID] clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK2" edc:desc="Clock selected: internal MCK/8 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK3" edc:desc="Clock selected: internal MCK/32 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK4" edc:desc="Clock selected: internal MCK/128 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK5" edc:desc="Clock selected: internal MD_SLCK clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="Clock selected: XC0" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="Clock selected: XC1" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="Clock selected: XC2" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CLKI" edc:nzwidth="0x1" edc:desc="Clock Invert"/>
            <edc:SFRFieldDef edc:cname="BURST" edc:nzwidth="0x2" edc:desc="Burst Signal Selection">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="The clock is not gated by an external signal." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="XC0 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="XC1 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="XC2 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPCSTOP" edc:nzwidth="0x1" edc:desc="Counter Clock Stopped with RC Compare"/>
            <edc:SFRFieldDef edc:cname="CPCDIS" edc:nzwidth="0x1" edc:desc="Counter Clock Disable with RC Compare"/>
            <edc:SFRFieldDef edc:cname="EEVTEDG" edc:nzwidth="0x2" edc:desc="External Event Edge Selection">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Rising edge" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Falling edge" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="EDGE" edc:desc="Each edge" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EEVT" edc:nzwidth="0x2" edc:desc="External Event Selection">
              <edc:SFRFieldSemantic edc:cname="TIOB" edc:desc="TIOB" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="XC0" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="XC1" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="XC2" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ENETRG" edc:nzwidth="0x1" edc:desc="External Event Trigger Enable"/>
            <edc:SFRFieldDef edc:cname="WAVSEL" edc:nzwidth="0x2" edc:desc="Waveform Selection">
              <edc:SFRFieldSemantic edc:cname="UP" edc:desc="UP mode without automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="UPDOWN" edc:desc="UPDOWN mode without automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="UP_RC" edc:desc="UP mode with automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="UPDOWN_RC" edc:desc="UPDOWN mode with automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="-1"/>
            <edc:SFRFieldDef edc:cname="CPCTRG" edc:nzwidth="0x1" edc:desc="RC Compare Trigger Enable"/>
            <edc:SFRFieldDef edc:cname="WAVE" edc:nzwidth="0x1" edc:desc="Waveform Mode"/>
            <edc:SFRFieldDef edc:cname="ACPA" edc:nzwidth="0x2" edc:desc="RA Compare Effect on TIOAx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ACPC" edc:nzwidth="0x2" edc:desc="RC Compare Effect on TIOAx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AEEVT" edc:nzwidth="0x2" edc:desc="External Event Effect on TIOAx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASWTRG" edc:nzwidth="0x2" edc:desc="Software Trigger Effect on TIOAx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BCPB" edc:nzwidth="0x2" edc:desc="RB Compare Effect on TIOBx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BCPC" edc:nzwidth="0x2" edc:desc="RC Compare Effect on TIOBx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BEEVT" edc:nzwidth="0x2" edc:desc="External Event Effect on TIOBx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BSWTRG" edc:nzwidth="0x2" edc:desc="Software Trigger Effect on TIOBx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC_CHANNEL0TC2_SMMR" edc:nzwidth="0x20" edc:access="------------------------------nn" edc:impl="0x3" edc:_addr="0x40040008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="GCEN" edc:nzwidth="0x1" edc:desc="Gray Count Enable"/>
            <edc:SFRFieldDef edc:cname="DOWN" edc:nzwidth="0x1" edc:desc="Down Count"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4004000C"/>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC_CHANNEL0TC2_CV" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40040010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="CV" edc:nzwidth="0x20" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC_CHANNEL0TC2_RA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40040014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="RA" edc:nzwidth="0x20" edc:desc="Register A"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC_CHANNEL0TC2_RB" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40040018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="RB" edc:nzwidth="0x20" edc:desc="Register B"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC_CHANNEL0TC2_RC" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4004001C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="RC" edc:nzwidth="0x20" edc:desc="Register C"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC_CHANNEL0TC2_SR" edc:nzwidth="0x20" edc:access="-------------rrr-----rrrrrrrrrrr" edc:impl="0x707FF" edc:_addr="0x40040020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="COVFS" edc:nzwidth="0x1" edc:desc="Counter Overflow Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:nzwidth="0x1" edc:desc="Load Overrun Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:nzwidth="0x1" edc:desc="RA Compare Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:nzwidth="0x1" edc:desc="RB Compare Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:nzwidth="0x1" edc:desc="RC Compare Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:nzwidth="0x1" edc:desc="RA Loading Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:nzwidth="0x1" edc:desc="RB Loading Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1" edc:desc="External Trigger Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receiver Transfer (cleared by writing TC_RCR or TC_RNCR)"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Reception Buffer Full (cleared by writing TC_RCR or TC_RNCR)"/>
            <edc:SFRFieldDef edc:cname="SECE" edc:nzwidth="0x1" edc:desc="Security and/or Safety Event (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="CLKSTA" edc:nzwidth="0x1" edc:desc="Clock Enabling Status"/>
            <edc:SFRFieldDef edc:cname="MTIOA" edc:nzwidth="0x1" edc:desc="TIOAx Mirror"/>
            <edc:SFRFieldDef edc:cname="MTIOB" edc:nzwidth="0x1" edc:desc="TIOBx Mirror"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC_CHANNEL0TC2_IER" edc:nzwidth="0x20" edc:access="---------------------wwwwwwwwwww" edc:impl="0x7FF" edc:_addr="0x40040024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="COVFS" edc:nzwidth="0x1" edc:desc="Counter Overflow"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:nzwidth="0x1" edc:desc="Load Overrun"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:nzwidth="0x1" edc:desc="RA Compare"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:nzwidth="0x1" edc:desc="RB Compare"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:nzwidth="0x1" edc:desc="RC Compare"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:nzwidth="0x1" edc:desc="RA Loading"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:nzwidth="0x1" edc:desc="RB Loading"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1" edc:desc="External Trigger"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receiver Transfer"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Reception Buffer Full"/>
            <edc:SFRFieldDef edc:cname="SECE" edc:nzwidth="0x1" edc:desc="Security and/or Safety Event Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC_CHANNEL0TC2_IDR" edc:nzwidth="0x20" edc:access="---------------------wwwwwwwwwww" edc:impl="0x7FF" edc:_addr="0x40040028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="COVFS" edc:nzwidth="0x1" edc:desc="Counter Overflow"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:nzwidth="0x1" edc:desc="Load Overrun"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:nzwidth="0x1" edc:desc="RA Compare"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:nzwidth="0x1" edc:desc="RB Compare"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:nzwidth="0x1" edc:desc="RC Compare"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:nzwidth="0x1" edc:desc="RA Loading"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:nzwidth="0x1" edc:desc="RB Loading"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1" edc:desc="External Trigger"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receiver Transfer"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Reception Buffer Full"/>
            <edc:SFRFieldDef edc:cname="SECE" edc:nzwidth="0x1" edc:desc="Security and/or Safety Event Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC_CHANNEL0TC2_IMR" edc:nzwidth="0x20" edc:access="---------------------rrrrrrrrrrr" edc:impl="0x7FF" edc:_addr="0x4004002C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="COVFS" edc:nzwidth="0x1" edc:desc="Counter Overflow"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:nzwidth="0x1" edc:desc="Load Overrun"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:nzwidth="0x1" edc:desc="RA Compare"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:nzwidth="0x1" edc:desc="RB Compare"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:nzwidth="0x1" edc:desc="RC Compare"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:nzwidth="0x1" edc:desc="RA Loading"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:nzwidth="0x1" edc:desc="RB Loading"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1" edc:desc="External Trigger"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receiver Transfer"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Reception Buffer Full"/>
            <edc:SFRFieldDef edc:cname="SECE" edc:nzwidth="0x1" edc:desc="Security and/or Safety Event Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC_CHANNEL0TC2_EMR" edc:nzwidth="0x20" edc:access="-----------------------n--nn--nn" edc:impl="0x133" edc:_addr="0x40040030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="TRIGSRCA" edc:nzwidth="0x2" edc:desc="Trigger Source for Input A">
              <edc:SFRFieldSemantic edc:cname="EXTERNAL_TIOAx" edc:desc="The trigger/capture input A is driven by external pin TIOAx" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PWMx" edc:desc="The trigger/capture input A is driven internally by PWMx" edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TRIGSRCB" edc:nzwidth="0x2" edc:desc="Trigger Source for Input B">
              <edc:SFRFieldSemantic edc:cname="EXTERNAL_TIOBx" edc:desc="The trigger/capture input B is driven by external pin TIOBx" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PWMx" edc:desc="The trigger/capture input B is driven internally by the comparator output (see Figure 7-16) of the PWMx." edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="NODIVCLK" edc:nzwidth="0x1" edc:desc="No Divided Clock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC_CHANNEL0TC2_CSR" edc:nzwidth="0x20" edc:access="-------------rrr----------------" edc:impl="0x70000" edc:_addr="0x40040034">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:AdjustPoint edc:offset="0x10"/>
            <edc:SFRFieldDef edc:cname="CLKSTA" edc:nzwidth="0x1" edc:desc="Clock Enabling Status"/>
            <edc:SFRFieldDef edc:cname="MTIOA" edc:nzwidth="0x1" edc:desc="TIOAx Mirror"/>
            <edc:SFRFieldDef edc:cname="MTIOB" edc:nzwidth="0x1" edc:desc="TIOBx Mirror"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC_CHANNEL0TC2_SSR" edc:nzwidth="0x20" edc:access="r---rrrrrrrrrrrrrrrrrrrr----rrrr" edc:impl="0x8FFFFF0F" edc:_addr="0x40040038">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="WPVS" edc:nzwidth="0x1" edc:desc="Write Protection Violation Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CGD" edc:nzwidth="0x1" edc:desc="Clock Glitch Detected (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SEQE" edc:nzwidth="0x1" edc:desc="Internal Sequencer Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SWE" edc:nzwidth="0x1" edc:desc="Software Control Error (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:nzwidth="0x10" edc:desc="Write Protection Violation Source (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SWETYP" edc:nzwidth="0x4" edc:desc="Software Error Type (cleared on read)">
              <edc:SFRFieldSemantic edc:cname="READ_WO" edc:desc="TC Channel x is enabled and a write-only register has been read (Warning)." edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="WRITE_RO" edc:desc="TC Channel x is enabled and a write access has been performed on a read-only register (Warning)." edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="UNDEF_RW" edc:desc="Access to an undefined address of the TC (Warning)." edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="W_RARB_CAPT" edc:desc="TC_RAx or TC_RBx are written while channel is enabled and configured in capture mode (Error)." edc:when="(field &amp; 0xF) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ECLASS" edc:nzwidth="0x1" edc:desc="Software Error Class">
              <edc:SFRFieldSemantic edc:cname="WARNING" edc:desc="An abnormal access that does not have any impact." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ERROR" edc:desc="An abnormal access that may have an impact." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4004003C"/>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC_CHANNEL1TC2_CCR" edc:nzwidth="0x20" edc:access="-----------------------------www" edc:impl="0x7" edc:_addr="0x40040040">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="CLKEN" edc:nzwidth="0x1" edc:desc="Counter Clock Enable Command"/>
            <edc:SFRFieldDef edc:cname="CLKDIS" edc:nzwidth="0x1" edc:desc="Counter Clock Disable Command"/>
            <edc:SFRFieldDef edc:cname="SWTRG" edc:nzwidth="0x1" edc:desc="Software Trigger Command"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC_CHANNEL1TC2_CMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40040044">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="TCCLKS" edc:nzwidth="0x3" edc:desc="Clock Selection">
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK1" edc:desc="Clock selected: internal GCLK [TC_ID] clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK2" edc:desc="Clock selected: internal MCK/8 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK3" edc:desc="Clock selected: internal MCK/32 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK4" edc:desc="Clock selected: internal MCK/128 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK5" edc:desc="Clock selected: internal MD_SLCK clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="Clock selected: XC0" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="Clock selected: XC1" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="Clock selected: XC2" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CLKI" edc:nzwidth="0x1" edc:desc="Clock Invert"/>
            <edc:SFRFieldDef edc:cname="BURST" edc:nzwidth="0x2" edc:desc="Burst Signal Selection">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="The clock is not gated by an external signal." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="XC0 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="XC1 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="XC2 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPCSTOP" edc:nzwidth="0x1" edc:desc="Counter Clock Stopped with RC Compare"/>
            <edc:SFRFieldDef edc:cname="CPCDIS" edc:nzwidth="0x1" edc:desc="Counter Clock Disable with RC Compare"/>
            <edc:SFRFieldDef edc:cname="EEVTEDG" edc:nzwidth="0x2" edc:desc="External Event Edge Selection">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Rising edge" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Falling edge" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="EDGE" edc:desc="Each edge" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EEVT" edc:nzwidth="0x2" edc:desc="External Event Selection">
              <edc:SFRFieldSemantic edc:cname="TIOB" edc:desc="TIOB" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="XC0" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="XC1" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="XC2" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ENETRG" edc:nzwidth="0x1" edc:desc="External Event Trigger Enable"/>
            <edc:SFRFieldDef edc:cname="WAVSEL" edc:nzwidth="0x2" edc:desc="Waveform Selection">
              <edc:SFRFieldSemantic edc:cname="UP" edc:desc="UP mode without automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="UPDOWN" edc:desc="UPDOWN mode without automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="UP_RC" edc:desc="UP mode with automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="UPDOWN_RC" edc:desc="UPDOWN mode with automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="-1"/>
            <edc:SFRFieldDef edc:cname="CPCTRG" edc:nzwidth="0x1" edc:desc="RC Compare Trigger Enable"/>
            <edc:SFRFieldDef edc:cname="WAVE" edc:nzwidth="0x1" edc:desc="Waveform Mode"/>
            <edc:SFRFieldDef edc:cname="ACPA" edc:nzwidth="0x2" edc:desc="RA Compare Effect on TIOAx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ACPC" edc:nzwidth="0x2" edc:desc="RC Compare Effect on TIOAx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AEEVT" edc:nzwidth="0x2" edc:desc="External Event Effect on TIOAx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASWTRG" edc:nzwidth="0x2" edc:desc="Software Trigger Effect on TIOAx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BCPB" edc:nzwidth="0x2" edc:desc="RB Compare Effect on TIOBx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BCPC" edc:nzwidth="0x2" edc:desc="RC Compare Effect on TIOBx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BEEVT" edc:nzwidth="0x2" edc:desc="External Event Effect on TIOBx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BSWTRG" edc:nzwidth="0x2" edc:desc="Software Trigger Effect on TIOBx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC_CHANNEL1TC2_SMMR" edc:nzwidth="0x20" edc:access="------------------------------nn" edc:impl="0x3" edc:_addr="0x40040048">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="GCEN" edc:nzwidth="0x1" edc:desc="Gray Count Enable"/>
            <edc:SFRFieldDef edc:cname="DOWN" edc:nzwidth="0x1" edc:desc="Down Count"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4004004C"/>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC_CHANNEL1TC2_CV" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40040050">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="CV" edc:nzwidth="0x20" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC_CHANNEL1TC2_RA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40040054">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="RA" edc:nzwidth="0x20" edc:desc="Register A"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC_CHANNEL1TC2_RB" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40040058">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="RB" edc:nzwidth="0x20" edc:desc="Register B"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC_CHANNEL1TC2_RC" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4004005C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="RC" edc:nzwidth="0x20" edc:desc="Register C"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC_CHANNEL1TC2_SR" edc:nzwidth="0x20" edc:access="-------------rrr-----rrrrrrrrrrr" edc:impl="0x707FF" edc:_addr="0x40040060">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="COVFS" edc:nzwidth="0x1" edc:desc="Counter Overflow Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:nzwidth="0x1" edc:desc="Load Overrun Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:nzwidth="0x1" edc:desc="RA Compare Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:nzwidth="0x1" edc:desc="RB Compare Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:nzwidth="0x1" edc:desc="RC Compare Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:nzwidth="0x1" edc:desc="RA Loading Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:nzwidth="0x1" edc:desc="RB Loading Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1" edc:desc="External Trigger Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receiver Transfer (cleared by writing TC_RCR or TC_RNCR)"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Reception Buffer Full (cleared by writing TC_RCR or TC_RNCR)"/>
            <edc:SFRFieldDef edc:cname="SECE" edc:nzwidth="0x1" edc:desc="Security and/or Safety Event (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="CLKSTA" edc:nzwidth="0x1" edc:desc="Clock Enabling Status"/>
            <edc:SFRFieldDef edc:cname="MTIOA" edc:nzwidth="0x1" edc:desc="TIOAx Mirror"/>
            <edc:SFRFieldDef edc:cname="MTIOB" edc:nzwidth="0x1" edc:desc="TIOBx Mirror"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC_CHANNEL1TC2_IER" edc:nzwidth="0x20" edc:access="---------------------wwwwwwwwwww" edc:impl="0x7FF" edc:_addr="0x40040064">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="COVFS" edc:nzwidth="0x1" edc:desc="Counter Overflow"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:nzwidth="0x1" edc:desc="Load Overrun"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:nzwidth="0x1" edc:desc="RA Compare"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:nzwidth="0x1" edc:desc="RB Compare"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:nzwidth="0x1" edc:desc="RC Compare"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:nzwidth="0x1" edc:desc="RA Loading"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:nzwidth="0x1" edc:desc="RB Loading"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1" edc:desc="External Trigger"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receiver Transfer"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Reception Buffer Full"/>
            <edc:SFRFieldDef edc:cname="SECE" edc:nzwidth="0x1" edc:desc="Security and/or Safety Event Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC_CHANNEL1TC2_IDR" edc:nzwidth="0x20" edc:access="---------------------wwwwwwwwwww" edc:impl="0x7FF" edc:_addr="0x40040068">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="COVFS" edc:nzwidth="0x1" edc:desc="Counter Overflow"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:nzwidth="0x1" edc:desc="Load Overrun"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:nzwidth="0x1" edc:desc="RA Compare"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:nzwidth="0x1" edc:desc="RB Compare"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:nzwidth="0x1" edc:desc="RC Compare"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:nzwidth="0x1" edc:desc="RA Loading"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:nzwidth="0x1" edc:desc="RB Loading"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1" edc:desc="External Trigger"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receiver Transfer"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Reception Buffer Full"/>
            <edc:SFRFieldDef edc:cname="SECE" edc:nzwidth="0x1" edc:desc="Security and/or Safety Event Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC_CHANNEL1TC2_IMR" edc:nzwidth="0x20" edc:access="---------------------rrrrrrrrrrr" edc:impl="0x7FF" edc:_addr="0x4004006C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="COVFS" edc:nzwidth="0x1" edc:desc="Counter Overflow"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:nzwidth="0x1" edc:desc="Load Overrun"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:nzwidth="0x1" edc:desc="RA Compare"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:nzwidth="0x1" edc:desc="RB Compare"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:nzwidth="0x1" edc:desc="RC Compare"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:nzwidth="0x1" edc:desc="RA Loading"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:nzwidth="0x1" edc:desc="RB Loading"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1" edc:desc="External Trigger"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receiver Transfer"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Reception Buffer Full"/>
            <edc:SFRFieldDef edc:cname="SECE" edc:nzwidth="0x1" edc:desc="Security and/or Safety Event Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC_CHANNEL1TC2_EMR" edc:nzwidth="0x20" edc:access="-----------------------n--nn--nn" edc:impl="0x133" edc:_addr="0x40040070">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="TRIGSRCA" edc:nzwidth="0x2" edc:desc="Trigger Source for Input A">
              <edc:SFRFieldSemantic edc:cname="EXTERNAL_TIOAx" edc:desc="The trigger/capture input A is driven by external pin TIOAx" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PWMx" edc:desc="The trigger/capture input A is driven internally by PWMx" edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TRIGSRCB" edc:nzwidth="0x2" edc:desc="Trigger Source for Input B">
              <edc:SFRFieldSemantic edc:cname="EXTERNAL_TIOBx" edc:desc="The trigger/capture input B is driven by external pin TIOBx" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PWMx" edc:desc="The trigger/capture input B is driven internally by the comparator output (see Figure 7-16) of the PWMx." edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="NODIVCLK" edc:nzwidth="0x1" edc:desc="No Divided Clock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC_CHANNEL1TC2_CSR" edc:nzwidth="0x20" edc:access="-------------rrr----------------" edc:impl="0x70000" edc:_addr="0x40040074">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:AdjustPoint edc:offset="0x10"/>
            <edc:SFRFieldDef edc:cname="CLKSTA" edc:nzwidth="0x1" edc:desc="Clock Enabling Status"/>
            <edc:SFRFieldDef edc:cname="MTIOA" edc:nzwidth="0x1" edc:desc="TIOAx Mirror"/>
            <edc:SFRFieldDef edc:cname="MTIOB" edc:nzwidth="0x1" edc:desc="TIOBx Mirror"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC_CHANNEL1TC2_SSR" edc:nzwidth="0x20" edc:access="r---rrrrrrrrrrrrrrrrrrrr----rrrr" edc:impl="0x8FFFFF0F" edc:_addr="0x40040078">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="WPVS" edc:nzwidth="0x1" edc:desc="Write Protection Violation Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CGD" edc:nzwidth="0x1" edc:desc="Clock Glitch Detected (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SEQE" edc:nzwidth="0x1" edc:desc="Internal Sequencer Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SWE" edc:nzwidth="0x1" edc:desc="Software Control Error (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:nzwidth="0x10" edc:desc="Write Protection Violation Source (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SWETYP" edc:nzwidth="0x4" edc:desc="Software Error Type (cleared on read)">
              <edc:SFRFieldSemantic edc:cname="READ_WO" edc:desc="TC Channel x is enabled and a write-only register has been read (Warning)." edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="WRITE_RO" edc:desc="TC Channel x is enabled and a write access has been performed on a read-only register (Warning)." edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="UNDEF_RW" edc:desc="Access to an undefined address of the TC (Warning)." edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="W_RARB_CAPT" edc:desc="TC_RAx or TC_RBx are written while channel is enabled and configured in capture mode (Error)." edc:when="(field &amp; 0xF) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ECLASS" edc:nzwidth="0x1" edc:desc="Software Error Class">
              <edc:SFRFieldSemantic edc:cname="WARNING" edc:desc="An abnormal access that does not have any impact." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ERROR" edc:desc="An abnormal access that may have an impact." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4004007C"/>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC_CHANNEL2TC2_CCR" edc:nzwidth="0x20" edc:access="-----------------------------www" edc:impl="0x7" edc:_addr="0x40040080">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="CLKEN" edc:nzwidth="0x1" edc:desc="Counter Clock Enable Command"/>
            <edc:SFRFieldDef edc:cname="CLKDIS" edc:nzwidth="0x1" edc:desc="Counter Clock Disable Command"/>
            <edc:SFRFieldDef edc:cname="SWTRG" edc:nzwidth="0x1" edc:desc="Software Trigger Command"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC_CHANNEL2TC2_CMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40040084">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="TCCLKS" edc:nzwidth="0x3" edc:desc="Clock Selection">
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK1" edc:desc="Clock selected: internal GCLK [TC_ID] clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK2" edc:desc="Clock selected: internal MCK/8 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK3" edc:desc="Clock selected: internal MCK/32 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK4" edc:desc="Clock selected: internal MCK/128 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK5" edc:desc="Clock selected: internal MD_SLCK clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="Clock selected: XC0" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="Clock selected: XC1" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="Clock selected: XC2" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CLKI" edc:nzwidth="0x1" edc:desc="Clock Invert"/>
            <edc:SFRFieldDef edc:cname="BURST" edc:nzwidth="0x2" edc:desc="Burst Signal Selection">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="The clock is not gated by an external signal." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="XC0 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="XC1 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="XC2 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPCSTOP" edc:nzwidth="0x1" edc:desc="Counter Clock Stopped with RC Compare"/>
            <edc:SFRFieldDef edc:cname="CPCDIS" edc:nzwidth="0x1" edc:desc="Counter Clock Disable with RC Compare"/>
            <edc:SFRFieldDef edc:cname="EEVTEDG" edc:nzwidth="0x2" edc:desc="External Event Edge Selection">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Rising edge" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Falling edge" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="EDGE" edc:desc="Each edge" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EEVT" edc:nzwidth="0x2" edc:desc="External Event Selection">
              <edc:SFRFieldSemantic edc:cname="TIOB" edc:desc="TIOB" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="XC0" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="XC1" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="XC2" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ENETRG" edc:nzwidth="0x1" edc:desc="External Event Trigger Enable"/>
            <edc:SFRFieldDef edc:cname="WAVSEL" edc:nzwidth="0x2" edc:desc="Waveform Selection">
              <edc:SFRFieldSemantic edc:cname="UP" edc:desc="UP mode without automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="UPDOWN" edc:desc="UPDOWN mode without automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="UP_RC" edc:desc="UP mode with automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="UPDOWN_RC" edc:desc="UPDOWN mode with automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="-1"/>
            <edc:SFRFieldDef edc:cname="CPCTRG" edc:nzwidth="0x1" edc:desc="RC Compare Trigger Enable"/>
            <edc:SFRFieldDef edc:cname="WAVE" edc:nzwidth="0x1" edc:desc="Waveform Mode"/>
            <edc:SFRFieldDef edc:cname="ACPA" edc:nzwidth="0x2" edc:desc="RA Compare Effect on TIOAx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ACPC" edc:nzwidth="0x2" edc:desc="RC Compare Effect on TIOAx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AEEVT" edc:nzwidth="0x2" edc:desc="External Event Effect on TIOAx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASWTRG" edc:nzwidth="0x2" edc:desc="Software Trigger Effect on TIOAx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BCPB" edc:nzwidth="0x2" edc:desc="RB Compare Effect on TIOBx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BCPC" edc:nzwidth="0x2" edc:desc="RC Compare Effect on TIOBx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BEEVT" edc:nzwidth="0x2" edc:desc="External Event Effect on TIOBx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BSWTRG" edc:nzwidth="0x2" edc:desc="Software Trigger Effect on TIOBx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC_CHANNEL2TC2_SMMR" edc:nzwidth="0x20" edc:access="------------------------------nn" edc:impl="0x3" edc:_addr="0x40040088">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="GCEN" edc:nzwidth="0x1" edc:desc="Gray Count Enable"/>
            <edc:SFRFieldDef edc:cname="DOWN" edc:nzwidth="0x1" edc:desc="Down Count"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4004008C"/>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC_CHANNEL2TC2_CV" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40040090">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="CV" edc:nzwidth="0x20" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC_CHANNEL2TC2_RA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40040094">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="RA" edc:nzwidth="0x20" edc:desc="Register A"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC_CHANNEL2TC2_RB" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40040098">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="RB" edc:nzwidth="0x20" edc:desc="Register B"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC_CHANNEL2TC2_RC" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4004009C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="RC" edc:nzwidth="0x20" edc:desc="Register C"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC_CHANNEL2TC2_SR" edc:nzwidth="0x20" edc:access="-------------rrr-----rrrrrrrrrrr" edc:impl="0x707FF" edc:_addr="0x400400A0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="COVFS" edc:nzwidth="0x1" edc:desc="Counter Overflow Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:nzwidth="0x1" edc:desc="Load Overrun Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:nzwidth="0x1" edc:desc="RA Compare Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:nzwidth="0x1" edc:desc="RB Compare Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:nzwidth="0x1" edc:desc="RC Compare Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:nzwidth="0x1" edc:desc="RA Loading Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:nzwidth="0x1" edc:desc="RB Loading Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1" edc:desc="External Trigger Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receiver Transfer (cleared by writing TC_RCR or TC_RNCR)"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Reception Buffer Full (cleared by writing TC_RCR or TC_RNCR)"/>
            <edc:SFRFieldDef edc:cname="SECE" edc:nzwidth="0x1" edc:desc="Security and/or Safety Event (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="CLKSTA" edc:nzwidth="0x1" edc:desc="Clock Enabling Status"/>
            <edc:SFRFieldDef edc:cname="MTIOA" edc:nzwidth="0x1" edc:desc="TIOAx Mirror"/>
            <edc:SFRFieldDef edc:cname="MTIOB" edc:nzwidth="0x1" edc:desc="TIOBx Mirror"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC_CHANNEL2TC2_IER" edc:nzwidth="0x20" edc:access="---------------------wwwwwwwwwww" edc:impl="0x7FF" edc:_addr="0x400400A4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="COVFS" edc:nzwidth="0x1" edc:desc="Counter Overflow"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:nzwidth="0x1" edc:desc="Load Overrun"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:nzwidth="0x1" edc:desc="RA Compare"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:nzwidth="0x1" edc:desc="RB Compare"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:nzwidth="0x1" edc:desc="RC Compare"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:nzwidth="0x1" edc:desc="RA Loading"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:nzwidth="0x1" edc:desc="RB Loading"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1" edc:desc="External Trigger"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receiver Transfer"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Reception Buffer Full"/>
            <edc:SFRFieldDef edc:cname="SECE" edc:nzwidth="0x1" edc:desc="Security and/or Safety Event Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC_CHANNEL2TC2_IDR" edc:nzwidth="0x20" edc:access="---------------------wwwwwwwwwww" edc:impl="0x7FF" edc:_addr="0x400400A8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="COVFS" edc:nzwidth="0x1" edc:desc="Counter Overflow"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:nzwidth="0x1" edc:desc="Load Overrun"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:nzwidth="0x1" edc:desc="RA Compare"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:nzwidth="0x1" edc:desc="RB Compare"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:nzwidth="0x1" edc:desc="RC Compare"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:nzwidth="0x1" edc:desc="RA Loading"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:nzwidth="0x1" edc:desc="RB Loading"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1" edc:desc="External Trigger"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receiver Transfer"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Reception Buffer Full"/>
            <edc:SFRFieldDef edc:cname="SECE" edc:nzwidth="0x1" edc:desc="Security and/or Safety Event Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC_CHANNEL2TC2_IMR" edc:nzwidth="0x20" edc:access="---------------------rrrrrrrrrrr" edc:impl="0x7FF" edc:_addr="0x400400AC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="COVFS" edc:nzwidth="0x1" edc:desc="Counter Overflow"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:nzwidth="0x1" edc:desc="Load Overrun"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:nzwidth="0x1" edc:desc="RA Compare"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:nzwidth="0x1" edc:desc="RB Compare"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:nzwidth="0x1" edc:desc="RC Compare"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:nzwidth="0x1" edc:desc="RA Loading"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:nzwidth="0x1" edc:desc="RB Loading"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1" edc:desc="External Trigger"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receiver Transfer"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Reception Buffer Full"/>
            <edc:SFRFieldDef edc:cname="SECE" edc:nzwidth="0x1" edc:desc="Security and/or Safety Event Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC_CHANNEL2TC2_EMR" edc:nzwidth="0x20" edc:access="-----------------------n--nn--nn" edc:impl="0x133" edc:_addr="0x400400B0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="TRIGSRCA" edc:nzwidth="0x2" edc:desc="Trigger Source for Input A">
              <edc:SFRFieldSemantic edc:cname="EXTERNAL_TIOAx" edc:desc="The trigger/capture input A is driven by external pin TIOAx" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PWMx" edc:desc="The trigger/capture input A is driven internally by PWMx" edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TRIGSRCB" edc:nzwidth="0x2" edc:desc="Trigger Source for Input B">
              <edc:SFRFieldSemantic edc:cname="EXTERNAL_TIOBx" edc:desc="The trigger/capture input B is driven by external pin TIOBx" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PWMx" edc:desc="The trigger/capture input B is driven internally by the comparator output (see Figure 7-16) of the PWMx." edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="NODIVCLK" edc:nzwidth="0x1" edc:desc="No Divided Clock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC_CHANNEL2TC2_CSR" edc:nzwidth="0x20" edc:access="-------------rrr----------------" edc:impl="0x70000" edc:_addr="0x400400B4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:AdjustPoint edc:offset="0x10"/>
            <edc:SFRFieldDef edc:cname="CLKSTA" edc:nzwidth="0x1" edc:desc="Clock Enabling Status"/>
            <edc:SFRFieldDef edc:cname="MTIOA" edc:nzwidth="0x1" edc:desc="TIOAx Mirror"/>
            <edc:SFRFieldDef edc:cname="MTIOB" edc:nzwidth="0x1" edc:desc="TIOBx Mirror"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC_CHANNEL2TC2_SSR" edc:nzwidth="0x20" edc:access="r---rrrrrrrrrrrrrrrrrrrr----rrrr" edc:impl="0x8FFFFF0F" edc:_addr="0x400400B8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="WPVS" edc:nzwidth="0x1" edc:desc="Write Protection Violation Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CGD" edc:nzwidth="0x1" edc:desc="Clock Glitch Detected (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SEQE" edc:nzwidth="0x1" edc:desc="Internal Sequencer Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SWE" edc:nzwidth="0x1" edc:desc="Software Control Error (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:nzwidth="0x10" edc:desc="Write Protection Violation Source (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SWETYP" edc:nzwidth="0x4" edc:desc="Software Error Type (cleared on read)">
              <edc:SFRFieldSemantic edc:cname="READ_WO" edc:desc="TC Channel x is enabled and a write-only register has been read (Warning)." edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="WRITE_RO" edc:desc="TC Channel x is enabled and a write access has been performed on a read-only register (Warning)." edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="UNDEF_RW" edc:desc="Access to an undefined address of the TC (Warning)." edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="W_RARB_CAPT" edc:desc="TC_RAx or TC_RBx are written while channel is enabled and configured in capture mode (Error)." edc:when="(field &amp; 0xF) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ECLASS" edc:nzwidth="0x1" edc:desc="Software Error Class">
              <edc:SFRFieldSemantic edc:cname="WARNING" edc:desc="An abnormal access that does not have any impact." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ERROR" edc:desc="An abnormal access that may have an impact." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x400400BC"/>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC2_BCR" edc:nzwidth="0x20" edc:access="-------------------------------w" edc:impl="0x1" edc:_addr="0x400400C0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="SYNC" edc:nzwidth="0x1" edc:desc="Synchro Command"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC2_BMR" edc:nzwidth="0x20" edc:access="------nnnnnn--nnnnnnnnnn--nnnnnn" edc:impl="0x3F3FF3F" edc:_addr="0x400400C4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="TC0XC0S" edc:nzwidth="0x2" edc:desc="External Clock Signal 0 Selection">
              <edc:SFRFieldSemantic edc:cname="TCLK0" edc:desc="Signal connected to XC0: TCLK0" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TIOA1" edc:desc="Signal connected to XC0: TIOA1" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TIOA2" edc:desc="Signal connected to XC0: TIOA2" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TC1XC1S" edc:nzwidth="0x2" edc:desc="External Clock Signal 1 Selection">
              <edc:SFRFieldSemantic edc:cname="TCLK1" edc:desc="Signal connected to XC1: TCLK1" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TIOA0" edc:desc="Signal connected to XC1: TIOA0" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TIOA2" edc:desc="Signal connected to XC1: TIOA2" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TC2XC2S" edc:nzwidth="0x2" edc:desc="External Clock Signal 2 Selection">
              <edc:SFRFieldSemantic edc:cname="TCLK2" edc:desc="Signal connected to XC2: TCLK2" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TIOA0" edc:desc="Signal connected to XC2: TIOA0" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TIOA1" edc:desc="Signal connected to XC2: TIOA1" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="QDEN" edc:nzwidth="0x1" edc:desc="Quadrature Decoder Enabled"/>
            <edc:SFRFieldDef edc:cname="POSEN" edc:nzwidth="0x1" edc:desc="Position Enabled"/>
            <edc:SFRFieldDef edc:cname="SPEEDEN" edc:nzwidth="0x1" edc:desc="Speed Enabled"/>
            <edc:SFRFieldDef edc:cname="QDTRANS" edc:nzwidth="0x1" edc:desc="Quadrature Decoding Transparent"/>
            <edc:SFRFieldDef edc:cname="EDGPHA" edc:nzwidth="0x1" edc:desc="Edge on PHA Count Mode"/>
            <edc:SFRFieldDef edc:cname="INVA" edc:nzwidth="0x1" edc:desc="Inverted PHA"/>
            <edc:SFRFieldDef edc:cname="INVB" edc:nzwidth="0x1" edc:desc="Inverted PHB"/>
            <edc:SFRFieldDef edc:cname="INVIDX" edc:nzwidth="0x1" edc:desc="Inverted Index"/>
            <edc:SFRFieldDef edc:cname="SWAP" edc:nzwidth="0x1" edc:desc="Swap PHA and PHB"/>
            <edc:SFRFieldDef edc:cname="IDXPHB" edc:nzwidth="0x1" edc:desc="Index Pin is PHB Pin"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MAXFILT" edc:nzwidth="0x6" edc:desc="Maximum Filter"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC2_QIER" edc:nzwidth="0x20" edc:access="------------------------wwww-www" edc:impl="0xF7" edc:_addr="0x400400C8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="IDX" edc:nzwidth="0x1" edc:desc="Index"/>
            <edc:SFRFieldDef edc:cname="DIRCHG" edc:nzwidth="0x1" edc:desc="Direction Change"/>
            <edc:SFRFieldDef edc:cname="QERR" edc:nzwidth="0x1" edc:desc="Quadrature Error"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FPHA" edc:nzwidth="0x1" edc:desc="Filtered Phase A Line"/>
            <edc:SFRFieldDef edc:cname="FPHB" edc:nzwidth="0x1" edc:desc="Filtered Phase B Line"/>
            <edc:SFRFieldDef edc:cname="FIDX" edc:nzwidth="0x1" edc:desc="Filtered Index Line"/>
            <edc:SFRFieldDef edc:cname="FMP" edc:nzwidth="0x1" edc:desc="Filtered Missing Pulse"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC2_QIDR" edc:nzwidth="0x20" edc:access="------------------------wwww-www" edc:impl="0xF7" edc:_addr="0x400400CC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="IDX" edc:nzwidth="0x1" edc:desc="Index"/>
            <edc:SFRFieldDef edc:cname="DIRCHG" edc:nzwidth="0x1" edc:desc="Direction Change"/>
            <edc:SFRFieldDef edc:cname="QERR" edc:nzwidth="0x1" edc:desc="Quadrature Error"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FPHA" edc:nzwidth="0x1" edc:desc="Filtered Phase A Line"/>
            <edc:SFRFieldDef edc:cname="FPHB" edc:nzwidth="0x1" edc:desc="Filtered Phase B Line"/>
            <edc:SFRFieldDef edc:cname="FIDX" edc:nzwidth="0x1" edc:desc="Filtered Index Line"/>
            <edc:SFRFieldDef edc:cname="FMP" edc:nzwidth="0x1" edc:desc="Filtered Missing Pulse"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC2_QIMR" edc:nzwidth="0x20" edc:access="------------------------rrrr-rrr" edc:impl="0xF7" edc:_addr="0x400400D0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="IDX" edc:nzwidth="0x1" edc:desc="Index"/>
            <edc:SFRFieldDef edc:cname="DIRCHG" edc:nzwidth="0x1" edc:desc="Direction Change"/>
            <edc:SFRFieldDef edc:cname="QERR" edc:nzwidth="0x1" edc:desc="Quadrature Error"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FPHA" edc:nzwidth="0x1" edc:desc="Filtered Phase A Line"/>
            <edc:SFRFieldDef edc:cname="FPHB" edc:nzwidth="0x1" edc:desc="Filtered Phase B Line"/>
            <edc:SFRFieldDef edc:cname="FIDX" edc:nzwidth="0x1" edc:desc="Filtered Index Line"/>
            <edc:SFRFieldDef edc:cname="FMP" edc:nzwidth="0x1" edc:desc="Filtered Missing Pulse"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC2_QISR" edc:nzwidth="0x20" edc:access="-----------------------rrrrr-rrr" edc:impl="0x1F7" edc:_addr="0x400400D4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="IDX" edc:nzwidth="0x1" edc:desc="Index"/>
            <edc:SFRFieldDef edc:cname="DIRCHG" edc:nzwidth="0x1" edc:desc="Direction Change"/>
            <edc:SFRFieldDef edc:cname="QERR" edc:nzwidth="0x1" edc:desc="Quadrature Error"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FPHA" edc:nzwidth="0x1" edc:desc="Filtered Phase A Line"/>
            <edc:SFRFieldDef edc:cname="FPHB" edc:nzwidth="0x1" edc:desc="Filtered Phase B Line"/>
            <edc:SFRFieldDef edc:cname="FIDX" edc:nzwidth="0x1" edc:desc="Filtered Index Line"/>
            <edc:SFRFieldDef edc:cname="FMP" edc:nzwidth="0x1" edc:desc="Filtered Missing Pulse"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Direction"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC2_FMR" edc:nzwidth="0x20" edc:access="------------------------------nn" edc:impl="0x3" edc:_addr="0x400400D8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="ENCF0" edc:nzwidth="0x1" edc:desc="Enable Compare Fault Channel 0"/>
            <edc:SFRFieldDef edc:cname="ENCF1" edc:nzwidth="0x1" edc:desc="Enable Compare Fault Channel 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC2_QSR" edc:nzwidth="0x20" edc:access="-----------------------r--------" edc:impl="0x100" edc:_addr="0x400400DC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Direction"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x400400E0"/>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC2_WPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn---n-nnn" edc:impl="0xFFFFFF17" edc:_addr="0x400400E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="WPEN" edc:nzwidth="0x1" edc:desc="Write Protection Enable"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:nzwidth="0x1" edc:desc="Write Protection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:nzwidth="0x1" edc:desc="Write Protection Control Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FIRSTE" edc:nzwidth="0x1" edc:desc="First Error Report Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPEN bit. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x54494D"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x18" edc:_addr="0x400400E8"/>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC2_RPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40040100">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="RXPTR" edc:nzwidth="0x20" edc:desc="Receive Pointer Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC2_RCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x40040104">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="RXCTR" edc:nzwidth="0x10" edc:desc="Receive Counter Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x40040108"/>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC2_RNPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40040110">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="RXNPTR" edc:nzwidth="0x20" edc:desc="Receive Next Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC2_RNCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x40040114">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="RXNCTR" edc:nzwidth="0x10" edc:desc="Receive Next Counter"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x40040118"/>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC2_PTC2R" edc:nzwidth="0x20" edc:access="-------w----wwww------ww------ww" edc:impl="0x10F0303" edc:_addr="0x40040120">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="RXTEN" edc:nzwidth="0x1" edc:desc="Receiver Transfer Enable"/>
            <edc:SFRFieldDef edc:cname="RXTDIS" edc:nzwidth="0x1" edc:desc="Receiver Transfer Disable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="TXTEN" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Enable"/>
            <edc:SFRFieldDef edc:cname="TXTDIS" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Disable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="RXCBEN" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Enable"/>
            <edc:SFRFieldDef edc:cname="RXCBDIS" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Disable"/>
            <edc:SFRFieldDef edc:cname="TXCBEN" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Enable"/>
            <edc:SFRFieldDef edc:cname="TXCBDIS" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Disable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ERRCLR" edc:nzwidth="0x1" edc:desc="Transfer Bus Error Clear"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC2_PTSR" edc:nzwidth="0x20" edc:access="-------r-----r-r-------r-------r" edc:impl="0x1050101" edc:_addr="0x40040124">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="RXTEN" edc:nzwidth="0x1" edc:desc="Receiver Transfer Enable"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="TXTEN" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Enable"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="RXCBEN" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXCBEN" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Transfer Bus Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="TC2_PWPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:impl="0xFFFFFF07" edc:_addr="0x40040128">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="WPPTREN" edc:nzwidth="0x1" edc:desc="Write Protection Pointer Registers Enable"/>
            <edc:SFRFieldDef edc:cname="WPCTREN" edc:nzwidth="0x1" edc:desc="Write Protection Counter Registers Enable"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:nzwidth="0x1" edc:desc="Write Protection Control Register Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x504443"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3ED4" edc:_addr="0x4004012C"/>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_MCFG0" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0x40044000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next system bus 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_MCFG1" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0x40044004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next system bus 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_MCFG2" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0x40044008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next system bus 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_MCFG3" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0x4004400C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next system bus 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_MCFG4" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0x40044010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next system bus 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_MCFG5" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0x40044014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next system bus 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_MCFG6" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0x40044018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next system bus 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_MCFG7" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0x4004401C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next system bus 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_MCFG8" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0x40044020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next system bus 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_MCFG9" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0x40044024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next system bus 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_MCFG10" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0x40044028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next system bus 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_MCFG11" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0x4004402C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next system bus 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_MCFG12" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0x40044030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next system bus 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_MCFG13" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0x40044034">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next system bus 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_MCFG14" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0x40044038">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next system bus 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_MCFG15" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0x4004403C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next system bus 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_SCFG0" edc:nzwidth="0x20" edc:access="----------nnnnnn-------nnnnnnnnn" edc:impl="0x3F01FF" edc:_addr="0x40044040">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x9" edc:desc="Maximum Bus Grant Duration for Masters"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Default Master"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_SCFG1" edc:nzwidth="0x20" edc:access="----------nnnnnn-------nnnnnnnnn" edc:impl="0x3F01FF" edc:_addr="0x40044044">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x9" edc:desc="Maximum Bus Grant Duration for Masters"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Default Master"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_SCFG2" edc:nzwidth="0x20" edc:access="----------nnnnnn-------nnnnnnnnn" edc:impl="0x3F01FF" edc:_addr="0x40044048">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x9" edc:desc="Maximum Bus Grant Duration for Masters"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Default Master"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_SCFG3" edc:nzwidth="0x20" edc:access="----------nnnnnn-------nnnnnnnnn" edc:impl="0x3F01FF" edc:_addr="0x4004404C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x9" edc:desc="Maximum Bus Grant Duration for Masters"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Default Master"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_SCFG4" edc:nzwidth="0x20" edc:access="----------nnnnnn-------nnnnnnnnn" edc:impl="0x3F01FF" edc:_addr="0x40044050">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x9" edc:desc="Maximum Bus Grant Duration for Masters"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Default Master"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_SCFG5" edc:nzwidth="0x20" edc:access="----------nnnnnn-------nnnnnnnnn" edc:impl="0x3F01FF" edc:_addr="0x40044054">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x9" edc:desc="Maximum Bus Grant Duration for Masters"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Default Master"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_SCFG6" edc:nzwidth="0x20" edc:access="----------nnnnnn-------nnnnnnnnn" edc:impl="0x3F01FF" edc:_addr="0x40044058">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x9" edc:desc="Maximum Bus Grant Duration for Masters"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Default Master"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_SCFG7" edc:nzwidth="0x20" edc:access="----------nnnnnn-------nnnnnnnnn" edc:impl="0x3F01FF" edc:_addr="0x4004405C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x9" edc:desc="Maximum Bus Grant Duration for Masters"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Default Master"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_SCFG8" edc:nzwidth="0x20" edc:access="----------nnnnnn-------nnnnnnnnn" edc:impl="0x3F01FF" edc:_addr="0x40044060">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x9" edc:desc="Maximum Bus Grant Duration for Masters"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Default Master"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_SCFG9" edc:nzwidth="0x20" edc:access="----------nnnnnn-------nnnnnnnnn" edc:impl="0x3F01FF" edc:_addr="0x40044064">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x9" edc:desc="Maximum Bus Grant Duration for Masters"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Default Master"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_SCFG10" edc:nzwidth="0x20" edc:access="----------nnnnnn-------nnnnnnnnn" edc:impl="0x3F01FF" edc:_addr="0x40044068">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x9" edc:desc="Maximum Bus Grant Duration for Masters"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Default Master"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_SCFG11" edc:nzwidth="0x20" edc:access="----------nnnnnn-------nnnnnnnnn" edc:impl="0x3F01FF" edc:_addr="0x4004406C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x9" edc:desc="Maximum Bus Grant Duration for Masters"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Default Master"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_SCFG12" edc:nzwidth="0x20" edc:access="----------nnnnnn-------nnnnnnnnn" edc:impl="0x3F01FF" edc:_addr="0x40044070">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x9" edc:desc="Maximum Bus Grant Duration for Masters"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Default Master"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_SCFG13" edc:nzwidth="0x20" edc:access="----------nnnnnn-------nnnnnnnnn" edc:impl="0x3F01FF" edc:_addr="0x40044074">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x9" edc:desc="Maximum Bus Grant Duration for Masters"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Default Master"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_SCFG14" edc:nzwidth="0x20" edc:access="----------nnnnnn-------nnnnnnnnn" edc:impl="0x3F01FF" edc:_addr="0x40044078">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x9" edc:desc="Maximum Bus Grant Duration for Masters"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Default Master"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_SCFG15" edc:nzwidth="0x20" edc:access="----------nnnnnn-------nnnnnnnnn" edc:impl="0x3F01FF" edc:_addr="0x4004407C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x9" edc:desc="Maximum Bus Grant Duration for Masters"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Default Master"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX_PR0MATRIX1_PRAS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x40044080">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="M0PR" edc:nzwidth="0x2" edc:desc="Master 0 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:nzwidth="0x2" edc:desc="Master 1 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:nzwidth="0x2" edc:desc="Master 2 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:nzwidth="0x2" edc:desc="Master 3 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:nzwidth="0x2" edc:desc="Master 4 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:nzwidth="0x2" edc:desc="Master 5 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 5"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:nzwidth="0x2" edc:desc="Master 6 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 6"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:nzwidth="0x2" edc:desc="Master 7 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX_PR0MATRIX1_PRBS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x40044084">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="M8PR" edc:nzwidth="0x2" edc:desc="Master 8 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 8"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:nzwidth="0x2" edc:desc="Master 9 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 9"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:nzwidth="0x2" edc:desc="Master 10 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 10"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:nzwidth="0x2" edc:desc="Master 11 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 11"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:nzwidth="0x2" edc:desc="Master 12 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 12"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:nzwidth="0x2" edc:desc="Master 13 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 13"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:nzwidth="0x2" edc:desc="Master 14 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 14"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:nzwidth="0x2" edc:desc="Master 15 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX_PR1MATRIX1_PRAS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x40044088">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="M0PR" edc:nzwidth="0x2" edc:desc="Master 0 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:nzwidth="0x2" edc:desc="Master 1 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:nzwidth="0x2" edc:desc="Master 2 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:nzwidth="0x2" edc:desc="Master 3 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:nzwidth="0x2" edc:desc="Master 4 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:nzwidth="0x2" edc:desc="Master 5 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 5"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:nzwidth="0x2" edc:desc="Master 6 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 6"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:nzwidth="0x2" edc:desc="Master 7 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX_PR1MATRIX1_PRBS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x4004408C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="M8PR" edc:nzwidth="0x2" edc:desc="Master 8 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 8"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:nzwidth="0x2" edc:desc="Master 9 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 9"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:nzwidth="0x2" edc:desc="Master 10 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 10"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:nzwidth="0x2" edc:desc="Master 11 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 11"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:nzwidth="0x2" edc:desc="Master 12 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 12"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:nzwidth="0x2" edc:desc="Master 13 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 13"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:nzwidth="0x2" edc:desc="Master 14 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 14"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:nzwidth="0x2" edc:desc="Master 15 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX_PR2MATRIX1_PRAS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x40044090">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="M0PR" edc:nzwidth="0x2" edc:desc="Master 0 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:nzwidth="0x2" edc:desc="Master 1 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:nzwidth="0x2" edc:desc="Master 2 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:nzwidth="0x2" edc:desc="Master 3 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:nzwidth="0x2" edc:desc="Master 4 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:nzwidth="0x2" edc:desc="Master 5 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 5"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:nzwidth="0x2" edc:desc="Master 6 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 6"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:nzwidth="0x2" edc:desc="Master 7 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX_PR2MATRIX1_PRBS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x40044094">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="M8PR" edc:nzwidth="0x2" edc:desc="Master 8 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 8"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:nzwidth="0x2" edc:desc="Master 9 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 9"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:nzwidth="0x2" edc:desc="Master 10 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 10"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:nzwidth="0x2" edc:desc="Master 11 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 11"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:nzwidth="0x2" edc:desc="Master 12 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 12"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:nzwidth="0x2" edc:desc="Master 13 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 13"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:nzwidth="0x2" edc:desc="Master 14 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 14"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:nzwidth="0x2" edc:desc="Master 15 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX_PR3MATRIX1_PRAS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x40044098">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="M0PR" edc:nzwidth="0x2" edc:desc="Master 0 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:nzwidth="0x2" edc:desc="Master 1 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:nzwidth="0x2" edc:desc="Master 2 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:nzwidth="0x2" edc:desc="Master 3 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:nzwidth="0x2" edc:desc="Master 4 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:nzwidth="0x2" edc:desc="Master 5 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 5"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:nzwidth="0x2" edc:desc="Master 6 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 6"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:nzwidth="0x2" edc:desc="Master 7 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX_PR3MATRIX1_PRBS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x4004409C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="M8PR" edc:nzwidth="0x2" edc:desc="Master 8 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 8"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:nzwidth="0x2" edc:desc="Master 9 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 9"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:nzwidth="0x2" edc:desc="Master 10 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 10"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:nzwidth="0x2" edc:desc="Master 11 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 11"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:nzwidth="0x2" edc:desc="Master 12 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 12"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:nzwidth="0x2" edc:desc="Master 13 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 13"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:nzwidth="0x2" edc:desc="Master 14 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 14"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:nzwidth="0x2" edc:desc="Master 15 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX_PR4MATRIX1_PRAS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x400440A0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="M0PR" edc:nzwidth="0x2" edc:desc="Master 0 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:nzwidth="0x2" edc:desc="Master 1 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:nzwidth="0x2" edc:desc="Master 2 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:nzwidth="0x2" edc:desc="Master 3 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:nzwidth="0x2" edc:desc="Master 4 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:nzwidth="0x2" edc:desc="Master 5 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 5"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:nzwidth="0x2" edc:desc="Master 6 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 6"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:nzwidth="0x2" edc:desc="Master 7 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX_PR4MATRIX1_PRBS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x400440A4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="M8PR" edc:nzwidth="0x2" edc:desc="Master 8 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 8"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:nzwidth="0x2" edc:desc="Master 9 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 9"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:nzwidth="0x2" edc:desc="Master 10 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 10"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:nzwidth="0x2" edc:desc="Master 11 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 11"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:nzwidth="0x2" edc:desc="Master 12 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 12"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:nzwidth="0x2" edc:desc="Master 13 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 13"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:nzwidth="0x2" edc:desc="Master 14 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 14"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:nzwidth="0x2" edc:desc="Master 15 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX_PR5MATRIX1_PRAS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x400440A8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="M0PR" edc:nzwidth="0x2" edc:desc="Master 0 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:nzwidth="0x2" edc:desc="Master 1 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:nzwidth="0x2" edc:desc="Master 2 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:nzwidth="0x2" edc:desc="Master 3 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:nzwidth="0x2" edc:desc="Master 4 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:nzwidth="0x2" edc:desc="Master 5 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 5"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:nzwidth="0x2" edc:desc="Master 6 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 6"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:nzwidth="0x2" edc:desc="Master 7 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX_PR5MATRIX1_PRBS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x400440AC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="M8PR" edc:nzwidth="0x2" edc:desc="Master 8 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 8"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:nzwidth="0x2" edc:desc="Master 9 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 9"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:nzwidth="0x2" edc:desc="Master 10 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 10"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:nzwidth="0x2" edc:desc="Master 11 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 11"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:nzwidth="0x2" edc:desc="Master 12 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 12"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:nzwidth="0x2" edc:desc="Master 13 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 13"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:nzwidth="0x2" edc:desc="Master 14 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 14"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:nzwidth="0x2" edc:desc="Master 15 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX_PR6MATRIX1_PRAS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x400440B0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="M0PR" edc:nzwidth="0x2" edc:desc="Master 0 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:nzwidth="0x2" edc:desc="Master 1 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:nzwidth="0x2" edc:desc="Master 2 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:nzwidth="0x2" edc:desc="Master 3 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:nzwidth="0x2" edc:desc="Master 4 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:nzwidth="0x2" edc:desc="Master 5 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 5"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:nzwidth="0x2" edc:desc="Master 6 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 6"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:nzwidth="0x2" edc:desc="Master 7 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX_PR6MATRIX1_PRBS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x400440B4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="M8PR" edc:nzwidth="0x2" edc:desc="Master 8 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 8"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:nzwidth="0x2" edc:desc="Master 9 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 9"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:nzwidth="0x2" edc:desc="Master 10 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 10"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:nzwidth="0x2" edc:desc="Master 11 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 11"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:nzwidth="0x2" edc:desc="Master 12 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 12"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:nzwidth="0x2" edc:desc="Master 13 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 13"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:nzwidth="0x2" edc:desc="Master 14 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 14"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:nzwidth="0x2" edc:desc="Master 15 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX_PR7MATRIX1_PRAS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x400440B8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="M0PR" edc:nzwidth="0x2" edc:desc="Master 0 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:nzwidth="0x2" edc:desc="Master 1 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:nzwidth="0x2" edc:desc="Master 2 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:nzwidth="0x2" edc:desc="Master 3 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:nzwidth="0x2" edc:desc="Master 4 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:nzwidth="0x2" edc:desc="Master 5 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 5"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:nzwidth="0x2" edc:desc="Master 6 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 6"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:nzwidth="0x2" edc:desc="Master 7 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX_PR7MATRIX1_PRBS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x400440BC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="M8PR" edc:nzwidth="0x2" edc:desc="Master 8 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 8"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:nzwidth="0x2" edc:desc="Master 9 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 9"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:nzwidth="0x2" edc:desc="Master 10 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 10"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:nzwidth="0x2" edc:desc="Master 11 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 11"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:nzwidth="0x2" edc:desc="Master 12 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 12"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:nzwidth="0x2" edc:desc="Master 13 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 13"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:nzwidth="0x2" edc:desc="Master 14 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 14"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:nzwidth="0x2" edc:desc="Master 15 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX_PR8MATRIX1_PRAS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x400440C0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="M0PR" edc:nzwidth="0x2" edc:desc="Master 0 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:nzwidth="0x2" edc:desc="Master 1 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:nzwidth="0x2" edc:desc="Master 2 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:nzwidth="0x2" edc:desc="Master 3 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:nzwidth="0x2" edc:desc="Master 4 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:nzwidth="0x2" edc:desc="Master 5 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 5"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:nzwidth="0x2" edc:desc="Master 6 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 6"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:nzwidth="0x2" edc:desc="Master 7 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX_PR8MATRIX1_PRBS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x400440C4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="M8PR" edc:nzwidth="0x2" edc:desc="Master 8 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 8"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:nzwidth="0x2" edc:desc="Master 9 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 9"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:nzwidth="0x2" edc:desc="Master 10 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 10"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:nzwidth="0x2" edc:desc="Master 11 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 11"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:nzwidth="0x2" edc:desc="Master 12 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 12"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:nzwidth="0x2" edc:desc="Master 13 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 13"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:nzwidth="0x2" edc:desc="Master 14 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 14"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:nzwidth="0x2" edc:desc="Master 15 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX_PR9MATRIX1_PRAS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x400440C8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="M0PR" edc:nzwidth="0x2" edc:desc="Master 0 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:nzwidth="0x2" edc:desc="Master 1 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:nzwidth="0x2" edc:desc="Master 2 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:nzwidth="0x2" edc:desc="Master 3 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:nzwidth="0x2" edc:desc="Master 4 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:nzwidth="0x2" edc:desc="Master 5 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 5"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:nzwidth="0x2" edc:desc="Master 6 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 6"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:nzwidth="0x2" edc:desc="Master 7 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX_PR9MATRIX1_PRBS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x400440CC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="M8PR" edc:nzwidth="0x2" edc:desc="Master 8 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 8"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:nzwidth="0x2" edc:desc="Master 9 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 9"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:nzwidth="0x2" edc:desc="Master 10 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 10"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:nzwidth="0x2" edc:desc="Master 11 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 11"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:nzwidth="0x2" edc:desc="Master 12 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 12"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:nzwidth="0x2" edc:desc="Master 13 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 13"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:nzwidth="0x2" edc:desc="Master 14 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 14"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:nzwidth="0x2" edc:desc="Master 15 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX_PR10MATRIX1_PRAS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x400440D0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="M0PR" edc:nzwidth="0x2" edc:desc="Master 0 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:nzwidth="0x2" edc:desc="Master 1 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:nzwidth="0x2" edc:desc="Master 2 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:nzwidth="0x2" edc:desc="Master 3 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:nzwidth="0x2" edc:desc="Master 4 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:nzwidth="0x2" edc:desc="Master 5 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 5"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:nzwidth="0x2" edc:desc="Master 6 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 6"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:nzwidth="0x2" edc:desc="Master 7 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX_PR10MATRIX1_PRBS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x400440D4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="M8PR" edc:nzwidth="0x2" edc:desc="Master 8 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 8"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:nzwidth="0x2" edc:desc="Master 9 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 9"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:nzwidth="0x2" edc:desc="Master 10 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 10"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:nzwidth="0x2" edc:desc="Master 11 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 11"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:nzwidth="0x2" edc:desc="Master 12 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 12"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:nzwidth="0x2" edc:desc="Master 13 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 13"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:nzwidth="0x2" edc:desc="Master 14 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 14"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:nzwidth="0x2" edc:desc="Master 15 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX_PR11MATRIX1_PRAS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x400440D8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="M0PR" edc:nzwidth="0x2" edc:desc="Master 0 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:nzwidth="0x2" edc:desc="Master 1 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:nzwidth="0x2" edc:desc="Master 2 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:nzwidth="0x2" edc:desc="Master 3 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:nzwidth="0x2" edc:desc="Master 4 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:nzwidth="0x2" edc:desc="Master 5 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 5"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:nzwidth="0x2" edc:desc="Master 6 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 6"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:nzwidth="0x2" edc:desc="Master 7 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX_PR11MATRIX1_PRBS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x400440DC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="M8PR" edc:nzwidth="0x2" edc:desc="Master 8 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 8"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:nzwidth="0x2" edc:desc="Master 9 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 9"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:nzwidth="0x2" edc:desc="Master 10 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 10"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:nzwidth="0x2" edc:desc="Master 11 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 11"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:nzwidth="0x2" edc:desc="Master 12 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 12"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:nzwidth="0x2" edc:desc="Master 13 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 13"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:nzwidth="0x2" edc:desc="Master 14 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 14"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:nzwidth="0x2" edc:desc="Master 15 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX_PR12MATRIX1_PRAS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x400440E0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="M0PR" edc:nzwidth="0x2" edc:desc="Master 0 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:nzwidth="0x2" edc:desc="Master 1 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:nzwidth="0x2" edc:desc="Master 2 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:nzwidth="0x2" edc:desc="Master 3 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:nzwidth="0x2" edc:desc="Master 4 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:nzwidth="0x2" edc:desc="Master 5 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 5"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:nzwidth="0x2" edc:desc="Master 6 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 6"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:nzwidth="0x2" edc:desc="Master 7 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX_PR12MATRIX1_PRBS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x400440E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="M8PR" edc:nzwidth="0x2" edc:desc="Master 8 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 8"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:nzwidth="0x2" edc:desc="Master 9 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 9"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:nzwidth="0x2" edc:desc="Master 10 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 10"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:nzwidth="0x2" edc:desc="Master 11 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 11"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:nzwidth="0x2" edc:desc="Master 12 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 12"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:nzwidth="0x2" edc:desc="Master 13 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 13"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:nzwidth="0x2" edc:desc="Master 14 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 14"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:nzwidth="0x2" edc:desc="Master 15 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX_PR13MATRIX1_PRAS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x400440E8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="M0PR" edc:nzwidth="0x2" edc:desc="Master 0 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:nzwidth="0x2" edc:desc="Master 1 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:nzwidth="0x2" edc:desc="Master 2 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:nzwidth="0x2" edc:desc="Master 3 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:nzwidth="0x2" edc:desc="Master 4 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:nzwidth="0x2" edc:desc="Master 5 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 5"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:nzwidth="0x2" edc:desc="Master 6 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 6"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:nzwidth="0x2" edc:desc="Master 7 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX_PR13MATRIX1_PRBS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x400440EC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="M8PR" edc:nzwidth="0x2" edc:desc="Master 8 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 8"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:nzwidth="0x2" edc:desc="Master 9 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 9"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:nzwidth="0x2" edc:desc="Master 10 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 10"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:nzwidth="0x2" edc:desc="Master 11 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 11"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:nzwidth="0x2" edc:desc="Master 12 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 12"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:nzwidth="0x2" edc:desc="Master 13 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 13"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:nzwidth="0x2" edc:desc="Master 14 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 14"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:nzwidth="0x2" edc:desc="Master 15 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX_PR14MATRIX1_PRAS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x400440F0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="M0PR" edc:nzwidth="0x2" edc:desc="Master 0 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:nzwidth="0x2" edc:desc="Master 1 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:nzwidth="0x2" edc:desc="Master 2 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:nzwidth="0x2" edc:desc="Master 3 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:nzwidth="0x2" edc:desc="Master 4 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:nzwidth="0x2" edc:desc="Master 5 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 5"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:nzwidth="0x2" edc:desc="Master 6 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 6"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:nzwidth="0x2" edc:desc="Master 7 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX_PR14MATRIX1_PRBS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x400440F4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="M8PR" edc:nzwidth="0x2" edc:desc="Master 8 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 8"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:nzwidth="0x2" edc:desc="Master 9 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 9"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:nzwidth="0x2" edc:desc="Master 10 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 10"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:nzwidth="0x2" edc:desc="Master 11 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 11"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:nzwidth="0x2" edc:desc="Master 12 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 12"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:nzwidth="0x2" edc:desc="Master 13 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 13"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:nzwidth="0x2" edc:desc="Master 14 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 14"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:nzwidth="0x2" edc:desc="Master 15 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX_PR15MATRIX1_PRAS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x400440F8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="M0PR" edc:nzwidth="0x2" edc:desc="Master 0 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:nzwidth="0x2" edc:desc="Master 1 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:nzwidth="0x2" edc:desc="Master 2 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:nzwidth="0x2" edc:desc="Master 3 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:nzwidth="0x2" edc:desc="Master 4 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:nzwidth="0x2" edc:desc="Master 5 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 5"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:nzwidth="0x2" edc:desc="Master 6 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 6"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:nzwidth="0x2" edc:desc="Master 7 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX_PR15MATRIX1_PRBS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x400440FC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="M8PR" edc:nzwidth="0x2" edc:desc="Master 8 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 8"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:nzwidth="0x2" edc:desc="Master 9 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 9"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:nzwidth="0x2" edc:desc="Master 10 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 10"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:nzwidth="0x2" edc:desc="Master 11 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 11"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:nzwidth="0x2" edc:desc="Master 12 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 12"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:nzwidth="0x2" edc:desc="Master 13 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 13"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:nzwidth="0x2" edc:desc="Master 14 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 14"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:nzwidth="0x2" edc:desc="Master 15 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_MRCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x40044100">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="RCB0" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 0"/>
            <edc:SFRFieldDef edc:cname="RCB1" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 1"/>
            <edc:SFRFieldDef edc:cname="RCB2" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 2"/>
            <edc:SFRFieldDef edc:cname="RCB3" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 3"/>
            <edc:SFRFieldDef edc:cname="RCB4" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 4"/>
            <edc:SFRFieldDef edc:cname="RCB5" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 5"/>
            <edc:SFRFieldDef edc:cname="RCB6" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 6"/>
            <edc:SFRFieldDef edc:cname="RCB7" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 7"/>
            <edc:SFRFieldDef edc:cname="RCB8" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 8"/>
            <edc:SFRFieldDef edc:cname="RCB9" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 9"/>
            <edc:SFRFieldDef edc:cname="RCB10" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 10"/>
            <edc:SFRFieldDef edc:cname="RCB11" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 11"/>
            <edc:SFRFieldDef edc:cname="RCB12" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 12"/>
            <edc:SFRFieldDef edc:cname="RCB13" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 13"/>
            <edc:SFRFieldDef edc:cname="RCB14" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 14"/>
            <edc:SFRFieldDef edc:cname="RCB15" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x40044104"/>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_SFR0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40044110">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register Fields"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_SFR1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40044114">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register Fields"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_SFR2" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40044118">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register Fields"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_SFR3" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4004411C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register Fields"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_SFR4" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40044120">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register Fields"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_SFR5" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40044124">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register Fields"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_SFR6" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40044128">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register Fields"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_SFR7" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4004412C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register Fields"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_SFR8" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40044130">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register Fields"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_SFR9" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40044134">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register Fields"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_SFR10" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40044138">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register Fields"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_SFR11" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4004413C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register Fields"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_SFR12" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40044140">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register Fields"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_SFR13" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40044144">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register Fields"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_SFR14" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40044148">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register Fields"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_SFR15" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4004414C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register Fields"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_MEIER" edc:nzwidth="0x20" edc:access="----------------wwwwwwwwwwwwwwww" edc:impl="0xFFFF" edc:_addr="0x40044150">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="MERR0" edc:nzwidth="0x1" edc:desc="Master 0 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR1" edc:nzwidth="0x1" edc:desc="Master 1 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR2" edc:nzwidth="0x1" edc:desc="Master 2 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR3" edc:nzwidth="0x1" edc:desc="Master 3 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR4" edc:nzwidth="0x1" edc:desc="Master 4 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR5" edc:nzwidth="0x1" edc:desc="Master 5 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR6" edc:nzwidth="0x1" edc:desc="Master 6 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR7" edc:nzwidth="0x1" edc:desc="Master 7 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR8" edc:nzwidth="0x1" edc:desc="Master 8 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR9" edc:nzwidth="0x1" edc:desc="Master 9 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR10" edc:nzwidth="0x1" edc:desc="Master 10 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR11" edc:nzwidth="0x1" edc:desc="Master 11 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR12" edc:nzwidth="0x1" edc:desc="Master 12 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR13" edc:nzwidth="0x1" edc:desc="Master 13 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR14" edc:nzwidth="0x1" edc:desc="Master 14 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR15" edc:nzwidth="0x1" edc:desc="Master 15 Access Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_MEIDR" edc:nzwidth="0x20" edc:access="----------------wwwwwwwwwwwwwwww" edc:impl="0xFFFF" edc:_addr="0x40044154">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="MERR0" edc:nzwidth="0x1" edc:desc="Master 0 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR1" edc:nzwidth="0x1" edc:desc="Master 1 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR2" edc:nzwidth="0x1" edc:desc="Master 2 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR3" edc:nzwidth="0x1" edc:desc="Master 3 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR4" edc:nzwidth="0x1" edc:desc="Master 4 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR5" edc:nzwidth="0x1" edc:desc="Master 5 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR6" edc:nzwidth="0x1" edc:desc="Master 6 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR7" edc:nzwidth="0x1" edc:desc="Master 7 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR8" edc:nzwidth="0x1" edc:desc="Master 8 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR9" edc:nzwidth="0x1" edc:desc="Master 9 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR10" edc:nzwidth="0x1" edc:desc="Master 10 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR11" edc:nzwidth="0x1" edc:desc="Master 11 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR12" edc:nzwidth="0x1" edc:desc="Master 12 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR13" edc:nzwidth="0x1" edc:desc="Master 13 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR14" edc:nzwidth="0x1" edc:desc="Master 14 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR15" edc:nzwidth="0x1" edc:desc="Master 15 Access Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_MEIMR" edc:nzwidth="0x20" edc:access="----------------rrrrrrrrrrrrrrrr" edc:impl="0xFFFF" edc:_addr="0x40044158">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="MERR0" edc:nzwidth="0x1" edc:desc="Master 0 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR1" edc:nzwidth="0x1" edc:desc="Master 1 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR2" edc:nzwidth="0x1" edc:desc="Master 2 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR3" edc:nzwidth="0x1" edc:desc="Master 3 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR4" edc:nzwidth="0x1" edc:desc="Master 4 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR5" edc:nzwidth="0x1" edc:desc="Master 5 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR6" edc:nzwidth="0x1" edc:desc="Master 6 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR7" edc:nzwidth="0x1" edc:desc="Master 7 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR8" edc:nzwidth="0x1" edc:desc="Master 8 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR9" edc:nzwidth="0x1" edc:desc="Master 9 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR10" edc:nzwidth="0x1" edc:desc="Master 10 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR11" edc:nzwidth="0x1" edc:desc="Master 11 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR12" edc:nzwidth="0x1" edc:desc="Master 12 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR13" edc:nzwidth="0x1" edc:desc="Master 13 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR14" edc:nzwidth="0x1" edc:desc="Master 14 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR15" edc:nzwidth="0x1" edc:desc="Master 15 Access Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_MESR" edc:nzwidth="0x20" edc:access="----------------rrrrrrrrrrrrrrrr" edc:impl="0xFFFF" edc:_addr="0x4004415C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="MERR0" edc:nzwidth="0x1" edc:desc="Master 0 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR1" edc:nzwidth="0x1" edc:desc="Master 1 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR2" edc:nzwidth="0x1" edc:desc="Master 2 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR3" edc:nzwidth="0x1" edc:desc="Master 3 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR4" edc:nzwidth="0x1" edc:desc="Master 4 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR5" edc:nzwidth="0x1" edc:desc="Master 5 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR6" edc:nzwidth="0x1" edc:desc="Master 6 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR7" edc:nzwidth="0x1" edc:desc="Master 7 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR8" edc:nzwidth="0x1" edc:desc="Master 8 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR9" edc:nzwidth="0x1" edc:desc="Master 9 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR10" edc:nzwidth="0x1" edc:desc="Master 10 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR11" edc:nzwidth="0x1" edc:desc="Master 11 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR12" edc:nzwidth="0x1" edc:desc="Master 12 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR13" edc:nzwidth="0x1" edc:desc="Master 13 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR14" edc:nzwidth="0x1" edc:desc="Master 14 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR15" edc:nzwidth="0x1" edc:desc="Master 15 Access Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_MEAR0" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40044160">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:nzwidth="0x20" edc:desc="Master Error Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_MEAR1" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40044164">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:nzwidth="0x20" edc:desc="Master Error Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_MEAR2" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40044168">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:nzwidth="0x20" edc:desc="Master Error Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_MEAR3" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4004416C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:nzwidth="0x20" edc:desc="Master Error Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_MEAR4" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40044170">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:nzwidth="0x20" edc:desc="Master Error Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_MEAR5" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40044174">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:nzwidth="0x20" edc:desc="Master Error Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_MEAR6" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40044178">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:nzwidth="0x20" edc:desc="Master Error Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_MEAR7" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4004417C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:nzwidth="0x20" edc:desc="Master Error Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_MEAR8" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40044180">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:nzwidth="0x20" edc:desc="Master Error Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_MEAR9" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40044184">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:nzwidth="0x20" edc:desc="Master Error Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_MEAR10" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40044188">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:nzwidth="0x20" edc:desc="Master Error Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_MEAR11" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4004418C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:nzwidth="0x20" edc:desc="Master Error Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_MEAR12" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40044190">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:nzwidth="0x20" edc:desc="Master Error Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_MEAR13" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40044194">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:nzwidth="0x20" edc:desc="Master Error Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_MEAR14" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40044198">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:nzwidth="0x20" edc:desc="Master Error Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_MEAR15" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4004419C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:nzwidth="0x20" edc:desc="Master Error Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x44" edc:_addr="0x400441A0"/>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_WPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnn------n" edc:impl="0xFFFFFF81" edc:_addr="0x400441E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="WPEN" edc:nzwidth="0x1" edc:desc="Write Protection Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="CFGFRZ" edc:nzwidth="0x1" edc:desc="Configuration Freeze"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPEN and CFGFRZ bits. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x4D4154"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_WPSR" edc:nzwidth="0x20" edc:access="--------rrrrrrrrrrrrrrrr-------r" edc:impl="0xFFFF01" edc:_addr="0x400441E8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="WPVS" edc:nzwidth="0x1" edc:desc="Write Protection Violation Status"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:nzwidth="0x10" edc:desc="Write Protection Violation Source"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x10" edc:_addr="0x400441EC"/>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_VERSION" edc:nzwidth="0x20" edc:access="-------------rrr----rrrrrrrrrrrr" edc:impl="0x70FFF" edc:_addr="0x400441FC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="VERSION" edc:nzwidth="0xC" edc:desc="Matrix Version"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="MFN" edc:nzwidth="0x3" edc:desc="Metal Fix Number"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_PSR0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40044200">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_PSR1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40044204">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_PSR2" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40044208">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_PSR3" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4004420C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_PSR4" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40044210">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_PSR5" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40044214">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_PSR6" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40044218">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_PSR7" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4004421C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_PSR8" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40044220">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_PSR9" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40044224">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_PSR10" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40044228">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_PSR11" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4004422C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_PSR12" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40044230">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_PSR13" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40044234">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_PSR14" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40044238">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_PSR15" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4004423C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_PASSR0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40044240">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_PASSR1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40044244">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_PASSR2" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40044248">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_PASSR3" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4004424C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_PASSR4" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40044250">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_PASSR5" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40044254">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_PASSR6" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40044258">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_PASSR7" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4004425C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_PASSR8" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40044260">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_PASSR9" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40044264">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_PASSR10" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40044268">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_PASSR11" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4004426C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_PASSR12" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40044270">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_PASSR13" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40044274">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_PASSR14" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40044278">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_PASSR15" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4004427C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_PRTSR0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40044280">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_PRTSR1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40044284">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_PRTSR2" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40044288">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_PRTSR3" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4004428C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_PRTSR4" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40044290">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_PRTSR5" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40044294">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_PRTSR6" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40044298">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_PRTSR7" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4004429C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_PRTSR8" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x400442A0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_PRTSR9" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x400442A4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_PRTSR10" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x400442A8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_PRTSR11" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x400442AC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_PRTSR12" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x400442B0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_PRTSR13" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x400442B4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_PRTSR14" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x400442B8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_PRTSR15" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x400442BC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_PPSELR0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x400442C0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="USERP0" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP1" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP2" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP3" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP4" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP5" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP6" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP7" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP8" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP9" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP10" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP11" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP12" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP13" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP14" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP15" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP16" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP17" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP18" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP19" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP20" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP21" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP22" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP23" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP24" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP25" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP26" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP27" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP28" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP29" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP30" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP31" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_PPSELR1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x400442C4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="USERP0" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP1" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP2" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP3" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP4" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP5" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP6" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP7" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP8" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP9" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP10" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP11" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP12" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP13" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP14" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP15" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP16" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP17" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP18" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP19" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP20" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP21" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP22" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP23" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP24" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP25" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP26" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP27" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP28" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP29" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP30" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP31" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX1" edc:cname="MATRIX1_PPSELR2" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x400442C8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX1">
            <edc:SFRFieldDef edc:cname="USERP0" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP1" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP2" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP3" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP4" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP5" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP6" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP7" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP8" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP9" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP10" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP11" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP12" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP13" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP14" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP15" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP16" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP17" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP18" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP19" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP20" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP21" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP22" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP23" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP24" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP25" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP26" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP27" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP28" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP29" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP30" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP31" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3D34" edc:_addr="0x400442CC"/>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_GROUP0PIO0_MSKR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40048000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="MSK0" edc:nzwidth="0x1" edc:desc="PIO Line 0 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK1" edc:nzwidth="0x1" edc:desc="PIO Line 1 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK2" edc:nzwidth="0x1" edc:desc="PIO Line 2 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK3" edc:nzwidth="0x1" edc:desc="PIO Line 3 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK4" edc:nzwidth="0x1" edc:desc="PIO Line 4 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK5" edc:nzwidth="0x1" edc:desc="PIO Line 5 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK6" edc:nzwidth="0x1" edc:desc="PIO Line 6 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK7" edc:nzwidth="0x1" edc:desc="PIO Line 7 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK8" edc:nzwidth="0x1" edc:desc="PIO Line 8 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK9" edc:nzwidth="0x1" edc:desc="PIO Line 9 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK10" edc:nzwidth="0x1" edc:desc="PIO Line 10 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK11" edc:nzwidth="0x1" edc:desc="PIO Line 11 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK12" edc:nzwidth="0x1" edc:desc="PIO Line 12 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK13" edc:nzwidth="0x1" edc:desc="PIO Line 13 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK14" edc:nzwidth="0x1" edc:desc="PIO Line 14 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK15" edc:nzwidth="0x1" edc:desc="PIO Line 15 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK16" edc:nzwidth="0x1" edc:desc="PIO Line 16 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK17" edc:nzwidth="0x1" edc:desc="PIO Line 17 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK18" edc:nzwidth="0x1" edc:desc="PIO Line 18 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK19" edc:nzwidth="0x1" edc:desc="PIO Line 19 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK20" edc:nzwidth="0x1" edc:desc="PIO Line 20 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK21" edc:nzwidth="0x1" edc:desc="PIO Line 21 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK22" edc:nzwidth="0x1" edc:desc="PIO Line 22 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK23" edc:nzwidth="0x1" edc:desc="PIO Line 23 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK24" edc:nzwidth="0x1" edc:desc="PIO Line 24 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK25" edc:nzwidth="0x1" edc:desc="PIO Line 25 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK26" edc:nzwidth="0x1" edc:desc="PIO Line 26 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK27" edc:nzwidth="0x1" edc:desc="PIO Line 27 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK28" edc:nzwidth="0x1" edc:desc="PIO Line 28 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK29" edc:nzwidth="0x1" edc:desc="PIO Line 29 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK30" edc:nzwidth="0x1" edc:desc="PIO Line 30 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK31" edc:nzwidth="0x1" edc:desc="PIO Line 31 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_GROUP0PIO0_CFGR" edc:nzwidth="0x20" edc:access="-nn--nnn------nnnnnn-nnn-----nnn" edc:impl="0x6703F707" edc:_addr="0x40048004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="FUNC" edc:nzwidth="0x3" edc:desc="I/O Line Function">
              <edc:SFRFieldSemantic edc:cname="GPIO" edc:desc="Select the PIO mode for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_A" edc:desc="Select the peripheral A for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_B" edc:desc="Select the peripheral B for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_C" edc:desc="Select the peripheral C for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_D" edc:desc="Select the peripheral D for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x04"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Direction">
              <edc:SFRFieldSemantic edc:cname="INPUT" edc:desc="The selected I/O lines are pure inputs." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="OUTPUT" edc:desc="The selected I/O lines are enabled in output." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PUEN" edc:nzwidth="0x1" edc:desc="Pull-Up Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Pull-Up is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Pull-Up is enabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PDEN" edc:nzwidth="0x1" edc:desc="Pull-Down Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Pull-Down is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Pull-Down is enabled for the selected I/O lines only if PUEN is 0." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="IFEN" edc:nzwidth="0x1" edc:desc="Input Filter Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="The input filter is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="The input filter is enabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="IFSCEN" edc:nzwidth="0x1" edc:desc="Input Filter Slow Clock Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="The glitch filter is able to filter glitches with a duration &lt; tmck/2 for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="The debouncing filter is able to filter pulses with a duration &lt; tdiv_slck/2 for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="OPD" edc:nzwidth="0x1" edc:desc="Open-Drain">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="The open-drain is disabled for the selected I/O lines. I/O lines are driven at high- and low-level." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="The open-drain is enabled for the selected I/O lines. I/O lines are driven at low-level only." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCHMITT" edc:nzwidth="0x1" edc:desc="Schmitt Trigger">
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Schmitt trigger is enabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Schmitt trigger is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SLEWRATE" edc:nzwidth="0x2" edc:desc="Slew Rate">
              <edc:SFRFieldSemantic edc:cname="FAST" edc:desc="Fast slew rate" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="MEDIUMFAST" edc:desc="Medium-fast slew rate" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="MEDIUM" edc:desc="Medium slew rate" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SLOW" edc:desc="Slow slew rate" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="EVTSEL" edc:nzwidth="0x3" edc:desc="Event Selection">
              <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Event detection on input falling edge" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Event detection on input rising edge" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Event detection on input both edge" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Event detection on low level input" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="Event detection on high level input" edc:when="(field &amp; 0x7) == 0x04"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PCFS" edc:nzwidth="0x1" edc:desc="Physical Configuration Freeze Status (read-only)">
              <edc:SFRFieldSemantic edc:cname="NOT_FROZEN" edc:desc="The fields are not frozen and can be written for this I/O line." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="FROZEN" edc:desc="The fields are frozen and cannot be written for this I/O line. Only a hardware reset can release these fields." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ICFS" edc:nzwidth="0x1" edc:desc="Interrupt Configuration Freeze Status (read-only)">
              <edc:SFRFieldSemantic edc:cname="NOT_FROZEN" edc:desc="The fields are not frozen and can be written for this I/O line." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="FROZEN" edc:desc="The fields are frozen and cannot be written for this I/O line. Only a hardware reset can release these fields." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_GROUP0PIO0_PDSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40048008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_GROUP0PIO0_LOCKSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4004800C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Lock Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_GROUP0PIO0_SODR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x40048010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_GROUP0PIO0_CODR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x40048014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_GROUP0PIO0_ODSR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40048018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4004801C"/>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_GROUP0PIO0_IER" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x40048020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_GROUP0PIO0_IDR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x40048024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_GROUP0PIO0_IMR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40048028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_GROUP0PIO0_ISR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4004802C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x40048030"/>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_GROUP0PIO0_IOFR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwww------ww" edc:impl="0xFFFFFF03" edc:_addr="0x4004803C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="FPHY" edc:nzwidth="0x1" edc:desc="Freeze Physical Configuration"/>
            <edc:SFRFieldDef edc:cname="FINT" edc:nzwidth="0x1" edc:desc="Freeze Interrupt Configuration"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="FRZKEY" edc:nzwidth="0x18" edc:desc="Freeze Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPEN bit." edc:when="(field &amp; 0xFFFFFF) == 0x494F46"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_GROUP1PIO0_MSKR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40048040">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="MSK0" edc:nzwidth="0x1" edc:desc="PIO Line 0 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK1" edc:nzwidth="0x1" edc:desc="PIO Line 1 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK2" edc:nzwidth="0x1" edc:desc="PIO Line 2 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK3" edc:nzwidth="0x1" edc:desc="PIO Line 3 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK4" edc:nzwidth="0x1" edc:desc="PIO Line 4 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK5" edc:nzwidth="0x1" edc:desc="PIO Line 5 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK6" edc:nzwidth="0x1" edc:desc="PIO Line 6 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK7" edc:nzwidth="0x1" edc:desc="PIO Line 7 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK8" edc:nzwidth="0x1" edc:desc="PIO Line 8 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK9" edc:nzwidth="0x1" edc:desc="PIO Line 9 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK10" edc:nzwidth="0x1" edc:desc="PIO Line 10 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK11" edc:nzwidth="0x1" edc:desc="PIO Line 11 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK12" edc:nzwidth="0x1" edc:desc="PIO Line 12 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK13" edc:nzwidth="0x1" edc:desc="PIO Line 13 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK14" edc:nzwidth="0x1" edc:desc="PIO Line 14 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK15" edc:nzwidth="0x1" edc:desc="PIO Line 15 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK16" edc:nzwidth="0x1" edc:desc="PIO Line 16 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK17" edc:nzwidth="0x1" edc:desc="PIO Line 17 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK18" edc:nzwidth="0x1" edc:desc="PIO Line 18 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK19" edc:nzwidth="0x1" edc:desc="PIO Line 19 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK20" edc:nzwidth="0x1" edc:desc="PIO Line 20 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK21" edc:nzwidth="0x1" edc:desc="PIO Line 21 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK22" edc:nzwidth="0x1" edc:desc="PIO Line 22 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK23" edc:nzwidth="0x1" edc:desc="PIO Line 23 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK24" edc:nzwidth="0x1" edc:desc="PIO Line 24 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK25" edc:nzwidth="0x1" edc:desc="PIO Line 25 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK26" edc:nzwidth="0x1" edc:desc="PIO Line 26 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK27" edc:nzwidth="0x1" edc:desc="PIO Line 27 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK28" edc:nzwidth="0x1" edc:desc="PIO Line 28 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK29" edc:nzwidth="0x1" edc:desc="PIO Line 29 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK30" edc:nzwidth="0x1" edc:desc="PIO Line 30 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK31" edc:nzwidth="0x1" edc:desc="PIO Line 31 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_GROUP1PIO0_CFGR" edc:nzwidth="0x20" edc:access="-nn--nnn------nnnnnn-nnn-----nnn" edc:impl="0x6703F707" edc:_addr="0x40048044">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="FUNC" edc:nzwidth="0x3" edc:desc="I/O Line Function">
              <edc:SFRFieldSemantic edc:cname="GPIO" edc:desc="Select the PIO mode for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_A" edc:desc="Select the peripheral A for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_B" edc:desc="Select the peripheral B for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_C" edc:desc="Select the peripheral C for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_D" edc:desc="Select the peripheral D for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x04"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Direction">
              <edc:SFRFieldSemantic edc:cname="INPUT" edc:desc="The selected I/O lines are pure inputs." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="OUTPUT" edc:desc="The selected I/O lines are enabled in output." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PUEN" edc:nzwidth="0x1" edc:desc="Pull-Up Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Pull-Up is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Pull-Up is enabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PDEN" edc:nzwidth="0x1" edc:desc="Pull-Down Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Pull-Down is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Pull-Down is enabled for the selected I/O lines only if PUEN is 0." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="IFEN" edc:nzwidth="0x1" edc:desc="Input Filter Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="The input filter is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="The input filter is enabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="IFSCEN" edc:nzwidth="0x1" edc:desc="Input Filter Slow Clock Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="The glitch filter is able to filter glitches with a duration &lt; tmck/2 for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="The debouncing filter is able to filter pulses with a duration &lt; tdiv_slck/2 for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="OPD" edc:nzwidth="0x1" edc:desc="Open-Drain">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="The open-drain is disabled for the selected I/O lines. I/O lines are driven at high- and low-level." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="The open-drain is enabled for the selected I/O lines. I/O lines are driven at low-level only." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCHMITT" edc:nzwidth="0x1" edc:desc="Schmitt Trigger">
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Schmitt trigger is enabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Schmitt trigger is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SLEWRATE" edc:nzwidth="0x2" edc:desc="Slew Rate">
              <edc:SFRFieldSemantic edc:cname="FAST" edc:desc="Fast slew rate" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="MEDIUMFAST" edc:desc="Medium-fast slew rate" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="MEDIUM" edc:desc="Medium slew rate" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SLOW" edc:desc="Slow slew rate" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="EVTSEL" edc:nzwidth="0x3" edc:desc="Event Selection">
              <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Event detection on input falling edge" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Event detection on input rising edge" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Event detection on input both edge" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Event detection on low level input" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="Event detection on high level input" edc:when="(field &amp; 0x7) == 0x04"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PCFS" edc:nzwidth="0x1" edc:desc="Physical Configuration Freeze Status (read-only)">
              <edc:SFRFieldSemantic edc:cname="NOT_FROZEN" edc:desc="The fields are not frozen and can be written for this I/O line." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="FROZEN" edc:desc="The fields are frozen and cannot be written for this I/O line. Only a hardware reset can release these fields." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ICFS" edc:nzwidth="0x1" edc:desc="Interrupt Configuration Freeze Status (read-only)">
              <edc:SFRFieldSemantic edc:cname="NOT_FROZEN" edc:desc="The fields are not frozen and can be written for this I/O line." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="FROZEN" edc:desc="The fields are frozen and cannot be written for this I/O line. Only a hardware reset can release these fields." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_GROUP1PIO0_PDSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40048048">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_GROUP1PIO0_LOCKSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4004804C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Lock Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_GROUP1PIO0_SODR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x40048050">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_GROUP1PIO0_CODR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x40048054">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_GROUP1PIO0_ODSR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40048058">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4004805C"/>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_GROUP1PIO0_IER" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x40048060">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_GROUP1PIO0_IDR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x40048064">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_GROUP1PIO0_IMR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40048068">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_GROUP1PIO0_ISR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4004806C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x40048070"/>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_GROUP1PIO0_IOFR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwww------ww" edc:impl="0xFFFFFF03" edc:_addr="0x4004807C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="FPHY" edc:nzwidth="0x1" edc:desc="Freeze Physical Configuration"/>
            <edc:SFRFieldDef edc:cname="FINT" edc:nzwidth="0x1" edc:desc="Freeze Interrupt Configuration"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="FRZKEY" edc:nzwidth="0x18" edc:desc="Freeze Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPEN bit." edc:when="(field &amp; 0xFFFFFF) == 0x494F46"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_GROUP2PIO0_MSKR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40048080">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="MSK0" edc:nzwidth="0x1" edc:desc="PIO Line 0 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK1" edc:nzwidth="0x1" edc:desc="PIO Line 1 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK2" edc:nzwidth="0x1" edc:desc="PIO Line 2 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK3" edc:nzwidth="0x1" edc:desc="PIO Line 3 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK4" edc:nzwidth="0x1" edc:desc="PIO Line 4 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK5" edc:nzwidth="0x1" edc:desc="PIO Line 5 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK6" edc:nzwidth="0x1" edc:desc="PIO Line 6 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK7" edc:nzwidth="0x1" edc:desc="PIO Line 7 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK8" edc:nzwidth="0x1" edc:desc="PIO Line 8 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK9" edc:nzwidth="0x1" edc:desc="PIO Line 9 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK10" edc:nzwidth="0x1" edc:desc="PIO Line 10 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK11" edc:nzwidth="0x1" edc:desc="PIO Line 11 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK12" edc:nzwidth="0x1" edc:desc="PIO Line 12 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK13" edc:nzwidth="0x1" edc:desc="PIO Line 13 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK14" edc:nzwidth="0x1" edc:desc="PIO Line 14 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK15" edc:nzwidth="0x1" edc:desc="PIO Line 15 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK16" edc:nzwidth="0x1" edc:desc="PIO Line 16 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK17" edc:nzwidth="0x1" edc:desc="PIO Line 17 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK18" edc:nzwidth="0x1" edc:desc="PIO Line 18 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK19" edc:nzwidth="0x1" edc:desc="PIO Line 19 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK20" edc:nzwidth="0x1" edc:desc="PIO Line 20 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK21" edc:nzwidth="0x1" edc:desc="PIO Line 21 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK22" edc:nzwidth="0x1" edc:desc="PIO Line 22 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK23" edc:nzwidth="0x1" edc:desc="PIO Line 23 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK24" edc:nzwidth="0x1" edc:desc="PIO Line 24 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK25" edc:nzwidth="0x1" edc:desc="PIO Line 25 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK26" edc:nzwidth="0x1" edc:desc="PIO Line 26 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK27" edc:nzwidth="0x1" edc:desc="PIO Line 27 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK28" edc:nzwidth="0x1" edc:desc="PIO Line 28 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK29" edc:nzwidth="0x1" edc:desc="PIO Line 29 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK30" edc:nzwidth="0x1" edc:desc="PIO Line 30 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK31" edc:nzwidth="0x1" edc:desc="PIO Line 31 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_GROUP2PIO0_CFGR" edc:nzwidth="0x20" edc:access="-nn--nnn------nnnnnn-nnn-----nnn" edc:impl="0x6703F707" edc:_addr="0x40048084">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="FUNC" edc:nzwidth="0x3" edc:desc="I/O Line Function">
              <edc:SFRFieldSemantic edc:cname="GPIO" edc:desc="Select the PIO mode for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_A" edc:desc="Select the peripheral A for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_B" edc:desc="Select the peripheral B for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_C" edc:desc="Select the peripheral C for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_D" edc:desc="Select the peripheral D for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x04"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Direction">
              <edc:SFRFieldSemantic edc:cname="INPUT" edc:desc="The selected I/O lines are pure inputs." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="OUTPUT" edc:desc="The selected I/O lines are enabled in output." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PUEN" edc:nzwidth="0x1" edc:desc="Pull-Up Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Pull-Up is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Pull-Up is enabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PDEN" edc:nzwidth="0x1" edc:desc="Pull-Down Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Pull-Down is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Pull-Down is enabled for the selected I/O lines only if PUEN is 0." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="IFEN" edc:nzwidth="0x1" edc:desc="Input Filter Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="The input filter is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="The input filter is enabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="IFSCEN" edc:nzwidth="0x1" edc:desc="Input Filter Slow Clock Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="The glitch filter is able to filter glitches with a duration &lt; tmck/2 for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="The debouncing filter is able to filter pulses with a duration &lt; tdiv_slck/2 for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="OPD" edc:nzwidth="0x1" edc:desc="Open-Drain">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="The open-drain is disabled for the selected I/O lines. I/O lines are driven at high- and low-level." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="The open-drain is enabled for the selected I/O lines. I/O lines are driven at low-level only." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCHMITT" edc:nzwidth="0x1" edc:desc="Schmitt Trigger">
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Schmitt trigger is enabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Schmitt trigger is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SLEWRATE" edc:nzwidth="0x2" edc:desc="Slew Rate">
              <edc:SFRFieldSemantic edc:cname="FAST" edc:desc="Fast slew rate" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="MEDIUMFAST" edc:desc="Medium-fast slew rate" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="MEDIUM" edc:desc="Medium slew rate" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SLOW" edc:desc="Slow slew rate" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="EVTSEL" edc:nzwidth="0x3" edc:desc="Event Selection">
              <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Event detection on input falling edge" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Event detection on input rising edge" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Event detection on input both edge" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Event detection on low level input" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="Event detection on high level input" edc:when="(field &amp; 0x7) == 0x04"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PCFS" edc:nzwidth="0x1" edc:desc="Physical Configuration Freeze Status (read-only)">
              <edc:SFRFieldSemantic edc:cname="NOT_FROZEN" edc:desc="The fields are not frozen and can be written for this I/O line." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="FROZEN" edc:desc="The fields are frozen and cannot be written for this I/O line. Only a hardware reset can release these fields." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ICFS" edc:nzwidth="0x1" edc:desc="Interrupt Configuration Freeze Status (read-only)">
              <edc:SFRFieldSemantic edc:cname="NOT_FROZEN" edc:desc="The fields are not frozen and can be written for this I/O line." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="FROZEN" edc:desc="The fields are frozen and cannot be written for this I/O line. Only a hardware reset can release these fields." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_GROUP2PIO0_PDSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40048088">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_GROUP2PIO0_LOCKSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4004808C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Lock Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_GROUP2PIO0_SODR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x40048090">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_GROUP2PIO0_CODR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x40048094">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_GROUP2PIO0_ODSR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40048098">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4004809C"/>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_GROUP2PIO0_IER" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x400480A0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_GROUP2PIO0_IDR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x400480A4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_GROUP2PIO0_IMR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x400480A8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_GROUP2PIO0_ISR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x400480AC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x400480B0"/>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_GROUP2PIO0_IOFR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwww------ww" edc:impl="0xFFFFFF03" edc:_addr="0x400480BC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="FPHY" edc:nzwidth="0x1" edc:desc="Freeze Physical Configuration"/>
            <edc:SFRFieldDef edc:cname="FINT" edc:nzwidth="0x1" edc:desc="Freeze Interrupt Configuration"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="FRZKEY" edc:nzwidth="0x18" edc:desc="Freeze Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPEN bit." edc:when="(field &amp; 0xFFFFFF) == 0x494F46"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x520" edc:_addr="0x400480C0"/>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO0_WPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn------nn" edc:impl="0xFFFFFF03" edc:_addr="0x400485E0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="WPEN" edc:nzwidth="0x1" edc:desc="Write Protection Enable"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:nzwidth="0x1" edc:desc="Write Protection Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPEN bit. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x50494F"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO0_WPSR" edc:nzwidth="0x20" edc:access="--------rrrrrrrrrrrrrrrr-------r" edc:impl="0xFFFF01" edc:_addr="0x400485E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="WPVS" edc:nzwidth="0x1" edc:desc="Write Protection Violation Status"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:nzwidth="0x10" edc:desc="Write Protection Violation Source"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xA18" edc:_addr="0x400485E8"/>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_P0PIO0_P_MSKR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40049000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="MSK0" edc:nzwidth="0x1" edc:desc="PIO Line 0 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK1" edc:nzwidth="0x1" edc:desc="PIO Line 1 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK2" edc:nzwidth="0x1" edc:desc="PIO Line 2 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK3" edc:nzwidth="0x1" edc:desc="PIO Line 3 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK4" edc:nzwidth="0x1" edc:desc="PIO Line 4 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK5" edc:nzwidth="0x1" edc:desc="PIO Line 5 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK6" edc:nzwidth="0x1" edc:desc="PIO Line 6 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK7" edc:nzwidth="0x1" edc:desc="PIO Line 7 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK8" edc:nzwidth="0x1" edc:desc="PIO Line 8 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK9" edc:nzwidth="0x1" edc:desc="PIO Line 9 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK10" edc:nzwidth="0x1" edc:desc="PIO Line 10 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK11" edc:nzwidth="0x1" edc:desc="PIO Line 11 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK12" edc:nzwidth="0x1" edc:desc="PIO Line 12 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK13" edc:nzwidth="0x1" edc:desc="PIO Line 13 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK14" edc:nzwidth="0x1" edc:desc="PIO Line 14 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK15" edc:nzwidth="0x1" edc:desc="PIO Line 15 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK16" edc:nzwidth="0x1" edc:desc="PIO Line 16 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK17" edc:nzwidth="0x1" edc:desc="PIO Line 17 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK18" edc:nzwidth="0x1" edc:desc="PIO Line 18 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK19" edc:nzwidth="0x1" edc:desc="PIO Line 19 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK20" edc:nzwidth="0x1" edc:desc="PIO Line 20 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK21" edc:nzwidth="0x1" edc:desc="PIO Line 21 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK22" edc:nzwidth="0x1" edc:desc="PIO Line 22 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK23" edc:nzwidth="0x1" edc:desc="PIO Line 23 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK24" edc:nzwidth="0x1" edc:desc="PIO Line 24 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK25" edc:nzwidth="0x1" edc:desc="PIO Line 25 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK26" edc:nzwidth="0x1" edc:desc="PIO Line 26 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK27" edc:nzwidth="0x1" edc:desc="PIO Line 27 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK28" edc:nzwidth="0x1" edc:desc="PIO Line 28 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK29" edc:nzwidth="0x1" edc:desc="PIO Line 29 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK30" edc:nzwidth="0x1" edc:desc="PIO Line 30 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK31" edc:nzwidth="0x1" edc:desc="PIO Line 31 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_P0PIO0_P_CFGR" edc:nzwidth="0x20" edc:access="-nn--nnn------nnnnnn-nnn-----nnn" edc:impl="0x6703F707" edc:_addr="0x40049004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="FUNC" edc:nzwidth="0x3" edc:desc="I/O Line Function">
              <edc:SFRFieldSemantic edc:cname="GPIO" edc:desc="Select the PIO mode for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_A" edc:desc="Select the peripheral A for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_B" edc:desc="Select the peripheral B for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_C" edc:desc="Select the peripheral C for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_D" edc:desc="Select the peripheral D for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x04"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Direction">
              <edc:SFRFieldSemantic edc:cname="INPUT" edc:desc="The selected I/O lines are pure inputs." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="OUTPUT" edc:desc="The selected I/O lines are enabled in output." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PUEN" edc:nzwidth="0x1" edc:desc="Pull-Up Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Pull-Up is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Pull-Up is enabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PDEN" edc:nzwidth="0x1" edc:desc="Pull-Down Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Pull-Down is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Pull-Down is enabled for the selected I/O lines only if PUEN is 0." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="IFEN" edc:nzwidth="0x1" edc:desc="Input Filter Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="The input filter is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="The input filter is enabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="IFSCEN" edc:nzwidth="0x1" edc:desc="Input Filter Slow Clock Enable"/>
            <edc:SFRFieldDef edc:cname="OPD" edc:nzwidth="0x1" edc:desc="Open-Drain">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="The open-drain is disabled for the selected I/O lines. I/O lines are driven at high- and low-level." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="The open-drain is enabled for the selected I/O lines. I/O lines are driven at low-level only." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCHMITT" edc:nzwidth="0x1" edc:desc="Schmitt Trigger">
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Schmitt trigger is enabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Schmitt trigger is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SLEWRATE" edc:nzwidth="0x2" edc:desc="Slew Rate">
              <edc:SFRFieldSemantic edc:cname="FAST" edc:desc="Slow slew rate" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="MEDIUMFAST" edc:desc="Medium-fast slew rate" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="MEDIUM" edc:desc="Medium slew rate" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SLOW" edc:desc="Slow slew rate" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="EVTSEL" edc:nzwidth="0x3" edc:desc="Event Selection">
              <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Event detection on input falling edge" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Event detection on input rising edge" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Event detection on input both edge" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Event detection on low level input" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="Event detection on high level input" edc:when="(field &amp; 0x7) == 0x04"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PCFS" edc:nzwidth="0x1" edc:desc="Physical Configuration Freeze Status (read-only)">
              <edc:SFRFieldSemantic edc:cname="NOT_FROZEN" edc:desc="The fields are not frozen and can be written for this I/O line." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="FROZEN" edc:desc="The fields are frozen and cannot be written for this I/O line. Only a hardware reset can release these fields." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ICFS" edc:nzwidth="0x1" edc:desc="Interrupt Configuration Freeze Status (read-only)">
              <edc:SFRFieldSemantic edc:cname="NOT_FROZEN" edc:desc="The fields are not frozen and can be written for this I/O line." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="FROZEN" edc:desc="The fields are frozen and cannot be written for this I/O line. Only a hardware reset can release these fields." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_P0PIO0_P_PDSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40049008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_P0PIO0_P_LOCKSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4004900C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Lock Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_P0PIO0_P_SODR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x40049010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_P0PIO0_P_CODR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x40049014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_P0PIO0_P_ODSR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40049018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4004901C"/>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_P0PIO0_P_IER" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x40049020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_P0PIO0_P_IDR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x40049024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_P0PIO0_P_IMR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40049028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_P0PIO0_P_ISR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4004902C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_P0PIO0_P_SIO_UAR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x40049030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_P0PIO0_P_SIO_PAR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x40049034">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_P0PIO0_P_IOSSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40049038">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_P0PIO0_P_IOFR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwww------ww" edc:impl="0xFFFFFF03" edc:_addr="0x4004903C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="FPHY" edc:nzwidth="0x1" edc:desc="Freeze Physical Configuration"/>
            <edc:SFRFieldDef edc:cname="FINT" edc:nzwidth="0x1" edc:desc="Freeze Interrupt Configuration"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="FRZKEY" edc:nzwidth="0x18" edc:desc="Freeze Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPEN bit." edc:when="(field &amp; 0xFFFFFF) == 0x494F46"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_P1PIO0_P_MSKR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40049040">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="MSK0" edc:nzwidth="0x1" edc:desc="PIO Line 0 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK1" edc:nzwidth="0x1" edc:desc="PIO Line 1 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK2" edc:nzwidth="0x1" edc:desc="PIO Line 2 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK3" edc:nzwidth="0x1" edc:desc="PIO Line 3 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK4" edc:nzwidth="0x1" edc:desc="PIO Line 4 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK5" edc:nzwidth="0x1" edc:desc="PIO Line 5 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK6" edc:nzwidth="0x1" edc:desc="PIO Line 6 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK7" edc:nzwidth="0x1" edc:desc="PIO Line 7 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK8" edc:nzwidth="0x1" edc:desc="PIO Line 8 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK9" edc:nzwidth="0x1" edc:desc="PIO Line 9 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK10" edc:nzwidth="0x1" edc:desc="PIO Line 10 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK11" edc:nzwidth="0x1" edc:desc="PIO Line 11 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK12" edc:nzwidth="0x1" edc:desc="PIO Line 12 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK13" edc:nzwidth="0x1" edc:desc="PIO Line 13 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK14" edc:nzwidth="0x1" edc:desc="PIO Line 14 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK15" edc:nzwidth="0x1" edc:desc="PIO Line 15 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK16" edc:nzwidth="0x1" edc:desc="PIO Line 16 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK17" edc:nzwidth="0x1" edc:desc="PIO Line 17 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK18" edc:nzwidth="0x1" edc:desc="PIO Line 18 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK19" edc:nzwidth="0x1" edc:desc="PIO Line 19 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK20" edc:nzwidth="0x1" edc:desc="PIO Line 20 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK21" edc:nzwidth="0x1" edc:desc="PIO Line 21 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK22" edc:nzwidth="0x1" edc:desc="PIO Line 22 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK23" edc:nzwidth="0x1" edc:desc="PIO Line 23 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK24" edc:nzwidth="0x1" edc:desc="PIO Line 24 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK25" edc:nzwidth="0x1" edc:desc="PIO Line 25 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK26" edc:nzwidth="0x1" edc:desc="PIO Line 26 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK27" edc:nzwidth="0x1" edc:desc="PIO Line 27 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK28" edc:nzwidth="0x1" edc:desc="PIO Line 28 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK29" edc:nzwidth="0x1" edc:desc="PIO Line 29 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK30" edc:nzwidth="0x1" edc:desc="PIO Line 30 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK31" edc:nzwidth="0x1" edc:desc="PIO Line 31 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_P1PIO0_P_CFGR" edc:nzwidth="0x20" edc:access="-nn--nnn------nnnnnn-nnn-----nnn" edc:impl="0x6703F707" edc:_addr="0x40049044">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="FUNC" edc:nzwidth="0x3" edc:desc="I/O Line Function">
              <edc:SFRFieldSemantic edc:cname="GPIO" edc:desc="Select the PIO mode for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_A" edc:desc="Select the peripheral A for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_B" edc:desc="Select the peripheral B for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_C" edc:desc="Select the peripheral C for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_D" edc:desc="Select the peripheral D for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x04"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Direction">
              <edc:SFRFieldSemantic edc:cname="INPUT" edc:desc="The selected I/O lines are pure inputs." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="OUTPUT" edc:desc="The selected I/O lines are enabled in output." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PUEN" edc:nzwidth="0x1" edc:desc="Pull-Up Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Pull-Up is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Pull-Up is enabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PDEN" edc:nzwidth="0x1" edc:desc="Pull-Down Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Pull-Down is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Pull-Down is enabled for the selected I/O lines only if PUEN is 0." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="IFEN" edc:nzwidth="0x1" edc:desc="Input Filter Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="The input filter is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="The input filter is enabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="IFSCEN" edc:nzwidth="0x1" edc:desc="Input Filter Slow Clock Enable"/>
            <edc:SFRFieldDef edc:cname="OPD" edc:nzwidth="0x1" edc:desc="Open-Drain">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="The open-drain is disabled for the selected I/O lines. I/O lines are driven at high- and low-level." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="The open-drain is enabled for the selected I/O lines. I/O lines are driven at low-level only." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCHMITT" edc:nzwidth="0x1" edc:desc="Schmitt Trigger">
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Schmitt trigger is enabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Schmitt trigger is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SLEWRATE" edc:nzwidth="0x2" edc:desc="Slew Rate">
              <edc:SFRFieldSemantic edc:cname="FAST" edc:desc="Slow slew rate" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="MEDIUMFAST" edc:desc="Medium-fast slew rate" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="MEDIUM" edc:desc="Medium slew rate" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SLOW" edc:desc="Slow slew rate" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="EVTSEL" edc:nzwidth="0x3" edc:desc="Event Selection">
              <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Event detection on input falling edge" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Event detection on input rising edge" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Event detection on input both edge" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Event detection on low level input" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="Event detection on high level input" edc:when="(field &amp; 0x7) == 0x04"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PCFS" edc:nzwidth="0x1" edc:desc="Physical Configuration Freeze Status (read-only)">
              <edc:SFRFieldSemantic edc:cname="NOT_FROZEN" edc:desc="The fields are not frozen and can be written for this I/O line." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="FROZEN" edc:desc="The fields are frozen and cannot be written for this I/O line. Only a hardware reset can release these fields." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ICFS" edc:nzwidth="0x1" edc:desc="Interrupt Configuration Freeze Status (read-only)">
              <edc:SFRFieldSemantic edc:cname="NOT_FROZEN" edc:desc="The fields are not frozen and can be written for this I/O line." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="FROZEN" edc:desc="The fields are frozen and cannot be written for this I/O line. Only a hardware reset can release these fields." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_P1PIO0_P_PDSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40049048">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_P1PIO0_P_LOCKSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4004904C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Lock Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_P1PIO0_P_SODR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x40049050">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_P1PIO0_P_CODR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x40049054">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_P1PIO0_P_ODSR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40049058">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4004905C"/>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_P1PIO0_P_IER" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x40049060">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_P1PIO0_P_IDR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x40049064">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_P1PIO0_P_IMR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40049068">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_P1PIO0_P_ISR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4004906C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_P1PIO0_P_SIO_UAR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x40049070">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_P1PIO0_P_SIO_PAR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x40049074">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_P1PIO0_P_IOSSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40049078">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_P1PIO0_P_IOFR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwww------ww" edc:impl="0xFFFFFF03" edc:_addr="0x4004907C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="FPHY" edc:nzwidth="0x1" edc:desc="Freeze Physical Configuration"/>
            <edc:SFRFieldDef edc:cname="FINT" edc:nzwidth="0x1" edc:desc="Freeze Interrupt Configuration"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="FRZKEY" edc:nzwidth="0x18" edc:desc="Freeze Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPEN bit." edc:when="(field &amp; 0xFFFFFF) == 0x494F46"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_P2PIO0_P_MSKR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40049080">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="MSK0" edc:nzwidth="0x1" edc:desc="PIO Line 0 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK1" edc:nzwidth="0x1" edc:desc="PIO Line 1 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK2" edc:nzwidth="0x1" edc:desc="PIO Line 2 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK3" edc:nzwidth="0x1" edc:desc="PIO Line 3 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK4" edc:nzwidth="0x1" edc:desc="PIO Line 4 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK5" edc:nzwidth="0x1" edc:desc="PIO Line 5 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK6" edc:nzwidth="0x1" edc:desc="PIO Line 6 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK7" edc:nzwidth="0x1" edc:desc="PIO Line 7 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK8" edc:nzwidth="0x1" edc:desc="PIO Line 8 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK9" edc:nzwidth="0x1" edc:desc="PIO Line 9 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK10" edc:nzwidth="0x1" edc:desc="PIO Line 10 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK11" edc:nzwidth="0x1" edc:desc="PIO Line 11 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK12" edc:nzwidth="0x1" edc:desc="PIO Line 12 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK13" edc:nzwidth="0x1" edc:desc="PIO Line 13 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK14" edc:nzwidth="0x1" edc:desc="PIO Line 14 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK15" edc:nzwidth="0x1" edc:desc="PIO Line 15 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK16" edc:nzwidth="0x1" edc:desc="PIO Line 16 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK17" edc:nzwidth="0x1" edc:desc="PIO Line 17 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK18" edc:nzwidth="0x1" edc:desc="PIO Line 18 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK19" edc:nzwidth="0x1" edc:desc="PIO Line 19 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK20" edc:nzwidth="0x1" edc:desc="PIO Line 20 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK21" edc:nzwidth="0x1" edc:desc="PIO Line 21 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK22" edc:nzwidth="0x1" edc:desc="PIO Line 22 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK23" edc:nzwidth="0x1" edc:desc="PIO Line 23 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK24" edc:nzwidth="0x1" edc:desc="PIO Line 24 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK25" edc:nzwidth="0x1" edc:desc="PIO Line 25 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK26" edc:nzwidth="0x1" edc:desc="PIO Line 26 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK27" edc:nzwidth="0x1" edc:desc="PIO Line 27 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK28" edc:nzwidth="0x1" edc:desc="PIO Line 28 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK29" edc:nzwidth="0x1" edc:desc="PIO Line 29 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK30" edc:nzwidth="0x1" edc:desc="PIO Line 30 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK31" edc:nzwidth="0x1" edc:desc="PIO Line 31 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_P2PIO0_P_CFGR" edc:nzwidth="0x20" edc:access="-nn--nnn------nnnnnn-nnn-----nnn" edc:impl="0x6703F707" edc:_addr="0x40049084">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="FUNC" edc:nzwidth="0x3" edc:desc="I/O Line Function">
              <edc:SFRFieldSemantic edc:cname="GPIO" edc:desc="Select the PIO mode for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_A" edc:desc="Select the peripheral A for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_B" edc:desc="Select the peripheral B for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_C" edc:desc="Select the peripheral C for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_D" edc:desc="Select the peripheral D for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x04"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Direction">
              <edc:SFRFieldSemantic edc:cname="INPUT" edc:desc="The selected I/O lines are pure inputs." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="OUTPUT" edc:desc="The selected I/O lines are enabled in output." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PUEN" edc:nzwidth="0x1" edc:desc="Pull-Up Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Pull-Up is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Pull-Up is enabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PDEN" edc:nzwidth="0x1" edc:desc="Pull-Down Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Pull-Down is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Pull-Down is enabled for the selected I/O lines only if PUEN is 0." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="IFEN" edc:nzwidth="0x1" edc:desc="Input Filter Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="The input filter is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="The input filter is enabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="IFSCEN" edc:nzwidth="0x1" edc:desc="Input Filter Slow Clock Enable"/>
            <edc:SFRFieldDef edc:cname="OPD" edc:nzwidth="0x1" edc:desc="Open-Drain">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="The open-drain is disabled for the selected I/O lines. I/O lines are driven at high- and low-level." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="The open-drain is enabled for the selected I/O lines. I/O lines are driven at low-level only." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCHMITT" edc:nzwidth="0x1" edc:desc="Schmitt Trigger">
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Schmitt trigger is enabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Schmitt trigger is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SLEWRATE" edc:nzwidth="0x2" edc:desc="Slew Rate">
              <edc:SFRFieldSemantic edc:cname="FAST" edc:desc="Slow slew rate" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="MEDIUMFAST" edc:desc="Medium-fast slew rate" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="MEDIUM" edc:desc="Medium slew rate" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SLOW" edc:desc="Slow slew rate" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="EVTSEL" edc:nzwidth="0x3" edc:desc="Event Selection">
              <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Event detection on input falling edge" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Event detection on input rising edge" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Event detection on input both edge" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Event detection on low level input" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="Event detection on high level input" edc:when="(field &amp; 0x7) == 0x04"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PCFS" edc:nzwidth="0x1" edc:desc="Physical Configuration Freeze Status (read-only)">
              <edc:SFRFieldSemantic edc:cname="NOT_FROZEN" edc:desc="The fields are not frozen and can be written for this I/O line." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="FROZEN" edc:desc="The fields are frozen and cannot be written for this I/O line. Only a hardware reset can release these fields." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ICFS" edc:nzwidth="0x1" edc:desc="Interrupt Configuration Freeze Status (read-only)">
              <edc:SFRFieldSemantic edc:cname="NOT_FROZEN" edc:desc="The fields are not frozen and can be written for this I/O line." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="FROZEN" edc:desc="The fields are frozen and cannot be written for this I/O line. Only a hardware reset can release these fields." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_P2PIO0_P_PDSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40049088">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_P2PIO0_P_LOCKSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4004908C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Lock Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_P2PIO0_P_SODR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x40049090">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_P2PIO0_P_CODR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x40049094">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_P2PIO0_P_ODSR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40049098">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4004909C"/>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_P2PIO0_P_IER" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x400490A0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_P2PIO0_P_IDR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x400490A4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_P2PIO0_P_IMR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x400490A8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_P2PIO0_P_ISR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x400490AC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_P2PIO0_P_SIO_UAR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x400490B0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_P2PIO0_P_SIO_PAR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x400490B4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_P2PIO0_P_IOSSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x400490B8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO_P2PIO0_P_IOFR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwww------ww" edc:impl="0xFFFFFF03" edc:_addr="0x400490BC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="FPHY" edc:nzwidth="0x1" edc:desc="Freeze Physical Configuration"/>
            <edc:SFRFieldDef edc:cname="FINT" edc:nzwidth="0x1" edc:desc="Freeze Interrupt Configuration"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="FRZKEY" edc:nzwidth="0x18" edc:desc="Freeze Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPEN bit." edc:when="(field &amp; 0xFFFFFF) == 0x494F46"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x440" edc:_addr="0x400490C0"/>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO0_P_SCDR" edc:nzwidth="0x20" edc:access="------------------nnnnnnnnnnnnnn" edc:impl="0x3FFF" edc:_addr="0x40049500">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="DIV" edc:nzwidth="0xE" edc:desc="Slow Clock Divider Selection for Debouncing"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xDC" edc:_addr="0x40049504"/>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO0_P_WPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn------nn" edc:impl="0xFFFFFF03" edc:_addr="0x400495E0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="WPEN" edc:nzwidth="0x1" edc:desc="Write Protection Enable"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:nzwidth="0x1" edc:desc="Write Protection Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of WPEN. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x50494F"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO0" edc:cname="PIO0_P_WPSR" edc:nzwidth="0x20" edc:access="--------rrrrrrrrrrrrrrrr-------r" edc:impl="0xFFFF01" edc:_addr="0x400495E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO0">
            <edc:SFRFieldDef edc:cname="WPVS" edc:nzwidth="0x1" edc:desc="Write Protection Violation Status"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:nzwidth="0x10" edc:desc="Write Protection Violation Source"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x6C18" edc:_addr="0x400495E8"/>
      <edc:SFRDef ltx:memberofperipheral="CHIPID" edc:cname="CHIPID_CIDR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40050200">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CHIPID">
            <edc:SFRFieldDef edc:cname="VERSION" edc:nzwidth="0x5" edc:desc="Version of the Device"/>
            <edc:SFRFieldDef edc:cname="EPROC" edc:nzwidth="0x3" edc:desc="Embedded Processor">
              <edc:SFRFieldSemantic edc:cname="SAMx7" edc:desc="Cortex-M7" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ARM946ES" edc:desc="ARM946ES" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ARM7TDMI" edc:desc="ARM7TDMI" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="CM3" edc:desc="Cortex-M3" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="ARM920T" edc:desc="ARM920T" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="ARM926EJS" edc:desc="ARM926EJS" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="CA5" edc:desc="Cortex-A5" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="CM4" edc:desc="Cortex-M4" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NVPSIZ" edc:nzwidth="0x4" edc:desc="Nonvolatile Program Memory Size">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="_8K" edc:desc="8 Kbytes" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_16K" edc:desc="16 Kbytes" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_32K" edc:desc="32 Kbytes" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_64K" edc:desc="64 Kbytes" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_128K" edc:desc="128 Kbytes" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="_160K" edc:desc="160 Kbytes" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="_256K" edc:desc="256 Kbytes" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="_512K" edc:desc="512 Kbytes" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="_1024K" edc:desc="1024 Kbytes" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="_2048K" edc:desc="2048 Kbytes" edc:when="(field &amp; 0xF) == 0x0E"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NVPSIZ2" edc:nzwidth="0x4" edc:desc="Second Nonvolatile Program Memory Size">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="_8K" edc:desc="8 Kbytes" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_16K" edc:desc="16 Kbytes" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_32K" edc:desc="32 Kbytes" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_64K" edc:desc="64 Kbytes" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_128K" edc:desc="128 Kbytes" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="_256K" edc:desc="256 Kbytes" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="_512K" edc:desc="512 Kbytes" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="_1024K" edc:desc="1024 Kbytes" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="_2048K" edc:desc="2048 Kbytes" edc:when="(field &amp; 0xF) == 0x0E"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SRAMSIZ" edc:nzwidth="0x4" edc:desc="Internal SRAM Size">
              <edc:SFRFieldSemantic edc:cname="_48K" edc:desc="48 Kbytes" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="_192K" edc:desc="192 Kbytes" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_384K" edc:desc="384 Kbytes" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_6K" edc:desc="6 Kbytes" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_24K" edc:desc="24 Kbytes" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_4K" edc:desc="4 Kbytes" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_80K" edc:desc="80 Kbytes" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_160K" edc:desc="160 Kbytes" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="_8K" edc:desc="8 Kbytes" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="_16K" edc:desc="16 Kbytes" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="_32K" edc:desc="32 Kbytes" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="_64K" edc:desc="64 Kbytes" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="_128K" edc:desc="128 Kbytes" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="_256K" edc:desc="256 Kbytes" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="_96K" edc:desc="96 Kbytes" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="_512K" edc:desc="512 Kbytes" edc:when="(field &amp; 0xF) == 0x0F"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ARCH" edc:nzwidth="0x8" edc:desc="Architecture Identifier">
              <edc:SFRFieldSemantic edc:cname="PIC32CXMTSH128" edc:desc="Dual Core, Single Phase, High Accuracy (128-lead version)" edc:when="(field &amp; 0xFF) == 0xC3"/>
              <edc:SFRFieldSemantic edc:cname="PIC32CXMTC128" edc:desc="Dual Core (128-lead version)" edc:when="(field &amp; 0xFF) == 0xC5"/>
              <edc:SFRFieldSemantic edc:cname="PIC32CXMTG64" edc:desc="Single Core (64-lead version)" edc:when="(field &amp; 0xFF) == 0xC6"/>
              <edc:SFRFieldSemantic edc:cname="PIC32CXMTG128" edc:desc="Single Core (128-lead version)" edc:when="(field &amp; 0xFF) == 0xC8"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NVPTYP" edc:nzwidth="0x3" edc:desc="Nonvolatile Program Memory Type">
              <edc:SFRFieldSemantic edc:cname="ROM" edc:desc="ROM" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ROMLESS" edc:desc="ROMless or on-chip Flash" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FLASH" edc:desc="Embedded Flash Memory" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="ROM_FLASH" edc:desc="ROM and Embedded Flash Memory - NVPSIZ is ROM size - NVPSIZ2 is Flash size" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SRAM" edc:desc="SRAM emulating ROM" edc:when="(field &amp; 0x7) == 0x04"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EXT" edc:nzwidth="0x1" edc:desc="Extension Flag"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CHIPID" edc:cname="CHIPID_EXID" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40050204">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CHIPID">
            <edc:SFRFieldDef edc:cname="EXID" edc:nzwidth="0x20" edc:desc="Chip ID Extension"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x208" edc:_addr="0x40050208"/>
      <edc:SFRDef ltx:memberofperipheral="SFR" edc:cname="SFR_SRAM0_SW_CFG" edc:nzwidth="0x20" edc:access="---------------n-nnn-nnn-nnn-nnn" edc:impl="0x17777" edc:_addr="0x40050410">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="M128LS" edc:nzwidth="0x1" edc:desc="128 KB Light Sleep Mode"/>
            <edc:SFRFieldDef edc:cname="M128DS" edc:nzwidth="0x1" edc:desc="128 KB Deep Sleep Mode"/>
            <edc:SFRFieldDef edc:cname="M128SD" edc:nzwidth="0x1" edc:desc="128 KB Shutdown Mode"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M256LS" edc:nzwidth="0x1" edc:desc="256 KB Light Sleep Mode"/>
            <edc:SFRFieldDef edc:cname="M256DS" edc:nzwidth="0x1" edc:desc="256 KB Deep Sleep Mode"/>
            <edc:SFRFieldDef edc:cname="M256SD" edc:nzwidth="0x1" edc:desc="256 KB Shutdown Mode"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M384LS" edc:nzwidth="0x1" edc:desc="384 KB Light Sleep Mode"/>
            <edc:SFRFieldDef edc:cname="M384DS" edc:nzwidth="0x1" edc:desc="384 KB Deep Sleep Mode"/>
            <edc:SFRFieldDef edc:cname="M384SD" edc:nzwidth="0x1" edc:desc="384 KB Shutdown Mode"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M512LS" edc:nzwidth="0x1" edc:desc="512 KB Light Sleep Mode"/>
            <edc:SFRFieldDef edc:cname="M512DS" edc:nzwidth="0x1" edc:desc="512 KB Deep Sleep Mode"/>
            <edc:SFRFieldDef edc:cname="M512SD" edc:nzwidth="0x1" edc:desc="512 KB Shutdown Mode"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CLKG_DIS" edc:nzwidth="0x1" edc:desc="Clock Gating Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SFR" edc:cname="SFR_SRAM0_HW_CFG" edc:nzwidth="0x20" edc:access="-----------------rrr-rrr-rrr-rrr" edc:impl="0x7777" edc:_addr="0x40050414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="M128LS" edc:nzwidth="0x1" edc:desc="128 KB Light Sleep Mode"/>
            <edc:SFRFieldDef edc:cname="M128DS" edc:nzwidth="0x1" edc:desc="128 KB Deep Sleep Mode"/>
            <edc:SFRFieldDef edc:cname="M128SD" edc:nzwidth="0x1" edc:desc="128 KB Shutdown Mode"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M256LS" edc:nzwidth="0x1" edc:desc="256 KB Light Sleep Mode"/>
            <edc:SFRFieldDef edc:cname="M256DS" edc:nzwidth="0x1" edc:desc="256 KB Deep Sleep Mode"/>
            <edc:SFRFieldDef edc:cname="M256SD" edc:nzwidth="0x1" edc:desc="256 KB Shutdown Mode"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M384LS" edc:nzwidth="0x1" edc:desc="384 KB Light Sleep Mode"/>
            <edc:SFRFieldDef edc:cname="M384DS" edc:nzwidth="0x1" edc:desc="384 KB Deep Sleep Mode"/>
            <edc:SFRFieldDef edc:cname="M384SD" edc:nzwidth="0x1" edc:desc="384 KB Shutdown Mode"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M512LS" edc:nzwidth="0x1" edc:desc="512 KB Light Sleep Mode"/>
            <edc:SFRFieldDef edc:cname="M512DS" edc:nzwidth="0x1" edc:desc="512 KB Deep Sleep Mode"/>
            <edc:SFRFieldDef edc:cname="M512SD" edc:nzwidth="0x1" edc:desc="512 KB Shutdown Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SFR" edc:cname="SFR_SRAM0_CH0" edc:nzwidth="0x20" edc:access="---nnnnn---nnnnn---nnnnn---nnnnn" edc:impl="0x1F1F1F1F" edc:_addr="0x40050418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="RM0" edc:nzwidth="0x4" edc:desc="Read Margin"/>
            <edc:SFRFieldDef edc:cname="RME0" edc:nzwidth="0x1" edc:desc="Read Margin Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RM1" edc:nzwidth="0x4" edc:desc="Read Margin"/>
            <edc:SFRFieldDef edc:cname="RME1" edc:nzwidth="0x1" edc:desc="Read Margin Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RM2" edc:nzwidth="0x4" edc:desc="Read Margin"/>
            <edc:SFRFieldDef edc:cname="RME2" edc:nzwidth="0x1" edc:desc="Read Margin Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RM3" edc:nzwidth="0x4" edc:desc="Read Margin"/>
            <edc:SFRFieldDef edc:cname="RME3" edc:nzwidth="0x1" edc:desc="Read Margin Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SFR" edc:cname="SFR_SRAM0_CH1" edc:nzwidth="0x20" edc:access="---nnnnn---nnnnn---nnnnn---nnnnn" edc:impl="0x1F1F1F1F" edc:_addr="0x4005041C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="RM0" edc:nzwidth="0x4" edc:desc="Read Margin"/>
            <edc:SFRFieldDef edc:cname="RME0" edc:nzwidth="0x1" edc:desc="Read Margin Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RM1" edc:nzwidth="0x4" edc:desc="Read Margin"/>
            <edc:SFRFieldDef edc:cname="RME1" edc:nzwidth="0x1" edc:desc="Read Margin Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RM2" edc:nzwidth="0x4" edc:desc="Read Margin"/>
            <edc:SFRFieldDef edc:cname="RME2" edc:nzwidth="0x1" edc:desc="Read Margin Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RM3" edc:nzwidth="0x4" edc:desc="Read Margin"/>
            <edc:SFRFieldDef edc:cname="RME3" edc:nzwidth="0x1" edc:desc="Read Margin Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SFR" edc:cname="SFR_SRAM0_CH2" edc:nzwidth="0x20" edc:access="---nnnnn---nnnnn---nnnnn---nnnnn" edc:impl="0x1F1F1F1F" edc:_addr="0x40050420">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="RM0" edc:nzwidth="0x4" edc:desc="Read Margin"/>
            <edc:SFRFieldDef edc:cname="RME0" edc:nzwidth="0x1" edc:desc="Read Margin Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RM1" edc:nzwidth="0x4" edc:desc="Read Margin"/>
            <edc:SFRFieldDef edc:cname="RME1" edc:nzwidth="0x1" edc:desc="Read Margin Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RM2" edc:nzwidth="0x4" edc:desc="Read Margin"/>
            <edc:SFRFieldDef edc:cname="RME2" edc:nzwidth="0x1" edc:desc="Read Margin Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RM3" edc:nzwidth="0x4" edc:desc="Read Margin"/>
            <edc:SFRFieldDef edc:cname="RME3" edc:nzwidth="0x1" edc:desc="Read Margin Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SFR" edc:cname="SFR_SRAM0_CH3" edc:nzwidth="0x20" edc:access="---nnnnn---nnnnn---nnnnn---nnnnn" edc:impl="0x1F1F1F1F" edc:_addr="0x40050424">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="RM0" edc:nzwidth="0x4" edc:desc="Read Margin"/>
            <edc:SFRFieldDef edc:cname="RME0" edc:nzwidth="0x1" edc:desc="Read Margin Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RM1" edc:nzwidth="0x4" edc:desc="Read Margin"/>
            <edc:SFRFieldDef edc:cname="RME1" edc:nzwidth="0x1" edc:desc="Read Margin Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RM2" edc:nzwidth="0x4" edc:desc="Read Margin"/>
            <edc:SFRFieldDef edc:cname="RME2" edc:nzwidth="0x1" edc:desc="Read Margin Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RM3" edc:nzwidth="0x4" edc:desc="Read Margin"/>
            <edc:SFRFieldDef edc:cname="RME3" edc:nzwidth="0x1" edc:desc="Read Margin Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SFR" edc:cname="SFR_SRAM0" edc:nzwidth="0x20" edc:access="-----nnn----nnnnnnnnnnnnnnnnnnnn" edc:impl="0x70FFFFF" edc:_addr="0x40050428">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="RM0" edc:nzwidth="0x4" edc:desc="Read Margin"/>
            <edc:SFRFieldDef edc:cname="RM1" edc:nzwidth="0x4" edc:desc="Read Margin"/>
            <edc:SFRFieldDef edc:cname="RM2" edc:nzwidth="0x4" edc:desc="Read Margin"/>
            <edc:SFRFieldDef edc:cname="RM3" edc:nzwidth="0x4" edc:desc="Read Margin"/>
            <edc:SFRFieldDef edc:cname="RME0" edc:nzwidth="0x1" edc:desc="Read Margin Enable"/>
            <edc:SFRFieldDef edc:cname="RME1" edc:nzwidth="0x1" edc:desc="Read Margin Enable"/>
            <edc:SFRFieldDef edc:cname="RME2" edc:nzwidth="0x1" edc:desc="Read Margin Enable"/>
            <edc:SFRFieldDef edc:cname="RME3" edc:nzwidth="0x1" edc:desc="Read Margin Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="LS" edc:nzwidth="0x1" edc:desc="Light Sleep Mode"/>
            <edc:SFRFieldDef edc:cname="DS" edc:nzwidth="0x1" edc:desc="Deep Sleep Mode"/>
            <edc:SFRFieldDef edc:cname="SD" edc:nzwidth="0x1" edc:desc="Shutdown Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SFR" edc:cname="SFR_SRAM1" edc:nzwidth="0x20" edc:access="-----nnn----nnnnnnnnnnnnnnnnnnnn" edc:impl="0x70FFFFF" edc:_addr="0x4005042C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="RM0" edc:nzwidth="0x4" edc:desc="Read Margin"/>
            <edc:SFRFieldDef edc:cname="RM1" edc:nzwidth="0x4" edc:desc="Read Margin"/>
            <edc:SFRFieldDef edc:cname="RM2" edc:nzwidth="0x4" edc:desc="Read Margin"/>
            <edc:SFRFieldDef edc:cname="RM3" edc:nzwidth="0x4" edc:desc="Read Margin"/>
            <edc:SFRFieldDef edc:cname="RME0" edc:nzwidth="0x1" edc:desc="Read Margin Enable"/>
            <edc:SFRFieldDef edc:cname="RME1" edc:nzwidth="0x1" edc:desc="Read Margin Enable"/>
            <edc:SFRFieldDef edc:cname="RME2" edc:nzwidth="0x1" edc:desc="Read Margin Enable"/>
            <edc:SFRFieldDef edc:cname="RME3" edc:nzwidth="0x1" edc:desc="Read Margin Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="LS" edc:nzwidth="0x1" edc:desc="Light Sleep Mode"/>
            <edc:SFRFieldDef edc:cname="DS" edc:nzwidth="0x1" edc:desc="Deep Sleep Mode"/>
            <edc:SFRFieldDef edc:cname="SD" edc:nzwidth="0x1" edc:desc="Shutdown Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SFR" edc:cname="SFR_CPKCC" edc:nzwidth="0x20" edc:access="-----nnn---nnnnn------nn---nnnnn" edc:impl="0x71F031F" edc:_addr="0x40050430">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="ROM_RM" edc:nzwidth="0x4" edc:desc="ROM Read Margin"/>
            <edc:SFRFieldDef edc:cname="ROM_RME" edc:nzwidth="0x1" edc:desc="ROM Read Margin Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ROM_LS" edc:nzwidth="0x1" edc:desc="ROM Light Sleep Mode"/>
            <edc:SFRFieldDef edc:cname="ROM_SD" edc:nzwidth="0x1" edc:desc="Shutdown Mode"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="RAM_RM" edc:nzwidth="0x4" edc:desc="RAM Read Margin"/>
            <edc:SFRFieldDef edc:cname="RAM_RME" edc:nzwidth="0x1" edc:desc="RAM Read Margin Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RAM_LS" edc:nzwidth="0x1" edc:desc="RAM Light Sleep Mode"/>
            <edc:SFRFieldDef edc:cname="RAM_DS" edc:nzwidth="0x1" edc:desc="RAM Deep Sleep Mode"/>
            <edc:SFRFieldDef edc:cname="RAM_SD" edc:nzwidth="0x1" edc:desc="Shutdown Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x40050434"/>
      <edc:SFRDef ltx:memberofperipheral="SFR" edc:cname="SFR_HROMC" edc:nzwidth="0x20" edc:access="----------------------nn---nnnnn" edc:impl="0x31F" edc:_addr="0x40050440">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="RM" edc:nzwidth="0x4" edc:desc="Read Margin"/>
            <edc:SFRFieldDef edc:cname="RME" edc:nzwidth="0x1" edc:desc="Read Margin Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="LS" edc:nzwidth="0x1" edc:desc="HROMC Light Sleep Mode"/>
            <edc:SFRFieldDef edc:cname="SD" edc:nzwidth="0x1" edc:desc="Shutdown Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x40050444"/>
      <edc:SFRDef ltx:memberofperipheral="SFR" edc:cname="SFR_HCACHEI_VALID" edc:nzwidth="0x20" edc:access="---------------------nnn---nnnnn" edc:impl="0x71F" edc:_addr="0x40050450">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="RM" edc:nzwidth="0x4" edc:desc="Read Margin"/>
            <edc:SFRFieldDef edc:cname="RME" edc:nzwidth="0x1" edc:desc="Read Margin Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="LS" edc:nzwidth="0x1" edc:desc="Light Sleep Mode"/>
            <edc:SFRFieldDef edc:cname="DS" edc:nzwidth="0x1" edc:desc="Deep Sleep Mode"/>
            <edc:SFRFieldDef edc:cname="SD" edc:nzwidth="0x1" edc:desc="Shutdown Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SFR" edc:cname="SFR_HCACHEI_DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40050454">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="RM" edc:nzwidth="0x10" edc:desc="Read Margin"/>
            <edc:SFRFieldDef edc:cname="RME" edc:nzwidth="0x4" edc:desc="Read Margin Enable"/>
            <edc:SFRFieldDef edc:cname="LS" edc:nzwidth="0x4" edc:desc="Light Sleep Mode"/>
            <edc:SFRFieldDef edc:cname="DS" edc:nzwidth="0x4" edc:desc="Deep Sleep Mode"/>
            <edc:SFRFieldDef edc:cname="SD" edc:nzwidth="0x4" edc:desc="Shutdown Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SFR" edc:cname="SFR_HCACHEI_TAG" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40050458">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="RM" edc:nzwidth="0x10" edc:desc="Read Margin"/>
            <edc:SFRFieldDef edc:cname="RME" edc:nzwidth="0x4" edc:desc="Read Margin Enable"/>
            <edc:SFRFieldDef edc:cname="LS" edc:nzwidth="0x4" edc:desc="Light Sleep Mode"/>
            <edc:SFRFieldDef edc:cname="DS" edc:nzwidth="0x4" edc:desc="Deep Sleep Mode"/>
            <edc:SFRFieldDef edc:cname="SD" edc:nzwidth="0x4" edc:desc="Shutdown Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4005045C"/>
      <edc:SFRDef ltx:memberofperipheral="SFR" edc:cname="SFR_HCACHED_VALID" edc:nzwidth="0x20" edc:access="---------------------nnn---nnnnn" edc:impl="0x71F" edc:_addr="0x40050460">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="RM" edc:nzwidth="0x4" edc:desc="Read Margin"/>
            <edc:SFRFieldDef edc:cname="RME" edc:nzwidth="0x1" edc:desc="Read Margin Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="LS" edc:nzwidth="0x1" edc:desc="Light Sleep Mode"/>
            <edc:SFRFieldDef edc:cname="DS" edc:nzwidth="0x1" edc:desc="Deep Sleep Mode"/>
            <edc:SFRFieldDef edc:cname="SD" edc:nzwidth="0x1" edc:desc="Shutdown Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SFR" edc:cname="SFR_HCACHED_DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40050464">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="RM" edc:nzwidth="0x10" edc:desc="Read Margin"/>
            <edc:SFRFieldDef edc:cname="RME" edc:nzwidth="0x4" edc:desc="Read Margin Enable"/>
            <edc:SFRFieldDef edc:cname="LS" edc:nzwidth="0x4" edc:desc="Light Sleep Mode"/>
            <edc:SFRFieldDef edc:cname="DS" edc:nzwidth="0x4" edc:desc="Deep Sleep Mode"/>
            <edc:SFRFieldDef edc:cname="SD" edc:nzwidth="0x4" edc:desc="Shutdown Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SFR" edc:cname="SFR_HCACHED_TAG" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40050468">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="RM" edc:nzwidth="0x10" edc:desc="Read Margin"/>
            <edc:SFRFieldDef edc:cname="RME" edc:nzwidth="0x4" edc:desc="Read Margin Enable"/>
            <edc:SFRFieldDef edc:cname="LS" edc:nzwidth="0x4" edc:desc="Light Sleep Mode"/>
            <edc:SFRFieldDef edc:cname="DS" edc:nzwidth="0x4" edc:desc="Deep Sleep Mode"/>
            <edc:SFRFieldDef edc:cname="SD" edc:nzwidth="0x4" edc:desc="Shutdown Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4005046C"/>
      <edc:SFRDef ltx:memberofperipheral="SFR" edc:cname="SFR_FLASH" edc:nzwidth="0x20" edc:access="-------------------------------n" edc:impl="0x1" edc:_addr="0x40050470">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="PATCH_BYPASS" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x40050474"/>
      <edc:SFRDef ltx:memberofperipheral="SFR" edc:cname="SFR_OPT_LINK" edc:nzwidth="0x20" edc:access="-------------------------------n" edc:impl="0x1" edc:_addr="0x40050480">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="CLK_SELECT" edc:nzwidth="0x1" edc:desc="Clock Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x40050484"/>
      <edc:SFRDef ltx:memberofperipheral="SFR" edc:cname="SFR_JTAG" edc:nzwidth="0x20" edc:access="-------------------------------n" edc:impl="0x1" edc:_addr="0x40050490">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="JTAG_LOCK" edc:nzwidth="0x1" edc:desc="JTAG Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x40050494"/>
      <edc:SFRDef ltx:memberofperipheral="SFR" edc:cname="SFR_CORE_DEBUG_CFG" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0x400504A0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="SWV" edc:nzwidth="0x1" edc:desc="SWV Selection"/>
            <edc:SFRFieldDef edc:cname="XTRG1" edc:nzwidth="0x1" edc:desc="From Core 1 to Core 0 Cross Triggering"/>
            <edc:SFRFieldDef edc:cname="XTRG0" edc:nzwidth="0x1" edc:desc="From Core 0 to Core 1 Cross Triggering"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SFR" edc:cname="SFR_EMAHB2AHB" edc:nzwidth="0x20" edc:access="------------------------------nn" edc:impl="0x3" edc:_addr="0x400504A4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="PFETCH8_0_1" edc:nzwidth="0x1" edc:desc="AHB MASTER0_1 Converter Prefetch">
              <edc:SFRFieldSemantic edc:cname="INCR4" edc:desc="INCR undefined burst converted to burst of 4 data." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="INCR8" edc:desc="INCR undefined burst converted to burst of 8 data." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PFETCH8_1_0" edc:nzwidth="0x1" edc:desc="AHB MASTER1_0 Converter Prefetch">
              <edc:SFRFieldSemantic edc:cname="INCR4" edc:desc="INCR undefined burst converted to burst of 4 data." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="INCR8" edc:desc="INCR undefined burst converted to burst of 8 data." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SFR" edc:cname="SFR_SECURE" edc:nzwidth="0x20" edc:access="-------------------------------n" edc:impl="0x1" edc:_addr="0x400504A8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="ROM_ENA" edc:nzwidth="0x1" edc:desc="ROM Access Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SFR" edc:cname="SFR_SECURE_BIT" edc:nzwidth="0x20" edc:access="-------------------------------r" edc:impl="0x1" edc:_addr="0x400504AC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="MODE_DIS" edc:nzwidth="0x1" edc:desc="Secure Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SFR" edc:cname="SFR_ERASE_FLASH_SRAM" edc:nzwidth="0x20" edc:access="------------------------------nn" edc:impl="0x3" edc:_addr="0x400504B0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="HW_ERASE" edc:nzwidth="0x1" edc:desc="PB2/Peripherals or Hardware Erase Signal Assignment">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Hardware erase signal disabled. PB2 pin can be used in GPIO or Peripheral IO mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="Hardware erase signal enabled. PB2 pin is assigned to Flash erase function." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SRAM0" edc:nzwidth="0x1" edc:desc="Erase SRAM0 Content">
              <edc:SFRFieldSemantic edc:cname="NOT_DELETED" edc:desc="If HW_ERASE = 1, and HW erase signal assertion occurs, SRAM0 content is not deleted." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DELETED" edc:desc="If HW_ERASE = 1, and HW erase signal assertion occurs, SRAM0 content is deleted." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SFR" edc:cname="SFR_PWM_DEBUG" edc:nzwidth="0x20" edc:access="------------------------------nn" edc:impl="0x3" edc:_addr="0x400504B4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="CORE0" edc:nzwidth="0x1" edc:desc="Debug Information Propagation Mode">
              <edc:SFRFieldSemantic edc:cname="NOT_SENT" edc:desc="Core x does not send the debug signal to the PWM." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SENT" edc:desc="Core x sends the debug signal to PWM. Refer to &quot;Debug Mode&quot; in the section &quot;Pulse Width Modulation Controller (PWM)&quot; for details on configuring an action when the debug signal is active." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CORE1" edc:nzwidth="0x1" edc:desc="Debug Information Propagation Mode">
              <edc:SFRFieldSemantic edc:cname="NOT_SENT" edc:desc="Core x does not send the debug signal to the PWM." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SENT" edc:desc="Core x sends the debug signal to PWM. Refer to &quot;Debug Mode&quot; in the section &quot;Pulse Width Modulation Controller (PWM)&quot; for details on configuring an action when the debug signal is active." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SFR" edc:cname="SFR_FFPI" edc:nzwidth="0x20" edc:access="-------------------------------r" edc:impl="0x1" edc:_addr="0x400504B8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x1" edc:desc="FFPI Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SFR" edc:cname="SFR_WAIT_MODE" edc:nzwidth="0x20" edc:access="-------------------------------n" edc:impl="0x1" edc:_addr="0x400504BC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="CONTROL" edc:nzwidth="0x1" edc:desc="Improved Wait Mode Control"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SFR" edc:cname="SFR_ROM_CODE" edc:nzwidth="0x20" edc:access="----------------------------rrrr" edc:impl="0xF" edc:_addr="0x400504C0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="PLLA_STATUS" edc:nzwidth="0x2" edc:desc="PLLA Status"/>
            <edc:SFRFieldDef edc:cname="FORCE_BYPASS" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FORCE_BYPASS_VALUE" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x20" edc:_addr="0x400504C4"/>
      <edc:SFRDef ltx:memberofperipheral="SFR" edc:cname="SFR_WPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-------n" edc:impl="0xFFFFFF01" edc:_addr="0x400504E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="WPEN" edc:nzwidth="0x1" edc:desc="Write Protection Enable"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPEN bit. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x534652"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SFR" edc:cname="SFR_WPSR" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnn-------n" edc:impl="0xFFFF01" edc:_addr="0x400504E8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="WPVS" edc:nzwidth="0x1" edc:desc="Write Protection Violation Status"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPSRC" edc:nzwidth="0x10" edc:desc="Write Protection Source"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x400504EC"/>
      <edc:SFRDef ltx:memberofperipheral="SFR" edc:cname="SFR_SPARE" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x400504F0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="VALUE" edc:nzwidth="0x20" edc:desc="Spare"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x400504F4"/>
      <edc:SFRDef ltx:memberofperipheral="SFR" edc:cname="SFR_VERSION" edc:nzwidth="0x20" edc:access="-------------rrr----rrrrrrrrrrrr" edc:impl="0x70FFF" edc:_addr="0x400504FC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="VERSION" edc:nzwidth="0xC" edc:desc="Version of the Hardware Module"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="MFN" edc:nzwidth="0x3" edc:desc="Metal Fix Number"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x110" edc:_addr="0x40050500"/>
      <edc:SFRDef ltx:memberofperipheral="SFRBU" edc:cname="SFRBU_XTAL_TRIM" edc:nzwidth="0x20" edc:access="------------------------------nn" edc:impl="0x3" edc:_addr="0x40050610">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFRBU">
            <edc:SFRFieldDef edc:cname="XTAL_TRIM" edc:nzwidth="0x2" edc:desc="32 kHz Crystal Oscillator Trimming Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SFRBU" edc:cname="SFRBU_TRIM" edc:nzwidth="0x20" edc:access="----rrrr----rrrr----rrrr--rrrrrr" edc:impl="0xF0F0F3F" edc:_addr="0x40050614">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFRBU">
            <edc:SFRFieldDef edc:cname="RC32" edc:nzwidth="0x6" edc:desc="RC Oscillator Trimming Value"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CONVBG" edc:nzwidth="0x4" edc:desc="Conversion IP Bandgap Trimming Value"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="LDO" edc:nzwidth="0x4" edc:desc="Power Management IP LDO Trimming Value"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="LCD" edc:nzwidth="0x4" edc:desc="LDO Internal Bandgap Trimming for LCD Driver"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x40050618"/>
      <edc:SFRDef ltx:memberofperipheral="SFRBU" edc:cname="SFRBU_BOOT" edc:nzwidth="0x20" edc:access="-------------------------------n" edc:impl="0x1" edc:_addr="0x40050620">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFRBU">
            <edc:SFRFieldDef edc:cname="SOURCE" edc:nzwidth="0x1" edc:desc="Source for Booting Sequence"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x40050624"/>
      <edc:SFRDef ltx:memberofperipheral="SFRBU" edc:cname="SFRBU_IO_RETENTION" edc:nzwidth="0x20" edc:access="---------------nnnnn-nnnnnnnnnnn" edc:impl="0x1F7FF" edc:_addr="0x40050630">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFRBU">
            <edc:SFRFieldDef edc:cname="PA_7_0" edc:nzwidth="0x1" edc:desc="Keep Function on PA0 to PA7"/>
            <edc:SFRFieldDef edc:cname="PA_15_8" edc:nzwidth="0x1" edc:desc="Keep Function on PA8 to PA15"/>
            <edc:SFRFieldDef edc:cname="PA_23_16" edc:nzwidth="0x1" edc:desc="Keep Function on PA16 to PA23"/>
            <edc:SFRFieldDef edc:cname="PA_31_24" edc:nzwidth="0x1" edc:desc="Keep Function on PA24 to PA31"/>
            <edc:SFRFieldDef edc:cname="PB_7_0" edc:nzwidth="0x1" edc:desc="Keep Function on PB0 to PB7"/>
            <edc:SFRFieldDef edc:cname="PB_15_8" edc:nzwidth="0x1" edc:desc="Keep Function on PB8 to PB15"/>
            <edc:SFRFieldDef edc:cname="PB_23_16" edc:nzwidth="0x1" edc:desc="Keep Function on PB216 to PB23"/>
            <edc:SFRFieldDef edc:cname="PB_26_24" edc:nzwidth="0x1" edc:desc="Keep Function on PB24 to PB26"/>
            <edc:SFRFieldDef edc:cname="PC_7_0" edc:nzwidth="0x1" edc:desc="Keep Function on PC0 to PC7"/>
            <edc:SFRFieldDef edc:cname="PC_15_8" edc:nzwidth="0x1" edc:desc="Keep Function on PC8 to PC15"/>
            <edc:SFRFieldDef edc:cname="PC_22_16" edc:nzwidth="0x1" edc:desc="Keep Function on PC16 to PC22"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PD_7_0" edc:nzwidth="0x1" edc:desc="Keep Function on PD0 to PD7"/>
            <edc:SFRFieldDef edc:cname="PD_15_8" edc:nzwidth="0x1" edc:desc="Keep Function on PD8 to PD15"/>
            <edc:SFRFieldDef edc:cname="PD_23_16" edc:nzwidth="0x1" edc:desc="Keep Function on PD16 to PD23"/>
            <edc:SFRFieldDef edc:cname="PD_30_24" edc:nzwidth="0x1" edc:desc="Keep Function on PD24 to PD30"/>
            <edc:SFRFieldDef edc:cname="NRST" edc:nzwidth="0x1" edc:desc="Keep Function on NRST"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x40050634"/>
      <edc:SFRDef ltx:memberofperipheral="SFRBU" edc:cname="SFRBU_BODCORE" edc:nzwidth="0x20" edc:access="-------------------------------n" edc:impl="0x1" edc:_addr="0x40050640">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFRBU">
            <edc:SFRFieldDef edc:cname="STATUS" edc:nzwidth="0x1" edc:desc="Core Brownout Detector"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x40050644"/>
      <edc:SFRDef ltx:memberofperipheral="SFRBU" edc:cname="SFRBU_PWS_CNTRL" edc:nzwidth="0x20" edc:access="-------------------------------n" edc:impl="0x1" edc:_addr="0x40050650">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFRBU">
            <edc:SFRFieldDef edc:cname="UNMASK" edc:nzwidth="0x1" edc:desc="Unmask Power Switch Control Signals"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x90" edc:_addr="0x40050654"/>
      <edc:SFRDef ltx:memberofperipheral="SFRBU" edc:cname="SFRBU_WPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-------n" edc:impl="0xFFFFFF01" edc:_addr="0x400506E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFRBU">
            <edc:SFRFieldDef edc:cname="WPEN" edc:nzwidth="0x1" edc:desc="Write Protection Enable"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPEN bit. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x534652"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SFRBU" edc:cname="SFRBU_WPSR" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnn-------n" edc:impl="0xFFFF01" edc:_addr="0x400506E8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFRBU">
            <edc:SFRFieldDef edc:cname="WPVS" edc:nzwidth="0x1" edc:desc="Write Protection Violation Status"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPSRC" edc:nzwidth="0x10" edc:desc="Write Protection Source"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x400506EC"/>
      <edc:SFRDef ltx:memberofperipheral="SFRBU" edc:cname="SFRBU_SPARE" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x400506F0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFRBU">
            <edc:SFRFieldDef edc:cname="VALUE" edc:nzwidth="0x20" edc:desc="Spare"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x190C" edc:_addr="0x400506F4"/>
      <edc:SFRDef ltx:memberofperipheral="DWDT" edc:cname="WDT1_CR" edc:nzwidth="0x20" edc:access="wwwwwwww-------------------w---w" edc:impl="0xFF000011" edc:_addr="0x40052000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWDT">
            <edc:SFRFieldDef edc:cname="WDRSTT" edc:nzwidth="0x1" edc:desc="Watchdog Restart"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="LOCKMR" edc:nzwidth="0x1" edc:desc="Lock Mode Register Write Access"/>
            <edc:AdjustPoint edc:offset="0x13"/>
            <edc:SFRFieldDef edc:cname="KEY" edc:nzwidth="0x8" edc:desc="Password">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation." edc:when="(field &amp; 0xFF) == 0xA5"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DWDT" edc:cname="WDT1_MR" edc:nzwidth="0x20" edc:access="-nnn---------------n--n---nn----" edc:impl="0x70001230" edc:_addr="0x40052004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWDT">
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="PERIODRST" edc:nzwidth="0x1" edc:desc="Watchdog Overflow Period Reset Enable"/>
            <edc:SFRFieldDef edc:cname="RPTHRST" edc:nzwidth="0x1" edc:desc="Repeat Threshold Reset Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="WDNRSTDIS" edc:nzwidth="0x1" edc:desc="Watchdog Reset NRST Pin Disable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="WDDIS" edc:nzwidth="0x1" edc:desc="Watchdog Disable"/>
            <edc:AdjustPoint edc:offset="0xF"/>
            <edc:SFRFieldDef edc:cname="WDIDLEHLT" edc:nzwidth="0x1" edc:desc="Watchdog Idle Halt"/>
            <edc:SFRFieldDef edc:cname="WDDBG0HLT" edc:nzwidth="0x1" edc:desc="Watchdog Core 0 Debug Halt"/>
            <edc:SFRFieldDef edc:cname="WDDBG1HLT" edc:nzwidth="0x1" edc:desc="Watchdog Core 1 Debug Halt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DWDT" edc:cname="WDT1_VR" edc:nzwidth="0x20" edc:access="--------------------rrrrrrrrrrrr" edc:impl="0xFFF" edc:_addr="0x40052008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWDT">
            <edc:SFRFieldDef edc:cname="COUNTER" edc:nzwidth="0xC" edc:desc="Watchdog Down Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DWDT" edc:cname="WDT1_WL" edc:nzwidth="0x20" edc:access="----nnnnnnnnnnnn----nnnnnnnnnnnn" edc:impl="0xFFF0FFF" edc:_addr="0x4005200C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWDT">
            <edc:SFRFieldDef edc:cname="PERIOD" edc:nzwidth="0xC" edc:desc="Watchdog Period"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="RPTH" edc:nzwidth="0xC" edc:desc="Repeat Threshold"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DWDT" edc:cname="WDT1_IL" edc:nzwidth="0x20" edc:access="-------------nnn----nnnnnnnnnnnn" edc:impl="0x70FFF" edc:_addr="0x40052010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWDT">
            <edc:SFRFieldDef edc:cname="LVLTH" edc:nzwidth="0xC" edc:desc="Level Threshold"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="PRESC" edc:nzwidth="0x3" edc:desc="Prescaler Ratio">
              <edc:SFRFieldSemantic edc:cname="RATIO128" edc:desc="The watchdog counter decreased when the prescaler reaches 128." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RATIO64" edc:desc="The watchdog counter decreased when the prescaler reaches 64." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RATIO32" edc:desc="The watchdog counter decreased when the prescaler reaches 32." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RATIO16" edc:desc="The watchdog counter decreased when the prescaler reaches 16." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RATIO8" edc:desc="The watchdog counter decreased when the prescaler reaches 8." edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RATIO4" edc:desc="The watchdog counter decreased when the prescaler reaches 4." edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RATIO2" edc:desc="The watchdog counter decreased when the prescaler reaches 2." edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RATIO1" edc:desc="The watchdog counter decreased when the prescaler reaches 1." edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DWDT" edc:cname="WDT1_IER" edc:nzwidth="0x20" edc:access="--------------------------w--www" edc:impl="0x27" edc:_addr="0x40052014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWDT">
            <edc:SFRFieldDef edc:cname="PERINT" edc:nzwidth="0x1" edc:desc="Overflow Period Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RPTHINT" edc:nzwidth="0x1" edc:desc="Reload Repeat Period Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LVLINT" edc:nzwidth="0x1" edc:desc="Interrupt Level Threshold Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RLDERR" edc:nzwidth="0x1" edc:desc="Reload Command Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DWDT" edc:cname="WDT1_IDR" edc:nzwidth="0x20" edc:access="--------------------------w--www" edc:impl="0x27" edc:_addr="0x40052018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWDT">
            <edc:SFRFieldDef edc:cname="PERINT" edc:nzwidth="0x1" edc:desc="Overflow Period Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RPTHINT" edc:nzwidth="0x1" edc:desc="Reload Repeat Period Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LVLINT" edc:nzwidth="0x1" edc:desc="Interrupt Level Threshold Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RLDERR" edc:nzwidth="0x1" edc:desc="Reload Command Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DWDT" edc:cname="WDT1_ISR" edc:nzwidth="0x20" edc:access="--------------------------r--rrr" edc:impl="0x27" edc:_addr="0x4005201C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWDT">
            <edc:SFRFieldDef edc:cname="PERINT" edc:nzwidth="0x1" edc:desc="Overflow Period Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="RPTHINT" edc:nzwidth="0x1" edc:desc="Reload Repeat Period Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="LVLINT" edc:nzwidth="0x1" edc:desc="Interrupt Level Threshold Status (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RLDERR" edc:nzwidth="0x1" edc:desc="Reload Command Error Status (cleared on read)"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DWDT" edc:cname="WDT1_IMR" edc:nzwidth="0x20" edc:access="--------------------------r--rrr" edc:impl="0x27" edc:_addr="0x40052020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWDT">
            <edc:SFRFieldDef edc:cname="PERINT" edc:nzwidth="0x1" edc:desc="Overflow Period Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RPTHINT" edc:nzwidth="0x1" edc:desc="Reload Repeat Period Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LVLINT" edc:nzwidth="0x1" edc:desc="Interrupt Level Threshold Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RLDERR" edc:nzwidth="0x1" edc:desc="Reload Command Error Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xFDC" edc:_addr="0x40052024"/>
      <edc:SFRDef ltx:memberofperipheral="RSTC" edc:cname="RSTC_CR" edc:nzwidth="0x20" edc:access="wwwwwwww--------------------ww-w" edc:impl="0xFF00000D" edc:_addr="0x40053000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RSTC">
            <edc:SFRFieldDef edc:cname="PROCRST" edc:nzwidth="0x1" edc:desc="Processor Reset"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PERRST" edc:nzwidth="0x1" edc:desc="Peripheral Reset"/>
            <edc:SFRFieldDef edc:cname="EXTRST" edc:nzwidth="0x1" edc:desc="External Reset"/>
            <edc:AdjustPoint edc:offset="0x14"/>
            <edc:SFRFieldDef edc:cname="KEY" edc:nzwidth="0x8" edc:desc="System Reset Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation." edc:when="(field &amp; 0xFF) == 0xA5"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RSTC" edc:cname="RSTC_SR" edc:nzwidth="0x20" edc:access="--------------rr----rrrr------rr" edc:impl="0x30F03" edc:_addr="0x40053004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RSTC">
            <edc:SFRFieldDef edc:cname="URSTS" edc:nzwidth="0x1" edc:desc="User Reset Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CORESMS" edc:nzwidth="0x1" edc:desc="VDDCORE Supply Monitor Reset Flag Status (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="RSTTYP" edc:nzwidth="0x4" edc:desc="Reset Type">
              <edc:SFRFieldSemantic edc:cname="GENERAL_RST" edc:desc="First power-up reset, Core and VDD3V3 Supply Monitor if not a PORVDD3V3 reset" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="BACKUP_RST" edc:desc="VDDCORE reset. Wake-up from Backup mode" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="WDT0_RST" edc:desc="Watchdog 0 fault occurred" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SOFT_RST" edc:desc="Processor reset required by the software" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="USER_RST" edc:desc="NRST pin detected low" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="CORE_SM_RST" edc:desc="Core Supply Monitor reset" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="CPU_FAIL_RST" edc:desc="CPU clock failure detection occurred" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="SLCK_XTAL_RST" edc:desc="32.768 kHz crystal failure detection fault occurred" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="WDT1_RST" edc:desc="Watchdog 1 fault occurred" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="PORVDD3V3_RST" edc:desc="VDD3V3 PORVDD3V3 reset occurred" edc:when="(field &amp; 0xF) == 0x0A"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="NRSTL" edc:nzwidth="0x1" edc:desc="NRST Pin Level"/>
            <edc:SFRFieldDef edc:cname="SRCMP" edc:nzwidth="0x1" edc:desc="Software Reset Command in Progress"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RSTC" edc:cname="RSTC_MR" edc:nzwidth="0x20" edc:access="nnnnnnnn-nn--nnn----nnnnnnnnnnnn" edc:por="00000000000000000000000011110101" edc:mclr="00000000000000000000000011110101" edc:impl="0xFF670FFF" edc:_addr="0x40053008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RSTC">
            <edc:SFRFieldDef edc:cname="URSTEN" edc:nzwidth="0x1" edc:desc="User Reset Enable"/>
            <edc:SFRFieldDef edc:cname="SCKSW" edc:nzwidth="0x1" edc:desc="Slow Clock Switching"/>
            <edc:SFRFieldDef edc:cname="URSTASYNC" edc:nzwidth="0x1" edc:desc="User Reset Asynchronous Control"/>
            <edc:SFRFieldDef edc:cname="CPUFEN" edc:nzwidth="0x1" edc:desc="CPU Fail Enable"/>
            <edc:SFRFieldDef edc:cname="URSTIEN" edc:nzwidth="0x1" edc:desc="User Reset Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SFTPMCRS" edc:nzwidth="0x1" edc:desc="Software PMC Reset"/>
            <edc:SFRFieldDef edc:cname="WDTPMC0" edc:nzwidth="0x1" edc:desc="WDT0 PMC Reset"/>
            <edc:SFRFieldDef edc:cname="WDTPMC1" edc:nzwidth="0x1" edc:desc="WDT1 PMC Reset"/>
            <edc:SFRFieldDef edc:cname="ERSTL" edc:nzwidth="0x4" edc:desc="External Reset Length"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CORSMIEN" edc:nzwidth="0x1" edc:desc="VDDCORE Supply Monitor Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CPEREN" edc:nzwidth="0x1" edc:desc="Coprocessor Peripheral Enable"/>
            <edc:SFRFieldDef edc:cname="CPROCEN" edc:nzwidth="0x1" edc:desc="Coprocessor (Second Processor) Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PWRSW" edc:nzwidth="0x1" edc:desc="Backup Area Power Switch Control">
              <edc:SFRFieldSemantic edc:cname="VDD3V3" edc:desc="VDDBU is supplied by VDD3V3" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="VBAT" edc:desc="VDDBU is supplied by VBAT" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BADXTRST" edc:nzwidth="0x1" edc:desc="Bad XTAL Fail Reset"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="KEY" edc:nzwidth="0x8" edc:desc="Write Access Password">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation. Always reads as 0." edc:when="(field &amp; 0xFF) == 0xA5"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x14" edc:_addr="0x4005300C"/>
      <edc:SFRDef ltx:memberofperipheral="RTT" edc:cname="RTT_MR" edc:nzwidth="0x20" edc:access="-------n--nn-nnnnnnnnnnnnnnnnnnn" edc:impl="0x137FFFF" edc:_addr="0x40053020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTT">
            <edc:SFRFieldDef edc:cname="RTPRES" edc:nzwidth="0x10" edc:desc="Real-time Timer Prescaler Value"/>
            <edc:SFRFieldDef edc:cname="ALMIEN" edc:nzwidth="0x1" edc:desc="Alarm Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RTTINCIEN" edc:nzwidth="0x1" edc:desc="Real-time Timer Increment Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RTTRST" edc:nzwidth="0x1" edc:desc="Real-time Timer Restart"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RTTDIS" edc:nzwidth="0x1" edc:desc="Real-time Timer Disable"/>
            <edc:SFRFieldDef edc:cname="INC2AEN" edc:nzwidth="0x1" edc:desc="RTTINC2 Alarm and Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RTC1HZ" edc:nzwidth="0x1" edc:desc="Real-Time Clock 1Hz Clock Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTT" edc:cname="RTT_AR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40053024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTT">
            <edc:SFRFieldDef edc:cname="ALMV" edc:nzwidth="0x20" edc:desc="Alarm Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTT" edc:cname="RTT_VR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40053028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTT">
            <edc:SFRFieldDef edc:cname="CRTV" edc:nzwidth="0x20" edc:desc="Current Real-time Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTT" edc:cname="RTT_SR" edc:nzwidth="0x20" edc:access="-----------------------------rrr" edc:impl="0x7" edc:_addr="0x4005302C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTT">
            <edc:SFRFieldDef edc:cname="ALMS" edc:nzwidth="0x1" edc:desc="Real-time Alarm Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="RTTINC" edc:nzwidth="0x1" edc:desc="Prescaler Roll-over Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="RTTINC2" edc:nzwidth="0x1" edc:desc="Predefined Number of Prescaler Roll-overs Status (cleared on read)"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTT" edc:cname="RTT_MODR" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0x40053030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTT">
            <edc:SFRFieldDef edc:cname="SELINC2" edc:nzwidth="0x3" edc:desc="Selection of the 32-bit Counter Modulo to generate RTTINC2 Flag">
              <edc:SFRFieldSemantic edc:cname="NO_RTTINC2" edc:desc="The RTTINC2 flag never rises" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="MOD64" edc:desc="The RTTINC2 flag is set when CRTV modulo 64 equals 0" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="MOD128" edc:desc="The RTTINC2 flag is set when CRTV modulo 128 equals 0" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="MOD256" edc:desc="The RTTINC2 flag is set when CRTV modulo 256 equals 0" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="MOD512" edc:desc="The RTTINC2 flag is set when CRTV modulo 512 equals 0" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="MOD1024" edc:desc="The RTTINC2 flag is set when CRTV modulo 1024 equals 0. Example: If RTPRES=32 then RTTINC2 flag rises once per second if the slow clock is 32.768 kHz." edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="MOD2048" edc:desc="The RTTINC2 flag is set when CRTV modulo 2048 equals 0" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="MOD4096" edc:desc="The RTTINC2 flag is set when CRTV modulo 4096 equals 0" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2C" edc:_addr="0x40053034"/>
      <edc:SFRDef ltx:memberofperipheral="GPBR" edc:cname="GPBR_MR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40053060">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPBR">
            <edc:SFRFieldDef edc:cname="GPBRWP0" edc:nzwidth="0x1" edc:desc="GPBRx Write Protection"/>
            <edc:SFRFieldDef edc:cname="GPBRWP1" edc:nzwidth="0x1" edc:desc="GPBRx Write Protection"/>
            <edc:SFRFieldDef edc:cname="GPBRWP2" edc:nzwidth="0x1" edc:desc="GPBRx Write Protection"/>
            <edc:SFRFieldDef edc:cname="GPBRWP3" edc:nzwidth="0x1" edc:desc="GPBRx Write Protection"/>
            <edc:SFRFieldDef edc:cname="GPBRWP4" edc:nzwidth="0x1" edc:desc="GPBRx Write Protection"/>
            <edc:SFRFieldDef edc:cname="GPBRWP5" edc:nzwidth="0x1" edc:desc="GPBRx Write Protection"/>
            <edc:SFRFieldDef edc:cname="GPBRWP6" edc:nzwidth="0x1" edc:desc="GPBRx Write Protection"/>
            <edc:SFRFieldDef edc:cname="GPBRWP7" edc:nzwidth="0x1" edc:desc="GPBRx Write Protection"/>
            <edc:SFRFieldDef edc:cname="GPBRWP8" edc:nzwidth="0x1" edc:desc="GPBRx Write Protection"/>
            <edc:SFRFieldDef edc:cname="GPBRWP9" edc:nzwidth="0x1" edc:desc="GPBRx Write Protection"/>
            <edc:SFRFieldDef edc:cname="GPBRWP10" edc:nzwidth="0x1" edc:desc="GPBRx Write Protection"/>
            <edc:SFRFieldDef edc:cname="GPBRWP11" edc:nzwidth="0x1" edc:desc="GPBRx Write Protection"/>
            <edc:SFRFieldDef edc:cname="GPBRWP12" edc:nzwidth="0x1" edc:desc="GPBRx Write Protection"/>
            <edc:SFRFieldDef edc:cname="GPBRWP13" edc:nzwidth="0x1" edc:desc="GPBRx Write Protection"/>
            <edc:SFRFieldDef edc:cname="GPBRWP14" edc:nzwidth="0x1" edc:desc="GPBRx Write Protection"/>
            <edc:SFRFieldDef edc:cname="GPBRWP15" edc:nzwidth="0x1" edc:desc="GPBRx Write Protection"/>
            <edc:SFRFieldDef edc:cname="GPBRRP0" edc:nzwidth="0x1" edc:desc="GPBRx Read Protection"/>
            <edc:SFRFieldDef edc:cname="GPBRRP1" edc:nzwidth="0x1" edc:desc="GPBRx Read Protection"/>
            <edc:SFRFieldDef edc:cname="GPBRRP2" edc:nzwidth="0x1" edc:desc="GPBRx Read Protection"/>
            <edc:SFRFieldDef edc:cname="GPBRRP3" edc:nzwidth="0x1" edc:desc="GPBRx Read Protection"/>
            <edc:SFRFieldDef edc:cname="GPBRRP4" edc:nzwidth="0x1" edc:desc="GPBRx Read Protection"/>
            <edc:SFRFieldDef edc:cname="GPBRRP5" edc:nzwidth="0x1" edc:desc="GPBRx Read Protection"/>
            <edc:SFRFieldDef edc:cname="GPBRRP6" edc:nzwidth="0x1" edc:desc="GPBRx Read Protection"/>
            <edc:SFRFieldDef edc:cname="GPBRRP7" edc:nzwidth="0x1" edc:desc="GPBRx Read Protection"/>
            <edc:SFRFieldDef edc:cname="GPBRRP8" edc:nzwidth="0x1" edc:desc="GPBRx Read Protection"/>
            <edc:SFRFieldDef edc:cname="GPBRRP9" edc:nzwidth="0x1" edc:desc="GPBRx Read Protection"/>
            <edc:SFRFieldDef edc:cname="GPBRRP10" edc:nzwidth="0x1" edc:desc="GPBRx Read Protection"/>
            <edc:SFRFieldDef edc:cname="GPBRRP11" edc:nzwidth="0x1" edc:desc="GPBRx Read Protection"/>
            <edc:SFRFieldDef edc:cname="GPBRRP12" edc:nzwidth="0x1" edc:desc="GPBRx Read Protection"/>
            <edc:SFRFieldDef edc:cname="GPBRRP13" edc:nzwidth="0x1" edc:desc="GPBRx Read Protection"/>
            <edc:SFRFieldDef edc:cname="GPBRRP14" edc:nzwidth="0x1" edc:desc="GPBRx Read Protection"/>
            <edc:SFRFieldDef edc:cname="GPBRRP15" edc:nzwidth="0x1" edc:desc="GPBRx Read Protection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x40053064"/>
      <edc:SFRDef ltx:memberofperipheral="GPBR" edc:cname="SYS_GPBR0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40053068">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPBR">
            <edc:SFRFieldDef edc:cname="GPBR_VALUE" edc:nzwidth="0x20" edc:desc="Value of SYS_GPBRx"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GPBR" edc:cname="SYS_GPBR1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4005306C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPBR">
            <edc:SFRFieldDef edc:cname="GPBR_VALUE" edc:nzwidth="0x20" edc:desc="Value of SYS_GPBRx"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GPBR" edc:cname="SYS_GPBR2" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40053070">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPBR">
            <edc:SFRFieldDef edc:cname="GPBR_VALUE" edc:nzwidth="0x20" edc:desc="Value of SYS_GPBRx"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GPBR" edc:cname="SYS_GPBR3" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40053074">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPBR">
            <edc:SFRFieldDef edc:cname="GPBR_VALUE" edc:nzwidth="0x20" edc:desc="Value of SYS_GPBRx"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GPBR" edc:cname="SYS_GPBR4" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40053078">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPBR">
            <edc:SFRFieldDef edc:cname="GPBR_VALUE" edc:nzwidth="0x20" edc:desc="Value of SYS_GPBRx"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GPBR" edc:cname="SYS_GPBR5" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4005307C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPBR">
            <edc:SFRFieldDef edc:cname="GPBR_VALUE" edc:nzwidth="0x20" edc:desc="Value of SYS_GPBRx"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GPBR" edc:cname="SYS_GPBR6" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40053080">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPBR">
            <edc:SFRFieldDef edc:cname="GPBR_VALUE" edc:nzwidth="0x20" edc:desc="Value of SYS_GPBRx"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GPBR" edc:cname="SYS_GPBR7" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40053084">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPBR">
            <edc:SFRFieldDef edc:cname="GPBR_VALUE" edc:nzwidth="0x20" edc:desc="Value of SYS_GPBRx"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GPBR" edc:cname="SYS_GPBR8" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40053088">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPBR">
            <edc:SFRFieldDef edc:cname="GPBR_VALUE" edc:nzwidth="0x20" edc:desc="Value of SYS_GPBRx"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GPBR" edc:cname="SYS_GPBR9" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4005308C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPBR">
            <edc:SFRFieldDef edc:cname="GPBR_VALUE" edc:nzwidth="0x20" edc:desc="Value of SYS_GPBRx"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GPBR" edc:cname="SYS_GPBR10" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40053090">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPBR">
            <edc:SFRFieldDef edc:cname="GPBR_VALUE" edc:nzwidth="0x20" edc:desc="Value of SYS_GPBRx"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GPBR" edc:cname="SYS_GPBR11" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40053094">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPBR">
            <edc:SFRFieldDef edc:cname="GPBR_VALUE" edc:nzwidth="0x20" edc:desc="Value of SYS_GPBRx"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GPBR" edc:cname="SYS_GPBR12" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40053098">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPBR">
            <edc:SFRFieldDef edc:cname="GPBR_VALUE" edc:nzwidth="0x20" edc:desc="Value of SYS_GPBRx"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GPBR" edc:cname="SYS_GPBR13" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4005309C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPBR">
            <edc:SFRFieldDef edc:cname="GPBR_VALUE" edc:nzwidth="0x20" edc:desc="Value of SYS_GPBRx"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GPBR" edc:cname="SYS_GPBR14" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x400530A0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPBR">
            <edc:SFRFieldDef edc:cname="GPBR_VALUE" edc:nzwidth="0x20" edc:desc="Value of SYS_GPBRx"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GPBR" edc:cname="SYS_GPBR15" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x400530A4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPBR">
            <edc:SFRFieldDef edc:cname="GPBR_VALUE" edc:nzwidth="0x20" edc:desc="Value of SYS_GPBRx"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GPBR" edc:cname="SYS_GPBR16" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x400530A8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPBR">
            <edc:SFRFieldDef edc:cname="GPBR_VALUE" edc:nzwidth="0x20" edc:desc="Value of SYS_GPBRx"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GPBR" edc:cname="SYS_GPBR17" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x400530AC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPBR">
            <edc:SFRFieldDef edc:cname="GPBR_VALUE" edc:nzwidth="0x20" edc:desc="Value of SYS_GPBRx"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GPBR" edc:cname="SYS_GPBR18" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x400530B0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPBR">
            <edc:SFRFieldDef edc:cname="GPBR_VALUE" edc:nzwidth="0x20" edc:desc="Value of SYS_GPBRx"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GPBR" edc:cname="SYS_GPBR19" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x400530B4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPBR">
            <edc:SFRFieldDef edc:cname="GPBR_VALUE" edc:nzwidth="0x20" edc:desc="Value of SYS_GPBRx"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GPBR" edc:cname="SYS_GPBR20" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x400530B8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPBR">
            <edc:SFRFieldDef edc:cname="GPBR_VALUE" edc:nzwidth="0x20" edc:desc="Value of SYS_GPBRx"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GPBR" edc:cname="SYS_GPBR21" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x400530BC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPBR">
            <edc:SFRFieldDef edc:cname="GPBR_VALUE" edc:nzwidth="0x20" edc:desc="Value of SYS_GPBRx"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GPBR" edc:cname="SYS_GPBR22" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x400530C0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPBR">
            <edc:SFRFieldDef edc:cname="GPBR_VALUE" edc:nzwidth="0x20" edc:desc="Value of SYS_GPBRx"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GPBR" edc:cname="SYS_GPBR23" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x400530C4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GPBR">
            <edc:SFRFieldDef edc:cname="GPBR_VALUE" edc:nzwidth="0x20" edc:desc="Value of SYS_GPBRx"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x38" edc:_addr="0x400530C8"/>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="RTC_CR" edc:nzwidth="0x20" edc:access="--------------nn------nn------nn" edc:impl="0x30303" edc:_addr="0x40053100">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="UPDTIM" edc:nzwidth="0x1" edc:desc="Update Request Time Register">
              <edc:SFRFieldSemantic edc:cname="STOP_UPDATE" edc:desc="No effect or, if UPDTIM has been previously written to 1, stops the update procedure." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="START_UPDATE" edc:desc="Stops the RTC time counting. Second, minute and hour counters can be programmed once this bit is set and acknowledged by the bit ACKUPD of the RTC_SR." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="UPDCAL" edc:nzwidth="0x1" edc:desc="Update Request Calendar Register">
              <edc:SFRFieldSemantic edc:cname="STOP_UPDATE" edc:desc="No effect or, if UPDCAL has been previously written to 1, stops the update procedure." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="START_UPDATE" edc:desc="Stops the RTC calendar counting." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="TIMEVSEL" edc:nzwidth="0x2" edc:desc="Time Event Selection">
              <edc:SFRFieldSemantic edc:cname="MINUTE" edc:desc="Minute change" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="HOUR" edc:desc="Hour change" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="MIDNIGHT" edc:desc="Every day at midnight" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="NOON" edc:desc="Every day at noon" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="CALEVSEL" edc:nzwidth="0x2" edc:desc="Calendar Event Selection">
              <edc:SFRFieldSemantic edc:cname="WEEK" edc:desc="Week change (every Monday at time 00:00:00)" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="MONTH" edc:desc="Month change (every 01 of each month at time 00:00:00)" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="YEAR" edc:desc="Year change (every January 1 at time 00:00:00)" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="RTC_MR" edc:nzwidth="0x20" edc:access="--nn-nnn-nnn-nnnnnnnnnnn---n-nnn" edc:impl="0x3777FF17" edc:_addr="0x40053104">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="HRMOD" edc:nzwidth="0x1" edc:desc="12-/24-hour Mode">
              <edc:SFRFieldSemantic edc:cname="_24HOURS" edc:desc="24-hour mode is selected." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="AMPM" edc:desc="12-hour mode is selected." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PERSIAN" edc:nzwidth="0x1" edc:desc="PERSIAN Calendar">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Gregorian calendar." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Persian calendar." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="UTC" edc:nzwidth="0x1" edc:desc="UTC Time Format">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Gregorian or Persian calendar." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="UTC format." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NEGPPM" edc:nzwidth="0x1" edc:desc="NEGative PPM Correction">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Positive correction (the divider will be slightly higher than 32768)." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Negative correction (the divider will be slightly lower than 32768)." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CORRECTION" edc:nzwidth="0x7" edc:desc="Slow Clock Correction"/>
            <edc:SFRFieldDef edc:cname="HIGHPPM" edc:nzwidth="0x1" edc:desc="HIGH PPM Correction">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Lower range ppm correction with accurate correction (below 30ppm correction)." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Higher range ppm correction with accurate correction (higher than 30ppm correction)." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="OUT0" edc:nzwidth="0x3" edc:desc="RTCOUT0 OutputSource Selection">
              <edc:SFRFieldSemantic edc:cname="NO_WAVE" edc:desc="No waveform, stuck at '0'" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="FREQ1HZ" edc:desc="1 Hz square wave" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FREQ32HZ" edc:desc="32 Hz square wave" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="FREQ64HZ" edc:desc="64 Hz square wave" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="FREQ512HZ" edc:desc="512 Hz square wave" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="ALARM_TOGGLE" edc:desc="Output toggles when alarm flag rises" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="ALARM_FLAG" edc:desc="Output is a copy of the alarm flag" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="PROG_PULSE" edc:desc="Duty cycle programmable pulse" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="OUT1" edc:nzwidth="0x3" edc:desc="RTCOUT1 Output Source Selection">
              <edc:SFRFieldSemantic edc:cname="NO_WAVE" edc:desc="No waveform, stuck at '0'" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="FREQ1HZ" edc:desc="1 Hz square wave" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FREQ32HZ" edc:desc="32 Hz square wave" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="FREQ64HZ" edc:desc="64 Hz square wave" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="FREQ512HZ" edc:desc="512 Hz square wave" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="ALARM_TOGGLE" edc:desc="Output toggles when alarm flag rises" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="ALARM_FLAG" edc:desc="Output is a copy of the alarm flag" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="PROG_PULSE" edc:desc="Duty cycle programmable pulse" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="THIGH" edc:nzwidth="0x3" edc:desc="High Duration of the Output Pulse">
              <edc:SFRFieldSemantic edc:cname="H_31MS" edc:desc="31.2 ms" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="H_16MS" edc:desc="15.6 ms" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="H_4MS" edc:desc="3.91 ms" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="H_976US" edc:desc="976 us" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="H_488US" edc:desc="488 us" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="H_122US" edc:desc="122 us" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="H_30US" edc:desc="30.5 us" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="H_15US" edc:desc="15.2 us" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TPERIOD" edc:nzwidth="0x2" edc:desc="Period of the Output Pulse">
              <edc:SFRFieldSemantic edc:cname="P_1S" edc:desc="1 second" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="P_500MS" edc:desc="500 ms" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="P_250MS" edc:desc="250 ms" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="P_125MS" edc:desc="125 ms" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="RTC_TIMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40053108">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="UTC_TIME" edc:nzwidth="0x20" edc:desc="Current UTC Time"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="MIN" edc:nzwidth="0x7" edc:desc="Current Minute"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="HOUR" edc:nzwidth="0x6" edc:desc="Current Hour"/>
            <edc:SFRFieldDef edc:cname="AMPM" edc:nzwidth="0x1" edc:desc="Ante Meridiem Post Meridiem Indicator">
              <edc:SFRFieldSemantic edc:cname="AM" edc:desc="AM." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PM" edc:desc="PM." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="RTC_CALR" edc:nzwidth="0x20" edc:access="--nnnnnnnnnnnnnnnnnnnnnn-nnnnnnn" edc:impl="0x3FFFFF7F" edc:_addr="0x4005310C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="CENT" edc:nzwidth="0x7" edc:desc="Current Century"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="YEAR" edc:nzwidth="0x8" edc:desc="Current Year"/>
            <edc:SFRFieldDef edc:cname="MONTH" edc:nzwidth="0x5" edc:desc="Current Month"/>
            <edc:SFRFieldDef edc:cname="DAY" edc:nzwidth="0x3" edc:desc="Current Day in Current Week"/>
            <edc:SFRFieldDef edc:cname="DATE" edc:nzwidth="0x6" edc:desc="Current Day in Current Month"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="RTC_TIMALR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x40053110">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="UTC_TIME" edc:nzwidth="0x20" edc:desc="UTC_TIME Alarm"/>
            <edc:AdjustPoint edc:offset="-25"/>
            <edc:SFRFieldDef edc:cname="SECEN" edc:nzwidth="0x1" edc:desc="Second Alarm Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="The second-matching alarm is disabled." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="The second-matching alarm is enabled." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MIN" edc:nzwidth="0x7" edc:desc="Minute Alarm"/>
            <edc:SFRFieldDef edc:cname="MINEN" edc:nzwidth="0x1" edc:desc="Minute Alarm Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="The minute-matching alarm is disabled." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="The minute-matching alarm is enabled." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="HOUR" edc:nzwidth="0x6" edc:desc="Hour Alarm"/>
            <edc:SFRFieldDef edc:cname="AMPM" edc:nzwidth="0x1" edc:desc="AM/PM Indicator"/>
            <edc:SFRFieldDef edc:cname="HOUREN" edc:nzwidth="0x1" edc:desc="Hour Alarm Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="The hour-matching alarm is disabled." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="The hour-matching alarm is enabled." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="RTC_CALALR" edc:nzwidth="0x20" edc:access="n-nnnnnnn--nnnnn---------------n" edc:impl="0xBF9F0001" edc:_addr="0x40053114">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="UTCEN" edc:nzwidth="0x1" edc:desc="UTC Alarm Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="The UTC-matching alarm is disabled." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="The UTC-matching alarm is enabled." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0xF"/>
            <edc:SFRFieldDef edc:cname="MONTH" edc:nzwidth="0x5" edc:desc="Month Alarm"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MTHEN" edc:nzwidth="0x1" edc:desc="Month Alarm Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="The month-matching alarm is disabled." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="The month-matching alarm is enabled." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DATE" edc:nzwidth="0x6" edc:desc="Date Alarm"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DATEEN" edc:nzwidth="0x1" edc:desc="Date Alarm Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="The date-matching alarm is disabled." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="The date-matching alarm is enabled." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="RTC_SR" edc:nzwidth="0x20" edc:access="--------------------------rrrrrr" edc:impl="0x3F" edc:_addr="0x40053118">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="ACKUPD" edc:nzwidth="0x1" edc:desc="Acknowledge for Update">
              <edc:SFRFieldSemantic edc:cname="FREERUN" edc:desc="Time and calendar registers cannot be updated." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Time and calendar registers can be updated." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ALARM" edc:nzwidth="0x1" edc:desc="Alarm Flag">
              <edc:SFRFieldSemantic edc:cname="NO_ALARMEVENT" edc:desc="No alarm matching condition occurred." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ALARMEVENT" edc:desc="An alarm matching condition has occurred." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SEC" edc:nzwidth="0x1" edc:desc="Second Event">
              <edc:SFRFieldSemantic edc:cname="NO_SECEVENT" edc:desc="No second event has occurred since the last clear." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SECEVENT" edc:desc="At least one second event has occurred since the last clear." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TIMEV" edc:nzwidth="0x1" edc:desc="Time Event">
              <edc:SFRFieldSemantic edc:cname="NO_TIMEVENT" edc:desc="No time event has occurred since the last clear." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TIMEVENT" edc:desc="At least one time event has occurred since the last clear." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CALEV" edc:nzwidth="0x1" edc:desc="Calendar Event">
              <edc:SFRFieldSemantic edc:cname="NO_CALEVENT" edc:desc="No calendar event has occurred since the last clear." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="CALEVENT" edc:desc="At least one calendar event has occurred since the last clear." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TDERR" edc:nzwidth="0x1" edc:desc="Time and/or Date Free Running Error">
              <edc:SFRFieldSemantic edc:cname="CORRECT" edc:desc="The internal free running counters are carrying valid values since the last read of the Status Register (RTC_SR)." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ERR_TIMEDATE" edc:desc="The internal free running counters have been corrupted (invalid date or time, non-BCD values) since the last read and/or they are still invalid." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="RTC_SCCR" edc:nzwidth="0x20" edc:access="--------------------------wwwwww" edc:impl="0x3F" edc:_addr="0x4005311C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="ACKCLR" edc:nzwidth="0x1" edc:desc="Acknowledge Clear"/>
            <edc:SFRFieldDef edc:cname="ALRCLR" edc:nzwidth="0x1" edc:desc="Alarm Clear"/>
            <edc:SFRFieldDef edc:cname="SECCLR" edc:nzwidth="0x1" edc:desc="Second Clear"/>
            <edc:SFRFieldDef edc:cname="TIMCLR" edc:nzwidth="0x1" edc:desc="Time Clear"/>
            <edc:SFRFieldDef edc:cname="CALCLR" edc:nzwidth="0x1" edc:desc="Calendar Clear"/>
            <edc:SFRFieldDef edc:cname="TDERRCLR" edc:nzwidth="0x1" edc:desc="Time and/or Date Free Running Error Clear"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="RTC_IER" edc:nzwidth="0x20" edc:access="--------------------------wwwwww" edc:impl="0x3F" edc:_addr="0x40053120">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="ACKEN" edc:nzwidth="0x1" edc:desc="Acknowledge Update Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ALREN" edc:nzwidth="0x1" edc:desc="Alarm Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SECEN" edc:nzwidth="0x1" edc:desc="Second Event Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TIMEN" edc:nzwidth="0x1" edc:desc="Time Event Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CALEN" edc:nzwidth="0x1" edc:desc="Calendar Event Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TDERREN" edc:nzwidth="0x1" edc:desc="Time and/or Date Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="RTC_IDR" edc:nzwidth="0x20" edc:access="--------------------------wwwwww" edc:impl="0x3F" edc:_addr="0x40053124">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="ACKDIS" edc:nzwidth="0x1" edc:desc="Acknowledge Update Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ALRDIS" edc:nzwidth="0x1" edc:desc="Alarm Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SECDIS" edc:nzwidth="0x1" edc:desc="Second Event Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TIMDIS" edc:nzwidth="0x1" edc:desc="Time Event Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CALDIS" edc:nzwidth="0x1" edc:desc="Calendar Event Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TDERRDIS" edc:nzwidth="0x1" edc:desc="Time and/or Date Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="RTC_IMR" edc:nzwidth="0x20" edc:access="--------------------------rrrrrr" edc:impl="0x3F" edc:_addr="0x40053128">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="ACK" edc:nzwidth="0x1" edc:desc="Acknowledge Update Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ALR" edc:nzwidth="0x1" edc:desc="Alarm Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="SEC" edc:nzwidth="0x1" edc:desc="Second Event Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TIM" edc:nzwidth="0x1" edc:desc="Time Event Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="CAL" edc:nzwidth="0x1" edc:desc="Calendar Event Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TDERR" edc:nzwidth="0x1" edc:desc="Time and/or Date Error Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="RTC_VER" edc:nzwidth="0x20" edc:access="----------------------------rrrr" edc:impl="0xF" edc:_addr="0x4005312C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="NVTIM" edc:nzwidth="0x1" edc:desc="Non-valid Time"/>
            <edc:SFRFieldDef edc:cname="NVCAL" edc:nzwidth="0x1" edc:desc="Non-valid Calendar"/>
            <edc:SFRFieldDef edc:cname="NVTIMALR" edc:nzwidth="0x1" edc:desc="Non-valid Time Alarm"/>
            <edc:SFRFieldDef edc:cname="NVCALALR" edc:nzwidth="0x1" edc:desc="Non-valid Calendar Alarm"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x40053130"/>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="RTC_TCR" edc:nzwidth="0x20" edc:access="--------------nn-----------nnnnn" edc:impl="0x3001F" edc:_addr="0x40053134">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="TAMPEN0" edc:nzwidth="0x1" edc:desc="Timestamping on TMPx input is enabled">
              <edc:SFRFieldSemantic edc:cname="TIMESTAMP_OFF" edc:desc="Tamper event on TMPx input is not timestamped." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TIMESTAMP_ON" edc:desc="Tamper event on TMPx input is timestamped." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TAMPEN1" edc:nzwidth="0x1" edc:desc="Timestamping on TMPx input is enabled">
              <edc:SFRFieldSemantic edc:cname="TIMESTAMP_OFF" edc:desc="Tamper event on TMPx input is not timestamped." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TIMESTAMP_ON" edc:desc="Tamper event on TMPx input is timestamped." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TAMPEN2" edc:nzwidth="0x1" edc:desc="Timestamping on TMPx input is enabled">
              <edc:SFRFieldSemantic edc:cname="TIMESTAMP_OFF" edc:desc="Tamper event on TMPx input is not timestamped." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TIMESTAMP_ON" edc:desc="Tamper event on TMPx input is timestamped." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TAMPEN3" edc:nzwidth="0x1" edc:desc="Timestamping on TMPx input is enabled">
              <edc:SFRFieldSemantic edc:cname="TIMESTAMP_OFF" edc:desc="Tamper event on TMPx input is not timestamped." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TIMESTAMP_ON" edc:desc="Tamper event on TMPx input is timestamped." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TAMPEN4" edc:nzwidth="0x1" edc:desc="Timestamping on TMPx input is enabled">
              <edc:SFRFieldSemantic edc:cname="TIMESTAMP_OFF" edc:desc="Tamper event on TMPx input is not timestamped." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TIMESTAMP_ON" edc:desc="Tamper event on TMPx input is timestamped." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0xB"/>
            <edc:SFRFieldDef edc:cname="TAMPCLR" edc:nzwidth="0x1" edc:desc="Tamper Clear">
              <edc:SFRFieldSemantic edc:cname="NOT_ENABLE" edc:desc="A Tamper event does not create an immediate clear on GPBR registers." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="Tamper event on TMP0 or TMP4 generates an immediate clear on GPBR registers. The number of cleared GPBR registers depends on the value of FGPBRCLR." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FGPBRCLR" edc:nzwidth="0x1" edc:desc="Full GPBR Clear">
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="If TAMPCLR is set to '1', a tamper event immediately clears GPBR0 to GPBR11." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="FULL" edc:desc="If TAMPCLR is set to '1', a tamper event immediately clears all GPBRs." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="RTC_TISR" edc:nzwidth="0x20" edc:access="---------------------------rrrrr" edc:impl="0x1F" edc:_addr="0x40053138">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="TISR0" edc:nzwidth="0x1" edc:desc="TMPx Input Status Register"/>
            <edc:SFRFieldDef edc:cname="TISR1" edc:nzwidth="0x1" edc:desc="TMPx Input Status Register"/>
            <edc:SFRFieldDef edc:cname="TISR2" edc:nzwidth="0x1" edc:desc="TMPx Input Status Register"/>
            <edc:SFRFieldDef edc:cname="TISR3" edc:nzwidth="0x1" edc:desc="TMPx Input Status Register"/>
            <edc:SFRFieldDef edc:cname="TISR4" edc:nzwidth="0x1" edc:desc="TMPx Input Status Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4005313C"/>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="RTC_SUB00RTC_FSTR" edc:nzwidth="0x20" edc:access="r---rrrr-rrrrrrr-rrrrrrr-rrrrrrr" edc:impl="0x8F7F7F7F" edc:_addr="0x40053140">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="SEC" edc:nzwidth="0x7" edc:desc="Seconds of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MIN" edc:nzwidth="0x7" edc:desc="Minutes of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="HOUR" edc:nzwidth="0x6" edc:desc="Hours of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:SFRFieldDef edc:cname="AMPM" edc:nzwidth="0x1" edc:desc="AM/PM Indicator of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TEVCNT" edc:nzwidth="0x4" edc:desc="Tamper Events Counter (cleared by reading RTC_LSDRx)"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="BACKUP" edc:nzwidth="0x1" edc:desc="System Mode of the Tamper (cleared by reading RTC_LSDRx)"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="RTC_SUB00RTC_FSDR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40053144">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="UTC_TIME" edc:nzwidth="0x20" edc:desc="Time of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="YEAR" edc:nzwidth="0x7" edc:desc="Year of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MONTH" edc:nzwidth="0x5" edc:desc="Month of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:SFRFieldDef edc:cname="DAY" edc:nzwidth="0x3" edc:desc="Day of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:SFRFieldDef edc:cname="DATE" edc:nzwidth="0x6" edc:desc="Date of the Tamper (cleared by reading RTC_LSDRx)"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="RTC_SUB00RTC_LSTR" edc:nzwidth="0x20" edc:access="r--------rrrrrrr-rrrrrrr-rrrrrrr" edc:impl="0x807F7F7F" edc:_addr="0x40053148">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="SEC" edc:nzwidth="0x7" edc:desc="Seconds of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MIN" edc:nzwidth="0x7" edc:desc="Minutes of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="HOUR" edc:nzwidth="0x6" edc:desc="Hours of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:SFRFieldDef edc:cname="AMPM" edc:nzwidth="0x1" edc:desc="AM/PM Indicator of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="BACKUP" edc:nzwidth="0x1" edc:desc="System Mode of the Tamper (cleared by reading RTC_LSDRx)"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="RTC_SUB00RTC_LSDR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4005314C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="UTC_TIME" edc:nzwidth="0x20" edc:desc="Time of the Tamper (cleared on read)"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="YEAR" edc:nzwidth="0x7" edc:desc="Year of the Tamper (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MONTH" edc:nzwidth="0x5" edc:desc="Month of the Tamper (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="DAY" edc:nzwidth="0x3" edc:desc="Day of the Tamper (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="DATE" edc:nzwidth="0x6" edc:desc="Date of the Tamper (cleared on read)"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="RTC_SUB01RTC_FSTR" edc:nzwidth="0x20" edc:access="r---rrrr-rrrrrrr-rrrrrrr-rrrrrrr" edc:impl="0x8F7F7F7F" edc:_addr="0x40053150">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="SEC" edc:nzwidth="0x7" edc:desc="Seconds of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MIN" edc:nzwidth="0x7" edc:desc="Minutes of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="HOUR" edc:nzwidth="0x6" edc:desc="Hours of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:SFRFieldDef edc:cname="AMPM" edc:nzwidth="0x1" edc:desc="AM/PM Indicator of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TEVCNT" edc:nzwidth="0x4" edc:desc="Tamper Events Counter (cleared by reading RTC_LSDRx)"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="BACKUP" edc:nzwidth="0x1" edc:desc="System Mode of the Tamper (cleared by reading RTC_LSDRx)"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="RTC_SUB01RTC_FSDR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40053154">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="UTC_TIME" edc:nzwidth="0x20" edc:desc="Time of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="YEAR" edc:nzwidth="0x7" edc:desc="Year of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MONTH" edc:nzwidth="0x5" edc:desc="Month of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:SFRFieldDef edc:cname="DAY" edc:nzwidth="0x3" edc:desc="Day of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:SFRFieldDef edc:cname="DATE" edc:nzwidth="0x6" edc:desc="Date of the Tamper (cleared by reading RTC_LSDRx)"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="RTC_SUB01RTC_LSTR" edc:nzwidth="0x20" edc:access="r--------rrrrrrr-rrrrrrr-rrrrrrr" edc:impl="0x807F7F7F" edc:_addr="0x40053158">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="SEC" edc:nzwidth="0x7" edc:desc="Seconds of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MIN" edc:nzwidth="0x7" edc:desc="Minutes of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="HOUR" edc:nzwidth="0x6" edc:desc="Hours of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:SFRFieldDef edc:cname="AMPM" edc:nzwidth="0x1" edc:desc="AM/PM Indicator of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="BACKUP" edc:nzwidth="0x1" edc:desc="System Mode of the Tamper (cleared by reading RTC_LSDRx)"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="RTC_SUB01RTC_LSDR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4005315C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="UTC_TIME" edc:nzwidth="0x20" edc:desc="Time of the Tamper (cleared on read)"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="YEAR" edc:nzwidth="0x7" edc:desc="Year of the Tamper (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MONTH" edc:nzwidth="0x5" edc:desc="Month of the Tamper (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="DAY" edc:nzwidth="0x3" edc:desc="Day of the Tamper (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="DATE" edc:nzwidth="0x6" edc:desc="Date of the Tamper (cleared on read)"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="RTC_SUB02RTC_FSTR" edc:nzwidth="0x20" edc:access="r---rrrr-rrrrrrr-rrrrrrr-rrrrrrr" edc:impl="0x8F7F7F7F" edc:_addr="0x40053160">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="SEC" edc:nzwidth="0x7" edc:desc="Seconds of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MIN" edc:nzwidth="0x7" edc:desc="Minutes of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="HOUR" edc:nzwidth="0x6" edc:desc="Hours of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:SFRFieldDef edc:cname="AMPM" edc:nzwidth="0x1" edc:desc="AM/PM Indicator of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TEVCNT" edc:nzwidth="0x4" edc:desc="Tamper Events Counter (cleared by reading RTC_LSDRx)"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="BACKUP" edc:nzwidth="0x1" edc:desc="System Mode of the Tamper (cleared by reading RTC_LSDRx)"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="RTC_SUB02RTC_FSDR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40053164">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="UTC_TIME" edc:nzwidth="0x20" edc:desc="Time of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="YEAR" edc:nzwidth="0x7" edc:desc="Year of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MONTH" edc:nzwidth="0x5" edc:desc="Month of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:SFRFieldDef edc:cname="DAY" edc:nzwidth="0x3" edc:desc="Day of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:SFRFieldDef edc:cname="DATE" edc:nzwidth="0x6" edc:desc="Date of the Tamper (cleared by reading RTC_LSDRx)"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="RTC_SUB02RTC_LSTR" edc:nzwidth="0x20" edc:access="r--------rrrrrrr-rrrrrrr-rrrrrrr" edc:impl="0x807F7F7F" edc:_addr="0x40053168">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="SEC" edc:nzwidth="0x7" edc:desc="Seconds of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MIN" edc:nzwidth="0x7" edc:desc="Minutes of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="HOUR" edc:nzwidth="0x6" edc:desc="Hours of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:SFRFieldDef edc:cname="AMPM" edc:nzwidth="0x1" edc:desc="AM/PM Indicator of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="BACKUP" edc:nzwidth="0x1" edc:desc="System Mode of the Tamper (cleared by reading RTC_LSDRx)"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="RTC_SUB02RTC_LSDR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4005316C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="UTC_TIME" edc:nzwidth="0x20" edc:desc="Time of the Tamper (cleared on read)"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="YEAR" edc:nzwidth="0x7" edc:desc="Year of the Tamper (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MONTH" edc:nzwidth="0x5" edc:desc="Month of the Tamper (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="DAY" edc:nzwidth="0x3" edc:desc="Day of the Tamper (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="DATE" edc:nzwidth="0x6" edc:desc="Date of the Tamper (cleared on read)"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="RTC_SUB03RTC_FSTR" edc:nzwidth="0x20" edc:access="r---rrrr-rrrrrrr-rrrrrrr-rrrrrrr" edc:impl="0x8F7F7F7F" edc:_addr="0x40053170">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="SEC" edc:nzwidth="0x7" edc:desc="Seconds of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MIN" edc:nzwidth="0x7" edc:desc="Minutes of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="HOUR" edc:nzwidth="0x6" edc:desc="Hours of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:SFRFieldDef edc:cname="AMPM" edc:nzwidth="0x1" edc:desc="AM/PM Indicator of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TEVCNT" edc:nzwidth="0x4" edc:desc="Tamper Events Counter (cleared by reading RTC_LSDRx)"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="BACKUP" edc:nzwidth="0x1" edc:desc="System Mode of the Tamper (cleared by reading RTC_LSDRx)"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="RTC_SUB03RTC_FSDR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40053174">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="UTC_TIME" edc:nzwidth="0x20" edc:desc="Time of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="YEAR" edc:nzwidth="0x7" edc:desc="Year of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MONTH" edc:nzwidth="0x5" edc:desc="Month of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:SFRFieldDef edc:cname="DAY" edc:nzwidth="0x3" edc:desc="Day of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:SFRFieldDef edc:cname="DATE" edc:nzwidth="0x6" edc:desc="Date of the Tamper (cleared by reading RTC_LSDRx)"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="RTC_SUB03RTC_LSTR" edc:nzwidth="0x20" edc:access="r--------rrrrrrr-rrrrrrr-rrrrrrr" edc:impl="0x807F7F7F" edc:_addr="0x40053178">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="SEC" edc:nzwidth="0x7" edc:desc="Seconds of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MIN" edc:nzwidth="0x7" edc:desc="Minutes of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="HOUR" edc:nzwidth="0x6" edc:desc="Hours of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:SFRFieldDef edc:cname="AMPM" edc:nzwidth="0x1" edc:desc="AM/PM Indicator of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="BACKUP" edc:nzwidth="0x1" edc:desc="System Mode of the Tamper (cleared by reading RTC_LSDRx)"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="RTC_SUB03RTC_LSDR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4005317C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="UTC_TIME" edc:nzwidth="0x20" edc:desc="Time of the Tamper (cleared on read)"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="YEAR" edc:nzwidth="0x7" edc:desc="Year of the Tamper (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MONTH" edc:nzwidth="0x5" edc:desc="Month of the Tamper (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="DAY" edc:nzwidth="0x3" edc:desc="Day of the Tamper (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="DATE" edc:nzwidth="0x6" edc:desc="Date of the Tamper (cleared on read)"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="RTC_SUB04RTC_FSTR" edc:nzwidth="0x20" edc:access="r---rrrr-rrrrrrr-rrrrrrr-rrrrrrr" edc:impl="0x8F7F7F7F" edc:_addr="0x40053180">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="SEC" edc:nzwidth="0x7" edc:desc="Seconds of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MIN" edc:nzwidth="0x7" edc:desc="Minutes of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="HOUR" edc:nzwidth="0x6" edc:desc="Hours of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:SFRFieldDef edc:cname="AMPM" edc:nzwidth="0x1" edc:desc="AM/PM Indicator of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TEVCNT" edc:nzwidth="0x4" edc:desc="Tamper Events Counter (cleared by reading RTC_LSDRx)"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="BACKUP" edc:nzwidth="0x1" edc:desc="System Mode of the Tamper (cleared by reading RTC_LSDRx)"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="RTC_SUB04RTC_FSDR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x40053184">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="UTC_TIME" edc:nzwidth="0x20" edc:desc="Time of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="YEAR" edc:nzwidth="0x7" edc:desc="Year of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MONTH" edc:nzwidth="0x5" edc:desc="Month of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:SFRFieldDef edc:cname="DAY" edc:nzwidth="0x3" edc:desc="Day of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:SFRFieldDef edc:cname="DATE" edc:nzwidth="0x6" edc:desc="Date of the Tamper (cleared by reading RTC_LSDRx)"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="RTC_SUB04RTC_LSTR" edc:nzwidth="0x20" edc:access="r--------rrrrrrr-rrrrrrr-rrrrrrr" edc:impl="0x807F7F7F" edc:_addr="0x40053188">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="SEC" edc:nzwidth="0x7" edc:desc="Seconds of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MIN" edc:nzwidth="0x7" edc:desc="Minutes of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="HOUR" edc:nzwidth="0x6" edc:desc="Hours of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:SFRFieldDef edc:cname="AMPM" edc:nzwidth="0x1" edc:desc="AM/PM Indicator of the Tamper (cleared by reading RTC_LSDRx)"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="BACKUP" edc:nzwidth="0x1" edc:desc="System Mode of the Tamper (cleared by reading RTC_LSDRx)"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="RTC_SUB04RTC_LSDR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4005318C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="UTC_TIME" edc:nzwidth="0x20" edc:desc="Time of the Tamper (cleared on read)"/>
            <edc:AdjustPoint edc:offset="-24"/>
            <edc:SFRFieldDef edc:cname="YEAR" edc:nzwidth="0x7" edc:desc="Year of the Tamper (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MONTH" edc:nzwidth="0x5" edc:desc="Month of the Tamper (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="DAY" edc:nzwidth="0x3" edc:desc="Day of the Tamper (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="DATE" edc:nzwidth="0x6" edc:desc="Date of the Tamper (cleared on read)"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x10" edc:_addr="0x40053190"/>
      <edc:SFRDef ltx:memberofperipheral="SYSCWP" edc:cname="SYSC_WPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn------nn" edc:impl="0xFFFFFF03" edc:_addr="0x400531A0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SYSCWP">
            <edc:SFRFieldDef edc:cname="WPEN" edc:nzwidth="0x1" edc:desc="Write Protection Enable"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:nzwidth="0x1" edc:desc="Write Protection Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPEN and WPITEN bits. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x535943"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SYSCWP" edc:cname="SYSC_WPSR" edc:nzwidth="0x20" edc:access="----------------rrrrrrrr-------r" edc:impl="0xFF01" edc:_addr="0x400531A4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SYSCWP">
            <edc:SFRFieldDef edc:cname="WPVS" edc:nzwidth="0x1" edc:desc="Write Protection Register Violation Status"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WVSRC" edc:nzwidth="0x8" edc:desc="Write Violation Source"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x28" edc:_addr="0x400531A8"/>
      <edc:SFRDef ltx:memberofperipheral="SUPC" edc:cname="SUPC_CR" edc:nzwidth="0x20" edc:access="wwwwwwww--------------------wwww" edc:impl="0xFF00000F" edc:_addr="0x400531D0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SUPC">
            <edc:SFRFieldDef edc:cname="SHDW" edc:nzwidth="0x1" edc:desc="Shutdown"/>
            <edc:SFRFieldDef edc:cname="SHDWEOF" edc:nzwidth="0x1" edc:desc="Shutdown End Of Frame"/>
            <edc:SFRFieldDef edc:cname="VROFF" edc:nzwidth="0x1" edc:desc="Voltage Regulator Off">
              <edc:SFRFieldSemantic edc:cname="NO_EFFECT" edc:desc="No effect." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="STOP_VREG" edc:desc="If KEY=0xA5, VROFF asserts the VDDCORE domain reset and stops the voltage regulator." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TDXTALSEL" edc:nzwidth="0x1" edc:desc="Timing Domain Slow Clock Selector">
              <edc:SFRFieldSemantic edc:cname="RC" edc:desc="Slow clock of the timing domain is driven by the embedded 32 kHz (typical) RC oscillator." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="XTAL" edc:desc="Slow clock of the timing domain is driven by the 32.768 kHz crystal oscillator." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x14"/>
            <edc:SFRFieldDef edc:cname="KEY" edc:nzwidth="0x8" edc:desc="Password">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation." edc:when="(field &amp; 0xFF) == 0xA5"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SUPC" edc:cname="SUPC_SMMR" edc:nzwidth="0x20" edc:access="------------------nn-nnn----nnnn" edc:impl="0x370F" edc:_addr="0x400531D4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SUPC">
            <edc:SFRFieldDef edc:cname="VDD3V3SMTH" edc:nzwidth="0x4" edc:desc="VDD3V3 Supply Monitor Threshold"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="VDD3V3SMSMPL" edc:nzwidth="0x3" edc:desc="VDD3V3 Supply Monitor Sampling Period">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="VDD3V3 supply monitor is disabled" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ALWAYS_ON" edc:desc="Continuous VDD3V3 supply monitoring" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_32SLCK" edc:desc="VDD3V3 supply monitor is enabled for 1 period every 32 MD_SLCK periods Energy optimization in Backup mode with VDD3V3 supplied." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_256SLCK" edc:desc="VDD3V3 supply monitor is enabled for 1 period every 256 MD_SLCK periods Energy optimization in Backup mode with VDD3V3 supplied." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_2048SLCK" edc:desc="VDD3V3 supply monitor is enabled for 1 period every 2048 MD_SLCK periods Energy optimization in Backup mode with VDD3V3 supplied." edc:when="(field &amp; 0x7) == 0x04"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="VDD3V3SMRSTEN" edc:nzwidth="0x1" edc:desc="VDD3V3 Supply Monitor Reset Enable"/>
            <edc:SFRFieldDef edc:cname="VDD3V3SMPWRM" edc:nzwidth="0x1" edc:desc="VDD3V3 Supply Monitor Power Supply Mode">
              <edc:SFRFieldSemantic edc:cname="MANUAL" edc:desc="The VDDBU power source selection is controlled by configuring the bit RSTC_MR.PWRSW." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="AUTO_VDD3V3SM" edc:desc="The VDDBU power source is VBAT when a VDD3V3 undervoltage is detected by the VDD3V3 supply monitor." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SUPC" edc:cname="SUPC_MR" edc:nzwidth="0x20" edc:access="nnnnnnnn---n-----nnn----nnnnnnnn" edc:impl="0xFF1070FF" edc:_addr="0x400531D8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SUPC">
            <edc:SFRFieldDef edc:cname="LCDOUT" edc:nzwidth="0x4" edc:desc="LCD Voltage Regulator Output"/>
            <edc:SFRFieldDef edc:cname="LCDMODE" edc:nzwidth="0x2" edc:desc="LCD Controller Mode of Operation">
              <edc:SFRFieldSemantic edc:cname="LCDOFF" edc:desc="The internal supply source and the external supply source are both deselected (OFF Mode)." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LCDON_EXTVR" edc:desc="The external supply source for LCD (VDDLCD) is selected (the embedded LCD voltage regulator is in High-impedance mode)." edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="LCDON_INVR" edc:desc="The internal voltage regulator for VDDLCD is selected (Active mode)." edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CORSMM" edc:nzwidth="0x1" edc:desc="VDDCORE Supply Monitor Output Mode">
              <edc:SFRFieldSemantic edc:cname="NO_EFFECT" edc:desc="VDDCORE supply monitor output value has no effect. Power-on is performed whatever the value of the supply monitor output." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="VALID_VDD" edc:desc="VDDCORE supply monitor output value is checked to validate the VDDCORE domain power-on." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="VREGDIS" edc:nzwidth="0x1" edc:desc="Internal VDDCORE Voltage Regulator Disable">
              <edc:SFRFieldSemantic edc:cname="INT_VREG" edc:desc="Internal VDDCORE voltage regulator is enabled." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="EXT_VREG" edc:desc="Internal VDDCORE voltage regulator is disabled (external power supply is used)." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CORSMRSTEN" edc:nzwidth="0x1" edc:desc="VDDCORE Supply Monitor Reset Enable"/>
            <edc:SFRFieldDef edc:cname="CORSMDIS" edc:nzwidth="0x1" edc:desc="VDDCORE Supply Monitor Disable"/>
            <edc:SFRFieldDef edc:cname="IO_BACKUP_ISO" edc:nzwidth="0x1" edc:desc="Backup Domain IO Isolation Control"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="OSCBYPASS" edc:nzwidth="0x1" edc:desc="Slow Crystal Oscillator Bypass">
              <edc:SFRFieldSemantic edc:cname="NO_EFFECT" edc:desc="No effect. Clock selection depends on the value of the bit SUPC_CR.TDXTALSEL." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="BYPASS" edc:desc="The slow crystal oscillator is bypassed if SUPC_CR.TDXTALSEL=1. The bit OSCBYPASS must be set prior to setting the bit TDXTALSEL." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="KEY" edc:nzwidth="0x8" edc:desc="Password Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD1" edc:desc="Modifies the VREGDIS bit. Other bits are not affected." edc:when="(field &amp; 0xFF) == 0x59"/>
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation." edc:when="(field &amp; 0xFF) == 0xA5"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SUPC" edc:cname="SUPC_WUMR" edc:nzwidth="0x20" edc:access="-nnnnnnnnnnnnnnn-nnn-nnn---nnnnn" edc:impl="0x7FFF771F" edc:_addr="0x400531DC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SUPC">
            <edc:SFRFieldDef edc:cname="LPDBCEN0" edc:nzwidth="0x1" edc:desc="Tamper Enable for WKUPx Pin"/>
            <edc:SFRFieldDef edc:cname="LPDBCEN1" edc:nzwidth="0x1" edc:desc="Tamper Enable for WKUPx Pin"/>
            <edc:SFRFieldDef edc:cname="LPDBCEN2" edc:nzwidth="0x1" edc:desc="Tamper Enable for WKUPx Pin"/>
            <edc:SFRFieldDef edc:cname="LPDBCEN3" edc:nzwidth="0x1" edc:desc="Tamper Enable for WKUPx Pin"/>
            <edc:SFRFieldDef edc:cname="LPDBCEN4" edc:nzwidth="0x1" edc:desc="Tamper Enable for WKUPx Pin"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="FWUPDBC" edc:nzwidth="0x3" edc:desc="Force Wake-up Inputs Debouncer Period">
              <edc:SFRFieldSemantic edc:cname="IMMEDIATE" edc:desc="Immediate, no debouncing, detected active at least on one Slow Clock edge." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="_3_SK" edc:desc="WKUPx shall be in its active state for at least 3 MD_SLCK periods" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_32_SK" edc:desc="WKUPx shall be in its active state for at least 32 MD_SLCK periods" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_512_SK" edc:desc="WKUPx shall be in its active state for at least 512 MD_SLCK periods" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_4096_SK" edc:desc="WKUPx shall be in its active state for at least 4,096 MD_SLCK periods" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_32768_SK" edc:desc="WKUPx shall be in its active state for at least 32,768 MD_SLCK periods" edc:when="(field &amp; 0x7) == 0x05"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="WKUPDBC" edc:nzwidth="0x3" edc:desc="Wake-up Inputs Debouncer Period">
              <edc:SFRFieldSemantic edc:cname="IMMEDIATE" edc:desc="Immediate, no debouncing, detected active at least on one Slow Clock edge." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="_3_SK" edc:desc="WKUPx shall be in its active state for at least 3 MD_SLCK periods" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_32_SK" edc:desc="WKUPx shall be in its active state for at least 32 MD_SLCK periods" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_512_SK" edc:desc="WKUPx shall be in its active state for at least 512 MD_SLCK periods" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_4096_SK" edc:desc="WKUPx shall be in its active state for at least 4,096 MD_SLCK periods" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_32768_SK" edc:desc="WKUPx shall be in its active state for at least 32,768 MD_SLCK periods" edc:when="(field &amp; 0x7) == 0x05"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LPDBC0" edc:nzwidth="0x3" edc:desc="Low-power Debouncer Period of WKUPx">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Disables the low-power debouncers." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="_2_RTCOUT" edc:desc="WKUPx in active state for at least 2 RTCOUTx clock periods" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_3_RTCOUT" edc:desc="WKUPx in active state for at least 3 RTCOUTx clock periods" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_4_RTCOUT" edc:desc="WKUPx in active state for at least 4 RTCOUTx clock periods" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_5_RTCOUT" edc:desc="WKUPx in active state for at least 5 RTCOUTx clock periods" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_6_RTCOUT" edc:desc="WKUPx in active state for at least 6 RTCOUTx clock periods" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_7_RTCOUT" edc:desc="WKUPx in active state for at least 7 RTCOUTx clock periods" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_8_RTCOUT" edc:desc="WKUPx in active state for at least 8 RTCOUTx clock periods" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LPDBC1" edc:nzwidth="0x3" edc:desc="Low-power Debouncer Period of WKUPx">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Disables the low-power debouncers." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="_2_RTCOUT" edc:desc="WKUPx in active state for at least 2 RTCOUTx clock periods" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_3_RTCOUT" edc:desc="WKUPx in active state for at least 3 RTCOUTx clock periods" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_4_RTCOUT" edc:desc="WKUPx in active state for at least 4 RTCOUTx clock periods" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_5_RTCOUT" edc:desc="WKUPx in active state for at least 5 RTCOUTx clock periods" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_6_RTCOUT" edc:desc="WKUPx in active state for at least 6 RTCOUTx clock periods" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_7_RTCOUT" edc:desc="WKUPx in active state for at least 7 RTCOUTx clock periods" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_8_RTCOUT" edc:desc="WKUPx in active state for at least 8 RTCOUTx clock periods" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LPDBC2" edc:nzwidth="0x3" edc:desc="Low-power Debouncer Period of WKUPx">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Disables the low-power debouncers." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="_2_RTCOUT" edc:desc="WKUPx in active state for at least 2 RTCOUTx clock periods" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_3_RTCOUT" edc:desc="WKUPx in active state for at least 3 RTCOUTx clock periods" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_4_RTCOUT" edc:desc="WKUPx in active state for at least 4 RTCOUTx clock periods" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_5_RTCOUT" edc:desc="WKUPx in active state for at least 5 RTCOUTx clock periods" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_6_RTCOUT" edc:desc="WKUPx in active state for at least 6 RTCOUTx clock periods" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_7_RTCOUT" edc:desc="WKUPx in active state for at least 7 RTCOUTx clock periods" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_8_RTCOUT" edc:desc="WKUPx in active state for at least 8 RTCOUTx clock periods" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LPDBC3" edc:nzwidth="0x3" edc:desc="Low-power Debouncer Period of WKUPx">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Disables the low-power debouncers." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="_2_RTCOUT" edc:desc="WKUPx in active state for at least 2 RTCOUTx clock periods" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_3_RTCOUT" edc:desc="WKUPx in active state for at least 3 RTCOUTx clock periods" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_4_RTCOUT" edc:desc="WKUPx in active state for at least 4 RTCOUTx clock periods" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_5_RTCOUT" edc:desc="WKUPx in active state for at least 5 RTCOUTx clock periods" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_6_RTCOUT" edc:desc="WKUPx in active state for at least 6 RTCOUTx clock periods" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_7_RTCOUT" edc:desc="WKUPx in active state for at least 7 RTCOUTx clock periods" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_8_RTCOUT" edc:desc="WKUPx in active state for at least 8 RTCOUTx clock periods" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LPDBC4" edc:nzwidth="0x3" edc:desc="Low-power Debouncer Period of WKUPx">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Disables the low-power debouncers." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="_2_RTCOUT" edc:desc="WKUPx in active state for at least 2 RTCOUTx clock periods" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_3_RTCOUT" edc:desc="WKUPx in active state for at least 3 RTCOUTx clock periods" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_4_RTCOUT" edc:desc="WKUPx in active state for at least 4 RTCOUTx clock periods" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_5_RTCOUT" edc:desc="WKUPx in active state for at least 5 RTCOUTx clock periods" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_6_RTCOUT" edc:desc="WKUPx in active state for at least 6 RTCOUTx clock periods" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_7_RTCOUT" edc:desc="WKUPx in active state for at least 7 RTCOUTx clock periods" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_8_RTCOUT" edc:desc="WKUPx in active state for at least 8 RTCOUTx clock periods" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SUPC" edc:cname="SUPC_WUIR" edc:nzwidth="0x20" edc:access="-nnnnnnnnnnnnnnn-nnnnnnnnnnnnnnn" edc:impl="0x7FFF7FFF" edc:_addr="0x400531E0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SUPC">
            <edc:SFRFieldDef edc:cname="WKUPEN0" edc:nzwidth="0x1" edc:desc="Wake-up Input Enable 0"/>
            <edc:SFRFieldDef edc:cname="WKUPEN1" edc:nzwidth="0x1" edc:desc="Wake-up Input Enable 1"/>
            <edc:SFRFieldDef edc:cname="WKUPEN2" edc:nzwidth="0x1" edc:desc="Wake-up Input Enable 2"/>
            <edc:SFRFieldDef edc:cname="WKUPEN3" edc:nzwidth="0x1" edc:desc="Wake-up Input Enable 3"/>
            <edc:SFRFieldDef edc:cname="WKUPEN4" edc:nzwidth="0x1" edc:desc="Wake-up Input Enable 4"/>
            <edc:SFRFieldDef edc:cname="WKUPEN5" edc:nzwidth="0x1" edc:desc="Wake-up Input Enable 5"/>
            <edc:SFRFieldDef edc:cname="WKUPEN6" edc:nzwidth="0x1" edc:desc="Wake-up Input Enable 6"/>
            <edc:SFRFieldDef edc:cname="WKUPEN7" edc:nzwidth="0x1" edc:desc="Wake-up Input Enable 7"/>
            <edc:SFRFieldDef edc:cname="WKUPEN8" edc:nzwidth="0x1" edc:desc="Wake-up Input Enable 8"/>
            <edc:SFRFieldDef edc:cname="WKUPEN9" edc:nzwidth="0x1" edc:desc="Wake-up Input Enable 9"/>
            <edc:SFRFieldDef edc:cname="WKUPEN10" edc:nzwidth="0x1" edc:desc="Wake-up Input Enable 10"/>
            <edc:SFRFieldDef edc:cname="WKUPEN11" edc:nzwidth="0x1" edc:desc="Wake-up Input Enable 11"/>
            <edc:SFRFieldDef edc:cname="WKUPEN12" edc:nzwidth="0x1" edc:desc="Wake-up Input Enable 12"/>
            <edc:SFRFieldDef edc:cname="WKUPEN13" edc:nzwidth="0x1" edc:desc="Wake-up Input Enable 13"/>
            <edc:SFRFieldDef edc:cname="WKUPEN14" edc:nzwidth="0x1" edc:desc="Wake-up Input Enable 14"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="WKUPT0" edc:nzwidth="0x1" edc:desc="Wake-up Input Type 0">
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="A falling edge followed by a low level for a period defined by WKUPDBC on the corresponding wake-up input forces the wake-up of the core power supply." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="A rising edge followed by a high level for a period defined by WKUPDBC on the corresponding wake-up input forces the wake-up of the core power supply." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WKUPT1" edc:nzwidth="0x1" edc:desc="Wake-up Input Type 1">
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="A falling edge followed by a low level for a period defined by WKUPDBC on the corresponding wake-up input forces the wake-up of the core power supply." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="A rising edge followed by a high level for a period defined by WKUPDBC on the corresponding wake-up input forces the wake-up of the core power supply." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WKUPT2" edc:nzwidth="0x1" edc:desc="Wake-up Input Type 2">
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="A falling edge followed by a low level for a period defined by WKUPDBC on the corresponding wake-up input forces the wake-up of the core power supply." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="A rising edge followed by a high level for a period defined by WKUPDBC on the corresponding wake-up input forces the wake-up of the core power supply." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WKUPT3" edc:nzwidth="0x1" edc:desc="Wake-up Input Type 3">
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="A falling edge followed by a low level for a period defined by WKUPDBC on the corresponding wake-up input forces the wake-up of the core power supply." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="A rising edge followed by a high level for a period defined by WKUPDBC on the corresponding wake-up input forces the wake-up of the core power supply." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WKUPT4" edc:nzwidth="0x1" edc:desc="Wake-up Input Type 4">
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="A falling edge followed by a low level for a period defined by WKUPDBC on the corresponding wake-up input forces the wake-up of the core power supply." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="A rising edge followed by a high level for a period defined by WKUPDBC on the corresponding wake-up input forces the wake-up of the core power supply." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WKUPT5" edc:nzwidth="0x1" edc:desc="Wake-up Input Type 5">
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="A falling edge followed by a low level for a period defined by WKUPDBC on the corresponding wake-up input forces the wake-up of the core power supply." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="A rising edge followed by a high level for a period defined by WKUPDBC on the corresponding wake-up input forces the wake-up of the core power supply." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WKUPT6" edc:nzwidth="0x1" edc:desc="Wake-up Input Type 6">
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="A falling edge followed by a low level for a period defined by WKUPDBC on the corresponding wake-up input forces the wake-up of the core power supply." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="A rising edge followed by a high level for a period defined by WKUPDBC on the corresponding wake-up input forces the wake-up of the core power supply." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WKUPT7" edc:nzwidth="0x1" edc:desc="Wake-up Input Type 7">
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="A falling edge followed by a low level for a period defined by WKUPDBC on the corresponding wake-up input forces the wake-up of the core power supply." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="A rising edge followed by a high level for a period defined by WKUPDBC on the corresponding wake-up input forces the wake-up of the core power supply." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WKUPT8" edc:nzwidth="0x1" edc:desc="Wake-up Input Type 8">
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="A falling edge followed by a low level for a period defined by WKUPDBC on the corresponding wake-up input forces the wake-up of the core power supply." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="A rising edge followed by a high level for a period defined by WKUPDBC on the corresponding wake-up input forces the wake-up of the core power supply." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WKUPT9" edc:nzwidth="0x1" edc:desc="Wake-up Input Type 9">
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="A falling edge followed by a low level for a period defined by WKUPDBC on the corresponding wake-up input forces the wake-up of the core power supply." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="A rising edge followed by a high level for a period defined by WKUPDBC on the corresponding wake-up input forces the wake-up of the core power supply." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WKUPT10" edc:nzwidth="0x1" edc:desc="Wake-up Input Type 10">
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="A falling edge followed by a low level for a period defined by WKUPDBC on the corresponding wake-up input forces the wake-up of the core power supply." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="A rising edge followed by a high level for a period defined by WKUPDBC on the corresponding wake-up input forces the wake-up of the core power supply." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WKUPT11" edc:nzwidth="0x1" edc:desc="Wake-up Input Type 11">
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="A falling edge followed by a low level for a period defined by WKUPDBC on the corresponding wake-up input forces the wake-up of the core power supply." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="A rising edge followed by a high level for a period defined by WKUPDBC on the corresponding wake-up input forces the wake-up of the core power supply." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WKUPT12" edc:nzwidth="0x1" edc:desc="Wake-up Input Type 12">
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="A falling edge followed by a low level for a period defined by WKUPDBC on the corresponding wake-up input forces the wake-up of the core power supply." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="A rising edge followed by a high level for a period defined by WKUPDBC on the corresponding wake-up input forces the wake-up of the core power supply." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WKUPT13" edc:nzwidth="0x1" edc:desc="Wake-up Input Type 13">
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="A falling edge followed by a low level for a period defined by WKUPDBC on the corresponding wake-up input forces the wake-up of the core power supply." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="A rising edge followed by a high level for a period defined by WKUPDBC on the corresponding wake-up input forces the wake-up of the core power supply." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WKUPT14" edc:nzwidth="0x1" edc:desc="Wake-up Input Type 14">
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="A falling edge followed by a low level for a period defined by WKUPDBC on the corresponding wake-up input forces the wake-up of the core power supply." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="A rising edge followed by a high level for a period defined by WKUPDBC on the corresponding wake-up input forces the wake-up of the core power supply." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SUPC" edc:cname="SUPC_SR" edc:nzwidth="0x20" edc:access="rrrrrrrr---rrrrr---r---r-rrrrr-r" edc:impl="0xFF1F117D" edc:_addr="0x400531E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SUPC">
            <edc:SFRFieldDef edc:cname="TDOSCSEL" edc:nzwidth="0x1" edc:desc="Timing Domain 32 kHz Oscillator Selection Status">
              <edc:SFRFieldSemantic edc:cname="RC" edc:desc="The timing domain slow clock (TD_SLCK) source is the slow RC oscillator output." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="XTAL" edc:desc="The timing domain slow clock source is the 32.768 kHz crystal oscillator output." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="VDD3V3SMWS" edc:nzwidth="0x1" edc:desc="VDD3V3 Supply Monitor Wake-up Status (cleared by reading SUPC_WUSR)"/>
            <edc:SFRFieldDef edc:cname="CORSMRSTS" edc:nzwidth="0x1" edc:desc="VDDCORE Supply Monitor Reset Status (cleared by reading SUPC_WUSR)"/>
            <edc:SFRFieldDef edc:cname="VDD3V3SMRSTS" edc:nzwidth="0x1" edc:desc="VDD3V3 Supply Monitor Reset Status (cleared by reading SUPC_WUSR)"/>
            <edc:SFRFieldDef edc:cname="VDD3V3SMIS" edc:nzwidth="0x1" edc:desc="VDD3V3 Supply Monitor Interrupt Status (cleared by reading SUPC_ISR)"/>
            <edc:SFRFieldDef edc:cname="VDD3V3SMS" edc:nzwidth="0x1" edc:desc="VDD3V3 Supply Monitor Output Status"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LCDS" edc:nzwidth="0x1" edc:desc="LCD Power Domain Status"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="FWUPS" edc:nzwidth="0x1" edc:desc="Force Wake-up Pin Status"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="LPDBCS0" edc:nzwidth="0x1" edc:desc="Tamper Detection Wake-up Status (cleared by reading SUPC_ISR)"/>
            <edc:SFRFieldDef edc:cname="LPDBCS1" edc:nzwidth="0x1" edc:desc="Tamper Detection Wake-up Status (cleared by reading SUPC_ISR)"/>
            <edc:SFRFieldDef edc:cname="LPDBCS2" edc:nzwidth="0x1" edc:desc="Tamper Detection Wake-up Status (cleared by reading SUPC_ISR)"/>
            <edc:SFRFieldDef edc:cname="LPDBCS3" edc:nzwidth="0x1" edc:desc="Tamper Detection Wake-up Status (cleared by reading SUPC_ISR)"/>
            <edc:SFRFieldDef edc:cname="LPDBCS4" edc:nzwidth="0x1" edc:desc="Tamper Detection Wake-up Status (cleared by reading SUPC_ISR)"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SXFMS" edc:nzwidth="0x2" edc:desc="Slow Crystal Oscillator Frequency Monitor Status (cleared on read)">
              <edc:SFRFieldSemantic edc:cname="GOOD" edc:desc="No frequency error detected." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="FREQ_ERROR" edc:desc="The frequency has not been correct over 4 consecutive monitoring periods but there are still edges detected on the slow crystal oscillator output." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FAIL" edc:desc="No edge detected in the slow crystal oscillator output for at least 2 consecutive monitoring periods." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SXFME" edc:nzwidth="0x1" edc:desc="Slow Crystal Oscillator Frequency Monitor Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="WKUPS" edc:nzwidth="0x1" edc:desc="WKUP Wake-up Status (cleared by reading SUPC_WUSR)"/>
            <edc:SFRFieldDef edc:cname="BADXTS" edc:nzwidth="0x1" edc:desc="Slow Crystal Oscillator Wake-up Status (cleared by reading SUPC_WUSR)"/>
            <edc:SFRFieldDef edc:cname="FWKUPS" edc:nzwidth="0x1" edc:desc="FWUP Wake-up Status (cleared by reading SUPC_WUSR)"/>
            <edc:SFRFieldDef edc:cname="RTTS" edc:nzwidth="0x1" edc:desc="RTT Wake-up Status (cleared by reading SUPC_WUSR)"/>
            <edc:SFRFieldDef edc:cname="RTCS" edc:nzwidth="0x1" edc:desc="RTC Wake-up Status (cleared by reading SUPC_WUSR)"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x400531E8"/>
      <edc:SFRDef ltx:memberofperipheral="SUPC" edc:cname="SUPC_EMR" edc:nzwidth="0x20" edc:access="-------------nnn----------------" edc:impl="0x70000" edc:_addr="0x400531EC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SUPC">
            <edc:AdjustPoint edc:offset="0x10"/>
            <edc:SFRFieldDef edc:cname="FLRSGPBR" edc:nzwidth="0x1" edc:desc="Flash Erase GPBR"/>
            <edc:SFRFieldDef edc:cname="FULLGPBRC" edc:nzwidth="0x1" edc:desc="Full GPBR Clean"/>
            <edc:SFRFieldDef edc:cname="COREBGEN" edc:nzwidth="0x1" edc:desc="VDDCORE Voltage Regulator Bandgap Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SUPC" edc:cname="SUPC_BMR" edc:nzwidth="0x20" edc:access="nnnnnnnn-------------nnn-nnn-nnn" edc:impl="0xFF000777" edc:_addr="0x400531F0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SUPC">
            <edc:SFRFieldDef edc:cname="RTTWKEN" edc:nzwidth="0x1" edc:desc="Real-time Timer Wake-up Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="The RTT alarm signal has no wake-up effect." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="The RTT alarm signal forces the wake-up of the core power supply." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RTCWKEN" edc:nzwidth="0x1" edc:desc="Real-time Clock Wake-up Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="The RTC alarm signal has no wake-up effect." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="The RTC alarm signal forces the wake-up of the core power supply." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="VBATWKEN" edc:nzwidth="0x1" edc:desc="VBAT Supply Monitor Wake-up Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Wake-up on VBAT supply monitor under voltage detection is disabled." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="Wake-up on VBAT supply monitor under voltage detection is enabled." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FWUPEN" edc:nzwidth="0x1" edc:desc="Force Wake-up Pin Wake-up Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="The fwup signal has no wake-up effect." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="The fwup signal forces the wake-up of the core power supply." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CORPORWKEN" edc:nzwidth="0x1" edc:desc="VDDCORE POR Wake-up Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Wake-up on VDDCORE Power-On Reset Event is disabled." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="Wake-up on VDDCORE Power-On Reset Event is enabled." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="VDD3V3SMWKEN" edc:nzwidth="0x1" edc:desc="VDD3V3 Supply Monitor Wake-up Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Wake-up on VDD3V3 supply monitor under voltage detection is disabled." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="Wake-up on VDD3V3 supply monitor under voltage detection is enabled." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="VBATREN" edc:nzwidth="0x1" edc:desc="Battery Voltage Event Report Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Disables the report of event on VBAT voltage." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="Enables the report of event on VBAT voltage." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MRTCOUT" edc:nzwidth="0x1" edc:desc="RTCOUT0 Outputs Drive Mode">
              <edc:SFRFieldSemantic edc:cname="USERDEF" edc:desc="RTCOUT0 output is driven according to the configuration of the field RTC_MR.OUT0." edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BADXTWKEN" edc:nzwidth="0x1" edc:desc="Slow Crystal Oscillator Frequency Error Wake-up Enable"/>
            <edc:AdjustPoint edc:offset="0xD"/>
            <edc:SFRFieldDef edc:cname="KEY" edc:nzwidth="0x8" edc:desc="Password Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation." edc:when="(field &amp; 0xFF) == 0xA5"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SUPC" edc:cname="SUPC_WUSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrr-------r--rrrrrr" edc:impl="0xFFFF013F" edc:_addr="0x400531F4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SUPC">
            <edc:SFRFieldDef edc:cname="WKUPS" edc:nzwidth="0x1" edc:desc="WKUP Wake-up Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="BADXTWKS" edc:nzwidth="0x1" edc:desc="Slow Crystal Oscillator Frequency Error Wake-up Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="FWUPS" edc:nzwidth="0x1" edc:desc="FWUP Wake-up Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="VDD3V3SMWS" edc:nzwidth="0x1" edc:desc="VDD3V3 Supply Monitor Wake-up Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="RTTS" edc:nzwidth="0x1" edc:desc="RTT Wake-up Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="RTCS" edc:nzwidth="0x1" edc:desc="RTC Wake-up Status (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="VDD3V3SMRSTS" edc:nzwidth="0x1" edc:desc="VDD3V3 Supply Monitor Reset Status (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WKUPIS0" edc:nzwidth="0x1" edc:desc="WKUPx Input Wake-up Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="WKUPIS1" edc:nzwidth="0x1" edc:desc="WKUPx Input Wake-up Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="WKUPIS2" edc:nzwidth="0x1" edc:desc="WKUPx Input Wake-up Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="WKUPIS3" edc:nzwidth="0x1" edc:desc="WKUPx Input Wake-up Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="WKUPIS4" edc:nzwidth="0x1" edc:desc="WKUPx Input Wake-up Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="WKUPIS5" edc:nzwidth="0x1" edc:desc="WKUPx Input Wake-up Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="WKUPIS6" edc:nzwidth="0x1" edc:desc="WKUPx Input Wake-up Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="WKUPIS7" edc:nzwidth="0x1" edc:desc="WKUPx Input Wake-up Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="WKUPIS8" edc:nzwidth="0x1" edc:desc="WKUPx Input Wake-up Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="WKUPIS9" edc:nzwidth="0x1" edc:desc="WKUPx Input Wake-up Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="WKUPIS10" edc:nzwidth="0x1" edc:desc="WKUPx Input Wake-up Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="WKUPIS11" edc:nzwidth="0x1" edc:desc="WKUPx Input Wake-up Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="WKUPIS12" edc:nzwidth="0x1" edc:desc="WKUPx Input Wake-up Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="WKUPIS13" edc:nzwidth="0x1" edc:desc="WKUPx Input Wake-up Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="WKUPIS14" edc:nzwidth="0x1" edc:desc="WKUPx Input Wake-up Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="WKUPIS15" edc:nzwidth="0x1" edc:desc="WKUPx Input Wake-up Status (cleared on read)"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SUPC" edc:cname="SUPC_IER" edc:nzwidth="0x20" edc:access="--------------ww-----------wwwww" edc:impl="0x3001F" edc:_addr="0x400531F8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SUPC">
            <edc:SFRFieldDef edc:cname="LPDBC0" edc:nzwidth="0x1" edc:desc="WKUPx Pin Tamper Detection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LPDBC1" edc:nzwidth="0x1" edc:desc="WKUPx Pin Tamper Detection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LPDBC2" edc:nzwidth="0x1" edc:desc="WKUPx Pin Tamper Detection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LPDBC3" edc:nzwidth="0x1" edc:desc="WKUPx Pin Tamper Detection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LPDBC4" edc:nzwidth="0x1" edc:desc="WKUPx Pin Tamper Detection Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0xB"/>
            <edc:SFRFieldDef edc:cname="VDD3V3SMEV" edc:nzwidth="0x1" edc:desc="VDD3V3 Supply Monitor Event Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="VBATSMEV" edc:nzwidth="0x1" edc:desc="VBAT Supply Monitor Event Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SUPC" edc:cname="SUPC_IDR" edc:nzwidth="0x20" edc:access="--------------ww-----------wwwww" edc:impl="0x3001F" edc:_addr="0x400531FC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SUPC">
            <edc:SFRFieldDef edc:cname="LPDBC0" edc:nzwidth="0x1" edc:desc="WKUPx Pin Tamper Detection Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LPDBC1" edc:nzwidth="0x1" edc:desc="WKUPx Pin Tamper Detection Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LPDBC2" edc:nzwidth="0x1" edc:desc="WKUPx Pin Tamper Detection Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LPDBC3" edc:nzwidth="0x1" edc:desc="WKUPx Pin Tamper Detection Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LPDBC4" edc:nzwidth="0x1" edc:desc="WKUPx Pin Tamper Detection Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0xB"/>
            <edc:SFRFieldDef edc:cname="VDD3V3SMEV" edc:nzwidth="0x1" edc:desc="VDD3V3 Supply Monitor Event Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="VBATSMEV" edc:nzwidth="0x1" edc:desc="VBAT Supply Monitor Event Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SUPC" edc:cname="SUPC_IMR" edc:nzwidth="0x20" edc:access="--------------rr-----------rrrrr" edc:impl="0x3001F" edc:_addr="0x40053200">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SUPC">
            <edc:SFRFieldDef edc:cname="LPDBC0" edc:nzwidth="0x1" edc:desc="WKUPx Pin Tamper Detection Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LPDBC1" edc:nzwidth="0x1" edc:desc="WKUPx Pin Tamper Detection Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LPDBC2" edc:nzwidth="0x1" edc:desc="WKUPx Pin Tamper Detection Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LPDBC3" edc:nzwidth="0x1" edc:desc="WKUPx Pin Tamper Detection Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LPDBC4" edc:nzwidth="0x1" edc:desc="WKUPx Pin Tamper Detection Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0xB"/>
            <edc:SFRFieldDef edc:cname="VDD3V3SMEV" edc:nzwidth="0x1" edc:desc="VDD3V3 Supply Monitor Event Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="VBATSMEV" edc:nzwidth="0x1" edc:desc="VBAT Supply Monitor Event Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SUPC" edc:cname="SUPC_ISR" edc:nzwidth="0x20" edc:access="--------------rr-----------rrrrr" edc:impl="0x3001F" edc:_addr="0x40053204">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SUPC">
            <edc:SFRFieldDef edc:cname="LPDBC0" edc:nzwidth="0x1" edc:desc="WKUPx Pin Tamper Detection Interrupt Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="LPDBC1" edc:nzwidth="0x1" edc:desc="WKUPx Pin Tamper Detection Interrupt Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="LPDBC2" edc:nzwidth="0x1" edc:desc="WKUPx Pin Tamper Detection Interrupt Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="LPDBC3" edc:nzwidth="0x1" edc:desc="WKUPx Pin Tamper Detection Interrupt Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="LPDBC4" edc:nzwidth="0x1" edc:desc="WKUPx Pin Tamper Detection Interrupt Status (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0xB"/>
            <edc:SFRFieldDef edc:cname="VDD3V3SMEV" edc:nzwidth="0x1" edc:desc="VDD3V3 Supply Monitor Event Interrupt Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="VBATSMEV" edc:nzwidth="0x1" edc:desc="VBAT Supply Monitor Event Interrupt Status (cleared on read)"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x40053208"/>
      <edc:SFRDef ltx:memberofperipheral="DWDT" edc:cname="WDT0_CR" edc:nzwidth="0x20" edc:access="wwwwwwww-------------------w---w" edc:impl="0xFF000011" edc:_addr="0x40053210">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWDT">
            <edc:SFRFieldDef edc:cname="WDRSTT" edc:nzwidth="0x1" edc:desc="Watchdog Restart"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="LOCKMR" edc:nzwidth="0x1" edc:desc="Lock Mode Register Write Access"/>
            <edc:AdjustPoint edc:offset="0x13"/>
            <edc:SFRFieldDef edc:cname="KEY" edc:nzwidth="0x8" edc:desc="Password">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation." edc:when="(field &amp; 0xFF) == 0xA5"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DWDT" edc:cname="WDT0_MR" edc:nzwidth="0x20" edc:access="-nnn---------------n--n---nn----" edc:impl="0x70001230" edc:_addr="0x40053214">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWDT">
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="PERIODRST" edc:nzwidth="0x1" edc:desc="Period Reset"/>
            <edc:SFRFieldDef edc:cname="RPTHRST" edc:nzwidth="0x1" edc:desc="Repeat Threshold Reset"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="WDNRSTDIS" edc:nzwidth="0x1" edc:desc="Watchdog NRST Disable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="WDDIS" edc:nzwidth="0x1" edc:desc="Watchdog Disable"/>
            <edc:AdjustPoint edc:offset="0xF"/>
            <edc:SFRFieldDef edc:cname="WDIDLEHLT" edc:nzwidth="0x1" edc:desc="Watchdog Idle Halt"/>
            <edc:SFRFieldDef edc:cname="WDDBG0HLT" edc:nzwidth="0x1" edc:desc="Watchdog Core 0 Debug Halt"/>
            <edc:SFRFieldDef edc:cname="WDDBG1HLT" edc:nzwidth="0x1" edc:desc="Watchdog Core 1 Debug Halt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DWDT" edc:cname="WDT0_VR" edc:nzwidth="0x20" edc:access="--------------------rrrrrrrrrrrr" edc:impl="0xFFF" edc:_addr="0x40053218">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWDT">
            <edc:SFRFieldDef edc:cname="COUNTER" edc:nzwidth="0xC" edc:desc="Watchdog Down Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DWDT" edc:cname="WDT0_WL" edc:nzwidth="0x20" edc:access="----nnnnnnnnnnnn----nnnnnnnnnnnn" edc:impl="0xFFF0FFF" edc:_addr="0x4005321C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWDT">
            <edc:SFRFieldDef edc:cname="PERIOD" edc:nzwidth="0xC" edc:desc="Watchdog Period"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="RPTH" edc:nzwidth="0xC" edc:desc="Repeat Threshold"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DWDT" edc:cname="WDT0_IL" edc:nzwidth="0x20" edc:access="-------------nnn----nnnnnnnnnnnn" edc:impl="0x70FFF" edc:_addr="0x40053220">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWDT">
            <edc:SFRFieldDef edc:cname="LVLTH" edc:nzwidth="0xC" edc:desc="Level Threshold"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="PRESC" edc:nzwidth="0x3" edc:desc="Prescaler Ratio">
              <edc:SFRFieldSemantic edc:cname="RATIO128" edc:desc="The watchdog counter decreased when the prescaler reaches 128." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RATIO64" edc:desc="The watchdog counter decreased when the prescaler reaches 64." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RATIO32" edc:desc="The watchdog counter decreased when the prescaler reaches 32." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RATIO16" edc:desc="The watchdog counter decreased when the prescaler reaches 16." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RATIO8" edc:desc="The watchdog counter decreased when the prescaler reaches 8." edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RATIO4" edc:desc="The watchdog counter decreased when the prescaler reaches 4." edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RATIO2" edc:desc="The watchdog counter decreased when the prescaler reaches 2." edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="RATIO1" edc:desc="The watchdog counter decreased when the prescaler reaches 1." edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DWDT" edc:cname="WDT0_IER" edc:nzwidth="0x20" edc:access="--------------------------wwwwww" edc:impl="0x3F" edc:_addr="0x40053224">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWDT">
            <edc:SFRFieldDef edc:cname="PERINT" edc:nzwidth="0x1" edc:desc="Overflow Period Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RPTHINT" edc:nzwidth="0x1" edc:desc="Reload Repeat Period Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LVLINT" edc:nzwidth="0x1" edc:desc="Interrupt Level Threshold Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="W1PERINT" edc:nzwidth="0x1" edc:desc="Watchdog 1 Overflow Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="W1RPTHINT" edc:nzwidth="0x1" edc:desc="Watchdog 1 Repeat Threshold Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RLDERR" edc:nzwidth="0x1" edc:desc="Reload Command Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DWDT" edc:cname="WDT0_IDR" edc:nzwidth="0x20" edc:access="--------------------------wwwwww" edc:impl="0x3F" edc:_addr="0x40053228">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWDT">
            <edc:SFRFieldDef edc:cname="PERINT" edc:nzwidth="0x1" edc:desc="Overflow Period Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RPTHINT" edc:nzwidth="0x1" edc:desc="Reload Repeat Period Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LVLINT" edc:nzwidth="0x1" edc:desc="Interrupt Level Threshold Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="W1PERINT" edc:nzwidth="0x1" edc:desc="Watchdog 1 Overflow Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="W1RPTHINT" edc:nzwidth="0x1" edc:desc="Watchdog 1 Repeat Threshold Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RLDERR" edc:nzwidth="0x1" edc:desc="Reload Command Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DWDT" edc:cname="WDT0_ISR" edc:nzwidth="0x20" edc:access="--------------------------rrrrrr" edc:impl="0x3F" edc:_addr="0x4005322C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWDT">
            <edc:SFRFieldDef edc:cname="PERINT" edc:nzwidth="0x1" edc:desc="Overflow Period Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="RPTHINT" edc:nzwidth="0x1" edc:desc="Reload Repeat Period Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="LVLINT" edc:nzwidth="0x1" edc:desc="Interrupt Level Threshold Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="W1PERINT" edc:nzwidth="0x1" edc:desc="Watchdog 1 Overflow Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="W1RPTHINT" edc:nzwidth="0x1" edc:desc="Watchdog 1 Repeat Threshold Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="RLDERR" edc:nzwidth="0x1" edc:desc="Reload Command Error Status (cleared on read)"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DWDT" edc:cname="WDT0_IMR" edc:nzwidth="0x20" edc:access="--------------------------rrrrrr" edc:impl="0x3F" edc:_addr="0x40053230">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWDT">
            <edc:SFRFieldDef edc:cname="PERINT" edc:nzwidth="0x1" edc:desc="Overflow Period Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RPTHINT" edc:nzwidth="0x1" edc:desc="Reload Repeat Period Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LVLINT" edc:nzwidth="0x1" edc:desc="Interrupt Level Threshold Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="W1PERINT" edc:nzwidth="0x1" edc:desc="Watchdog 1 Overflow Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="W1RPTHINT" edc:nzwidth="0x1" edc:desc="Watchdog 1 Repeat Threshold Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RLDERR" edc:nzwidth="0x1" edc:desc="Reload Command Error Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DWDT" edc:cname="WDT1_LVLLIM" edc:nzwidth="0x20" edc:access="----nnnnnnnnnnnn----nnnnnnnnnnnn" edc:impl="0xFFF0FFF" edc:_addr="0x40053234">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWDT">
            <edc:SFRFieldDef edc:cname="LVLMIN" edc:nzwidth="0xC" edc:desc="Minimum Level"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="LVLMAX" edc:nzwidth="0xC" edc:desc="Maximum Level"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DWDT" edc:cname="WDT1_RLIM" edc:nzwidth="0x20" edc:access="----nnnnnnnnnnnn----nnnnnnnnnnnn" edc:impl="0xFFF0FFF" edc:_addr="0x40053238">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWDT">
            <edc:SFRFieldDef edc:cname="RPTHMIN" edc:nzwidth="0xC" edc:desc="Minimum Repeat Threshold"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="RPTHMAX" edc:nzwidth="0xC" edc:desc="Maximum Repeat Threshold"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DWDT" edc:cname="WDT1_PLIM" edc:nzwidth="0x20" edc:access="----nnnnnnnnnnnn----nnnnnnnnnnnn" edc:impl="0xFFF0FFF" edc:_addr="0x4005323C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DWDT">
            <edc:SFRFieldDef edc:cname="PERMIN" edc:nzwidth="0xC" edc:desc="Minimum Period"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="PERMAX" edc:nzwidth="0xC" edc:desc="Maximum Period"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x67ACDC0" edc:_addr="0x40053240"/>
      <edc:SFRDef ltx:memberofperipheral="PMC" edc:cname="PMC_SCER" edc:nzwidth="0x20" edc:access="--------wwww--ww----wwww--------" edc:impl="0xF30F00" edc:_addr="0x46800000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="PCK0" edc:nzwidth="0x1" edc:desc="Programmable Clock 0 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PCK1" edc:nzwidth="0x1" edc:desc="Programmable Clock 1 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PCK2" edc:nzwidth="0x1" edc:desc="Programmable Clock 2 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PCK3" edc:nzwidth="0x1" edc:desc="Programmable Clock 3 Output Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CPCK" edc:nzwidth="0x1" edc:desc="Coprocessor (Second Processor) Clocks Enable"/>
            <edc:SFRFieldDef edc:cname="CPBMCK" edc:nzwidth="0x1" edc:desc="Coprocessor Bus Master Clocks Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CPKEY" edc:nzwidth="0x4" edc:desc="Coprocessor Clocks Enable Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="This field must be written to 0xA to validate CPBMCK and CPCK." edc:when="(field &amp; 0xF) == 0x0A"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMC" edc:cname="PMC_SCDR" edc:nzwidth="0x20" edc:access="--------wwww--ww----wwww--------" edc:impl="0xF30F00" edc:_addr="0x46800004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="PCK0" edc:nzwidth="0x1" edc:desc="Programmable Clock 0 Output Disable"/>
            <edc:SFRFieldDef edc:cname="PCK1" edc:nzwidth="0x1" edc:desc="Programmable Clock 1 Output Disable"/>
            <edc:SFRFieldDef edc:cname="PCK2" edc:nzwidth="0x1" edc:desc="Programmable Clock 2 Output Disable"/>
            <edc:SFRFieldDef edc:cname="PCK3" edc:nzwidth="0x1" edc:desc="Programmable Clock 3 Output Disable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CPCK" edc:nzwidth="0x1" edc:desc="Coprocessor (Second Processor) Clocks Disable"/>
            <edc:SFRFieldDef edc:cname="CPBMCK" edc:nzwidth="0x1" edc:desc="Coprocessor Bus Master Clocks Disable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CPKEY" edc:nzwidth="0x4" edc:desc="Coprocessor Clocks Enable Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="This field must be written to 0xA to validate CPBMCK and CPCK." edc:when="(field &amp; 0xF) == 0x0A"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMC" edc:cname="PMC_SCSR" edc:nzwidth="0x20" edc:access="--------------rr----rrrr------rr" edc:impl="0x30F03" edc:_addr="0x46800008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="CPU_CLK0S" edc:nzwidth="0x1" edc:desc="CPU_CLK Status for Core 0"/>
            <edc:SFRFieldDef edc:cname="CPU_CLK1S" edc:nzwidth="0x1" edc:desc="CPU_CLK Status for Core 1"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="PCK0" edc:nzwidth="0x1" edc:desc="Programmable Clock 0 Output Status"/>
            <edc:SFRFieldDef edc:cname="PCK1" edc:nzwidth="0x1" edc:desc="Programmable Clock 1 Output Status"/>
            <edc:SFRFieldDef edc:cname="PCK2" edc:nzwidth="0x1" edc:desc="Programmable Clock 2 Output Status"/>
            <edc:SFRFieldDef edc:cname="PCK3" edc:nzwidth="0x1" edc:desc="Programmable Clock 3 Output Status"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CPCK" edc:nzwidth="0x1" edc:desc="Coprocessor (Second Processor) Clocks Status"/>
            <edc:SFRFieldDef edc:cname="CPBMCK" edc:nzwidth="0x1" edc:desc="Coprocessor Bus Master Clocks Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMC" edc:cname="PMC_PLL_CTRL0" edc:nzwidth="0x20" edc:access="nnnnn-------nnnnnnnn----nnnnnnnn" edc:impl="0xF80FF0FF" edc:_addr="0x4680000C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="DIVPMC0" edc:nzwidth="0x8" edc:desc="Divider for PMC output 0"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="DIVPMC1" edc:nzwidth="0x8" edc:desc="Divider for PMC output 1 (PLLA only)"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="PLLMS" edc:nzwidth="0x1" edc:desc="PLL Multiplexer Select"/>
            <edc:SFRFieldDef edc:cname="ENPLL" edc:nzwidth="0x1" edc:desc="Enable PLL"/>
            <edc:SFRFieldDef edc:cname="ENPLLO0" edc:nzwidth="0x1" edc:desc="Enable PLL Clock Output 0"/>
            <edc:SFRFieldDef edc:cname="ENPLLO1" edc:nzwidth="0x1" edc:desc="Enable PLL Clock Output 1 (PLLA only)"/>
            <edc:SFRFieldDef edc:cname="ENLOCK" edc:nzwidth="0x1" edc:desc="Enable PLL Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMC" edc:cname="PMC_PLL_CTRL1" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x46800010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="MUL" edc:nzwidth="0x10" edc:desc="Multiplier Factor Value for PLLA, B and C"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMC" edc:cname="PMC_PLL_CTRL2" edc:nzwidth="0x20" edc:access="----------nnnnnnnnnnnnnnnnnnnnnn" edc:impl="0x3FFFFF" edc:_addr="0x46800014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="FRACR" edc:nzwidth="0x16" edc:desc="Fractional Loop Divider Setting"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMC" edc:cname="PMC_PLL_SSR" edc:nzwidth="0x20" edc:access="---n----nnnnnnnnnnnnnnnnnnnnnnnn" edc:impl="0x10FFFFFF" edc:_addr="0x46800018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="STEP" edc:nzwidth="0x10" edc:desc="Spread Spectrum Step Size"/>
            <edc:SFRFieldDef edc:cname="NSTEP" edc:nzwidth="0x8" edc:desc="Spread Spectrum Number of Step"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ENSPREAD" edc:nzwidth="0x1" edc:desc="Spread Spectrum Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMC" edc:cname="PMC_PLL_ACR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnn----nnnnnnnnnnnn" edc:impl="0xFFFF0FFF" edc:_addr="0x4680001C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="CONTROL" edc:nzwidth="0xC" edc:desc="PLL Control Value Selection"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="LOCK_THR" edc:nzwidth="0x8" edc:desc="PLL Lock Threshold Value Selection"/>
            <edc:SFRFieldDef edc:cname="LOOP_FILTER" edc:nzwidth="0x8" edc:desc="PLL Loop Filter Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMC" edc:cname="PMC_PLL_UPDT" edc:nzwidth="0x20" edc:access="--------nnnnnnnn-------n----nnnn" edc:impl="0xFF010F" edc:_addr="0x46800020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="ID" edc:nzwidth="0x4" edc:desc="PLL ID"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="UPDATE" edc:nzwidth="0x1" edc:desc="PLL Setting Update (write-only)"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="STUPTIM" edc:nzwidth="0x8" edc:desc="Start-up Time"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMC" edc:cname="CKGR_MOR" edc:nzwidth="0x20" edc:access="----nnnnnnnnnnnnnnnnnnnn----nnnn" edc:impl="0xFFFFF0F" edc:_addr="0x46800024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="MOSCXTEN" edc:nzwidth="0x1" edc:desc="Main Crystal Oscillator Enable"/>
            <edc:SFRFieldDef edc:cname="MOSCXTBY" edc:nzwidth="0x1" edc:desc="12 to 48 MHz Crystal Oscillator Bypass"/>
            <edc:SFRFieldDef edc:cname="WAITMODE" edc:nzwidth="0x1" edc:desc="Wait Mode Command (write-only)"/>
            <edc:SFRFieldDef edc:cname="MOSCRCEN" edc:nzwidth="0x1" edc:desc="Main RC Oscillator Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="MOSCXTST" edc:nzwidth="0x8" edc:desc="Main Crystal Oscillator Start-up Time"/>
            <edc:SFRFieldDef edc:cname="KEY" edc:nzwidth="0x8" edc:desc="Write Access Password">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation. Always reads as 0." edc:when="(field &amp; 0xFF) == 0x37"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MOSCSEL" edc:nzwidth="0x1" edc:desc="Main Clock Oscillator Selection">
              <edc:SFRFieldSemantic edc:cname="RC" edc:desc="The main RC oscillator is selected." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="XT" edc:desc="The main crystal oscillator is selected." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CFDEN" edc:nzwidth="0x1" edc:desc="Clock Failure Detector Enable"/>
            <edc:SFRFieldDef edc:cname="XT32KFME" edc:nzwidth="0x1" edc:desc="32.768 kHz Crystal Oscillator Frequency Monitoring Enable"/>
            <edc:SFRFieldDef edc:cname="BMCKRST" edc:nzwidth="0x1" edc:desc="Bad MCK0 Clock Reset Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMC" edc:cname="CKGR_MCFR" edc:nzwidth="0x20" edc:access="-------n---n---nnnnnnnnnnnnnnnnn" edc:impl="0x111FFFF" edc:_addr="0x46800028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="MAINF" edc:nzwidth="0x10" edc:desc="Main Clock Frequency"/>
            <edc:SFRFieldDef edc:cname="MAINFRDY" edc:nzwidth="0x1" edc:desc="Main Clock Frequency Measure Ready"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RCMEAS" edc:nzwidth="0x1" edc:desc="RC Oscillator Frequency Measure (write-only)"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CCSS" edc:nzwidth="0x1" edc:desc="Counter Clock Source Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMC" edc:cname="PMC_CPU_CKR" edc:nzwidth="0x20" edc:access="-----nnnnnnn-nnn---------nnn--nn" edc:impl="0x7F70073" edc:_addr="0x4680002C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="CSS" edc:nzwidth="0x2" edc:desc="Processor (CPU_CLK0) and Master Clock (MCK0) Source Selection">
              <edc:SFRFieldSemantic edc:cname="MD_SLOW_CLK" edc:desc="MD_SLCK is selected" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="MAINCK" edc:desc="MAINCK is selected" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="PLLACK1" edc:desc="PLLACK1 is selected" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="PLLBCK" edc:desc="PLLBCK is selected" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PRES" edc:nzwidth="0x3" edc:desc="Processor (CPU_CLK0) and Master Clock (MCK0) Prescaler">
              <edc:SFRFieldSemantic edc:cname="CLK_1" edc:desc="Selected clock" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="CLK_2" edc:desc="Selected clock divided by 2" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLK_4" edc:desc="Selected clock divided by 4" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="CLK_8" edc:desc="Selected clock divided by 8" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="CLK_16" edc:desc="Selected clock divided by 16" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="CLK_32" edc:desc="Selected clock divided by 32" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="CLK_64" edc:desc="Selected clock divided by 64" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="CLK_3" edc:desc="Selected clock divided by 3" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="CPCSS" edc:nzwidth="0x3" edc:desc="Coprocessor MCK1 Source Selection">
              <edc:SFRFieldSemantic edc:cname="MD_SLOW_CLK" edc:desc="MD_SLCK is selected" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="MAINCK" edc:desc="MAINCK is selected" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="MCK0" edc:desc="MCK0 is selected" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="PLLACK1" edc:desc="PLLACK1 is selected" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="PLLBCK" edc:desc="PLLBCK is selected" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="PLLCCK" edc:desc="PLLCCK is selected" edc:when="(field &amp; 0x7) == 0x05"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CPPRES" edc:nzwidth="0x4" edc:desc="Coprocessor MCK1 Prescaler">
              <edc:SFRFieldSemantic edc:cname="CLK_1" edc:desc="Selected clock" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="CLK_2" edc:desc="Selected clock divided by 2" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLK_3" edc:desc="Selected clock divided by 3" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="CLK_4" edc:desc="Selected clock divided by 4" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="CLK_5" edc:desc="Selected clock divided by 5" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="CLK_6" edc:desc="Selected clock divided by 6" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="CLK_7" edc:desc="Selected clock divided by 7" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="CLK_8" edc:desc="Selected clock divided by 8" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="CLK_9" edc:desc="Selected clock divided by 9" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="CLK_10" edc:desc="Selected clock divided by 10" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="CLK_11" edc:desc="Selected clock divided by 11" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="CLK_12" edc:desc="Selected clock divided by 12" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="CLK_13" edc:desc="Selected clock divided by 13" edc:when="(field &amp; 0xF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="CLK_14" edc:desc="Selected clock divided by 14" edc:when="(field &amp; 0xF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="CLK_15" edc:desc="Selected clock divided by 15" edc:when="(field &amp; 0xF) == 0x0E"/>
              <edc:SFRFieldSemantic edc:cname="CLK_16" edc:desc="Selected clock divided by 16" edc:when="(field &amp; 0xF) == 0x0F"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RATIO_MCK0DIV" edc:nzwidth="0x1" edc:desc="MCK0 Clock Frequency Division for MCK0DIV Clock"/>
            <edc:SFRFieldDef edc:cname="RATIO_MCK1DIV" edc:nzwidth="0x1" edc:desc="MCK1 Clock Frequency Division for MCK1DIV Clock"/>
            <edc:SFRFieldDef edc:cname="RATIO_MCK0DIV2" edc:nzwidth="0x1" edc:desc="MCK0 Clock Frequency Division for MCK0DIV2 Clock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x14" edc:_addr="0x46800030"/>
      <edc:SFRDef ltx:memberofperipheral="PMC" edc:cname="PMC_PCK0" edc:nzwidth="0x20" edc:access="----------------nnnnnnnn---nnnnn" edc:impl="0xFF1F" edc:_addr="0x46800044">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="CSS" edc:nzwidth="0x5" edc:desc="Programmable Clock Source Selection">
              <edc:SFRFieldSemantic edc:cname="MD_SLOW_CLK" edc:desc="MD_SLCK is selected" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TD_SLOW_CLOCK" edc:desc="TD_SLCK is selected" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="MAINCK" edc:desc="MAINCK is selected" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="MCK0" edc:desc="MCK0 is selected" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="PLLACK1" edc:desc="PLLACK1 is selected." edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="PLLBCK" edc:desc="PLLBCK is selected." edc:when="(field &amp; 0x1F) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="PLLCCK" edc:desc="PLLCCK is selected." edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="PLLCSRC" edc:desc="PLLCSRC is selected." edc:when="(field &amp; 0x1F) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PRES" edc:nzwidth="0x8" edc:desc="Programmable Clock Prescaler"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMC" edc:cname="PMC_PCK1" edc:nzwidth="0x20" edc:access="----------------nnnnnnnn---nnnnn" edc:impl="0xFF1F" edc:_addr="0x46800048">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="CSS" edc:nzwidth="0x5" edc:desc="Programmable Clock Source Selection">
              <edc:SFRFieldSemantic edc:cname="MD_SLOW_CLK" edc:desc="MD_SLCK is selected" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TD_SLOW_CLOCK" edc:desc="TD_SLCK is selected" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="MAINCK" edc:desc="MAINCK is selected" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="MCK0" edc:desc="MCK0 is selected" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="PLLACK1" edc:desc="PLLACK1 is selected." edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="PLLBCK" edc:desc="PLLBCK is selected." edc:when="(field &amp; 0x1F) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="PLLCCK" edc:desc="PLLCCK is selected." edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="PLLCSRC" edc:desc="PLLCSRC is selected." edc:when="(field &amp; 0x1F) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PRES" edc:nzwidth="0x8" edc:desc="Programmable Clock Prescaler"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMC" edc:cname="PMC_PCK2" edc:nzwidth="0x20" edc:access="----------------nnnnnnnn---nnnnn" edc:impl="0xFF1F" edc:_addr="0x4680004C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="CSS" edc:nzwidth="0x5" edc:desc="Programmable Clock Source Selection">
              <edc:SFRFieldSemantic edc:cname="MD_SLOW_CLK" edc:desc="MD_SLCK is selected" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TD_SLOW_CLOCK" edc:desc="TD_SLCK is selected" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="MAINCK" edc:desc="MAINCK is selected" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="MCK0" edc:desc="MCK0 is selected" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="PLLACK1" edc:desc="PLLACK1 is selected." edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="PLLBCK" edc:desc="PLLBCK is selected." edc:when="(field &amp; 0x1F) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="PLLCCK" edc:desc="PLLCCK is selected." edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="PLLCSRC" edc:desc="PLLCSRC is selected." edc:when="(field &amp; 0x1F) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PRES" edc:nzwidth="0x8" edc:desc="Programmable Clock Prescaler"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x14" edc:_addr="0x46800050"/>
      <edc:SFRDef ltx:memberofperipheral="PMC" edc:cname="PMC_IER" edc:nzwidth="0x20" edc:access="--------w-w--www----wwww---ww--w" edc:impl="0xA70F19" edc:_addr="0x46800064">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="MOSCXTS" edc:nzwidth="0x1" edc:desc="Main Crystal Oscillator Status Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MCKRDY" edc:nzwidth="0x1" edc:desc="Master Clock 0 Ready Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CPMCKRDY" edc:nzwidth="0x1" edc:desc="Coprocessor Master Clock Ready Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PCKRDY0" edc:nzwidth="0x1" edc:desc="Programmable Clock Ready 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PCKRDY1" edc:nzwidth="0x1" edc:desc="Programmable Clock Ready 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PCKRDY2" edc:nzwidth="0x1" edc:desc="Programmable Clock Ready 2 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PCKRDY3" edc:nzwidth="0x1" edc:desc="Programmable Clock Ready 3 Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="MOSCSELS" edc:nzwidth="0x1" edc:desc="Main Clock Source Oscillator Selection Status Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MOSCRCS" edc:nzwidth="0x1" edc:desc="Main RC Oscillator Status Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CFDEV" edc:nzwidth="0x1" edc:desc="Clock Failure Detector Event Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="XT32KERR" edc:nzwidth="0x1" edc:desc="32.768 kHz Crystal Oscillator Error Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MCKMON" edc:nzwidth="0x1" edc:desc="Master Clock 0 Clock Monitor Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMC" edc:cname="PMC_IDR" edc:nzwidth="0x20" edc:access="--------w-w--www----wwww---ww--w" edc:impl="0xA70F19" edc:_addr="0x46800068">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="MOSCXTS" edc:nzwidth="0x1" edc:desc="Main Crystal Oscillator Status Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MCKRDY" edc:nzwidth="0x1" edc:desc="Master Clock 0 Ready Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CPMCKRDY" edc:nzwidth="0x1" edc:desc="Coprocessor Master Clock Ready Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PCKRDY0" edc:nzwidth="0x1" edc:desc="Programmable Clock Ready 0 Interrupt DIsable"/>
            <edc:SFRFieldDef edc:cname="PCKRDY1" edc:nzwidth="0x1" edc:desc="Programmable Clock Ready 1 Interrupt DIsable"/>
            <edc:SFRFieldDef edc:cname="PCKRDY2" edc:nzwidth="0x1" edc:desc="Programmable Clock Ready 2 Interrupt DIsable"/>
            <edc:SFRFieldDef edc:cname="PCKRDY3" edc:nzwidth="0x1" edc:desc="Programmable Clock Ready 3 Interrupt DIsable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="MOSCSELS" edc:nzwidth="0x1" edc:desc="Main Clock Source Oscillator Selection Status Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="MOSCRCS" edc:nzwidth="0x1" edc:desc="Main RC Status Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CFDEV" edc:nzwidth="0x1" edc:desc="Clock Failure Detector Event Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="XT32KERR" edc:nzwidth="0x1" edc:desc="32.768 kHz Crystal Oscillator Error Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MCKMON" edc:nzwidth="0x1" edc:desc="Master Clock 0 Clock Monitor Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMC" edc:cname="PMC_SR" edc:nzwidth="0x20" edc:access="------rrr-rrrrrr----rrrrr--rr--r" edc:impl="0x3BF0F99" edc:_addr="0x4680006C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="MOSCXTS" edc:nzwidth="0x1" edc:desc="Main Crystal Oscillator Status"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MCKRDY" edc:nzwidth="0x1" edc:desc="Master Clock 0 Status"/>
            <edc:SFRFieldDef edc:cname="CPMCKRDY" edc:nzwidth="0x1" edc:desc="Coprocessor Master Clock Status"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="OSCSELS" edc:nzwidth="0x1" edc:desc="Monitoring Domain Slow Clock Source Oscillator Selection"/>
            <edc:SFRFieldDef edc:cname="PCKRDY0" edc:nzwidth="0x1" edc:desc="Programmable Clock Ready Status"/>
            <edc:SFRFieldDef edc:cname="PCKRDY1" edc:nzwidth="0x1" edc:desc="Programmable Clock Ready Status"/>
            <edc:SFRFieldDef edc:cname="PCKRDY2" edc:nzwidth="0x1" edc:desc="Programmable Clock Ready Status"/>
            <edc:SFRFieldDef edc:cname="PCKRDY3" edc:nzwidth="0x1" edc:desc="Programmable Clock Ready Status"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="MOSCSELS" edc:nzwidth="0x1" edc:desc="Main Clock Source Oscillator Selection Status"/>
            <edc:SFRFieldDef edc:cname="MOSCRCS" edc:nzwidth="0x1" edc:desc="Main RC Oscillator Status"/>
            <edc:SFRFieldDef edc:cname="CFDEV" edc:nzwidth="0x1" edc:desc="Clock Failure Detector Event"/>
            <edc:SFRFieldDef edc:cname="CFDS" edc:nzwidth="0x1" edc:desc="Clock Failure Detector Status"/>
            <edc:SFRFieldDef edc:cname="FOS" edc:nzwidth="0x1" edc:desc="Clock Failure Detector Fault Output Status"/>
            <edc:SFRFieldDef edc:cname="XT32KERR" edc:nzwidth="0x1" edc:desc="Slow Crystal Oscillator Error"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MCKMON" edc:nzwidth="0x1" edc:desc="Master Clock 0 Clock Monitor Error"/>
            <edc:SFRFieldDef edc:cname="GCLKRDY" edc:nzwidth="0x1" edc:desc="GCLK Ready"/>
            <edc:SFRFieldDef edc:cname="PLL_INT" edc:nzwidth="0x1" edc:desc="PLL Interrupt Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMC" edc:cname="PMC_IMR" edc:nzwidth="0x20" edc:access="--------r-r--rrr----rrrr---rr--r" edc:impl="0xA70F19" edc:_addr="0x46800070">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="MOSCXTS" edc:nzwidth="0x1" edc:desc="Main Crystal Oscillator Status Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MCKRDY" edc:nzwidth="0x1" edc:desc="Master Clock 0 Ready Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="CPMCKRDY" edc:nzwidth="0x1" edc:desc="Coprocessor Master Clock Ready Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PCKRDY0" edc:nzwidth="0x1" edc:desc="Programmable Clock Ready 0 Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="PCKRDY1" edc:nzwidth="0x1" edc:desc="Programmable Clock Ready 1 Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="PCKRDY2" edc:nzwidth="0x1" edc:desc="Programmable Clock Ready 2 Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="PCKRDY3" edc:nzwidth="0x1" edc:desc="Programmable Clock Ready 3 Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="MOSCSELS" edc:nzwidth="0x1" edc:desc="Main Clock Source Oscillator Selection Status Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="MOSCRCS" edc:nzwidth="0x1" edc:desc="Main RC Status Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="CFDEV" edc:nzwidth="0x1" edc:desc="Clock Failure Detector Event Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="XT32KERR" edc:nzwidth="0x1" edc:desc="32.768 kHz Crystal Oscillator Error Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MCKMON" edc:nzwidth="0x1" edc:desc="Master Clock 0 Monitor Error Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMC" edc:cname="PMC_FSMR" edc:nzwidth="0x20" edc:access="--------nnnnnnnn----------------" edc:impl="0xFF0000" edc:_addr="0x46800074">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:AdjustPoint edc:offset="0x10"/>
            <edc:SFRFieldDef edc:cname="RTTAL" edc:nzwidth="0x1" edc:desc="RTT Alarm Enable"/>
            <edc:SFRFieldDef edc:cname="RTCAL" edc:nzwidth="0x1" edc:desc="RTC Alarm Enable"/>
            <edc:SFRFieldDef edc:cname="XTFA" edc:nzwidth="0x1" edc:desc="32KHz Crystal Failure Alarm Enable"/>
            <edc:SFRFieldDef edc:cname="SMAL" edc:nzwidth="0x1" edc:desc="Supply Monitor Alarm Enable"/>
            <edc:SFRFieldDef edc:cname="LPM" edc:nzwidth="0x1" edc:desc="Low Power Mode"/>
            <edc:SFRFieldDef edc:cname="FLPM" edc:nzwidth="0x2" edc:desc="Flash Low-power Mode">
              <edc:SFRFieldSemantic edc:cname="FLASH_STANDBY" edc:desc="Flash is in Standby Mode when system enters Wait Mode" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="FLASH_DEEP_POWERDOWN" edc:desc="Flash is in Deep-powerdown mode when system enters Wait Mode" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FLASH_IDLE" edc:desc="Idle mode" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FFLPM" edc:nzwidth="0x1" edc:desc="Force Flash Low-power Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMC" edc:cname="PMC_WCR" edc:nzwidth="0x20" edc:access="-------n---n--nn------------nnnn" edc:impl="0x113000F" edc:_addr="0x46800078">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="WKPIONB" edc:nzwidth="0x4" edc:desc="Wake-up Input Number"/>
            <edc:AdjustPoint edc:offset="0xC"/>
            <edc:SFRFieldDef edc:cname="EN" edc:nzwidth="0x1" edc:desc="Wake-up Input Enable"/>
            <edc:SFRFieldDef edc:cname="WIP" edc:nzwidth="0x1" edc:desc="Wake-up Input Polarity"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="WIEN1" edc:nzwidth="0x1" edc:desc="Wake-up Input Enable 1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x1" edc:desc="Command"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMC" edc:cname="PMC_FOCR" edc:nzwidth="0x20" edc:access="-------------------------------w" edc:impl="0x1" edc:_addr="0x4680007C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="FOCLR" edc:nzwidth="0x1" edc:desc="Fault Output Clear"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMC" edc:cname="PMC_CPFSMR" edc:nzwidth="0x20" edc:access="------------nnnn----------------" edc:impl="0xF0000" edc:_addr="0x46800080">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:AdjustPoint edc:offset="0x10"/>
            <edc:SFRFieldDef edc:cname="RTTAL" edc:nzwidth="0x1" edc:desc="RTT Alarm Enable"/>
            <edc:SFRFieldDef edc:cname="RTCAL" edc:nzwidth="0x1" edc:desc="RTC Alarm Enable"/>
            <edc:SFRFieldDef edc:cname="XTFA" edc:nzwidth="0x1" edc:desc="32KHz Crystal Failure Alarm Enable"/>
            <edc:SFRFieldDef edc:cname="SMAL" edc:nzwidth="0x1" edc:desc="Supply Monitor Alarm Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMC" edc:cname="PMC_WPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn------nn" edc:impl="0xFFFFFF03" edc:_addr="0x46800084">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="WPEN" edc:nzwidth="0x1" edc:desc="Write Protection Enable"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:nzwidth="0x1" edc:desc="Write Protection Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPEN bit. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x504D43"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMC" edc:cname="PMC_WPSR" edc:nzwidth="0x20" edc:access="--------rrrrrrrrrrrrrrrr-------r" edc:impl="0xFFFF01" edc:_addr="0x46800088">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="WPVS" edc:nzwidth="0x1" edc:desc="Write Protection Violation Status"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:nzwidth="0x10" edc:desc="Write Protection Violation Source"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMC" edc:cname="PMC_PCR" edc:nzwidth="0x20" edc:access="n-nnnnnnnnnnnnnn---nnnnn-nnnnnnn" edc:impl="0xBFFF1F7F" edc:_addr="0x4680008C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="PID" edc:nzwidth="0x7" edc:desc="Peripheral ID"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="GCLKCSS" edc:nzwidth="0x5" edc:desc="Generic Clock Source Selection">
              <edc:SFRFieldSemantic edc:cname="MD_SLOW_CLK" edc:desc="MD_SLCK is selected" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TD_SLOW_CLOCK" edc:desc="TD_SLCK is selected" edc:when="(field &amp; 0x1F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="MAINCK" edc:desc="MAINCK is selected" edc:when="(field &amp; 0x1F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="MCK0" edc:desc="MCK0 is selected" edc:when="(field &amp; 0x1F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="PLLACK1" edc:desc="PLLACK1 is selected." edc:when="(field &amp; 0x1F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="PLLBCK" edc:desc="PLLBCK is selected." edc:when="(field &amp; 0x1F) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="PLLCCK" edc:desc="PLLCCK is selected." edc:when="(field &amp; 0x1F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="PLLCSRC" edc:desc="PLLCSRC is selected." edc:when="(field &amp; 0x1F) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="MCKID" edc:nzwidth="0x4" edc:desc="Master Clock Index (Read-only)"/>
            <edc:SFRFieldDef edc:cname="GCLKDIV" edc:nzwidth="0x8" edc:desc="Generic Clock Division Ratio"/>
            <edc:SFRFieldDef edc:cname="EN" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="GCLKEN" edc:nzwidth="0x1" edc:desc="Generic Clock Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x1" edc:desc="Command"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMC" edc:cname="PMC_OCR" edc:nzwidth="0x20" edc:access="--------nnnnnnnn----------------" edc:impl="0xFF0000" edc:_addr="0x46800090">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:AdjustPoint edc:offset="0x10"/>
            <edc:SFRFieldDef edc:cname="CAL12" edc:nzwidth="0x7" edc:desc="Main RC Oscillator Calibration Bits"/>
            <edc:SFRFieldDef edc:cname="SEL12" edc:nzwidth="0x1" edc:desc="Selection of Main RC Oscillator Calibration Bits"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMC" edc:cname="PMC_SLPWK_AIPR" edc:nzwidth="0x20" edc:access="-------------------------------r" edc:impl="0x1" edc:_addr="0x46800094">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="AIP" edc:nzwidth="0x1" edc:desc="Activity In Progress"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMC" edc:cname="PMC_SLPWKCR" edc:nzwidth="0x20" edc:access="---n-----------n---n-----nnnnnnn" edc:impl="0x1001107F" edc:_addr="0x46800098">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="PID" edc:nzwidth="0x7" edc:desc="Peripheral ID"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x1" edc:desc="Command"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ASR" edc:nzwidth="0x1" edc:desc="Activity Status Register"/>
            <edc:AdjustPoint edc:offset="0xB"/>
            <edc:SFRFieldDef edc:cname="SLPWKSR" edc:nzwidth="0x1" edc:desc="Partial Wake-up Sleep Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4680009C"/>
      <edc:SFRDef ltx:memberofperipheral="PMC" edc:cname="PMC_MCKLIM" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x468000A0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="MCK_LOW_IT" edc:nzwidth="0x8" edc:desc="MCK0 Monitoring Low IT Limit"/>
            <edc:SFRFieldDef edc:cname="MCK_HIGH_IT" edc:nzwidth="0x8" edc:desc="MCK0 Monitoring High IT Limit"/>
            <edc:SFRFieldDef edc:cname="MCK_LOW_RES" edc:nzwidth="0x8" edc:desc="MCK0 Monitoring Low RESET Limit"/>
            <edc:SFRFieldDef edc:cname="MCK_HIGH_RES" edc:nzwidth="0x8" edc:desc="MCK0 Monitoring High Reset Limit"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMC" edc:cname="PMC_CSR0" edc:nzwidth="0x20" edc:access="rr-r--rrr-----rrrrrrrrr---------" edc:impl="0xD383FE00" edc:_addr="0x468000A4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="PID9" edc:nzwidth="0x1" edc:desc="Peripheral Clock 9 Status"/>
            <edc:SFRFieldDef edc:cname="PID10" edc:nzwidth="0x1" edc:desc="Peripheral Clock 10 Status"/>
            <edc:SFRFieldDef edc:cname="PID11" edc:nzwidth="0x1" edc:desc="Peripheral Clock 11 Status"/>
            <edc:SFRFieldDef edc:cname="PID12" edc:nzwidth="0x1" edc:desc="Peripheral Clock 12 Status"/>
            <edc:SFRFieldDef edc:cname="PID13" edc:nzwidth="0x1" edc:desc="Peripheral Clock 13 Status"/>
            <edc:SFRFieldDef edc:cname="PID14" edc:nzwidth="0x1" edc:desc="Peripheral Clock 14 Status"/>
            <edc:SFRFieldDef edc:cname="PID15" edc:nzwidth="0x1" edc:desc="Peripheral Clock 15 Status"/>
            <edc:SFRFieldDef edc:cname="PID16" edc:nzwidth="0x1" edc:desc="Peripheral Clock 16 Status"/>
            <edc:SFRFieldDef edc:cname="PID17" edc:nzwidth="0x1" edc:desc="Peripheral Clock 17 Status"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="PID23" edc:nzwidth="0x1" edc:desc="Peripheral Clock 23 Status"/>
            <edc:SFRFieldDef edc:cname="PID24" edc:nzwidth="0x1" edc:desc="Peripheral Clock 24 Status"/>
            <edc:SFRFieldDef edc:cname="PID25" edc:nzwidth="0x1" edc:desc="Peripheral Clock 25 Status"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PID28" edc:nzwidth="0x1" edc:desc="Peripheral Clock 28 Status"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PID30" edc:nzwidth="0x1" edc:desc="Peripheral Clock 30 Status"/>
            <edc:SFRFieldDef edc:cname="PID31" edc:nzwidth="0x1" edc:desc="Peripheral Clock 31 Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMC" edc:cname="PMC_CSR1" edc:nzwidth="0x20" edc:access="----r-r-r-r-r-r---------rrrrrrrr" edc:impl="0xAAA00FF" edc:_addr="0x468000A8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="PID32" edc:nzwidth="0x1" edc:desc="Peripheral Clock 32 Status"/>
            <edc:SFRFieldDef edc:cname="PID33" edc:nzwidth="0x1" edc:desc="Peripheral Clock 33 Status"/>
            <edc:SFRFieldDef edc:cname="PID34" edc:nzwidth="0x1" edc:desc="Peripheral Clock 34 Status"/>
            <edc:SFRFieldDef edc:cname="PID35" edc:nzwidth="0x1" edc:desc="Peripheral Clock 35 Status"/>
            <edc:SFRFieldDef edc:cname="PID36" edc:nzwidth="0x1" edc:desc="Peripheral Clock 36 Status"/>
            <edc:SFRFieldDef edc:cname="PID37" edc:nzwidth="0x1" edc:desc="Peripheral Clock 37 Status"/>
            <edc:SFRFieldDef edc:cname="PID38" edc:nzwidth="0x1" edc:desc="Peripheral Clock 38 Status"/>
            <edc:SFRFieldDef edc:cname="PID39" edc:nzwidth="0x1" edc:desc="Peripheral Clock 39 Status"/>
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="PID49" edc:nzwidth="0x1" edc:desc="Peripheral Clock 49 Status"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PID51" edc:nzwidth="0x1" edc:desc="Peripheral Clock 51 Status"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PID53" edc:nzwidth="0x1" edc:desc="Peripheral Clock 53 Status"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PID55" edc:nzwidth="0x1" edc:desc="Peripheral Clock 55 Status"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PID57" edc:nzwidth="0x1" edc:desc="Peripheral Clock 57 Status"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PID59" edc:nzwidth="0x1" edc:desc="Peripheral Clock 59 Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMC" edc:cname="PMC_CSR2" edc:nzwidth="0x20" edc:access="----rrrrr-r---rrrr--r-----------" edc:impl="0xFA3C800" edc:_addr="0x468000AC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:AdjustPoint edc:offset="0xB"/>
            <edc:SFRFieldDef edc:cname="PID75" edc:nzwidth="0x1" edc:desc="Peripheral Clock 75 Status"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PID78" edc:nzwidth="0x1" edc:desc="Peripheral Clock 78 Status"/>
            <edc:SFRFieldDef edc:cname="PID79" edc:nzwidth="0x1" edc:desc="Peripheral Clock 79 Status"/>
            <edc:SFRFieldDef edc:cname="PID80" edc:nzwidth="0x1" edc:desc="Peripheral Clock 80 Status"/>
            <edc:SFRFieldDef edc:cname="PID81" edc:nzwidth="0x1" edc:desc="Peripheral Clock 81 Status"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PID85" edc:nzwidth="0x1" edc:desc="Peripheral Clock 85 Status"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PID87" edc:nzwidth="0x1" edc:desc="Peripheral Clock 87 Status"/>
            <edc:SFRFieldDef edc:cname="PID88" edc:nzwidth="0x1" edc:desc="Peripheral Clock 88 Status"/>
            <edc:SFRFieldDef edc:cname="PID89" edc:nzwidth="0x1" edc:desc="Peripheral Clock 89 Status"/>
            <edc:SFRFieldDef edc:cname="PID90" edc:nzwidth="0x1" edc:desc="Peripheral Clock 90 Status"/>
            <edc:SFRFieldDef edc:cname="PID91" edc:nzwidth="0x1" edc:desc="Peripheral Clock 91 Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMC" edc:cname="PMC_CSR3" edc:nzwidth="0x20" edc:access="-------------------------------r" edc:impl="0x1" edc:_addr="0x468000B0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="PID96" edc:nzwidth="0x1" edc:desc="Peripheral Clock 96 Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x10" edc:_addr="0x468000B4"/>
      <edc:SFRDef ltx:memberofperipheral="PMC" edc:cname="PMC_GCSR0" edc:nzwidth="0x20" edc:access="r------rr------rrrrrrrr---------" edc:impl="0x8181FE00" edc:_addr="0x468000C4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="GPID9" edc:nzwidth="0x1" edc:desc="Generic Clock 9 Status"/>
            <edc:SFRFieldDef edc:cname="GPID10" edc:nzwidth="0x1" edc:desc="Generic Clock 10 Status"/>
            <edc:SFRFieldDef edc:cname="GPID11" edc:nzwidth="0x1" edc:desc="Generic Clock 11 Status"/>
            <edc:SFRFieldDef edc:cname="GPID12" edc:nzwidth="0x1" edc:desc="Generic Clock 12 Status"/>
            <edc:SFRFieldDef edc:cname="GPID13" edc:nzwidth="0x1" edc:desc="Generic Clock 13 Status"/>
            <edc:SFRFieldDef edc:cname="GPID14" edc:nzwidth="0x1" edc:desc="Generic Clock 14 Status"/>
            <edc:SFRFieldDef edc:cname="GPID15" edc:nzwidth="0x1" edc:desc="Generic Clock 15 Status"/>
            <edc:SFRFieldDef edc:cname="GPID16" edc:nzwidth="0x1" edc:desc="Generic Clock 16 Status"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="GPID23" edc:nzwidth="0x1" edc:desc="Generic Clock 23 Status"/>
            <edc:SFRFieldDef edc:cname="GPID24" edc:nzwidth="0x1" edc:desc="Generic Clock 24 Status"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="GPID31" edc:nzwidth="0x1" edc:desc="Generic Clock 31 Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMC" edc:cname="PMC_GCSR1" edc:nzwidth="0x20" edc:access="--------------------------r--r--" edc:impl="0x24" edc:_addr="0x468000C8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="GPID34" edc:nzwidth="0x1" edc:desc="Generic Clock 34 Status"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="GPID37" edc:nzwidth="0x1" edc:desc="Generic Clock 37 Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMC" edc:cname="PMC_GCSR2" edc:nzwidth="0x20" edc:access="-----rr-r-------r---r-----------" edc:impl="0x6808800" edc:_addr="0x468000CC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:AdjustPoint edc:offset="0xB"/>
            <edc:SFRFieldDef edc:cname="GPID75" edc:nzwidth="0x1" edc:desc="Generic Clock 75 Status"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="GPID79" edc:nzwidth="0x1" edc:desc="Generic Clock 79 Status"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="GPID87" edc:nzwidth="0x1" edc:desc="Generic Clock 87 Status"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="GPID89" edc:nzwidth="0x1" edc:desc="Generic Clock 89 Status"/>
            <edc:SFRFieldDef edc:cname="GPID90" edc:nzwidth="0x1" edc:desc="Generic Clock 90 Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMC" edc:cname="PMC_GCSR3" edc:nzwidth="0x20" edc:access="-------------------------------r" edc:impl="0x1" edc:_addr="0x468000D0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="GPID96" edc:nzwidth="0x1" edc:desc="Generic Clock 96 Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x10" edc:_addr="0x468000D4"/>
      <edc:SFRDef ltx:memberofperipheral="PMC" edc:cname="PMC_PLL_IER" edc:nzwidth="0x20" edc:access="-------------www-------------www" edc:impl="0x70007" edc:_addr="0x468000E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="LOCK0" edc:nzwidth="0x1" edc:desc="PLL of Index 0 Lock Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LOCK1" edc:nzwidth="0x1" edc:desc="PLL of Index 1 Lock Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LOCK2" edc:nzwidth="0x1" edc:desc="PLL of Index 2 Lock Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0xD"/>
            <edc:SFRFieldDef edc:cname="UNLOCK0" edc:nzwidth="0x1" edc:desc="PLL of Index 0 Unlock Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="UNLOCK1" edc:nzwidth="0x1" edc:desc="PLL of Index 1 Unlock Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="UNLOCK2" edc:nzwidth="0x1" edc:desc="PLL of Index 2 Unlock Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMC" edc:cname="PMC_PLL_IDR" edc:nzwidth="0x20" edc:access="-------------www-------------www" edc:impl="0x70007" edc:_addr="0x468000E8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="LOCK0" edc:nzwidth="0x1" edc:desc="PLL of Index 0 Lock Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LOCK1" edc:nzwidth="0x1" edc:desc="PLL of Index 1 Lock Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="LOCK2" edc:nzwidth="0x1" edc:desc="PLL of Index 2 Lock Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0xD"/>
            <edc:SFRFieldDef edc:cname="UNLOCK0" edc:nzwidth="0x1" edc:desc="PLL of Index 0 Unlock Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="UNLOCK1" edc:nzwidth="0x1" edc:desc="PLL of Index 1 Unlock Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="UNLOCK2" edc:nzwidth="0x1" edc:desc="PLL of Index 2 Unlock Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMC" edc:cname="PMC_PLL_IMR" edc:nzwidth="0x20" edc:access="-------------rrr-------------rrr" edc:impl="0x70007" edc:_addr="0x468000EC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="LOCK0" edc:nzwidth="0x1" edc:desc="PLL of Index 0 Lock Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LOCK1" edc:nzwidth="0x1" edc:desc="PLL of Index 1 Lock Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="LOCK2" edc:nzwidth="0x1" edc:desc="PLL of Index 2 Lock Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0xD"/>
            <edc:SFRFieldDef edc:cname="UNLOCK0" edc:nzwidth="0x1" edc:desc="PLL of Index 0 Unlock Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="UNLOCK1" edc:nzwidth="0x1" edc:desc="PLL of Index 1 Unlock Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="UNLOCK2" edc:nzwidth="0x1" edc:desc="PLL of Index 2 Unlock Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMC" edc:cname="PMC_PLL_ISR0" edc:nzwidth="0x20" edc:access="-------------rrr-------------rrr" edc:impl="0x70007" edc:_addr="0x468000F0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="LOCK0" edc:nzwidth="0x1" edc:desc="PLL of Index 0 Lock Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="LOCK1" edc:nzwidth="0x1" edc:desc="PLL of Index 1 Lock Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="LOCK2" edc:nzwidth="0x1" edc:desc="PLL of Index 2 Lock Interrupt Status"/>
            <edc:AdjustPoint edc:offset="0xD"/>
            <edc:SFRFieldDef edc:cname="UNLOCK0" edc:nzwidth="0x1" edc:desc="PLL of Index 0 Unlock Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="UNLOCK1" edc:nzwidth="0x1" edc:desc="PLL of Index 1 Unlock Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="UNLOCK2" edc:nzwidth="0x1" edc:desc="PLL of Index 2 Unlock Interrupt Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PMC" edc:cname="PMC_PLL_ISR1" edc:nzwidth="0x20" edc:access="-------------rrr-------------rrr" edc:impl="0x70007" edc:_addr="0x468000F4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="UDR0" edc:nzwidth="0x1" edc:desc="PLLx Underflow"/>
            <edc:SFRFieldDef edc:cname="UDR1" edc:nzwidth="0x1" edc:desc="PLLx Underflow"/>
            <edc:SFRFieldDef edc:cname="UDR2" edc:nzwidth="0x1" edc:desc="PLLx Underflow"/>
            <edc:AdjustPoint edc:offset="0xD"/>
            <edc:SFRFieldDef edc:cname="OVR0" edc:nzwidth="0x1" edc:desc="PLLx Overflow"/>
            <edc:SFRFieldDef edc:cname="OVR1" edc:nzwidth="0x1" edc:desc="PLLx Overflow"/>
            <edc:SFRFieldDef edc:cname="OVR2" edc:nzwidth="0x1" edc:desc="PLLx Overflow"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1803F08" edc:_addr="0x468000F8"/>
      <edc:SFRDef ltx:memberofperipheral="MEM2MEM1" edc:cname="MEM2MEM1_THR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48004000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MEM2MEM1">
            <edc:SFRFieldDef edc:cname="THDATA" edc:nzwidth="0x20" edc:desc="Transfer Holding Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MEM2MEM1" edc:cname="MEM2MEM1_MR" edc:nzwidth="0x20" edc:access="------------------------------nn" edc:impl="0x3" edc:_addr="0x48004004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MEM2MEM1">
            <edc:SFRFieldDef edc:cname="TSIZE" edc:nzwidth="0x2" edc:desc="Transfer Size">
              <edc:SFRFieldSemantic edc:cname="T_8BIT" edc:desc="The buffer size is defined in bytes." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="T_16BIT" edc:desc="The buffer size is defined in half-words (16-bit)." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="T_32BIT" edc:desc="The buffer size is defined in words (32-bit). Default value." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MEM2MEM1" edc:cname="MEM2MEM1_IER" edc:nzwidth="0x20" edc:access="------------------------------ww" edc:impl="0x3" edc:_addr="0x48004008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MEM2MEM1">
            <edc:SFRFieldDef edc:cname="RXEND" edc:nzwidth="0x1" edc:desc="End of Transfer Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Buffer Full Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MEM2MEM1" edc:cname="MEM2MEM1_IDR" edc:nzwidth="0x20" edc:access="------------------------------ww" edc:impl="0x3" edc:_addr="0x4800400C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MEM2MEM1">
            <edc:SFRFieldDef edc:cname="RXEND" edc:nzwidth="0x1" edc:desc="End of Transfer Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Buffer Full Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MEM2MEM1" edc:cname="MEM2MEM1_IMR" edc:nzwidth="0x20" edc:access="------------------------------rr" edc:impl="0x3" edc:_addr="0x48004010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MEM2MEM1">
            <edc:SFRFieldDef edc:cname="RXEND" edc:nzwidth="0x1" edc:desc="End of Transfer Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Buffer Full Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MEM2MEM1" edc:cname="MEM2MEM1_ISR" edc:nzwidth="0x20" edc:access="------------------------------rr" edc:impl="0x3" edc:_addr="0x48004014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MEM2MEM1">
            <edc:SFRFieldDef edc:cname="RXEND" edc:nzwidth="0x1" edc:desc="End of Transfer"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Buffer Full"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MEM2MEM1" edc:cname="MEM2MEM1_WPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn------nn" edc:impl="0xFFFFFF03" edc:_addr="0x48004018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MEM2MEM1">
            <edc:SFRFieldDef edc:cname="WPEN" edc:nzwidth="0x1" edc:desc="Write Protection Configuration Enable"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:nzwidth="0x1" edc:desc="Write Protection Interruption Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPEN, WPITEN bits. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x4D454D"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xE4" edc:_addr="0x4800401C"/>
      <edc:SFRDef ltx:memberofperipheral="MEM2MEM1" edc:cname="MEM2MEM1_RPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48004100">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MEM2MEM1">
            <edc:SFRFieldDef edc:cname="RXPTR" edc:nzwidth="0x20" edc:desc="Receive Pointer Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MEM2MEM1" edc:cname="MEM2MEM1_RCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x48004104">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MEM2MEM1">
            <edc:SFRFieldDef edc:cname="RXCTR" edc:nzwidth="0x10" edc:desc="Receive Counter Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MEM2MEM1" edc:cname="MEM2MEM1_TPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48004108">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MEM2MEM1">
            <edc:SFRFieldDef edc:cname="TXPTR" edc:nzwidth="0x20" edc:desc="Transmit Counter Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MEM2MEM1" edc:cname="MEM2MEM1_TCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x4800410C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MEM2MEM1">
            <edc:SFRFieldDef edc:cname="TXCTR" edc:nzwidth="0x10" edc:desc="Transmit Counter Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MEM2MEM1" edc:cname="MEM2MEM1_RNPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48004110">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MEM2MEM1">
            <edc:SFRFieldDef edc:cname="RXNPTR" edc:nzwidth="0x20" edc:desc="Receive Next Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MEM2MEM1" edc:cname="MEM2MEM1_RNCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x48004114">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MEM2MEM1">
            <edc:SFRFieldDef edc:cname="RXNCTR" edc:nzwidth="0x10" edc:desc="Receive Next Counter"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MEM2MEM1" edc:cname="MEM2MEM1_TNPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48004118">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MEM2MEM1">
            <edc:SFRFieldDef edc:cname="TXNPTR" edc:nzwidth="0x20" edc:desc="Transmit Next Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MEM2MEM1" edc:cname="MEM2MEM1_TNCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x4800411C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MEM2MEM1">
            <edc:SFRFieldDef edc:cname="TXNCTR" edc:nzwidth="0x10" edc:desc="Transmit Counter Next"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MEM2MEM1" edc:cname="MEM2MEM1_PTCR" edc:nzwidth="0x20" edc:access="-------w----wwww------ww------ww" edc:impl="0x10F0303" edc:_addr="0x48004120">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MEM2MEM1">
            <edc:SFRFieldDef edc:cname="RXTEN" edc:nzwidth="0x1" edc:desc="Receiver Transfer Enable"/>
            <edc:SFRFieldDef edc:cname="RXTDIS" edc:nzwidth="0x1" edc:desc="Receiver Transfer Disable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="TXTEN" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Enable"/>
            <edc:SFRFieldDef edc:cname="TXTDIS" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Disable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="RXCBEN" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Enable"/>
            <edc:SFRFieldDef edc:cname="RXCBDIS" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Disable"/>
            <edc:SFRFieldDef edc:cname="TXCBEN" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Enable"/>
            <edc:SFRFieldDef edc:cname="TXCBDIS" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Disable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ERRCLR" edc:nzwidth="0x1" edc:desc="Transfer Bus Error Clear"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MEM2MEM1" edc:cname="MEM2MEM1_PTSR" edc:nzwidth="0x20" edc:access="-------r-----r-r-------r-------r" edc:impl="0x1050101" edc:_addr="0x48004124">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MEM2MEM1">
            <edc:SFRFieldDef edc:cname="RXTEN" edc:nzwidth="0x1" edc:desc="Receiver Transfer Enable"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="TXTEN" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Enable"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="RXCBEN" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXCBEN" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Transfer Bus Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MEM2MEM1" edc:cname="MEM2MEM1_PWPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:impl="0xFFFFFF07" edc:_addr="0x48004128">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MEM2MEM1">
            <edc:SFRFieldDef edc:cname="WPPTREN" edc:nzwidth="0x1" edc:desc="Write Protection Pointer Registers Enable"/>
            <edc:SFRFieldDef edc:cname="WPCTREN" edc:nzwidth="0x1" edc:desc="Write Protection Counter Registers Enable"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:nzwidth="0x1" edc:desc="Write Protection Control Register Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x504443"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3ED4" edc:_addr="0x4800412C"/>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC_CHANNEL0TC3_CCR" edc:nzwidth="0x20" edc:access="-----------------------------www" edc:impl="0x7" edc:_addr="0x48008000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="CLKEN" edc:nzwidth="0x1" edc:desc="Counter Clock Enable Command"/>
            <edc:SFRFieldDef edc:cname="CLKDIS" edc:nzwidth="0x1" edc:desc="Counter Clock Disable Command"/>
            <edc:SFRFieldDef edc:cname="SWTRG" edc:nzwidth="0x1" edc:desc="Software Trigger Command"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC_CHANNEL0TC3_CMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48008004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="TCCLKS" edc:nzwidth="0x3" edc:desc="Clock Selection">
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK1" edc:desc="Clock selected: internal GCLK [TC_ID] clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK2" edc:desc="Clock selected: internal MCK/8 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK3" edc:desc="Clock selected: internal MCK/32 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK4" edc:desc="Clock selected: internal MCK/128 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK5" edc:desc="Clock selected: internal MD_SLCK clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="Clock selected: XC0" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="Clock selected: XC1" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="Clock selected: XC2" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CLKI" edc:nzwidth="0x1" edc:desc="Clock Invert"/>
            <edc:SFRFieldDef edc:cname="BURST" edc:nzwidth="0x2" edc:desc="Burst Signal Selection">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="The clock is not gated by an external signal." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="XC0 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="XC1 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="XC2 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPCSTOP" edc:nzwidth="0x1" edc:desc="Counter Clock Stopped with RC Compare"/>
            <edc:SFRFieldDef edc:cname="CPCDIS" edc:nzwidth="0x1" edc:desc="Counter Clock Disable with RC Compare"/>
            <edc:SFRFieldDef edc:cname="EEVTEDG" edc:nzwidth="0x2" edc:desc="External Event Edge Selection">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Rising edge" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Falling edge" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="EDGE" edc:desc="Each edge" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EEVT" edc:nzwidth="0x2" edc:desc="External Event Selection">
              <edc:SFRFieldSemantic edc:cname="TIOB" edc:desc="TIOB" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="XC0" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="XC1" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="XC2" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ENETRG" edc:nzwidth="0x1" edc:desc="External Event Trigger Enable"/>
            <edc:SFRFieldDef edc:cname="WAVSEL" edc:nzwidth="0x2" edc:desc="Waveform Selection">
              <edc:SFRFieldSemantic edc:cname="UP" edc:desc="UP mode without automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="UPDOWN" edc:desc="UPDOWN mode without automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="UP_RC" edc:desc="UP mode with automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="UPDOWN_RC" edc:desc="UPDOWN mode with automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="-1"/>
            <edc:SFRFieldDef edc:cname="CPCTRG" edc:nzwidth="0x1" edc:desc="RC Compare Trigger Enable"/>
            <edc:SFRFieldDef edc:cname="WAVE" edc:nzwidth="0x1" edc:desc="Waveform Mode"/>
            <edc:SFRFieldDef edc:cname="ACPA" edc:nzwidth="0x2" edc:desc="RA Compare Effect on TIOAx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ACPC" edc:nzwidth="0x2" edc:desc="RC Compare Effect on TIOAx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AEEVT" edc:nzwidth="0x2" edc:desc="External Event Effect on TIOAx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASWTRG" edc:nzwidth="0x2" edc:desc="Software Trigger Effect on TIOAx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BCPB" edc:nzwidth="0x2" edc:desc="RB Compare Effect on TIOBx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BCPC" edc:nzwidth="0x2" edc:desc="RC Compare Effect on TIOBx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BEEVT" edc:nzwidth="0x2" edc:desc="External Event Effect on TIOBx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BSWTRG" edc:nzwidth="0x2" edc:desc="Software Trigger Effect on TIOBx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC_CHANNEL0TC3_SMMR" edc:nzwidth="0x20" edc:access="------------------------------nn" edc:impl="0x3" edc:_addr="0x48008008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="GCEN" edc:nzwidth="0x1" edc:desc="Gray Count Enable"/>
            <edc:SFRFieldDef edc:cname="DOWN" edc:nzwidth="0x1" edc:desc="Down Count"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4800800C"/>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC_CHANNEL0TC3_CV" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x48008010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="CV" edc:nzwidth="0x20" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC_CHANNEL0TC3_RA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48008014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="RA" edc:nzwidth="0x20" edc:desc="Register A"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC_CHANNEL0TC3_RB" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48008018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="RB" edc:nzwidth="0x20" edc:desc="Register B"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC_CHANNEL0TC3_RC" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4800801C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="RC" edc:nzwidth="0x20" edc:desc="Register C"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC_CHANNEL0TC3_SR" edc:nzwidth="0x20" edc:access="-------------rrr-----rrrrrrrrrrr" edc:impl="0x707FF" edc:_addr="0x48008020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="COVFS" edc:nzwidth="0x1" edc:desc="Counter Overflow Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:nzwidth="0x1" edc:desc="Load Overrun Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:nzwidth="0x1" edc:desc="RA Compare Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:nzwidth="0x1" edc:desc="RB Compare Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:nzwidth="0x1" edc:desc="RC Compare Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:nzwidth="0x1" edc:desc="RA Loading Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:nzwidth="0x1" edc:desc="RB Loading Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1" edc:desc="External Trigger Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receiver Transfer (cleared by writing TC_RCR or TC_RNCR)"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Reception Buffer Full (cleared by writing TC_RCR or TC_RNCR)"/>
            <edc:SFRFieldDef edc:cname="SECE" edc:nzwidth="0x1" edc:desc="Security and/or Safety Event (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="CLKSTA" edc:nzwidth="0x1" edc:desc="Clock Enabling Status"/>
            <edc:SFRFieldDef edc:cname="MTIOA" edc:nzwidth="0x1" edc:desc="TIOAx Mirror"/>
            <edc:SFRFieldDef edc:cname="MTIOB" edc:nzwidth="0x1" edc:desc="TIOBx Mirror"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC_CHANNEL0TC3_IER" edc:nzwidth="0x20" edc:access="---------------------wwwwwwwwwww" edc:impl="0x7FF" edc:_addr="0x48008024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="COVFS" edc:nzwidth="0x1" edc:desc="Counter Overflow"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:nzwidth="0x1" edc:desc="Load Overrun"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:nzwidth="0x1" edc:desc="RA Compare"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:nzwidth="0x1" edc:desc="RB Compare"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:nzwidth="0x1" edc:desc="RC Compare"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:nzwidth="0x1" edc:desc="RA Loading"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:nzwidth="0x1" edc:desc="RB Loading"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1" edc:desc="External Trigger"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receiver Transfer"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Reception Buffer Full"/>
            <edc:SFRFieldDef edc:cname="SECE" edc:nzwidth="0x1" edc:desc="Security and/or Safety Event Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC_CHANNEL0TC3_IDR" edc:nzwidth="0x20" edc:access="---------------------wwwwwwwwwww" edc:impl="0x7FF" edc:_addr="0x48008028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="COVFS" edc:nzwidth="0x1" edc:desc="Counter Overflow"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:nzwidth="0x1" edc:desc="Load Overrun"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:nzwidth="0x1" edc:desc="RA Compare"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:nzwidth="0x1" edc:desc="RB Compare"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:nzwidth="0x1" edc:desc="RC Compare"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:nzwidth="0x1" edc:desc="RA Loading"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:nzwidth="0x1" edc:desc="RB Loading"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1" edc:desc="External Trigger"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receiver Transfer"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Reception Buffer Full"/>
            <edc:SFRFieldDef edc:cname="SECE" edc:nzwidth="0x1" edc:desc="Security and/or Safety Event Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC_CHANNEL0TC3_IMR" edc:nzwidth="0x20" edc:access="---------------------rrrrrrrrrrr" edc:impl="0x7FF" edc:_addr="0x4800802C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="COVFS" edc:nzwidth="0x1" edc:desc="Counter Overflow"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:nzwidth="0x1" edc:desc="Load Overrun"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:nzwidth="0x1" edc:desc="RA Compare"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:nzwidth="0x1" edc:desc="RB Compare"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:nzwidth="0x1" edc:desc="RC Compare"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:nzwidth="0x1" edc:desc="RA Loading"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:nzwidth="0x1" edc:desc="RB Loading"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1" edc:desc="External Trigger"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receiver Transfer"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Reception Buffer Full"/>
            <edc:SFRFieldDef edc:cname="SECE" edc:nzwidth="0x1" edc:desc="Security and/or Safety Event Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC_CHANNEL0TC3_EMR" edc:nzwidth="0x20" edc:access="-----------------------n--nn--nn" edc:impl="0x133" edc:_addr="0x48008030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="TRIGSRCA" edc:nzwidth="0x2" edc:desc="Trigger Source for Input A">
              <edc:SFRFieldSemantic edc:cname="EXTERNAL_TIOAx" edc:desc="The trigger/capture input A is driven by external pin TIOAx" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PWMx" edc:desc="The trigger/capture input A is driven internally by PWMx" edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TRIGSRCB" edc:nzwidth="0x2" edc:desc="Trigger Source for Input B">
              <edc:SFRFieldSemantic edc:cname="EXTERNAL_TIOBx" edc:desc="The trigger/capture input B is driven by external pin TIOBx" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PWMx" edc:desc="The trigger/capture input B is driven internally by the comparator output (see Figure 7-16) of the PWMx." edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="NODIVCLK" edc:nzwidth="0x1" edc:desc="No Divided Clock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC_CHANNEL0TC3_CSR" edc:nzwidth="0x20" edc:access="-------------rrr----------------" edc:impl="0x70000" edc:_addr="0x48008034">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:AdjustPoint edc:offset="0x10"/>
            <edc:SFRFieldDef edc:cname="CLKSTA" edc:nzwidth="0x1" edc:desc="Clock Enabling Status"/>
            <edc:SFRFieldDef edc:cname="MTIOA" edc:nzwidth="0x1" edc:desc="TIOAx Mirror"/>
            <edc:SFRFieldDef edc:cname="MTIOB" edc:nzwidth="0x1" edc:desc="TIOBx Mirror"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC_CHANNEL0TC3_SSR" edc:nzwidth="0x20" edc:access="r---rrrrrrrrrrrrrrrrrrrr----rrrr" edc:impl="0x8FFFFF0F" edc:_addr="0x48008038">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="WPVS" edc:nzwidth="0x1" edc:desc="Write Protection Violation Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CGD" edc:nzwidth="0x1" edc:desc="Clock Glitch Detected (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SEQE" edc:nzwidth="0x1" edc:desc="Internal Sequencer Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SWE" edc:nzwidth="0x1" edc:desc="Software Control Error (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:nzwidth="0x10" edc:desc="Write Protection Violation Source (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SWETYP" edc:nzwidth="0x4" edc:desc="Software Error Type (cleared on read)">
              <edc:SFRFieldSemantic edc:cname="READ_WO" edc:desc="TC Channel x is enabled and a write-only register has been read (Warning)." edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="WRITE_RO" edc:desc="TC Channel x is enabled and a write access has been performed on a read-only register (Warning)." edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="UNDEF_RW" edc:desc="Access to an undefined address of the TC (Warning)." edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="W_RARB_CAPT" edc:desc="TC_RAx or TC_RBx are written while channel is enabled and configured in capture mode (Error)." edc:when="(field &amp; 0xF) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ECLASS" edc:nzwidth="0x1" edc:desc="Software Error Class">
              <edc:SFRFieldSemantic edc:cname="WARNING" edc:desc="An abnormal access that does not have any impact." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ERROR" edc:desc="An abnormal access that may have an impact." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4800803C"/>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC_CHANNEL1TC3_CCR" edc:nzwidth="0x20" edc:access="-----------------------------www" edc:impl="0x7" edc:_addr="0x48008040">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="CLKEN" edc:nzwidth="0x1" edc:desc="Counter Clock Enable Command"/>
            <edc:SFRFieldDef edc:cname="CLKDIS" edc:nzwidth="0x1" edc:desc="Counter Clock Disable Command"/>
            <edc:SFRFieldDef edc:cname="SWTRG" edc:nzwidth="0x1" edc:desc="Software Trigger Command"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC_CHANNEL1TC3_CMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48008044">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="TCCLKS" edc:nzwidth="0x3" edc:desc="Clock Selection">
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK1" edc:desc="Clock selected: internal GCLK [TC_ID] clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK2" edc:desc="Clock selected: internal MCK/8 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK3" edc:desc="Clock selected: internal MCK/32 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK4" edc:desc="Clock selected: internal MCK/128 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK5" edc:desc="Clock selected: internal MD_SLCK clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="Clock selected: XC0" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="Clock selected: XC1" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="Clock selected: XC2" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CLKI" edc:nzwidth="0x1" edc:desc="Clock Invert"/>
            <edc:SFRFieldDef edc:cname="BURST" edc:nzwidth="0x2" edc:desc="Burst Signal Selection">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="The clock is not gated by an external signal." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="XC0 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="XC1 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="XC2 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPCSTOP" edc:nzwidth="0x1" edc:desc="Counter Clock Stopped with RC Compare"/>
            <edc:SFRFieldDef edc:cname="CPCDIS" edc:nzwidth="0x1" edc:desc="Counter Clock Disable with RC Compare"/>
            <edc:SFRFieldDef edc:cname="EEVTEDG" edc:nzwidth="0x2" edc:desc="External Event Edge Selection">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Rising edge" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Falling edge" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="EDGE" edc:desc="Each edge" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EEVT" edc:nzwidth="0x2" edc:desc="External Event Selection">
              <edc:SFRFieldSemantic edc:cname="TIOB" edc:desc="TIOB" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="XC0" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="XC1" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="XC2" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ENETRG" edc:nzwidth="0x1" edc:desc="External Event Trigger Enable"/>
            <edc:SFRFieldDef edc:cname="WAVSEL" edc:nzwidth="0x2" edc:desc="Waveform Selection">
              <edc:SFRFieldSemantic edc:cname="UP" edc:desc="UP mode without automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="UPDOWN" edc:desc="UPDOWN mode without automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="UP_RC" edc:desc="UP mode with automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="UPDOWN_RC" edc:desc="UPDOWN mode with automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="-1"/>
            <edc:SFRFieldDef edc:cname="CPCTRG" edc:nzwidth="0x1" edc:desc="RC Compare Trigger Enable"/>
            <edc:SFRFieldDef edc:cname="WAVE" edc:nzwidth="0x1" edc:desc="Waveform Mode"/>
            <edc:SFRFieldDef edc:cname="ACPA" edc:nzwidth="0x2" edc:desc="RA Compare Effect on TIOAx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ACPC" edc:nzwidth="0x2" edc:desc="RC Compare Effect on TIOAx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AEEVT" edc:nzwidth="0x2" edc:desc="External Event Effect on TIOAx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASWTRG" edc:nzwidth="0x2" edc:desc="Software Trigger Effect on TIOAx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BCPB" edc:nzwidth="0x2" edc:desc="RB Compare Effect on TIOBx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BCPC" edc:nzwidth="0x2" edc:desc="RC Compare Effect on TIOBx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BEEVT" edc:nzwidth="0x2" edc:desc="External Event Effect on TIOBx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BSWTRG" edc:nzwidth="0x2" edc:desc="Software Trigger Effect on TIOBx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC_CHANNEL1TC3_SMMR" edc:nzwidth="0x20" edc:access="------------------------------nn" edc:impl="0x3" edc:_addr="0x48008048">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="GCEN" edc:nzwidth="0x1" edc:desc="Gray Count Enable"/>
            <edc:SFRFieldDef edc:cname="DOWN" edc:nzwidth="0x1" edc:desc="Down Count"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4800804C"/>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC_CHANNEL1TC3_CV" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x48008050">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="CV" edc:nzwidth="0x20" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC_CHANNEL1TC3_RA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48008054">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="RA" edc:nzwidth="0x20" edc:desc="Register A"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC_CHANNEL1TC3_RB" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48008058">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="RB" edc:nzwidth="0x20" edc:desc="Register B"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC_CHANNEL1TC3_RC" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4800805C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="RC" edc:nzwidth="0x20" edc:desc="Register C"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC_CHANNEL1TC3_SR" edc:nzwidth="0x20" edc:access="-------------rrr-----rrrrrrrrrrr" edc:impl="0x707FF" edc:_addr="0x48008060">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="COVFS" edc:nzwidth="0x1" edc:desc="Counter Overflow Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:nzwidth="0x1" edc:desc="Load Overrun Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:nzwidth="0x1" edc:desc="RA Compare Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:nzwidth="0x1" edc:desc="RB Compare Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:nzwidth="0x1" edc:desc="RC Compare Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:nzwidth="0x1" edc:desc="RA Loading Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:nzwidth="0x1" edc:desc="RB Loading Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1" edc:desc="External Trigger Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receiver Transfer (cleared by writing TC_RCR or TC_RNCR)"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Reception Buffer Full (cleared by writing TC_RCR or TC_RNCR)"/>
            <edc:SFRFieldDef edc:cname="SECE" edc:nzwidth="0x1" edc:desc="Security and/or Safety Event (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="CLKSTA" edc:nzwidth="0x1" edc:desc="Clock Enabling Status"/>
            <edc:SFRFieldDef edc:cname="MTIOA" edc:nzwidth="0x1" edc:desc="TIOAx Mirror"/>
            <edc:SFRFieldDef edc:cname="MTIOB" edc:nzwidth="0x1" edc:desc="TIOBx Mirror"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC_CHANNEL1TC3_IER" edc:nzwidth="0x20" edc:access="---------------------wwwwwwwwwww" edc:impl="0x7FF" edc:_addr="0x48008064">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="COVFS" edc:nzwidth="0x1" edc:desc="Counter Overflow"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:nzwidth="0x1" edc:desc="Load Overrun"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:nzwidth="0x1" edc:desc="RA Compare"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:nzwidth="0x1" edc:desc="RB Compare"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:nzwidth="0x1" edc:desc="RC Compare"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:nzwidth="0x1" edc:desc="RA Loading"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:nzwidth="0x1" edc:desc="RB Loading"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1" edc:desc="External Trigger"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receiver Transfer"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Reception Buffer Full"/>
            <edc:SFRFieldDef edc:cname="SECE" edc:nzwidth="0x1" edc:desc="Security and/or Safety Event Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC_CHANNEL1TC3_IDR" edc:nzwidth="0x20" edc:access="---------------------wwwwwwwwwww" edc:impl="0x7FF" edc:_addr="0x48008068">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="COVFS" edc:nzwidth="0x1" edc:desc="Counter Overflow"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:nzwidth="0x1" edc:desc="Load Overrun"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:nzwidth="0x1" edc:desc="RA Compare"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:nzwidth="0x1" edc:desc="RB Compare"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:nzwidth="0x1" edc:desc="RC Compare"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:nzwidth="0x1" edc:desc="RA Loading"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:nzwidth="0x1" edc:desc="RB Loading"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1" edc:desc="External Trigger"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receiver Transfer"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Reception Buffer Full"/>
            <edc:SFRFieldDef edc:cname="SECE" edc:nzwidth="0x1" edc:desc="Security and/or Safety Event Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC_CHANNEL1TC3_IMR" edc:nzwidth="0x20" edc:access="---------------------rrrrrrrrrrr" edc:impl="0x7FF" edc:_addr="0x4800806C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="COVFS" edc:nzwidth="0x1" edc:desc="Counter Overflow"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:nzwidth="0x1" edc:desc="Load Overrun"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:nzwidth="0x1" edc:desc="RA Compare"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:nzwidth="0x1" edc:desc="RB Compare"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:nzwidth="0x1" edc:desc="RC Compare"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:nzwidth="0x1" edc:desc="RA Loading"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:nzwidth="0x1" edc:desc="RB Loading"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1" edc:desc="External Trigger"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receiver Transfer"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Reception Buffer Full"/>
            <edc:SFRFieldDef edc:cname="SECE" edc:nzwidth="0x1" edc:desc="Security and/or Safety Event Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC_CHANNEL1TC3_EMR" edc:nzwidth="0x20" edc:access="-----------------------n--nn--nn" edc:impl="0x133" edc:_addr="0x48008070">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="TRIGSRCA" edc:nzwidth="0x2" edc:desc="Trigger Source for Input A">
              <edc:SFRFieldSemantic edc:cname="EXTERNAL_TIOAx" edc:desc="The trigger/capture input A is driven by external pin TIOAx" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PWMx" edc:desc="The trigger/capture input A is driven internally by PWMx" edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TRIGSRCB" edc:nzwidth="0x2" edc:desc="Trigger Source for Input B">
              <edc:SFRFieldSemantic edc:cname="EXTERNAL_TIOBx" edc:desc="The trigger/capture input B is driven by external pin TIOBx" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PWMx" edc:desc="The trigger/capture input B is driven internally by the comparator output (see Figure 7-16) of the PWMx." edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="NODIVCLK" edc:nzwidth="0x1" edc:desc="No Divided Clock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC_CHANNEL1TC3_CSR" edc:nzwidth="0x20" edc:access="-------------rrr----------------" edc:impl="0x70000" edc:_addr="0x48008074">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:AdjustPoint edc:offset="0x10"/>
            <edc:SFRFieldDef edc:cname="CLKSTA" edc:nzwidth="0x1" edc:desc="Clock Enabling Status"/>
            <edc:SFRFieldDef edc:cname="MTIOA" edc:nzwidth="0x1" edc:desc="TIOAx Mirror"/>
            <edc:SFRFieldDef edc:cname="MTIOB" edc:nzwidth="0x1" edc:desc="TIOBx Mirror"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC_CHANNEL1TC3_SSR" edc:nzwidth="0x20" edc:access="r---rrrrrrrrrrrrrrrrrrrr----rrrr" edc:impl="0x8FFFFF0F" edc:_addr="0x48008078">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="WPVS" edc:nzwidth="0x1" edc:desc="Write Protection Violation Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CGD" edc:nzwidth="0x1" edc:desc="Clock Glitch Detected (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SEQE" edc:nzwidth="0x1" edc:desc="Internal Sequencer Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SWE" edc:nzwidth="0x1" edc:desc="Software Control Error (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:nzwidth="0x10" edc:desc="Write Protection Violation Source (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SWETYP" edc:nzwidth="0x4" edc:desc="Software Error Type (cleared on read)">
              <edc:SFRFieldSemantic edc:cname="READ_WO" edc:desc="TC Channel x is enabled and a write-only register has been read (Warning)." edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="WRITE_RO" edc:desc="TC Channel x is enabled and a write access has been performed on a read-only register (Warning)." edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="UNDEF_RW" edc:desc="Access to an undefined address of the TC (Warning)." edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="W_RARB_CAPT" edc:desc="TC_RAx or TC_RBx are written while channel is enabled and configured in capture mode (Error)." edc:when="(field &amp; 0xF) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ECLASS" edc:nzwidth="0x1" edc:desc="Software Error Class">
              <edc:SFRFieldSemantic edc:cname="WARNING" edc:desc="An abnormal access that does not have any impact." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ERROR" edc:desc="An abnormal access that may have an impact." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4800807C"/>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC_CHANNEL2TC3_CCR" edc:nzwidth="0x20" edc:access="-----------------------------www" edc:impl="0x7" edc:_addr="0x48008080">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="CLKEN" edc:nzwidth="0x1" edc:desc="Counter Clock Enable Command"/>
            <edc:SFRFieldDef edc:cname="CLKDIS" edc:nzwidth="0x1" edc:desc="Counter Clock Disable Command"/>
            <edc:SFRFieldDef edc:cname="SWTRG" edc:nzwidth="0x1" edc:desc="Software Trigger Command"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC_CHANNEL2TC3_CMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48008084">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="TCCLKS" edc:nzwidth="0x3" edc:desc="Clock Selection">
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK1" edc:desc="Clock selected: internal GCLK [TC_ID] clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK2" edc:desc="Clock selected: internal MCK/8 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK3" edc:desc="Clock selected: internal MCK/32 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK4" edc:desc="Clock selected: internal MCK/128 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK5" edc:desc="Clock selected: internal MD_SLCK clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="Clock selected: XC0" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="Clock selected: XC1" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="Clock selected: XC2" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CLKI" edc:nzwidth="0x1" edc:desc="Clock Invert"/>
            <edc:SFRFieldDef edc:cname="BURST" edc:nzwidth="0x2" edc:desc="Burst Signal Selection">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="The clock is not gated by an external signal." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="XC0 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="XC1 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="XC2 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPCSTOP" edc:nzwidth="0x1" edc:desc="Counter Clock Stopped with RC Compare"/>
            <edc:SFRFieldDef edc:cname="CPCDIS" edc:nzwidth="0x1" edc:desc="Counter Clock Disable with RC Compare"/>
            <edc:SFRFieldDef edc:cname="EEVTEDG" edc:nzwidth="0x2" edc:desc="External Event Edge Selection">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Rising edge" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Falling edge" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="EDGE" edc:desc="Each edge" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EEVT" edc:nzwidth="0x2" edc:desc="External Event Selection">
              <edc:SFRFieldSemantic edc:cname="TIOB" edc:desc="TIOB" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="XC0" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="XC1" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="XC2" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ENETRG" edc:nzwidth="0x1" edc:desc="External Event Trigger Enable"/>
            <edc:SFRFieldDef edc:cname="WAVSEL" edc:nzwidth="0x2" edc:desc="Waveform Selection">
              <edc:SFRFieldSemantic edc:cname="UP" edc:desc="UP mode without automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="UPDOWN" edc:desc="UPDOWN mode without automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="UP_RC" edc:desc="UP mode with automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="UPDOWN_RC" edc:desc="UPDOWN mode with automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="-1"/>
            <edc:SFRFieldDef edc:cname="CPCTRG" edc:nzwidth="0x1" edc:desc="RC Compare Trigger Enable"/>
            <edc:SFRFieldDef edc:cname="WAVE" edc:nzwidth="0x1" edc:desc="Waveform Mode"/>
            <edc:SFRFieldDef edc:cname="ACPA" edc:nzwidth="0x2" edc:desc="RA Compare Effect on TIOAx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ACPC" edc:nzwidth="0x2" edc:desc="RC Compare Effect on TIOAx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AEEVT" edc:nzwidth="0x2" edc:desc="External Event Effect on TIOAx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASWTRG" edc:nzwidth="0x2" edc:desc="Software Trigger Effect on TIOAx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BCPB" edc:nzwidth="0x2" edc:desc="RB Compare Effect on TIOBx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BCPC" edc:nzwidth="0x2" edc:desc="RC Compare Effect on TIOBx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BEEVT" edc:nzwidth="0x2" edc:desc="External Event Effect on TIOBx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BSWTRG" edc:nzwidth="0x2" edc:desc="Software Trigger Effect on TIOBx">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC_CHANNEL2TC3_SMMR" edc:nzwidth="0x20" edc:access="------------------------------nn" edc:impl="0x3" edc:_addr="0x48008088">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="GCEN" edc:nzwidth="0x1" edc:desc="Gray Count Enable"/>
            <edc:SFRFieldDef edc:cname="DOWN" edc:nzwidth="0x1" edc:desc="Down Count"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4800808C"/>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC_CHANNEL2TC3_CV" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x48008090">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="CV" edc:nzwidth="0x20" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC_CHANNEL2TC3_RA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48008094">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="RA" edc:nzwidth="0x20" edc:desc="Register A"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC_CHANNEL2TC3_RB" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48008098">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="RB" edc:nzwidth="0x20" edc:desc="Register B"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC_CHANNEL2TC3_RC" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4800809C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="RC" edc:nzwidth="0x20" edc:desc="Register C"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC_CHANNEL2TC3_SR" edc:nzwidth="0x20" edc:access="-------------rrr-----rrrrrrrrrrr" edc:impl="0x707FF" edc:_addr="0x480080A0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="COVFS" edc:nzwidth="0x1" edc:desc="Counter Overflow Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:nzwidth="0x1" edc:desc="Load Overrun Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:nzwidth="0x1" edc:desc="RA Compare Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:nzwidth="0x1" edc:desc="RB Compare Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:nzwidth="0x1" edc:desc="RC Compare Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:nzwidth="0x1" edc:desc="RA Loading Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:nzwidth="0x1" edc:desc="RB Loading Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1" edc:desc="External Trigger Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receiver Transfer (cleared by writing TC_RCR or TC_RNCR)"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Reception Buffer Full (cleared by writing TC_RCR or TC_RNCR)"/>
            <edc:SFRFieldDef edc:cname="SECE" edc:nzwidth="0x1" edc:desc="Security and/or Safety Event (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="CLKSTA" edc:nzwidth="0x1" edc:desc="Clock Enabling Status"/>
            <edc:SFRFieldDef edc:cname="MTIOA" edc:nzwidth="0x1" edc:desc="TIOAx Mirror"/>
            <edc:SFRFieldDef edc:cname="MTIOB" edc:nzwidth="0x1" edc:desc="TIOBx Mirror"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC_CHANNEL2TC3_IER" edc:nzwidth="0x20" edc:access="---------------------wwwwwwwwwww" edc:impl="0x7FF" edc:_addr="0x480080A4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="COVFS" edc:nzwidth="0x1" edc:desc="Counter Overflow"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:nzwidth="0x1" edc:desc="Load Overrun"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:nzwidth="0x1" edc:desc="RA Compare"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:nzwidth="0x1" edc:desc="RB Compare"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:nzwidth="0x1" edc:desc="RC Compare"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:nzwidth="0x1" edc:desc="RA Loading"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:nzwidth="0x1" edc:desc="RB Loading"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1" edc:desc="External Trigger"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receiver Transfer"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Reception Buffer Full"/>
            <edc:SFRFieldDef edc:cname="SECE" edc:nzwidth="0x1" edc:desc="Security and/or Safety Event Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC_CHANNEL2TC3_IDR" edc:nzwidth="0x20" edc:access="---------------------wwwwwwwwwww" edc:impl="0x7FF" edc:_addr="0x480080A8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="COVFS" edc:nzwidth="0x1" edc:desc="Counter Overflow"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:nzwidth="0x1" edc:desc="Load Overrun"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:nzwidth="0x1" edc:desc="RA Compare"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:nzwidth="0x1" edc:desc="RB Compare"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:nzwidth="0x1" edc:desc="RC Compare"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:nzwidth="0x1" edc:desc="RA Loading"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:nzwidth="0x1" edc:desc="RB Loading"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1" edc:desc="External Trigger"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receiver Transfer"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Reception Buffer Full"/>
            <edc:SFRFieldDef edc:cname="SECE" edc:nzwidth="0x1" edc:desc="Security and/or Safety Event Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC_CHANNEL2TC3_IMR" edc:nzwidth="0x20" edc:access="---------------------rrrrrrrrrrr" edc:impl="0x7FF" edc:_addr="0x480080AC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="COVFS" edc:nzwidth="0x1" edc:desc="Counter Overflow"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:nzwidth="0x1" edc:desc="Load Overrun"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:nzwidth="0x1" edc:desc="RA Compare"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:nzwidth="0x1" edc:desc="RB Compare"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:nzwidth="0x1" edc:desc="RC Compare"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:nzwidth="0x1" edc:desc="RA Loading"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:nzwidth="0x1" edc:desc="RB Loading"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1" edc:desc="External Trigger"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receiver Transfer"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Reception Buffer Full"/>
            <edc:SFRFieldDef edc:cname="SECE" edc:nzwidth="0x1" edc:desc="Security and/or Safety Event Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC_CHANNEL2TC3_EMR" edc:nzwidth="0x20" edc:access="-----------------------n--nn--nn" edc:impl="0x133" edc:_addr="0x480080B0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="TRIGSRCA" edc:nzwidth="0x2" edc:desc="Trigger Source for Input A">
              <edc:SFRFieldSemantic edc:cname="EXTERNAL_TIOAx" edc:desc="The trigger/capture input A is driven by external pin TIOAx" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PWMx" edc:desc="The trigger/capture input A is driven internally by PWMx" edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TRIGSRCB" edc:nzwidth="0x2" edc:desc="Trigger Source for Input B">
              <edc:SFRFieldSemantic edc:cname="EXTERNAL_TIOBx" edc:desc="The trigger/capture input B is driven by external pin TIOBx" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PWMx" edc:desc="The trigger/capture input B is driven internally by the comparator output (see Figure 7-16) of the PWMx." edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="NODIVCLK" edc:nzwidth="0x1" edc:desc="No Divided Clock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC_CHANNEL2TC3_CSR" edc:nzwidth="0x20" edc:access="-------------rrr----------------" edc:impl="0x70000" edc:_addr="0x480080B4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:AdjustPoint edc:offset="0x10"/>
            <edc:SFRFieldDef edc:cname="CLKSTA" edc:nzwidth="0x1" edc:desc="Clock Enabling Status"/>
            <edc:SFRFieldDef edc:cname="MTIOA" edc:nzwidth="0x1" edc:desc="TIOAx Mirror"/>
            <edc:SFRFieldDef edc:cname="MTIOB" edc:nzwidth="0x1" edc:desc="TIOBx Mirror"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC_CHANNEL2TC3_SSR" edc:nzwidth="0x20" edc:access="r---rrrrrrrrrrrrrrrrrrrr----rrrr" edc:impl="0x8FFFFF0F" edc:_addr="0x480080B8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="WPVS" edc:nzwidth="0x1" edc:desc="Write Protection Violation Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CGD" edc:nzwidth="0x1" edc:desc="Clock Glitch Detected (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SEQE" edc:nzwidth="0x1" edc:desc="Internal Sequencer Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SWE" edc:nzwidth="0x1" edc:desc="Software Control Error (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:nzwidth="0x10" edc:desc="Write Protection Violation Source (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SWETYP" edc:nzwidth="0x4" edc:desc="Software Error Type (cleared on read)">
              <edc:SFRFieldSemantic edc:cname="READ_WO" edc:desc="TC Channel x is enabled and a write-only register has been read (Warning)." edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="WRITE_RO" edc:desc="TC Channel x is enabled and a write access has been performed on a read-only register (Warning)." edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="UNDEF_RW" edc:desc="Access to an undefined address of the TC (Warning)." edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="W_RARB_CAPT" edc:desc="TC_RAx or TC_RBx are written while channel is enabled and configured in capture mode (Error)." edc:when="(field &amp; 0xF) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ECLASS" edc:nzwidth="0x1" edc:desc="Software Error Class">
              <edc:SFRFieldSemantic edc:cname="WARNING" edc:desc="An abnormal access that does not have any impact." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ERROR" edc:desc="An abnormal access that may have an impact." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x480080BC"/>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC3_BCR" edc:nzwidth="0x20" edc:access="-------------------------------w" edc:impl="0x1" edc:_addr="0x480080C0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="SYNC" edc:nzwidth="0x1" edc:desc="Synchro Command"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC3_BMR" edc:nzwidth="0x20" edc:access="------nnnnnn--nnnnnnnnnn--nnnnnn" edc:impl="0x3F3FF3F" edc:_addr="0x480080C4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="TC0XC0S" edc:nzwidth="0x2" edc:desc="External Clock Signal 0 Selection">
              <edc:SFRFieldSemantic edc:cname="TCLK0" edc:desc="Signal connected to XC0: TCLK0" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TIOA1" edc:desc="Signal connected to XC0: TIOA1" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TIOA2" edc:desc="Signal connected to XC0: TIOA2" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TC1XC1S" edc:nzwidth="0x2" edc:desc="External Clock Signal 1 Selection">
              <edc:SFRFieldSemantic edc:cname="TCLK1" edc:desc="Signal connected to XC1: TCLK1" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TIOA0" edc:desc="Signal connected to XC1: TIOA0" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TIOA2" edc:desc="Signal connected to XC1: TIOA2" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TC2XC2S" edc:nzwidth="0x2" edc:desc="External Clock Signal 2 Selection">
              <edc:SFRFieldSemantic edc:cname="TCLK2" edc:desc="Signal connected to XC2: TCLK2" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TIOA0" edc:desc="Signal connected to XC2: TIOA0" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="TIOA1" edc:desc="Signal connected to XC2: TIOA1" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="QDEN" edc:nzwidth="0x1" edc:desc="Quadrature Decoder Enabled"/>
            <edc:SFRFieldDef edc:cname="POSEN" edc:nzwidth="0x1" edc:desc="Position Enabled"/>
            <edc:SFRFieldDef edc:cname="SPEEDEN" edc:nzwidth="0x1" edc:desc="Speed Enabled"/>
            <edc:SFRFieldDef edc:cname="QDTRANS" edc:nzwidth="0x1" edc:desc="Quadrature Decoding Transparent"/>
            <edc:SFRFieldDef edc:cname="EDGPHA" edc:nzwidth="0x1" edc:desc="Edge on PHA Count Mode"/>
            <edc:SFRFieldDef edc:cname="INVA" edc:nzwidth="0x1" edc:desc="Inverted PHA"/>
            <edc:SFRFieldDef edc:cname="INVB" edc:nzwidth="0x1" edc:desc="Inverted PHB"/>
            <edc:SFRFieldDef edc:cname="INVIDX" edc:nzwidth="0x1" edc:desc="Inverted Index"/>
            <edc:SFRFieldDef edc:cname="SWAP" edc:nzwidth="0x1" edc:desc="Swap PHA and PHB"/>
            <edc:SFRFieldDef edc:cname="IDXPHB" edc:nzwidth="0x1" edc:desc="Index Pin is PHB Pin"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MAXFILT" edc:nzwidth="0x6" edc:desc="Maximum Filter"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC3_QIER" edc:nzwidth="0x20" edc:access="------------------------wwww-www" edc:impl="0xF7" edc:_addr="0x480080C8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="IDX" edc:nzwidth="0x1" edc:desc="Index"/>
            <edc:SFRFieldDef edc:cname="DIRCHG" edc:nzwidth="0x1" edc:desc="Direction Change"/>
            <edc:SFRFieldDef edc:cname="QERR" edc:nzwidth="0x1" edc:desc="Quadrature Error"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FPHA" edc:nzwidth="0x1" edc:desc="Filtered Phase A Line"/>
            <edc:SFRFieldDef edc:cname="FPHB" edc:nzwidth="0x1" edc:desc="Filtered Phase B Line"/>
            <edc:SFRFieldDef edc:cname="FIDX" edc:nzwidth="0x1" edc:desc="Filtered Index Line"/>
            <edc:SFRFieldDef edc:cname="FMP" edc:nzwidth="0x1" edc:desc="Filtered Missing Pulse"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC3_QIDR" edc:nzwidth="0x20" edc:access="------------------------wwww-www" edc:impl="0xF7" edc:_addr="0x480080CC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="IDX" edc:nzwidth="0x1" edc:desc="Index"/>
            <edc:SFRFieldDef edc:cname="DIRCHG" edc:nzwidth="0x1" edc:desc="Direction Change"/>
            <edc:SFRFieldDef edc:cname="QERR" edc:nzwidth="0x1" edc:desc="Quadrature Error"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FPHA" edc:nzwidth="0x1" edc:desc="Filtered Phase A Line"/>
            <edc:SFRFieldDef edc:cname="FPHB" edc:nzwidth="0x1" edc:desc="Filtered Phase B Line"/>
            <edc:SFRFieldDef edc:cname="FIDX" edc:nzwidth="0x1" edc:desc="Filtered Index Line"/>
            <edc:SFRFieldDef edc:cname="FMP" edc:nzwidth="0x1" edc:desc="Filtered Missing Pulse"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC3_QIMR" edc:nzwidth="0x20" edc:access="------------------------rrrr-rrr" edc:impl="0xF7" edc:_addr="0x480080D0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="IDX" edc:nzwidth="0x1" edc:desc="Index"/>
            <edc:SFRFieldDef edc:cname="DIRCHG" edc:nzwidth="0x1" edc:desc="Direction Change"/>
            <edc:SFRFieldDef edc:cname="QERR" edc:nzwidth="0x1" edc:desc="Quadrature Error"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FPHA" edc:nzwidth="0x1" edc:desc="Filtered Phase A Line"/>
            <edc:SFRFieldDef edc:cname="FPHB" edc:nzwidth="0x1" edc:desc="Filtered Phase B Line"/>
            <edc:SFRFieldDef edc:cname="FIDX" edc:nzwidth="0x1" edc:desc="Filtered Index Line"/>
            <edc:SFRFieldDef edc:cname="FMP" edc:nzwidth="0x1" edc:desc="Filtered Missing Pulse"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC3_QISR" edc:nzwidth="0x20" edc:access="-----------------------rrrrr-rrr" edc:impl="0x1F7" edc:_addr="0x480080D4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="IDX" edc:nzwidth="0x1" edc:desc="Index"/>
            <edc:SFRFieldDef edc:cname="DIRCHG" edc:nzwidth="0x1" edc:desc="Direction Change"/>
            <edc:SFRFieldDef edc:cname="QERR" edc:nzwidth="0x1" edc:desc="Quadrature Error"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FPHA" edc:nzwidth="0x1" edc:desc="Filtered Phase A Line"/>
            <edc:SFRFieldDef edc:cname="FPHB" edc:nzwidth="0x1" edc:desc="Filtered Phase B Line"/>
            <edc:SFRFieldDef edc:cname="FIDX" edc:nzwidth="0x1" edc:desc="Filtered Index Line"/>
            <edc:SFRFieldDef edc:cname="FMP" edc:nzwidth="0x1" edc:desc="Filtered Missing Pulse"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Direction"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC3_FMR" edc:nzwidth="0x20" edc:access="------------------------------nn" edc:impl="0x3" edc:_addr="0x480080D8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="ENCF0" edc:nzwidth="0x1" edc:desc="Enable Compare Fault Channel 0"/>
            <edc:SFRFieldDef edc:cname="ENCF1" edc:nzwidth="0x1" edc:desc="Enable Compare Fault Channel 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC3_QSR" edc:nzwidth="0x20" edc:access="-----------------------r--------" edc:impl="0x100" edc:_addr="0x480080DC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Direction"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x480080E0"/>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC3_WPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn---n-nnn" edc:impl="0xFFFFFF17" edc:_addr="0x480080E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="WPEN" edc:nzwidth="0x1" edc:desc="Write Protection Enable"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:nzwidth="0x1" edc:desc="Write Protection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:nzwidth="0x1" edc:desc="Write Protection Control Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FIRSTE" edc:nzwidth="0x1" edc:desc="First Error Report Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPEN bit. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x54494D"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x18" edc:_addr="0x480080E8"/>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC3_RPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48008100">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="RXPTR" edc:nzwidth="0x20" edc:desc="Receive Pointer Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC3_RCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x48008104">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="RXCTR" edc:nzwidth="0x10" edc:desc="Receive Counter Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x48008108"/>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC3_RNPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48008110">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="RXNPTR" edc:nzwidth="0x20" edc:desc="Receive Next Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC3_RNCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x48008114">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="RXNCTR" edc:nzwidth="0x10" edc:desc="Receive Next Counter"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x48008118"/>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC3_PTC3R" edc:nzwidth="0x20" edc:access="-------w----wwww------ww------ww" edc:impl="0x10F0303" edc:_addr="0x48008120">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="RXTEN" edc:nzwidth="0x1" edc:desc="Receiver Transfer Enable"/>
            <edc:SFRFieldDef edc:cname="RXTDIS" edc:nzwidth="0x1" edc:desc="Receiver Transfer Disable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="TXTEN" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Enable"/>
            <edc:SFRFieldDef edc:cname="TXTDIS" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Disable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="RXCBEN" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Enable"/>
            <edc:SFRFieldDef edc:cname="RXCBDIS" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Disable"/>
            <edc:SFRFieldDef edc:cname="TXCBEN" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Enable"/>
            <edc:SFRFieldDef edc:cname="TXCBDIS" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Disable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ERRCLR" edc:nzwidth="0x1" edc:desc="Transfer Bus Error Clear"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC3_PTSR" edc:nzwidth="0x20" edc:access="-------r-----r-r-------r-------r" edc:impl="0x1050101" edc:_addr="0x48008124">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="RXTEN" edc:nzwidth="0x1" edc:desc="Receiver Transfer Enable"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="TXTEN" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Enable"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="RXCBEN" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXCBEN" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Transfer Bus Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="TC3_PWPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:impl="0xFFFFFF07" edc:_addr="0x48008128">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="WPPTREN" edc:nzwidth="0x1" edc:desc="Write Protection Pointer Registers Enable"/>
            <edc:SFRFieldDef edc:cname="WPCTREN" edc:nzwidth="0x1" edc:desc="Write Protection Counter Registers Enable"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:nzwidth="0x1" edc:desc="Write Protection Control Register Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x504443"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3ED4" edc:_addr="0x4800812C"/>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_GROUP0PIO1_MSKR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4800C000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="MSK0" edc:nzwidth="0x1" edc:desc="PIO Line 0 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK1" edc:nzwidth="0x1" edc:desc="PIO Line 1 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK2" edc:nzwidth="0x1" edc:desc="PIO Line 2 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK3" edc:nzwidth="0x1" edc:desc="PIO Line 3 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK4" edc:nzwidth="0x1" edc:desc="PIO Line 4 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK5" edc:nzwidth="0x1" edc:desc="PIO Line 5 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK6" edc:nzwidth="0x1" edc:desc="PIO Line 6 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK7" edc:nzwidth="0x1" edc:desc="PIO Line 7 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK8" edc:nzwidth="0x1" edc:desc="PIO Line 8 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK9" edc:nzwidth="0x1" edc:desc="PIO Line 9 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK10" edc:nzwidth="0x1" edc:desc="PIO Line 10 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK11" edc:nzwidth="0x1" edc:desc="PIO Line 11 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK12" edc:nzwidth="0x1" edc:desc="PIO Line 12 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK13" edc:nzwidth="0x1" edc:desc="PIO Line 13 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK14" edc:nzwidth="0x1" edc:desc="PIO Line 14 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK15" edc:nzwidth="0x1" edc:desc="PIO Line 15 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK16" edc:nzwidth="0x1" edc:desc="PIO Line 16 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK17" edc:nzwidth="0x1" edc:desc="PIO Line 17 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK18" edc:nzwidth="0x1" edc:desc="PIO Line 18 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK19" edc:nzwidth="0x1" edc:desc="PIO Line 19 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK20" edc:nzwidth="0x1" edc:desc="PIO Line 20 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK21" edc:nzwidth="0x1" edc:desc="PIO Line 21 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK22" edc:nzwidth="0x1" edc:desc="PIO Line 22 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK23" edc:nzwidth="0x1" edc:desc="PIO Line 23 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK24" edc:nzwidth="0x1" edc:desc="PIO Line 24 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK25" edc:nzwidth="0x1" edc:desc="PIO Line 25 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK26" edc:nzwidth="0x1" edc:desc="PIO Line 26 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK27" edc:nzwidth="0x1" edc:desc="PIO Line 27 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK28" edc:nzwidth="0x1" edc:desc="PIO Line 28 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK29" edc:nzwidth="0x1" edc:desc="PIO Line 29 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK30" edc:nzwidth="0x1" edc:desc="PIO Line 30 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK31" edc:nzwidth="0x1" edc:desc="PIO Line 31 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_GROUP0PIO1_CFGR" edc:nzwidth="0x20" edc:access="-nn--nnn------nnnnnn-nnn-----nnn" edc:impl="0x6703F707" edc:_addr="0x4800C004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="FUNC" edc:nzwidth="0x3" edc:desc="I/O Line Function">
              <edc:SFRFieldSemantic edc:cname="GPIO" edc:desc="Select the PIO mode for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_A" edc:desc="Select the peripheral A for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_B" edc:desc="Select the peripheral B for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_C" edc:desc="Select the peripheral C for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_D" edc:desc="Select the peripheral D for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x04"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Direction">
              <edc:SFRFieldSemantic edc:cname="INPUT" edc:desc="The selected I/O lines are pure inputs." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="OUTPUT" edc:desc="The selected I/O lines are enabled in output." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PUEN" edc:nzwidth="0x1" edc:desc="Pull-Up Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Pull-Up is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Pull-Up is enabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PDEN" edc:nzwidth="0x1" edc:desc="Pull-Down Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Pull-Down is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Pull-Down is enabled for the selected I/O lines only if PUEN is 0." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="IFEN" edc:nzwidth="0x1" edc:desc="Input Filter Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="The input filter is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="The input filter is enabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="IFSCEN" edc:nzwidth="0x1" edc:desc="Input Filter Slow Clock Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="The glitch filter is able to filter glitches with a duration &lt; tmck/2 for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="The debouncing filter is able to filter pulses with a duration &lt; tdiv_slck/2 for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="OPD" edc:nzwidth="0x1" edc:desc="Open-Drain">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="The open-drain is disabled for the selected I/O lines. I/O lines are driven at high- and low-level." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="The open-drain is enabled for the selected I/O lines. I/O lines are driven at low-level only." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCHMITT" edc:nzwidth="0x1" edc:desc="Schmitt Trigger">
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Schmitt trigger is enabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Schmitt trigger is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SLEWRATE" edc:nzwidth="0x2" edc:desc="Slew Rate">
              <edc:SFRFieldSemantic edc:cname="FAST" edc:desc="Fast slew rate" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="MEDIUMFAST" edc:desc="Medium-fast slew rate" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="MEDIUM" edc:desc="Medium slew rate" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SLOW" edc:desc="Slow slew rate" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="EVTSEL" edc:nzwidth="0x3" edc:desc="Event Selection">
              <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Event detection on input falling edge" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Event detection on input rising edge" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Event detection on input both edge" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Event detection on low level input" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="Event detection on high level input" edc:when="(field &amp; 0x7) == 0x04"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PCFS" edc:nzwidth="0x1" edc:desc="Physical Configuration Freeze Status (read-only)">
              <edc:SFRFieldSemantic edc:cname="NOT_FROZEN" edc:desc="The fields are not frozen and can be written for this I/O line." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="FROZEN" edc:desc="The fields are frozen and cannot be written for this I/O line. Only a hardware reset can release these fields." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ICFS" edc:nzwidth="0x1" edc:desc="Interrupt Configuration Freeze Status (read-only)">
              <edc:SFRFieldSemantic edc:cname="NOT_FROZEN" edc:desc="The fields are not frozen and can be written for this I/O line." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="FROZEN" edc:desc="The fields are frozen and cannot be written for this I/O line. Only a hardware reset can release these fields." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_GROUP0PIO1_PDSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4800C008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_GROUP0PIO1_LOCKSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4800C00C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Lock Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_GROUP0PIO1_SODR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4800C010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_GROUP0PIO1_CODR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4800C014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_GROUP0PIO1_ODSR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4800C018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4800C01C"/>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_GROUP0PIO1_IER" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4800C020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_GROUP0PIO1_IDR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4800C024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_GROUP0PIO1_IMR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4800C028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_GROUP0PIO1_ISR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4800C02C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x4800C030"/>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_GROUP0PIO1_IOFR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwww------ww" edc:impl="0xFFFFFF03" edc:_addr="0x4800C03C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="FPHY" edc:nzwidth="0x1" edc:desc="Freeze Physical Configuration"/>
            <edc:SFRFieldDef edc:cname="FINT" edc:nzwidth="0x1" edc:desc="Freeze Interrupt Configuration"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="FRZKEY" edc:nzwidth="0x18" edc:desc="Freeze Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPEN bit." edc:when="(field &amp; 0xFFFFFF) == 0x494F46"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_GROUP1PIO1_MSKR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4800C040">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="MSK0" edc:nzwidth="0x1" edc:desc="PIO Line 0 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK1" edc:nzwidth="0x1" edc:desc="PIO Line 1 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK2" edc:nzwidth="0x1" edc:desc="PIO Line 2 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK3" edc:nzwidth="0x1" edc:desc="PIO Line 3 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK4" edc:nzwidth="0x1" edc:desc="PIO Line 4 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK5" edc:nzwidth="0x1" edc:desc="PIO Line 5 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK6" edc:nzwidth="0x1" edc:desc="PIO Line 6 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK7" edc:nzwidth="0x1" edc:desc="PIO Line 7 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK8" edc:nzwidth="0x1" edc:desc="PIO Line 8 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK9" edc:nzwidth="0x1" edc:desc="PIO Line 9 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK10" edc:nzwidth="0x1" edc:desc="PIO Line 10 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK11" edc:nzwidth="0x1" edc:desc="PIO Line 11 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK12" edc:nzwidth="0x1" edc:desc="PIO Line 12 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK13" edc:nzwidth="0x1" edc:desc="PIO Line 13 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK14" edc:nzwidth="0x1" edc:desc="PIO Line 14 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK15" edc:nzwidth="0x1" edc:desc="PIO Line 15 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK16" edc:nzwidth="0x1" edc:desc="PIO Line 16 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK17" edc:nzwidth="0x1" edc:desc="PIO Line 17 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK18" edc:nzwidth="0x1" edc:desc="PIO Line 18 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK19" edc:nzwidth="0x1" edc:desc="PIO Line 19 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK20" edc:nzwidth="0x1" edc:desc="PIO Line 20 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK21" edc:nzwidth="0x1" edc:desc="PIO Line 21 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK22" edc:nzwidth="0x1" edc:desc="PIO Line 22 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK23" edc:nzwidth="0x1" edc:desc="PIO Line 23 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK24" edc:nzwidth="0x1" edc:desc="PIO Line 24 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK25" edc:nzwidth="0x1" edc:desc="PIO Line 25 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK26" edc:nzwidth="0x1" edc:desc="PIO Line 26 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK27" edc:nzwidth="0x1" edc:desc="PIO Line 27 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK28" edc:nzwidth="0x1" edc:desc="PIO Line 28 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK29" edc:nzwidth="0x1" edc:desc="PIO Line 29 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK30" edc:nzwidth="0x1" edc:desc="PIO Line 30 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK31" edc:nzwidth="0x1" edc:desc="PIO Line 31 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_GROUP1PIO1_CFGR" edc:nzwidth="0x20" edc:access="-nn--nnn------nnnnnn-nnn-----nnn" edc:impl="0x6703F707" edc:_addr="0x4800C044">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="FUNC" edc:nzwidth="0x3" edc:desc="I/O Line Function">
              <edc:SFRFieldSemantic edc:cname="GPIO" edc:desc="Select the PIO mode for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_A" edc:desc="Select the peripheral A for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_B" edc:desc="Select the peripheral B for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_C" edc:desc="Select the peripheral C for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_D" edc:desc="Select the peripheral D for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x04"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Direction">
              <edc:SFRFieldSemantic edc:cname="INPUT" edc:desc="The selected I/O lines are pure inputs." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="OUTPUT" edc:desc="The selected I/O lines are enabled in output." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PUEN" edc:nzwidth="0x1" edc:desc="Pull-Up Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Pull-Up is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Pull-Up is enabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PDEN" edc:nzwidth="0x1" edc:desc="Pull-Down Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Pull-Down is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Pull-Down is enabled for the selected I/O lines only if PUEN is 0." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="IFEN" edc:nzwidth="0x1" edc:desc="Input Filter Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="The input filter is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="The input filter is enabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="IFSCEN" edc:nzwidth="0x1" edc:desc="Input Filter Slow Clock Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="The glitch filter is able to filter glitches with a duration &lt; tmck/2 for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="The debouncing filter is able to filter pulses with a duration &lt; tdiv_slck/2 for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="OPD" edc:nzwidth="0x1" edc:desc="Open-Drain">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="The open-drain is disabled for the selected I/O lines. I/O lines are driven at high- and low-level." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="The open-drain is enabled for the selected I/O lines. I/O lines are driven at low-level only." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCHMITT" edc:nzwidth="0x1" edc:desc="Schmitt Trigger">
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Schmitt trigger is enabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Schmitt trigger is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SLEWRATE" edc:nzwidth="0x2" edc:desc="Slew Rate">
              <edc:SFRFieldSemantic edc:cname="FAST" edc:desc="Fast slew rate" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="MEDIUMFAST" edc:desc="Medium-fast slew rate" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="MEDIUM" edc:desc="Medium slew rate" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SLOW" edc:desc="Slow slew rate" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="EVTSEL" edc:nzwidth="0x3" edc:desc="Event Selection">
              <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Event detection on input falling edge" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Event detection on input rising edge" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Event detection on input both edge" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Event detection on low level input" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="Event detection on high level input" edc:when="(field &amp; 0x7) == 0x04"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PCFS" edc:nzwidth="0x1" edc:desc="Physical Configuration Freeze Status (read-only)">
              <edc:SFRFieldSemantic edc:cname="NOT_FROZEN" edc:desc="The fields are not frozen and can be written for this I/O line." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="FROZEN" edc:desc="The fields are frozen and cannot be written for this I/O line. Only a hardware reset can release these fields." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ICFS" edc:nzwidth="0x1" edc:desc="Interrupt Configuration Freeze Status (read-only)">
              <edc:SFRFieldSemantic edc:cname="NOT_FROZEN" edc:desc="The fields are not frozen and can be written for this I/O line." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="FROZEN" edc:desc="The fields are frozen and cannot be written for this I/O line. Only a hardware reset can release these fields." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_GROUP1PIO1_PDSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4800C048">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_GROUP1PIO1_LOCKSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4800C04C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Lock Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_GROUP1PIO1_SODR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4800C050">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_GROUP1PIO1_CODR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4800C054">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_GROUP1PIO1_ODSR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4800C058">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4800C05C"/>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_GROUP1PIO1_IER" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4800C060">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_GROUP1PIO1_IDR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4800C064">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_GROUP1PIO1_IMR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4800C068">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_GROUP1PIO1_ISR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4800C06C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x4800C070"/>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_GROUP1PIO1_IOFR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwww------ww" edc:impl="0xFFFFFF03" edc:_addr="0x4800C07C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="FPHY" edc:nzwidth="0x1" edc:desc="Freeze Physical Configuration"/>
            <edc:SFRFieldDef edc:cname="FINT" edc:nzwidth="0x1" edc:desc="Freeze Interrupt Configuration"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="FRZKEY" edc:nzwidth="0x18" edc:desc="Freeze Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPEN bit." edc:when="(field &amp; 0xFFFFFF) == 0x494F46"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_GROUP2PIO1_MSKR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4800C080">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="MSK0" edc:nzwidth="0x1" edc:desc="PIO Line 0 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK1" edc:nzwidth="0x1" edc:desc="PIO Line 1 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK2" edc:nzwidth="0x1" edc:desc="PIO Line 2 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK3" edc:nzwidth="0x1" edc:desc="PIO Line 3 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK4" edc:nzwidth="0x1" edc:desc="PIO Line 4 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK5" edc:nzwidth="0x1" edc:desc="PIO Line 5 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK6" edc:nzwidth="0x1" edc:desc="PIO Line 6 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK7" edc:nzwidth="0x1" edc:desc="PIO Line 7 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK8" edc:nzwidth="0x1" edc:desc="PIO Line 8 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK9" edc:nzwidth="0x1" edc:desc="PIO Line 9 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK10" edc:nzwidth="0x1" edc:desc="PIO Line 10 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK11" edc:nzwidth="0x1" edc:desc="PIO Line 11 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK12" edc:nzwidth="0x1" edc:desc="PIO Line 12 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK13" edc:nzwidth="0x1" edc:desc="PIO Line 13 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK14" edc:nzwidth="0x1" edc:desc="PIO Line 14 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK15" edc:nzwidth="0x1" edc:desc="PIO Line 15 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK16" edc:nzwidth="0x1" edc:desc="PIO Line 16 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK17" edc:nzwidth="0x1" edc:desc="PIO Line 17 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK18" edc:nzwidth="0x1" edc:desc="PIO Line 18 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK19" edc:nzwidth="0x1" edc:desc="PIO Line 19 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK20" edc:nzwidth="0x1" edc:desc="PIO Line 20 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK21" edc:nzwidth="0x1" edc:desc="PIO Line 21 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK22" edc:nzwidth="0x1" edc:desc="PIO Line 22 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK23" edc:nzwidth="0x1" edc:desc="PIO Line 23 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK24" edc:nzwidth="0x1" edc:desc="PIO Line 24 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK25" edc:nzwidth="0x1" edc:desc="PIO Line 25 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK26" edc:nzwidth="0x1" edc:desc="PIO Line 26 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK27" edc:nzwidth="0x1" edc:desc="PIO Line 27 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK28" edc:nzwidth="0x1" edc:desc="PIO Line 28 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK29" edc:nzwidth="0x1" edc:desc="PIO Line 29 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK30" edc:nzwidth="0x1" edc:desc="PIO Line 30 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK31" edc:nzwidth="0x1" edc:desc="PIO Line 31 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_GROUP2PIO1_CFGR" edc:nzwidth="0x20" edc:access="-nn--nnn------nnnnnn-nnn-----nnn" edc:impl="0x6703F707" edc:_addr="0x4800C084">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="FUNC" edc:nzwidth="0x3" edc:desc="I/O Line Function">
              <edc:SFRFieldSemantic edc:cname="GPIO" edc:desc="Select the PIO mode for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_A" edc:desc="Select the peripheral A for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_B" edc:desc="Select the peripheral B for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_C" edc:desc="Select the peripheral C for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_D" edc:desc="Select the peripheral D for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x04"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Direction">
              <edc:SFRFieldSemantic edc:cname="INPUT" edc:desc="The selected I/O lines are pure inputs." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="OUTPUT" edc:desc="The selected I/O lines are enabled in output." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PUEN" edc:nzwidth="0x1" edc:desc="Pull-Up Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Pull-Up is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Pull-Up is enabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PDEN" edc:nzwidth="0x1" edc:desc="Pull-Down Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Pull-Down is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Pull-Down is enabled for the selected I/O lines only if PUEN is 0." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="IFEN" edc:nzwidth="0x1" edc:desc="Input Filter Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="The input filter is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="The input filter is enabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="IFSCEN" edc:nzwidth="0x1" edc:desc="Input Filter Slow Clock Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="The glitch filter is able to filter glitches with a duration &lt; tmck/2 for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="The debouncing filter is able to filter pulses with a duration &lt; tdiv_slck/2 for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="OPD" edc:nzwidth="0x1" edc:desc="Open-Drain">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="The open-drain is disabled for the selected I/O lines. I/O lines are driven at high- and low-level." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="The open-drain is enabled for the selected I/O lines. I/O lines are driven at low-level only." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCHMITT" edc:nzwidth="0x1" edc:desc="Schmitt Trigger">
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Schmitt trigger is enabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Schmitt trigger is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SLEWRATE" edc:nzwidth="0x2" edc:desc="Slew Rate">
              <edc:SFRFieldSemantic edc:cname="FAST" edc:desc="Fast slew rate" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="MEDIUMFAST" edc:desc="Medium-fast slew rate" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="MEDIUM" edc:desc="Medium slew rate" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SLOW" edc:desc="Slow slew rate" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="EVTSEL" edc:nzwidth="0x3" edc:desc="Event Selection">
              <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Event detection on input falling edge" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Event detection on input rising edge" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Event detection on input both edge" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Event detection on low level input" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="Event detection on high level input" edc:when="(field &amp; 0x7) == 0x04"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PCFS" edc:nzwidth="0x1" edc:desc="Physical Configuration Freeze Status (read-only)">
              <edc:SFRFieldSemantic edc:cname="NOT_FROZEN" edc:desc="The fields are not frozen and can be written for this I/O line." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="FROZEN" edc:desc="The fields are frozen and cannot be written for this I/O line. Only a hardware reset can release these fields." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ICFS" edc:nzwidth="0x1" edc:desc="Interrupt Configuration Freeze Status (read-only)">
              <edc:SFRFieldSemantic edc:cname="NOT_FROZEN" edc:desc="The fields are not frozen and can be written for this I/O line." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="FROZEN" edc:desc="The fields are frozen and cannot be written for this I/O line. Only a hardware reset can release these fields." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_GROUP2PIO1_PDSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4800C088">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_GROUP2PIO1_LOCKSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4800C08C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Lock Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_GROUP2PIO1_SODR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4800C090">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_GROUP2PIO1_CODR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4800C094">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_GROUP2PIO1_ODSR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4800C098">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4800C09C"/>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_GROUP2PIO1_IER" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4800C0A0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_GROUP2PIO1_IDR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4800C0A4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_GROUP2PIO1_IMR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4800C0A8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_GROUP2PIO1_ISR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4800C0AC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x4800C0B0"/>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_GROUP2PIO1_IOFR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwww------ww" edc:impl="0xFFFFFF03" edc:_addr="0x4800C0BC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="FPHY" edc:nzwidth="0x1" edc:desc="Freeze Physical Configuration"/>
            <edc:SFRFieldDef edc:cname="FINT" edc:nzwidth="0x1" edc:desc="Freeze Interrupt Configuration"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="FRZKEY" edc:nzwidth="0x18" edc:desc="Freeze Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPEN bit." edc:when="(field &amp; 0xFFFFFF) == 0x494F46"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x520" edc:_addr="0x4800C0C0"/>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO1_WPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn------nn" edc:impl="0xFFFFFF03" edc:_addr="0x4800C5E0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="WPEN" edc:nzwidth="0x1" edc:desc="Write Protection Enable"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:nzwidth="0x1" edc:desc="Write Protection Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPEN bit. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x50494F"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO1_WPSR" edc:nzwidth="0x20" edc:access="--------rrrrrrrrrrrrrrrr-------r" edc:impl="0xFFFF01" edc:_addr="0x4800C5E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="WPVS" edc:nzwidth="0x1" edc:desc="Write Protection Violation Status"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:nzwidth="0x10" edc:desc="Write Protection Violation Source"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xA18" edc:_addr="0x4800C5E8"/>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_P0PIO1_P_MSKR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4800D000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="MSK0" edc:nzwidth="0x1" edc:desc="PIO Line 0 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK1" edc:nzwidth="0x1" edc:desc="PIO Line 1 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK2" edc:nzwidth="0x1" edc:desc="PIO Line 2 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK3" edc:nzwidth="0x1" edc:desc="PIO Line 3 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK4" edc:nzwidth="0x1" edc:desc="PIO Line 4 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK5" edc:nzwidth="0x1" edc:desc="PIO Line 5 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK6" edc:nzwidth="0x1" edc:desc="PIO Line 6 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK7" edc:nzwidth="0x1" edc:desc="PIO Line 7 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK8" edc:nzwidth="0x1" edc:desc="PIO Line 8 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK9" edc:nzwidth="0x1" edc:desc="PIO Line 9 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK10" edc:nzwidth="0x1" edc:desc="PIO Line 10 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK11" edc:nzwidth="0x1" edc:desc="PIO Line 11 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK12" edc:nzwidth="0x1" edc:desc="PIO Line 12 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK13" edc:nzwidth="0x1" edc:desc="PIO Line 13 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK14" edc:nzwidth="0x1" edc:desc="PIO Line 14 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK15" edc:nzwidth="0x1" edc:desc="PIO Line 15 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK16" edc:nzwidth="0x1" edc:desc="PIO Line 16 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK17" edc:nzwidth="0x1" edc:desc="PIO Line 17 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK18" edc:nzwidth="0x1" edc:desc="PIO Line 18 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK19" edc:nzwidth="0x1" edc:desc="PIO Line 19 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK20" edc:nzwidth="0x1" edc:desc="PIO Line 20 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK21" edc:nzwidth="0x1" edc:desc="PIO Line 21 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK22" edc:nzwidth="0x1" edc:desc="PIO Line 22 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK23" edc:nzwidth="0x1" edc:desc="PIO Line 23 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK24" edc:nzwidth="0x1" edc:desc="PIO Line 24 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK25" edc:nzwidth="0x1" edc:desc="PIO Line 25 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK26" edc:nzwidth="0x1" edc:desc="PIO Line 26 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK27" edc:nzwidth="0x1" edc:desc="PIO Line 27 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK28" edc:nzwidth="0x1" edc:desc="PIO Line 28 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK29" edc:nzwidth="0x1" edc:desc="PIO Line 29 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK30" edc:nzwidth="0x1" edc:desc="PIO Line 30 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK31" edc:nzwidth="0x1" edc:desc="PIO Line 31 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_P0PIO1_P_CFGR" edc:nzwidth="0x20" edc:access="-nn--nnn------nnnnnn-nnn-----nnn" edc:impl="0x6703F707" edc:_addr="0x4800D004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="FUNC" edc:nzwidth="0x3" edc:desc="I/O Line Function">
              <edc:SFRFieldSemantic edc:cname="GPIO" edc:desc="Select the PIO mode for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_A" edc:desc="Select the peripheral A for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_B" edc:desc="Select the peripheral B for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_C" edc:desc="Select the peripheral C for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_D" edc:desc="Select the peripheral D for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x04"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Direction">
              <edc:SFRFieldSemantic edc:cname="INPUT" edc:desc="The selected I/O lines are pure inputs." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="OUTPUT" edc:desc="The selected I/O lines are enabled in output." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PUEN" edc:nzwidth="0x1" edc:desc="Pull-Up Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Pull-Up is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Pull-Up is enabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PDEN" edc:nzwidth="0x1" edc:desc="Pull-Down Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Pull-Down is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Pull-Down is enabled for the selected I/O lines only if PUEN is 0." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="IFEN" edc:nzwidth="0x1" edc:desc="Input Filter Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="The input filter is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="The input filter is enabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="IFSCEN" edc:nzwidth="0x1" edc:desc="Input Filter Slow Clock Enable"/>
            <edc:SFRFieldDef edc:cname="OPD" edc:nzwidth="0x1" edc:desc="Open-Drain">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="The open-drain is disabled for the selected I/O lines. I/O lines are driven at high- and low-level." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="The open-drain is enabled for the selected I/O lines. I/O lines are driven at low-level only." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCHMITT" edc:nzwidth="0x1" edc:desc="Schmitt Trigger">
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Schmitt trigger is enabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Schmitt trigger is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SLEWRATE" edc:nzwidth="0x2" edc:desc="Slew Rate">
              <edc:SFRFieldSemantic edc:cname="FAST" edc:desc="Slow slew rate" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="MEDIUMFAST" edc:desc="Medium-fast slew rate" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="MEDIUM" edc:desc="Medium slew rate" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SLOW" edc:desc="Slow slew rate" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="EVTSEL" edc:nzwidth="0x3" edc:desc="Event Selection">
              <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Event detection on input falling edge" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Event detection on input rising edge" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Event detection on input both edge" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Event detection on low level input" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="Event detection on high level input" edc:when="(field &amp; 0x7) == 0x04"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PCFS" edc:nzwidth="0x1" edc:desc="Physical Configuration Freeze Status (read-only)">
              <edc:SFRFieldSemantic edc:cname="NOT_FROZEN" edc:desc="The fields are not frozen and can be written for this I/O line." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="FROZEN" edc:desc="The fields are frozen and cannot be written for this I/O line. Only a hardware reset can release these fields." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ICFS" edc:nzwidth="0x1" edc:desc="Interrupt Configuration Freeze Status (read-only)">
              <edc:SFRFieldSemantic edc:cname="NOT_FROZEN" edc:desc="The fields are not frozen and can be written for this I/O line." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="FROZEN" edc:desc="The fields are frozen and cannot be written for this I/O line. Only a hardware reset can release these fields." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_P0PIO1_P_PDSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4800D008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_P0PIO1_P_LOCKSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4800D00C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Lock Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_P0PIO1_P_SODR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4800D010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_P0PIO1_P_CODR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4800D014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_P0PIO1_P_ODSR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4800D018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4800D01C"/>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_P0PIO1_P_IER" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4800D020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_P0PIO1_P_IDR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4800D024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_P0PIO1_P_IMR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4800D028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_P0PIO1_P_ISR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4800D02C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_P0PIO1_P_SIO_UAR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4800D030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_P0PIO1_P_SIO_PAR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4800D034">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_P0PIO1_P_IOSSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4800D038">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_P0PIO1_P_IOFR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwww------ww" edc:impl="0xFFFFFF03" edc:_addr="0x4800D03C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="FPHY" edc:nzwidth="0x1" edc:desc="Freeze Physical Configuration"/>
            <edc:SFRFieldDef edc:cname="FINT" edc:nzwidth="0x1" edc:desc="Freeze Interrupt Configuration"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="FRZKEY" edc:nzwidth="0x18" edc:desc="Freeze Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPEN bit." edc:when="(field &amp; 0xFFFFFF) == 0x494F46"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_P1PIO1_P_MSKR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4800D040">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="MSK0" edc:nzwidth="0x1" edc:desc="PIO Line 0 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK1" edc:nzwidth="0x1" edc:desc="PIO Line 1 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK2" edc:nzwidth="0x1" edc:desc="PIO Line 2 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK3" edc:nzwidth="0x1" edc:desc="PIO Line 3 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK4" edc:nzwidth="0x1" edc:desc="PIO Line 4 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK5" edc:nzwidth="0x1" edc:desc="PIO Line 5 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK6" edc:nzwidth="0x1" edc:desc="PIO Line 6 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK7" edc:nzwidth="0x1" edc:desc="PIO Line 7 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK8" edc:nzwidth="0x1" edc:desc="PIO Line 8 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK9" edc:nzwidth="0x1" edc:desc="PIO Line 9 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK10" edc:nzwidth="0x1" edc:desc="PIO Line 10 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK11" edc:nzwidth="0x1" edc:desc="PIO Line 11 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK12" edc:nzwidth="0x1" edc:desc="PIO Line 12 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK13" edc:nzwidth="0x1" edc:desc="PIO Line 13 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK14" edc:nzwidth="0x1" edc:desc="PIO Line 14 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK15" edc:nzwidth="0x1" edc:desc="PIO Line 15 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK16" edc:nzwidth="0x1" edc:desc="PIO Line 16 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK17" edc:nzwidth="0x1" edc:desc="PIO Line 17 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK18" edc:nzwidth="0x1" edc:desc="PIO Line 18 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK19" edc:nzwidth="0x1" edc:desc="PIO Line 19 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK20" edc:nzwidth="0x1" edc:desc="PIO Line 20 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK21" edc:nzwidth="0x1" edc:desc="PIO Line 21 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK22" edc:nzwidth="0x1" edc:desc="PIO Line 22 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK23" edc:nzwidth="0x1" edc:desc="PIO Line 23 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK24" edc:nzwidth="0x1" edc:desc="PIO Line 24 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK25" edc:nzwidth="0x1" edc:desc="PIO Line 25 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK26" edc:nzwidth="0x1" edc:desc="PIO Line 26 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK27" edc:nzwidth="0x1" edc:desc="PIO Line 27 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK28" edc:nzwidth="0x1" edc:desc="PIO Line 28 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK29" edc:nzwidth="0x1" edc:desc="PIO Line 29 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK30" edc:nzwidth="0x1" edc:desc="PIO Line 30 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK31" edc:nzwidth="0x1" edc:desc="PIO Line 31 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_P1PIO1_P_CFGR" edc:nzwidth="0x20" edc:access="-nn--nnn------nnnnnn-nnn-----nnn" edc:impl="0x6703F707" edc:_addr="0x4800D044">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="FUNC" edc:nzwidth="0x3" edc:desc="I/O Line Function">
              <edc:SFRFieldSemantic edc:cname="GPIO" edc:desc="Select the PIO mode for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_A" edc:desc="Select the peripheral A for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_B" edc:desc="Select the peripheral B for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_C" edc:desc="Select the peripheral C for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_D" edc:desc="Select the peripheral D for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x04"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Direction">
              <edc:SFRFieldSemantic edc:cname="INPUT" edc:desc="The selected I/O lines are pure inputs." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="OUTPUT" edc:desc="The selected I/O lines are enabled in output." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PUEN" edc:nzwidth="0x1" edc:desc="Pull-Up Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Pull-Up is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Pull-Up is enabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PDEN" edc:nzwidth="0x1" edc:desc="Pull-Down Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Pull-Down is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Pull-Down is enabled for the selected I/O lines only if PUEN is 0." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="IFEN" edc:nzwidth="0x1" edc:desc="Input Filter Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="The input filter is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="The input filter is enabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="IFSCEN" edc:nzwidth="0x1" edc:desc="Input Filter Slow Clock Enable"/>
            <edc:SFRFieldDef edc:cname="OPD" edc:nzwidth="0x1" edc:desc="Open-Drain">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="The open-drain is disabled for the selected I/O lines. I/O lines are driven at high- and low-level." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="The open-drain is enabled for the selected I/O lines. I/O lines are driven at low-level only." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCHMITT" edc:nzwidth="0x1" edc:desc="Schmitt Trigger">
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Schmitt trigger is enabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Schmitt trigger is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SLEWRATE" edc:nzwidth="0x2" edc:desc="Slew Rate">
              <edc:SFRFieldSemantic edc:cname="FAST" edc:desc="Slow slew rate" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="MEDIUMFAST" edc:desc="Medium-fast slew rate" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="MEDIUM" edc:desc="Medium slew rate" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SLOW" edc:desc="Slow slew rate" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="EVTSEL" edc:nzwidth="0x3" edc:desc="Event Selection">
              <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Event detection on input falling edge" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Event detection on input rising edge" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Event detection on input both edge" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Event detection on low level input" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="Event detection on high level input" edc:when="(field &amp; 0x7) == 0x04"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PCFS" edc:nzwidth="0x1" edc:desc="Physical Configuration Freeze Status (read-only)">
              <edc:SFRFieldSemantic edc:cname="NOT_FROZEN" edc:desc="The fields are not frozen and can be written for this I/O line." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="FROZEN" edc:desc="The fields are frozen and cannot be written for this I/O line. Only a hardware reset can release these fields." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ICFS" edc:nzwidth="0x1" edc:desc="Interrupt Configuration Freeze Status (read-only)">
              <edc:SFRFieldSemantic edc:cname="NOT_FROZEN" edc:desc="The fields are not frozen and can be written for this I/O line." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="FROZEN" edc:desc="The fields are frozen and cannot be written for this I/O line. Only a hardware reset can release these fields." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_P1PIO1_P_PDSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4800D048">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_P1PIO1_P_LOCKSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4800D04C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Lock Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_P1PIO1_P_SODR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4800D050">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_P1PIO1_P_CODR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4800D054">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_P1PIO1_P_ODSR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4800D058">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4800D05C"/>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_P1PIO1_P_IER" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4800D060">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_P1PIO1_P_IDR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4800D064">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_P1PIO1_P_IMR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4800D068">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_P1PIO1_P_ISR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4800D06C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_P1PIO1_P_SIO_UAR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4800D070">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_P1PIO1_P_SIO_PAR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4800D074">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_P1PIO1_P_IOSSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4800D078">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_P1PIO1_P_IOFR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwww------ww" edc:impl="0xFFFFFF03" edc:_addr="0x4800D07C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="FPHY" edc:nzwidth="0x1" edc:desc="Freeze Physical Configuration"/>
            <edc:SFRFieldDef edc:cname="FINT" edc:nzwidth="0x1" edc:desc="Freeze Interrupt Configuration"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="FRZKEY" edc:nzwidth="0x18" edc:desc="Freeze Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPEN bit." edc:when="(field &amp; 0xFFFFFF) == 0x494F46"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_P2PIO1_P_MSKR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4800D080">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="MSK0" edc:nzwidth="0x1" edc:desc="PIO Line 0 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK1" edc:nzwidth="0x1" edc:desc="PIO Line 1 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK2" edc:nzwidth="0x1" edc:desc="PIO Line 2 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK3" edc:nzwidth="0x1" edc:desc="PIO Line 3 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK4" edc:nzwidth="0x1" edc:desc="PIO Line 4 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK5" edc:nzwidth="0x1" edc:desc="PIO Line 5 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK6" edc:nzwidth="0x1" edc:desc="PIO Line 6 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK7" edc:nzwidth="0x1" edc:desc="PIO Line 7 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK8" edc:nzwidth="0x1" edc:desc="PIO Line 8 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK9" edc:nzwidth="0x1" edc:desc="PIO Line 9 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK10" edc:nzwidth="0x1" edc:desc="PIO Line 10 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK11" edc:nzwidth="0x1" edc:desc="PIO Line 11 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK12" edc:nzwidth="0x1" edc:desc="PIO Line 12 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK13" edc:nzwidth="0x1" edc:desc="PIO Line 13 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK14" edc:nzwidth="0x1" edc:desc="PIO Line 14 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK15" edc:nzwidth="0x1" edc:desc="PIO Line 15 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK16" edc:nzwidth="0x1" edc:desc="PIO Line 16 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK17" edc:nzwidth="0x1" edc:desc="PIO Line 17 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK18" edc:nzwidth="0x1" edc:desc="PIO Line 18 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK19" edc:nzwidth="0x1" edc:desc="PIO Line 19 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK20" edc:nzwidth="0x1" edc:desc="PIO Line 20 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK21" edc:nzwidth="0x1" edc:desc="PIO Line 21 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK22" edc:nzwidth="0x1" edc:desc="PIO Line 22 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK23" edc:nzwidth="0x1" edc:desc="PIO Line 23 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK24" edc:nzwidth="0x1" edc:desc="PIO Line 24 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK25" edc:nzwidth="0x1" edc:desc="PIO Line 25 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK26" edc:nzwidth="0x1" edc:desc="PIO Line 26 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK27" edc:nzwidth="0x1" edc:desc="PIO Line 27 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK28" edc:nzwidth="0x1" edc:desc="PIO Line 28 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK29" edc:nzwidth="0x1" edc:desc="PIO Line 29 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK30" edc:nzwidth="0x1" edc:desc="PIO Line 30 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK31" edc:nzwidth="0x1" edc:desc="PIO Line 31 Mask">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_P_CFGRx, PIO_P_ODSRx or PIO_P_IOFRX updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_P2PIO1_P_CFGR" edc:nzwidth="0x20" edc:access="-nn--nnn------nnnnnn-nnn-----nnn" edc:impl="0x6703F707" edc:_addr="0x4800D084">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="FUNC" edc:nzwidth="0x3" edc:desc="I/O Line Function">
              <edc:SFRFieldSemantic edc:cname="GPIO" edc:desc="Select the PIO mode for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_A" edc:desc="Select the peripheral A for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_B" edc:desc="Select the peripheral B for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_C" edc:desc="Select the peripheral C for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_D" edc:desc="Select the peripheral D for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x04"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Direction">
              <edc:SFRFieldSemantic edc:cname="INPUT" edc:desc="The selected I/O lines are pure inputs." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="OUTPUT" edc:desc="The selected I/O lines are enabled in output." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PUEN" edc:nzwidth="0x1" edc:desc="Pull-Up Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Pull-Up is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Pull-Up is enabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PDEN" edc:nzwidth="0x1" edc:desc="Pull-Down Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Pull-Down is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Pull-Down is enabled for the selected I/O lines only if PUEN is 0." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="IFEN" edc:nzwidth="0x1" edc:desc="Input Filter Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="The input filter is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="The input filter is enabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="IFSCEN" edc:nzwidth="0x1" edc:desc="Input Filter Slow Clock Enable"/>
            <edc:SFRFieldDef edc:cname="OPD" edc:nzwidth="0x1" edc:desc="Open-Drain">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="The open-drain is disabled for the selected I/O lines. I/O lines are driven at high- and low-level." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="The open-drain is enabled for the selected I/O lines. I/O lines are driven at low-level only." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCHMITT" edc:nzwidth="0x1" edc:desc="Schmitt Trigger">
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Schmitt trigger is enabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Schmitt trigger is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SLEWRATE" edc:nzwidth="0x2" edc:desc="Slew Rate">
              <edc:SFRFieldSemantic edc:cname="FAST" edc:desc="Slow slew rate" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="MEDIUMFAST" edc:desc="Medium-fast slew rate" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="MEDIUM" edc:desc="Medium slew rate" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SLOW" edc:desc="Slow slew rate" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="EVTSEL" edc:nzwidth="0x3" edc:desc="Event Selection">
              <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Event detection on input falling edge" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Event detection on input rising edge" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Event detection on input both edge" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Event detection on low level input" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="Event detection on high level input" edc:when="(field &amp; 0x7) == 0x04"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PCFS" edc:nzwidth="0x1" edc:desc="Physical Configuration Freeze Status (read-only)">
              <edc:SFRFieldSemantic edc:cname="NOT_FROZEN" edc:desc="The fields are not frozen and can be written for this I/O line." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="FROZEN" edc:desc="The fields are frozen and cannot be written for this I/O line. Only a hardware reset can release these fields." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ICFS" edc:nzwidth="0x1" edc:desc="Interrupt Configuration Freeze Status (read-only)">
              <edc:SFRFieldSemantic edc:cname="NOT_FROZEN" edc:desc="The fields are not frozen and can be written for this I/O line." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="FROZEN" edc:desc="The fields are frozen and cannot be written for this I/O line. Only a hardware reset can release these fields." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_P2PIO1_P_PDSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4800D088">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Data Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_P2PIO1_P_LOCKSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4800D08C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Lock Status"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Lock Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_P2PIO1_P_SODR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4800D090">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Set Output Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_P2PIO1_P_CODR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4800D094">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Clear Output Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_P2PIO1_P_ODSR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4800D098">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Output Data Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4800D09C"/>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_P2PIO1_P_IER" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4800D0A0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_P2PIO1_P_IDR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4800D0A4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_P2PIO1_P_IMR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4800D0A8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_P2PIO1_P_ISR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4800D0AC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Input Change Interrupt Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_P2PIO1_P_SIO_UAR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4800D0B0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Set I/O in User-Access mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_P2PIO1_P_SIO_PAR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4800D0B4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="Set I/O in Privileged-Access mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_P2PIO1_P_IOSSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4800D0B8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="P0" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P1" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P2" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P3" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P4" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P5" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P6" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P7" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P8" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P9" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P10" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P11" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P12" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P13" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P14" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P15" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P16" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P17" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P18" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P19" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P20" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P21" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P22" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P23" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P24" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P25" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P26" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P27" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P28" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P29" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P30" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="P31" edc:nzwidth="0x1" edc:desc="I/O Security Status">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED_ACCESS" edc:desc="The I/O line of the I/O group 0 is in Privileged-Access mode." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="USER_ACCESS" edc:desc="The I/O line of the I/O group 0 is in User-Access mode." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO_P2PIO1_P_IOFR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwww------ww" edc:impl="0xFFFFFF03" edc:_addr="0x4800D0BC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="FPHY" edc:nzwidth="0x1" edc:desc="Freeze Physical Configuration"/>
            <edc:SFRFieldDef edc:cname="FINT" edc:nzwidth="0x1" edc:desc="Freeze Interrupt Configuration"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="FRZKEY" edc:nzwidth="0x18" edc:desc="Freeze Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPEN bit." edc:when="(field &amp; 0xFFFFFF) == 0x494F46"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x440" edc:_addr="0x4800D0C0"/>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO1_P_SCDR" edc:nzwidth="0x20" edc:access="------------------nnnnnnnnnnnnnn" edc:impl="0x3FFF" edc:_addr="0x4800D500">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="DIV" edc:nzwidth="0xE" edc:desc="Slow Clock Divider Selection for Debouncing"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xDC" edc:_addr="0x4800D504"/>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO1_P_WPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn------nn" edc:impl="0xFFFFFF03" edc:_addr="0x4800D5E0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="WPEN" edc:nzwidth="0x1" edc:desc="Write Protection Enable"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:nzwidth="0x1" edc:desc="Write Protection Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of WPEN. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x50494F"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PIO1" edc:cname="PIO1_P_WPSR" edc:nzwidth="0x20" edc:access="--------rrrrrrrrrrrrrrrr-------r" edc:impl="0xFFFF01" edc:_addr="0x4800D5E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO1">
            <edc:SFRFieldDef edc:cname="WPVS" edc:nzwidth="0x1" edc:desc="Write Protection Violation Status"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:nzwidth="0x10" edc:desc="Write Protection Violation Source"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2A18" edc:_addr="0x4800D5E8"/>
      <edc:SFRDef ltx:memberofperipheral="UART" edc:cname="UART_CR" edc:nzwidth="0x20" edc:access="-----------------w-www-wwwwwww--" edc:impl="0x5DFC" edc:_addr="0x48010000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="UART">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RSTRX" edc:nzwidth="0x1" edc:desc="Reset Receiver"/>
            <edc:SFRFieldDef edc:cname="RSTTX" edc:nzwidth="0x1" edc:desc="Reset Transmitter"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
            <edc:SFRFieldDef edc:cname="RXDIS" edc:nzwidth="0x1" edc:desc="Receiver Disable"/>
            <edc:SFRFieldDef edc:cname="TXEN" edc:nzwidth="0x1" edc:desc="Transmitter Enable"/>
            <edc:SFRFieldDef edc:cname="TXDIS" edc:nzwidth="0x1" edc:desc="Transmitter Disable"/>
            <edc:SFRFieldDef edc:cname="RSTSTA" edc:nzwidth="0x1" edc:desc="Reset Status"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RETTO" edc:nzwidth="0x1" edc:desc="Rearm Time-out"/>
            <edc:SFRFieldDef edc:cname="STTTO" edc:nzwidth="0x1" edc:desc="Start Time-out"/>
            <edc:SFRFieldDef edc:cname="REQCLR" edc:nzwidth="0x1" edc:desc="Request Clear"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="OPT_SLEEP" edc:nzwidth="0x1" edc:desc="Optical Logic Sleep Mode Command"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="UART" edc:cname="UART_MR" edc:nzwidth="0x20" edc:access="-nnn-nnn---nnnnnnn-nnnnnnnnnnnnn" edc:impl="0x771FDFFF" edc:_addr="0x48010004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="UART">
            <edc:SFRFieldDef edc:cname="OPT_EN" edc:nzwidth="0x1" edc:desc="UART Optical Interface Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Disables the UART optical link." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Enables the UART optical link." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="OPT_RXINV" edc:nzwidth="0x1" edc:desc="UART Receive Data Inverted">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="The comparator data output is not inverted before entering UART." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="The comparator data output is inverted before entering UART." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="OPT_MDINV" edc:nzwidth="0x1" edc:desc="UART Modulated Data Inverted">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="The output of the modulator is not inverted." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="The output of the modulator is inverted." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="OPT_DMOD" edc:nzwidth="0x1" edc:desc="Optical Demodulation Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="The optical demodulator is disabled. External demodulation must be enabled." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="The optical demodulator is enabled." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FILTER" edc:nzwidth="0x1" edc:desc="Receiver Digital Filter">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="UART does not filter the receive line." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="UART filters the receive line using a three-sample filter (16x-bit clock) (2 over 3 majority)." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ACON" edc:nzwidth="0x1" edc:desc="Analog Comparator Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="The analog comparator is disabled. If OPT_EN=1, the analog comparator is enabled." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="The analog comparator is enabled." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGESEL" edc:nzwidth="0x2" edc:desc="Analog Comparator Output Edge Selection">
              <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="The UART_SR.ACE is set if a rising edge is detected on analog comparator output." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="The UART_SR.ACE is set if a falling edge is detected on analog comparator output." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ANY_EDGE" edc:desc="The UART_SR.ACE is set as soon as an edge is detected on analog comparator output." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="OPT_WKUP" edc:nzwidth="0x1" edc:desc="Optical Link Activity Wake-up Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="To detect any activity on the output of analog comparator, the clock is always active and OPT_EN must be written to 1.." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="If OPT_EN=0 and a logical 1 is detected after inversion (if RXINV=1) on analog comparator output, the clock if automatically enabled for all UART sub-modules. After a period of inactivity on URXD (time-out) the software can instruct the UART to disabled the clock of all sub-modules to reduce power consumption by applying the UART_CR.OPT_SLEEP command." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PAR" edc:nzwidth="0x3" edc:desc="Parity Type">
              <edc:SFRFieldSemantic edc:cname="EVEN" edc:desc="Even Parity" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ODD" edc:desc="Odd Parity" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SPACE" edc:desc="Space: parity forced to 0" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="MARK" edc:desc="Mark: parity forced to 1" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="NO" edc:desc="No parity" edc:when="(field &amp; 0x7) == 0x04"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BRSRCCK" edc:nzwidth="0x1" edc:desc="Baud Rate Source Clock">
              <edc:SFRFieldSemantic edc:cname="PERIPH_CLK" edc:desc="The baud rate is driven by the peripheral clock" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="The baud rate is driven by a PMC-programmable clock GCLK (see the section &quot;Power Management Controller (PMC)&quot;)." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CHMODE" edc:nzwidth="0x2" edc:desc="Channel Mode">
              <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Normal mode" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="AUTOMATIC" edc:desc="Automatic echo" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="LOCAL_LOOPBACK" edc:desc="Local loopback" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="REMOTE_LOOPBACK" edc:desc="Remote loopback" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="OPT_CLKDIV" edc:nzwidth="0x5" edc:desc="Optical Link Clock Divider"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="OPT_DUTY" edc:nzwidth="0x3" edc:desc="Optical Link Modulation Clock Duty Cycle">
              <edc:SFRFieldSemantic edc:cname="DUTY_50" edc:desc="Modulation clock duty cycle Is 50%." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DUTY_43P75" edc:desc="Modulation clock duty cycle Is 43.75%." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DUTY_37P5" edc:desc="Modulation clock duty cycle Is 37.5%." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DUTY_31P25" edc:desc="Modulation clock duty cycle Is 31.75%." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="DUTY_25" edc:desc="Modulation clock duty cycle Is 25%." edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DUTY_18P75" edc:desc="Modulation clock duty cycle Is 18.75%." edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="DUTY_12P5" edc:desc="Modulation clock duty cycle Is 12.5%." edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="DUTY_6P25" edc:desc="Modulation clock duty cycle Is 6.25%." edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="OPT_CMPTH" edc:nzwidth="0x3" edc:desc="Receive Path Comparator Threshold">
              <edc:SFRFieldSemantic edc:cname="VDD3V3_DIV2" edc:desc="Comparator threshold is VDD3V3/2 volts." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="VDD3V3_DIV2P5" edc:desc="Comparator threshold is VDD3V3/2.5 volts." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="VDD3V3_DIV3P3" edc:desc="Comparator threshold is VDD3V3/3.3 volts." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="VDD3V3_DIV5" edc:desc="Comparator threshold is VDD3V3/5 volts." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="VDD3V3_DIV10" edc:desc="Comparator threshold is VDD3V3/10 volts." edc:when="(field &amp; 0x7) == 0x04"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="UART" edc:cname="UART_IER" edc:nzwidth="0x20" edc:access="---------------ww--ww-wwwwwww-ww" edc:impl="0x19BFB" edc:_addr="0x48010008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="UART">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="Enable RXRDY Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="Enable TXRDY Interrupt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="Enable End of Receive Transfer Interrupt"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="Enable End of Transmit Interrupt"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Enable Overrun Error Interrupt"/>
            <edc:SFRFieldDef edc:cname="FRAME" edc:nzwidth="0x1" edc:desc="Enable Framing Error Interrupt"/>
            <edc:SFRFieldDef edc:cname="PARE" edc:nzwidth="0x1" edc:desc="Enable Parity Error Interrupt"/>
            <edc:SFRFieldDef edc:cname="TIMEOUT" edc:nzwidth="0x1" edc:desc="Enable Time-out Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="Enable TXEMPTY Interrupt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Enable Buffer Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Enable Buffer Full Interrupt"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Enable Comparison Interrupt"/>
            <edc:SFRFieldDef edc:cname="ACE" edc:nzwidth="0x1" edc:desc="Enable Analog Comparator Event Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="UART" edc:cname="UART_IDR" edc:nzwidth="0x20" edc:access="---------------ww--ww-wwwwwww-ww" edc:impl="0x19BFB" edc:_addr="0x4801000C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="UART">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="Disable RXRDY Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="Disable TXRDY Interrupt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="Disable End of Receive Transfer Interrupt"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="Disable End of Transmit Interrupt"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Disable Overrun Error Interrupt"/>
            <edc:SFRFieldDef edc:cname="FRAME" edc:nzwidth="0x1" edc:desc="Disable Framing Error Interrupt"/>
            <edc:SFRFieldDef edc:cname="PARE" edc:nzwidth="0x1" edc:desc="Disable Parity Error Interrupt"/>
            <edc:SFRFieldDef edc:cname="TIMEOUT" edc:nzwidth="0x1" edc:desc="Disable Time-out Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="Disable TXEMPTY Interrupt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Disable Buffer Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Disable Buffer Full Interrupt"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Disable Comparison Interrupt"/>
            <edc:SFRFieldDef edc:cname="ACE" edc:nzwidth="0x1" edc:desc="Disable Analog Comparator Event Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="UART" edc:cname="UART_IMR" edc:nzwidth="0x20" edc:access="---------------rr--rr-rrrrrrr-rr" edc:impl="0x19BFB" edc:_addr="0x48010010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="UART">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="Mask RXRDY Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="Mask TXRDY Interrupt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="Mask End of Receive Transfer Interrupt"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="Mask End of Transmit Interrupt"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Mask Overrun Error Interrupt"/>
            <edc:SFRFieldDef edc:cname="FRAME" edc:nzwidth="0x1" edc:desc="Mask Framing Error Interrupt"/>
            <edc:SFRFieldDef edc:cname="PARE" edc:nzwidth="0x1" edc:desc="Mask Parity Error Interrupt"/>
            <edc:SFRFieldDef edc:cname="TIMEOUT" edc:nzwidth="0x1" edc:desc="Mask Time-out Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="Mask TXEMPTY Interrupt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Mask TXBUFE Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Mask RXBUFF Interrupt"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Mask Comparison Interrupt"/>
            <edc:SFRFieldDef edc:cname="ACE" edc:nzwidth="0x1" edc:desc="Mask Analog Comparator Event Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="UART" edc:cname="UART_SR" edc:nzwidth="0x20" edc:access="---------------rr--rr-rrrrrrr-rr" edc:impl="0x19BFB" edc:_addr="0x48010014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="UART">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:nzwidth="0x1" edc:desc="Receiver Ready (Cleared by reading the UART_RHR)"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:nzwidth="0x1" edc:desc="Transmitter Ready (Cleared by writing the UART_THR)"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receiver Transfer"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmitter Transfer"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:nzwidth="0x1" edc:desc="Overrun Error (Cleared by writing UART_CR.RSTSTA)"/>
            <edc:SFRFieldDef edc:cname="FRAME" edc:nzwidth="0x1" edc:desc="Framing Error (Cleared by writing UART_CR.RSTSTA)"/>
            <edc:SFRFieldDef edc:cname="PARE" edc:nzwidth="0x1" edc:desc="Parity Error (Cleared by writing UART_CR.RSTSTA)"/>
            <edc:SFRFieldDef edc:cname="TIMEOUT" edc:nzwidth="0x1" edc:desc="Receiver Time-out (Cleared by writing the UART_CR.STTTO)"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="Transmitter Empty (Cleared by writing the UART_THR)"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmission Buffer Empty"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Match (Cleared by writing the UART_CR.RSTSTA)"/>
            <edc:SFRFieldDef edc:cname="ACE" edc:nzwidth="0x1" edc:desc="Analog Comparator Event Interrupt (Cleared by writing UART_CR.RSTSTA)"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="UART" edc:cname="UART_RHR" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:impl="0xFF" edc:_addr="0x48010018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="UART">
            <edc:SFRFieldDef edc:cname="RXCHR" edc:nzwidth="0x8" edc:desc="Received Character"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="UART" edc:cname="UART_THR" edc:nzwidth="0x20" edc:access="------------------------wwwwwwww" edc:impl="0xFF" edc:_addr="0x4801001C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="UART">
            <edc:SFRFieldDef edc:cname="TXCHR" edc:nzwidth="0x8" edc:desc="Character to be Transmitted"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="UART" edc:cname="UART_BRGR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x48010020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="UART">
            <edc:SFRFieldDef edc:cname="CD" edc:nzwidth="0x10" edc:desc="Clock Divisor"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="UART" edc:cname="UART_CMPR" edc:nzwidth="0x20" edc:access="--------nnnnnnnn-n-n----nnnnnnnn" edc:impl="0xFF50FF" edc:_addr="0x48010024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="UART">
            <edc:SFRFieldDef edc:cname="VAL1" edc:nzwidth="0x8" edc:desc="First Comparison Value for Received Character"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CMPMODE" edc:nzwidth="0x1" edc:desc="Comparison Mode">
              <edc:SFRFieldSemantic edc:cname="FLAG_ONLY" edc:desc="Any character is received and comparison function drives CMP flag." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="START_CONDITION" edc:desc="Comparison condition must be met to start reception." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPPAR" edc:nzwidth="0x1" edc:desc="Compare Parity"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="VAL2" edc:nzwidth="0x8" edc:desc="Second Comparison Value for Received Character"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="UART" edc:cname="UART_RTOR" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:impl="0xFF" edc:_addr="0x48010028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="UART">
            <edc:SFRFieldDef edc:cname="TO" edc:nzwidth="0x8" edc:desc="Time-out Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="UART" edc:cname="UART_CSR" edc:nzwidth="0x20" edc:access="-------------------------------r" edc:impl="0x1" edc:_addr="0x4801002C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="UART">
            <edc:SFRFieldDef edc:cname="ACO" edc:nzwidth="0x1" edc:desc="Analog Comparator Output"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xB4" edc:_addr="0x48010030"/>
      <edc:SFRDef ltx:memberofperipheral="UART" edc:cname="UART_WPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-------n" edc:impl="0xFFFFFF01" edc:_addr="0x480100E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="UART">
            <edc:SFRFieldDef edc:cname="WPEN" edc:nzwidth="0x1" edc:desc="Write Protection Enable"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x554152"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x18" edc:_addr="0x480100E8"/>
      <edc:SFRDef ltx:memberofperipheral="UART" edc:cname="UART_RPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48010100">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="UART">
            <edc:SFRFieldDef edc:cname="RXPTR" edc:nzwidth="0x20" edc:desc="Receive Pointer Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="UART" edc:cname="UART_RCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x48010104">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="UART">
            <edc:SFRFieldDef edc:cname="RXCTR" edc:nzwidth="0x10" edc:desc="Receive Counter Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="UART" edc:cname="UART_TPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48010108">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="UART">
            <edc:SFRFieldDef edc:cname="TXPTR" edc:nzwidth="0x20" edc:desc="Transmit Counter Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="UART" edc:cname="UART_TCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x4801010C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="UART">
            <edc:SFRFieldDef edc:cname="TXCTR" edc:nzwidth="0x10" edc:desc="Transmit Counter Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="UART" edc:cname="UART_RNPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48010110">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="UART">
            <edc:SFRFieldDef edc:cname="RXNPTR" edc:nzwidth="0x20" edc:desc="Receive Next Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="UART" edc:cname="UART_RNCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x48010114">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="UART">
            <edc:SFRFieldDef edc:cname="RXNCTR" edc:nzwidth="0x10" edc:desc="Receive Next Counter"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="UART" edc:cname="UART_TNPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48010118">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="UART">
            <edc:SFRFieldDef edc:cname="TXNPTR" edc:nzwidth="0x20" edc:desc="Transmit Next Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="UART" edc:cname="UART_TNCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x4801011C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="UART">
            <edc:SFRFieldDef edc:cname="TXNCTR" edc:nzwidth="0x10" edc:desc="Transmit Counter Next"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="UART" edc:cname="UART_PTCR" edc:nzwidth="0x20" edc:access="-------w----wwww------ww------ww" edc:impl="0x10F0303" edc:_addr="0x48010120">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="UART">
            <edc:SFRFieldDef edc:cname="RXTEN" edc:nzwidth="0x1" edc:desc="Receiver Transfer Enable"/>
            <edc:SFRFieldDef edc:cname="RXTDIS" edc:nzwidth="0x1" edc:desc="Receiver Transfer Disable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="TXTEN" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Enable"/>
            <edc:SFRFieldDef edc:cname="TXTDIS" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Disable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="RXCBEN" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Enable"/>
            <edc:SFRFieldDef edc:cname="RXCBDIS" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Disable"/>
            <edc:SFRFieldDef edc:cname="TXCBEN" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Enable"/>
            <edc:SFRFieldDef edc:cname="TXCBDIS" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Disable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ERRCLR" edc:nzwidth="0x1" edc:desc="Transfer Bus Error Clear"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="UART" edc:cname="UART_PTSR" edc:nzwidth="0x20" edc:access="-------r-----r-r-------r-------r" edc:impl="0x1050101" edc:_addr="0x48010124">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="UART">
            <edc:SFRFieldDef edc:cname="RXTEN" edc:nzwidth="0x1" edc:desc="Receiver Transfer Enable"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="TXTEN" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Enable"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="RXCBEN" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXCBEN" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Transfer Bus Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="UART" edc:cname="UART_PWPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:impl="0xFFFFFF07" edc:_addr="0x48010128">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="UART">
            <edc:SFRFieldDef edc:cname="WPPTREN" edc:nzwidth="0x1" edc:desc="Write Protection Pointer Registers Enable"/>
            <edc:SFRFieldDef edc:cname="WPCTREN" edc:nzwidth="0x1" edc:desc="Write Protection Counter Registers Enable"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:nzwidth="0x1" edc:desc="Write Protection Control Register Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x504443"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3ED4" edc:_addr="0x4801012C"/>
      <edc:SFRDef ltx:memberofperipheral="IPC1" edc:cname="IPC1_ISCR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x48014000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="IPC1">
            <edc:SFRFieldDef edc:cname="IRQ0" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ1" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ2" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ3" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ4" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ5" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ6" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ7" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ8" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ9" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ10" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ11" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ12" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ13" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ14" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ15" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ16" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ17" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ18" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ19" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ20" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ21" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ22" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ23" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ24" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ25" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ26" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ27" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ28" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ29" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ30" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
            <edc:SFRFieldDef edc:cname="IRQ31" edc:nzwidth="0x1" edc:desc="Interrupt Set"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="IPC1" edc:cname="IPC1_ICCR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x48014004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="IPC1">
            <edc:SFRFieldDef edc:cname="IRQ0" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ1" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ2" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ3" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ4" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ5" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ6" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ7" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ8" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ9" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ10" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ11" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ12" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ13" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ14" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ15" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ16" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ17" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ18" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ19" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ20" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ21" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ22" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ23" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ24" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ25" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ26" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ27" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ28" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ29" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ30" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
            <edc:SFRFieldDef edc:cname="IRQ31" edc:nzwidth="0x1" edc:desc="Interrupt Clear"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="IPC1" edc:cname="IPC1_IPR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x48014008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="IPC1">
            <edc:SFRFieldDef edc:cname="IRQ0" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ1" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ2" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ3" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ4" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ5" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ6" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ7" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ8" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ9" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ10" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ11" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ12" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ13" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ14" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ15" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ16" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ17" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ18" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ19" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ20" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ21" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ22" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ23" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ24" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ25" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ26" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ27" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ28" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ29" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ30" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
            <edc:SFRFieldDef edc:cname="IRQ31" edc:nzwidth="0x1" edc:desc="Interrupt Pending"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="IPC1" edc:cname="IPC1_IECR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4801400C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="IPC1">
            <edc:SFRFieldDef edc:cname="IRQ0" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ1" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ2" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ3" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ4" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ5" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ6" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ7" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ8" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ9" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ10" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ11" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ12" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ13" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ14" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ15" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ16" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ17" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ18" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ19" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ20" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ21" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ22" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ23" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ24" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ25" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ26" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ27" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ28" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ29" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ30" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="IRQ31" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="IPC1" edc:cname="IPC1_IDCR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x48014010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="IPC1">
            <edc:SFRFieldDef edc:cname="IRQ0" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ1" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ2" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ3" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ4" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ5" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ6" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ7" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ8" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ9" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ10" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ11" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ12" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ13" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ14" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ15" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ16" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ17" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ18" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ19" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ20" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ21" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ22" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ23" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ24" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ25" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ26" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ27" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ28" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ29" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ30" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="IRQ31" edc:nzwidth="0x1" edc:desc="Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="IPC1" edc:cname="IPC1_IMR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x48014014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="IPC1">
            <edc:SFRFieldDef edc:cname="IRQ0" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ1" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ2" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ3" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ4" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ5" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ6" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ7" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ8" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ9" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ10" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ11" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ12" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ13" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ14" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ15" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ16" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ17" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ18" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ19" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ20" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ21" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ22" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ23" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ24" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ25" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ26" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ27" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ28" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ29" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ30" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="IRQ31" edc:nzwidth="0x1" edc:desc="Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="IPC1" edc:cname="IPC1_ISR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x48014018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="IPC1">
            <edc:SFRFieldDef edc:cname="IRQ0" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ1" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ2" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ3" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ4" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ5" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ6" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ7" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ8" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ9" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ10" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ11" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ12" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ13" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ14" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ15" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ16" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ17" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ18" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ19" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ20" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ21" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ22" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ23" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ24" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ25" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ26" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ27" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ28" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ29" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ30" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
            <edc:SFRFieldDef edc:cname="IRQ31" edc:nzwidth="0x1" edc:desc="Current Interrupt Identifier"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="IPC1" edc:cname="IPC1_WPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn------n-" edc:impl="0xFFFFFF02" edc:_addr="0x4801401C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="IPC1">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:nzwidth="0x1" edc:desc="Write Protection Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPEN bit. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x495043"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3FE0" edc:_addr="0x48014020"/>
      <edc:SFRDef ltx:memberofperipheral="MCSPI" edc:cname="MCSPI_CR" edc:nzwidth="0x20" edc:access="ww-----w------ww---w----w-----ww" edc:impl="0xC1031083" edc:_addr="0x48018000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCSPI">
            <edc:SFRFieldDef edc:cname="SPIEN" edc:nzwidth="0x1" edc:desc="MCSPI Enable"/>
            <edc:SFRFieldDef edc:cname="SPIDIS" edc:nzwidth="0x1" edc:desc="MCSPI Disable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="MCSPI Software Reset"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="REQCLR" edc:nzwidth="0x1" edc:desc="Request to Clear the Comparison Trigger"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="TXFCLR" edc:nzwidth="0x1" edc:desc="Transmit FIFO Clear"/>
            <edc:SFRFieldDef edc:cname="RXFCLR" edc:nzwidth="0x1" edc:desc="Receive FIFO Clear"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="LASTXFER" edc:nzwidth="0x1" edc:desc="Last Transfer"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="FIFO Enable"/>
            <edc:SFRFieldDef edc:cname="FIFODIS" edc:nzwidth="0x1" edc:desc="FIFO Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MCSPI" edc:cname="MCSPI_MR" edc:nzwidth="0x20" edc:access="nnnnnnnn----nnnnnnnn--nnnnnnnnnn" edc:impl="0xFF0FF3FF" edc:_addr="0x48018004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCSPI">
            <edc:SFRFieldDef edc:cname="MSTR" edc:nzwidth="0x1" edc:desc="Host/Client Mode"/>
            <edc:SFRFieldDef edc:cname="PS" edc:nzwidth="0x1" edc:desc="Peripheral Select"/>
            <edc:SFRFieldDef edc:cname="PCSDEC" edc:nzwidth="0x1" edc:desc="Chip Select Decode"/>
            <edc:SFRFieldDef edc:cname="BRSRCCLK" edc:nzwidth="0x1" edc:desc="Bit Rate Source Clock">
              <edc:SFRFieldSemantic edc:cname="PERIPH_CLK" edc:desc="The peripheral clock is the source clock for the bit rate generation." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="PMC GCLK is the source clock for the bit rate generation, thus the bit rate can be independent of the core/peripheral clock." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MODFDIS" edc:nzwidth="0x1" edc:desc="Mode Fault Detection"/>
            <edc:SFRFieldDef edc:cname="WDRBT" edc:nzwidth="0x1" edc:desc="Wait for Data Read Before Transfer"/>
            <edc:SFRFieldDef edc:cname="CRCEN" edc:nzwidth="0x1" edc:desc="CRC Enable"/>
            <edc:SFRFieldDef edc:cname="LLB" edc:nzwidth="0x1" edc:desc="Local Loopback Enable"/>
            <edc:SFRFieldDef edc:cname="LSBHALF" edc:nzwidth="0x1" edc:desc="LSB Timing Selection"/>
            <edc:SFRFieldDef edc:cname="TMCSMUX" edc:nzwidth="0x1" edc:desc="Two-pin MOSI Chip Select External Multiplexing Mode">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="External MOSI lines multiplexing is not required via Chip Select lines. When MCSPI_MR.TPMEN=0, MCSPI_TWMR.MIL=1 or MCSPI_TWMR.CSM=0, TMCSMUX must be written to 0." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Enables external multiplexing of MOSI lines via Chip Select lines. When MCSPI_MR.TPMEN=1, TMCSMUX must be written to 1 if MCSPI_TWMR.MIL=0 and MCSPI_TWMR.CSM=1." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMPMODE" edc:nzwidth="0x1" edc:desc="Comparison Mode">
              <edc:SFRFieldSemantic edc:cname="FLAG_ONLY" edc:desc="Any character is received and comparison function drives CMP flag." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="START_CONDITION" edc:desc="Comparison condition must be met to start reception of all incoming characters until REQCLR is set." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TPMEN" edc:nzwidth="0x1" edc:desc="Two-Pin Mode Enable"/>
            <edc:SFRFieldDef edc:cname="CSIE" edc:nzwidth="0x1" edc:desc="Chip Select Inversion Enable"/>
            <edc:SFRFieldDef edc:cname="MOSIIE" edc:nzwidth="0x1" edc:desc="MOSI Inversion Enable"/>
            <edc:SFRFieldDef edc:cname="PCS" edc:nzwidth="0x4" edc:desc="Peripheral Chip Select"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="DLYBCS" edc:nzwidth="0x8" edc:desc="Delay Between Chip Selects"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MCSPI" edc:cname="MCSPI_RDR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x48018008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCSPI">
            <edc:SFRFieldDef edc:cname="RD0" edc:nzwidth="0x10" edc:desc="Receive Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="RD1" edc:nzwidth="0x8" edc:desc="Receive Data"/>
            <edc:SFRFieldDef edc:cname="RD1" edc:nzwidth="0x10" edc:desc="Receive Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="RD3" edc:nzwidth="0x8" edc:desc="Receive Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MCSPI" edc:cname="MCSPI_TDR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4801800C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCSPI">
            <edc:SFRFieldDef edc:cname="TD0" edc:nzwidth="0x10" edc:desc="Transmit Data"/>
            <edc:SFRFieldDef edc:cname="TD1" edc:nzwidth="0x10" edc:desc="Transmit Data"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="LASTXFER" edc:nzwidth="0x1" edc:desc="Last Transfer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MCSPI" edc:cname="MCSPI_SR" edc:nzwidth="0x20" edc:access="rrrrrrrr-------r--rrrrrrrrrrrrrr" edc:impl="0xFF013FFF" edc:_addr="0x48018010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCSPI">
            <edc:SFRFieldDef edc:cname="RDRF" edc:nzwidth="0x1" edc:desc="Receive Data Register Full (cleared by reading MCSPI_RDR)"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:nzwidth="0x1" edc:desc="Transmit Data Register Empty (cleared by writing MCSPI_TDR)"/>
            <edc:SFRFieldDef edc:cname="MODF" edc:nzwidth="0x1" edc:desc="Mode Fault Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:nzwidth="0x1" edc:desc="Overrun Error Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of RX Buffer (cleared by writing MCSPI_RCR or MCSPI_RNCR)"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of TX Buffer (cleared by writing MCSPI_TCR or MCSPI_TNCR)"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="RX Buffer Full (cleared by writing MCSPI_RCR or MCSPI_RNCR)"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="TX Buffer Empty (cleared by writing MCSPI_TCR or MCSPI_TNCR)"/>
            <edc:SFRFieldDef edc:cname="NSSR" edc:nzwidth="0x1" edc:desc="NSS Rising (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="Transmission Registers Empty (cleared by writing MCSPI_TDR)"/>
            <edc:SFRFieldDef edc:cname="UNDES" edc:nzwidth="0x1" edc:desc="Underrun Error Status (Client mode only) (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Status (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="SFERR" edc:nzwidth="0x1" edc:desc="Client Frame Error (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="CRCERR" edc:nzwidth="0x1" edc:desc="CRC Error (cleared on read)"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SPIENS" edc:nzwidth="0x1" edc:desc="MCSPI Enable Status"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Empty Flag (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Full Flag (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Threshold Flag (cleared on read)"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="Receive FIFO Empty Flag"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="Receive FIFO Full Flag"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="Receive FIFO Threshold Flag"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="Transmit FIFO Pointer Error Flag"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="Receive FIFO Pointer Error Flag"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MCSPI" edc:cname="MCSPI_IER" edc:nzwidth="0x20" edc:access="wwwwwwww----------w-wwwwwwwwwwww" edc:impl="0xFF002FFF" edc:_addr="0x48018014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCSPI">
            <edc:SFRFieldDef edc:cname="RDRF" edc:nzwidth="0x1" edc:desc="Receive Data Register Full Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:nzwidth="0x1" edc:desc="MCSPI Transmit Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MODF" edc:nzwidth="0x1" edc:desc="Mode Fault Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="NSSR" edc:nzwidth="0x1" edc:desc="NSS Rising Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="Transmission Registers Empty Enable"/>
            <edc:SFRFieldDef edc:cname="UNDES" edc:nzwidth="0x1" edc:desc="Underrun Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CRCERR" edc:nzwidth="0x1" edc:desc="CRC Error Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MCSPI" edc:cname="MCSPI_IDR" edc:nzwidth="0x20" edc:access="wwwwwwww----------w-wwwwwwwwwwww" edc:impl="0xFF002FFF" edc:_addr="0x48018018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCSPI">
            <edc:SFRFieldDef edc:cname="RDRF" edc:nzwidth="0x1" edc:desc="Receive Data Register Full Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:nzwidth="0x1" edc:desc="MCSPI Transmit Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="MODF" edc:nzwidth="0x1" edc:desc="Mode Fault Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="NSSR" edc:nzwidth="0x1" edc:desc="NSS Rising Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="Transmission Registers Empty Disable"/>
            <edc:SFRFieldDef edc:cname="UNDES" edc:nzwidth="0x1" edc:desc="Underrun Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CRCERR" edc:nzwidth="0x1" edc:desc="CRC Error Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MCSPI" edc:cname="MCSPI_IMR" edc:nzwidth="0x20" edc:access="rrrrrrrr----------r-rrrrrrrrrrrr" edc:impl="0xFF002FFF" edc:_addr="0x4801801C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCSPI">
            <edc:SFRFieldDef edc:cname="RDRF" edc:nzwidth="0x1" edc:desc="Receive Data Register Full Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:nzwidth="0x1" edc:desc="MCSPI Transmit Data Register Empty Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="MODF" edc:nzwidth="0x1" edc:desc="Mode Fault Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:nzwidth="0x1" edc:desc="Overrun Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:nzwidth="0x1" edc:desc="End of Receive Buffer Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="End of Transmit Buffer Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:nzwidth="0x1" edc:desc="Receive Buffer Full Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="Transmit Buffer Empty Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="NSSR" edc:nzwidth="0x1" edc:desc="NSS Rising Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:nzwidth="0x1" edc:desc="Transmission Registers Empty Mask"/>
            <edc:SFRFieldDef edc:cname="UNDES" edc:nzwidth="0x1" edc:desc="Underrun Error Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Comparison Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CRCERR" edc:nzwidth="0x1" edc:desc="CRC Error Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="TXFEF" edc:nzwidth="0x1" edc:desc="TXFEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:nzwidth="0x1" edc:desc="TXFFF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:nzwidth="0x1" edc:desc="TXFTHF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:nzwidth="0x1" edc:desc="RXFEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:nzwidth="0x1" edc:desc="RXFFF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:nzwidth="0x1" edc:desc="RXFTHF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:nzwidth="0x1" edc:desc="TXFPTEF Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:nzwidth="0x1" edc:desc="RXFPTEF Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x10" edc:_addr="0x48018020"/>
      <edc:SFRDef ltx:memberofperipheral="MCSPI" edc:cname="MCSPI_CSR0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48018030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCSPI">
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity"/>
            <edc:SFRFieldDef edc:cname="NCPHA" edc:nzwidth="0x1" edc:desc="Clock Phase"/>
            <edc:SFRFieldDef edc:cname="CSNAAT" edc:nzwidth="0x1" edc:desc="Chip Select Not Active After Transfer (ignored if CSAAT = 1)"/>
            <edc:SFRFieldDef edc:cname="CSAAT" edc:nzwidth="0x1" edc:desc="Chip Select Active After Transfer"/>
            <edc:SFRFieldDef edc:cname="BITS" edc:nzwidth="0x4" edc:desc="Bits Per Transfer">
              <edc:SFRFieldSemantic edc:cname="_8_BIT" edc:desc="8 bits for transfer" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="_9_BIT" edc:desc="9 bits for transfer" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_10_BIT" edc:desc="10 bits for transfer" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_11_BIT" edc:desc="11 bits for transfer" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_12_BIT" edc:desc="12 bits for transfer" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_13_BIT" edc:desc="13 bits for transfer" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_14_BIT" edc:desc="14 bits for transfer" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_15_BIT" edc:desc="15 bits for transfer" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="_16_BIT" edc:desc="16 bits for transfer" edc:when="(field &amp; 0xF) == 0x08"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCBR" edc:nzwidth="0x8" edc:desc="Serial Clock Bit Rate"/>
            <edc:SFRFieldDef edc:cname="DLYBS" edc:nzwidth="0x8" edc:desc="Delay Before SPCK"/>
            <edc:SFRFieldDef edc:cname="DLYBCT" edc:nzwidth="0x8" edc:desc="Delay Between Consecutive Transfers"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MCSPI" edc:cname="MCSPI_CSR1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48018034">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCSPI">
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity"/>
            <edc:SFRFieldDef edc:cname="NCPHA" edc:nzwidth="0x1" edc:desc="Clock Phase"/>
            <edc:SFRFieldDef edc:cname="CSNAAT" edc:nzwidth="0x1" edc:desc="Chip Select Not Active After Transfer (ignored if CSAAT = 1)"/>
            <edc:SFRFieldDef edc:cname="CSAAT" edc:nzwidth="0x1" edc:desc="Chip Select Active After Transfer"/>
            <edc:SFRFieldDef edc:cname="BITS" edc:nzwidth="0x4" edc:desc="Bits Per Transfer">
              <edc:SFRFieldSemantic edc:cname="_8_BIT" edc:desc="8 bits for transfer" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="_9_BIT" edc:desc="9 bits for transfer" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_10_BIT" edc:desc="10 bits for transfer" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_11_BIT" edc:desc="11 bits for transfer" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_12_BIT" edc:desc="12 bits for transfer" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_13_BIT" edc:desc="13 bits for transfer" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_14_BIT" edc:desc="14 bits for transfer" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_15_BIT" edc:desc="15 bits for transfer" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="_16_BIT" edc:desc="16 bits for transfer" edc:when="(field &amp; 0xF) == 0x08"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCBR" edc:nzwidth="0x8" edc:desc="Serial Clock Bit Rate"/>
            <edc:SFRFieldDef edc:cname="DLYBS" edc:nzwidth="0x8" edc:desc="Delay Before SPCK"/>
            <edc:SFRFieldDef edc:cname="DLYBCT" edc:nzwidth="0x8" edc:desc="Delay Between Consecutive Transfers"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MCSPI" edc:cname="MCSPI_CSR2" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48018038">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCSPI">
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity"/>
            <edc:SFRFieldDef edc:cname="NCPHA" edc:nzwidth="0x1" edc:desc="Clock Phase"/>
            <edc:SFRFieldDef edc:cname="CSNAAT" edc:nzwidth="0x1" edc:desc="Chip Select Not Active After Transfer (ignored if CSAAT = 1)"/>
            <edc:SFRFieldDef edc:cname="CSAAT" edc:nzwidth="0x1" edc:desc="Chip Select Active After Transfer"/>
            <edc:SFRFieldDef edc:cname="BITS" edc:nzwidth="0x4" edc:desc="Bits Per Transfer">
              <edc:SFRFieldSemantic edc:cname="_8_BIT" edc:desc="8 bits for transfer" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="_9_BIT" edc:desc="9 bits for transfer" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_10_BIT" edc:desc="10 bits for transfer" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_11_BIT" edc:desc="11 bits for transfer" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_12_BIT" edc:desc="12 bits for transfer" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_13_BIT" edc:desc="13 bits for transfer" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_14_BIT" edc:desc="14 bits for transfer" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_15_BIT" edc:desc="15 bits for transfer" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="_16_BIT" edc:desc="16 bits for transfer" edc:when="(field &amp; 0xF) == 0x08"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCBR" edc:nzwidth="0x8" edc:desc="Serial Clock Bit Rate"/>
            <edc:SFRFieldDef edc:cname="DLYBS" edc:nzwidth="0x8" edc:desc="Delay Before SPCK"/>
            <edc:SFRFieldDef edc:cname="DLYBCT" edc:nzwidth="0x8" edc:desc="Delay Between Consecutive Transfers"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MCSPI" edc:cname="MCSPI_CSR3" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4801803C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCSPI">
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity"/>
            <edc:SFRFieldDef edc:cname="NCPHA" edc:nzwidth="0x1" edc:desc="Clock Phase"/>
            <edc:SFRFieldDef edc:cname="CSNAAT" edc:nzwidth="0x1" edc:desc="Chip Select Not Active After Transfer (ignored if CSAAT = 1)"/>
            <edc:SFRFieldDef edc:cname="CSAAT" edc:nzwidth="0x1" edc:desc="Chip Select Active After Transfer"/>
            <edc:SFRFieldDef edc:cname="BITS" edc:nzwidth="0x4" edc:desc="Bits Per Transfer">
              <edc:SFRFieldSemantic edc:cname="_8_BIT" edc:desc="8 bits for transfer" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="_9_BIT" edc:desc="9 bits for transfer" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_10_BIT" edc:desc="10 bits for transfer" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_11_BIT" edc:desc="11 bits for transfer" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_12_BIT" edc:desc="12 bits for transfer" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_13_BIT" edc:desc="13 bits for transfer" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_14_BIT" edc:desc="14 bits for transfer" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_15_BIT" edc:desc="15 bits for transfer" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="_16_BIT" edc:desc="16 bits for transfer" edc:when="(field &amp; 0xF) == 0x08"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCBR" edc:nzwidth="0x8" edc:desc="Serial Clock Bit Rate"/>
            <edc:SFRFieldDef edc:cname="DLYBS" edc:nzwidth="0x8" edc:desc="Delay Before SPCK"/>
            <edc:SFRFieldDef edc:cname="DLYBCT" edc:nzwidth="0x8" edc:desc="Delay Between Consecutive Transfers"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MCSPI" edc:cname="MCSPI_FMR" edc:nzwidth="0x20" edc:access="--nnnnnn--nnnnnn----------nn--nn" edc:impl="0x3F3F0033" edc:_addr="0x48018040">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCSPI">
            <edc:SFRFieldDef edc:cname="TXRDYM" edc:nzwidth="0x2" edc:desc="Transmit Data Register Empty Mode">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="TDRE will be at level '1' when at least one data can be written in the Transmit FIFO." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="TDRE will be at level '1' when at least two data can be written in the Transmit FIFO. Cannot be used if MCSPI_MR.PS =1." edc:when="(field &amp; 0x3) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXRDYM" edc:nzwidth="0x2" edc:desc="Receive Data Register Full Mode">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="RDRF will be at level '1' when at least one unread data is in the Receive FIFO." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="RDRF will be at level '1' when at least two unread data are in the Receive FIFO. Cannot be used when MCSPI_MR.MSTR =1, or if MCSPI_MR.PS =1." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="RDRF will be at level '1' when at least four unread data are in the Receive FIFO. Cannot be used when MCSPI_CSRx.BITS is greater than 0, or if MCSPI_MR.MSTR = 1, or if MCSPI_MR.PS = 1." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="TXFTHRES" edc:nzwidth="0x6" edc:desc="Transmit FIFO Threshold"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXFTHRES" edc:nzwidth="0x6" edc:desc="Receive FIFO Threshold"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MCSPI" edc:cname="MCSPI_FLR" edc:nzwidth="0x20" edc:access="----------rrrrrr----------rrrrrr" edc:impl="0x3F003F" edc:_addr="0x48018044">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCSPI">
            <edc:SFRFieldDef edc:cname="TXFL" edc:nzwidth="0x6" edc:desc="Transmit FIFO Level"/>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="RXFL" edc:nzwidth="0x6" edc:desc="Receive FIFO Level"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MCSPI" edc:cname="MCSPI_CMPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48018048">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCSPI">
            <edc:SFRFieldDef edc:cname="VAL1" edc:nzwidth="0x10" edc:desc="First Comparison Value for Received Character"/>
            <edc:SFRFieldDef edc:cname="VAL2" edc:nzwidth="0x10" edc:desc="Second Comparison Value for Received Character"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MCSPI" edc:cname="MCSPI_CRCR" edc:nzwidth="0x20" edc:access="----nnnnnnnn---n--------nnnnnnnn" edc:impl="0xFF100FF" edc:_addr="0x4801804C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCSPI">
            <edc:SFRFieldDef edc:cname="FRL" edc:nzwidth="0x8" edc:desc="Frame Length"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="CRCS" edc:nzwidth="0x1" edc:desc="CRC Size">
              <edc:SFRFieldSemantic edc:cname="_16B_CRC" edc:desc="CRC size is 16 bits." edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="_32B_CRC" edc:desc="CRC size is 32 bits." edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="FRHL" edc:nzwidth="0x4" edc:desc="Frame Header Length"/>
            <edc:SFRFieldDef edc:cname="CRM" edc:nzwidth="0x1" edc:desc="Continuous Read Mode"/>
            <edc:SFRFieldDef edc:cname="FHE" edc:nzwidth="0x1" edc:desc="Frame Header Excluded"/>
            <edc:SFRFieldDef edc:cname="DCRX" edc:nzwidth="0x1" edc:desc="Disable CRC Receiving"/>
            <edc:SFRFieldDef edc:cname="DHRX" edc:nzwidth="0x1" edc:desc="Disable Header Receiving"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MCSPI" edc:cname="MCSPI_TPMR" edc:nzwidth="0x20" edc:access="----------------------------nnnn" edc:impl="0xF" edc:_addr="0x48018050">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCSPI">
            <edc:SFRFieldDef edc:cname="CSM" edc:nzwidth="0x1" edc:desc="Chip Select Mode"/>
            <edc:SFRFieldDef edc:cname="MIL" edc:nzwidth="0x1" edc:desc="Multiple Input Lines"/>
            <edc:SFRFieldDef edc:cname="OSR" edc:nzwidth="0x2" edc:desc="OverSampling Rate"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MCSPI" edc:cname="MCSPI_TPHR" edc:nzwidth="0x20" edc:access="-------------------------rrrrrrr" edc:impl="0x7F" edc:_addr="0x48018054">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCSPI">
            <edc:SFRFieldDef edc:cname="CNT" edc:nzwidth="0x2" edc:desc="Frame Counter"/>
            <edc:SFRFieldDef edc:cname="BOOST" edc:nzwidth="0x1" edc:desc="Current Boost"/>
            <edc:SFRFieldDef edc:cname="GAIN" edc:nzwidth="0x2" edc:desc="Gain"/>
            <edc:SFRFieldDef edc:cname="OSR" edc:nzwidth="0x2" edc:desc="OverSampling Rate"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8C" edc:_addr="0x48018058"/>
      <edc:SFRDef ltx:memberofperipheral="MCSPI" edc:cname="MCSPI_WPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:impl="0xFFFFFF07" edc:_addr="0x480180E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCSPI">
            <edc:SFRFieldDef edc:cname="WPEN" edc:nzwidth="0x1" edc:desc="Write Protection Enable"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:nzwidth="0x1" edc:desc="Write Protection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:nzwidth="0x1" edc:desc="Write Protection Control Register Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of WPEN. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x535049"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MCSPI" edc:cname="MCSPI_WPSR" edc:nzwidth="0x20" edc:access="----------------rrrrrrrr-------r" edc:impl="0xFF01" edc:_addr="0x480180E8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCSPI">
            <edc:SFRFieldDef edc:cname="WPVS" edc:nzwidth="0x1" edc:desc="Write Protection Violation Status"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:nzwidth="0x8" edc:desc="Write Protection Violation Source"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x14" edc:_addr="0x480180EC"/>
      <edc:SFRDef ltx:memberofperipheral="MCSPI" edc:cname="MCSPI_RPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48018100">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCSPI">
            <edc:SFRFieldDef edc:cname="RXPTR" edc:nzwidth="0x20" edc:desc="Receive Pointer Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MCSPI" edc:cname="MCSPI_RCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x48018104">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCSPI">
            <edc:SFRFieldDef edc:cname="RXCTR" edc:nzwidth="0x10" edc:desc="Receive Counter Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MCSPI" edc:cname="MCSPI_TPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48018108">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCSPI">
            <edc:SFRFieldDef edc:cname="TXPTR" edc:nzwidth="0x20" edc:desc="Transmit Counter Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MCSPI" edc:cname="MCSPI_TCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x4801810C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCSPI">
            <edc:SFRFieldDef edc:cname="TXCTR" edc:nzwidth="0x10" edc:desc="Transmit Counter Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MCSPI" edc:cname="MCSPI_RNPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48018110">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCSPI">
            <edc:SFRFieldDef edc:cname="RXNPTR" edc:nzwidth="0x20" edc:desc="Receive Next Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MCSPI" edc:cname="MCSPI_RNCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x48018114">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCSPI">
            <edc:SFRFieldDef edc:cname="RXNCTR" edc:nzwidth="0x10" edc:desc="Receive Next Counter"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MCSPI" edc:cname="MCSPI_TNPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48018118">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCSPI">
            <edc:SFRFieldDef edc:cname="TXNPTR" edc:nzwidth="0x20" edc:desc="Transmit Next Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MCSPI" edc:cname="MCSPI_TNCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x4801811C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCSPI">
            <edc:SFRFieldDef edc:cname="TXNCTR" edc:nzwidth="0x10" edc:desc="Transmit Counter Next"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MCSPI" edc:cname="MCSPI_PTCR" edc:nzwidth="0x20" edc:access="-------w----wwww------ww------ww" edc:impl="0x10F0303" edc:_addr="0x48018120">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCSPI">
            <edc:SFRFieldDef edc:cname="RXTEN" edc:nzwidth="0x1" edc:desc="Receiver Transfer Enable"/>
            <edc:SFRFieldDef edc:cname="RXTDIS" edc:nzwidth="0x1" edc:desc="Receiver Transfer Disable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="TXTEN" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Enable"/>
            <edc:SFRFieldDef edc:cname="TXTDIS" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Disable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="RXCBEN" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Enable"/>
            <edc:SFRFieldDef edc:cname="RXCBDIS" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Disable"/>
            <edc:SFRFieldDef edc:cname="TXCBEN" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Enable"/>
            <edc:SFRFieldDef edc:cname="TXCBDIS" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Disable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ERRCLR" edc:nzwidth="0x1" edc:desc="Transfer Bus Error Clear"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MCSPI" edc:cname="MCSPI_PTSR" edc:nzwidth="0x20" edc:access="-------r-----r-r-------r-------r" edc:impl="0x1050101" edc:_addr="0x48018124">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCSPI">
            <edc:SFRFieldDef edc:cname="RXTEN" edc:nzwidth="0x1" edc:desc="Receiver Transfer Enable"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="TXTEN" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Enable"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="RXCBEN" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXCBEN" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Transfer Bus Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MCSPI" edc:cname="MCSPI_PWPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:impl="0xFFFFFF07" edc:_addr="0x48018128">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCSPI">
            <edc:SFRFieldDef edc:cname="WPPTREN" edc:nzwidth="0x1" edc:desc="Write Protection Pointer Registers Enable"/>
            <edc:SFRFieldDef edc:cname="WPCTREN" edc:nzwidth="0x1" edc:desc="Write Protection Counter Registers Enable"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:nzwidth="0x1" edc:desc="Write Protection Control Register Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x504443"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3ED4" edc:_addr="0x4801812C"/>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CLK" edc:nzwidth="0x20" edc:access="----nnnnnnnnnnnn----nnnnnnnnnnnn" edc:impl="0xFFF0FFF" edc:_addr="0x4801C000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="DIVA" edc:nzwidth="0x8" edc:desc="CLKA Divide Factor">
              <edc:SFRFieldSemantic edc:cname="CLKA_POFF" edc:desc="CLKA clock is turned off" edc:when="(field &amp; 0xFF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PREA" edc:desc="CLKA clock is clock selected by PREA" edc:when="(field &amp; 0xFF) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PREA" edc:nzwidth="0x4" edc:desc="CLKA Source Clock Selection">
              <edc:SFRFieldSemantic edc:cname="CLK" edc:desc="Peripheral clock" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV2" edc:desc="Peripheral clock/2" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV4" edc:desc="Peripheral clock/4" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV8" edc:desc="Peripheral clock/8" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV16" edc:desc="Peripheral clock/16" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV32" edc:desc="Peripheral clock/32" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV64" edc:desc="Peripheral clock/64" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV128" edc:desc="Peripheral clock/128" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV256" edc:desc="Peripheral clock/256" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV512" edc:desc="Peripheral clock/512" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV1024" edc:desc="Peripheral clock/1024" edc:when="(field &amp; 0xF) == 0x0A"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="DIVB" edc:nzwidth="0x8" edc:desc="CLKB Divide Factor">
              <edc:SFRFieldSemantic edc:cname="CLKB_POFF" edc:desc="CLKB clock is turned off" edc:when="(field &amp; 0xFF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PREB" edc:desc="CLKB clock is clock selected by PREB" edc:when="(field &amp; 0xFF) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PREB" edc:nzwidth="0x4" edc:desc="CLKB Source Clock Selection">
              <edc:SFRFieldSemantic edc:cname="CLK" edc:desc="Peripheral clock" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV2" edc:desc="Peripheral clock/2" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV4" edc:desc="Peripheral clock/4" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV8" edc:desc="Peripheral clock/8" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV16" edc:desc="Peripheral clock/16" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV32" edc:desc="Peripheral clock/32" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV64" edc:desc="Peripheral clock/64" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV128" edc:desc="Peripheral clock/128" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV256" edc:desc="Peripheral clock/256" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV512" edc:desc="Peripheral clock/512" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV1024" edc:desc="Peripheral clock/1024" edc:when="(field &amp; 0xF) == 0x0A"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_ENA" edc:nzwidth="0x20" edc:access="-----------------------------www" edc:impl="0x7" edc:_addr="0x4801C004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CHID0" edc:nzwidth="0x1" edc:desc="Channel ID"/>
            <edc:SFRFieldDef edc:cname="CHID1" edc:nzwidth="0x1" edc:desc="Channel ID"/>
            <edc:SFRFieldDef edc:cname="CHID2" edc:nzwidth="0x1" edc:desc="Channel ID"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_DIS" edc:nzwidth="0x20" edc:access="-----------------------------www" edc:impl="0x7" edc:_addr="0x4801C008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CHID0" edc:nzwidth="0x1" edc:desc="Channel ID"/>
            <edc:SFRFieldDef edc:cname="CHID1" edc:nzwidth="0x1" edc:desc="Channel ID"/>
            <edc:SFRFieldDef edc:cname="CHID2" edc:nzwidth="0x1" edc:desc="Channel ID"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_SR" edc:nzwidth="0x20" edc:access="-----------------------------rrr" edc:impl="0x7" edc:_addr="0x4801C00C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CHID0" edc:nzwidth="0x1" edc:desc="Channel ID"/>
            <edc:SFRFieldDef edc:cname="CHID1" edc:nzwidth="0x1" edc:desc="Channel ID"/>
            <edc:SFRFieldDef edc:cname="CHID2" edc:nzwidth="0x1" edc:desc="Channel ID"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_IER1" edc:nzwidth="0x20" edc:access="-------------www-------------www" edc:impl="0x70007" edc:_addr="0x4801C010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CHID0" edc:nzwidth="0x1" edc:desc="Counter Event on Channel 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CHID1" edc:nzwidth="0x1" edc:desc="Counter Event on Channel 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CHID2" edc:nzwidth="0x1" edc:desc="Counter Event on Channel 2 Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0xD"/>
            <edc:SFRFieldDef edc:cname="FCHID0" edc:nzwidth="0x1" edc:desc="Fault Protection Trigger on Channel 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FCHID1" edc:nzwidth="0x1" edc:desc="Fault Protection Trigger on Channel 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FCHID2" edc:nzwidth="0x1" edc:desc="Fault Protection Trigger on Channel 2 Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_IDR1" edc:nzwidth="0x20" edc:access="-------------www-------------www" edc:impl="0x70007" edc:_addr="0x4801C014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CHID0" edc:nzwidth="0x1" edc:desc="Counter Event on Channel 0 Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CHID1" edc:nzwidth="0x1" edc:desc="Counter Event on Channel 1 Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CHID2" edc:nzwidth="0x1" edc:desc="Counter Event on Channel 2 Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0xD"/>
            <edc:SFRFieldDef edc:cname="FCHID0" edc:nzwidth="0x1" edc:desc="Fault Protection Trigger on Channel 0 Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="FCHID1" edc:nzwidth="0x1" edc:desc="Fault Protection Trigger on Channel 1 Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="FCHID2" edc:nzwidth="0x1" edc:desc="Fault Protection Trigger on Channel 2 Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_IMR1" edc:nzwidth="0x20" edc:access="-------------rrr-------------rrr" edc:impl="0x70007" edc:_addr="0x4801C018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CHID0" edc:nzwidth="0x1" edc:desc="Counter Event on Channel 0 Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="CHID1" edc:nzwidth="0x1" edc:desc="Counter Event on Channel 1 Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="CHID2" edc:nzwidth="0x1" edc:desc="Counter Event on Channel 2 Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0xD"/>
            <edc:SFRFieldDef edc:cname="FCHID0" edc:nzwidth="0x1" edc:desc="Fault Protection Trigger on Channel 0 Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="FCHID1" edc:nzwidth="0x1" edc:desc="Fault Protection Trigger on Channel 1 Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="FCHID2" edc:nzwidth="0x1" edc:desc="Fault Protection Trigger on Channel 2 Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_ISR1" edc:nzwidth="0x20" edc:access="-------------rrr-------------rrr" edc:impl="0x70007" edc:_addr="0x4801C01C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CHID0" edc:nzwidth="0x1" edc:desc="Counter Event on Channel 0"/>
            <edc:SFRFieldDef edc:cname="CHID1" edc:nzwidth="0x1" edc:desc="Counter Event on Channel 1"/>
            <edc:SFRFieldDef edc:cname="CHID2" edc:nzwidth="0x1" edc:desc="Counter Event on Channel 2"/>
            <edc:AdjustPoint edc:offset="0xD"/>
            <edc:SFRFieldDef edc:cname="FCHID0" edc:nzwidth="0x1" edc:desc="Fault Protection Trigger on Channel 0"/>
            <edc:SFRFieldDef edc:cname="FCHID1" edc:nzwidth="0x1" edc:desc="Fault Protection Trigger on Channel 1"/>
            <edc:SFRFieldDef edc:cname="FCHID2" edc:nzwidth="0x1" edc:desc="Fault Protection Trigger on Channel 2"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_SCM" edc:nzwidth="0x20" edc:access="--------nnnn--nn-------------nnn" edc:impl="0xF30007" edc:_addr="0x4801C020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="SYNC0" edc:nzwidth="0x1" edc:desc="Synchronous Channel 0"/>
            <edc:SFRFieldDef edc:cname="SYNC1" edc:nzwidth="0x1" edc:desc="Synchronous Channel 1"/>
            <edc:SFRFieldDef edc:cname="SYNC2" edc:nzwidth="0x1" edc:desc="Synchronous Channel 2"/>
            <edc:AdjustPoint edc:offset="0xD"/>
            <edc:SFRFieldDef edc:cname="UPDM" edc:nzwidth="0x2" edc:desc="Synchronous Channels Update Mode">
              <edc:SFRFieldSemantic edc:cname="MODE0" edc:desc="Manual write of double buffer registers and manual update of synchronous channels" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="MODE1" edc:desc="Manual write of double buffer registers and automatic update of synchronous channels" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="MODE2" edc:desc="Automatic write of duty-cycle update registers by the Peripheral DMA Controller and automatic update of synchronous channels" edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PTRM" edc:nzwidth="0x1" edc:desc="Peripheral DMA Controller Transfer Request Mode"/>
            <edc:SFRFieldDef edc:cname="PTRCS" edc:nzwidth="0x3" edc:desc="Peripheral DMA Controller Transfer Request Comparison Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4801C024"/>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_SCUC" edc:nzwidth="0x20" edc:access="-------------------------------n" edc:impl="0x1" edc:_addr="0x4801C028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="UPDULOCK" edc:nzwidth="0x1" edc:desc="Synchronous Channels Update Unlock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_SCUP" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:impl="0xFF" edc:_addr="0x4801C02C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="UPR" edc:nzwidth="0x4" edc:desc="Update Period"/>
            <edc:SFRFieldDef edc:cname="UPRCNT" edc:nzwidth="0x4" edc:desc="Update Period Counter"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_SCUPUPD" edc:nzwidth="0x20" edc:access="----------------------------wwww" edc:impl="0xF" edc:_addr="0x4801C030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="UPRUPD" edc:nzwidth="0x4" edc:desc="Update Period Update"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_IER2" edc:nzwidth="0x20" edc:access="--------wwwwwwwwwwwwwwww----wwww" edc:impl="0xFFFF0F" edc:_addr="0x4801C034">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="WRDY" edc:nzwidth="0x1" edc:desc="Write Ready for Synchronous Channels Update Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="PDC End of TX Buffer Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="PDC TX Buffer Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:nzwidth="0x1" edc:desc="Synchronous Channels Update Underrun Error Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CMPM0" edc:nzwidth="0x1" edc:desc="Comparison 0 Match Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CMPM1" edc:nzwidth="0x1" edc:desc="Comparison 1 Match Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CMPM2" edc:nzwidth="0x1" edc:desc="Comparison 2 Match Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CMPM3" edc:nzwidth="0x1" edc:desc="Comparison 3 Match Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CMPM4" edc:nzwidth="0x1" edc:desc="Comparison 4 Match Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CMPM5" edc:nzwidth="0x1" edc:desc="Comparison 5 Match Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CMPM6" edc:nzwidth="0x1" edc:desc="Comparison 6 Match Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CMPM7" edc:nzwidth="0x1" edc:desc="Comparison 7 Match Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CMPU0" edc:nzwidth="0x1" edc:desc="Comparison 0 Update Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CMPU1" edc:nzwidth="0x1" edc:desc="Comparison 1 Update Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CMPU2" edc:nzwidth="0x1" edc:desc="Comparison 2 Update Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CMPU3" edc:nzwidth="0x1" edc:desc="Comparison 3 Update Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CMPU4" edc:nzwidth="0x1" edc:desc="Comparison 4 Update Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CMPU5" edc:nzwidth="0x1" edc:desc="Comparison 5 Update Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CMPU6" edc:nzwidth="0x1" edc:desc="Comparison 6 Update Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CMPU7" edc:nzwidth="0x1" edc:desc="Comparison 7 Update Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_IDR2" edc:nzwidth="0x20" edc:access="--------wwwwwwwwwwwwwwww----wwww" edc:impl="0xFFFF0F" edc:_addr="0x4801C038">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="WRDY" edc:nzwidth="0x1" edc:desc="Write Ready for Synchronous Channels Update Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="PDC End of TX Buffer Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="PDC TX Buffer Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:nzwidth="0x1" edc:desc="Synchronous Channels Update Underrun Error Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CMPM0" edc:nzwidth="0x1" edc:desc="Comparison 0 Match Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CMPM1" edc:nzwidth="0x1" edc:desc="Comparison 1 Match Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CMPM2" edc:nzwidth="0x1" edc:desc="Comparison 2 Match Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CMPM3" edc:nzwidth="0x1" edc:desc="Comparison 3 Match Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CMPM4" edc:nzwidth="0x1" edc:desc="Comparison 4 Match Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CMPM5" edc:nzwidth="0x1" edc:desc="Comparison 5 Match Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CMPM6" edc:nzwidth="0x1" edc:desc="Comparison 6 Match Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CMPM7" edc:nzwidth="0x1" edc:desc="Comparison 7 Match Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CMPU0" edc:nzwidth="0x1" edc:desc="Comparison 0 Update Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CMPU1" edc:nzwidth="0x1" edc:desc="Comparison 1 Update Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CMPU2" edc:nzwidth="0x1" edc:desc="Comparison 2 Update Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CMPU3" edc:nzwidth="0x1" edc:desc="Comparison 3 Update Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CMPU4" edc:nzwidth="0x1" edc:desc="Comparison 4 Update Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CMPU5" edc:nzwidth="0x1" edc:desc="Comparison 5 Update Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CMPU6" edc:nzwidth="0x1" edc:desc="Comparison 6 Update Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CMPU7" edc:nzwidth="0x1" edc:desc="Comparison 7 Update Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_IMR2" edc:nzwidth="0x20" edc:access="--------rrrrrrrrrrrrrrrr----rrrr" edc:impl="0xFFFF0F" edc:_addr="0x4801C03C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="WRDY" edc:nzwidth="0x1" edc:desc="Write Ready for Synchronous Channels Update Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="PDC End of TX Buffer Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="PDC TX Buffer Empty Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:nzwidth="0x1" edc:desc="Synchronous Channels Update Underrun Error Interrupt Mask"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CMPM0" edc:nzwidth="0x1" edc:desc="Comparison 0 Match Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="CMPM1" edc:nzwidth="0x1" edc:desc="Comparison 1 Match Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="CMPM2" edc:nzwidth="0x1" edc:desc="Comparison 2 Match Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="CMPM3" edc:nzwidth="0x1" edc:desc="Comparison 3 Match Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="CMPM4" edc:nzwidth="0x1" edc:desc="Comparison 4 Match Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="CMPM5" edc:nzwidth="0x1" edc:desc="Comparison 5 Match Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="CMPM6" edc:nzwidth="0x1" edc:desc="Comparison 6 Match Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="CMPM7" edc:nzwidth="0x1" edc:desc="Comparison 7 Match Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="CMPU0" edc:nzwidth="0x1" edc:desc="Comparison 0 Update Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="CMPU1" edc:nzwidth="0x1" edc:desc="Comparison 1 Update Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="CMPU2" edc:nzwidth="0x1" edc:desc="Comparison 2 Update Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="CMPU3" edc:nzwidth="0x1" edc:desc="Comparison 3 Update Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="CMPU4" edc:nzwidth="0x1" edc:desc="Comparison 4 Update Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="CMPU5" edc:nzwidth="0x1" edc:desc="Comparison 5 Update Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="CMPU6" edc:nzwidth="0x1" edc:desc="Comparison 6 Update Interrupt Mask"/>
            <edc:SFRFieldDef edc:cname="CMPU7" edc:nzwidth="0x1" edc:desc="Comparison 7 Update Interrupt Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_ISR2" edc:nzwidth="0x20" edc:access="--------rrrrrrrrrrrrrrrr----rrrr" edc:impl="0xFFFF0F" edc:_addr="0x4801C040">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="WRDY" edc:nzwidth="0x1" edc:desc="Write Ready for Synchronous Channels Update"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:nzwidth="0x1" edc:desc="PDC End of TX Buffer"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:nzwidth="0x1" edc:desc="PDC TX Buffer Empty"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:nzwidth="0x1" edc:desc="Synchronous Channels Update Underrun Error"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CMPM0" edc:nzwidth="0x1" edc:desc="Comparison 0 Match"/>
            <edc:SFRFieldDef edc:cname="CMPM1" edc:nzwidth="0x1" edc:desc="Comparison 1 Match"/>
            <edc:SFRFieldDef edc:cname="CMPM2" edc:nzwidth="0x1" edc:desc="Comparison 2 Match"/>
            <edc:SFRFieldDef edc:cname="CMPM3" edc:nzwidth="0x1" edc:desc="Comparison 3 Match"/>
            <edc:SFRFieldDef edc:cname="CMPM4" edc:nzwidth="0x1" edc:desc="Comparison 4 Match"/>
            <edc:SFRFieldDef edc:cname="CMPM5" edc:nzwidth="0x1" edc:desc="Comparison 5 Match"/>
            <edc:SFRFieldDef edc:cname="CMPM6" edc:nzwidth="0x1" edc:desc="Comparison 6 Match"/>
            <edc:SFRFieldDef edc:cname="CMPM7" edc:nzwidth="0x1" edc:desc="Comparison 7 Match"/>
            <edc:SFRFieldDef edc:cname="CMPU0" edc:nzwidth="0x1" edc:desc="Comparison 0 Update"/>
            <edc:SFRFieldDef edc:cname="CMPU1" edc:nzwidth="0x1" edc:desc="Comparison 1 Update"/>
            <edc:SFRFieldDef edc:cname="CMPU2" edc:nzwidth="0x1" edc:desc="Comparison 2 Update"/>
            <edc:SFRFieldDef edc:cname="CMPU3" edc:nzwidth="0x1" edc:desc="Comparison 3 Update"/>
            <edc:SFRFieldDef edc:cname="CMPU4" edc:nzwidth="0x1" edc:desc="Comparison 4 Update"/>
            <edc:SFRFieldDef edc:cname="CMPU5" edc:nzwidth="0x1" edc:desc="Comparison 5 Update"/>
            <edc:SFRFieldDef edc:cname="CMPU6" edc:nzwidth="0x1" edc:desc="Comparison 6 Update"/>
            <edc:SFRFieldDef edc:cname="CMPU7" edc:nzwidth="0x1" edc:desc="Comparison 7 Update"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_OOV" edc:nzwidth="0x20" edc:access="-------------nnn-------------nnn" edc:impl="0x70007" edc:_addr="0x4801C044">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="OOVH0" edc:nzwidth="0x1" edc:desc="Output Override Value for PWMH output of the channel 0"/>
            <edc:SFRFieldDef edc:cname="OOVH1" edc:nzwidth="0x1" edc:desc="Output Override Value for PWMH output of the channel 1"/>
            <edc:SFRFieldDef edc:cname="OOVH2" edc:nzwidth="0x1" edc:desc="Output Override Value for PWMH output of the channel 2"/>
            <edc:AdjustPoint edc:offset="0xD"/>
            <edc:SFRFieldDef edc:cname="OOVL0" edc:nzwidth="0x1" edc:desc="Output Override Value for PWML output of the channel 0"/>
            <edc:SFRFieldDef edc:cname="OOVL1" edc:nzwidth="0x1" edc:desc="Output Override Value for PWML output of the channel 1"/>
            <edc:SFRFieldDef edc:cname="OOVL2" edc:nzwidth="0x1" edc:desc="Output Override Value for PWML output of the channel 2"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_OS" edc:nzwidth="0x20" edc:access="-------------nnn-------------nnn" edc:impl="0x70007" edc:_addr="0x4801C048">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="OSH0" edc:nzwidth="0x1" edc:desc="Output Selection for PWMH output of the channel 0"/>
            <edc:SFRFieldDef edc:cname="OSH1" edc:nzwidth="0x1" edc:desc="Output Selection for PWMH output of the channel 1"/>
            <edc:SFRFieldDef edc:cname="OSH2" edc:nzwidth="0x1" edc:desc="Output Selection for PWMH output of the channel 2"/>
            <edc:AdjustPoint edc:offset="0xD"/>
            <edc:SFRFieldDef edc:cname="OSL0" edc:nzwidth="0x1" edc:desc="Output Selection for PWML output of the channel 0"/>
            <edc:SFRFieldDef edc:cname="OSL1" edc:nzwidth="0x1" edc:desc="Output Selection for PWML output of the channel 1"/>
            <edc:SFRFieldDef edc:cname="OSL2" edc:nzwidth="0x1" edc:desc="Output Selection for PWML output of the channel 2"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_OSS" edc:nzwidth="0x20" edc:access="-------------www-------------www" edc:impl="0x70007" edc:_addr="0x4801C04C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="OSSH0" edc:nzwidth="0x1" edc:desc="Output Selection Set for PWMH output of the channel 0"/>
            <edc:SFRFieldDef edc:cname="OSSH1" edc:nzwidth="0x1" edc:desc="Output Selection Set for PWMH output of the channel 1"/>
            <edc:SFRFieldDef edc:cname="OSSH2" edc:nzwidth="0x1" edc:desc="Output Selection Set for PWMH output of the channel 2"/>
            <edc:AdjustPoint edc:offset="0xD"/>
            <edc:SFRFieldDef edc:cname="OSSL0" edc:nzwidth="0x1" edc:desc="Output Selection Set for PWML output of the channel 0"/>
            <edc:SFRFieldDef edc:cname="OSSL1" edc:nzwidth="0x1" edc:desc="Output Selection Set for PWML output of the channel 1"/>
            <edc:SFRFieldDef edc:cname="OSSL2" edc:nzwidth="0x1" edc:desc="Output Selection Set for PWML output of the channel 2"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_OSC" edc:nzwidth="0x20" edc:access="-------------www-------------www" edc:impl="0x70007" edc:_addr="0x4801C050">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="OSCH0" edc:nzwidth="0x1" edc:desc="Output Selection Clear for PWMH output of the channel 0"/>
            <edc:SFRFieldDef edc:cname="OSCH1" edc:nzwidth="0x1" edc:desc="Output Selection Clear for PWMH output of the channel 1"/>
            <edc:SFRFieldDef edc:cname="OSCH2" edc:nzwidth="0x1" edc:desc="Output Selection Clear for PWMH output of the channel 2"/>
            <edc:AdjustPoint edc:offset="0xD"/>
            <edc:SFRFieldDef edc:cname="OSCL0" edc:nzwidth="0x1" edc:desc="Output Selection Clear for PWML output of the channel 0"/>
            <edc:SFRFieldDef edc:cname="OSCL1" edc:nzwidth="0x1" edc:desc="Output Selection Clear for PWML output of the channel 1"/>
            <edc:SFRFieldDef edc:cname="OSCL2" edc:nzwidth="0x1" edc:desc="Output Selection Clear for PWML output of the channel 2"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_OSSUPD" edc:nzwidth="0x20" edc:access="-------------www-------------www" edc:impl="0x70007" edc:_addr="0x4801C054">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="OSSUPH0" edc:nzwidth="0x1" edc:desc="Output Selection Set for PWMH output of the channel 0"/>
            <edc:SFRFieldDef edc:cname="OSSUPH1" edc:nzwidth="0x1" edc:desc="Output Selection Set for PWMH output of the channel 1"/>
            <edc:SFRFieldDef edc:cname="OSSUPH2" edc:nzwidth="0x1" edc:desc="Output Selection Set for PWMH output of the channel 2"/>
            <edc:AdjustPoint edc:offset="0xD"/>
            <edc:SFRFieldDef edc:cname="OSSUPL0" edc:nzwidth="0x1" edc:desc="Output Selection Set for PWML output of the channel 0"/>
            <edc:SFRFieldDef edc:cname="OSSUPL1" edc:nzwidth="0x1" edc:desc="Output Selection Set for PWML output of the channel 1"/>
            <edc:SFRFieldDef edc:cname="OSSUPL2" edc:nzwidth="0x1" edc:desc="Output Selection Set for PWML output of the channel 2"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_OSCUPD" edc:nzwidth="0x20" edc:access="-------------www-------------www" edc:impl="0x70007" edc:_addr="0x4801C058">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="OSCUPH0" edc:nzwidth="0x1" edc:desc="Output Selection Clear for PWMH output of the channel 0"/>
            <edc:SFRFieldDef edc:cname="OSCUPH1" edc:nzwidth="0x1" edc:desc="Output Selection Clear for PWMH output of the channel 1"/>
            <edc:SFRFieldDef edc:cname="OSCUPH2" edc:nzwidth="0x1" edc:desc="Output Selection Clear for PWMH output of the channel 2"/>
            <edc:AdjustPoint edc:offset="0xD"/>
            <edc:SFRFieldDef edc:cname="OSCUPL0" edc:nzwidth="0x1" edc:desc="Output Selection Clear for PWML output of the channel 0"/>
            <edc:SFRFieldDef edc:cname="OSCUPL1" edc:nzwidth="0x1" edc:desc="Output Selection Clear for PWML output of the channel 1"/>
            <edc:SFRFieldDef edc:cname="OSCUPL2" edc:nzwidth="0x1" edc:desc="Output Selection Clear for PWML output of the channel 2"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_FMR" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:impl="0xFFFFFF" edc:_addr="0x4801C05C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="FPOL" edc:nzwidth="0x8" edc:desc="Fault Polarity"/>
            <edc:SFRFieldDef edc:cname="FMOD" edc:nzwidth="0x8" edc:desc="Fault Activation Mode"/>
            <edc:SFRFieldDef edc:cname="FFIL" edc:nzwidth="0x8" edc:desc="Fault Filtering"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_FSR" edc:nzwidth="0x20" edc:access="----------------rrrrrrrrrrrrrrrr" edc:impl="0xFFFF" edc:_addr="0x4801C060">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="FIV" edc:nzwidth="0x8" edc:desc="Fault Input Value"/>
            <edc:SFRFieldDef edc:cname="FS" edc:nzwidth="0x8" edc:desc="Fault Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_FCR" edc:nzwidth="0x20" edc:access="------------------------wwwwwwww" edc:impl="0xFF" edc:_addr="0x4801C064">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="FCLR" edc:nzwidth="0x8" edc:desc="Fault Clear"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_FPV1" edc:nzwidth="0x20" edc:access="-------------nnn-------------nnn" edc:impl="0x70007" edc:_addr="0x4801C068">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="FPVH0" edc:nzwidth="0x1" edc:desc="Fault Protection Value for PWMH output on channel 0"/>
            <edc:SFRFieldDef edc:cname="FPVH1" edc:nzwidth="0x1" edc:desc="Fault Protection Value for PWMH output on channel 1"/>
            <edc:SFRFieldDef edc:cname="FPVH2" edc:nzwidth="0x1" edc:desc="Fault Protection Value for PWMH output on channel 2"/>
            <edc:AdjustPoint edc:offset="0xD"/>
            <edc:SFRFieldDef edc:cname="FPVL0" edc:nzwidth="0x1" edc:desc="Fault Protection Value for PWML output on channel 0"/>
            <edc:SFRFieldDef edc:cname="FPVL1" edc:nzwidth="0x1" edc:desc="Fault Protection Value for PWML output on channel 1"/>
            <edc:SFRFieldDef edc:cname="FPVL2" edc:nzwidth="0x1" edc:desc="Fault Protection Value for PWML output on channel 2"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_FPE" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:impl="0xFFFFFF" edc:_addr="0x4801C06C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="FPE0" edc:nzwidth="0x8" edc:desc="Fault Protection Enable for channel 0"/>
            <edc:SFRFieldDef edc:cname="FPE1" edc:nzwidth="0x8" edc:desc="Fault Protection Enable for channel 1"/>
            <edc:SFRFieldDef edc:cname="FPE2" edc:nzwidth="0x8" edc:desc="Fault Protection Enable for channel 2"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x4801C070"/>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_ELMR0" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:impl="0xFF" edc:_addr="0x4801C07C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CSEL0" edc:nzwidth="0x1" edc:desc="Comparison 0 Selection"/>
            <edc:SFRFieldDef edc:cname="CSEL1" edc:nzwidth="0x1" edc:desc="Comparison 1 Selection"/>
            <edc:SFRFieldDef edc:cname="CSEL2" edc:nzwidth="0x1" edc:desc="Comparison 2 Selection"/>
            <edc:SFRFieldDef edc:cname="CSEL3" edc:nzwidth="0x1" edc:desc="Comparison 3 Selection"/>
            <edc:SFRFieldDef edc:cname="CSEL4" edc:nzwidth="0x1" edc:desc="Comparison 4 Selection"/>
            <edc:SFRFieldDef edc:cname="CSEL5" edc:nzwidth="0x1" edc:desc="Comparison 5 Selection"/>
            <edc:SFRFieldDef edc:cname="CSEL6" edc:nzwidth="0x1" edc:desc="Comparison 6 Selection"/>
            <edc:SFRFieldDef edc:cname="CSEL7" edc:nzwidth="0x1" edc:desc="Comparison 7 Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x20" edc:_addr="0x4801C080"/>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_SSPR" edc:nzwidth="0x20" edc:access="-------nnnnnnnnnnnnnnnnnnnnnnnnn" edc:impl="0x1FFFFFF" edc:_addr="0x4801C0A0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="SPRD" edc:nzwidth="0x18" edc:desc="Spread Spectrum Limit Value"/>
            <edc:SFRFieldDef edc:cname="SPRDM" edc:nzwidth="0x1" edc:desc="Spread Spectrum Counter Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_SSPUP" edc:nzwidth="0x20" edc:access="--------wwwwwwwwwwwwwwwwwwwwwwww" edc:impl="0xFFFFFF" edc:_addr="0x4801C0A4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="SPRDUP" edc:nzwidth="0x18" edc:desc="Spread Spectrum Limit Value Update"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4801C0A8"/>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_DEBUG" edc:nzwidth="0x20" edc:access="-------------------------------n" edc:impl="0x1" edc:_addr="0x4801C0AC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="OUTMODE" edc:nzwidth="0x1" edc:desc="PWM Output Mode when System is in Debug Mode">
              <edc:SFRFieldSemantic edc:cname="NO_EFFECT" edc:desc="Keeps the PWM outputs running when the processor reports a debug operating mode." edc:when="(field &amp; 0x1) == 0x00"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_SMMR" edc:nzwidth="0x20" edc:access="---------------n---------------n" edc:impl="0x10001" edc:_addr="0x4801C0B0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="GCEN0" edc:nzwidth="0x1" edc:desc="Gray Count Enable"/>
            <edc:AdjustPoint edc:offset="0xF"/>
            <edc:SFRFieldDef edc:cname="DOWN0" edc:nzwidth="0x1" edc:desc="Down Count"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x4801C0B4"/>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_FPV2" edc:nzwidth="0x20" edc:access="-------------nnn-------------nnn" edc:impl="0x70007" edc:_addr="0x4801C0C0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="FPZH0" edc:nzwidth="0x1" edc:desc="Fault Protection to Hi-Z for PWMH output on channel 0"/>
            <edc:SFRFieldDef edc:cname="FPZH1" edc:nzwidth="0x1" edc:desc="Fault Protection to Hi-Z for PWMH output on channel 1"/>
            <edc:SFRFieldDef edc:cname="FPZH2" edc:nzwidth="0x1" edc:desc="Fault Protection to Hi-Z for PWMH output on channel 2"/>
            <edc:AdjustPoint edc:offset="0xD"/>
            <edc:SFRFieldDef edc:cname="FPZL0" edc:nzwidth="0x1" edc:desc="Fault Protection to Hi-Z for PWML output on channel 0"/>
            <edc:SFRFieldDef edc:cname="FPZL1" edc:nzwidth="0x1" edc:desc="Fault Protection to Hi-Z for PWML output on channel 1"/>
            <edc:SFRFieldDef edc:cname="FPZL2" edc:nzwidth="0x1" edc:desc="Fault Protection to Hi-Z for PWML output on channel 2"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x20" edc:_addr="0x4801C0C4"/>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_WPCR" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4801C0E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="WPCMD" edc:nzwidth="0x2" edc:desc="Write Protection Command">
              <edc:SFRFieldSemantic edc:cname="DISABLE_SW_PROT" edc:desc="Disables the software write protection of the register groups of which the bit WPRGx is at '1'." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE_SW_PROT" edc:desc="Enables the software write protection of the register groups of which the bit WPRGx is at '1'." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE_HW_PROT" edc:desc="Enables the hardware write protection of the register groups of which the bit WPRGx is at '1'. Only a hardware reset of the PWM controller can disable the hardware write protection. Moreover, to meet security requirements, the PIO lines associated with the PWM can not be configured through the PIO interface." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WPRG0" edc:nzwidth="0x1" edc:desc="Write Protection Register Group 0"/>
            <edc:SFRFieldDef edc:cname="WPRG1" edc:nzwidth="0x1" edc:desc="Write Protection Register Group 1"/>
            <edc:SFRFieldDef edc:cname="WPRG2" edc:nzwidth="0x1" edc:desc="Write Protection Register Group 2"/>
            <edc:SFRFieldDef edc:cname="WPRG3" edc:nzwidth="0x1" edc:desc="Write Protection Register Group 3"/>
            <edc:SFRFieldDef edc:cname="WPRG4" edc:nzwidth="0x1" edc:desc="Write Protection Register Group 4"/>
            <edc:SFRFieldDef edc:cname="WPRG5" edc:nzwidth="0x1" edc:desc="Write Protection Register Group 5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPCMD field. Always reads as 0" edc:when="(field &amp; 0xFFFFFF) == 0x50574D"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_WPSR" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrr--rrrrrrr-rrrrrr" edc:impl="0xFFFF3FBF" edc:_addr="0x4801C0E8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="WPSWS0" edc:nzwidth="0x1" edc:desc="Write Protect SW Status"/>
            <edc:SFRFieldDef edc:cname="WPSWS1" edc:nzwidth="0x1" edc:desc="Write Protect SW Status"/>
            <edc:SFRFieldDef edc:cname="WPSWS2" edc:nzwidth="0x1" edc:desc="Write Protect SW Status"/>
            <edc:SFRFieldDef edc:cname="WPSWS3" edc:nzwidth="0x1" edc:desc="Write Protect SW Status"/>
            <edc:SFRFieldDef edc:cname="WPSWS4" edc:nzwidth="0x1" edc:desc="Write Protect SW Status"/>
            <edc:SFRFieldDef edc:cname="WPSWS5" edc:nzwidth="0x1" edc:desc="Write Protect SW Status"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="WPVS" edc:nzwidth="0x1" edc:desc="Write Protect Violation Status"/>
            <edc:SFRFieldDef edc:cname="WPHWS0" edc:nzwidth="0x1" edc:desc="Write Protect HW Status"/>
            <edc:SFRFieldDef edc:cname="WPHWS1" edc:nzwidth="0x1" edc:desc="Write Protect HW Status"/>
            <edc:SFRFieldDef edc:cname="WPHWS2" edc:nzwidth="0x1" edc:desc="Write Protect HW Status"/>
            <edc:SFRFieldDef edc:cname="WPHWS3" edc:nzwidth="0x1" edc:desc="Write Protect HW Status"/>
            <edc:SFRFieldDef edc:cname="WPHWS4" edc:nzwidth="0x1" edc:desc="Write Protect HW Status"/>
            <edc:SFRFieldDef edc:cname="WPHWS5" edc:nzwidth="0x1" edc:desc="Write Protect HW Status"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:nzwidth="0x10" edc:desc="Write Protect Violation Source"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1C" edc:_addr="0x4801C0EC"/>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_TPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4801C108">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="TXPTR" edc:nzwidth="0x20" edc:desc="Transmit Counter Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_TCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x4801C10C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="TXCTR" edc:nzwidth="0x10" edc:desc="Transmit Counter Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x4801C110"/>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_TNPR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4801C118">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="TXNPTR" edc:nzwidth="0x20" edc:desc="Transmit Next Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_TNCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x4801C11C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="TXNCTR" edc:nzwidth="0x10" edc:desc="Transmit Counter Next"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_PTCR" edc:nzwidth="0x20" edc:access="-------w----wwww------ww------ww" edc:impl="0x10F0303" edc:_addr="0x4801C120">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="RXTEN" edc:nzwidth="0x1" edc:desc="Receiver Transfer Enable"/>
            <edc:SFRFieldDef edc:cname="RXTDIS" edc:nzwidth="0x1" edc:desc="Receiver Transfer Disable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="TXTEN" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Enable"/>
            <edc:SFRFieldDef edc:cname="TXTDIS" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Disable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="RXCBEN" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Enable"/>
            <edc:SFRFieldDef edc:cname="RXCBDIS" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Disable"/>
            <edc:SFRFieldDef edc:cname="TXCBEN" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Enable"/>
            <edc:SFRFieldDef edc:cname="TXCBDIS" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Disable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ERRCLR" edc:nzwidth="0x1" edc:desc="Transfer Bus Error Clear"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_PTSR" edc:nzwidth="0x20" edc:access="-------r-----r-r-------r-------r" edc:impl="0x1050101" edc:_addr="0x4801C124">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="RXTEN" edc:nzwidth="0x1" edc:desc="Receiver Transfer Enable"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="TXTEN" edc:nzwidth="0x1" edc:desc="Transmitter Transfer Enable"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="RXCBEN" edc:nzwidth="0x1" edc:desc="Receiver Circular Buffer Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXCBEN" edc:nzwidth="0x1" edc:desc="Transmitter Circular Buffer Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Transfer Bus Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_PWPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:impl="0xFFFFFF07" edc:_addr="0x4801C128">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="WPPTREN" edc:nzwidth="0x1" edc:desc="Write Protection Pointer Registers Enable"/>
            <edc:SFRFieldDef edc:cname="WPCTREN" edc:nzwidth="0x1" edc:desc="Write Protection Counter Registers Enable"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:nzwidth="0x1" edc:desc="Write Protection Control Register Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x504443"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4801C12C"/>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CMP0PWM_CMPV" edc:nzwidth="0x20" edc:access="-------nnnnnnnnnnnnnnnnnnnnnnnnn" edc:impl="0x1FFFFFF" edc:_addr="0x4801C130">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CV" edc:nzwidth="0x18" edc:desc="Comparison x Value"/>
            <edc:SFRFieldDef edc:cname="CVM" edc:nzwidth="0x1" edc:desc="Comparison x Value Mode">
              <edc:SFRFieldSemantic edc:cname="COMPARE_AT_INCREMENT" edc:desc="Compare when counter is incrementing" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="COMPARE_AT_DECREMENT" edc:desc="Compare when counter is decrementing" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CMP0PWM_CMPVUPD" edc:nzwidth="0x20" edc:access="-------wwwwwwwwwwwwwwwwwwwwwwwww" edc:impl="0x1FFFFFF" edc:_addr="0x4801C134">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CVUPD" edc:nzwidth="0x18" edc:desc="Comparison x Value Update"/>
            <edc:SFRFieldDef edc:cname="CVMUPD" edc:nzwidth="0x1" edc:desc="Comparison x Value Mode Update"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CMP0PWM_CMPM" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnn---n" edc:impl="0xFFFFF1" edc:_addr="0x4801C138">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CEN" edc:nzwidth="0x1" edc:desc="Comparison x Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTR" edc:nzwidth="0x4" edc:desc="Comparison x Trigger"/>
            <edc:SFRFieldDef edc:cname="CPR" edc:nzwidth="0x4" edc:desc="Comparison x Period"/>
            <edc:SFRFieldDef edc:cname="CPRCNT" edc:nzwidth="0x4" edc:desc="Comparison x Period Counter"/>
            <edc:SFRFieldDef edc:cname="CUPR" edc:nzwidth="0x4" edc:desc="Comparison x Update Period"/>
            <edc:SFRFieldDef edc:cname="CUPRCNT" edc:nzwidth="0x4" edc:desc="Comparison x Update Period Counter"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CMP0PWM_CMPMUPD" edc:nzwidth="0x20" edc:access="------------wwww----wwwwwwww---w" edc:impl="0xF0FF1" edc:_addr="0x4801C13C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CENUPD" edc:nzwidth="0x1" edc:desc="Comparison x Enable Update"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTRUPD" edc:nzwidth="0x4" edc:desc="Comparison x Trigger Update"/>
            <edc:SFRFieldDef edc:cname="CPRUPD" edc:nzwidth="0x4" edc:desc="Comparison x Period Update"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPRUPD" edc:nzwidth="0x4" edc:desc="Comparison x Update Period Update"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CMP1PWM_CMPV" edc:nzwidth="0x20" edc:access="-------nnnnnnnnnnnnnnnnnnnnnnnnn" edc:impl="0x1FFFFFF" edc:_addr="0x4801C140">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CV" edc:nzwidth="0x18" edc:desc="Comparison x Value"/>
            <edc:SFRFieldDef edc:cname="CVM" edc:nzwidth="0x1" edc:desc="Comparison x Value Mode">
              <edc:SFRFieldSemantic edc:cname="COMPARE_AT_INCREMENT" edc:desc="Compare when counter is incrementing" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="COMPARE_AT_DECREMENT" edc:desc="Compare when counter is decrementing" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CMP1PWM_CMPVUPD" edc:nzwidth="0x20" edc:access="-------wwwwwwwwwwwwwwwwwwwwwwwww" edc:impl="0x1FFFFFF" edc:_addr="0x4801C144">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CVUPD" edc:nzwidth="0x18" edc:desc="Comparison x Value Update"/>
            <edc:SFRFieldDef edc:cname="CVMUPD" edc:nzwidth="0x1" edc:desc="Comparison x Value Mode Update"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CMP1PWM_CMPM" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnn---n" edc:impl="0xFFFFF1" edc:_addr="0x4801C148">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CEN" edc:nzwidth="0x1" edc:desc="Comparison x Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTR" edc:nzwidth="0x4" edc:desc="Comparison x Trigger"/>
            <edc:SFRFieldDef edc:cname="CPR" edc:nzwidth="0x4" edc:desc="Comparison x Period"/>
            <edc:SFRFieldDef edc:cname="CPRCNT" edc:nzwidth="0x4" edc:desc="Comparison x Period Counter"/>
            <edc:SFRFieldDef edc:cname="CUPR" edc:nzwidth="0x4" edc:desc="Comparison x Update Period"/>
            <edc:SFRFieldDef edc:cname="CUPRCNT" edc:nzwidth="0x4" edc:desc="Comparison x Update Period Counter"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CMP1PWM_CMPMUPD" edc:nzwidth="0x20" edc:access="------------wwww----wwwwwwww---w" edc:impl="0xF0FF1" edc:_addr="0x4801C14C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CENUPD" edc:nzwidth="0x1" edc:desc="Comparison x Enable Update"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTRUPD" edc:nzwidth="0x4" edc:desc="Comparison x Trigger Update"/>
            <edc:SFRFieldDef edc:cname="CPRUPD" edc:nzwidth="0x4" edc:desc="Comparison x Period Update"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPRUPD" edc:nzwidth="0x4" edc:desc="Comparison x Update Period Update"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CMP2PWM_CMPV" edc:nzwidth="0x20" edc:access="-------nnnnnnnnnnnnnnnnnnnnnnnnn" edc:impl="0x1FFFFFF" edc:_addr="0x4801C150">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CV" edc:nzwidth="0x18" edc:desc="Comparison x Value"/>
            <edc:SFRFieldDef edc:cname="CVM" edc:nzwidth="0x1" edc:desc="Comparison x Value Mode">
              <edc:SFRFieldSemantic edc:cname="COMPARE_AT_INCREMENT" edc:desc="Compare when counter is incrementing" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="COMPARE_AT_DECREMENT" edc:desc="Compare when counter is decrementing" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CMP2PWM_CMPVUPD" edc:nzwidth="0x20" edc:access="-------wwwwwwwwwwwwwwwwwwwwwwwww" edc:impl="0x1FFFFFF" edc:_addr="0x4801C154">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CVUPD" edc:nzwidth="0x18" edc:desc="Comparison x Value Update"/>
            <edc:SFRFieldDef edc:cname="CVMUPD" edc:nzwidth="0x1" edc:desc="Comparison x Value Mode Update"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CMP2PWM_CMPM" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnn---n" edc:impl="0xFFFFF1" edc:_addr="0x4801C158">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CEN" edc:nzwidth="0x1" edc:desc="Comparison x Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTR" edc:nzwidth="0x4" edc:desc="Comparison x Trigger"/>
            <edc:SFRFieldDef edc:cname="CPR" edc:nzwidth="0x4" edc:desc="Comparison x Period"/>
            <edc:SFRFieldDef edc:cname="CPRCNT" edc:nzwidth="0x4" edc:desc="Comparison x Period Counter"/>
            <edc:SFRFieldDef edc:cname="CUPR" edc:nzwidth="0x4" edc:desc="Comparison x Update Period"/>
            <edc:SFRFieldDef edc:cname="CUPRCNT" edc:nzwidth="0x4" edc:desc="Comparison x Update Period Counter"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CMP2PWM_CMPMUPD" edc:nzwidth="0x20" edc:access="------------wwww----wwwwwwww---w" edc:impl="0xF0FF1" edc:_addr="0x4801C15C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CENUPD" edc:nzwidth="0x1" edc:desc="Comparison x Enable Update"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTRUPD" edc:nzwidth="0x4" edc:desc="Comparison x Trigger Update"/>
            <edc:SFRFieldDef edc:cname="CPRUPD" edc:nzwidth="0x4" edc:desc="Comparison x Period Update"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPRUPD" edc:nzwidth="0x4" edc:desc="Comparison x Update Period Update"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CMP3PWM_CMPV" edc:nzwidth="0x20" edc:access="-------nnnnnnnnnnnnnnnnnnnnnnnnn" edc:impl="0x1FFFFFF" edc:_addr="0x4801C160">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CV" edc:nzwidth="0x18" edc:desc="Comparison x Value"/>
            <edc:SFRFieldDef edc:cname="CVM" edc:nzwidth="0x1" edc:desc="Comparison x Value Mode">
              <edc:SFRFieldSemantic edc:cname="COMPARE_AT_INCREMENT" edc:desc="Compare when counter is incrementing" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="COMPARE_AT_DECREMENT" edc:desc="Compare when counter is decrementing" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CMP3PWM_CMPVUPD" edc:nzwidth="0x20" edc:access="-------wwwwwwwwwwwwwwwwwwwwwwwww" edc:impl="0x1FFFFFF" edc:_addr="0x4801C164">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CVUPD" edc:nzwidth="0x18" edc:desc="Comparison x Value Update"/>
            <edc:SFRFieldDef edc:cname="CVMUPD" edc:nzwidth="0x1" edc:desc="Comparison x Value Mode Update"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CMP3PWM_CMPM" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnn---n" edc:impl="0xFFFFF1" edc:_addr="0x4801C168">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CEN" edc:nzwidth="0x1" edc:desc="Comparison x Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTR" edc:nzwidth="0x4" edc:desc="Comparison x Trigger"/>
            <edc:SFRFieldDef edc:cname="CPR" edc:nzwidth="0x4" edc:desc="Comparison x Period"/>
            <edc:SFRFieldDef edc:cname="CPRCNT" edc:nzwidth="0x4" edc:desc="Comparison x Period Counter"/>
            <edc:SFRFieldDef edc:cname="CUPR" edc:nzwidth="0x4" edc:desc="Comparison x Update Period"/>
            <edc:SFRFieldDef edc:cname="CUPRCNT" edc:nzwidth="0x4" edc:desc="Comparison x Update Period Counter"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CMP3PWM_CMPMUPD" edc:nzwidth="0x20" edc:access="------------wwww----wwwwwwww---w" edc:impl="0xF0FF1" edc:_addr="0x4801C16C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CENUPD" edc:nzwidth="0x1" edc:desc="Comparison x Enable Update"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTRUPD" edc:nzwidth="0x4" edc:desc="Comparison x Trigger Update"/>
            <edc:SFRFieldDef edc:cname="CPRUPD" edc:nzwidth="0x4" edc:desc="Comparison x Period Update"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPRUPD" edc:nzwidth="0x4" edc:desc="Comparison x Update Period Update"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CMP4PWM_CMPV" edc:nzwidth="0x20" edc:access="-------nnnnnnnnnnnnnnnnnnnnnnnnn" edc:impl="0x1FFFFFF" edc:_addr="0x4801C170">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CV" edc:nzwidth="0x18" edc:desc="Comparison x Value"/>
            <edc:SFRFieldDef edc:cname="CVM" edc:nzwidth="0x1" edc:desc="Comparison x Value Mode">
              <edc:SFRFieldSemantic edc:cname="COMPARE_AT_INCREMENT" edc:desc="Compare when counter is incrementing" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="COMPARE_AT_DECREMENT" edc:desc="Compare when counter is decrementing" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CMP4PWM_CMPVUPD" edc:nzwidth="0x20" edc:access="-------wwwwwwwwwwwwwwwwwwwwwwwww" edc:impl="0x1FFFFFF" edc:_addr="0x4801C174">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CVUPD" edc:nzwidth="0x18" edc:desc="Comparison x Value Update"/>
            <edc:SFRFieldDef edc:cname="CVMUPD" edc:nzwidth="0x1" edc:desc="Comparison x Value Mode Update"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CMP4PWM_CMPM" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnn---n" edc:impl="0xFFFFF1" edc:_addr="0x4801C178">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CEN" edc:nzwidth="0x1" edc:desc="Comparison x Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTR" edc:nzwidth="0x4" edc:desc="Comparison x Trigger"/>
            <edc:SFRFieldDef edc:cname="CPR" edc:nzwidth="0x4" edc:desc="Comparison x Period"/>
            <edc:SFRFieldDef edc:cname="CPRCNT" edc:nzwidth="0x4" edc:desc="Comparison x Period Counter"/>
            <edc:SFRFieldDef edc:cname="CUPR" edc:nzwidth="0x4" edc:desc="Comparison x Update Period"/>
            <edc:SFRFieldDef edc:cname="CUPRCNT" edc:nzwidth="0x4" edc:desc="Comparison x Update Period Counter"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CMP4PWM_CMPMUPD" edc:nzwidth="0x20" edc:access="------------wwww----wwwwwwww---w" edc:impl="0xF0FF1" edc:_addr="0x4801C17C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CENUPD" edc:nzwidth="0x1" edc:desc="Comparison x Enable Update"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTRUPD" edc:nzwidth="0x4" edc:desc="Comparison x Trigger Update"/>
            <edc:SFRFieldDef edc:cname="CPRUPD" edc:nzwidth="0x4" edc:desc="Comparison x Period Update"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPRUPD" edc:nzwidth="0x4" edc:desc="Comparison x Update Period Update"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CMP5PWM_CMPV" edc:nzwidth="0x20" edc:access="-------nnnnnnnnnnnnnnnnnnnnnnnnn" edc:impl="0x1FFFFFF" edc:_addr="0x4801C180">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CV" edc:nzwidth="0x18" edc:desc="Comparison x Value"/>
            <edc:SFRFieldDef edc:cname="CVM" edc:nzwidth="0x1" edc:desc="Comparison x Value Mode">
              <edc:SFRFieldSemantic edc:cname="COMPARE_AT_INCREMENT" edc:desc="Compare when counter is incrementing" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="COMPARE_AT_DECREMENT" edc:desc="Compare when counter is decrementing" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CMP5PWM_CMPVUPD" edc:nzwidth="0x20" edc:access="-------wwwwwwwwwwwwwwwwwwwwwwwww" edc:impl="0x1FFFFFF" edc:_addr="0x4801C184">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CVUPD" edc:nzwidth="0x18" edc:desc="Comparison x Value Update"/>
            <edc:SFRFieldDef edc:cname="CVMUPD" edc:nzwidth="0x1" edc:desc="Comparison x Value Mode Update"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CMP5PWM_CMPM" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnn---n" edc:impl="0xFFFFF1" edc:_addr="0x4801C188">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CEN" edc:nzwidth="0x1" edc:desc="Comparison x Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTR" edc:nzwidth="0x4" edc:desc="Comparison x Trigger"/>
            <edc:SFRFieldDef edc:cname="CPR" edc:nzwidth="0x4" edc:desc="Comparison x Period"/>
            <edc:SFRFieldDef edc:cname="CPRCNT" edc:nzwidth="0x4" edc:desc="Comparison x Period Counter"/>
            <edc:SFRFieldDef edc:cname="CUPR" edc:nzwidth="0x4" edc:desc="Comparison x Update Period"/>
            <edc:SFRFieldDef edc:cname="CUPRCNT" edc:nzwidth="0x4" edc:desc="Comparison x Update Period Counter"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CMP5PWM_CMPMUPD" edc:nzwidth="0x20" edc:access="------------wwww----wwwwwwww---w" edc:impl="0xF0FF1" edc:_addr="0x4801C18C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CENUPD" edc:nzwidth="0x1" edc:desc="Comparison x Enable Update"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTRUPD" edc:nzwidth="0x4" edc:desc="Comparison x Trigger Update"/>
            <edc:SFRFieldDef edc:cname="CPRUPD" edc:nzwidth="0x4" edc:desc="Comparison x Period Update"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPRUPD" edc:nzwidth="0x4" edc:desc="Comparison x Update Period Update"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CMP6PWM_CMPV" edc:nzwidth="0x20" edc:access="-------nnnnnnnnnnnnnnnnnnnnnnnnn" edc:impl="0x1FFFFFF" edc:_addr="0x4801C190">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CV" edc:nzwidth="0x18" edc:desc="Comparison x Value"/>
            <edc:SFRFieldDef edc:cname="CVM" edc:nzwidth="0x1" edc:desc="Comparison x Value Mode">
              <edc:SFRFieldSemantic edc:cname="COMPARE_AT_INCREMENT" edc:desc="Compare when counter is incrementing" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="COMPARE_AT_DECREMENT" edc:desc="Compare when counter is decrementing" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CMP6PWM_CMPVUPD" edc:nzwidth="0x20" edc:access="-------wwwwwwwwwwwwwwwwwwwwwwwww" edc:impl="0x1FFFFFF" edc:_addr="0x4801C194">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CVUPD" edc:nzwidth="0x18" edc:desc="Comparison x Value Update"/>
            <edc:SFRFieldDef edc:cname="CVMUPD" edc:nzwidth="0x1" edc:desc="Comparison x Value Mode Update"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CMP6PWM_CMPM" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnn---n" edc:impl="0xFFFFF1" edc:_addr="0x4801C198">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CEN" edc:nzwidth="0x1" edc:desc="Comparison x Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTR" edc:nzwidth="0x4" edc:desc="Comparison x Trigger"/>
            <edc:SFRFieldDef edc:cname="CPR" edc:nzwidth="0x4" edc:desc="Comparison x Period"/>
            <edc:SFRFieldDef edc:cname="CPRCNT" edc:nzwidth="0x4" edc:desc="Comparison x Period Counter"/>
            <edc:SFRFieldDef edc:cname="CUPR" edc:nzwidth="0x4" edc:desc="Comparison x Update Period"/>
            <edc:SFRFieldDef edc:cname="CUPRCNT" edc:nzwidth="0x4" edc:desc="Comparison x Update Period Counter"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CMP6PWM_CMPMUPD" edc:nzwidth="0x20" edc:access="------------wwww----wwwwwwww---w" edc:impl="0xF0FF1" edc:_addr="0x4801C19C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CENUPD" edc:nzwidth="0x1" edc:desc="Comparison x Enable Update"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTRUPD" edc:nzwidth="0x4" edc:desc="Comparison x Trigger Update"/>
            <edc:SFRFieldDef edc:cname="CPRUPD" edc:nzwidth="0x4" edc:desc="Comparison x Period Update"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPRUPD" edc:nzwidth="0x4" edc:desc="Comparison x Update Period Update"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CMP7PWM_CMPV" edc:nzwidth="0x20" edc:access="-------nnnnnnnnnnnnnnnnnnnnnnnnn" edc:impl="0x1FFFFFF" edc:_addr="0x4801C1A0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CV" edc:nzwidth="0x18" edc:desc="Comparison x Value"/>
            <edc:SFRFieldDef edc:cname="CVM" edc:nzwidth="0x1" edc:desc="Comparison x Value Mode">
              <edc:SFRFieldSemantic edc:cname="COMPARE_AT_INCREMENT" edc:desc="Compare when counter is incrementing" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="COMPARE_AT_DECREMENT" edc:desc="Compare when counter is decrementing" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CMP7PWM_CMPVUPD" edc:nzwidth="0x20" edc:access="-------wwwwwwwwwwwwwwwwwwwwwwwww" edc:impl="0x1FFFFFF" edc:_addr="0x4801C1A4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CVUPD" edc:nzwidth="0x18" edc:desc="Comparison x Value Update"/>
            <edc:SFRFieldDef edc:cname="CVMUPD" edc:nzwidth="0x1" edc:desc="Comparison x Value Mode Update"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CMP7PWM_CMPM" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnn---n" edc:impl="0xFFFFF1" edc:_addr="0x4801C1A8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CEN" edc:nzwidth="0x1" edc:desc="Comparison x Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTR" edc:nzwidth="0x4" edc:desc="Comparison x Trigger"/>
            <edc:SFRFieldDef edc:cname="CPR" edc:nzwidth="0x4" edc:desc="Comparison x Period"/>
            <edc:SFRFieldDef edc:cname="CPRCNT" edc:nzwidth="0x4" edc:desc="Comparison x Period Counter"/>
            <edc:SFRFieldDef edc:cname="CUPR" edc:nzwidth="0x4" edc:desc="Comparison x Update Period"/>
            <edc:SFRFieldDef edc:cname="CUPRCNT" edc:nzwidth="0x4" edc:desc="Comparison x Update Period Counter"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CMP7PWM_CMPMUPD" edc:nzwidth="0x20" edc:access="------------wwww----wwwwwwww---w" edc:impl="0xF0FF1" edc:_addr="0x4801C1AC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CENUPD" edc:nzwidth="0x1" edc:desc="Comparison x Enable Update"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTRUPD" edc:nzwidth="0x4" edc:desc="Comparison x Trigger Update"/>
            <edc:SFRFieldDef edc:cname="CPRUPD" edc:nzwidth="0x4" edc:desc="Comparison x Period Update"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPRUPD" edc:nzwidth="0x4" edc:desc="Comparison x Update Period Update"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x50" edc:_addr="0x4801C1B0"/>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CH_NUM0PWM_CMR" edc:nzwidth="0x20" edc:access="------------nnnn--nnnnnn----nnnn" edc:impl="0xF3F0F" edc:_addr="0x4801C200">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CPRE" edc:nzwidth="0x4" edc:desc="Channel Prescaler">
              <edc:SFRFieldSemantic edc:cname="MCK" edc:desc="Peripheral clock" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_2" edc:desc="Peripheral clock/2" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_4" edc:desc="Peripheral clock/4" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_8" edc:desc="Peripheral clock/8" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_16" edc:desc="Peripheral clock/16" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_32" edc:desc="Peripheral clock/32" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_64" edc:desc="Peripheral clock/64" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_128" edc:desc="Peripheral clock/128" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_256" edc:desc="Peripheral clock/256" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_512" edc:desc="Peripheral clock/512" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_1024" edc:desc="Peripheral clock/1024" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="CLKA" edc:desc="Clock A" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="CLKB" edc:desc="Clock B" edc:when="(field &amp; 0xF) == 0x0C"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CALG" edc:nzwidth="0x1" edc:desc="Channel Alignment">
              <edc:SFRFieldSemantic edc:cname="LEFT_ALIGNED" edc:desc="Left aligned" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="CENTER_ALIGNED" edc:desc="Center aligned" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Channel Polarity">
              <edc:SFRFieldSemantic edc:cname="LOW_POLARITY" edc:desc="Waveform starts at low level" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="HIGH_POLARITY" edc:desc="Waveform starts at high level" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CES" edc:nzwidth="0x1" edc:desc="Counter Event Selection">
              <edc:SFRFieldSemantic edc:cname="SINGLE_EVENT" edc:desc="At the end of PWM period" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DOUBLE_EVENT" edc:desc="At half of PWM period AND at the end of PWM period" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="UPDS" edc:nzwidth="0x1" edc:desc="Update Selection">
              <edc:SFRFieldSemantic edc:cname="UPDATE_AT_PERIOD" edc:desc="At the next end of PWM period" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE_AT_HALF_PERIOD" edc:desc="At the next end of Half PWM period" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DPOLI" edc:nzwidth="0x1" edc:desc="Disabled Polarity Inverted"/>
            <edc:SFRFieldDef edc:cname="TCTS" edc:nzwidth="0x1" edc:desc="Timer Counter Trigger Selection"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DTE" edc:nzwidth="0x1" edc:desc="Dead-Time Generator Enable"/>
            <edc:SFRFieldDef edc:cname="DTHI" edc:nzwidth="0x1" edc:desc="Dead-Time PWMHx Output Inverted"/>
            <edc:SFRFieldDef edc:cname="DTLI" edc:nzwidth="0x1" edc:desc="Dead-Time PWMLx Output Inverted"/>
            <edc:SFRFieldDef edc:cname="PPM" edc:nzwidth="0x1" edc:desc="Push-Pull Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CH_NUM0PWM_CDTY" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:impl="0xFFFFFF" edc:_addr="0x4801C204">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CDTY" edc:nzwidth="0x18" edc:desc="Channel Duty-Cycle"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CH_NUM0PWM_CDTYUPD" edc:nzwidth="0x20" edc:access="--------wwwwwwwwwwwwwwwwwwwwwwww" edc:impl="0xFFFFFF" edc:_addr="0x4801C208">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CDTYUPD" edc:nzwidth="0x18" edc:desc="Channel Duty-Cycle Update"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CH_NUM0PWM_CPRD" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:impl="0xFFFFFF" edc:_addr="0x4801C20C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CPRD" edc:nzwidth="0x18" edc:desc="Channel Period"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CH_NUM0PWM_CPRDUPD" edc:nzwidth="0x20" edc:access="--------wwwwwwwwwwwwwwwwwwwwwwww" edc:impl="0xFFFFFF" edc:_addr="0x4801C210">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CPRDUPD" edc:nzwidth="0x18" edc:desc="Channel Period Update"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CH_NUM0PWM_CCNT" edc:nzwidth="0x20" edc:access="--------rrrrrrrrrrrrrrrrrrrrrrrr" edc:impl="0xFFFFFF" edc:_addr="0x4801C214">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CNT" edc:nzwidth="0x18" edc:desc="Channel Counter Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CH_NUM0PWM_DT" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4801C218">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="DTH" edc:nzwidth="0x10" edc:desc="Dead-Time Value for PWMHx Output"/>
            <edc:SFRFieldDef edc:cname="DTL" edc:nzwidth="0x10" edc:desc="Dead-Time Value for PWMLx Output"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CH_NUM0PWM_DTUPD" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4801C21C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="DTHUPD" edc:nzwidth="0x10" edc:desc="Dead-Time Value Update for PWMHx Output"/>
            <edc:SFRFieldDef edc:cname="DTLUPD" edc:nzwidth="0x10" edc:desc="Dead-Time Value Update for PWMLx Output"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CH_NUM1PWM_CMR" edc:nzwidth="0x20" edc:access="------------nnnn--nnnnnn----nnnn" edc:impl="0xF3F0F" edc:_addr="0x4801C220">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CPRE" edc:nzwidth="0x4" edc:desc="Channel Prescaler">
              <edc:SFRFieldSemantic edc:cname="MCK" edc:desc="Peripheral clock" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_2" edc:desc="Peripheral clock/2" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_4" edc:desc="Peripheral clock/4" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_8" edc:desc="Peripheral clock/8" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_16" edc:desc="Peripheral clock/16" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_32" edc:desc="Peripheral clock/32" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_64" edc:desc="Peripheral clock/64" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_128" edc:desc="Peripheral clock/128" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_256" edc:desc="Peripheral clock/256" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_512" edc:desc="Peripheral clock/512" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_1024" edc:desc="Peripheral clock/1024" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="CLKA" edc:desc="Clock A" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="CLKB" edc:desc="Clock B" edc:when="(field &amp; 0xF) == 0x0C"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CALG" edc:nzwidth="0x1" edc:desc="Channel Alignment">
              <edc:SFRFieldSemantic edc:cname="LEFT_ALIGNED" edc:desc="Left aligned" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="CENTER_ALIGNED" edc:desc="Center aligned" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Channel Polarity">
              <edc:SFRFieldSemantic edc:cname="LOW_POLARITY" edc:desc="Waveform starts at low level" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="HIGH_POLARITY" edc:desc="Waveform starts at high level" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CES" edc:nzwidth="0x1" edc:desc="Counter Event Selection">
              <edc:SFRFieldSemantic edc:cname="SINGLE_EVENT" edc:desc="At the end of PWM period" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DOUBLE_EVENT" edc:desc="At half of PWM period AND at the end of PWM period" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="UPDS" edc:nzwidth="0x1" edc:desc="Update Selection">
              <edc:SFRFieldSemantic edc:cname="UPDATE_AT_PERIOD" edc:desc="At the next end of PWM period" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE_AT_HALF_PERIOD" edc:desc="At the next end of Half PWM period" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DPOLI" edc:nzwidth="0x1" edc:desc="Disabled Polarity Inverted"/>
            <edc:SFRFieldDef edc:cname="TCTS" edc:nzwidth="0x1" edc:desc="Timer Counter Trigger Selection"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DTE" edc:nzwidth="0x1" edc:desc="Dead-Time Generator Enable"/>
            <edc:SFRFieldDef edc:cname="DTHI" edc:nzwidth="0x1" edc:desc="Dead-Time PWMHx Output Inverted"/>
            <edc:SFRFieldDef edc:cname="DTLI" edc:nzwidth="0x1" edc:desc="Dead-Time PWMLx Output Inverted"/>
            <edc:SFRFieldDef edc:cname="PPM" edc:nzwidth="0x1" edc:desc="Push-Pull Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CH_NUM1PWM_CDTY" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:impl="0xFFFFFF" edc:_addr="0x4801C224">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CDTY" edc:nzwidth="0x18" edc:desc="Channel Duty-Cycle"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CH_NUM1PWM_CDTYUPD" edc:nzwidth="0x20" edc:access="--------wwwwwwwwwwwwwwwwwwwwwwww" edc:impl="0xFFFFFF" edc:_addr="0x4801C228">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CDTYUPD" edc:nzwidth="0x18" edc:desc="Channel Duty-Cycle Update"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CH_NUM1PWM_CPRD" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:impl="0xFFFFFF" edc:_addr="0x4801C22C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CPRD" edc:nzwidth="0x18" edc:desc="Channel Period"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CH_NUM1PWM_CPRDUPD" edc:nzwidth="0x20" edc:access="--------wwwwwwwwwwwwwwwwwwwwwwww" edc:impl="0xFFFFFF" edc:_addr="0x4801C230">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CPRDUPD" edc:nzwidth="0x18" edc:desc="Channel Period Update"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CH_NUM1PWM_CCNT" edc:nzwidth="0x20" edc:access="--------rrrrrrrrrrrrrrrrrrrrrrrr" edc:impl="0xFFFFFF" edc:_addr="0x4801C234">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CNT" edc:nzwidth="0x18" edc:desc="Channel Counter Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CH_NUM1PWM_DT" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4801C238">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="DTH" edc:nzwidth="0x10" edc:desc="Dead-Time Value for PWMHx Output"/>
            <edc:SFRFieldDef edc:cname="DTL" edc:nzwidth="0x10" edc:desc="Dead-Time Value for PWMLx Output"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CH_NUM1PWM_DTUPD" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4801C23C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="DTHUPD" edc:nzwidth="0x10" edc:desc="Dead-Time Value Update for PWMHx Output"/>
            <edc:SFRFieldDef edc:cname="DTLUPD" edc:nzwidth="0x10" edc:desc="Dead-Time Value Update for PWMLx Output"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CH_NUM2PWM_CMR" edc:nzwidth="0x20" edc:access="------------nnnn--nnnnnn----nnnn" edc:impl="0xF3F0F" edc:_addr="0x4801C240">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CPRE" edc:nzwidth="0x4" edc:desc="Channel Prescaler">
              <edc:SFRFieldSemantic edc:cname="MCK" edc:desc="Peripheral clock" edc:when="(field &amp; 0xF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_2" edc:desc="Peripheral clock/2" edc:when="(field &amp; 0xF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_4" edc:desc="Peripheral clock/4" edc:when="(field &amp; 0xF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_8" edc:desc="Peripheral clock/8" edc:when="(field &amp; 0xF) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_16" edc:desc="Peripheral clock/16" edc:when="(field &amp; 0xF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_32" edc:desc="Peripheral clock/32" edc:when="(field &amp; 0xF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_64" edc:desc="Peripheral clock/64" edc:when="(field &amp; 0xF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_128" edc:desc="Peripheral clock/128" edc:when="(field &amp; 0xF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_256" edc:desc="Peripheral clock/256" edc:when="(field &amp; 0xF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_512" edc:desc="Peripheral clock/512" edc:when="(field &amp; 0xF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_1024" edc:desc="Peripheral clock/1024" edc:when="(field &amp; 0xF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="CLKA" edc:desc="Clock A" edc:when="(field &amp; 0xF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="CLKB" edc:desc="Clock B" edc:when="(field &amp; 0xF) == 0x0C"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CALG" edc:nzwidth="0x1" edc:desc="Channel Alignment">
              <edc:SFRFieldSemantic edc:cname="LEFT_ALIGNED" edc:desc="Left aligned" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="CENTER_ALIGNED" edc:desc="Center aligned" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Channel Polarity">
              <edc:SFRFieldSemantic edc:cname="LOW_POLARITY" edc:desc="Waveform starts at low level" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="HIGH_POLARITY" edc:desc="Waveform starts at high level" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CES" edc:nzwidth="0x1" edc:desc="Counter Event Selection">
              <edc:SFRFieldSemantic edc:cname="SINGLE_EVENT" edc:desc="At the end of PWM period" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DOUBLE_EVENT" edc:desc="At half of PWM period AND at the end of PWM period" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="UPDS" edc:nzwidth="0x1" edc:desc="Update Selection">
              <edc:SFRFieldSemantic edc:cname="UPDATE_AT_PERIOD" edc:desc="At the next end of PWM period" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE_AT_HALF_PERIOD" edc:desc="At the next end of Half PWM period" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DPOLI" edc:nzwidth="0x1" edc:desc="Disabled Polarity Inverted"/>
            <edc:SFRFieldDef edc:cname="TCTS" edc:nzwidth="0x1" edc:desc="Timer Counter Trigger Selection"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DTE" edc:nzwidth="0x1" edc:desc="Dead-Time Generator Enable"/>
            <edc:SFRFieldDef edc:cname="DTHI" edc:nzwidth="0x1" edc:desc="Dead-Time PWMHx Output Inverted"/>
            <edc:SFRFieldDef edc:cname="DTLI" edc:nzwidth="0x1" edc:desc="Dead-Time PWMLx Output Inverted"/>
            <edc:SFRFieldDef edc:cname="PPM" edc:nzwidth="0x1" edc:desc="Push-Pull Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CH_NUM2PWM_CDTY" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:impl="0xFFFFFF" edc:_addr="0x4801C244">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CDTY" edc:nzwidth="0x18" edc:desc="Channel Duty-Cycle"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CH_NUM2PWM_CDTYUPD" edc:nzwidth="0x20" edc:access="--------wwwwwwwwwwwwwwwwwwwwwwww" edc:impl="0xFFFFFF" edc:_addr="0x4801C248">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CDTYUPD" edc:nzwidth="0x18" edc:desc="Channel Duty-Cycle Update"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CH_NUM2PWM_CPRD" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:impl="0xFFFFFF" edc:_addr="0x4801C24C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CPRD" edc:nzwidth="0x18" edc:desc="Channel Period"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CH_NUM2PWM_CPRDUPD" edc:nzwidth="0x20" edc:access="--------wwwwwwwwwwwwwwwwwwwwwwww" edc:impl="0xFFFFFF" edc:_addr="0x4801C250">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CPRDUPD" edc:nzwidth="0x18" edc:desc="Channel Period Update"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CH_NUM2PWM_CCNT" edc:nzwidth="0x20" edc:access="--------rrrrrrrrrrrrrrrrrrrrrrrr" edc:impl="0xFFFFFF" edc:_addr="0x4801C254">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="CNT" edc:nzwidth="0x18" edc:desc="Channel Counter Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CH_NUM2PWM_DT" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4801C258">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="DTH" edc:nzwidth="0x10" edc:desc="Dead-Time Value for PWMHx Output"/>
            <edc:SFRFieldDef edc:cname="DTL" edc:nzwidth="0x10" edc:desc="Dead-Time Value for PWMLx Output"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CH_NUM2PWM_DTUPD" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x4801C25C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="DTHUPD" edc:nzwidth="0x10" edc:desc="Dead-Time Value Update for PWMHx Output"/>
            <edc:SFRFieldDef edc:cname="DTLUPD" edc:nzwidth="0x10" edc:desc="Dead-Time Value Update for PWMLx Output"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1A0" edc:_addr="0x4801C260"/>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CMUPD0" edc:nzwidth="0x20" edc:access="------------------w---w---------" edc:impl="0x2200" edc:_addr="0x4801C400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="CPOLUP" edc:nzwidth="0x1" edc:desc="Channel Polarity Update"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CPOLINVUP" edc:nzwidth="0x1" edc:desc="Channel Polarity Inversion Update"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1C" edc:_addr="0x4801C404"/>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CMUPD1" edc:nzwidth="0x20" edc:access="------------------w---w---------" edc:impl="0x2200" edc:_addr="0x4801C420">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="CPOLUP" edc:nzwidth="0x1" edc:desc="Channel Polarity Update"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CPOLINVUP" edc:nzwidth="0x1" edc:desc="Channel Polarity Inversion Update"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x4801C424"/>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_ETRG1" edc:nzwidth="0x20" edc:access="nnnn--nnnnnnnnnnnnnnnnnnnnnnnnnn" edc:impl="0xF3FFFFFF" edc:_addr="0x4801C42C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="MAXCNT" edc:nzwidth="0x18" edc:desc="Maximum Counter value"/>
            <edc:SFRFieldDef edc:cname="TRGMODE" edc:nzwidth="0x2" edc:desc="External Trigger Mode">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="External trigger is not enabled." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="MODE1" edc:desc="External PWM Reset Mode" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="MODE2" edc:desc="External PWM Start Mode" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="MODE3" edc:desc="Cycle-by-cycle Duty Mode" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TRGEDGE" edc:nzwidth="0x1" edc:desc="Edge Selection">
              <edc:SFRFieldSemantic edc:cname="FALLING_ZERO" edc:desc="TRGMODE = 1: TRGINx event detection on falling edge. TRGMODE = 2, 3: TRGINx active level is 0" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING_ONE" edc:desc="TRGMODE = 1: TRGINx event detection on rising edge. TRGMODE = 2, 3: TRGINx active level is 1" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TRGFILT" edc:nzwidth="0x1" edc:desc="Filtered input"/>
            <edc:SFRFieldDef edc:cname="TRGSRC" edc:nzwidth="0x1" edc:desc="Trigger Source"/>
            <edc:SFRFieldDef edc:cname="RFEN" edc:nzwidth="0x1" edc:desc="Recoverable Fault Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_LEBR1" edc:nzwidth="0x20" edc:access="------------nnnn---------nnnnnnn" edc:impl="0xF007F" edc:_addr="0x4801C430">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="LEBDELAY" edc:nzwidth="0x7" edc:desc="Leading-Edge Blanking Delay for TRGINx"/>
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="PWMLFEN" edc:nzwidth="0x1" edc:desc="PWML Falling Edge Enable"/>
            <edc:SFRFieldDef edc:cname="PWMLREN" edc:nzwidth="0x1" edc:desc="PWML Rising Edge Enable"/>
            <edc:SFRFieldDef edc:cname="PWMHFEN" edc:nzwidth="0x1" edc:desc="PWMH Falling Edge Enable"/>
            <edc:SFRFieldDef edc:cname="PWMHREN" edc:nzwidth="0x1" edc:desc="PWMH Rising Edge Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x4801C434"/>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_CMUPD2" edc:nzwidth="0x20" edc:access="------------------w---w---------" edc:impl="0x2200" edc:_addr="0x4801C440">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="CPOLUP" edc:nzwidth="0x1" edc:desc="Channel Polarity Update"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CPOLINVUP" edc:nzwidth="0x1" edc:desc="Channel Polarity Inversion Update"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x4801C444"/>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_ETRG2" edc:nzwidth="0x20" edc:access="nnnn--nnnnnnnnnnnnnnnnnnnnnnnnnn" edc:impl="0xF3FFFFFF" edc:_addr="0x4801C44C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="MAXCNT" edc:nzwidth="0x18" edc:desc="Maximum Counter value"/>
            <edc:SFRFieldDef edc:cname="TRGMODE" edc:nzwidth="0x2" edc:desc="External Trigger Mode">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="External trigger is not enabled." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="MODE1" edc:desc="External PWM Reset Mode" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="MODE2" edc:desc="External PWM Start Mode" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="MODE3" edc:desc="Cycle-by-cycle Duty Mode" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TRGEDGE" edc:nzwidth="0x1" edc:desc="Edge Selection">
              <edc:SFRFieldSemantic edc:cname="FALLING_ZERO" edc:desc="TRGMODE = 1: TRGINx event detection on falling edge. TRGMODE = 2, 3: TRGINx active level is 0" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="RISING_ONE" edc:desc="TRGMODE = 1: TRGINx event detection on rising edge. TRGMODE = 2, 3: TRGINx active level is 1" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TRGFILT" edc:nzwidth="0x1" edc:desc="Filtered input"/>
            <edc:SFRFieldDef edc:cname="TRGSRC" edc:nzwidth="0x1" edc:desc="Trigger Source"/>
            <edc:SFRFieldDef edc:cname="RFEN" edc:nzwidth="0x1" edc:desc="Recoverable Fault Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PWM" edc:cname="PWM_LEBR2" edc:nzwidth="0x20" edc:access="------------nnnn---------nnnnnnn" edc:impl="0xF007F" edc:_addr="0x4801C450">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM">
            <edc:SFRFieldDef edc:cname="LEBDELAY" edc:nzwidth="0x7" edc:desc="Leading-Edge Blanking Delay for TRGINx"/>
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="PWMLFEN" edc:nzwidth="0x1" edc:desc="PWML Falling Edge Enable"/>
            <edc:SFRFieldDef edc:cname="PWMLREN" edc:nzwidth="0x1" edc:desc="PWML Rising Edge Enable"/>
            <edc:SFRFieldDef edc:cname="PWMHFEN" edc:nzwidth="0x1" edc:desc="PWMH Falling Edge Enable"/>
            <edc:SFRFieldDef edc:cname="PWMHREN" edc:nzwidth="0x1" edc:desc="PWMH Rising Edge Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3BAC" edc:_addr="0x4801C454"/>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_MCFG0" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0x48020000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next system bus 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_MCFG1" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0x48020004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next system bus 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_MCFG2" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0x48020008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next system bus 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_MCFG3" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0x4802000C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next system bus 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_MCFG4" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0x48020010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next system bus 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_MCFG5" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0x48020014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next system bus 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_MCFG6" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0x48020018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next system bus 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_MCFG7" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0x4802001C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next system bus 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_MCFG8" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0x48020020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next system bus 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_MCFG9" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0x48020024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next system bus 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_MCFG10" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0x48020028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next system bus 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_MCFG11" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0x4802002C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next system bus 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_MCFG12" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0x48020030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next system bus 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_MCFG13" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0x48020034">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next system bus 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_MCFG14" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0x48020038">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next system bus 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_MCFG15" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0x4802003C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next system bus 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_SCFG0" edc:nzwidth="0x20" edc:access="----------nnnnnn-------nnnnnnnnn" edc:impl="0x3F01FF" edc:_addr="0x48020040">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x9" edc:desc="Maximum Bus Grant Duration for Masters"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Default Master"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_SCFG1" edc:nzwidth="0x20" edc:access="----------nnnnnn-------nnnnnnnnn" edc:impl="0x3F01FF" edc:_addr="0x48020044">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x9" edc:desc="Maximum Bus Grant Duration for Masters"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Default Master"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_SCFG2" edc:nzwidth="0x20" edc:access="----------nnnnnn-------nnnnnnnnn" edc:impl="0x3F01FF" edc:_addr="0x48020048">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x9" edc:desc="Maximum Bus Grant Duration for Masters"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Default Master"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_SCFG3" edc:nzwidth="0x20" edc:access="----------nnnnnn-------nnnnnnnnn" edc:impl="0x3F01FF" edc:_addr="0x4802004C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x9" edc:desc="Maximum Bus Grant Duration for Masters"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Default Master"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_SCFG4" edc:nzwidth="0x20" edc:access="----------nnnnnn-------nnnnnnnnn" edc:impl="0x3F01FF" edc:_addr="0x48020050">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x9" edc:desc="Maximum Bus Grant Duration for Masters"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Default Master"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_SCFG5" edc:nzwidth="0x20" edc:access="----------nnnnnn-------nnnnnnnnn" edc:impl="0x3F01FF" edc:_addr="0x48020054">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x9" edc:desc="Maximum Bus Grant Duration for Masters"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Default Master"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_SCFG6" edc:nzwidth="0x20" edc:access="----------nnnnnn-------nnnnnnnnn" edc:impl="0x3F01FF" edc:_addr="0x48020058">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x9" edc:desc="Maximum Bus Grant Duration for Masters"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Default Master"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_SCFG7" edc:nzwidth="0x20" edc:access="----------nnnnnn-------nnnnnnnnn" edc:impl="0x3F01FF" edc:_addr="0x4802005C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x9" edc:desc="Maximum Bus Grant Duration for Masters"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Default Master"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_SCFG8" edc:nzwidth="0x20" edc:access="----------nnnnnn-------nnnnnnnnn" edc:impl="0x3F01FF" edc:_addr="0x48020060">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x9" edc:desc="Maximum Bus Grant Duration for Masters"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Default Master"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_SCFG9" edc:nzwidth="0x20" edc:access="----------nnnnnn-------nnnnnnnnn" edc:impl="0x3F01FF" edc:_addr="0x48020064">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x9" edc:desc="Maximum Bus Grant Duration for Masters"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Default Master"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_SCFG10" edc:nzwidth="0x20" edc:access="----------nnnnnn-------nnnnnnnnn" edc:impl="0x3F01FF" edc:_addr="0x48020068">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x9" edc:desc="Maximum Bus Grant Duration for Masters"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Default Master"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_SCFG11" edc:nzwidth="0x20" edc:access="----------nnnnnn-------nnnnnnnnn" edc:impl="0x3F01FF" edc:_addr="0x4802006C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x9" edc:desc="Maximum Bus Grant Duration for Masters"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Default Master"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_SCFG12" edc:nzwidth="0x20" edc:access="----------nnnnnn-------nnnnnnnnn" edc:impl="0x3F01FF" edc:_addr="0x48020070">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x9" edc:desc="Maximum Bus Grant Duration for Masters"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Default Master"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_SCFG13" edc:nzwidth="0x20" edc:access="----------nnnnnn-------nnnnnnnnn" edc:impl="0x3F01FF" edc:_addr="0x48020074">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x9" edc:desc="Maximum Bus Grant Duration for Masters"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Default Master"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_SCFG14" edc:nzwidth="0x20" edc:access="----------nnnnnn-------nnnnnnnnn" edc:impl="0x3F01FF" edc:_addr="0x48020078">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x9" edc:desc="Maximum Bus Grant Duration for Masters"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Default Master"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_SCFG15" edc:nzwidth="0x20" edc:access="----------nnnnnn-------nnnnnnnnn" edc:impl="0x3F01FF" edc:_addr="0x4802007C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x9" edc:desc="Maximum Bus Grant Duration for Masters"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Default Master"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX_PR0MATRIX3_PRAS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x48020080">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="M0PR" edc:nzwidth="0x2" edc:desc="Master 0 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:nzwidth="0x2" edc:desc="Master 1 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:nzwidth="0x2" edc:desc="Master 2 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:nzwidth="0x2" edc:desc="Master 3 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:nzwidth="0x2" edc:desc="Master 4 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:nzwidth="0x2" edc:desc="Master 5 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 5"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:nzwidth="0x2" edc:desc="Master 6 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 6"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:nzwidth="0x2" edc:desc="Master 7 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX_PR0MATRIX3_PRBS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x48020084">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="M8PR" edc:nzwidth="0x2" edc:desc="Master 8 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 8"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:nzwidth="0x2" edc:desc="Master 9 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 9"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:nzwidth="0x2" edc:desc="Master 10 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 10"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:nzwidth="0x2" edc:desc="Master 11 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 11"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:nzwidth="0x2" edc:desc="Master 12 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 12"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:nzwidth="0x2" edc:desc="Master 13 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 13"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:nzwidth="0x2" edc:desc="Master 14 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 14"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:nzwidth="0x2" edc:desc="Master 15 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX_PR1MATRIX3_PRAS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x48020088">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="M0PR" edc:nzwidth="0x2" edc:desc="Master 0 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:nzwidth="0x2" edc:desc="Master 1 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:nzwidth="0x2" edc:desc="Master 2 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:nzwidth="0x2" edc:desc="Master 3 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:nzwidth="0x2" edc:desc="Master 4 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:nzwidth="0x2" edc:desc="Master 5 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 5"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:nzwidth="0x2" edc:desc="Master 6 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 6"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:nzwidth="0x2" edc:desc="Master 7 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX_PR1MATRIX3_PRBS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x4802008C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="M8PR" edc:nzwidth="0x2" edc:desc="Master 8 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 8"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:nzwidth="0x2" edc:desc="Master 9 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 9"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:nzwidth="0x2" edc:desc="Master 10 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 10"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:nzwidth="0x2" edc:desc="Master 11 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 11"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:nzwidth="0x2" edc:desc="Master 12 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 12"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:nzwidth="0x2" edc:desc="Master 13 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 13"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:nzwidth="0x2" edc:desc="Master 14 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 14"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:nzwidth="0x2" edc:desc="Master 15 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX_PR2MATRIX3_PRAS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x48020090">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="M0PR" edc:nzwidth="0x2" edc:desc="Master 0 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:nzwidth="0x2" edc:desc="Master 1 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:nzwidth="0x2" edc:desc="Master 2 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:nzwidth="0x2" edc:desc="Master 3 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:nzwidth="0x2" edc:desc="Master 4 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:nzwidth="0x2" edc:desc="Master 5 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 5"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:nzwidth="0x2" edc:desc="Master 6 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 6"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:nzwidth="0x2" edc:desc="Master 7 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX_PR2MATRIX3_PRBS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x48020094">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="M8PR" edc:nzwidth="0x2" edc:desc="Master 8 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 8"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:nzwidth="0x2" edc:desc="Master 9 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 9"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:nzwidth="0x2" edc:desc="Master 10 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 10"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:nzwidth="0x2" edc:desc="Master 11 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 11"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:nzwidth="0x2" edc:desc="Master 12 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 12"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:nzwidth="0x2" edc:desc="Master 13 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 13"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:nzwidth="0x2" edc:desc="Master 14 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 14"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:nzwidth="0x2" edc:desc="Master 15 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX_PR3MATRIX3_PRAS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x48020098">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="M0PR" edc:nzwidth="0x2" edc:desc="Master 0 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:nzwidth="0x2" edc:desc="Master 1 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:nzwidth="0x2" edc:desc="Master 2 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:nzwidth="0x2" edc:desc="Master 3 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:nzwidth="0x2" edc:desc="Master 4 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:nzwidth="0x2" edc:desc="Master 5 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 5"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:nzwidth="0x2" edc:desc="Master 6 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 6"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:nzwidth="0x2" edc:desc="Master 7 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX_PR3MATRIX3_PRBS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x4802009C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="M8PR" edc:nzwidth="0x2" edc:desc="Master 8 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 8"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:nzwidth="0x2" edc:desc="Master 9 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 9"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:nzwidth="0x2" edc:desc="Master 10 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 10"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:nzwidth="0x2" edc:desc="Master 11 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 11"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:nzwidth="0x2" edc:desc="Master 12 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 12"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:nzwidth="0x2" edc:desc="Master 13 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 13"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:nzwidth="0x2" edc:desc="Master 14 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 14"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:nzwidth="0x2" edc:desc="Master 15 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX_PR4MATRIX3_PRAS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x480200A0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="M0PR" edc:nzwidth="0x2" edc:desc="Master 0 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:nzwidth="0x2" edc:desc="Master 1 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:nzwidth="0x2" edc:desc="Master 2 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:nzwidth="0x2" edc:desc="Master 3 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:nzwidth="0x2" edc:desc="Master 4 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:nzwidth="0x2" edc:desc="Master 5 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 5"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:nzwidth="0x2" edc:desc="Master 6 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 6"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:nzwidth="0x2" edc:desc="Master 7 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX_PR4MATRIX3_PRBS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x480200A4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="M8PR" edc:nzwidth="0x2" edc:desc="Master 8 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 8"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:nzwidth="0x2" edc:desc="Master 9 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 9"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:nzwidth="0x2" edc:desc="Master 10 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 10"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:nzwidth="0x2" edc:desc="Master 11 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 11"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:nzwidth="0x2" edc:desc="Master 12 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 12"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:nzwidth="0x2" edc:desc="Master 13 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 13"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:nzwidth="0x2" edc:desc="Master 14 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 14"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:nzwidth="0x2" edc:desc="Master 15 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX_PR5MATRIX3_PRAS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x480200A8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="M0PR" edc:nzwidth="0x2" edc:desc="Master 0 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:nzwidth="0x2" edc:desc="Master 1 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:nzwidth="0x2" edc:desc="Master 2 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:nzwidth="0x2" edc:desc="Master 3 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:nzwidth="0x2" edc:desc="Master 4 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:nzwidth="0x2" edc:desc="Master 5 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 5"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:nzwidth="0x2" edc:desc="Master 6 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 6"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:nzwidth="0x2" edc:desc="Master 7 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX_PR5MATRIX3_PRBS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x480200AC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="M8PR" edc:nzwidth="0x2" edc:desc="Master 8 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 8"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:nzwidth="0x2" edc:desc="Master 9 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 9"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:nzwidth="0x2" edc:desc="Master 10 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 10"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:nzwidth="0x2" edc:desc="Master 11 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 11"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:nzwidth="0x2" edc:desc="Master 12 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 12"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:nzwidth="0x2" edc:desc="Master 13 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 13"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:nzwidth="0x2" edc:desc="Master 14 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 14"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:nzwidth="0x2" edc:desc="Master 15 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX_PR6MATRIX3_PRAS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x480200B0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="M0PR" edc:nzwidth="0x2" edc:desc="Master 0 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:nzwidth="0x2" edc:desc="Master 1 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:nzwidth="0x2" edc:desc="Master 2 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:nzwidth="0x2" edc:desc="Master 3 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:nzwidth="0x2" edc:desc="Master 4 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:nzwidth="0x2" edc:desc="Master 5 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 5"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:nzwidth="0x2" edc:desc="Master 6 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 6"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:nzwidth="0x2" edc:desc="Master 7 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX_PR6MATRIX3_PRBS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x480200B4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="M8PR" edc:nzwidth="0x2" edc:desc="Master 8 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 8"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:nzwidth="0x2" edc:desc="Master 9 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 9"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:nzwidth="0x2" edc:desc="Master 10 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 10"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:nzwidth="0x2" edc:desc="Master 11 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 11"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:nzwidth="0x2" edc:desc="Master 12 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 12"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:nzwidth="0x2" edc:desc="Master 13 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 13"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:nzwidth="0x2" edc:desc="Master 14 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 14"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:nzwidth="0x2" edc:desc="Master 15 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX_PR7MATRIX3_PRAS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x480200B8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="M0PR" edc:nzwidth="0x2" edc:desc="Master 0 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:nzwidth="0x2" edc:desc="Master 1 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:nzwidth="0x2" edc:desc="Master 2 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:nzwidth="0x2" edc:desc="Master 3 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:nzwidth="0x2" edc:desc="Master 4 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:nzwidth="0x2" edc:desc="Master 5 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 5"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:nzwidth="0x2" edc:desc="Master 6 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 6"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:nzwidth="0x2" edc:desc="Master 7 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX_PR7MATRIX3_PRBS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x480200BC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="M8PR" edc:nzwidth="0x2" edc:desc="Master 8 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 8"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:nzwidth="0x2" edc:desc="Master 9 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 9"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:nzwidth="0x2" edc:desc="Master 10 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 10"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:nzwidth="0x2" edc:desc="Master 11 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 11"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:nzwidth="0x2" edc:desc="Master 12 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 12"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:nzwidth="0x2" edc:desc="Master 13 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 13"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:nzwidth="0x2" edc:desc="Master 14 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 14"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:nzwidth="0x2" edc:desc="Master 15 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX_PR8MATRIX3_PRAS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x480200C0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="M0PR" edc:nzwidth="0x2" edc:desc="Master 0 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:nzwidth="0x2" edc:desc="Master 1 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:nzwidth="0x2" edc:desc="Master 2 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:nzwidth="0x2" edc:desc="Master 3 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:nzwidth="0x2" edc:desc="Master 4 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:nzwidth="0x2" edc:desc="Master 5 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 5"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:nzwidth="0x2" edc:desc="Master 6 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 6"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:nzwidth="0x2" edc:desc="Master 7 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX_PR8MATRIX3_PRBS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x480200C4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="M8PR" edc:nzwidth="0x2" edc:desc="Master 8 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 8"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:nzwidth="0x2" edc:desc="Master 9 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 9"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:nzwidth="0x2" edc:desc="Master 10 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 10"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:nzwidth="0x2" edc:desc="Master 11 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 11"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:nzwidth="0x2" edc:desc="Master 12 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 12"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:nzwidth="0x2" edc:desc="Master 13 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 13"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:nzwidth="0x2" edc:desc="Master 14 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 14"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:nzwidth="0x2" edc:desc="Master 15 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX_PR9MATRIX3_PRAS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x480200C8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="M0PR" edc:nzwidth="0x2" edc:desc="Master 0 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:nzwidth="0x2" edc:desc="Master 1 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:nzwidth="0x2" edc:desc="Master 2 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:nzwidth="0x2" edc:desc="Master 3 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:nzwidth="0x2" edc:desc="Master 4 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:nzwidth="0x2" edc:desc="Master 5 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 5"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:nzwidth="0x2" edc:desc="Master 6 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 6"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:nzwidth="0x2" edc:desc="Master 7 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX_PR9MATRIX3_PRBS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x480200CC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="M8PR" edc:nzwidth="0x2" edc:desc="Master 8 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 8"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:nzwidth="0x2" edc:desc="Master 9 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 9"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:nzwidth="0x2" edc:desc="Master 10 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 10"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:nzwidth="0x2" edc:desc="Master 11 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 11"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:nzwidth="0x2" edc:desc="Master 12 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 12"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:nzwidth="0x2" edc:desc="Master 13 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 13"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:nzwidth="0x2" edc:desc="Master 14 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 14"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:nzwidth="0x2" edc:desc="Master 15 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX_PR10MATRIX3_PRAS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x480200D0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="M0PR" edc:nzwidth="0x2" edc:desc="Master 0 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:nzwidth="0x2" edc:desc="Master 1 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:nzwidth="0x2" edc:desc="Master 2 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:nzwidth="0x2" edc:desc="Master 3 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:nzwidth="0x2" edc:desc="Master 4 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:nzwidth="0x2" edc:desc="Master 5 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 5"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:nzwidth="0x2" edc:desc="Master 6 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 6"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:nzwidth="0x2" edc:desc="Master 7 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX_PR10MATRIX3_PRBS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x480200D4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="M8PR" edc:nzwidth="0x2" edc:desc="Master 8 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 8"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:nzwidth="0x2" edc:desc="Master 9 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 9"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:nzwidth="0x2" edc:desc="Master 10 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 10"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:nzwidth="0x2" edc:desc="Master 11 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 11"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:nzwidth="0x2" edc:desc="Master 12 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 12"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:nzwidth="0x2" edc:desc="Master 13 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 13"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:nzwidth="0x2" edc:desc="Master 14 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 14"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:nzwidth="0x2" edc:desc="Master 15 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX_PR11MATRIX3_PRAS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x480200D8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="M0PR" edc:nzwidth="0x2" edc:desc="Master 0 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:nzwidth="0x2" edc:desc="Master 1 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:nzwidth="0x2" edc:desc="Master 2 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:nzwidth="0x2" edc:desc="Master 3 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:nzwidth="0x2" edc:desc="Master 4 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:nzwidth="0x2" edc:desc="Master 5 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 5"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:nzwidth="0x2" edc:desc="Master 6 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 6"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:nzwidth="0x2" edc:desc="Master 7 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX_PR11MATRIX3_PRBS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x480200DC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="M8PR" edc:nzwidth="0x2" edc:desc="Master 8 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 8"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:nzwidth="0x2" edc:desc="Master 9 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 9"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:nzwidth="0x2" edc:desc="Master 10 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 10"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:nzwidth="0x2" edc:desc="Master 11 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 11"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:nzwidth="0x2" edc:desc="Master 12 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 12"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:nzwidth="0x2" edc:desc="Master 13 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 13"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:nzwidth="0x2" edc:desc="Master 14 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 14"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:nzwidth="0x2" edc:desc="Master 15 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX_PR12MATRIX3_PRAS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x480200E0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="M0PR" edc:nzwidth="0x2" edc:desc="Master 0 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:nzwidth="0x2" edc:desc="Master 1 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:nzwidth="0x2" edc:desc="Master 2 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:nzwidth="0x2" edc:desc="Master 3 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:nzwidth="0x2" edc:desc="Master 4 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:nzwidth="0x2" edc:desc="Master 5 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 5"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:nzwidth="0x2" edc:desc="Master 6 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 6"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:nzwidth="0x2" edc:desc="Master 7 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX_PR12MATRIX3_PRBS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x480200E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="M8PR" edc:nzwidth="0x2" edc:desc="Master 8 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 8"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:nzwidth="0x2" edc:desc="Master 9 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 9"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:nzwidth="0x2" edc:desc="Master 10 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 10"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:nzwidth="0x2" edc:desc="Master 11 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 11"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:nzwidth="0x2" edc:desc="Master 12 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 12"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:nzwidth="0x2" edc:desc="Master 13 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 13"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:nzwidth="0x2" edc:desc="Master 14 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 14"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:nzwidth="0x2" edc:desc="Master 15 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX_PR13MATRIX3_PRAS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x480200E8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="M0PR" edc:nzwidth="0x2" edc:desc="Master 0 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:nzwidth="0x2" edc:desc="Master 1 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:nzwidth="0x2" edc:desc="Master 2 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:nzwidth="0x2" edc:desc="Master 3 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:nzwidth="0x2" edc:desc="Master 4 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:nzwidth="0x2" edc:desc="Master 5 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 5"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:nzwidth="0x2" edc:desc="Master 6 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 6"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:nzwidth="0x2" edc:desc="Master 7 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX_PR13MATRIX3_PRBS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x480200EC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="M8PR" edc:nzwidth="0x2" edc:desc="Master 8 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 8"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:nzwidth="0x2" edc:desc="Master 9 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 9"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:nzwidth="0x2" edc:desc="Master 10 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 10"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:nzwidth="0x2" edc:desc="Master 11 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 11"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:nzwidth="0x2" edc:desc="Master 12 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 12"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:nzwidth="0x2" edc:desc="Master 13 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 13"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:nzwidth="0x2" edc:desc="Master 14 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 14"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:nzwidth="0x2" edc:desc="Master 15 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX_PR14MATRIX3_PRAS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x480200F0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="M0PR" edc:nzwidth="0x2" edc:desc="Master 0 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:nzwidth="0x2" edc:desc="Master 1 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:nzwidth="0x2" edc:desc="Master 2 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:nzwidth="0x2" edc:desc="Master 3 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:nzwidth="0x2" edc:desc="Master 4 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:nzwidth="0x2" edc:desc="Master 5 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 5"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:nzwidth="0x2" edc:desc="Master 6 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 6"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:nzwidth="0x2" edc:desc="Master 7 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX_PR14MATRIX3_PRBS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x480200F4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="M8PR" edc:nzwidth="0x2" edc:desc="Master 8 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 8"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:nzwidth="0x2" edc:desc="Master 9 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 9"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:nzwidth="0x2" edc:desc="Master 10 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 10"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:nzwidth="0x2" edc:desc="Master 11 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 11"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:nzwidth="0x2" edc:desc="Master 12 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 12"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:nzwidth="0x2" edc:desc="Master 13 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 13"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:nzwidth="0x2" edc:desc="Master 14 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 14"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:nzwidth="0x2" edc:desc="Master 15 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX_PR15MATRIX3_PRAS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x480200F8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="M0PR" edc:nzwidth="0x2" edc:desc="Master 0 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:nzwidth="0x2" edc:desc="Master 1 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:nzwidth="0x2" edc:desc="Master 2 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:nzwidth="0x2" edc:desc="Master 3 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:nzwidth="0x2" edc:desc="Master 4 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:nzwidth="0x2" edc:desc="Master 5 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 5"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:nzwidth="0x2" edc:desc="Master 6 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 6"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:nzwidth="0x2" edc:desc="Master 7 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX_PR15MATRIX3_PRBS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x480200FC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="M8PR" edc:nzwidth="0x2" edc:desc="Master 8 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 8"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:nzwidth="0x2" edc:desc="Master 9 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 9"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:nzwidth="0x2" edc:desc="Master 10 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 10"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:nzwidth="0x2" edc:desc="Master 11 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 11"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:nzwidth="0x2" edc:desc="Master 12 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 12"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:nzwidth="0x2" edc:desc="Master 13 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 13"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:nzwidth="0x2" edc:desc="Master 14 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 14"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:nzwidth="0x2" edc:desc="Master 15 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_MRCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x48020100">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="RCB0" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 0"/>
            <edc:SFRFieldDef edc:cname="RCB1" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 1"/>
            <edc:SFRFieldDef edc:cname="RCB2" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 2"/>
            <edc:SFRFieldDef edc:cname="RCB3" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 3"/>
            <edc:SFRFieldDef edc:cname="RCB4" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 4"/>
            <edc:SFRFieldDef edc:cname="RCB5" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 5"/>
            <edc:SFRFieldDef edc:cname="RCB6" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 6"/>
            <edc:SFRFieldDef edc:cname="RCB7" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 7"/>
            <edc:SFRFieldDef edc:cname="RCB8" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 8"/>
            <edc:SFRFieldDef edc:cname="RCB9" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 9"/>
            <edc:SFRFieldDef edc:cname="RCB10" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 10"/>
            <edc:SFRFieldDef edc:cname="RCB11" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 11"/>
            <edc:SFRFieldDef edc:cname="RCB12" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 12"/>
            <edc:SFRFieldDef edc:cname="RCB13" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 13"/>
            <edc:SFRFieldDef edc:cname="RCB14" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 14"/>
            <edc:SFRFieldDef edc:cname="RCB15" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x48020104"/>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_SFR0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48020110">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register Fields"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_SFR1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48020114">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register Fields"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_SFR2" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48020118">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register Fields"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_SFR3" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4802011C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register Fields"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_SFR4" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48020120">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register Fields"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_SFR5" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48020124">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register Fields"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_SFR6" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48020128">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register Fields"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_SFR7" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4802012C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register Fields"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_SFR8" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48020130">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register Fields"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_SFR9" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48020134">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register Fields"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_SFR10" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48020138">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register Fields"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_SFR11" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4802013C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register Fields"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_SFR12" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48020140">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register Fields"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_SFR13" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48020144">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register Fields"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_SFR14" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48020148">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register Fields"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_SFR15" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4802014C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register Fields"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_MEIER" edc:nzwidth="0x20" edc:access="----------------wwwwwwwwwwwwwwww" edc:impl="0xFFFF" edc:_addr="0x48020150">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="MERR0" edc:nzwidth="0x1" edc:desc="Master 0 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR1" edc:nzwidth="0x1" edc:desc="Master 1 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR2" edc:nzwidth="0x1" edc:desc="Master 2 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR3" edc:nzwidth="0x1" edc:desc="Master 3 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR4" edc:nzwidth="0x1" edc:desc="Master 4 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR5" edc:nzwidth="0x1" edc:desc="Master 5 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR6" edc:nzwidth="0x1" edc:desc="Master 6 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR7" edc:nzwidth="0x1" edc:desc="Master 7 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR8" edc:nzwidth="0x1" edc:desc="Master 8 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR9" edc:nzwidth="0x1" edc:desc="Master 9 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR10" edc:nzwidth="0x1" edc:desc="Master 10 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR11" edc:nzwidth="0x1" edc:desc="Master 11 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR12" edc:nzwidth="0x1" edc:desc="Master 12 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR13" edc:nzwidth="0x1" edc:desc="Master 13 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR14" edc:nzwidth="0x1" edc:desc="Master 14 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR15" edc:nzwidth="0x1" edc:desc="Master 15 Access Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_MEIDR" edc:nzwidth="0x20" edc:access="----------------wwwwwwwwwwwwwwww" edc:impl="0xFFFF" edc:_addr="0x48020154">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="MERR0" edc:nzwidth="0x1" edc:desc="Master 0 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR1" edc:nzwidth="0x1" edc:desc="Master 1 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR2" edc:nzwidth="0x1" edc:desc="Master 2 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR3" edc:nzwidth="0x1" edc:desc="Master 3 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR4" edc:nzwidth="0x1" edc:desc="Master 4 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR5" edc:nzwidth="0x1" edc:desc="Master 5 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR6" edc:nzwidth="0x1" edc:desc="Master 6 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR7" edc:nzwidth="0x1" edc:desc="Master 7 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR8" edc:nzwidth="0x1" edc:desc="Master 8 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR9" edc:nzwidth="0x1" edc:desc="Master 9 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR10" edc:nzwidth="0x1" edc:desc="Master 10 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR11" edc:nzwidth="0x1" edc:desc="Master 11 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR12" edc:nzwidth="0x1" edc:desc="Master 12 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR13" edc:nzwidth="0x1" edc:desc="Master 13 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR14" edc:nzwidth="0x1" edc:desc="Master 14 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR15" edc:nzwidth="0x1" edc:desc="Master 15 Access Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_MEIMR" edc:nzwidth="0x20" edc:access="----------------rrrrrrrrrrrrrrrr" edc:impl="0xFFFF" edc:_addr="0x48020158">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="MERR0" edc:nzwidth="0x1" edc:desc="Master 0 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR1" edc:nzwidth="0x1" edc:desc="Master 1 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR2" edc:nzwidth="0x1" edc:desc="Master 2 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR3" edc:nzwidth="0x1" edc:desc="Master 3 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR4" edc:nzwidth="0x1" edc:desc="Master 4 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR5" edc:nzwidth="0x1" edc:desc="Master 5 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR6" edc:nzwidth="0x1" edc:desc="Master 6 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR7" edc:nzwidth="0x1" edc:desc="Master 7 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR8" edc:nzwidth="0x1" edc:desc="Master 8 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR9" edc:nzwidth="0x1" edc:desc="Master 9 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR10" edc:nzwidth="0x1" edc:desc="Master 10 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR11" edc:nzwidth="0x1" edc:desc="Master 11 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR12" edc:nzwidth="0x1" edc:desc="Master 12 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR13" edc:nzwidth="0x1" edc:desc="Master 13 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR14" edc:nzwidth="0x1" edc:desc="Master 14 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR15" edc:nzwidth="0x1" edc:desc="Master 15 Access Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_MESR" edc:nzwidth="0x20" edc:access="----------------rrrrrrrrrrrrrrrr" edc:impl="0xFFFF" edc:_addr="0x4802015C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="MERR0" edc:nzwidth="0x1" edc:desc="Master 0 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR1" edc:nzwidth="0x1" edc:desc="Master 1 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR2" edc:nzwidth="0x1" edc:desc="Master 2 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR3" edc:nzwidth="0x1" edc:desc="Master 3 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR4" edc:nzwidth="0x1" edc:desc="Master 4 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR5" edc:nzwidth="0x1" edc:desc="Master 5 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR6" edc:nzwidth="0x1" edc:desc="Master 6 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR7" edc:nzwidth="0x1" edc:desc="Master 7 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR8" edc:nzwidth="0x1" edc:desc="Master 8 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR9" edc:nzwidth="0x1" edc:desc="Master 9 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR10" edc:nzwidth="0x1" edc:desc="Master 10 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR11" edc:nzwidth="0x1" edc:desc="Master 11 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR12" edc:nzwidth="0x1" edc:desc="Master 12 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR13" edc:nzwidth="0x1" edc:desc="Master 13 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR14" edc:nzwidth="0x1" edc:desc="Master 14 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR15" edc:nzwidth="0x1" edc:desc="Master 15 Access Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_MEAR0" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x48020160">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:nzwidth="0x20" edc:desc="Master Error Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_MEAR1" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x48020164">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:nzwidth="0x20" edc:desc="Master Error Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_MEAR2" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x48020168">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:nzwidth="0x20" edc:desc="Master Error Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_MEAR3" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4802016C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:nzwidth="0x20" edc:desc="Master Error Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_MEAR4" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x48020170">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:nzwidth="0x20" edc:desc="Master Error Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_MEAR5" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x48020174">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:nzwidth="0x20" edc:desc="Master Error Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_MEAR6" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x48020178">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:nzwidth="0x20" edc:desc="Master Error Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_MEAR7" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4802017C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:nzwidth="0x20" edc:desc="Master Error Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_MEAR8" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x48020180">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:nzwidth="0x20" edc:desc="Master Error Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_MEAR9" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x48020184">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:nzwidth="0x20" edc:desc="Master Error Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_MEAR10" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x48020188">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:nzwidth="0x20" edc:desc="Master Error Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_MEAR11" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4802018C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:nzwidth="0x20" edc:desc="Master Error Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_MEAR12" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x48020190">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:nzwidth="0x20" edc:desc="Master Error Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_MEAR13" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x48020194">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:nzwidth="0x20" edc:desc="Master Error Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_MEAR14" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x48020198">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:nzwidth="0x20" edc:desc="Master Error Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_MEAR15" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4802019C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:nzwidth="0x20" edc:desc="Master Error Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x44" edc:_addr="0x480201A0"/>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_WPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnn------n" edc:impl="0xFFFFFF81" edc:_addr="0x480201E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="WPEN" edc:nzwidth="0x1" edc:desc="Write Protection Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="CFGFRZ" edc:nzwidth="0x1" edc:desc="Configuration Freeze"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPEN and CFGFRZ bits. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x4D4154"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_WPSR" edc:nzwidth="0x20" edc:access="--------rrrrrrrrrrrrrrrr-------r" edc:impl="0xFFFF01" edc:_addr="0x480201E8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="WPVS" edc:nzwidth="0x1" edc:desc="Write Protection Violation Status"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:nzwidth="0x10" edc:desc="Write Protection Violation Source"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x10" edc:_addr="0x480201EC"/>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_VERSION" edc:nzwidth="0x20" edc:access="-------------rrr----rrrrrrrrrrrr" edc:impl="0x70FFF" edc:_addr="0x480201FC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="VERSION" edc:nzwidth="0xC" edc:desc="Matrix Version"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="MFN" edc:nzwidth="0x3" edc:desc="Metal Fix Number"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_PSR0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48020200">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_PSR1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48020204">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_PSR2" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48020208">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_PSR3" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4802020C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_PSR4" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48020210">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_PSR5" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48020214">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_PSR6" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48020218">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_PSR7" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4802021C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_PSR8" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48020220">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_PSR9" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48020224">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_PSR10" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48020228">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_PSR11" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4802022C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_PSR12" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48020230">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_PSR13" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48020234">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_PSR14" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48020238">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_PSR15" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4802023C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_PASSR0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48020240">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_PASSR1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48020244">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_PASSR2" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48020248">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_PASSR3" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4802024C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_PASSR4" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48020250">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_PASSR5" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48020254">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_PASSR6" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48020258">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_PASSR7" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4802025C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_PASSR8" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48020260">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_PASSR9" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48020264">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_PASSR10" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48020268">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_PASSR11" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4802026C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_PASSR12" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48020270">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_PASSR13" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48020274">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_PASSR14" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48020278">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_PASSR15" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4802027C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_PRTSR0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48020280">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_PRTSR1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48020284">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_PRTSR2" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48020288">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_PRTSR3" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4802028C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_PRTSR4" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48020290">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_PRTSR5" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48020294">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_PRTSR6" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x48020298">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_PRTSR7" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4802029C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_PRTSR8" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x480202A0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_PRTSR9" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x480202A4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_PRTSR10" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x480202A8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_PRTSR11" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x480202AC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_PRTSR12" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x480202B0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_PRTSR13" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x480202B4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_PRTSR14" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x480202B8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_PRTSR15" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x480202BC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_PPSELR0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x480202C0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="USERP0" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP1" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP2" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP3" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP4" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP5" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP6" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP7" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP8" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP9" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP10" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP11" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP12" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP13" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP14" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP15" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP16" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP17" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP18" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP19" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP20" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP21" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP22" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP23" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP24" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP25" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP26" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP27" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP28" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP29" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP30" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP31" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_PPSELR1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x480202C4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="USERP0" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP1" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP2" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP3" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP4" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP5" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP6" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP7" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP8" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP9" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP10" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP11" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP12" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP13" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP14" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP15" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP16" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP17" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP18" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP19" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP20" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP21" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP22" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP23" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP24" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP25" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP26" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP27" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP28" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP29" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP30" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP31" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX3" edc:cname="MATRIX3_PPSELR2" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x480202C8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX3">
            <edc:SFRFieldDef edc:cname="USERP0" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP1" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP2" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP3" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP4" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP5" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP6" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP7" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP8" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP9" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP10" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP11" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP12" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP13" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP14" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP15" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP16" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP17" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP18" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP19" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP20" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP21" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP22" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP23" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP24" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP25" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP26" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP27" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP28" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP29" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP30" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP31" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1FDFD34" edc:_addr="0x480202CC"/>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_MCFG0" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0x4A000000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next system bus 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_MCFG1" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0x4A000004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next system bus 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_MCFG2" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0x4A000008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next system bus 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_MCFG3" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0x4A00000C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next system bus 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_MCFG4" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0x4A000010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next system bus 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_MCFG5" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0x4A000014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next system bus 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_MCFG6" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0x4A000018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next system bus 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_MCFG7" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0x4A00001C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next system bus 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_MCFG8" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0x4A000020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next system bus 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_MCFG9" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0x4A000024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next system bus 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_MCFG10" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0x4A000028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next system bus 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_MCFG11" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0x4A00002C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next system bus 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_MCFG12" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0x4A000030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next system bus 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_MCFG13" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0x4A000034">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next system bus 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_MCFG14" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0x4A000038">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next system bus 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_MCFG15" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0x4A00003C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next system bus 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_SCFG0" edc:nzwidth="0x20" edc:access="----------nnnnnn-------nnnnnnnnn" edc:impl="0x3F01FF" edc:_addr="0x4A000040">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x9" edc:desc="Maximum Bus Grant Duration for Masters"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Default Master"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_SCFG1" edc:nzwidth="0x20" edc:access="----------nnnnnn-------nnnnnnnnn" edc:impl="0x3F01FF" edc:_addr="0x4A000044">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x9" edc:desc="Maximum Bus Grant Duration for Masters"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Default Master"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_SCFG2" edc:nzwidth="0x20" edc:access="----------nnnnnn-------nnnnnnnnn" edc:impl="0x3F01FF" edc:_addr="0x4A000048">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x9" edc:desc="Maximum Bus Grant Duration for Masters"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Default Master"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_SCFG3" edc:nzwidth="0x20" edc:access="----------nnnnnn-------nnnnnnnnn" edc:impl="0x3F01FF" edc:_addr="0x4A00004C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x9" edc:desc="Maximum Bus Grant Duration for Masters"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Default Master"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_SCFG4" edc:nzwidth="0x20" edc:access="----------nnnnnn-------nnnnnnnnn" edc:impl="0x3F01FF" edc:_addr="0x4A000050">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x9" edc:desc="Maximum Bus Grant Duration for Masters"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Default Master"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_SCFG5" edc:nzwidth="0x20" edc:access="----------nnnnnn-------nnnnnnnnn" edc:impl="0x3F01FF" edc:_addr="0x4A000054">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x9" edc:desc="Maximum Bus Grant Duration for Masters"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Default Master"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_SCFG6" edc:nzwidth="0x20" edc:access="----------nnnnnn-------nnnnnnnnn" edc:impl="0x3F01FF" edc:_addr="0x4A000058">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x9" edc:desc="Maximum Bus Grant Duration for Masters"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Default Master"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_SCFG7" edc:nzwidth="0x20" edc:access="----------nnnnnn-------nnnnnnnnn" edc:impl="0x3F01FF" edc:_addr="0x4A00005C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x9" edc:desc="Maximum Bus Grant Duration for Masters"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Default Master"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_SCFG8" edc:nzwidth="0x20" edc:access="----------nnnnnn-------nnnnnnnnn" edc:impl="0x3F01FF" edc:_addr="0x4A000060">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x9" edc:desc="Maximum Bus Grant Duration for Masters"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Default Master"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_SCFG9" edc:nzwidth="0x20" edc:access="----------nnnnnn-------nnnnnnnnn" edc:impl="0x3F01FF" edc:_addr="0x4A000064">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x9" edc:desc="Maximum Bus Grant Duration for Masters"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Default Master"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_SCFG10" edc:nzwidth="0x20" edc:access="----------nnnnnn-------nnnnnnnnn" edc:impl="0x3F01FF" edc:_addr="0x4A000068">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x9" edc:desc="Maximum Bus Grant Duration for Masters"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Default Master"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_SCFG11" edc:nzwidth="0x20" edc:access="----------nnnnnn-------nnnnnnnnn" edc:impl="0x3F01FF" edc:_addr="0x4A00006C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x9" edc:desc="Maximum Bus Grant Duration for Masters"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Default Master"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_SCFG12" edc:nzwidth="0x20" edc:access="----------nnnnnn-------nnnnnnnnn" edc:impl="0x3F01FF" edc:_addr="0x4A000070">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x9" edc:desc="Maximum Bus Grant Duration for Masters"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Default Master"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_SCFG13" edc:nzwidth="0x20" edc:access="----------nnnnnn-------nnnnnnnnn" edc:impl="0x3F01FF" edc:_addr="0x4A000074">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x9" edc:desc="Maximum Bus Grant Duration for Masters"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Default Master"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_SCFG14" edc:nzwidth="0x20" edc:access="----------nnnnnn-------nnnnnnnnn" edc:impl="0x3F01FF" edc:_addr="0x4A000078">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x9" edc:desc="Maximum Bus Grant Duration for Masters"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Default Master"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_SCFG15" edc:nzwidth="0x20" edc:access="----------nnnnnn-------nnnnnnnnn" edc:impl="0x3F01FF" edc:_addr="0x4A00007C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x9" edc:desc="Maximum Bus Grant Duration for Masters"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x02"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Default Master"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX_PR0MATRIX2_PRAS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x4A000080">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="M0PR" edc:nzwidth="0x2" edc:desc="Master 0 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:nzwidth="0x2" edc:desc="Master 1 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:nzwidth="0x2" edc:desc="Master 2 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:nzwidth="0x2" edc:desc="Master 3 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:nzwidth="0x2" edc:desc="Master 4 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:nzwidth="0x2" edc:desc="Master 5 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 5"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:nzwidth="0x2" edc:desc="Master 6 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 6"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:nzwidth="0x2" edc:desc="Master 7 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX_PR0MATRIX2_PRBS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x4A000084">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="M8PR" edc:nzwidth="0x2" edc:desc="Master 8 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 8"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:nzwidth="0x2" edc:desc="Master 9 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 9"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:nzwidth="0x2" edc:desc="Master 10 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 10"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:nzwidth="0x2" edc:desc="Master 11 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 11"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:nzwidth="0x2" edc:desc="Master 12 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 12"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:nzwidth="0x2" edc:desc="Master 13 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 13"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:nzwidth="0x2" edc:desc="Master 14 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 14"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:nzwidth="0x2" edc:desc="Master 15 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX_PR1MATRIX2_PRAS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x4A000088">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="M0PR" edc:nzwidth="0x2" edc:desc="Master 0 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:nzwidth="0x2" edc:desc="Master 1 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:nzwidth="0x2" edc:desc="Master 2 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:nzwidth="0x2" edc:desc="Master 3 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:nzwidth="0x2" edc:desc="Master 4 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:nzwidth="0x2" edc:desc="Master 5 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 5"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:nzwidth="0x2" edc:desc="Master 6 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 6"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:nzwidth="0x2" edc:desc="Master 7 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX_PR1MATRIX2_PRBS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x4A00008C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="M8PR" edc:nzwidth="0x2" edc:desc="Master 8 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 8"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:nzwidth="0x2" edc:desc="Master 9 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 9"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:nzwidth="0x2" edc:desc="Master 10 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 10"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:nzwidth="0x2" edc:desc="Master 11 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 11"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:nzwidth="0x2" edc:desc="Master 12 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 12"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:nzwidth="0x2" edc:desc="Master 13 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 13"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:nzwidth="0x2" edc:desc="Master 14 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 14"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:nzwidth="0x2" edc:desc="Master 15 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX_PR2MATRIX2_PRAS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x4A000090">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="M0PR" edc:nzwidth="0x2" edc:desc="Master 0 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:nzwidth="0x2" edc:desc="Master 1 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:nzwidth="0x2" edc:desc="Master 2 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:nzwidth="0x2" edc:desc="Master 3 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:nzwidth="0x2" edc:desc="Master 4 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:nzwidth="0x2" edc:desc="Master 5 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 5"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:nzwidth="0x2" edc:desc="Master 6 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 6"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:nzwidth="0x2" edc:desc="Master 7 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX_PR2MATRIX2_PRBS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x4A000094">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="M8PR" edc:nzwidth="0x2" edc:desc="Master 8 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 8"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:nzwidth="0x2" edc:desc="Master 9 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 9"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:nzwidth="0x2" edc:desc="Master 10 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 10"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:nzwidth="0x2" edc:desc="Master 11 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 11"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:nzwidth="0x2" edc:desc="Master 12 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 12"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:nzwidth="0x2" edc:desc="Master 13 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 13"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:nzwidth="0x2" edc:desc="Master 14 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 14"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:nzwidth="0x2" edc:desc="Master 15 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX_PR3MATRIX2_PRAS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x4A000098">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="M0PR" edc:nzwidth="0x2" edc:desc="Master 0 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:nzwidth="0x2" edc:desc="Master 1 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:nzwidth="0x2" edc:desc="Master 2 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:nzwidth="0x2" edc:desc="Master 3 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:nzwidth="0x2" edc:desc="Master 4 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:nzwidth="0x2" edc:desc="Master 5 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 5"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:nzwidth="0x2" edc:desc="Master 6 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 6"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:nzwidth="0x2" edc:desc="Master 7 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX_PR3MATRIX2_PRBS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x4A00009C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="M8PR" edc:nzwidth="0x2" edc:desc="Master 8 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 8"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:nzwidth="0x2" edc:desc="Master 9 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 9"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:nzwidth="0x2" edc:desc="Master 10 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 10"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:nzwidth="0x2" edc:desc="Master 11 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 11"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:nzwidth="0x2" edc:desc="Master 12 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 12"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:nzwidth="0x2" edc:desc="Master 13 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 13"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:nzwidth="0x2" edc:desc="Master 14 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 14"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:nzwidth="0x2" edc:desc="Master 15 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX_PR4MATRIX2_PRAS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x4A0000A0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="M0PR" edc:nzwidth="0x2" edc:desc="Master 0 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:nzwidth="0x2" edc:desc="Master 1 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:nzwidth="0x2" edc:desc="Master 2 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:nzwidth="0x2" edc:desc="Master 3 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:nzwidth="0x2" edc:desc="Master 4 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:nzwidth="0x2" edc:desc="Master 5 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 5"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:nzwidth="0x2" edc:desc="Master 6 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 6"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:nzwidth="0x2" edc:desc="Master 7 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX_PR4MATRIX2_PRBS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x4A0000A4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="M8PR" edc:nzwidth="0x2" edc:desc="Master 8 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 8"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:nzwidth="0x2" edc:desc="Master 9 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 9"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:nzwidth="0x2" edc:desc="Master 10 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 10"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:nzwidth="0x2" edc:desc="Master 11 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 11"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:nzwidth="0x2" edc:desc="Master 12 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 12"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:nzwidth="0x2" edc:desc="Master 13 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 13"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:nzwidth="0x2" edc:desc="Master 14 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 14"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:nzwidth="0x2" edc:desc="Master 15 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX_PR5MATRIX2_PRAS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x4A0000A8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="M0PR" edc:nzwidth="0x2" edc:desc="Master 0 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:nzwidth="0x2" edc:desc="Master 1 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:nzwidth="0x2" edc:desc="Master 2 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:nzwidth="0x2" edc:desc="Master 3 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:nzwidth="0x2" edc:desc="Master 4 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:nzwidth="0x2" edc:desc="Master 5 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 5"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:nzwidth="0x2" edc:desc="Master 6 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 6"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:nzwidth="0x2" edc:desc="Master 7 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX_PR5MATRIX2_PRBS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x4A0000AC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="M8PR" edc:nzwidth="0x2" edc:desc="Master 8 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 8"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:nzwidth="0x2" edc:desc="Master 9 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 9"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:nzwidth="0x2" edc:desc="Master 10 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 10"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:nzwidth="0x2" edc:desc="Master 11 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 11"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:nzwidth="0x2" edc:desc="Master 12 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 12"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:nzwidth="0x2" edc:desc="Master 13 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 13"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:nzwidth="0x2" edc:desc="Master 14 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 14"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:nzwidth="0x2" edc:desc="Master 15 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX_PR6MATRIX2_PRAS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x4A0000B0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="M0PR" edc:nzwidth="0x2" edc:desc="Master 0 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:nzwidth="0x2" edc:desc="Master 1 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:nzwidth="0x2" edc:desc="Master 2 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:nzwidth="0x2" edc:desc="Master 3 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:nzwidth="0x2" edc:desc="Master 4 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:nzwidth="0x2" edc:desc="Master 5 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 5"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:nzwidth="0x2" edc:desc="Master 6 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 6"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:nzwidth="0x2" edc:desc="Master 7 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX_PR6MATRIX2_PRBS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x4A0000B4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="M8PR" edc:nzwidth="0x2" edc:desc="Master 8 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 8"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:nzwidth="0x2" edc:desc="Master 9 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 9"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:nzwidth="0x2" edc:desc="Master 10 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 10"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:nzwidth="0x2" edc:desc="Master 11 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 11"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:nzwidth="0x2" edc:desc="Master 12 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 12"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:nzwidth="0x2" edc:desc="Master 13 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 13"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:nzwidth="0x2" edc:desc="Master 14 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 14"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:nzwidth="0x2" edc:desc="Master 15 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX_PR7MATRIX2_PRAS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x4A0000B8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="M0PR" edc:nzwidth="0x2" edc:desc="Master 0 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:nzwidth="0x2" edc:desc="Master 1 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:nzwidth="0x2" edc:desc="Master 2 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:nzwidth="0x2" edc:desc="Master 3 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:nzwidth="0x2" edc:desc="Master 4 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:nzwidth="0x2" edc:desc="Master 5 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 5"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:nzwidth="0x2" edc:desc="Master 6 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 6"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:nzwidth="0x2" edc:desc="Master 7 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX_PR7MATRIX2_PRBS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x4A0000BC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="M8PR" edc:nzwidth="0x2" edc:desc="Master 8 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 8"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:nzwidth="0x2" edc:desc="Master 9 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 9"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:nzwidth="0x2" edc:desc="Master 10 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 10"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:nzwidth="0x2" edc:desc="Master 11 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 11"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:nzwidth="0x2" edc:desc="Master 12 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 12"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:nzwidth="0x2" edc:desc="Master 13 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 13"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:nzwidth="0x2" edc:desc="Master 14 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 14"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:nzwidth="0x2" edc:desc="Master 15 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX_PR8MATRIX2_PRAS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x4A0000C0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="M0PR" edc:nzwidth="0x2" edc:desc="Master 0 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:nzwidth="0x2" edc:desc="Master 1 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:nzwidth="0x2" edc:desc="Master 2 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:nzwidth="0x2" edc:desc="Master 3 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:nzwidth="0x2" edc:desc="Master 4 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:nzwidth="0x2" edc:desc="Master 5 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 5"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:nzwidth="0x2" edc:desc="Master 6 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 6"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:nzwidth="0x2" edc:desc="Master 7 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX_PR8MATRIX2_PRBS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x4A0000C4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="M8PR" edc:nzwidth="0x2" edc:desc="Master 8 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 8"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:nzwidth="0x2" edc:desc="Master 9 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 9"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:nzwidth="0x2" edc:desc="Master 10 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 10"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:nzwidth="0x2" edc:desc="Master 11 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 11"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:nzwidth="0x2" edc:desc="Master 12 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 12"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:nzwidth="0x2" edc:desc="Master 13 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 13"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:nzwidth="0x2" edc:desc="Master 14 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 14"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:nzwidth="0x2" edc:desc="Master 15 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX_PR9MATRIX2_PRAS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x4A0000C8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="M0PR" edc:nzwidth="0x2" edc:desc="Master 0 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:nzwidth="0x2" edc:desc="Master 1 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:nzwidth="0x2" edc:desc="Master 2 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:nzwidth="0x2" edc:desc="Master 3 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:nzwidth="0x2" edc:desc="Master 4 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:nzwidth="0x2" edc:desc="Master 5 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 5"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:nzwidth="0x2" edc:desc="Master 6 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 6"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:nzwidth="0x2" edc:desc="Master 7 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX_PR9MATRIX2_PRBS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x4A0000CC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="M8PR" edc:nzwidth="0x2" edc:desc="Master 8 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 8"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:nzwidth="0x2" edc:desc="Master 9 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 9"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:nzwidth="0x2" edc:desc="Master 10 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 10"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:nzwidth="0x2" edc:desc="Master 11 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 11"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:nzwidth="0x2" edc:desc="Master 12 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 12"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:nzwidth="0x2" edc:desc="Master 13 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 13"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:nzwidth="0x2" edc:desc="Master 14 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 14"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:nzwidth="0x2" edc:desc="Master 15 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX_PR10MATRIX2_PRAS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x4A0000D0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="M0PR" edc:nzwidth="0x2" edc:desc="Master 0 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:nzwidth="0x2" edc:desc="Master 1 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:nzwidth="0x2" edc:desc="Master 2 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:nzwidth="0x2" edc:desc="Master 3 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:nzwidth="0x2" edc:desc="Master 4 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:nzwidth="0x2" edc:desc="Master 5 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 5"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:nzwidth="0x2" edc:desc="Master 6 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 6"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:nzwidth="0x2" edc:desc="Master 7 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX_PR10MATRIX2_PRBS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x4A0000D4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="M8PR" edc:nzwidth="0x2" edc:desc="Master 8 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 8"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:nzwidth="0x2" edc:desc="Master 9 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 9"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:nzwidth="0x2" edc:desc="Master 10 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 10"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:nzwidth="0x2" edc:desc="Master 11 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 11"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:nzwidth="0x2" edc:desc="Master 12 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 12"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:nzwidth="0x2" edc:desc="Master 13 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 13"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:nzwidth="0x2" edc:desc="Master 14 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 14"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:nzwidth="0x2" edc:desc="Master 15 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX_PR11MATRIX2_PRAS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x4A0000D8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="M0PR" edc:nzwidth="0x2" edc:desc="Master 0 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:nzwidth="0x2" edc:desc="Master 1 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:nzwidth="0x2" edc:desc="Master 2 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:nzwidth="0x2" edc:desc="Master 3 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:nzwidth="0x2" edc:desc="Master 4 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:nzwidth="0x2" edc:desc="Master 5 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 5"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:nzwidth="0x2" edc:desc="Master 6 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 6"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:nzwidth="0x2" edc:desc="Master 7 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX_PR11MATRIX2_PRBS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x4A0000DC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="M8PR" edc:nzwidth="0x2" edc:desc="Master 8 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 8"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:nzwidth="0x2" edc:desc="Master 9 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 9"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:nzwidth="0x2" edc:desc="Master 10 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 10"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:nzwidth="0x2" edc:desc="Master 11 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 11"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:nzwidth="0x2" edc:desc="Master 12 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 12"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:nzwidth="0x2" edc:desc="Master 13 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 13"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:nzwidth="0x2" edc:desc="Master 14 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 14"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:nzwidth="0x2" edc:desc="Master 15 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX_PR12MATRIX2_PRAS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x4A0000E0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="M0PR" edc:nzwidth="0x2" edc:desc="Master 0 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:nzwidth="0x2" edc:desc="Master 1 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:nzwidth="0x2" edc:desc="Master 2 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:nzwidth="0x2" edc:desc="Master 3 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:nzwidth="0x2" edc:desc="Master 4 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:nzwidth="0x2" edc:desc="Master 5 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 5"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:nzwidth="0x2" edc:desc="Master 6 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 6"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:nzwidth="0x2" edc:desc="Master 7 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX_PR12MATRIX2_PRBS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x4A0000E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="M8PR" edc:nzwidth="0x2" edc:desc="Master 8 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 8"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:nzwidth="0x2" edc:desc="Master 9 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 9"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:nzwidth="0x2" edc:desc="Master 10 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 10"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:nzwidth="0x2" edc:desc="Master 11 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 11"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:nzwidth="0x2" edc:desc="Master 12 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 12"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:nzwidth="0x2" edc:desc="Master 13 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 13"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:nzwidth="0x2" edc:desc="Master 14 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 14"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:nzwidth="0x2" edc:desc="Master 15 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX_PR13MATRIX2_PRAS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x4A0000E8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="M0PR" edc:nzwidth="0x2" edc:desc="Master 0 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:nzwidth="0x2" edc:desc="Master 1 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:nzwidth="0x2" edc:desc="Master 2 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:nzwidth="0x2" edc:desc="Master 3 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:nzwidth="0x2" edc:desc="Master 4 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:nzwidth="0x2" edc:desc="Master 5 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 5"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:nzwidth="0x2" edc:desc="Master 6 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 6"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:nzwidth="0x2" edc:desc="Master 7 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX_PR13MATRIX2_PRBS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x4A0000EC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="M8PR" edc:nzwidth="0x2" edc:desc="Master 8 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 8"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:nzwidth="0x2" edc:desc="Master 9 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 9"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:nzwidth="0x2" edc:desc="Master 10 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 10"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:nzwidth="0x2" edc:desc="Master 11 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 11"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:nzwidth="0x2" edc:desc="Master 12 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 12"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:nzwidth="0x2" edc:desc="Master 13 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 13"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:nzwidth="0x2" edc:desc="Master 14 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 14"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:nzwidth="0x2" edc:desc="Master 15 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX_PR14MATRIX2_PRAS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x4A0000F0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="M0PR" edc:nzwidth="0x2" edc:desc="Master 0 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:nzwidth="0x2" edc:desc="Master 1 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:nzwidth="0x2" edc:desc="Master 2 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:nzwidth="0x2" edc:desc="Master 3 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:nzwidth="0x2" edc:desc="Master 4 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:nzwidth="0x2" edc:desc="Master 5 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 5"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:nzwidth="0x2" edc:desc="Master 6 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 6"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:nzwidth="0x2" edc:desc="Master 7 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX_PR14MATRIX2_PRBS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x4A0000F4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="M8PR" edc:nzwidth="0x2" edc:desc="Master 8 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 8"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:nzwidth="0x2" edc:desc="Master 9 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 9"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:nzwidth="0x2" edc:desc="Master 10 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 10"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:nzwidth="0x2" edc:desc="Master 11 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 11"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:nzwidth="0x2" edc:desc="Master 12 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 12"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:nzwidth="0x2" edc:desc="Master 13 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 13"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:nzwidth="0x2" edc:desc="Master 14 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 14"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:nzwidth="0x2" edc:desc="Master 15 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX_PR15MATRIX2_PRAS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x4A0000F8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="M0PR" edc:nzwidth="0x2" edc:desc="Master 0 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 0"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:nzwidth="0x2" edc:desc="Master 1 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:nzwidth="0x2" edc:desc="Master 2 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 2"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:nzwidth="0x2" edc:desc="Master 3 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:nzwidth="0x2" edc:desc="Master 4 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:nzwidth="0x2" edc:desc="Master 5 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 5"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:nzwidth="0x2" edc:desc="Master 6 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 6"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:nzwidth="0x2" edc:desc="Master 7 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX_PR15MATRIX2_PRBS" edc:nzwidth="0x20" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:impl="0x77777777" edc:_addr="0x4A0000FC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="M8PR" edc:nzwidth="0x2" edc:desc="Master 8 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 8"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:nzwidth="0x2" edc:desc="Master 9 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 9"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:nzwidth="0x2" edc:desc="Master 10 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 10"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:nzwidth="0x2" edc:desc="Master 11 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 11"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:nzwidth="0x2" edc:desc="Master 12 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 12"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:nzwidth="0x2" edc:desc="Master 13 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 13"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:nzwidth="0x2" edc:desc="Master 14 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 14"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:nzwidth="0x2" edc:desc="Master 15 Priority"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:nzwidth="0x1" edc:desc="Latency Quality of Service Enable for Master 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_MRCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:impl="0xFFFF" edc:_addr="0x4A000100">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="RCB0" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 0"/>
            <edc:SFRFieldDef edc:cname="RCB1" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 1"/>
            <edc:SFRFieldDef edc:cname="RCB2" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 2"/>
            <edc:SFRFieldDef edc:cname="RCB3" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 3"/>
            <edc:SFRFieldDef edc:cname="RCB4" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 4"/>
            <edc:SFRFieldDef edc:cname="RCB5" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 5"/>
            <edc:SFRFieldDef edc:cname="RCB6" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 6"/>
            <edc:SFRFieldDef edc:cname="RCB7" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 7"/>
            <edc:SFRFieldDef edc:cname="RCB8" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 8"/>
            <edc:SFRFieldDef edc:cname="RCB9" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 9"/>
            <edc:SFRFieldDef edc:cname="RCB10" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 10"/>
            <edc:SFRFieldDef edc:cname="RCB11" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 11"/>
            <edc:SFRFieldDef edc:cname="RCB12" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 12"/>
            <edc:SFRFieldDef edc:cname="RCB13" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 13"/>
            <edc:SFRFieldDef edc:cname="RCB14" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 14"/>
            <edc:SFRFieldDef edc:cname="RCB15" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x4A000104"/>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_SFR0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A000110">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register Fields"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_SFR1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A000114">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register Fields"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_SFR2" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A000118">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register Fields"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_SFR3" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A00011C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register Fields"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_SFR4" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A000120">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register Fields"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_SFR5" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A000124">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register Fields"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_SFR6" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A000128">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register Fields"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_SFR7" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A00012C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register Fields"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_SFR8" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A000130">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register Fields"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_SFR9" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A000134">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register Fields"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_SFR10" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A000138">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register Fields"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_SFR11" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A00013C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register Fields"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_SFR12" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A000140">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register Fields"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_SFR13" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A000144">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register Fields"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_SFR14" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A000148">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register Fields"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_SFR15" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A00014C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register Fields"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_MEIER" edc:nzwidth="0x20" edc:access="----------------wwwwwwwwwwwwwwww" edc:impl="0xFFFF" edc:_addr="0x4A000150">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="MERR0" edc:nzwidth="0x1" edc:desc="Master 0 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR1" edc:nzwidth="0x1" edc:desc="Master 1 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR2" edc:nzwidth="0x1" edc:desc="Master 2 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR3" edc:nzwidth="0x1" edc:desc="Master 3 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR4" edc:nzwidth="0x1" edc:desc="Master 4 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR5" edc:nzwidth="0x1" edc:desc="Master 5 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR6" edc:nzwidth="0x1" edc:desc="Master 6 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR7" edc:nzwidth="0x1" edc:desc="Master 7 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR8" edc:nzwidth="0x1" edc:desc="Master 8 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR9" edc:nzwidth="0x1" edc:desc="Master 9 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR10" edc:nzwidth="0x1" edc:desc="Master 10 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR11" edc:nzwidth="0x1" edc:desc="Master 11 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR12" edc:nzwidth="0x1" edc:desc="Master 12 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR13" edc:nzwidth="0x1" edc:desc="Master 13 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR14" edc:nzwidth="0x1" edc:desc="Master 14 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR15" edc:nzwidth="0x1" edc:desc="Master 15 Access Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_MEIDR" edc:nzwidth="0x20" edc:access="----------------wwwwwwwwwwwwwwww" edc:impl="0xFFFF" edc:_addr="0x4A000154">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="MERR0" edc:nzwidth="0x1" edc:desc="Master 0 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR1" edc:nzwidth="0x1" edc:desc="Master 1 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR2" edc:nzwidth="0x1" edc:desc="Master 2 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR3" edc:nzwidth="0x1" edc:desc="Master 3 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR4" edc:nzwidth="0x1" edc:desc="Master 4 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR5" edc:nzwidth="0x1" edc:desc="Master 5 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR6" edc:nzwidth="0x1" edc:desc="Master 6 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR7" edc:nzwidth="0x1" edc:desc="Master 7 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR8" edc:nzwidth="0x1" edc:desc="Master 8 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR9" edc:nzwidth="0x1" edc:desc="Master 9 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR10" edc:nzwidth="0x1" edc:desc="Master 10 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR11" edc:nzwidth="0x1" edc:desc="Master 11 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR12" edc:nzwidth="0x1" edc:desc="Master 12 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR13" edc:nzwidth="0x1" edc:desc="Master 13 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR14" edc:nzwidth="0x1" edc:desc="Master 14 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR15" edc:nzwidth="0x1" edc:desc="Master 15 Access Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_MEIMR" edc:nzwidth="0x20" edc:access="----------------rrrrrrrrrrrrrrrr" edc:impl="0xFFFF" edc:_addr="0x4A000158">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="MERR0" edc:nzwidth="0x1" edc:desc="Master 0 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR1" edc:nzwidth="0x1" edc:desc="Master 1 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR2" edc:nzwidth="0x1" edc:desc="Master 2 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR3" edc:nzwidth="0x1" edc:desc="Master 3 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR4" edc:nzwidth="0x1" edc:desc="Master 4 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR5" edc:nzwidth="0x1" edc:desc="Master 5 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR6" edc:nzwidth="0x1" edc:desc="Master 6 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR7" edc:nzwidth="0x1" edc:desc="Master 7 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR8" edc:nzwidth="0x1" edc:desc="Master 8 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR9" edc:nzwidth="0x1" edc:desc="Master 9 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR10" edc:nzwidth="0x1" edc:desc="Master 10 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR11" edc:nzwidth="0x1" edc:desc="Master 11 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR12" edc:nzwidth="0x1" edc:desc="Master 12 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR13" edc:nzwidth="0x1" edc:desc="Master 13 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR14" edc:nzwidth="0x1" edc:desc="Master 14 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR15" edc:nzwidth="0x1" edc:desc="Master 15 Access Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_MESR" edc:nzwidth="0x20" edc:access="----------------rrrrrrrrrrrrrrrr" edc:impl="0xFFFF" edc:_addr="0x4A00015C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="MERR0" edc:nzwidth="0x1" edc:desc="Master 0 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR1" edc:nzwidth="0x1" edc:desc="Master 1 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR2" edc:nzwidth="0x1" edc:desc="Master 2 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR3" edc:nzwidth="0x1" edc:desc="Master 3 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR4" edc:nzwidth="0x1" edc:desc="Master 4 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR5" edc:nzwidth="0x1" edc:desc="Master 5 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR6" edc:nzwidth="0x1" edc:desc="Master 6 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR7" edc:nzwidth="0x1" edc:desc="Master 7 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR8" edc:nzwidth="0x1" edc:desc="Master 8 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR9" edc:nzwidth="0x1" edc:desc="Master 9 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR10" edc:nzwidth="0x1" edc:desc="Master 10 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR11" edc:nzwidth="0x1" edc:desc="Master 11 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR12" edc:nzwidth="0x1" edc:desc="Master 12 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR13" edc:nzwidth="0x1" edc:desc="Master 13 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR14" edc:nzwidth="0x1" edc:desc="Master 14 Access Error"/>
            <edc:SFRFieldDef edc:cname="MERR15" edc:nzwidth="0x1" edc:desc="Master 15 Access Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_MEAR0" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4A000160">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:nzwidth="0x20" edc:desc="Master Error Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_MEAR1" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4A000164">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:nzwidth="0x20" edc:desc="Master Error Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_MEAR2" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4A000168">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:nzwidth="0x20" edc:desc="Master Error Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_MEAR3" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4A00016C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:nzwidth="0x20" edc:desc="Master Error Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_MEAR4" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4A000170">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:nzwidth="0x20" edc:desc="Master Error Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_MEAR5" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4A000174">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:nzwidth="0x20" edc:desc="Master Error Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_MEAR6" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4A000178">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:nzwidth="0x20" edc:desc="Master Error Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_MEAR7" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4A00017C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:nzwidth="0x20" edc:desc="Master Error Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_MEAR8" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4A000180">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:nzwidth="0x20" edc:desc="Master Error Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_MEAR9" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4A000184">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:nzwidth="0x20" edc:desc="Master Error Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_MEAR10" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4A000188">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:nzwidth="0x20" edc:desc="Master Error Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_MEAR11" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4A00018C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:nzwidth="0x20" edc:desc="Master Error Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_MEAR12" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4A000190">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:nzwidth="0x20" edc:desc="Master Error Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_MEAR13" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4A000194">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:nzwidth="0x20" edc:desc="Master Error Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_MEAR14" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4A000198">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:nzwidth="0x20" edc:desc="Master Error Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_MEAR15" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4A00019C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:nzwidth="0x20" edc:desc="Master Error Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x44" edc:_addr="0x4A0001A0"/>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_WPMR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnn------n" edc:impl="0xFFFFFF81" edc:_addr="0x4A0001E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="WPEN" edc:nzwidth="0x1" edc:desc="Write Protection Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="CFGFRZ" edc:nzwidth="0x1" edc:desc="Configuration Freeze"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:nzwidth="0x18" edc:desc="Write Protection Key">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPEN and CFGFRZ bits. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x4D4154"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_WPSR" edc:nzwidth="0x20" edc:access="--------rrrrrrrrrrrrrrrr-------r" edc:impl="0xFFFF01" edc:_addr="0x4A0001E8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="WPVS" edc:nzwidth="0x1" edc:desc="Write Protection Violation Status"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:nzwidth="0x10" edc:desc="Write Protection Violation Source"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x10" edc:_addr="0x4A0001EC"/>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_VERSION" edc:nzwidth="0x20" edc:access="-------------rrr----rrrrrrrrrrrr" edc:impl="0x70FFF" edc:_addr="0x4A0001FC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="VERSION" edc:nzwidth="0xC" edc:desc="Matrix Version"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="MFN" edc:nzwidth="0x3" edc:desc="Metal Fix Number"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_PSR0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A000200">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_PSR1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A000204">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_PSR2" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A000208">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_PSR3" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A00020C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_PSR4" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A000210">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_PSR5" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A000214">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_PSR6" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A000218">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_PSR7" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A00021C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_PSR8" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A000220">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_PSR9" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A000224">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_PSR10" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A000228">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_PSR11" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A00022C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_PSR12" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A000230">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_PSR13" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A000234">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_PSR14" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A000238">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_PSR15" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A00023C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:nzwidth="0x1" edc:desc="Low Area USER in HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:nzwidth="0x1" edc:desc="Read USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:nzwidth="0x1" edc:desc="Write USER for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:nzwidth="0x1" edc:desc="Downward Protection Split Address for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_PASSR0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A000240">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_PASSR1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A000244">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_PASSR2" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A000248">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_PASSR3" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A00024C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_PASSR4" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A000250">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_PASSR5" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A000254">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_PASSR6" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A000258">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_PASSR7" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A00025C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_PASSR8" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A000260">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_PASSR9" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A000264">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_PASSR10" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A000268">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_PASSR11" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A00026C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_PASSR12" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A000270">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_PASSR13" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A000274">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_PASSR14" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A000278">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_PASSR15" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A00027C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:nzwidth="0x4" edc:desc="Protected Areas Split for HSELx Protected Region"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_PRTSR0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A000280">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_PRTSR1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A000284">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_PRTSR2" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A000288">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_PRTSR3" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A00028C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_PRTSR4" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A000290">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_PRTSR5" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A000294">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_PRTSR6" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A000298">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_PRTSR7" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A00029C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_PRTSR8" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A0002A0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_PRTSR9" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A0002A4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_PRTSR10" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A0002A8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_PRTSR11" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A0002AC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_PRTSR12" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A0002B0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_PRTSR13" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A0002B4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_PRTSR14" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A0002B8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_PRTSR15" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A0002BC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:nzwidth="0x4" edc:desc="HSELx Protected Region Top"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_PPSELR0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A0002C0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="USERP0" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP1" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP2" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP3" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP4" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP5" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP6" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP7" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP8" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP9" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP10" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP11" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP12" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP13" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP14" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP15" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP16" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP17" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP18" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP19" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP20" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP21" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP22" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP23" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP24" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP25" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP26" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP27" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP28" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP29" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP30" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP31" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_PPSELR1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A0002C4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="USERP0" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP1" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP2" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP3" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP4" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP5" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP6" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP7" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP8" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP9" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP10" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP11" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP12" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP13" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP14" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP15" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP16" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP17" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP18" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP19" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP20" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP21" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP22" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP23" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP24" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP25" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP26" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP27" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP28" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP29" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP30" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP31" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MATRIX2" edc:cname="MATRIX2_PPSELR2" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x4A0002C8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX2">
            <edc:SFRFieldDef edc:cname="USERP0" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP1" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP2" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP3" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP4" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP5" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP6" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP7" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP8" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP9" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP10" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP11" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP12" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP13" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP14" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP15" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP16" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP17" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP18" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP19" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP20" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP21" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP22" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP23" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP24" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP25" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP26" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP27" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP28" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP29" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP30" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
            <edc:SFRFieldDef edc:cname="USERP31" edc:nzwidth="0x1" edc:desc="User PSELy Peripheral"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:SFRDataSector>
    <edc:GPRDataSector edc:regionid="IRAM1" edc:beginaddr="0x0" edc:endaddr="0x8000" edc:isexecutable="true" edc:rw="rw" edc:virtualprogramoffset="0x20080000"/>
    <edc:GPRDataSector edc:regionid="IRAM2" edc:beginaddr="0x20088000" edc:endaddr="0x2008C000" edc:isexecutable="true" edc:rw="rw"/>
    <edc:EmulatorSector edc:beginaddr="0xE0001000" edc:endaddr="0xE000F000" edc:regionid="emulation"/>
    <edc:DeviceIDSector edc:regionid="devid" edc:beginaddr="0x40050200" edc:endaddr="0x40050204" edc:value="0x2C5D0CE0" edc:mask="0xFFFFFFE0"/>
  </edc:PhysicalSpace>
  <edc:PinList edc:ppsflavor="atmel">
    <edc:Pin>
      <edc:VirtualPin edc:name="PA0" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="FLEXCOM6_IO0" edc:ppsfunction="A" ltx:memberofperipheral="FLEXCOM6"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA1" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="FLEXCOM6_IO1" edc:ppsfunction="A" ltx:memberofperipheral="FLEXCOM6"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA2" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="PCK1" edc:ppsfunction="A" ltx:memberofperipheral="PMC"/>
      <edc:VirtualPin edc:name="TIOA0" edc:ppsfunction="B" ltx:memberofperipheral="TC0"/>
      <edc:VirtualPin edc:name="WKUP3" edc:ppsfunction="X1" ltx:memberofperipheral="SUPC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA3" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="TIOB0" edc:ppsfunction="A" ltx:memberofperipheral="TC0"/>
      <edc:VirtualPin edc:name="WKUP4" edc:ppsfunction="X1" ltx:memberofperipheral="SUPC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA4" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="FLEXCOM0_IO0" edc:ppsfunction="A" ltx:memberofperipheral="FLEXCOM0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA5" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="FLEXCOM0_IO1" edc:ppsfunction="A" ltx:memberofperipheral="FLEXCOM0"/>
      <edc:VirtualPin edc:name="WKUP5" edc:ppsfunction="X1" ltx:memberofperipheral="SUPC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA6" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="FLEXCOM0_IO2" edc:ppsfunction="A" ltx:memberofperipheral="FLEXCOM0"/>
      <edc:VirtualPin edc:name="FLEXCOM0_IO4" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM0"/>
      <edc:VirtualPin edc:name="TIOA6" edc:ppsfunction="C" ltx:memberofperipheral="TC2"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA7" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="FLEXCOM0_IO3" edc:ppsfunction="A" ltx:memberofperipheral="FLEXCOM0"/>
      <edc:VirtualPin edc:name="TIOB6" edc:ppsfunction="C" ltx:memberofperipheral="TC2"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA8" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="FLEXCOM1_IO0" edc:ppsfunction="A" ltx:memberofperipheral="FLEXCOM1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA9" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="FLEXCOM1_IO1" edc:ppsfunction="A" ltx:memberofperipheral="FLEXCOM1"/>
      <edc:VirtualPin edc:name="WKUP6" edc:ppsfunction="X1" ltx:memberofperipheral="SUPC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA10" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="FLEXCOM1_IO2" edc:ppsfunction="A" ltx:memberofperipheral="FLEXCOM1"/>
      <edc:VirtualPin edc:name="FLEXCOM1_IO4" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM1"/>
      <edc:VirtualPin edc:name="TCLK6" edc:ppsfunction="C" ltx:memberofperipheral="TC2"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA11" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="FLEXCOM1_IO3" edc:ppsfunction="A" ltx:memberofperipheral="FLEXCOM1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA12" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="FLEXCOM2_IO0" edc:ppsfunction="A" ltx:memberofperipheral="FLEXCOM2"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA13" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="FLEXCOM2_IO1" edc:ppsfunction="A" ltx:memberofperipheral="FLEXCOM2"/>
      <edc:VirtualPin edc:name="WKUP7" edc:ppsfunction="X1" ltx:memberofperipheral="SUPC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA14" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="FLEXCOM2_IO2" edc:ppsfunction="A" ltx:memberofperipheral="FLEXCOM2"/>
      <edc:VirtualPin edc:name="FLEXCOM2_IO4" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM2"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA15" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="FLEXCOM2_IO3" edc:ppsfunction="A" ltx:memberofperipheral="FLEXCOM2"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA16" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="FLEXCOM3_IO0" edc:ppsfunction="A" ltx:memberofperipheral="FLEXCOM3"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA17" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="FLEXCOM3_IO1" edc:ppsfunction="A" ltx:memberofperipheral="FLEXCOM3"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA18" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="FLEXCOM3_IO2" edc:ppsfunction="A" ltx:memberofperipheral="FLEXCOM3"/>
      <edc:VirtualPin edc:name="FLEXCOM3_IO4" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM3"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA19" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="FLEXCOM3_IO3" edc:ppsfunction="A" ltx:memberofperipheral="FLEXCOM3"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA20" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="PCK0" edc:ppsfunction="A" ltx:memberofperipheral="PMC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA21" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="COM0" edc:ppsfunction="A" ltx:memberofperipheral="SLCDC"/>
      <edc:VirtualPin edc:name="FLEXCOM5_IO3" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM5"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA22" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="COM1" edc:ppsfunction="A" ltx:memberofperipheral="SLCDC"/>
      <edc:VirtualPin edc:name="FLEXCOM5_IO2" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM5"/>
      <edc:VirtualPin edc:name="FLEXCOM5_IO4" edc:ppsfunction="C" ltx:memberofperipheral="FLEXCOM5"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA23" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="COM2" edc:ppsfunction="A" ltx:memberofperipheral="SLCDC"/>
      <edc:VirtualPin edc:name="FLEXCOM5_IO1" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM5"/>
      <edc:VirtualPin edc:name="TCLK0" edc:ppsfunction="D" ltx:memberofperipheral="TC0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA24" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="COM3" edc:ppsfunction="A" ltx:memberofperipheral="SLCDC"/>
      <edc:VirtualPin edc:name="FLEXCOM5_IO0" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM5"/>
      <edc:VirtualPin edc:name="TIOB0" edc:ppsfunction="D" ltx:memberofperipheral="TC0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA25" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="COM4" edc:ppsfunction="A" ltx:memberofperipheral="SLCDC"/>
      <edc:VirtualPin edc:name="FLEXCOM6_IO0" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM6"/>
      <edc:VirtualPin edc:name="TIOA0" edc:ppsfunction="D" ltx:memberofperipheral="TC0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA26" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="COM5" edc:ppsfunction="A" ltx:memberofperipheral="SLCDC"/>
      <edc:VirtualPin edc:name="FLEXCOM6_IO1" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM6"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA27" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="COM6" edc:ppsfunction="A" ltx:memberofperipheral="SLCDC"/>
      <edc:VirtualPin edc:name="FLEXCOM6_IO2" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM6"/>
      <edc:VirtualPin edc:name="FLEXCOM6_IO4" edc:ppsfunction="C" ltx:memberofperipheral="FLEXCOM6"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA28" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="COM7" edc:ppsfunction="A" ltx:memberofperipheral="SLCDC"/>
      <edc:VirtualPin edc:name="FLEXCOM6_IO3" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM6"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA29" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="SEG0" edc:ppsfunction="A" ltx:memberofperipheral="SLCDC"/>
      <edc:VirtualPin edc:name="FLEXCOM0_IO4" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM0"/>
      <edc:VirtualPin edc:name="FLEXCOM1_IO4" edc:ppsfunction="C" ltx:memberofperipheral="FLEXCOM1"/>
      <edc:VirtualPin edc:name="FLEXCOM2_IO4" edc:ppsfunction="D" ltx:memberofperipheral="FLEXCOM2"/>
      <edc:VirtualPin edc:name="AD0" edc:ppsfunction="X1" ltx:memberofperipheral="ACC"/>
      <edc:VirtualPin edc:name="ACC_INP0" edc:ppsfunction="X1" ltx:memberofperipheral="ACC"/>
      <edc:VirtualPin edc:name="XIN" edc:ppsfunction="X1" ltx:memberofperipheral="ACC"/>
      <edc:VirtualPin edc:name="AD0" edc:ppsfunction="X1" ltx:memberofperipheral="ADC"/>
      <edc:VirtualPin edc:name="ACC_INP0" edc:ppsfunction="X1" ltx:memberofperipheral="ADC"/>
      <edc:VirtualPin edc:name="XIN" edc:ppsfunction="X1" ltx:memberofperipheral="ADC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA30" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="SEG1" edc:ppsfunction="A" ltx:memberofperipheral="SLCDC"/>
      <edc:VirtualPin edc:name="AD1" edc:ppsfunction="X1" ltx:memberofperipheral="ACC"/>
      <edc:VirtualPin edc:name="ACC_INP1" edc:ppsfunction="X1" ltx:memberofperipheral="ACC"/>
      <edc:VirtualPin edc:name="AD1" edc:ppsfunction="X1" ltx:memberofperipheral="ADC"/>
      <edc:VirtualPin edc:name="ACC_INP1" edc:ppsfunction="X1" ltx:memberofperipheral="ADC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB1" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="SEG4" edc:ppsfunction="A" ltx:memberofperipheral="SLCDC"/>
      <edc:VirtualPin edc:name="FLEXCOM7_IO3" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM7"/>
      <edc:VirtualPin edc:name="PCK1" edc:ppsfunction="C" ltx:memberofperipheral="PMC"/>
      <edc:VirtualPin edc:name="TCLK1" edc:ppsfunction="D" ltx:memberofperipheral="TC0"/>
      <edc:VirtualPin edc:name="AD4" edc:ppsfunction="X1" ltx:memberofperipheral="ACC"/>
      <edc:VirtualPin edc:name="ACC_INN1" edc:ppsfunction="X1" ltx:memberofperipheral="ACC"/>
      <edc:VirtualPin edc:name="AD4" edc:ppsfunction="X1" ltx:memberofperipheral="ADC"/>
      <edc:VirtualPin edc:name="ACC_INN1" edc:ppsfunction="X1" ltx:memberofperipheral="ADC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB0" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="SEG3" edc:ppsfunction="A" ltx:memberofperipheral="SLCDC"/>
      <edc:VirtualPin edc:name="FLEXCOM3_IO4" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM3"/>
      <edc:VirtualPin edc:name="TIOB1" edc:ppsfunction="D" ltx:memberofperipheral="TC0"/>
      <edc:VirtualPin edc:name="AD3" edc:ppsfunction="X1" ltx:memberofperipheral="ACC"/>
      <edc:VirtualPin edc:name="ACC_INN0" edc:ppsfunction="X1" ltx:memberofperipheral="ACC"/>
      <edc:VirtualPin edc:name="XOUT" edc:ppsfunction="X1" ltx:memberofperipheral="ACC"/>
      <edc:VirtualPin edc:name="AD3" edc:ppsfunction="X1" ltx:memberofperipheral="ADC"/>
      <edc:VirtualPin edc:name="ACC_INN0" edc:ppsfunction="X1" ltx:memberofperipheral="ADC"/>
      <edc:VirtualPin edc:name="XOUT" edc:ppsfunction="X1" ltx:memberofperipheral="ADC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB2" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="SEG5" edc:ppsfunction="A" ltx:memberofperipheral="SLCDC"/>
      <edc:VirtualPin edc:name="FLEXCOM7_IO2" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM7"/>
      <edc:VirtualPin edc:name="FLEXCOM7_IO4" edc:ppsfunction="C" ltx:memberofperipheral="FLEXCOM7"/>
      <edc:VirtualPin edc:name="TIOA2" edc:ppsfunction="D" ltx:memberofperipheral="TC0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA31" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="SEG2" edc:ppsfunction="A" ltx:memberofperipheral="SLCDC"/>
      <edc:VirtualPin edc:name="TIOA1" edc:ppsfunction="D" ltx:memberofperipheral="TC0"/>
      <edc:VirtualPin edc:name="AD2" edc:ppsfunction="X1" ltx:memberofperipheral="ACC"/>
      <edc:VirtualPin edc:name="ACC_INP2" edc:ppsfunction="X1" ltx:memberofperipheral="ACC"/>
      <edc:VirtualPin edc:name="AD2" edc:ppsfunction="X1" ltx:memberofperipheral="ADC"/>
      <edc:VirtualPin edc:name="ACC_INP2" edc:ppsfunction="X1" ltx:memberofperipheral="ADC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB3" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="SEG6" edc:ppsfunction="A" ltx:memberofperipheral="SLCDC"/>
      <edc:VirtualPin edc:name="FLEXCOM7_IO1" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM7"/>
      <edc:VirtualPin edc:name="TIOB2" edc:ppsfunction="D" ltx:memberofperipheral="TC0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB4" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="SEG7" edc:ppsfunction="A" ltx:memberofperipheral="SLCDC"/>
      <edc:VirtualPin edc:name="FLEXCOM7_IO0" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM7"/>
      <edc:VirtualPin edc:name="TCLK2" edc:ppsfunction="D" ltx:memberofperipheral="TC0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB5" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="SEG8" edc:ppsfunction="A" ltx:memberofperipheral="SLCDC"/>
      <edc:VirtualPin edc:name="FLEXCOM4_IO0" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM4"/>
      <edc:VirtualPin edc:name="TIOA5" edc:ppsfunction="C" ltx:memberofperipheral="TC1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB6" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="SEG9" edc:ppsfunction="A" ltx:memberofperipheral="SLCDC"/>
      <edc:VirtualPin edc:name="FLEXCOM4_IO1" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM4"/>
      <edc:VirtualPin edc:name="TIOB5" edc:ppsfunction="C" ltx:memberofperipheral="TC1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB7" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="SEG10" edc:ppsfunction="A" ltx:memberofperipheral="SLCDC"/>
      <edc:VirtualPin edc:name="FLEXCOM4_IO2" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM4"/>
      <edc:VirtualPin edc:name="FLEXCOM4_IO4" edc:ppsfunction="C" ltx:memberofperipheral="FLEXCOM4"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB8" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="SEG11" edc:ppsfunction="A" ltx:memberofperipheral="SLCDC"/>
      <edc:VirtualPin edc:name="FLEXCOM4_IO3" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM4"/>
      <edc:VirtualPin edc:name="TIOA3" edc:ppsfunction="C" ltx:memberofperipheral="TC1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB9" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="SEG12" edc:ppsfunction="A" ltx:memberofperipheral="SLCDC"/>
      <edc:VirtualPin edc:name="FLEXCOM3_IO0" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM3"/>
      <edc:VirtualPin edc:name="WKUP9" edc:ppsfunction="X1" ltx:memberofperipheral="SUPC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB10" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="SEG13" edc:ppsfunction="A" ltx:memberofperipheral="SLCDC"/>
      <edc:VirtualPin edc:name="FLEXCOM3_IO1" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM3"/>
      <edc:VirtualPin edc:name="TRACESWO0" edc:ppsfunction="D" ltx:memberofperipheral="TPI"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB11" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="SEG14" edc:ppsfunction="A" ltx:memberofperipheral="SLCDC"/>
      <edc:VirtualPin edc:name="FLEXCOM3_IO2" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM3"/>
      <edc:VirtualPin edc:name="FLEXCOM3_IO4" edc:ppsfunction="C" ltx:memberofperipheral="FLEXCOM3"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB12" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="SEG15" edc:ppsfunction="A" ltx:memberofperipheral="SLCDC"/>
      <edc:VirtualPin edc:name="FLEXCOM3_IO3" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM3"/>
      <edc:VirtualPin edc:name="WKUP10" edc:ppsfunction="X1" ltx:memberofperipheral="SUPC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB13" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="SEG16" edc:ppsfunction="A" ltx:memberofperipheral="SLCDC"/>
      <edc:VirtualPin edc:name="TIOB3" edc:ppsfunction="C" ltx:memberofperipheral="TC1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB14" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="SEG17" edc:ppsfunction="A" ltx:memberofperipheral="SLCDC"/>
      <edc:VirtualPin edc:name="TCLK3" edc:ppsfunction="C" ltx:memberofperipheral="TC1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB15" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="SEG18" edc:ppsfunction="A" ltx:memberofperipheral="SLCDC"/>
      <edc:VirtualPin edc:name="FLEXCOM5_IO4" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM5"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB16" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="SEG19" edc:ppsfunction="A" ltx:memberofperipheral="SLCDC"/>
      <edc:VirtualPin edc:name="FLEXCOM6_IO4" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM6"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB17" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="SEG20" edc:ppsfunction="A" ltx:memberofperipheral="SLCDC"/>
      <edc:VirtualPin edc:name="TCLK4" edc:ppsfunction="C" ltx:memberofperipheral="TC1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB18" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="SEG21" edc:ppsfunction="A" ltx:memberofperipheral="SLCDC"/>
      <edc:VirtualPin edc:name="TIOA4" edc:ppsfunction="C" ltx:memberofperipheral="TC1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB19" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="SEG22" edc:ppsfunction="A" ltx:memberofperipheral="SLCDC"/>
      <edc:VirtualPin edc:name="TIOB4" edc:ppsfunction="C" ltx:memberofperipheral="TC1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB20" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="SEG23" edc:ppsfunction="A" ltx:memberofperipheral="SLCDC"/>
      <edc:VirtualPin edc:name="FLEXCOM5_IO0" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM5"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB21" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="SEG24" edc:ppsfunction="A" ltx:memberofperipheral="SLCDC"/>
      <edc:VirtualPin edc:name="FLEXCOM5_IO1" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM5"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB22" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="SEG25" edc:ppsfunction="A" ltx:memberofperipheral="SLCDC"/>
      <edc:VirtualPin edc:name="FLEXCOM5_IO2" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM5"/>
      <edc:VirtualPin edc:name="FLEXCOM5_IO4" edc:ppsfunction="C" ltx:memberofperipheral="FLEXCOM5"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB23" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="SEG26" edc:ppsfunction="A" ltx:memberofperipheral="SLCDC"/>
      <edc:VirtualPin edc:name="FLEXCOM5_IO3" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM5"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB24" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="SEG27" edc:ppsfunction="A" ltx:memberofperipheral="SLCDC"/>
      <edc:VirtualPin edc:name="FLEXCOM4_IO0" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM4"/>
      <edc:VirtualPin edc:name="TIOA5" edc:ppsfunction="C" ltx:memberofperipheral="TC1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB25" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="SEG28" edc:ppsfunction="A" ltx:memberofperipheral="SLCDC"/>
      <edc:VirtualPin edc:name="FLEXCOM4_IO1" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM4"/>
      <edc:VirtualPin edc:name="TIOB5" edc:ppsfunction="C" ltx:memberofperipheral="TC1"/>
      <edc:VirtualPin edc:name="WKUP8" edc:ppsfunction="X1" ltx:memberofperipheral="SUPC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB26" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="SEG29" edc:ppsfunction="A" ltx:memberofperipheral="SLCDC"/>
      <edc:VirtualPin edc:name="FLEXCOM4_IO2" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM4"/>
      <edc:VirtualPin edc:name="FLEXCOM4_IO4" edc:ppsfunction="C" ltx:memberofperipheral="FLEXCOM4"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC0" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="SEG30" edc:ppsfunction="A" ltx:memberofperipheral="SLCDC"/>
      <edc:VirtualPin edc:name="FLEXCOM4_IO3" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM4"/>
      <edc:VirtualPin edc:name="TIOA3" edc:ppsfunction="C" ltx:memberofperipheral="TC1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC1" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="SEG31" edc:ppsfunction="A" ltx:memberofperipheral="SLCDC"/>
      <edc:VirtualPin edc:name="FLEXCOM4_IO4" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM4"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC2" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="FLEXCOM1_IO0" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC3" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="FLEXCOM1_IO1" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC4" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC5" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="PCK2" edc:ppsfunction="A" ltx:memberofperipheral="PMC"/>
      <edc:VirtualPin edc:name="TCLK5" edc:ppsfunction="D" ltx:memberofperipheral="TC1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC6" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="FLEXCOM5_IO3" edc:ppsfunction="A" ltx:memberofperipheral="FLEXCOM5"/>
      <edc:VirtualPin edc:name="FLEXCOM6_IO0" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM6"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC7" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="FLEXCOM5_IO2" edc:ppsfunction="A" ltx:memberofperipheral="FLEXCOM5"/>
      <edc:VirtualPin edc:name="FLEXCOM6_IO1" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM6"/>
      <edc:VirtualPin edc:name="FLEXCOM5_IO4" edc:ppsfunction="C" ltx:memberofperipheral="FLEXCOM5"/>
      <edc:VirtualPin edc:name="WKUP11" edc:ppsfunction="X1" ltx:memberofperipheral="SUPC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC8" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="FLEXCOM5_IO1" edc:ppsfunction="A" ltx:memberofperipheral="FLEXCOM5"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC9" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="FLEXCOM5_IO0" edc:ppsfunction="A" ltx:memberofperipheral="FLEXCOM5"/>
      <edc:VirtualPin edc:name="WKUP12" edc:ppsfunction="X1" ltx:memberofperipheral="SUPC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC10" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="QIO3" edc:ppsfunction="A" ltx:memberofperipheral="QSPI"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC11" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="QIO2" edc:ppsfunction="A" ltx:memberofperipheral="QSPI"/>
      <edc:VirtualPin edc:name="FLEXCOM7_IO4" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM7"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC12" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="QIO1" edc:ppsfunction="A" ltx:memberofperipheral="QSPI"/>
      <edc:VirtualPin edc:name="FLEXCOM7_IO1" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM7"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC13" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="QIO0" edc:ppsfunction="A" ltx:memberofperipheral="QSPI"/>
      <edc:VirtualPin edc:name="FLEXCOM7_IO0" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM7"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC14" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="QCS" edc:ppsfunction="A" ltx:memberofperipheral="QSPI"/>
      <edc:VirtualPin edc:name="FLEXCOM7_IO3" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM7"/>
      <edc:VirtualPin edc:name="TIOA7" edc:ppsfunction="D" ltx:memberofperipheral="TC2"/>
      <edc:VirtualPin edc:name="WKUP13" edc:ppsfunction="X1" ltx:memberofperipheral="SUPC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC15" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="QSCK" edc:ppsfunction="A" ltx:memberofperipheral="QSPI"/>
      <edc:VirtualPin edc:name="FLEXCOM7_IO2" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM7"/>
      <edc:VirtualPin edc:name="TIOB7" edc:ppsfunction="D" ltx:memberofperipheral="TC2"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC16" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="FLEXCOM6_IO0" edc:ppsfunction="A" ltx:memberofperipheral="FLEXCOM6"/>
      <edc:VirtualPin edc:name="TCLK7" edc:ppsfunction="D" ltx:memberofperipheral="TC2"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC17" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="FLEXCOM6_IO1" edc:ppsfunction="A" ltx:memberofperipheral="FLEXCOM6"/>
      <edc:VirtualPin edc:name="TIOA8" edc:ppsfunction="D" ltx:memberofperipheral="TC2"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC18" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="FLEXCOM6_IO2" edc:ppsfunction="A" ltx:memberofperipheral="FLEXCOM6"/>
      <edc:VirtualPin edc:name="FLEXCOM6_IO4" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM6"/>
      <edc:VirtualPin edc:name="TIOB8" edc:ppsfunction="D" ltx:memberofperipheral="TC2"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC19" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="FLEXCOM6_IO3" edc:ppsfunction="A" ltx:memberofperipheral="FLEXCOM6"/>
      <edc:VirtualPin edc:name="TCLK8" edc:ppsfunction="D" ltx:memberofperipheral="TC2"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC20" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="FLEXCOM7_IO1" edc:ppsfunction="A" ltx:memberofperipheral="FLEXCOM7"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC21" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="FLEXCOM7_IO0" edc:ppsfunction="A" ltx:memberofperipheral="FLEXCOM7"/>
      <edc:VirtualPin edc:name="WKUP14" edc:ppsfunction="X1" ltx:memberofperipheral="SUPC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC22" edc:ppsfunction="default" ltx:memberofperipheral="PIO0"/>
      <edc:VirtualPin edc:name="PCK0" edc:ppsfunction="A" ltx:memberofperipheral="PMC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD0" edc:ppsfunction="default" ltx:memberofperipheral="PIO1"/>
      <edc:VirtualPin edc:name="TIOA9" edc:ppsfunction="A" ltx:memberofperipheral="TC3"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD1" edc:ppsfunction="default" ltx:memberofperipheral="PIO1"/>
      <edc:VirtualPin edc:name="URXD" edc:ppsfunction="A" ltx:memberofperipheral="UART"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD2" edc:ppsfunction="default" ltx:memberofperipheral="PIO1"/>
      <edc:VirtualPin edc:name="UTXD" edc:ppsfunction="A" ltx:memberofperipheral="UART"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD3" edc:ppsfunction="default" ltx:memberofperipheral="PIO1"/>
      <edc:VirtualPin edc:name="TCLK9" edc:ppsfunction="A" ltx:memberofperipheral="TC3"/>
      <edc:VirtualPin edc:name="PWMH0" edc:ppsfunction="C" ltx:memberofperipheral="PWM"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD4" edc:ppsfunction="default" ltx:memberofperipheral="PIO1"/>
      <edc:VirtualPin edc:name="TIOB9" edc:ppsfunction="A" ltx:memberofperipheral="TC3"/>
      <edc:VirtualPin edc:name="PCK2" edc:ppsfunction="B" ltx:memberofperipheral="PMC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD5" edc:ppsfunction="default" ltx:memberofperipheral="PIO1"/>
      <edc:VirtualPin edc:name="MCSPI_SPCK" edc:ppsfunction="A" ltx:memberofperipheral="MCSPI"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD6" edc:ppsfunction="default" ltx:memberofperipheral="PIO1"/>
      <edc:VirtualPin edc:name="MCSPI_MISO" edc:ppsfunction="A" ltx:memberofperipheral="MCSPI"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD7" edc:ppsfunction="default" ltx:memberofperipheral="PIO1"/>
      <edc:VirtualPin edc:name="MCSPI_MOSI0" edc:ppsfunction="A" ltx:memberofperipheral="MCSPI"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD8" edc:ppsfunction="default" ltx:memberofperipheral="PIO1"/>
      <edc:VirtualPin edc:name="MCSPI_NPCS0" edc:ppsfunction="A" ltx:memberofperipheral="MCSPI"/>
      <edc:VirtualPin edc:name="MCSPI_MOSI1" edc:ppsfunction="B" ltx:memberofperipheral="MCSPI"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD9" edc:ppsfunction="default" ltx:memberofperipheral="PIO1"/>
      <edc:VirtualPin edc:name="MCSPI_NPCS1" edc:ppsfunction="A" ltx:memberofperipheral="MCSPI"/>
      <edc:VirtualPin edc:name="MCSPI_MOSI2" edc:ppsfunction="B" ltx:memberofperipheral="MCSPI"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD10" edc:ppsfunction="default" ltx:memberofperipheral="PIO1"/>
      <edc:VirtualPin edc:name="MCSPI_NPCS2" edc:ppsfunction="A" ltx:memberofperipheral="MCSPI"/>
      <edc:VirtualPin edc:name="MCSPI_MOSI3" edc:ppsfunction="B" ltx:memberofperipheral="MCSPI"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD11" edc:ppsfunction="default" ltx:memberofperipheral="PIO1"/>
      <edc:VirtualPin edc:name="MCSPI_NPCS3" edc:ppsfunction="A" ltx:memberofperipheral="MCSPI"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD12" edc:ppsfunction="default" ltx:memberofperipheral="PIO1"/>
      <edc:VirtualPin edc:name="URXD" edc:ppsfunction="A" ltx:memberofperipheral="UART"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD13" edc:ppsfunction="default" ltx:memberofperipheral="PIO1"/>
      <edc:VirtualPin edc:name="UTXD" edc:ppsfunction="A" ltx:memberofperipheral="UART"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD14" edc:ppsfunction="default" ltx:memberofperipheral="PIO1"/>
      <edc:VirtualPin edc:name="TIOA10" edc:ppsfunction="A" ltx:memberofperipheral="TC3"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD15" edc:ppsfunction="default" ltx:memberofperipheral="PIO1"/>
      <edc:VirtualPin edc:name="TIOB10" edc:ppsfunction="A" ltx:memberofperipheral="TC3"/>
      <edc:VirtualPin edc:name="PWMH1" edc:ppsfunction="B" ltx:memberofperipheral="PWM"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD16" edc:ppsfunction="default" ltx:memberofperipheral="PIO1"/>
      <edc:VirtualPin edc:name="TCLK10" edc:ppsfunction="A" ltx:memberofperipheral="TC3"/>
      <edc:VirtualPin edc:name="PWMH2" edc:ppsfunction="B" ltx:memberofperipheral="PWM"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD17" edc:ppsfunction="default" ltx:memberofperipheral="PIO1"/>
      <edc:VirtualPin edc:name="PWML0" edc:ppsfunction="A" ltx:memberofperipheral="PWM"/>
      <edc:VirtualPin edc:name="TIOA11" edc:ppsfunction="C" ltx:memberofperipheral="TC3"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD18" edc:ppsfunction="default" ltx:memberofperipheral="PIO1"/>
      <edc:VirtualPin edc:name="PWML1" edc:ppsfunction="A" ltx:memberofperipheral="PWM"/>
      <edc:VirtualPin edc:name="TIOB11" edc:ppsfunction="C" ltx:memberofperipheral="TC3"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD19" edc:ppsfunction="default" ltx:memberofperipheral="PIO1"/>
      <edc:VirtualPin edc:name="PWML2" edc:ppsfunction="A" ltx:memberofperipheral="PWM"/>
      <edc:VirtualPin edc:name="TCLK11" edc:ppsfunction="C" ltx:memberofperipheral="TC3"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="NRST"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="FWUP"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="JTAGSEL"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="SHDN"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="TST"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="RTCOUT0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="WKUP0_TMP0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="WKUP1_TMP1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="WKUP2_TMP2"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="XOUT32"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="XIN32"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VDD3V3"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VBAT"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VDD3V3"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VDD3V3"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VDD3V3"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VDD3V3"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VDDCORE"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VDDCORE"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VDDCORE"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VDDCORE"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VDDPLL"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VDDOUT"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VDD3V3"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VREFP"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VDDLCD"/>
    </edc:Pin>
  </edc:PinList>
</edc:PIC>
